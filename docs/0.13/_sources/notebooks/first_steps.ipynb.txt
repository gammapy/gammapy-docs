{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<div class=\"alert alert-info\">\n",
    "\n",
    "**This is a fixed-text formatted version of a Jupyter notebook**\n",
    "\n",
    "- Try online [![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy-webpage/v0.13?urlpath=lab/tree/first_steps.ipynb)\n",
    "- You can contribute with your own notebooks in this\n",
    "[GitHub repository](https://github.com/gammapy/gammapy/tree/master/tutorials).\n",
    "- **Source files:**\n",
    "[first_steps.ipynb](../_static/notebooks/first_steps.ipynb) |\n",
    "[first_steps.py](../_static/notebooks/first_steps.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Getting started with Gammapy\n",
    "\n",
    "## Introduction\n",
    "\n",
    "This is a getting started tutorial for [Gammapy](https://docs.gammapy.org/).\n",
    "\n",
    "In this tutorial we will use the [Second Fermi-LAT Catalog of High-Energy Sources (3FHL) catalog](http://fermi.gsfc.nasa.gov/ssc/data/access/lat/3FHL/), corresponding event list and images to learn how to work with some of the central Gammapy data structures.\n",
    "\n",
    "We will cover the following topics:\n",
    "\n",
    "* **Sky maps**\n",
    "  * We will learn how to handle image based data with gammapy using a Fermi-LAT 3FHL example image. We will work with the following classes:\n",
    "    - [gammapy.maps.WcsNDMap](..\/api/gammapy.maps.WcsNDMap.rst)\n",
    "    - [astropy.coordinates.SkyCoord](http://astropy.readthedocs.io/en/latest/coordinates/index.html)\n",
    "    - [numpy.ndarray](https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html)\n",
    "\n",
    "* **Event lists**\n",
    "  * We will learn how to handle event lists with Gammapy. Important for this are the following classes: \n",
    "    - [gammapy.data.EventList](..\/api/gammapy.data.EventList.rst)\n",
    "    - [astropy.table.Table](http://docs.astropy.org/en/stable/api/astropy.table.Table.html#astropy.table.Table)\n",
    "\n",
    "* **Source catalogs**\n",
    "  * We will show how to load source catalogs with Gammapy and explore the data using the following classes:\n",
    "    - [gammapy.catalog.SourceCatalog](..\/api/gammapy.catalog.SourceCatalog.rst), specifically [gammapy.catalog.SourceCatalog3FHL](..\/api/gammapy.catalog.SourceCatalog3FHL.rst)\n",
    "    - [astropy.table.Table](http://docs.astropy.org/en/stable/api/astropy.table.Table.html#astropy.table.Table)\n",
    "\n",
    "* **Spectral models and flux points**\n",
    "  * We will pick an example source and show how to plot its spectral model and flux points. For this we will use the following classes:\n",
    "    - [gammapy.spectrum.SpectralModel](..\/api/gammapy.spectrum.models.SpectralModel.rst), specifically the [PowerLaw2](..\/api/gammapy.spectrum.models.PowerLaw2.rst) model.\n",
    "    - [gammapy.spectrum.FluxPoints](..\/api/gammapy.spectrum.FluxPoints.rst#gammapy.spectrum.FluxPoints)\n",
    "    - [astropy.table.Table](http://docs.astropy.org/en/stable/api/astropy.table.Table.html#astropy.table.Table)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Setup\n",
    "\n",
    "**Important**: to run this tutorial the environment variable `GAMMAPY_DATA` must be defined and point to the directory on your machine where the datasets needed are placed. To check whether your setup is correct you can execute the following cell:\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Great your setup is correct!\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "\n",
    "path = os.path.expandvars(\"$GAMMAPY_DATA\")\n",
    "\n",
    "if not os.path.exists(path):\n",
    "    raise Exception(\"gammapy-data repository not found!\")\n",
    "else:\n",
    "    print(\"Great your setup is correct!\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In case you encounter an error, you can un-comment and execute the following cell to continue. But we recommend to set up your enviroment correctly as decribed [here](..\/getting-started.rst#download-tutorials) after you are done with this notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# os.environ['GAMMAPY_DATA'] = os.path.join(os.getcwd(), '..')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we can continue with the usual IPython notebooks and Python imports:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import astropy.units as u\n",
    "from astropy.coordinates import SkyCoord"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Maps\n",
    "\n",
    "The [gammapy.maps](https://docs.gammapy.org/dev/maps) package contains classes to work with sky images and cubes.\n",
    "\n",
    "In this section, we will use a simple 2D sky image and will learn how to:\n",
    "\n",
    "* Read sky images from FITS files\n",
    "* Smooth images\n",
    "* Plot images\n",
    "* Cutout parts from images\n",
    "* Reproject images to different WCS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "from gammapy.maps import Map\n",
    "\n",
    "gc_3fhl = Map.read(\"$GAMMAPY_DATA/fermi-3fhl-gc/fermi-3fhl-gc-counts.fits.gz\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The image is a ``WCSNDMap`` object:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "WcsNDMap\n",
       "\n",
       "\tgeom  : WcsGeom \n",
       " \taxes  : lon, lat\n",
       "\tshape : (400, 200)\n",
       "\tndim  : 2\n",
       "\tunit  : '' \n",
       "\tdtype : >i8 "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gc_3fhl"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The shape of the image is 400 x 200 pixel and it is defined using a cartesian projection in galactic coordinates.\n",
    "\n",
    "The ``geom`` attribute is a ``WcsGeom`` object:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "WcsGeom\n",
       "\n",
       "\taxes       : lon, lat\n",
       "\tshape      : (400, 200)\n",
       "\tndim       : 2\n",
       "\tcoordsys   : GAL\n",
       "\tprojection : CAR\n",
       "\tcenter     : 0.0 deg, 0.0 deg\n",
       "\twidth      : 20.0 deg x 10.0 deg"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gc_3fhl.geom"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's take a closer look a the `.data` attribute:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0, 0, 0, ..., 0, 0, 0],\n",
       "       [0, 0, 0, ..., 0, 0, 0],\n",
       "       [0, 0, 0, ..., 0, 0, 0],\n",
       "       ...,\n",
       "       [0, 0, 0, ..., 0, 0, 1],\n",
       "       [0, 0, 0, ..., 0, 0, 0],\n",
       "       [0, 0, 0, ..., 0, 0, 1]])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gc_3fhl.data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "That looks familiar! It just an *ordinary* 2 dimensional numpy array,  which means you can apply any known numpy method to it:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total number of counts in the image: 32684\n"
     ]
    }
   ],
   "source": [
    "print(\"Total number of counts in the image: {:.0f}\".format(gc_3fhl.data.sum()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To show the image on the screen we can use the ``plot`` method. It basically calls [plt.imshow](http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.imshow), passing the `gc_3fhl.data` attribute but in addition handles axis with world coordinates using [wcsaxes](https://wcsaxes.readthedocs.io/en/latest/) and defines some defaults for nicer plots (e.g. the colormap 'afmhot'):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "gc_3fhl.plot(stretch=\"sqrt\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To make the structures in the image more visible we will smooth the data using a Gausian kernel with a radius of 0.5 deg. Again `smooth()` is a wrapper around existing functionality from the scientific Python libraries. In this case it is Scipy's [gaussian_filter](https://docs.scipy.org/doc/scipy-0.16.1/reference/generated/scipy.ndimage.filters.gaussian_filter.html) method. For convenience the kernel shape can be specified with as string and the smoothing radius with a quantity. It returns again a map object, that we can plot directly the same way we did above:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "gc_3fhl_smoothed = gc_3fhl.smooth(kernel=\"gauss\", width=0.2 * u.deg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "gc_3fhl_smoothed.plot(stretch=\"sqrt\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The smoothed plot already looks much nicer, but still the image is rather large. As we are mostly interested in the inner part of the image, we will cut out a quadratic region of the size 9 deg x 9 deg around Vela. Therefore we use ``Map.cutout`` to make a cutout map:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# define center and size of the cutout region\n",
    "center = SkyCoord(0, 0, unit=\"deg\", frame=\"galactic\")\n",
    "gc_3fhl_cutout = gc_3fhl_smoothed.cutout(center, 9 * u.deg)\n",
    "gc_3fhl_cutout.plot(stretch=\"sqrt\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For a more detailed introdcution to `ganmmapy.maps`, take a look a the [intro_maps.ipynb](intro_maps.ipynb) notebook.\n",
    "\n",
    "### Exercises\n",
    "\n",
    "* Add a marker and circle at the position of `Sag A*` (you can find examples in the WCSAxes [documentation](https://wcsaxes.readthedocs.io/en/latest/overlays.html))."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Event lists\n",
    "\n",
    "Almost any high-level gamma-ray data analysis starts with the raw measured counts data, which is stored in event lists. In Gammapy event lists are represented by the [gammapy.data.EventList](..\/api/gammapy.data.EventList.rst) class. \n",
    "\n",
    "In this section we will learn how to:\n",
    "\n",
    "* Read event lists from FITS files\n",
    "* Access and work with the `EventList` attributes such as `.table` and `.energy` \n",
    "* Filter events lists using convenience methods\n",
    "\n",
    "Let's start with the import from the [gammapy.data](..\/data/index.rst) submodule:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "from gammapy.data import EventList"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Very similar to the sky map class an event list can be created, by passing a filename to the `.read()` method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "events_3fhl = EventList.read(\n",
    "    \"$GAMMAPY_DATA/fermi-3fhl-gc/fermi-3fhl-gc-events.fits.gz\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This time the actual data is stored as an [astropy.table.Table](http://docs.astropy.org/en/stable/api/astropy.table.Table.html#astropy.table.Table) object. It can be accessed with `.table` attribute: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table length=32843</i>\n",
       "<table id=\"table4757748536\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>ENERGY</th><th>RA</th><th>DEC</th><th>L</th><th>B</th><th>THETA</th><th>PHI</th><th>ZENITH_ANGLE</th><th>EARTH_AZIMUTH_ANGLE</th><th>TIME</th><th>EVENT_ID</th><th>RUN_ID</th><th>RECON_VERSION</th><th>CALIB_VERSION [3]</th><th>EVENT_CLASS [32]</th><th>EVENT_TYPE [32]</th><th>CONVERSION_TYPE</th><th>LIVETIME</th><th>DIFRSP0</th><th>DIFRSP1</th><th>DIFRSP2</th><th>DIFRSP3</th><th>DIFRSP4</th></tr></thead>\n",
       "<thead><tr><th>MeV</th><th>deg</th><th>deg</th><th>deg</th><th>deg</th><th>deg</th><th>deg</th><th>deg</th><th>deg</th><th>s</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th>s</th><th></th><th></th><th></th><th></th><th></th></tr></thead>\n",
       "<thead><tr><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float64</th><th>int32</th><th>int32</th><th>int16</th><th>int16</th><th>bool</th><th>bool</th><th>int16</th><th>float64</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th></tr></thead>\n",
       "<tr><td>12186.642</td><td>260.45935</td><td>-33.553337</td><td>353.36273</td><td>1.7538676</td><td>71.977325</td><td>125.50694</td><td>59.22307</td><td>231.79672</td><td>239572401.29222104</td><td>1823040</td><td>239571670</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>238.57837238907814</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>25496.598</td><td>261.37506</td><td>-34.395004</td><td>353.09607</td><td>0.6520652</td><td>42.49406</td><td>278.49347</td><td>41.092773</td><td>227.89838</td><td>239577842.16217342</td><td>550833</td><td>239577663</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. False</td><td>1</td><td>176.16850754618645</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>15621.498</td><td>259.56973</td><td>-33.409416</td><td>353.05673</td><td>2.4450684</td><td>64.32412</td><td>234.22194</td><td>66.526794</td><td>232.75734</td><td>239578244.7997108</td><td>1353175</td><td>239577663</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. False</td><td>1</td><td>9.392075657844543</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>12816.32</td><td>273.95883</td><td>-25.340391</td><td>6.45856</td><td>-4.0548873</td><td>43.292503</td><td>142.87392</td><td>13.232716</td><td>108.02273</td><td>239605914.66160735</td><td>9636241</td><td>239601276</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. False</td><td>1</td><td>4.034786552190781</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>18988.387</td><td>260.8568</td><td>-36.355804</td><td>351.23734</td><td>-0.101912394</td><td>26.916113</td><td>290.39337</td><td>23.8726</td><td>212.91147</td><td>239611913.14460415</td><td>11233188</td><td>239606871</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>131.60132896900177</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>11610.23</td><td>266.15518</td><td>-26.224436</td><td>2.1986027</td><td>1.6034819</td><td>35.77363</td><td>274.53387</td><td>23.537594</td><td>232.64166</td><td>239623554.55414733</td><td>14156811</td><td>239618329</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. False</td><td>1</td><td>74.98110938072205</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>13960.802</td><td>271.44742</td><td>-29.615316</td><td>1.6267247</td><td>-4.1431155</td><td>25.917883</td><td>238.0368</td><td>15.037035</td><td>123.32094</td><td>239634549.1748726</td><td>14140569</td><td>239629788</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. False</td><td>1</td><td>106.37336817383766</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>10477.372</td><td>266.3981</td><td>-28.96814</td><td>359.97003</td><td>-0.011748177</td><td>39.091587</td><td>275.5457</td><td>33.02354</td><td>229.59308</td><td>239635161.87982982</td><td>15688393</td><td>239629788</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>214.62817406654358</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>13030.88</td><td>271.70428</td><td>-20.632627</td><td>9.59348</td><td>0.026241468</td><td>52.622505</td><td>161.3205</td><td>39.350845</td><td>91.9986</td><td>239639873.2076075</td><td>1736482</td><td>239639436</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>94.68753063678741</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td></tr>\n",
       "<tr><td>387834.72</td><td>270.3779</td><td>-21.56711</td><td>8.171749</td><td>0.64531475</td><td>56.755512</td><td>221.84715</td><td>24.358454</td><td>86.67913</td><td>460185260.7970139</td><td>7595626</td><td>460181260</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>34.214694023132324</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>20559.74</td><td>268.5538</td><td>-26.345692</td><td>3.200638</td><td>-0.30328986</td><td>49.523575</td><td>233.67285</td><td>12.370642</td><td>250.35716</td><td>460185803.2027966</td><td>8785590</td><td>460181260</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>103.17629969120026</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>27209.146</td><td>266.59344</td><td>-30.52607</td><td>358.72775</td><td>-0.96718174</td><td>62.1856</td><td>140.27434</td><td>32.686306</td><td>109.74662</td><td>460190778.6372646</td><td>7274453</td><td>460186976</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>43.22334712743759</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>13911.061</td><td>269.30997</td><td>-27.239439</td><td>2.7684028</td><td>-1.3365301</td><td>65.15399</td><td>224.52101</td><td>53.017742</td><td>242.62904</td><td>460197889.2652691</td><td>12049887</td><td>460192198</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>95.46356403827667</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>13226.425</td><td>265.16287</td><td>-27.344238</td><td>0.7796942</td><td>1.7680178</td><td>59.38332</td><td>126.7019</td><td>32.12299</td><td>246.97205</td><td>460203215.10816145</td><td>11716888</td><td>460198235</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. False</td><td>1</td><td>3.733097553253174</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>17445.463</td><td>266.63342</td><td>-28.807201</td><td>0.21464892</td><td>-0.1039705</td><td>55.48627</td><td>135.59155</td><td>14.227151</td><td>106.7812</td><td>460225372.9842249</td><td>1679082</td><td>460224933</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. False</td><td>1</td><td>80.52235281467438</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>13133.864</td><td>270.42474</td><td>-22.651058</td><td>7.251185</td><td>0.071358204</td><td>48.704975</td><td>134.73102</td><td>2.489122</td><td>294.48605</td><td>460225688.52486295</td><td>2879335</td><td>460224933</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. False</td><td>1</td><td>117.88173341751099</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>32095.705</td><td>266.0002</td><td>-29.77206</td><td>359.1034</td><td>-0.13615231</td><td>45.013103</td><td>236.72498</td><td>6.92107</td><td>212.86594</td><td>460231367.1387127</td><td>1113706</td><td>460231084</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>108.92976492643356</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>18465.783</td><td>266.39728</td><td>-29.105953</td><td>359.85202</td><td>-0.08294058</td><td>55.97552</td><td>135.87787</td><td>18.909636</td><td>112.137924</td><td>459939497.057684</td><td>7689831</td><td>459935572</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>70.72638684511185</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "<tr><td>14457.25</td><td>262.72217</td><td>-34.388405</td><td>353.7184</td><td>-0.26906812</td><td>45.683174</td><td>237.74162</td><td>25.728264</td><td>240.87035</td><td>459945845.4798405</td><td>10049680</td><td>459941302</td><td>0</td><td>0 .. 0</td><td>False .. True</td><td>False .. True</td><td>0</td><td>147.4274787902832</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table length=32843>\n",
       "  ENERGY      RA       DEC         L      ... DIFRSP1 DIFRSP2 DIFRSP3 DIFRSP4\n",
       "   MeV       deg       deg        deg     ...                                \n",
       " float32   float32   float32    float32   ... float32 float32 float32 float32\n",
       "--------- --------- ---------- ---------- ... ------- ------- ------- -------\n",
       "12186.642 260.45935 -33.553337  353.36273 ...     0.0     0.0     0.0     0.0\n",
       "25496.598 261.37506 -34.395004  353.09607 ...     0.0     0.0     0.0     0.0\n",
       "15621.498 259.56973 -33.409416  353.05673 ...     0.0     0.0     0.0     0.0\n",
       " 12816.32 273.95883 -25.340391    6.45856 ...     0.0     0.0     0.0     0.0\n",
       "18988.387  260.8568 -36.355804  351.23734 ...     0.0     0.0     0.0     0.0\n",
       " 11610.23 266.15518 -26.224436  2.1986027 ...     0.0     0.0     0.0     0.0\n",
       "13960.802 271.44742 -29.615316  1.6267247 ...     0.0     0.0     0.0     0.0\n",
       "10477.372  266.3981  -28.96814  359.97003 ...     0.0     0.0     0.0     0.0\n",
       " 13030.88 271.70428 -20.632627    9.59348 ...     0.0     0.0     0.0     0.0\n",
       "      ...       ...        ...        ... ...     ...     ...     ...     ...\n",
       "387834.72  270.3779  -21.56711   8.171749 ...     0.0     0.0     0.0     0.0\n",
       " 20559.74  268.5538 -26.345692   3.200638 ...     0.0     0.0     0.0     0.0\n",
       "27209.146 266.59344  -30.52607  358.72775 ...     0.0     0.0     0.0     0.0\n",
       "13911.061 269.30997 -27.239439  2.7684028 ...     0.0     0.0     0.0     0.0\n",
       "13226.425 265.16287 -27.344238  0.7796942 ...     0.0     0.0     0.0     0.0\n",
       "17445.463 266.63342 -28.807201 0.21464892 ...     0.0     0.0     0.0     0.0\n",
       "13133.864 270.42474 -22.651058   7.251185 ...     0.0     0.0     0.0     0.0\n",
       "32095.705  266.0002  -29.77206   359.1034 ...     0.0     0.0     0.0     0.0\n",
       "18465.783 266.39728 -29.105953  359.85202 ...     0.0     0.0     0.0     0.0\n",
       " 14457.25 262.72217 -34.388405   353.7184 ...     0.0     0.0     0.0     0.0"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events_3fhl.table"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can do *len* over event_3fhl.table to find the total number of events."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total number of events: 32843\n"
     ]
    }
   ],
   "source": [
    "print(\"Total number of events: {}\".format(len(events_3fhl.table)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And we can access any other attribute of the `Table` object as well:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['ENERGY',\n",
       " 'RA',\n",
       " 'DEC',\n",
       " 'L',\n",
       " 'B',\n",
       " 'THETA',\n",
       " 'PHI',\n",
       " 'ZENITH_ANGLE',\n",
       " 'EARTH_AZIMUTH_ANGLE',\n",
       " 'TIME',\n",
       " 'EVENT_ID',\n",
       " 'RUN_ID',\n",
       " 'RECON_VERSION',\n",
       " 'CALIB_VERSION',\n",
       " 'EVENT_CLASS',\n",
       " 'EVENT_TYPE',\n",
       " 'CONVERSION_TYPE',\n",
       " 'LIVETIME',\n",
       " 'DIFRSP0',\n",
       " 'DIFRSP1',\n",
       " 'DIFRSP2',\n",
       " 'DIFRSP3',\n",
       " 'DIFRSP4']"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events_3fhl.table.colnames"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For convenience we can access the most important event parameters as properties on the `EventList` objects. The attributes will return corresponding Astropy objects to represent the data, such as [astropy.units.Quantity](http://docs.astropy.org/en/stable/api/astropy.units.Quantity.html#astropy.units.Quantity), [astropy.coordinates.SkyCoord](http://docs.astropy.org/en/stable/api/astropy.coordinates.SkyCoord.html) or [astropy.time.Time](http://docs.astropy.org/en/stable/api/astropy.time.Time.html#astropy.time.Time) objects:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$[12.186643,~25.496599,~15.621499,~\\dots,~32.095707,~18.465784,~14.457251] \\; \\mathrm{GeV}$$"
      ],
      "text/plain": [
       "<Quantity [12.186643, 25.4966  , 15.621499, ..., 32.095707, 18.465784,\n",
       "           14.457251] GeV>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events_3fhl.energy.to(\"GeV\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<SkyCoord (Galactic): (l, b) in deg\n",
       "    [(353.36228879,  1.75408483), (353.09562941,  0.6522806 ),\n",
       "     (353.05628243,  2.44528685), ..., (359.10295505, -0.1359316 ),\n",
       "     (359.85157506, -0.08269984), (353.71795506, -0.26883694)]>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events_3fhl.galactic\n",
    "# events_3fhl.radec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Time object: scale='tt' format='mjd' value=[54682.82946153 54682.89243456 54682.89709472 ... 57236.75267735\n",
       " 57233.37455141 57233.44802852]>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events_3fhl.time"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition `EventList` provides convenience methods to filter the event lists. One possible use case is to find the highest energy event within a radius of 0.5 deg around the vela position:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$1917.8592 \\; \\mathrm{GeV}$$"
      ],
      "text/plain": [
       "<Quantity 1917.85925 GeV>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# select all events within a radius of 0.5 deg around center\n",
    "from gammapy.utils.regions import SphericalCircleSkyRegion\n",
    "\n",
    "region = SphericalCircleSkyRegion(center, radius=0.5 * u.deg)\n",
    "events_gc_3fhl = events_3fhl.select_region(region)\n",
    "\n",
    "# sort events by energy\n",
    "events_gc_3fhl.table.sort(\"ENERGY\")\n",
    "\n",
    "# and show highest energy photon\n",
    "events_gc_3fhl.energy[-1].to(\"GeV\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercises\n",
    "\n",
    "* Make a counts energy spectrum for the galactic center region, within a radius of 10 deg."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Source catalogs\n",
    "\n",
    "Gammapy provides a convenient interface to access and work with catalog based data. \n",
    "\n",
    "In this section we will learn how to:\n",
    "\n",
    "* Load builtins catalogs from [gammapy.catalog](..\/catalog/index.rst)\n",
    "* Sort and index the underlying Astropy tables\n",
    "* Access data from individual sources\n",
    "\n",
    "Let's start with importing the 3FHL catalog object from the [gammapy.catalog](..\/catalog/index.rst) submodule:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "from gammapy.catalog import SourceCatalog3FHL"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First we initialize the Fermi-LAT 3FHL catalog and directly take a look at the `.table` attribute:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table masked=True length=1556</i>\n",
       "<table id=\"table4419882736\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>Source_Name</th><th>RAJ2000</th><th>DEJ2000</th><th>GLON</th><th>GLAT</th><th>Conf_95_SemiMajor</th><th>Conf_95_SemiMinor</th><th>Conf_95_PosAng</th><th>ROI_num</th><th>Signif_Avg</th><th>Pivot_Energy</th><th>Flux_Density</th><th>Unc_Flux_Density</th><th>Flux</th><th>Unc_Flux</th><th>Energy_Flux</th><th>Unc_Energy_Flux</th><th>Signif_Curve</th><th>SpectrumType</th><th>Spectral_Index</th><th>Unc_Spectral_Index</th><th>beta</th><th>Unc_beta</th><th>PowerLaw_Index</th><th>Unc_PowerLaw_Index</th><th>Flux_Band [5]</th><th>Unc_Flux_Band [5,2]</th><th>nuFnu [5]</th><th>Sqrt_TS_Band [5]</th><th>Npred</th><th>HEP_Energy</th><th>HEP_Prob</th><th>Variability_BayesBlocks</th><th>Extended_Source_Name</th><th>ASSOC_GAM</th><th>TEVCAT_FLAG</th><th>ASSOC_TEV</th><th>CLASS</th><th>ASSOC1</th><th>ASSOC2</th><th>ASSOC_PROB_BAY</th><th>ASSOC_PROB_LR</th><th>Redshift</th><th>NuPeak_obs</th></tr></thead>\n",
       "<thead><tr><th></th><th>deg</th><th>deg</th><th>deg</th><th>deg</th><th>deg</th><th>deg</th><th>deg</th><th></th><th></th><th>GeV</th><th>1 / (cm2 GeV s)</th><th>1 / (cm2 GeV s)</th><th>1 / (cm2 s)</th><th>1 / (cm2 s)</th><th>erg / (cm2 s)</th><th>erg / (cm2 s)</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th>1 / (cm2 s)</th><th>1 / (cm2 s)</th><th>erg / (cm2 s)</th><th></th><th></th><th>GeV</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th>Hz</th></tr></thead>\n",
       "<thead><tr><th>bytes18</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>int16</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>bytes11</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>int16</th><th>bytes18</th><th>bytes18</th><th>bytes1</th><th>bytes21</th><th>bytes7</th><th>bytes26</th><th>bytes26</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th></tr></thead>\n",
       "<tr><td>3FHL J0001.2-0748</td><td>0.3107</td><td>-7.8075</td><td>89.0094</td><td>-67.3118</td><td>0.0424</td><td>0.0424</td><td>nan</td><td>64</td><td>5.362</td><td>23.73</td><td>5.3174e-13</td><td>2.0975e-13</td><td>2.9593e-11</td><td>1.1704e-11</td><td>1.6752e-12</td><td>1.0743e-12</td><td>1.02</td><td>PowerLaw</td><td>1.6724</td><td>0.8274</td><td>0.5916</td><td>0.7129</td><td>2.2226</td><td>0.4808</td><td>1.1127661e-11 .. 1.1422301e-22</td><td>-6.0763976e-12 .. 6.529277e-12</td><td>3.533989e-13 .. 1.1789072e-22</td><td>3.1458344 .. 0.0</td><td>7.63</td><td>86.975</td><td>0.9964</td><td>1</td><td></td><td>3FGL J0001.2-0748</td><td>N</td><td></td><td>bll</td><td>PMN J0001-0746</td><td></td><td>0.9974</td><td>0.9721</td><td>nan</td><td>306196370000000.0</td></tr>\n",
       "<tr><td>3FHL J0001.9-4155</td><td>0.4849</td><td>-41.9303</td><td>334.1216</td><td>-72.0697</td><td>0.1018</td><td>0.1018</td><td>nan</td><td>429</td><td>5.638</td><td>28.42</td><td>5.4253e-13</td><td>1.6839e-13</td><td>4.3230e-11</td><td>1.3428e-11</td><td>3.4900e-12</td><td>1.8276e-12</td><td>0.45</td><td>PowerLaw</td><td>1.7819</td><td>0.4941</td><td>0.1187</td><td>0.2798</td><td>1.9418</td><td>0.3100</td><td>2.1003905e-11 .. 1.9287885e-18</td><td>-8.032091e-12 .. 5.8594097e-12</td><td>6.7452245e-13 .. 2.078675e-18</td><td>4.899907 .. 0.0</td><td>12.51</td><td>266.625</td><td>0.9622</td><td>1</td><td></td><td>3FGL J0002.2-4152</td><td>N</td><td></td><td>bcu</td><td>1RXS J000135.5-415519</td><td></td><td>0.9960</td><td>0.0000</td><td>nan</td><td>6309576500000000.0</td></tr>\n",
       "<tr><td>3FHL J0002.1-6728</td><td>0.5283</td><td>-67.4825</td><td>310.0868</td><td>-48.9549</td><td>0.0357</td><td>0.0357</td><td>nan</td><td>386</td><td>8.470</td><td>20.82</td><td>1.2062e-12</td><td>3.2106e-13</td><td>5.0093e-11</td><td>1.3349e-11</td><td>2.3058e-12</td><td>9.5580e-13</td><td>1.53</td><td>PowerLaw</td><td>1.8109</td><td>0.6260</td><td>0.7933</td><td>0.5956</td><td>2.4285</td><td>0.3710</td><td>2.4550664e-11 .. 1.9009976e-21</td><td>-8.634195e-12 .. 4.8021903e-12</td><td>7.7340695e-13 .. 1.9026535e-21</td><td>5.900217 .. 0.0</td><td>17.11</td><td>52.152</td><td>0.9988</td><td>1</td><td></td><td>3FGL J0002.0-6722</td><td>N</td><td></td><td>bcu</td><td>SUMSS J000215-672653</td><td></td><td>0.0000</td><td>0.9395</td><td>nan</td><td>4466832000000000.0</td></tr>\n",
       "<tr><td>3FHL J0003.3-5248</td><td>0.8300</td><td>-52.8150</td><td>318.9245</td><td>-62.7936</td><td>0.0425</td><td>0.0425</td><td>nan</td><td>145</td><td>7.229</td><td>23.66</td><td>7.5065e-13</td><td>2.3102e-13</td><td>4.1560e-11</td><td>1.2839e-11</td><td>2.2874e-12</td><td>1.1145e-12</td><td>1.70</td><td>PowerLaw</td><td>1.6010</td><td>0.5644</td><td>0.9972</td><td>0.1721</td><td>2.2481</td><td>0.3732</td><td>2.0886386e-11 .. 7.5867555e-23</td><td>-8.143967e-12 .. 5.31299e-12</td><td>6.6265456e-13 .. 7.800202e-23</td><td>5.298393 .. 0.0</td><td>13.02</td><td>67.310</td><td>0.9636</td><td>1</td><td></td><td>3FGL J0003.2-5246</td><td>N</td><td></td><td>bcu</td><td>RBS 0006</td><td></td><td>0.9996</td><td>0.9716</td><td>nan</td><td>7.079464e+16</td></tr>\n",
       "<tr><td>3FHL J0007.0+7303</td><td>1.7647</td><td>73.0560</td><td>119.6625</td><td>10.4666</td><td>0.0101</td><td>0.0101</td><td>nan</td><td>277</td><td>75.265</td><td>12.80</td><td>1.7436e-10</td><td>7.5950e-12</td><td>1.5308e-09</td><td>6.1341e-11</td><td>3.6785e-11</td><td>1.5973e-12</td><td>3.24</td><td>LogParabola</td><td>3.1751</td><td>0.2103</td><td>0.9021</td><td>0.2659</td><td>3.8315</td><td>0.1141</td><td>1.3514667e-09 .. 3.839895e-18</td><td>-5.7581186e-11 .. 4.060418e-12</td><td>4.109739e-11 .. 2.9231144e-18</td><td>71.33829 .. 0.0</td><td>654.15</td><td>60.292</td><td>0.9972</td><td>1</td><td></td><td>3FGL J0007.0+7302</td><td>E</td><td>CTA 1</td><td>PSR</td><td>LAT PSR J0007+7303</td><td></td><td>1.0000</td><td>0.0000</td><td>nan</td><td>nan</td></tr>\n",
       "<tr><td>3FHL J0007.9+4711</td><td>1.9931</td><td>47.1920</td><td>115.3093</td><td>-15.0354</td><td>0.0196</td><td>0.0196</td><td>nan</td><td>302</td><td>17.774</td><td>17.19</td><td>5.9778e-12</td><td>8.7683e-13</td><td>1.5131e-10</td><td>2.2181e-11</td><td>5.1444e-12</td><td>1.0540e-12</td><td>0.56</td><td>PowerLaw</td><td>2.6783</td><td>0.4196</td><td>0.1696</td><td>0.3282</td><td>2.8588</td><td>0.2685</td><td>1.0582407e-10 .. 1.9819723e-16</td><td>-1.7538379e-11 .. 4.823511e-12</td><td>3.278615e-12 .. 1.8668298e-16</td><td>15.209969 .. 0.0</td><td>50.95</td><td>68.152</td><td>0.9759</td><td>1</td><td></td><td>3FGL J0008.0+4713</td><td>N</td><td></td><td>bll</td><td>MG4 J000800+4712</td><td></td><td>1.0000</td><td>0.9873</td><td>0.2800</td><td>2511884200000000.0</td></tr>\n",
       "<tr><td>3FHL J0008.4-2339</td><td>2.1243</td><td>-23.6514</td><td>50.2908</td><td>-79.7021</td><td>0.0366</td><td>0.0366</td><td>nan</td><td>517</td><td>9.679</td><td>16.96</td><td>3.0610e-12</td><td>7.3475e-13</td><td>7.4602e-11</td><td>1.7896e-11</td><td>2.4733e-12</td><td>8.1716e-13</td><td>0.34</td><td>PowerLaw</td><td>2.7388</td><td>0.7145</td><td>0.1737</td><td>0.5618</td><td>2.9070</td><td>0.4520</td><td>5.804992e-11 .. 1.1117311e-20</td><td>-1.4419374e-11 .. 6.10661e-12</td><td>1.7951775e-12 .. 1.0403958e-20</td><td>9.133706 .. 0.0</td><td>19.83</td><td>71.122</td><td>0.9968</td><td>1</td><td></td><td>3FGL J0008.6-2340</td><td>N</td><td></td><td>bll</td><td>RBS 0016</td><td></td><td>0.9996</td><td>0.9673</td><td>0.1470</td><td>524807800000000.0</td></tr>\n",
       "<tr><td>3FHL J0009.1+0628</td><td>2.2874</td><td>6.4814</td><td>104.4637</td><td>-54.8669</td><td>0.0385</td><td>0.0385</td><td>nan</td><td>402</td><td>6.282</td><td>18.92</td><td>1.2691e-12</td><td>4.3696e-13</td><td>4.1597e-11</td><td>1.4317e-11</td><td>1.6903e-12</td><td>8.9372e-13</td><td>0.10</td><td>PowerLaw</td><td>2.5529</td><td>0.8363</td><td>0.0122</td><td>0.4477</td><td>2.5800</td><td>0.5391</td><td>2.4161059e-11 .. 6.6482124e-19</td><td>-9.546595e-12 .. 6.287476e-12</td><td>7.566492e-13 .. 6.5095056e-19</td><td>4.678369 .. 0.0</td><td>10.95</td><td>12.256</td><td>0.9721</td><td>1</td><td></td><td>3FGL J0009.1+0630</td><td>N</td><td></td><td>bll</td><td>CRATES J000903.95+062821.5</td><td></td><td>0.9993</td><td>0.9878</td><td>nan</td><td>663742400000000.0</td></tr>\n",
       "<tr><td>3FHL J0009.4+5030</td><td>2.3504</td><td>50.5049</td><td>116.1257</td><td>-11.8105</td><td>0.0176</td><td>0.0176</td><td>nan</td><td>302</td><td>22.402</td><td>17.04</td><td>9.8252e-12</td><td>1.3192e-12</td><td>2.2191e-10</td><td>2.6212e-11</td><td>8.7336e-12</td><td>1.2488e-12</td><td>3.15</td><td>LogParabola</td><td>1.4305</td><td>0.3505</td><td>0.7965</td><td>0.3072</td><td>2.3610</td><td>0.1611</td><td>1.16274e-10 .. 9.252794e-17</td><td>-1.8225135e-11 .. 4.417993e-12</td><td>3.8564165e-12 .. 7.0436765e-17</td><td>15.780677 .. 0.0</td><td>78.50</td><td>72.762</td><td>0.9950</td><td>2</td><td></td><td>3FGL J0009.3+5030</td><td>C</td><td></td><td>bll</td><td>NVSS J000922+503028</td><td></td><td>1.0000</td><td>0.9698</td><td>nan</td><td>1412536400000000.0</td></tr>\n",
       "<tr><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td></tr>\n",
       "<tr><td>3FHL J2347.9-1630</td><td>356.9978</td><td>-16.5106</td><td>65.5355</td><td>-71.8766</td><td>0.0288</td><td>0.0288</td><td>nan</td><td>450</td><td>9.297</td><td>16.28</td><td>3.1279e-12</td><td>8.0896e-13</td><td>6.7585e-11</td><td>1.7478e-11</td><td>2.0267e-12</td><td>6.5608e-13</td><td>0.07</td><td>PowerLaw</td><td>3.1259</td><td>0.7781</td><td>0.0104</td><td>0.5756</td><td>3.1324</td><td>0.5259</td><td>5.2519888e-11 .. 1.0747592e-20</td><td>-1.4230782e-11 .. 6.211813e-12</td><td>1.6103665e-12 .. 9.768252e-21</td><td>8.333468 .. 0.0</td><td>17.55</td><td>50.215</td><td>0.9869</td><td>3</td><td></td><td>3FGL J2348.0-1630</td><td>N</td><td></td><td>fsrq</td><td>PKS 2345-16</td><td></td><td>0.9994</td><td>0.9999</td><td>0.5760</td><td>9332549000000.0</td></tr>\n",
       "<tr><td>3FHL J2350.5-3006</td><td>357.6354</td><td>-30.1070</td><td>16.7759</td><td>-76.3194</td><td>0.0491</td><td>0.0491</td><td>nan</td><td>70</td><td>6.497</td><td>21.20</td><td>1.0879e-12</td><td>3.2997e-13</td><td>4.7039e-11</td><td>1.4274e-11</td><td>2.2909e-12</td><td>1.1390e-12</td><td>0.63</td><td>PowerLaw</td><td>2.1012</td><td>0.6173</td><td>0.2880</td><td>0.4870</td><td>2.3678</td><td>0.4234</td><td>2.1939225e-11 .. 4.5892933e-16</td><td>-8.926376e-12 .. 6.097474e-12</td><td>6.927891e-13 .. 4.63469e-16</td><td>4.0536985 .. 0.0</td><td>12.84</td><td>49.286</td><td>0.9644</td><td>1</td><td></td><td>3FGL J2350.4-3004</td><td>N</td><td></td><td>bll</td><td>NVSS J235034-300603</td><td></td><td>0.9998</td><td>0.9218</td><td>0.2237</td><td>3981075200000000.0</td></tr>\n",
       "<tr><td>3FHL J2351.5-7559</td><td>357.8926</td><td>-75.9890</td><td>307.6546</td><td>-40.5855</td><td>0.0650</td><td>0.0650</td><td>nan</td><td>55</td><td>6.067</td><td>26.82</td><td>4.9826e-13</td><td>1.6350e-13</td><td>3.5689e-11</td><td>1.1769e-11</td><td>2.3897e-12</td><td>1.2622e-12</td><td>0.61</td><td>PowerLaw</td><td>1.8474</td><td>0.5802</td><td>0.2003</td><td>0.3661</td><td>2.0816</td><td>0.3532</td><td>2.3730832e-11 .. 6.9375605e-17</td><td>-8.570627e-12 .. 4.7928705e-12</td><td>7.578736e-13 .. 7.316245e-17</td><td>5.2754674 .. 0.0</td><td>12.41</td><td>134.721</td><td>0.9892</td><td>1</td><td></td><td>3FGL J2351.9-7601</td><td>N</td><td></td><td>bll</td><td>SUMSS J235115-760012</td><td></td><td>0.0000</td><td>0.9625</td><td>nan</td><td>nan</td></tr>\n",
       "<tr><td>3FHL J2352.1+1753</td><td>358.0415</td><td>17.8865</td><td>103.5764</td><td>-42.7466</td><td>0.0838</td><td>0.0838</td><td>nan</td><td>185</td><td>4.117</td><td>16.97</td><td>9.9227e-13</td><td>4.3475e-13</td><td>2.4254e-11</td><td>1.0640e-11</td><td>7.6327e-13</td><td>4.2356e-13</td><td>0.02</td><td>PowerLaw</td><td>3.0175</td><td>1.2164</td><td>0.0100</td><td>0.8524</td><td>3.0166</td><td>0.8270</td><td>1.5997077e-11 .. 2.9107688e-20</td><td>-7.581037e-12 .. 5.821708e-12</td><td>4.926488e-13 .. 2.6849966e-20</td><td>3.5496242 .. 0.0</td><td>6.73</td><td>43.107</td><td>0.9668</td><td>1</td><td></td><td>3FGL J2352.0+1752</td><td>N</td><td></td><td>bll</td><td>CLASS J2352+1749</td><td></td><td>0.9926</td><td>0.0000</td><td>nan</td><td>1737799900000000.0</td></tr>\n",
       "<tr><td>3FHL J2356.2+4035</td><td>359.0746</td><td>40.5985</td><td>111.7521</td><td>-21.0732</td><td>0.0298</td><td>0.0298</td><td>nan</td><td>312</td><td>7.625</td><td>29.01</td><td>5.2427e-13</td><td>1.5104e-13</td><td>4.3400e-11</td><td>1.2511e-11</td><td>3.6677e-12</td><td>1.8547e-12</td><td>0.35</td><td>PowerLaw</td><td>2.0233</td><td>0.4242</td><td>-0.0706</td><td>0.1926</td><td>1.9095</td><td>0.2975</td><td>2.5777725e-11 .. 3.110794e-16</td><td>-8.514681e-12 .. 5.4134618e-12</td><td>8.2889175e-13 .. 3.3694582e-16</td><td>6.2127647 .. 0.0</td><td>13.81</td><td>417.861</td><td>0.9119</td><td>1</td><td></td><td>3FGL J2356.0+4037</td><td>N</td><td></td><td>bll</td><td>NVSS J235612+403648</td><td></td><td>0.9998</td><td>0.9199</td><td>0.1310</td><td>6309576500000000.0</td></tr>\n",
       "<tr><td>3FHL J2357.4-1717</td><td>359.3690</td><td>-17.2996</td><td>68.4009</td><td>-74.1285</td><td>0.0327</td><td>0.0327</td><td>nan</td><td>450</td><td>6.961</td><td>29.52</td><td>5.4394e-13</td><td>1.7370e-13</td><td>4.6654e-11</td><td>1.4945e-11</td><td>3.7598e-12</td><td>1.9583e-12</td><td>1.11</td><td>PowerLaw</td><td>1.5762</td><td>0.5187</td><td>0.3513</td><td>0.3771</td><td>1.9430</td><td>0.3116</td><td>1.9003682e-11 .. 2.714288e-20</td><td>-8.131149e-12 .. 6.4742196e-12</td><td>6.1025685e-13 .. 2.92465e-20</td><td>4.552822 .. 0.0</td><td>12.30</td><td>146.757</td><td>0.9838</td><td>1</td><td></td><td>3FGL J2357.4-1716</td><td>N</td><td></td><td>bll</td><td>RBS 2066</td><td></td><td>0.9999</td><td>0.9631</td><td>nan</td><td>8.912525e+16</td></tr>\n",
       "<tr><td>3FHL J2358.4-1808</td><td>359.6205</td><td>-18.1408</td><td>66.5520</td><td>-74.8501</td><td>0.0511</td><td>0.0511</td><td>nan</td><td>450</td><td>6.493</td><td>18.23</td><td>1.6335e-12</td><td>4.9686e-13</td><td>4.8680e-11</td><td>1.4811e-11</td><td>1.7825e-12</td><td>7.6480e-13</td><td>1.83</td><td>PowerLaw</td><td>2.0532</td><td>0.6673</td><td>0.9999</td><td>0.0134</td><td>2.7312</td><td>0.5024</td><td>2.6735683e-11 .. 6.0349635e-21</td><td>-9.960717e-12 .. 6.2551535e-12</td><td>8.323882e-13 .. 5.7844478e-21</td><td>4.3616037 .. 0.0</td><td>12.74</td><td>28.304</td><td>0.9845</td><td>1</td><td></td><td>3FGL J2358.6-1809</td><td>N</td><td></td><td></td><td></td><td></td><td>0.0000</td><td>0.0000</td><td>nan</td><td>nan</td></tr>\n",
       "<tr><td>3FHL J2358.5+3829</td><td>359.6266</td><td>38.4963</td><td>111.6905</td><td>-23.2173</td><td>0.0584</td><td>0.0584</td><td>nan</td><td>312</td><td>5.797</td><td>18.24</td><td>1.4104e-12</td><td>4.4534e-13</td><td>4.2106e-11</td><td>1.3321e-11</td><td>1.7404e-12</td><td>9.8271e-13</td><td>0.44</td><td>PowerLaw</td><td>2.7466</td><td>0.6917</td><td>-0.1329</td><td>0.3013</td><td>2.5576</td><td>0.5781</td><td>2.824428e-11 .. 9.750687e-17</td><td>-9.458818e-12 .. 5.2791343e-12</td><td>8.852925e-13 .. 9.5778846e-17</td><td>5.7128677 .. 0.0</td><td>13.13</td><td>57.301</td><td>0.9782</td><td>1</td><td></td><td>3FGL J2358.5+3827</td><td>N</td><td></td><td>bcu</td><td>B3 2355+382</td><td></td><td>0.0000</td><td>0.9254</td><td>nan</td><td>nan</td></tr>\n",
       "<tr><td>3FHL J2359.1-3038</td><td>359.7760</td><td>-30.6397</td><td>12.7909</td><td>-78.0268</td><td>0.0231</td><td>0.0231</td><td>nan</td><td>70</td><td>11.551</td><td>21.21</td><td>1.8903e-12</td><td>4.1965e-13</td><td>8.1774e-11</td><td>1.8149e-11</td><td>4.2849e-12</td><td>1.6806e-12</td><td>0.08</td><td>PowerLaw</td><td>2.2865</td><td>0.4632</td><td>0.0101</td><td>0.2434</td><td>2.2944</td><td>0.3092</td><td>5.5015617e-11 .. 6.037456e-17</td><td>-1.3604539e-11 .. 8.488618e-12</td><td>1.7422797e-12 .. 6.164239e-17</td><td>9.39347 .. 0.0</td><td>22.41</td><td>111.366</td><td>0.9607</td><td>1</td><td></td><td>3FGL J2359.3-3038</td><td>P</td><td>H 2356-309</td><td>bll</td><td>H 2356-309</td><td></td><td>0.9999</td><td>0.9975</td><td>0.1650</td><td>2.818388e+17</td></tr>\n",
       "<tr><td>3FHL J2359.3-2049</td><td>359.8293</td><td>-20.8256</td><td>58.0522</td><td>-76.5411</td><td>0.0722</td><td>0.0722</td><td>nan</td><td>580</td><td>4.638</td><td>19.02</td><td>9.1911e-13</td><td>3.6043e-13</td><td>3.0559e-11</td><td>1.1979e-11</td><td>1.2593e-12</td><td>7.4704e-13</td><td>0.32</td><td>PowerLaw</td><td>2.3402</td><td>0.9445</td><td>0.1851</td><td>0.6600</td><td>2.5615</td><td>0.5838</td><td>2.3253791e-11 .. 8.3778735e-21</td><td>-8.939083e-12 .. 6.2386546e-12</td><td>7.2875863e-13 .. 8.224765e-21</td><td>4.8207045 .. 0.0</td><td>8.06</td><td>64.177</td><td>0.9859</td><td>1</td><td></td><td>3FGL J2359.5-2052</td><td>N</td><td></td><td>bll</td><td>TXS 2356-210</td><td></td><td>0.9894</td><td>0.9906</td><td>0.0960</td><td>4073799600000000.0</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table masked=True length=1556>\n",
       "   Source_Name     RAJ2000  DEJ2000  ... Redshift     NuPeak_obs    \n",
       "                     deg      deg    ...                  Hz        \n",
       "     bytes18       float32  float32  ... float32       float32      \n",
       "------------------ -------- -------- ... -------- ------------------\n",
       "3FHL J0001.2-0748    0.3107  -7.8075 ...      nan  306196370000000.0\n",
       "3FHL J0001.9-4155    0.4849 -41.9303 ...      nan 6309576500000000.0\n",
       "3FHL J0002.1-6728    0.5283 -67.4825 ...      nan 4466832000000000.0\n",
       "3FHL J0003.3-5248    0.8300 -52.8150 ...      nan       7.079464e+16\n",
       "3FHL J0007.0+7303    1.7647  73.0560 ...      nan                nan\n",
       "3FHL J0007.9+4711    1.9931  47.1920 ...   0.2800 2511884200000000.0\n",
       "3FHL J0008.4-2339    2.1243 -23.6514 ...   0.1470  524807800000000.0\n",
       "3FHL J0009.1+0628    2.2874   6.4814 ...      nan  663742400000000.0\n",
       "3FHL J0009.4+5030    2.3504  50.5049 ...      nan 1412536400000000.0\n",
       "               ...      ...      ... ...      ...                ...\n",
       "3FHL J2347.9-1630  356.9978 -16.5106 ...   0.5760    9332549000000.0\n",
       "3FHL J2350.5-3006  357.6354 -30.1070 ...   0.2237 3981075200000000.0\n",
       "3FHL J2351.5-7559  357.8926 -75.9890 ...      nan                nan\n",
       "3FHL J2352.1+1753  358.0415  17.8865 ...      nan 1737799900000000.0\n",
       "3FHL J2356.2+4035  359.0746  40.5985 ...   0.1310 6309576500000000.0\n",
       "3FHL J2357.4-1717  359.3690 -17.2996 ...      nan       8.912525e+16\n",
       "3FHL J2358.4-1808  359.6205 -18.1408 ...      nan                nan\n",
       "3FHL J2358.5+3829  359.6266  38.4963 ...      nan                nan\n",
       "3FHL J2359.1-3038  359.7760 -30.6397 ...   0.1650       2.818388e+17\n",
       "3FHL J2359.3-2049  359.8293 -20.8256 ...   0.0960 4073799600000000.0"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fermi_3fhl = SourceCatalog3FHL()\n",
    "fermi_3fhl.table"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This looks very familiar again. The data is just stored as an [astropy.table.Table](http://docs.astropy.org/en/stable/api/astropy.table.Table.html#astropy.table.Table) object. We have all the methods and attributes of the `Table` object available. E.g. we can sort the underlying table by `Signif_Avg` to find the top 5 most significant sources:\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table masked=True length=5</i>\n",
       "<table id=\"table4756114848\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>Source_Name</th><th>ASSOC1</th><th>ASSOC2</th><th>CLASS</th><th>Signif_Avg</th></tr></thead>\n",
       "<thead><tr><th>bytes18</th><th>bytes26</th><th>bytes26</th><th>bytes7</th><th>float32</th></tr></thead>\n",
       "<tr><td>3FHL J0534.5+2201</td><td>Crab Nebula</td><td></td><td>PWN</td><td>168.641</td></tr>\n",
       "<tr><td>3FHL J1104.4+3812</td><td>Mkn 421</td><td></td><td>BLL</td><td>144.406</td></tr>\n",
       "<tr><td>3FHL J0835.3-4510</td><td>PSR J0835-4510</td><td>Vela X field</td><td>PSR</td><td>138.801</td></tr>\n",
       "<tr><td>3FHL J0633.9+1746</td><td>PSR J0633+1746</td><td></td><td>PSR</td><td>99.734</td></tr>\n",
       "<tr><td>3FHL J1555.7+1111</td><td>PG 1553+113</td><td></td><td>BLL</td><td>94.411</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table masked=True length=5>\n",
       "   Source_Name               ASSOC1           ...  CLASS  Signif_Avg\n",
       "     bytes18                bytes26           ...  bytes7  float32  \n",
       "------------------ -------------------------- ... ------- ----------\n",
       "3FHL J0534.5+2201  Crab Nebula                ... PWN        168.641\n",
       "3FHL J1104.4+3812  Mkn 421                    ... BLL        144.406\n",
       "3FHL J0835.3-4510  PSR J0835-4510             ... PSR        138.801\n",
       "3FHL J0633.9+1746  PSR J0633+1746             ... PSR         99.734\n",
       "3FHL J1555.7+1111  PG 1553+113                ... BLL         94.411"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# sort table by significance\n",
    "fermi_3fhl.table.sort(\"Signif_Avg\")\n",
    "\n",
    "# invert the order to find the highest values and take the top 5\n",
    "top_five_TS_3fhl = fermi_3fhl.table[::-1][:5]\n",
    "\n",
    "# print the top five significant sources with association and source class\n",
    "top_five_TS_3fhl[[\"Source_Name\", \"ASSOC1\", \"ASSOC2\", \"CLASS\", \"Signif_Avg\"]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If you are interested in the data of an individual source you can access the information from catalog using the name of the source or any alias source name that is defined in the catalog:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "144.40611\n"
     ]
    }
   ],
   "source": [
    "mkn_421_3fhl = fermi_3fhl[\"3FHL J1104.4+3812\"]\n",
    "\n",
    "# or use any alias source name that is defined in the catalog\n",
    "mkn_421_3fhl = fermi_3fhl[\"Mkn 421\"]\n",
    "print(mkn_421_3fhl.data[\"Signif_Avg\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercises\n",
    "\n",
    "* Try to load the Fermi-LAT 2FHL catalog and check the total number of sources it contains.\n",
    "* Select all the sources from the 2FHL catalog which are contained in the Galactic Center region. The methods [`WcsGeom.contains()`](..\/api/gammapy.maps.WcsGeom.rst#gammapy.maps.WcsGeom.contains) and [`SourceCatalog.positions`](..\/api/gammapy.catalog.SourceCatalog.rst#gammapy.catalog.SourceCatalog.positions) might be helpful for this. Add markers for all these sources and try to add labels with the source names. The function [ax.text()](http://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.text.html#matplotlib.axes.Axes.text) might be also helpful.\n",
    "* Try to find the source class of the object at position ra=68.6803, dec=9.3331\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Spectral models and flux points\n",
    "\n",
    "In the previous section we learned how access basic data from individual sources in the catalog. Now we will go one step further and explore the full spectral information of sources. We will learn how to:\n",
    "\n",
    "* Plot spectral models\n",
    "* Compute integral and energy fluxes\n",
    "* Read and plot flux points\n",
    "\n",
    "As a first example we will start with the Crab Nebula:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PowerLaw\n",
      "\n",
      "Parameters: \n",
      "\n",
      "\t   name     value     error        unit      min max frozen\n",
      "\t--------- --------- --------- -------------- --- --- ------\n",
      "\t    index 2.220e+00 2.498e-02                nan nan  False\n",
      "\tamplitude 1.713e-10 3.389e-12 cm-2 GeV-1 s-1 nan nan  False\n",
      "\treference 2.273e+01 0.000e+00            GeV nan nan   True\n",
      "\n",
      "Covariance: \n",
      "\n",
      "\t   name     index   amplitude reference\n",
      "\t--------- --------- --------- ---------\n",
      "\t    index 6.241e-04 0.000e+00 0.000e+00\n",
      "\tamplitude 0.000e+00 1.148e-23 0.000e+00\n",
      "\treference 0.000e+00 0.000e+00 0.000e+00\n"
     ]
    }
   ],
   "source": [
    "crab_3fhl = fermi_3fhl[\"Crab Nebula\"]\n",
    "print(crab_3fhl.spectral_model)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `crab_3fhl.spectral_model` is an instance of the [gammapy.spectrum.models.PowerLaw2](..\/api/gammapy.spectrum.models.PowerLaw2.rst#gammapy.spectrum.models.PowerLaw2) model, with the parameter values and errors taken from the 3FHL catalog. \n",
    "\n",
    "Let's plot the spectral model in the energy range between 10 GeV and 2000 GeV:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax_crab_3fhl = crab_3fhl.spectral_model.plot(\n",
    "    energy_range=[10, 2000] * u.GeV, energy_power=0\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We assign the return axes object to variable called `ax_crab_3fhl`, because we will re-use it later to plot the flux points on top.\n",
    "\n",
    "To compute the differential flux at 100 GeV we can simply call the model like normal Python function and convert to the desired units:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$6.3848913 \\times 10^{-12} \\; \\mathrm{\\frac{1}{GeV\\,s\\,cm^{2}}}$$"
      ],
      "text/plain": [
       "<Quantity 6.38489128e-12 1 / (cm2 GeV s)>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crab_3fhl.spectral_model(100 * u.GeV).to(\"cm-2 s-1 GeV-1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next we can compute the integral flux of the Crab between 10 GeV and 2000 GeV:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$8.6745734 \\times 10^{-9} \\; \\mathrm{\\frac{1}{s\\,cm^{2}}}$$"
      ],
      "text/plain": [
       "<Quantity 8.67457342e-09 1 / (cm2 s)>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crab_3fhl.spectral_model.integral(emin=10 * u.GeV, emax=2000 * u.GeV).to(\n",
    "    \"cm-2 s-1\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can easily convince ourself, that it corresponds to the value given in the Fermi-LAT 3FHL catalog:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$8.6589091 \\times 10^{-9} \\; \\mathrm{\\frac{1}{s\\,cm^{2}}}$$"
      ],
      "text/plain": [
       "<Quantity 8.658909e-09 1 / (cm2 s)>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crab_3fhl.data[\"Flux\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition we can compute the energy flux between 10 GeV and 2000 GeV:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$5.3114891 \\times 10^{-10} \\; \\mathrm{\\frac{erg}{s\\,cm^{2}}}$$"
      ],
      "text/plain": [
       "<Quantity 5.31148913e-10 erg / (cm2 s)>"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crab_3fhl.spectral_model.energy_flux(emin=10 * u.GeV, emax=2000 * u.GeV).to(\n",
    "    \"erg cm-2 s-1\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next we will access the flux points data of the Crab:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "FluxPoints(sed_type=\"flux\", n_points=5)\n"
     ]
    }
   ],
   "source": [
    "print(crab_3fhl.flux_points)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If you want to learn more about the different flux point formats you can read the specification [here](https://gamma-astro-data-formats.readthedocs.io/en/latest/spectra/flux_points/index.html).\n",
    "\n",
    "No we can check again the underlying astropy data structure by accessing the `.table` attribute:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table length=5</i>\n",
       "<table id=\"table4760640760\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>e_min</th><th>e_max</th><th>flux</th><th>flux_errn</th><th>flux_errp</th><th>e2dnde</th><th>e2dnde_errn</th><th>e2dnde_errp</th><th>is_ul</th><th>flux_ul</th><th>e2dnde_ul</th><th>sqrt_ts</th></tr></thead>\n",
       "<thead><tr><th>GeV</th><th>GeV</th><th>1 / (cm2 s)</th><th>1 / (cm2 s)</th><th>1 / (cm2 s)</th><th>erg / (cm2 s)</th><th>erg / (cm2 s)</th><th>erg / (cm2 s)</th><th></th><th>1 / (cm2 s)</th><th>erg / (cm2 s)</th><th></th></tr></thead>\n",
       "<thead><tr><th>float64</th><th>float64</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>bool</th><th>float64</th><th>float64</th><th>float32</th></tr></thead>\n",
       "<tr><td>10.0</td><td>20.0</td><td>5.1698894e-09</td><td>1.3338798e-10</td><td>1.3338798e-10</td><td>1.6420408e-10</td><td>4.236619e-12</td><td>4.236619e-12</td><td>False</td><td>nan</td><td>nan</td><td>125.15745</td></tr>\n",
       "<tr><td>20.0</td><td>50.0</td><td>2.2450237e-09</td><td>8.671894e-11</td><td>8.671894e-11</td><td>1.1808442e-10</td><td>4.561268e-12</td><td>4.561268e-12</td><td>False</td><td>nan</td><td>nan</td><td>88.71535</td></tr>\n",
       "<tr><td>50.0</td><td>150.0</td><td>9.2431746e-10</td><td>5.497474e-11</td><td>5.497474e-11</td><td>1.08686914e-10</td><td>6.464267e-12</td><td>6.464267e-12</td><td>False</td><td>nan</td><td>nan</td><td>59.087498</td></tr>\n",
       "<tr><td>150.0</td><td>500.0</td><td>2.7589558e-10</td><td>2.9164688e-11</td><td>3.1360175e-11</td><td>9.2301645e-11</td><td>9.757128e-12</td><td>1.0491635e-11</td><td>False</td><td>nan</td><td>nan</td><td>33.076164</td></tr>\n",
       "<tr><td>500.0</td><td>2000.0</td><td>6.6840214e-11</td><td>1.4629655e-11</td><td>1.6916293e-11</td><td>6.9011685e-11</td><td>1.5104936e-11</td><td>1.746586e-11</td><td>False</td><td>nan</td><td>nan</td><td>15.573053</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table length=5>\n",
       " e_min   e_max       flux     ...   flux_ul     e2dnde_ul    sqrt_ts \n",
       "  GeV     GeV    1 / (cm2 s)  ... 1 / (cm2 s) erg / (cm2 s)          \n",
       "float64 float64    float32    ...   float64      float64     float32 \n",
       "------- ------- ------------- ... ----------- ------------- ---------\n",
       "   10.0    20.0 5.1698894e-09 ...         nan           nan 125.15745\n",
       "   20.0    50.0 2.2450237e-09 ...         nan           nan  88.71535\n",
       "   50.0   150.0 9.2431746e-10 ...         nan           nan 59.087498\n",
       "  150.0   500.0 2.7589558e-10 ...         nan           nan 33.076164\n",
       "  500.0  2000.0 6.6840214e-11 ...         nan           nan 15.573053"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crab_3fhl.flux_points.table"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally let's combine spectral model and flux points in a single plot and scale with `energy_power=2` to obtain the spectral energy distribution:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = crab_3fhl.spectral_model.plot(\n",
    "    energy_range=[10, 2000] * u.GeV, energy_power=2\n",
    ")\n",
    "crab_3fhl.flux_points.to_sed_type(\"dnde\").plot(ax=ax, energy_power=2);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercises\n",
    "\n",
    "* Plot the spectral model and flux points for PKS 2155-304 for the 3FGL and 2FHL catalogs. Try to plot the error of the model (aka \"Butterfly\") as well. Note this requires the [uncertainties package](https://pythonhosted.org/uncertainties/) to be installed on your machine.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## What next?\n",
    "\n",
    "This was a quick introduction to some of the high-level classes in Astropy and Gammapy.\n",
    "\n",
    "* To learn more about those classes, go to the API docs (links are in the introduction at the top).\n",
    "* To learn more about other parts of Gammapy (e.g. Fermi-LAT and TeV data analysis), check out the other tutorial notebooks.\n",
    "* To see what's available in Gammapy, browse the [Gammapy docs](https://docs.gammapy.org/) or use the full-text search.\n",
    "* If you have any questions, ask on the mailing list."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  },
  "nbsphinx": {
   "orphan": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
