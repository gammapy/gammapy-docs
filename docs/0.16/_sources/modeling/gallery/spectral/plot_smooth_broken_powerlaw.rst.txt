.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_modeling_gallery_spectral_plot_smooth_broken_powerlaw.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_modeling_gallery_spectral_plot_smooth_broken_powerlaw.py:


.. _smooth-broken-powerlaw-spectral-model:

Smooth Broken Power Law Spectral Model
======================================

This model parametrises a smooth broken power law spectrum.

It is defined by the following equation:

.. math::
    \phi(E) = \phi_0 \cdot \left( \frac{E}{E_0} \right)^{-\Gamma1}\left(1 + \frac{E}{E_{break}}^{\frac{\Gamma2-\Gamma1}{\beta}} \right)^{-\beta}

Example plot
------------
Here is an example plot of the model:


.. code-block:: default


    from astropy import units as u
    import matplotlib.pyplot as plt
    from gammapy.modeling.models import Models, SkyModel, SmoothBrokenPowerLawSpectralModel

    energy_range = [0.1, 100] * u.TeV
    model = SmoothBrokenPowerLawSpectralModel(
        index1=1.5,
        index2=2.5,
        amplitude="1e-12 TeV-1 cm-2 s-1",
        ebreak="1 TeV",
        reference="1 TeV",
        beta=1,
    )
    model.plot(energy_range)
    plt.grid(which="both")




.. image:: /modeling/gallery/spectral/images/sphx_glr_plot_smooth_broken_powerlaw_001.png
    :class: sphx-glr-single-img





YAML representation
-------------------
Here is an example YAML file using the model:


.. code-block:: default


    model = SkyModel(spectral_model=model, name="smooth-broken-power-law-model")
    models = Models([model])

    print(models.to_yaml())




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    components:
    -   name: smooth-broken-power-law-model
        type: SkyModel
        spectral:
            type: SmoothBrokenPowerLawSpectralModel
            parameters:
            - {name: index1, value: 1.5, unit: '', min: .nan, max: .nan, frozen: false}
            - {name: index2, value: 2.5, unit: '', min: .nan, max: .nan, frozen: false}
            - {name: amplitude, value: 1.0e-12, unit: cm-2 s-1 TeV-1, min: .nan, max: .nan,
                frozen: false}
            - {name: ebreak, value: 1.0, unit: TeV, min: .nan, max: .nan, frozen: false}
            - {name: reference, value: 1.0, unit: TeV, min: .nan, max: .nan, frozen: true}
            - {name: beta, value: 1.0, unit: '', min: .nan, max: .nan, frozen: true}






.. _sphx_glr_download_modeling_gallery_spectral_plot_smooth_broken_powerlaw.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_smooth_broken_powerlaw.py <plot_smooth_broken_powerlaw.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_smooth_broken_powerlaw.ipynb <plot_smooth_broken_powerlaw.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
