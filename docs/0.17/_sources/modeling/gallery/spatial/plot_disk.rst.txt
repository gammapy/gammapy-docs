.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_modeling_gallery_spatial_plot_disk.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_modeling_gallery_spatial_plot_disk.py:


.. _disk-spatial-model:

Disk Spatial Model
==================

This is a spatial model parametrising a disk.

By default, the model is symmetric, i.e. a disk:

.. math::

    \phi(lon, lat) = \frac{1}{2 \pi (1 - \cos{r_0}) } \cdot
            \begin{cases}
                1 & \text{for } \theta \leq r_0 \
                0 & \text{for } \theta > r_0
            \end{cases}

where :math:`\theta` is the sky separation. To improve fit convergence of the
model, the sharp edges is smoothed using `~scipy.special.erf`.

In case an eccentricity (`e`) and rotation angle (:math:`\phi`) are passed,
then the model is an elongated disk (i.e. an ellipse), with a major semiaxis of length :math:`r_0`
and position angle :math:`\phi` (increaing counter-clockwise from the North direction).

The model is defined on the celestial sphere, with a normalization defined by:

.. math::

    \int_{4\pi}\phi(\text{lon}, \text{lat}) \,d\Omega = 1\,.

Example plot
------------
Here is an example plot of the model:


.. code-block:: default



    import numpy as np
    from astropy.coordinates import Angle
    from gammapy.modeling.models import (
        DiskSpatialModel,
        Models,
        PowerLawSpectralModel,
        SkyModel,
    )

    phi = Angle("30 deg")
    model = DiskSpatialModel(
        lon_0="2 deg", lat_0="2 deg", r_0="1 deg", e=0.8, phi="30 deg", frame="galactic",
    )

    ax = model.plot(add_cbar=True)

    # illustrate size parameter
    region = model.to_region().to_pixel(ax.wcs)
    artist = region.as_artist(facecolor="none", edgecolor="red")
    ax.add_artist(artist)

    transform = ax.get_transform("galactic")
    ax.scatter(2, 2, transform=transform, s=20, edgecolor="red", facecolor="red")
    ax.text(1.7, 1.85, r"$(l_0, b_0)$", transform=transform, ha="center")
    ax.plot([2, 2 + np.sin(phi)], [2, 2 + np.cos(phi)], color="r", transform=transform)
    ax.vlines(x=2, color="r", linestyle="--", transform=transform, ymin=0, ymax=5)
    ax.text(2.15, 2.3, r"$\phi$", transform=transform)




.. image:: /modeling/gallery/spatial/images/sphx_glr_plot_disk_001.png
    :class: sphx-glr-single-img





YAML representation
-------------------
Here is an example YAML file using the model:


.. code-block:: default


    pwl = PowerLawSpectralModel()
    gauss = DiskSpatialModel()

    model = SkyModel(spectral_model=pwl, spatial_model=gauss, name="pwl-disk-model")
    models = Models([model])

    print(models.to_yaml())




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    components:
    -   name: pwl-disk-model
        type: SkyModel
        spectral:
            type: PowerLawSpectralModel
            parameters:
            - {name: index, value: 2.0, unit: '', min: .nan, max: .nan, frozen: false,
                error: 0}
            - {name: amplitude, value: 1.0e-12, unit: cm-2 s-1 TeV-1, min: .nan, max: .nan,
                frozen: false, error: 0}
            - {name: reference, value: 1.0, unit: TeV, min: .nan, max: .nan, frozen: true,
                error: 0}
        spatial:
            type: DiskSpatialModel
            frame: icrs
            parameters:
            - {name: lon_0, value: 0.0, unit: deg, min: .nan, max: .nan, frozen: false,
                error: 0}
            - {name: lat_0, value: 0.0, unit: deg, min: -90.0, max: 90.0, frozen: false,
                error: 0}
            - {name: r_0, value: 1.0, unit: deg, min: 0.0, max: .nan, frozen: false, error: 0}
            - {name: e, value: 0.0, unit: '', min: 0.0, max: 1.0, frozen: true, error: 0}
            - {name: phi, value: 0.0, unit: deg, min: .nan, max: .nan, frozen: true, error: 0}
            - {name: edge, value: 0.01, unit: deg, min: 0.01, max: .nan, frozen: true,
                error: 0}






.. _sphx_glr_download_modeling_gallery_spatial_plot_disk.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_disk.py <plot_disk.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_disk.ipynb <plot_disk.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
