{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "94146c6d",
   "metadata": {},
   "source": [
    "\n",
    "<div class=\"alert alert-info\">\n",
    "\n",
    "**This is a fixed-text formatted version of a Jupyter notebook**\n",
    "\n",
    "- Try online[![Binder](https://static.mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy-webpage/v0.20.1?urlpath=lab/tree/tutorials/analysis/3D/simulate_3d.ipynb)\n",
    "- You may download all the notebooks as a [tar file](../../../_downloads/notebooks-0.20.1.tar).\n",
    "- **Source files:**\n",
    "[simulate_3d.ipynb](../../../_static/notebooks/simulate_3d.ipynb) |\n",
    "[simulate_3d.py](../../../_static/notebooks/simulate_3d.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f033fcb",
   "metadata": {},
   "source": [
    "# 3D map simulation\n",
    "\n",
    "## Prerequisites\n",
    "\n",
    "- Knowledge of 3D extraction and datasets used in gammapy, see for instance the [first analysis tutorial](../../starting/analysis_1.ipynb)\n",
    "\n",
    "## Context\n",
    "\n",
    "To simulate a specific observation, it is not always necessary to simulate the full photon list. For many uses cases, simulating directly a reduced binned dataset is enough: the IRFs reduced in the correct geometry are combined with a source model to predict an actual number of counts per bin. The latter is then used to simulate a reduced dataset using Poisson probability distribution.\n",
    "\n",
    "This can be done to check the feasibility of a measurement (performance / sensitivity study), to test whether fitted parameters really provide a good fit to the data etc.\n",
    "\n",
    "Here we will see how to perform a 3D simulation of a CTA observation, assuming both the spectral and spatial morphology of an observed source.\n",
    "\n",
    "**Objective: simulate a 3D observation of a source with CTA using the CTA 1DC response and fit it with the assumed source model.**\n",
    "\n",
    "## Proposed approach\n",
    "\n",
    "Here we can't use the regular observation objects that are connected to a `DataStore`. Instead we will create a fake `~gammapy.data.Observation` that contain some pointing information and the CTA 1DC IRFs (that are loaded with `~gammapy.irf.load_cta_irfs`).\n",
    "\n",
    "Then we will create a `~gammapy.datasets.MapDataset` geometry and create it with the `~gammapy.makers.MapDatasetMaker`.\n",
    "\n",
    "Then we will be able to define a model consisting of  a `~gammapy.modeling.models.PowerLawSpectralModel` and a `~gammapy.modeling.models.GaussianSpatialModel`. We will assign it to the dataset and fake the count data.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af5162d6",
   "metadata": {},
   "source": [
    "## Imports and versions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "81ffd32d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:29:53.592422Z",
     "iopub.status.busy": "2022-06-17T21:29:53.591628Z",
     "iopub.status.idle": "2022-06-17T21:29:54.919695Z",
     "shell.execute_reply": "2022-06-17T21:29:54.918694Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f2608590",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:29:54.924824Z",
     "iopub.status.busy": "2022-06-17T21:29:54.924228Z",
     "iopub.status.idle": "2022-06-17T21:29:57.310615Z",
     "shell.execute_reply": "2022-06-17T21:29:57.308797Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import astropy.units as u\n",
    "from astropy.coordinates import SkyCoord\n",
    "from gammapy.irf import load_cta_irfs\n",
    "from gammapy.maps import WcsGeom, MapAxis\n",
    "from gammapy.modeling.models import (\n",
    "    PowerLawSpectralModel,\n",
    "    GaussianSpatialModel,\n",
    "    SkyModel,\n",
    "    Models,\n",
    "    FoVBackgroundModel,\n",
    ")\n",
    "from gammapy.makers import MapDatasetMaker, SafeMaskMaker\n",
    "from gammapy.modeling import Fit\n",
    "from gammapy.data import Observation, observatory_locations\n",
    "from gammapy.datasets import MapDataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3aadebad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:29:57.314716Z",
     "iopub.status.busy": "2022-06-17T21:29:57.314328Z",
     "iopub.status.idle": "2022-06-17T21:30:04.430909Z",
     "shell.execute_reply": "2022-06-17T21:30:04.429572Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\r\n",
      "Gammapy package:\r\n",
      "\r\n",
      "\tversion                : 0.20.1     \r\n",
      "\tpath                   : /Users/terrier/Code/gammapy-dev/gammapy/gammapy \r\n",
      "\r\n"
     ]
    }
   ],
   "source": [
    "!gammapy info --no-envvar --no-dependencies --no-system"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8fb0bf89",
   "metadata": {},
   "source": [
    "## Simulation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e74e1a1d",
   "metadata": {},
   "source": [
    "We will simulate using the CTA-1DC IRFs shipped with gammapy. Note that for dedictaed CTA simulations, you can simply use [`Observation.from_caldb()`]() without having to externally load the IRFs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e11bc3d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:04.436841Z",
     "iopub.status.busy": "2022-06-17T21:30:04.436369Z",
     "iopub.status.idle": "2022-06-17T21:30:04.659012Z",
     "shell.execute_reply": "2022-06-17T21:30:04.657658Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Invalid unit found in background table! Assuming (s-1 MeV-1 sr-1)\n"
     ]
    }
   ],
   "source": [
    "# Loading IRFs\n",
    "irfs = load_cta_irfs(\n",
    "    \"$GAMMAPY_DATA/cta-1dc/caldb/data/cta/1dc/bcf/South_z20_50h/irf_file.fits\"\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8328aed9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:04.665468Z",
     "iopub.status.busy": "2022-06-17T21:30:04.664735Z",
     "iopub.status.idle": "2022-06-17T21:30:04.674922Z",
     "shell.execute_reply": "2022-06-17T21:30:04.673578Z"
    }
   },
   "outputs": [],
   "source": [
    "# Define the observation parameters (typically the observation duration and the pointing position):\n",
    "livetime = 2.0 * u.hr\n",
    "pointing = SkyCoord(0, 0, unit=\"deg\", frame=\"galactic\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "94cfa673",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:04.680996Z",
     "iopub.status.busy": "2022-06-17T21:30:04.680068Z",
     "iopub.status.idle": "2022-06-17T21:30:04.732941Z",
     "shell.execute_reply": "2022-06-17T21:30:04.731516Z"
    }
   },
   "outputs": [],
   "source": [
    "# Define map geometry for binned simulation\n",
    "energy_reco = MapAxis.from_edges(\n",
    "    np.logspace(-1.0, 1.0, 10), unit=\"TeV\", name=\"energy\", interp=\"log\"\n",
    ")\n",
    "geom = WcsGeom.create(\n",
    "    skydir=(0, 0),\n",
    "    binsz=0.02,\n",
    "    width=(6, 6),\n",
    "    frame=\"galactic\",\n",
    "    axes=[energy_reco],\n",
    ")\n",
    "# It is usually useful to have a separate binning for the true energy axis\n",
    "energy_true = MapAxis.from_edges(\n",
    "    np.logspace(-1.5, 1.5, 30), unit=\"TeV\", name=\"energy_true\", interp=\"log\"\n",
    ")\n",
    "\n",
    "empty = MapDataset.create(\n",
    "    geom, name=\"dataset-simu\", energy_axis_true=energy_true\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "eebfcd1d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:04.738783Z",
     "iopub.status.busy": "2022-06-17T21:30:04.738018Z",
     "iopub.status.idle": "2022-06-17T21:30:04.778378Z",
     "shell.execute_reply": "2022-06-17T21:30:04.777228Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Models\n",
      "\n",
      "Component 0: SkyModel\n",
      "\n",
      "  Name                      : model-simu\n",
      "  Datasets names            : None\n",
      "  Spectral model type       : PowerLawSpectralModel\n",
      "  Spatial  model type       : GaussianSpatialModel\n",
      "  Temporal model type       : \n",
      "  Parameters:\n",
      "    index                         :      3.000   +/-    0.00             \n",
      "    amplitude                     :   1.00e-11   +/- 0.0e+00 1 / (cm2 s TeV)\n",
      "    reference             (frozen):      1.000       TeV         \n",
      "    lon_0                         :      0.200   +/-    0.00 deg         \n",
      "    lat_0                         :      0.100   +/-    0.00 deg         \n",
      "    sigma                         :      0.300   +/-    0.00 deg         \n",
      "    e                     (frozen):      0.000                   \n",
      "    phi                   (frozen):      0.000       deg         \n",
      "\n",
      "Component 1: FoVBackgroundModel\n",
      "\n",
      "  Name                      : dataset-simu-bkg\n",
      "  Datasets names            : ['dataset-simu']\n",
      "  Spectral model type       : PowerLawNormSpectralModel\n",
      "  Parameters:\n",
      "    norm                          :      1.000   +/-    0.00             \n",
      "    tilt                  (frozen):      0.000                   \n",
      "    reference             (frozen):      1.000       TeV         \n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Define sky model to used simulate the data.\n",
    "# Here we use a Gaussian spatial model and a Power Law spectral model.\n",
    "spatial_model = GaussianSpatialModel(\n",
    "    lon_0=\"0.2 deg\", lat_0=\"0.1 deg\", sigma=\"0.3 deg\", frame=\"galactic\"\n",
    ")\n",
    "spectral_model = PowerLawSpectralModel(\n",
    "    index=3, amplitude=\"1e-11 cm-2 s-1 TeV-1\", reference=\"1 TeV\"\n",
    ")\n",
    "model_simu = SkyModel(\n",
    "    spatial_model=spatial_model,\n",
    "    spectral_model=spectral_model,\n",
    "    name=\"model-simu\",\n",
    ")\n",
    "\n",
    "bkg_model = FoVBackgroundModel(dataset_name=\"dataset-simu\")\n",
    "\n",
    "models = Models([model_simu, bkg_model])\n",
    "print(models)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "539ddf04",
   "metadata": {},
   "source": [
    "Now, comes the main part of dataset simulation. We create an in-memory observation and an empty dataset. We then predict the number of counts for the given model, and Poission fluctuate it using `fake()` to make a simulated counts maps. Keep in mind that it is important to specify the `selection` of the maps that you want to produce "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "41a0381b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:04.784532Z",
     "iopub.status.busy": "2022-06-17T21:30:04.783651Z",
     "iopub.status.idle": "2022-06-17T21:30:04.822207Z",
     "shell.execute_reply": "2022-06-17T21:30:04.820996Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Observation\n",
      "\n",
      "\tobs id            : 0 \n",
      " \ttstart            : 51544.00\n",
      "\ttstop             : 51544.08\n",
      "\tduration          : 7200.00 s\n",
      "\tpointing (icrs)   : 266.4 deg, -28.9 deg\n",
      "\n",
      "\tdeadtime fraction : 0.0%\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Create an in-memory observation\n",
    "location = observatory_locations[\"cta_south\"]\n",
    "obs = Observation.create(\n",
    "    pointing=pointing, livetime=livetime, irfs=irfs, location=location\n",
    ")\n",
    "print(obs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4f3d7e53",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:04.828595Z",
     "iopub.status.busy": "2022-06-17T21:30:04.827811Z",
     "iopub.status.idle": "2022-06-17T21:30:14.864864Z",
     "shell.execute_reply": "2022-06-17T21:30:14.863707Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MapDataset\n",
      "----------\n",
      "\n",
      "  Name                            : dataset-simu \n",
      "\n",
      "  Total counts                    : 0 \n",
      "  Total background counts         : 161250.95\n",
      "  Total excess counts             : -161250.95\n",
      "\n",
      "  Predicted counts                : 161250.95\n",
      "  Predicted background counts     : 161250.95\n",
      "  Predicted excess counts         : nan\n",
      "\n",
      "  Exposure min                    : 4.08e+02 m2 s\n",
      "  Exposure max                    : 3.58e+10 m2 s\n",
      "\n",
      "  Number of total bins            : 810000 \n",
      "  Number of fit bins              : 804492 \n",
      "\n",
      "  Fit statistic type              : cash\n",
      "  Fit statistic value (-2 log(L)) : nan\n",
      "\n",
      "  Number of models                : 0 \n",
      "  Number of parameters            : 0\n",
      "  Number of free parameters       : 0\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Make the MapDataset\n",
    "maker = MapDatasetMaker(selection=[\"exposure\", \"background\", \"psf\", \"edisp\"])\n",
    "\n",
    "maker_safe_mask = SafeMaskMaker(methods=[\"offset-max\"], offset_max=4.0 * u.deg)\n",
    "\n",
    "dataset = maker.run(empty, obs)\n",
    "dataset = maker_safe_mask.run(dataset, obs)\n",
    "print(dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "66bd3913",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:14.870841Z",
     "iopub.status.busy": "2022-06-17T21:30:14.869821Z",
     "iopub.status.idle": "2022-06-17T21:30:18.322385Z",
     "shell.execute_reply": "2022-06-17T21:30:18.321154Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MapDataset\n",
      "----------\n",
      "\n",
      "  Name                            : dataset-simu \n",
      "\n",
      "  Total counts                    : 169930 \n",
      "  Total background counts         : 161250.95\n",
      "  Total excess counts             : 8679.05\n",
      "\n",
      "  Predicted counts                : 169871.61\n",
      "  Predicted background counts     : 161250.95\n",
      "  Predicted excess counts         : 8620.66\n",
      "\n",
      "  Exposure min                    : 4.08e+02 m2 s\n",
      "  Exposure max                    : 3.58e+10 m2 s\n",
      "\n",
      "  Number of total bins            : 810000 \n",
      "  Number of fit bins              : 804492 \n",
      "\n",
      "  Fit statistic type              : cash\n",
      "  Fit statistic value (-2 log(L)) : 563379.75\n",
      "\n",
      "  Number of models                : 2 \n",
      "  Number of parameters            : 11\n",
      "  Number of free parameters       : 6\n",
      "\n",
      "  Component 0: SkyModel\n",
      "  \n",
      "    Name                      : model-simu\n",
      "    Datasets names            : None\n",
      "    Spectral model type       : PowerLawSpectralModel\n",
      "    Spatial  model type       : GaussianSpatialModel\n",
      "    Temporal model type       : \n",
      "    Parameters:\n",
      "      index                         :      3.000   +/-    0.00             \n",
      "      amplitude                     :   1.00e-11   +/- 0.0e+00 1 / (cm2 s TeV)\n",
      "      reference             (frozen):      1.000       TeV         \n",
      "      lon_0                         :      0.200   +/-    0.00 deg         \n",
      "      lat_0                         :      0.100   +/-    0.00 deg         \n",
      "      sigma                         :      0.300   +/-    0.00 deg         \n",
      "      e                     (frozen):      0.000                   \n",
      "      phi                   (frozen):      0.000       deg         \n",
      "  \n",
      "  Component 1: FoVBackgroundModel\n",
      "  \n",
      "    Name                      : dataset-simu-bkg\n",
      "    Datasets names            : ['dataset-simu']\n",
      "    Spectral model type       : PowerLawNormSpectralModel\n",
      "    Parameters:\n",
      "      norm                          :      1.000   +/-    0.00             \n",
      "      tilt                  (frozen):      0.000                   \n",
      "      reference             (frozen):      1.000       TeV         \n",
      "  \n",
      "  \n"
     ]
    }
   ],
   "source": [
    "# Add the model on the dataset and Poission fluctuate\n",
    "dataset.models = models\n",
    "dataset.fake()\n",
    "# Do a print on the dataset - there is now a counts maps\n",
    "print(dataset)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "05622c7e",
   "metadata": {},
   "source": [
    "Now use this dataset as you would in all standard analysis. You can plot the maps, or proceed with your custom analysis. \n",
    "In the next section, we show the standard 3D fitting as in [analysis_3d](analysis_3d.ipynb)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "346af0e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:18.328914Z",
     "iopub.status.busy": "2022-06-17T21:30:18.328002Z",
     "iopub.status.idle": "2022-06-17T21:30:19.822799Z",
     "shell.execute_reply": "2022-06-17T21:30:19.821820Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1887cb1b97184ad6854475af71482910",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "interactive(children=(SelectionSlider(continuous_update=False, description='Select energy:', layout=Layout(wid…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# To plot, eg, counts:\n",
    "dataset.counts.smooth(0.05 * u.deg).plot_interactive(\n",
    "    add_cbar=True, stretch=\"linear\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa15c957",
   "metadata": {},
   "source": [
    "## Fit\n",
    "\n",
    "In this section, we do a usual 3D fit with the same model used to simulated the data and see the stability of the simulations. Often, it is useful to simulate many such datasets and look at the distribution of the reconstructed parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4d6c11e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:19.829921Z",
     "iopub.status.busy": "2022-06-17T21:30:19.829256Z",
     "iopub.status.idle": "2022-06-17T21:30:19.881130Z",
     "shell.execute_reply": "2022-06-17T21:30:19.880135Z"
    }
   },
   "outputs": [],
   "source": [
    "models_fit = models.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "76e36eff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:19.887007Z",
     "iopub.status.busy": "2022-06-17T21:30:19.886015Z",
     "iopub.status.idle": "2022-06-17T21:30:19.892325Z",
     "shell.execute_reply": "2022-06-17T21:30:19.891191Z"
    }
   },
   "outputs": [],
   "source": [
    "# We do not want to fit the background in this case, so we will freeze the parameters\n",
    "models_fit[\"dataset-simu-bkg\"].spectral_model.norm.frozen = True\n",
    "models_fit[\"dataset-simu-bkg\"].spectral_model.tilt.frozen = True"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fab7c60a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:19.897891Z",
     "iopub.status.busy": "2022-06-17T21:30:19.897168Z",
     "iopub.status.idle": "2022-06-17T21:30:19.906036Z",
     "shell.execute_reply": "2022-06-17T21:30:19.904983Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DatasetModels\n",
      "\n",
      "Component 0: SkyModel\n",
      "\n",
      "  Name                      : model-simu\n",
      "  Datasets names            : None\n",
      "  Spectral model type       : PowerLawSpectralModel\n",
      "  Spatial  model type       : GaussianSpatialModel\n",
      "  Temporal model type       : \n",
      "  Parameters:\n",
      "    index                         :      3.000   +/-    0.00             \n",
      "    amplitude                     :   1.00e-11   +/- 0.0e+00 1 / (cm2 s TeV)\n",
      "    reference             (frozen):      1.000       TeV         \n",
      "    lon_0                         :      0.200   +/-    0.00 deg         \n",
      "    lat_0                         :      0.100   +/-    0.00 deg         \n",
      "    sigma                         :      0.300   +/-    0.00 deg         \n",
      "    e                     (frozen):      0.000                   \n",
      "    phi                   (frozen):      0.000       deg         \n",
      "\n",
      "Component 1: FoVBackgroundModel\n",
      "\n",
      "  Name                      : dataset-simu-bkg\n",
      "  Datasets names            : ['dataset-simu']\n",
      "  Spectral model type       : PowerLawNormSpectralModel\n",
      "  Parameters:\n",
      "    norm                  (frozen):      1.000                   \n",
      "    tilt                  (frozen):      0.000                   \n",
      "    reference             (frozen):      1.000       TeV         \n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "dataset.models = models_fit\n",
    "print(dataset.models)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4af3b5b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:19.911339Z",
     "iopub.status.busy": "2022-06-17T21:30:19.910627Z",
     "iopub.status.idle": "2022-06-17T21:30:49.584512Z",
     "shell.execute_reply": "2022-06-17T21:30:49.582953Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 21.9 s, sys: 3.42 s, total: 25.3 s\n",
      "Wall time: 29.7 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "fit = Fit(optimize_opts={\"print_level\": 1})\n",
    "result = fit.run(datasets=[dataset])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "204aa40a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:49.590755Z",
     "iopub.status.busy": "2022-06-17T21:30:49.589966Z",
     "iopub.status.idle": "2022-06-17T21:30:51.435382Z",
     "shell.execute_reply": "2022-06-17T21:30:51.434424Z"
    },
    "nbsphinx-thumbnail": {
     "tooltip": "Simulate a 3D observation of a source with the CTA 1DC response and fit it with the assumed source model."
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<WCSAxesSubplot:xlabel='Galactic Longitude', ylabel='Galactic Latitude'>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dataset.plot_residuals_spatial(method=\"diff/sqrt(model)\", vmin=-0.5, vmax=0.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9ebfb37c",
   "metadata": {},
   "source": [
    "Compare the injected and fitted models: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "97ea1b8c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:51.444215Z",
     "iopub.status.busy": "2022-06-17T21:30:51.442073Z",
     "iopub.status.idle": "2022-06-17T21:30:51.454802Z",
     "shell.execute_reply": "2022-06-17T21:30:51.453674Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True model: \n",
      " SkyModel\n",
      "\n",
      "  Name                      : model-simu\n",
      "  Datasets names            : None\n",
      "  Spectral model type       : PowerLawSpectralModel\n",
      "  Spatial  model type       : GaussianSpatialModel\n",
      "  Temporal model type       : \n",
      "  Parameters:\n",
      "    index                         :      3.000   +/-    0.00             \n",
      "    amplitude                     :   1.00e-11   +/- 0.0e+00 1 / (cm2 s TeV)\n",
      "    reference             (frozen):      1.000       TeV         \n",
      "    lon_0                         :      0.200   +/-    0.00 deg         \n",
      "    lat_0                         :      0.100   +/-    0.00 deg         \n",
      "    sigma                         :      0.300   +/-    0.00 deg         \n",
      "    e                     (frozen):      0.000                   \n",
      "    phi                   (frozen):      0.000       deg         \n",
      "\n",
      " \n",
      "\n",
      " Fitted model: \n",
      " SkyModel\n",
      "\n",
      "  Name                      : model-simu\n",
      "  Datasets names            : None\n",
      "  Spectral model type       : PowerLawSpectralModel\n",
      "  Spatial  model type       : GaussianSpatialModel\n",
      "  Temporal model type       : \n",
      "  Parameters:\n",
      "    index                         :      2.990   +/-    0.02             \n",
      "    amplitude                     :   1.01e-11   +/- 3.3e-13 1 / (cm2 s TeV)\n",
      "    reference             (frozen):      1.000       TeV         \n",
      "    lon_0                         :      0.210   +/-    0.01 deg         \n",
      "    lat_0                         :      0.102   +/-    0.01 deg         \n",
      "    sigma                         :      0.298   +/-    0.00 deg         \n",
      "    e                     (frozen):      0.000                   \n",
      "    phi                   (frozen):      0.000       deg         \n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\n",
    "    \"True model: \\n\",\n",
    "    model_simu,\n",
    "    \"\\n\\n Fitted model: \\n\",\n",
    "    models_fit[\"model-simu\"],\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9039c5ab",
   "metadata": {},
   "source": [
    "Get the errors on the fitted parameters from the parameter table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4b57e96f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-17T21:30:51.461749Z",
     "iopub.status.busy": "2022-06-17T21:30:51.461007Z",
     "iopub.status.idle": "2022-06-17T21:30:51.477339Z",
     "shell.execute_reply": "2022-06-17T21:30:51.476252Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><i>Table length=11</i>\n",
       "<table id=\"table5356979440\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>type</th><th>name</th><th>value</th><th>unit</th><th>error</th><th>min</th><th>max</th><th>frozen</th><th>is_norm</th><th>link</th></tr></thead>\n",
       "<thead><tr><th>str8</th><th>str9</th><th>float64</th><th>str14</th><th>float64</th><th>float64</th><th>float64</th><th>bool</th><th>bool</th><th>str1</th></tr></thead>\n",
       "<tr><td>spectral</td><td>index</td><td>2.9897e+00</td><td></td><td>1.969e-02</td><td>nan</td><td>nan</td><td>False</td><td>False</td><td></td></tr>\n",
       "<tr><td>spectral</td><td>amplitude</td><td>1.0051e-11</td><td>cm-2 s-1 TeV-1</td><td>3.322e-13</td><td>nan</td><td>nan</td><td>False</td><td>True</td><td></td></tr>\n",
       "<tr><td>spectral</td><td>reference</td><td>1.0000e+00</td><td>TeV</td><td>0.000e+00</td><td>nan</td><td>nan</td><td>True</td><td>False</td><td></td></tr>\n",
       "<tr><td>spatial</td><td>lon_0</td><td>2.1032e-01</td><td>deg</td><td>5.922e-03</td><td>nan</td><td>nan</td><td>False</td><td>False</td><td></td></tr>\n",
       "<tr><td>spatial</td><td>lat_0</td><td>1.0171e-01</td><td>deg</td><td>5.773e-03</td><td>-9.000e+01</td><td>9.000e+01</td><td>False</td><td>False</td><td></td></tr>\n",
       "<tr><td>spatial</td><td>sigma</td><td>2.9788e-01</td><td>deg</td><td>3.996e-03</td><td>0.000e+00</td><td>nan</td><td>False</td><td>False</td><td></td></tr>\n",
       "<tr><td>spatial</td><td>e</td><td>0.0000e+00</td><td></td><td>0.000e+00</td><td>0.000e+00</td><td>1.000e+00</td><td>True</td><td>False</td><td></td></tr>\n",
       "<tr><td>spatial</td><td>phi</td><td>0.0000e+00</td><td>deg</td><td>0.000e+00</td><td>nan</td><td>nan</td><td>True</td><td>False</td><td></td></tr>\n",
       "<tr><td>spectral</td><td>norm</td><td>1.0000e+00</td><td></td><td>0.000e+00</td><td>nan</td><td>nan</td><td>True</td><td>True</td><td></td></tr>\n",
       "<tr><td>spectral</td><td>tilt</td><td>0.0000e+00</td><td></td><td>0.000e+00</td><td>nan</td><td>nan</td><td>True</td><td>False</td><td></td></tr>\n",
       "<tr><td>spectral</td><td>reference</td><td>1.0000e+00</td><td>TeV</td><td>0.000e+00</td><td>nan</td><td>nan</td><td>True</td><td>False</td><td></td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       "<Table length=11>\n",
       "  type      name     value         unit        error      min        max    frozen is_norm link\n",
       "  str8      str9    float64       str14       float64   float64    float64   bool    bool  str1\n",
       "-------- --------- ---------- -------------- --------- ---------- --------- ------ ------- ----\n",
       "spectral     index 2.9897e+00                1.969e-02        nan       nan  False   False     \n",
       "spectral amplitude 1.0051e-11 cm-2 s-1 TeV-1 3.322e-13        nan       nan  False    True     \n",
       "spectral reference 1.0000e+00            TeV 0.000e+00        nan       nan   True   False     \n",
       " spatial     lon_0 2.1032e-01            deg 5.922e-03        nan       nan  False   False     \n",
       " spatial     lat_0 1.0171e-01            deg 5.773e-03 -9.000e+01 9.000e+01  False   False     \n",
       " spatial     sigma 2.9788e-01            deg 3.996e-03  0.000e+00       nan  False   False     \n",
       " spatial         e 0.0000e+00                0.000e+00  0.000e+00 1.000e+00   True   False     \n",
       " spatial       phi 0.0000e+00            deg 0.000e+00        nan       nan   True   False     \n",
       "spectral      norm 1.0000e+00                0.000e+00        nan       nan   True    True     \n",
       "spectral      tilt 0.0000e+00                0.000e+00        nan       nan   True   False     \n",
       "spectral reference 1.0000e+00            TeV 0.000e+00        nan       nan   True   False     "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.parameters.to_table()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autoclose": false,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": false,
   "user_envs_cfg": false
  },
  "nbsphinx": {
   "orphan": true
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "0ac73254aacd4912a7bbd123e4a93ff9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "initial"
      }
     },
     "1887cb1b97184ad6854475af71482910": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "VBoxModel",
      "state": {
       "_dom_classes": [
        "widget-interact"
       ],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "VBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "VBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3ea05c2fa8ec4232b1a820f08cf35cff",
        "IPY_MODEL_e8b4b82befcc4f1aa0ecf1a4692a9b34",
        "IPY_MODEL_915ef5455ae54b6ba43fe3e11695143d"
       ],
       "layout": "IPY_MODEL_1fadb8e3e7c143d39c4f583136aa253c"
      }
     },
     "1fadb8e3e7c143d39c4f583136aa253c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "21d1ded9e4f044428468c490c8ac910f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "50%"
      }
     },
     "3ea05c2fa8ec4232b1a820f08cf35cff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SelectionSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SelectionSliderModel",
       "_options_labels": [
        "100 GeV - 167 GeV",
        "167 GeV - 278 GeV",
        "278 GeV - 464 GeV",
        "464 GeV - 774 GeV",
        "774 GeV - 1.29 TeV",
        "1.29 TeV - 2.15 TeV",
        "2.15 TeV - 3.59 TeV",
        "3.59 TeV - 5.99 TeV",
        "5.99 TeV - 10.0 TeV"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "SelectionSliderView",
       "continuous_update": false,
       "description": "Select energy:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_21d1ded9e4f044428468c490c8ac910f",
       "orientation": "horizontal",
       "readout": true,
       "style": "IPY_MODEL_c9374e1c39f24d8f80377df503185370"
      }
     },
     "6c0a4d20b7e24c9eab8131aff3da629a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7be1c4959d804ed4a3331082fc64f778": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "915ef5455ae54b6ba43fe3e11695143d": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/output",
       "_model_module_version": "1.0.0",
       "_model_name": "OutputModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/output",
       "_view_module_version": "1.0.0",
       "_view_name": "OutputView",
       "layout": "IPY_MODEL_6c0a4d20b7e24c9eab8131aff3da629a",
       "msg_id": "",
       "outputs": [
        {
         "data": {
          "image/png": "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\n",
          "text/plain": "<Figure size 432x288 with 2 Axes>"
         },
         "metadata": {
          "needs_background": "light"
         },
         "output_type": "display_data"
        }
       ]
      }
     },
     "c9374e1c39f24d8f80377df503185370": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "initial"
      }
     },
     "e8b4b82befcc4f1aa0ecf1a4692a9b34": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "RadioButtonsModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "RadioButtonsModel",
       "_options_labels": [
        "linear",
        "sqrt",
        "log"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "RadioButtonsView",
       "description": "Select stretch:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_7be1c4959d804ed4a3331082fc64f778",
       "style": "IPY_MODEL_0ac73254aacd4912a7bbd123e4a93ff9"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
