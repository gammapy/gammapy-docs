
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/api/catalog.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorials_api_catalog.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_api_catalog.py:


Source catalogs
===============

Access and explore thew most common gamma-ray source catalogs.

Introduction
------------

`~gammapy.catalog` provides convenient access to common gamma-ray
source catalogs. This module is mostly independent from the rest of
Gammapy. Typically you use it to compare new analyses against catalog
results, e.g. overplot the spectral model, or compare the source
position.

Moreover as creating a source model and flux points for a given catalog
from the FITS table is tedious, `~gammapy.catalog` has this already
implemented. So you can create initial source models for your analyses.
This is very common for Fermi-LAT, to start with a catalog model. For
TeV analysis, especially in crowded Galactic regions, using the HGPS,
gamma-cat or 2HWC catalog in this way can also be useful.

In this tutorial you will learn how to:

-  List available catalogs
-  Load a catalog
-  Access the source catalog table data
-  Select a catalog subset or a single source
-  Get source spectral and spatial models
-  Get flux points (if available)
-  Get lightcurves (if available)
-  Access the source catalog table data
-  Pretty-print the source information

In this tutorial we will show examples using the following catalogs:

-  `~gammapy.catalog.SourceCatalogHGPS`
-  `~gammapy.catalog.SourceCatalogGammaCat`
-  `~gammapy.catalog.SourceCatalog3FHL`
-  `~gammapy.catalog.SourceCatalog4FGL`

All catalog and source classes work the same, as long as some
information is available. E.g. trying to access a lightcurve from a
catalog and source that doesn’t have that information will return
`None`.

Further information is available at `~gammapy.catalog`.

.. GENERATED FROM PYTHON SOURCE LINES 50-56

.. code-block:: python3


    # %matplotlib inline
    import numpy as np
    import astropy.units as u
    from gammapy.catalog import CATALOG_REGISTRY








.. GENERATED FROM PYTHON SOURCE LINES 57-59

Check setup
-----------

.. GENERATED FROM PYTHON SOURCE LINES 59-64

.. code-block:: python3

    from gammapy.utils.check import check_tutorials_setup

    check_tutorials_setup()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    System:

            python_executable      : /Users/adonath/github/adonath/gammapy/.tox/build_docs/bin/python 
            python_version         : 3.9.12     
            machine                : arm64      
            system                 : Darwin     


    Gammapy package:

            version                : 0.20.2.dev596+g96acaf17f 
            path                   : /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/gammapy 


    Other packages:

            numpy                  : 1.23.3     
            scipy                  : 1.9.1      
            astropy                : 5.1        
            regions                : 0.6        
            click                  : 8.1.3      
            yaml                   : 6.0        
            IPython                : 8.5.0      
            jupyterlab             : not installed 
            matplotlib             : 3.6.0      
            pandas                 : not installed 
            healpy                 : 1.16.1     
            iminuit                : 2.17.0     
            sherpa                 : 4.14.1     
            naima                  : 0.10.0     
            emcee                  : 3.1.3      
            corner                 : 2.2.1      


    Gammapy environment variables:

            GAMMAPY_DATA           : /Users/adonath/github/gammapy/gammapy-data 





.. GENERATED FROM PYTHON SOURCE LINES 65-72

List available catalogs
-----------------------

`~gammapy.catalog` contains a catalog registry `~gammapy.catalog.CATALOG_REGISTRY`,
which maps catalog names (e.g. “3fhl”) to catalog classes
(e.g. `SourceCatalog3FHL`).


.. GENERATED FROM PYTHON SOURCE LINES 72-76

.. code-block:: python3


    CATALOG_REGISTRY









.. GENERATED FROM PYTHON SOURCE LINES 77-85

Load catalogs
-------------

If you have run `gammapy download datasets` or
`gammapy download tutorials`, you have a copy of the catalogs as FITS
files in `$GAMMAPY_DATA/catalogs`, and that is the default location
where `~gammapy.catalog` loads from.


.. GENERATED FROM PYTHON SOURCE LINES 85-92

.. code-block:: python3


    # # # !ls -1 $GAMMAPY_DATA/catalogs

    ""
    # # # !ls -1 $GAMMAPY_DATA/catalogs/fermi









.. GENERATED FROM PYTHON SOURCE LINES 93-95

So a catalog can be loaded directly from its corresponding class


.. GENERATED FROM PYTHON SOURCE LINES 95-102

.. code-block:: python3


    from gammapy.catalog import SourceCatalog4FGL

    catalog = SourceCatalog4FGL()
    print("Number of sources :", len(catalog.table))






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Number of sources : 6659




.. GENERATED FROM PYTHON SOURCE LINES 103-107

Note that it loads the default catalog from `$GAMMAPY_DATA/catalogs`,
you could pass a different `filename` when creating the catalog. For
example here we load an older version of 4FGL catalog:


.. GENERATED FROM PYTHON SOURCE LINES 107-112

.. code-block:: python3


    catalog = SourceCatalog4FGL("$GAMMAPY_DATA/catalogs/fermi/gll_psc_v20.fit.gz")
    print("Number of sources :", len(catalog.table))






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/core.py:2042: UnitsWarning: '_' did not parse as fits unit: At col 0, Unit '_' not supported by the FITS standard.  If this is meant to be a custom unit, define it with 'u.def_unit'. To have it recognized inside a file reader or other code, enable it with 'u.add_enabled_units'. For details, see https://docs.astropy.org/en/latest/units/combining_and_defining.html
      warnings.warn(msg, UnitsWarning)
    Number of sources : 5066




.. GENERATED FROM PYTHON SOURCE LINES 113-120

Alternatively you can load a catalog by name via
`CATALOG_REGISTRY.get_cls(name)()` (note the `()` to instantiate a
catalog object from the catalog class - only this will load the catalog
and be useful), or by importing the catalog class
(e.g. `~gammapy.catalog.SourceCatalog3FGL`) directly. The two ways are equivalent, the
result will be the same.


.. GENERATED FROM PYTHON SOURCE LINES 120-133

.. code-block:: python3


    # FITS file is loaded
    catalog = CATALOG_REGISTRY.get_cls("3fgl")()
    catalog

    ""
    # Let's load the source catalogs we will use throughout this tutorial
    catalog_gammacat = CATALOG_REGISTRY.get_cls("gamma-cat")()
    catalog_3fhl = CATALOG_REGISTRY.get_cls("3fhl")()
    catalog_4fgl = CATALOG_REGISTRY.get_cls("4fgl")()
    catalog_hgps = CATALOG_REGISTRY.get_cls("hgps")()









.. GENERATED FROM PYTHON SOURCE LINES 134-146

Catalog table
-------------

Source catalogs are given as `FITS` files that contain one or multiple
tables.

However, you can also access the underlying `astropy.table.Table` for
a catalog, and the row data as a Python `dict`. This can be useful if
you want to do something that is not pre-scripted by the
`~gammapy.catalog.SourceCatalog` classes, such as e.g. selecting sources by sky
position or association class, or accessing special source information.


.. GENERATED FROM PYTHON SOURCE LINES 146-156

.. code-block:: python3


    type(catalog_3fhl.table)

    ""
    len(catalog_3fhl.table)

    ""
    catalog_3fhl.table[:3][["Source_Name", "RAJ2000", "DEJ2000"]]









.. GENERATED FROM PYTHON SOURCE LINES 157-161

Note that the catalogs object include a helper property that gives
directly the sources positions as a `~astropy.coordinates.SkyCoord` object (we will show an
usage example in the following).


.. GENERATED FROM PYTHON SOURCE LINES 161-165

.. code-block:: python3


    catalog_3fhl.positions[:3]









.. GENERATED FROM PYTHON SOURCE LINES 166-180

Source object
-------------

Select a source
~~~~~~~~~~~~~~~

The catalog entries for a single source are represented by a
`~gammapy.catalog.SourceCatalogObject`. In order to select a source object index into
the catalog using `[]`, with a catalog table row index (zero-based,
first row is `[0]`), or a source name. If a name is given, catalog
table columns with source names and association names (“ASSOC1” in the
example below) are searched top to bottom. There is no name resolution
web query.


.. GENERATED FROM PYTHON SOURCE LINES 180-199

.. code-block:: python3


    source = catalog_4fgl[49]
    source

    ""
    source.row_index, source.name

    ""
    source = catalog_4fgl["4FGL J0010.8-2154"]
    source.row_index, source.name

    ""
    source.data["ASSOC1"]

    ""
    source = catalog_4fgl["PKS 0008-222"]
    source.row_index, source.name






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '




.. GENERATED FROM PYTHON SOURCE LINES 200-209

Note that you can also do a `for source in catalog` loop, to find or
process sources of interest.

Source information
~~~~~~~~~~~~~~~~~~

The source objects have a `data` property that contains the
information of the catalog row corresponding to the source.


.. GENERATED FROM PYTHON SOURCE LINES 209-216

.. code-block:: python3


    source.data["Npred"]

    ""
    source.data["GLON"], source.data["GLAT"]









.. GENERATED FROM PYTHON SOURCE LINES 217-220

As for the catalog object, the source object has a `position`
property.


.. GENERATED FROM PYTHON SOURCE LINES 220-224

.. code-block:: python3


    source.position.galactic









.. GENERATED FROM PYTHON SOURCE LINES 225-235

Select a catalog subset
-----------------------

The catalog objects support selection using boolean arrays (of the same
length), so one can create a new catalog as a subset of the main catalog
that verify a set of conditions.

In the next example we selection only few of the brightest sources
brightest sources in the 100 to 200 GeV energy band.


.. GENERATED FROM PYTHON SOURCE LINES 235-251

.. code-block:: python3


    mask_bright = np.zeros(len(catalog_3fhl.table), dtype=bool)
    for k, source in enumerate(catalog_3fhl):
        flux = source.spectral_model().integral(100 * u.GeV, 200 * u.GeV).to("cm-2 s-1")
        if flux > 1e-10 * u.Unit("cm-2 s-1"):
            mask_bright[k] = True
            print(f"{source.row_index:<7d} {source.name:20s} {flux:.3g}")

    ""
    catalog_3fhl_bright = catalog_3fhl[mask_bright]
    catalog_3fhl_bright

    ""
    catalog_3fhl_bright.table["Source_Name"]






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    352     3FHL J0534.5+2201    2.99e-10 1 / (cm2 s)
    553     3FHL J0851.9-4620e   1.24e-10 1 / (cm2 s)
    654     3FHL J1036.3-5833e   1.57e-10 1 / (cm2 s)
    691     3FHL J1104.4+3812    3.34e-10 1 / (cm2 s)
    1111    3FHL J1653.8+3945    1.27e-10 1 / (cm2 s)
    1219    3FHL J1824.5-1351e   1.77e-10 1 / (cm2 s)
    1361    3FHL J2028.6+4110e   1.75e-10 1 / (cm2 s)




.. GENERATED FROM PYTHON SOURCE LINES 252-256

Similarly we can select only sources within a region of interest. Here
for example we use the `position` property of the catalog object to
select sources whitin 5 degrees from “PKS 0008-222”:


.. GENERATED FROM PYTHON SOURCE LINES 256-265

.. code-block:: python3


    source = catalog_4fgl["PKS 0008-222"]
    mask_roi = source.position.separation(catalog_4fgl.positions) < 5 * u.deg

    ""
    catalog_4fgl_roi = catalog_4fgl[mask_roi]
    print("Number of sources :", len(catalog_4fgl_roi.table))






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    Number of sources : 15




.. GENERATED FROM PYTHON SOURCE LINES 266-282

Source models
-------------

The `~gammapy.catalog.SourceCatalogObject` classes have a
`~gammapy.catalog.SourceCatalogObject.sky_model()` model which creates a
`~gammapy.modeling.models.SkyModel` object, with model parameter values
and parameter errors from the catalog filled in.

In most cases, the `~gammapy.catalog.SourceCatalogObject.spectral_model()` method provides the
`~gammapy.modeling.models.SpectralModel` part of the sky model, and the
`~gammapy.catalog.SourceCatalogObject.spatial_model()` method the `~gammapy.modeling.models.SpatialModel`
part individually.

We use the `~gammapy.catalog.SourceCatalog3FHL` for the examples in
this section.


.. GENERATED FROM PYTHON SOURCE LINES 282-305

.. code-block:: python3


    source = catalog_4fgl["PKS 2155-304"]

    ""
    model = source.sky_model()
    model

    ""
    print(model)

    ""
    print(model.spatial_model)

    ""
    print(model.spectral_model)

    ""
    energy_bounds = (100 * u.MeV, 100 * u.GeV)
    opts = dict(sed_type="e2dnde", yunits=u.Unit("TeV cm-2 s-1"))
    model.spectral_model.plot(energy_bounds, **opts)
    model.spectral_model.plot_error(energy_bounds, **opts)





.. image-sg:: /tutorials/api/images/sphx_glr_catalog_001.png
   :alt: catalog
   :srcset: /tutorials/api/images/sphx_glr_catalog_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    SkyModel

      Name                      : 4FGL J2158.8-3013
      Datasets names            : None
      Spectral model type       : LogParabolaSpectralModel
      Spatial  model type       : PointSpatialModel
      Temporal model type       : 
      Parameters:
        amplitude                     :   1.34e-11   +/- 1.5e-13 1 / (cm2 MeV s)
        reference             (frozen):   1146.894       MeV         
        alpha                         :      1.767   +/-    0.01             
        beta                          :      0.041   +/-    0.00             
        lon_0                         :    329.714   +/-    0.00 deg         
        lat_0                         :    -30.225   +/-    0.00 deg         


    PointSpatialModel

      type   name    value    unit   error   ...    max    frozen is_norm link
    ------- ----- ----------- ---- --------- ... --------- ------ ------- ----
    spatial lon_0  3.2971e+02  deg 3.735e-03 ...       nan  False   False     
    spatial lat_0 -3.0225e+01  deg 3.227e-03 ... 9.000e+01  False   False     
    LogParabolaSpectralModel

      type      name     value         unit      ... max frozen is_norm link
    -------- --------- ---------- -------------- ... --- ------ ------- ----
    spectral amplitude 1.3413e-11 cm-2 MeV-1 s-1 ... nan  False    True     
    spectral reference 1.1469e+03            MeV ... nan   True   False     
    spectral     alpha 1.7672e+00                ... nan  False   False     
    spectral      beta 4.0590e-02                ... nan  False   False     




.. GENERATED FROM PYTHON SOURCE LINES 306-311

You can create initial source models for your analyses using the
`~gammapy.catalog.SourceCatalog.to_models()` method of the catalog objects. Here for example we
create a `~gammapy.modeling.models.Models` object from the 4FGL catalog subset we previously
defined:


.. GENERATED FROM PYTHON SOURCE LINES 311-316

.. code-block:: python3


    models_4fgl_roi = catalog_4fgl_roi.to_models()
    models_4fgl_roi






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '
    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '




.. GENERATED FROM PYTHON SOURCE LINES 317-327

Specificities of the HGPS catalog
---------------------------------

Using the `~gammapy.catalog.SourceCatalog.to_models()` method for the
`~gammapy.catalog.SourceCatalogHGPS` will return only the models
components of the sources retained in the main catalog, several
candidate objects appears only in the Gaussian components table (see
section 4.9 of the HGPS paper, https://arxiv.org/abs/1804.02432). To
access these components you can do the following:


.. GENERATED FROM PYTHON SOURCE LINES 327-334

.. code-block:: python3


    discarded_ind = np.where(
        ["Discarded" in _ for _ in catalog_hgps.table_components["Component_Class"]]
    )[0]
    discarded_table = catalog_hgps.table_components[discarded_ind]









.. GENERATED FROM PYTHON SOURCE LINES 335-338

There is no spectral model available for these components but you can
access their spatial models:


.. GENERATED FROM PYTHON SOURCE LINES 338-344

.. code-block:: python3


    discarded_spatial = [
        catalog_hgps.gaussian_component(idx).spatial_model() for idx in discarded_ind
    ]









.. GENERATED FROM PYTHON SOURCE LINES 345-351

In addition to the source components the HGPS catalog include a large
scale diffuse component built by fitting a gaussian model in a sliding
window along the Galactic plane. Information on this model can be
accessed via the propoerties `~gammapy.catalog.SourceCatalogHGPS.table_large_scale_component` and
`~gammapy.catalog.SourceCatalogHGPS.large_scale_component` of `~gammapy.catalog.SourceCatalogHGPS`.


.. GENERATED FROM PYTHON SOURCE LINES 351-358

.. code-block:: python3


    # here we show the 5 first elements of the table
    catalog_hgps.table_large_scale_component[:5]
    # you can also try :
    # help(catalog_hgps.large_scale_component)









.. GENERATED FROM PYTHON SOURCE LINES 359-365

Flux points
-----------

The flux points are available via the `~gammapy.catalog.SourceCatalogObject.flux_points` property as a
`~gammapy.estimators.FluxPoints` object.


.. GENERATED FROM PYTHON SOURCE LINES 365-379

.. code-block:: python3


    source = catalog_4fgl["PKS 2155-304"]
    flux_points = source.flux_points

    ""
    flux_points

    ""
    flux_points.to_table(sed_type="flux")

    ""
    flux_points.plot(sed_type="e2dnde")





.. image-sg:: /tutorials/api/images/sphx_glr_catalog_002.png
   :alt: catalog
   :srcset: /tutorials/api/images/sphx_glr_catalog_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '




.. GENERATED FROM PYTHON SOURCE LINES 380-387

Lightcurves
-----------

The Fermi catalogs contain lightcurves for each source. It is available
via the `source.lightcurve` method as a
`~gammapy.estimators.FluxPoints` object with a time axis.


.. GENERATED FROM PYTHON SOURCE LINES 387-400

.. code-block:: python3


    lightcurve = catalog_4fgl["4FGL J0349.8-2103"].lightcurve()

    ""
    lightcurve

    ""
    lightcurve.to_table(format="lightcurve", sed_type="flux")

    ""
    lightcurve.plot()





.. image-sg:: /tutorials/api/images/sphx_glr_catalog_003.png
   :alt: catalog
   :srcset: /tutorials/api/images/sphx_glr_catalog_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/adonath/github/adonath/gammapy/.tox/build_docs/lib/python3.9/site-packages/astropy/units/quantity.py:1233: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError.
      warnings.warn('The truth value of a Quantity is ambiguous. '




.. GENERATED FROM PYTHON SOURCE LINES 401-406

Pretty-print source information
-------------------------------

A source object has a nice string representation that you can print.


.. GENERATED FROM PYTHON SOURCE LINES 406-411

.. code-block:: python3


    source = catalog_hgps["MSH 15-52"]
    print(source)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    *** Basic info ***

    Catalog row index (zero-based) : 18
    Source name          : HESS J1514-591
    Analysis reference   : HGPS
    Source class         : PWN
    Identified object    : MSH 15-52
    Gamma-Cat id         : 79


    *** Info from map analysis ***

    RA                   :  228.499 deg = 15h14m00s
    DEC                  :  -59.161 deg = -59d09m41s
    GLON                 :  320.315 +/- 0.008 deg
    GLAT                 :   -1.188 +/- 0.007 deg
    Position Error (68%) : 0.020 deg
    Position Error (95%) : 0.033 deg
    ROI number           : 13
    Spatial model        : 3-Gaussian
    Spatial components   : HGPSC 023, HGPSC 024, HGPSC 025
    TS                   : 1763.4
    sqrt(TS)             : 42.0
    Size                 : 0.145 +/- 0.026 (UL: 0.000) deg
    R70                  : 0.215 deg
    RSpec                : 0.215 deg
    Total model excess   : 3502.8
    Excess in RSpec      : 2440.5
    Model Excess in RSpec : 2414.3
    Background in RSpec  : 1052.5
    Livetime             : 41.4 hours
    Energy threshold     : 0.61 TeV
    Source flux (>1 TeV) : (6.434 +/- 0.211) x 10^-12 cm^-2 s^-1 = (28.47 +/- 0.94) % Crab

    Fluxes in RSpec (> 1 TeV):
    Map measurement                : 4.552 x 10^-12 cm^-2 s^-1 = 20.14 % Crab
    Source model                   : 4.505 x 10^-12 cm^-2 s^-1 = 19.94 % Crab
    Other component model          : 0.000 x 10^-12 cm^-2 s^-1 =  0.00 % Crab
    Large scale component model    : 0.000 x 10^-12 cm^-2 s^-1 =  0.00 % Crab
    Total model                    : 4.505 x 10^-12 cm^-2 s^-1 = 19.94 % Crab
    Containment in RSpec                :  70.0 %
    Contamination in RSpec              :   0.0 %
    Flux correction (RSpec -> Total)    : 142.8 %
    Flux correction (Total -> RSpec)    :  70.0 %

    *** Info from spectral analysis ***

    Livetime             : 13.7 hours
    Energy range:        : 0.38 to 61.90 TeV
    Background           : 1825.9
    Excess               : 2061.1
    Spectral model       : ECPL
    TS ECPL over PL      : 10.2
    Best-fit model flux(> 1 TeV) : (5.720 +/- 0.417) x 10^-12 cm^-2 s^-1  = (25.31 +/- 1.84) % Crab
    Best-fit model energy flux(1 to 10 TeV) : (20.779 +/- 1.878) x 10^-12 erg cm^-2 s^-1
    Pivot energy         : 1.54 TeV
    Flux at pivot energy : (2.579 +/- 0.083) x 10^-12 cm^-2 s^-1 TeV^-1  = (11.41 +/- 0.24) % Crab
    PL   Flux(> 1 TeV)   : (5.437 +/- 0.186) x 10^-12 cm^-2 s^-1  = (24.06 +/- 0.82) % Crab
    PL   Flux(@ 1 TeV)   : (6.868 +/- 0.241) x 10^-12 cm^-2 s^-1 TeV^-1  = (30.39 +/- 0.69) % Crab
    PL   Index           : 2.26 +/- 0.03
    ECPL   Flux(@ 1 TeV) : (6.860 +/- 0.252) x 10^-12 cm^-2 s^-1 TeV^-1  = (30.35 +/- 0.72) % Crab
    ECPL   Flux(> 1 TeV) : (5.720 +/- 0.417) x 10^-12 cm^-2 s^-1  = (25.31 +/- 1.84) % Crab
    ECPL Index           : 2.05 +/- 0.06
    ECPL Lambda          : 0.052 +/- 0.014 TeV^-1
    ECPL E_cut           : 19.20 +/- 5.01 TeV

    *** Flux points info ***

    Number of flux points: 6
    Flux points table: 

    e_ref  e_min  e_max        dnde         dnde_errn       dnde_errp        dnde_ul     is_ul
     TeV    TeV    TeV   1 / (cm2 s TeV) 1 / (cm2 s TeV) 1 / (cm2 s TeV) 1 / (cm2 s TeV)      
    ------ ------ ------ --------------- --------------- --------------- --------------- -----
     0.562  0.383  0.825       2.439e-11       1.419e-12       1.509e-12       2.732e-11 False
     1.212  0.825  1.778       4.439e-12       2.489e-13       2.654e-13       4.970e-12 False
     2.738  1.778  4.217       7.295e-13       4.788e-14       4.898e-14       8.302e-13 False
     6.190  4.217  9.085       1.305e-13       1.220e-14       1.282e-14       1.571e-13 False
    13.991  9.085 21.544       1.994e-14       2.723e-15       2.858e-15       2.588e-14 False
    31.623 21.544 46.416       9.474e-16       3.480e-16       4.329e-16       1.919e-15 False

    *** Gaussian component info ***

    Number of components: 3
    Spatial components   : HGPSC 023, HGPSC 024, HGPSC 025

    Component HGPSC 023:
    GLON                 :  320.303 +/- 0.005 deg
    GLAT                 :   -1.124 +/- 0.007 deg
    Size                 : 0.057 +/- 0.005 deg
    Flux (>1 TeV)        : (2.01 +/- 0.23) x 10^-12 cm^-2 s^-1 = (8.9 +/- 1.0) % Crab

    Component HGPSC 024:
    GLON                 :  320.298 +/- 0.020 deg
    GLAT                 :   -1.168 +/- 0.021 deg
    Size                 : 0.206 +/- 0.020 deg
    Flux (>1 TeV)        : (2.54 +/- 0.29) x 10^-12 cm^-2 s^-1 = (11.2 +/- 1.3) % Crab

    Component HGPSC 025:
    GLON                 :  320.351 +/- 0.005 deg
    GLAT                 :   -1.284 +/- 0.007 deg
    Size                 : 0.055 +/- 0.005 deg
    Flux (>1 TeV)        : (1.88 +/- 0.22) x 10^-12 cm^-2 s^-1 = (8.3 +/- 1.0) % Crab


    *** Source associations info ***

      Source_Name    Association_Catalog    Association_Name   Separation
                                                                  deg    
    ---------------- ------------------- --------------------- ----------
      HESS J1514-591                2FHL    2FHL J1514.0-5915e   0.098903
      HESS J1514-591                3FGL     3FGL J1513.9-5908   0.026914
      HESS J1514-591                3FGL    3FGL J1514.0-5915e   0.094834
      HESS J1514-591                COMP            G320.4-1.2   0.070483
      HESS J1514-591                 PSR              B1509-58   0.026891

    *** Source identification info ***

    Source_Name: HESS J1514-591
    Identified_Object: MSH 15-52
    Class: PWN
    Evidence: Morphology
    Reference: 2005A%26A...435L..17A
    Distance_Reference: SNRCat
    Distance: 5.199999809265137 kpc
    Distance_Min: 3.799999952316284 kpc
    Distance_Max: 6.599999904632568 kpc





.. GENERATED FROM PYTHON SOURCE LINES 412-416

You can also call `source.info()` instead and pass as an option what
information to print. The options available depend on the catalog, you
can learn about them using `help()`


.. GENERATED FROM PYTHON SOURCE LINES 416-423

.. code-block:: python3


    help(source.info)

    ""
    print(source.info("associations"))

    ""




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Help on method info in module gammapy.catalog.hess:

    info(info='all') method of gammapy.catalog.hess.SourceCatalogObjectHGPS instance
        Info string.
    
        Parameters
        ----------
        info : {'all', 'basic', 'map', 'spec', 'flux_points', 'components', 'associations', 'id'}
            Comma separated list of options


    *** Source associations info ***

      Source_Name    Association_Catalog    Association_Name   Separation
                                                                  deg    
    ---------------- ------------------- --------------------- ----------
      HESS J1514-591                2FHL    2FHL J1514.0-5915e   0.098903
      HESS J1514-591                3FGL     3FGL J1513.9-5908   0.026914
      HESS J1514-591                3FGL    3FGL J1514.0-5915e   0.094834
      HESS J1514-591                COMP            G320.4-1.2   0.070483
      HESS J1514-591                 PSR              B1509-58   0.026891






.. _sphx_glr_download_tutorials_api_catalog.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/gammapy/gammapy-webpage/master?urlpath=lab/tree/notebooks/dev/tutorials/api/catalog.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: catalog.py <catalog.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: catalog.ipynb <catalog.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
