Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[417, null]], "0.10 (Jan 28, 2019)": [[418, null]], "0.11 (Mar 29, 2019)": [[419, null]], "0.12 (May 30, 2019)": [[420, null]], "0.13 (Jul 26, 2019)": [[421, null]], "0.14 (Sep 30, 2019)": [[422, null]], "0.15 (Dec 3, 2019)": [[423, null]], "0.16 (Feb 1, 2020)": [[424, null]], "0.17 (Apr 1, 2020)": [[425, null]], "0.18 (Nov 4th, 2020)": [[426, null]], "0.18.1 (Nov 6th, 2020)": [[427, null]], "0.18.2 (Nov 19th, 2020)": [[428, null]], "0.19 (Nov 22nd, 2021)": [[429, null]], "0.2 (Apr 13, 2015)": [[430, null]], "0.20 (May 12th, 2022)": [[431, null]], "0.20.1 (June 16th, 2022)": [[432, null]], "0.3 (Aug 13, 2015)": [[433, null]], "0.4 (Apr 20, 2016)": [[434, null]], "0.5 (Nov 22, 2016)": [[435, null]], "0.6 (Apr 28, 2017)": [[436, null]], "0.7 (Feb 28, 2018)": [[437, null]], "0.8 (Sep 23, 2018)": [[438, null]], "0.9 (Nov 29, 2018)": [[439, null]], "1.0 (November 10th, 2022)": [[440, null]], "1.0.1 (March 14th, 2023)": [[441, null]], "1.0.2 (December 6th, 2023)": [[442, null]], "1.1 (June 13th 2023)": [[443, null]], "1.2 (February 29th 2024)": [[444, null]], "1.3 (October xx, 2024)": [[445, null]], "1D Spectral": [[496, "d-spectral"]], "1D spectrum simulation": [[456, null]], "2.0 (unreleased)": [[446, null]], "2D Image": [[496, "d-image"]], "2D map fitting": [[458, null]], "3D Cube": [[496, "d-cube"]], "3D detailed analysis": [[461, null]], "3D map simulation": [[469, null]], "A fully configured Flux Points Estimation": [[480, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[453, "a-note-on-statistics"]], "A note on the internal representation": [[480, "a-note-on-the-internal-representation"]], "API Links": [[379, "api-links"]], "API changes": [[440, "api-changes"], [443, "api-changes"], [444, "api-changes"], [445, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[118, null]], "Abstract": [[383, "abstract"], [384, "abstract"], [385, "abstract"], [386, "abstract"], [387, "abstract"], [388, "abstract"], [390, "abstract"], [391, "abstract"], [392, "abstract"], [393, "abstract"], [394, "abstract"], [395, "abstract"], [396, "abstract"], [397, "abstract"], [398, "abstract"], [399, "abstract"], [400, "abstract"], [401, "abstract"], [402, "abstract"], [403, "abstract"], [404, "abstract"], [405, "abstract"], [406, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[381, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[484, "accessing-data"]], "Accessing and visualising results": [[457, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[480, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[479, "accessing-contents-of-a-dataset"]], "Accessor methods": [[528, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[449, null]], "Adaptive smoothing": [[457, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[168, null]], "Add a model on multiple datasets": [[486, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[389, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[484, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[484, "adding-non-contiguous-axes"]], "Additional Models": [[401, "additional-models"]], "Additional PSF classes": [[522, "additional-psf-classes"]], "Additional utilities": [[574, "additional-utilities"]], "Aim": [[486, "aim"]], "Alternative": [[402, "alternative"]], "Alternatives": [[386, "alternatives"], [389, "alternatives"], [392, "alternatives"], [394, "alternatives"], [395, "alternatives"], [396, "alternatives"], [398, "alternatives"], [399, "alternatives"], [405, "alternatives"]], "Alternatives / Outlook": [[391, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[454, "analysis-configuration"], [461, "analysis-configuration"], [470, "analysis-configuration"], [500, "analysis-configuration"]], "Analysis steps": [[574, "analysis-steps"]], "Analysis workflow": [[574, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (PSF_TABLE)": [[522, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[378, "assert-convention"]], "Assign to model to all datasets": [[471, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[486, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[507, null]], "Astrophysical source population models": [[506, null]], "Astrophysics": [[505, null]], "Authorship policy": [[404, "authorship-policy"]], "BACKEND_DEFAULT": [[320, null]], "BSD or GPL license?": [[378, "bsd-or-gpl-license"]], "Background": [[491, "background"], [519, null]], "Background / What we have now": [[393, "background-what-we-have-now"]], "Background Model Handling": [[400, "background-model-handling"]], "Background estimation": [[483, "background-estimation"], [524, "background-estimation"]], "Background2D": [[147, null]], "Background3D": [[148, null]], "BackgroundIRF": [[149, null]], "BackgroundIRFModel": [[389, "backgroundirfmodel"]], "BackgroundModel": [[389, "backgroundmodel"]], "Basic image exploration and fitting": [[463, null]], "Basic operators": [[484, "basic-operators"]], "Bayesian blocks": [[476, "bayesian-blocks"]], "Bin volume and angular size": [[529, "bin-volume-and-angular-size"]], "Boundary mask": [[485, "boundary-mask"]], "Broken power law spectral model": [[543, null]], "BrokenPowerLawSpectralModel": [[218, null]], "Bug fixes and improvements": [[431, "bug-fixes-and-improvements"], [440, "bug-fixes-and-improvements"], [443, "bug-fixes-and-improvements"], [444, "bug-fixes-and-improvements"], [445, "bug-fixes-and-improvements"]], "Build": [[408, "build"]], "Building 1D datasets from the new observations": [[471, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[470, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[470, "building-the-3d-analysis-configuration"]], "Built-in models": [[573, "built-in-models"]], "Bundled gammapy.extern code": [[378, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[404, "citation-cff"]], "CLUMPY": [[504, "clumpy"]], "CTA 1DC": [[491, "cta-1dc"]], "CTAO with Gammapy": [[491, null]], "Caplog fixture": [[378, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[406, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[406, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[406, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[577, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[578, "cash-counts-statistic"]], "CashCountsStatistic": [[286, null]], "Catalog table": [[478, "catalog-table"]], "Caveat": [[577, "caveat"]], "Changelog": [[398, "changelog"]], "Check Python code": [[379, "check-python-code"]], "Check broken links": [[379, "check-broken-links"]], "Check setup": [[448, "check-setup"], [450, "check-setup"], [453, "check-setup"], [454, "check-setup"], [455, "check-setup"], [456, "check-setup"], [457, "check-setup"], [458, "check-setup"], [459, "check-setup"], [461, "check-setup"], [462, "check-setup"], [463, "check-setup"], [464, "check-setup"], [465, "check-setup"], [466, "check-setup"], [467, "check-setup"], [470, "check-setup"], [471, "check-setup"], [472, "check-setup"], [473, "check-setup"], [477, "check-setup"], [478, "check-setup"], [479, "check-setup"], [481, "check-setup"], [483, "check-setup"], [484, "check-setup"], [485, "check-setup"], [486, "check-setup"], [487, "check-setup"], [489, "check-setup"], [491, "check-setup"], [492, "check-setup"], [493, "check-setup"], [494, "check-setup"], [500, "check-setup"], [501, "check-setup"], [502, "check-setup"]], "Check the dataset we produced": [[493, "check-the-dataset-we-produced"]], "Check your setup": [[413, "check-your-setup"]], "Checker": [[352, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[379, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[404, "citation-scheme"]], "Class attributes": [[379, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[397, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[378, "clobber-or-overwrite"]], "Code in RST files": [[379, "code-in-rst-files"]], "Code in docstrings in Python files": [[379, "code-in-docstrings-in-python-files"]], "Code quality": [[408, "code-quality"]], "Collection of the personal information of authors": [[404, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[581, "colormaps"]], "Combining event lists and GTIs": [[513, "combining-event-lists-and-gtis"]], "Combining two Models": [[486, "combining-two-models"]], "Command line tools": [[576, null]], "Command line tools using click": [[378, "command-line-tools-using-click"]], "Command not found": [[576, "command-not-found"]], "Common API": [[480, "common-api"]], "Compare against the literature": [[455, "compare-against-the-literature"]], "Compare results": [[470, "compare-results"]], "Compound Spectral Model": [[487, "compound-spectral-model"]], "Compound spectral model": [[544, null]], "CompoundSpectralModel": [[219, null]], "Computation times": [[447, null], [452, null], [460, null], [468, null], [474, null], [490, null], [495, null], [497, null], [499, null], [503, null], [531, null], [541, null], [562, null], [572, null]], "Compute Flux Points": [[453, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[459, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[463, "compute-images"]], "Compute sensitivity": [[448, "compute-sensitivity"]], "Computing contours using stat_contour": [[481, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[481, "computing-contours-using-stat-surface"]], "Computing flux points": [[501, "computing-flux-points"]], "Conda Environments": [[409, "conda-environments"]], "Confidence contours": [[481, "confidence-contours"]], "Configurable analysis": [[574, "configurable-analysis"]], "Configuration": [[467, "configuration"]], "Configuration for stacked and joint analysis": [[461, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[454, "configuration-of-the-analysis"]], "Constant spatial model": [[532, null]], "Constant spectral model": [[545, null]], "Constant temporal model": [[563, null]], "ConstantFluxSpatialModel": [[220, null]], "ConstantSpatialModel": [[221, null]], "ConstantSpectralModel": [[222, null]], "ConstantTemporalModel": [[223, null]], "Context": [[450, "context"], [451, "context"], [453, "context"], [454, "context"], [455, "context"], [456, "context"], [457, "context"], [458, "context"], [459, "context"], [462, "context"], [464, "context"], [465, "context"], [467, "context"], [469, "context"], [470, "context"], [471, "context"], [472, "context"], [475, "context"], [476, "context"], [485, "context"], [488, "context"], [489, "context"], [500, "context"], [501, "context"]], "Continuous integration": [[408, "continuous-integration"]], "Contribution in conferences": [[404, "contribution-in-conferences"]], "Contributors": [[417, "contributors"], [418, "contributors"], [419, "contributors"], [420, "contributors"], [421, "contributors"], [422, "contributors"], [423, "contributors"], [424, "contributors"], [425, "contributors"], [426, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"], [435, "contributors"], [436, "contributors"], [437, "contributors"], [438, "contributors"], [439, "contributors"], [440, "contributors"], [441, "contributors"], [442, "contributors"], [443, "contributors"], [444, "contributors"], [445, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[378, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[378, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[529, "coordinates-defined-by-the-regiongeom"]], "Correct format for bullet point list": [[379, "correct-format-for-bullet-point-list"]], "Counts": [[492, "counts"]], "Counts and fit statistics": [[578, "counts-and-fit-statistics"]], "Counts statistics classes": [[578, "counts-statistics-classes"]], "Covariance": [[209, null]], "Covariance and parameters errors": [[481, "covariance-and-parameters-errors"]], "CovarianceResult": [[210, null]], "Create DL4 product - PSFMap": [[482, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[480, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[485, "create-a-mask-in-energy"]], "Create a stacked dataset": [[459, "create-a-stacked-dataset"]], "Create edisp kernel map": [[482, "create-edisp-kernel-map"]], "Create exclusion mask": [[453, "create-exclusion-mask"], [459, "create-exclusion-mask"]], "Create exposure map": [[482, "create-exposure-map"]], "Create the energy-dependent temporal model": [[466, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[501, "create-the-maker-classes-to-be-used"]], "Create the makers": [[450, "create-the-makers"]], "Create the mask from a catalog of sources": [[485, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[485, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[485, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[485, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[466, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[484, "creating-wcs-maps"]], "Creating a RegionGeom": [[529, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[529, "creating-a-regionndmap"]], "Creating a mask for fitting": [[485, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[485, "creating-a-mask-manually"]], "Creating an empty dataset": [[479, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[485, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[484, "creating-from-a-map-geometry"]], "Creating the config file": [[458, "creating-the-config-file"], [459, "creating-the-config-file"]], "Creation of the Flux points": [[454, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[471, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[471, "creation-of-the-datasets"]], "Creation of the model": [[454, "creation-of-the-model"]], "Cube plotting": [[484, "cube-plotting"]], "Cumulative excess and significance": [[450, "cumulative-excess-and-significance"]], "Current status": [[403, "current-status"]], "Custom models": [[573, "custom-models"]], "Cutouts": [[484, "cutouts"]], "Cython": [[408, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[404, "dco-implementation"]], "DL3 DR1": [[494, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[305, null]], "Dark matter": [[504, null]], "Dark matter spatial and spectral models": [[477, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[393, "data-fitting"]], "Data access and selection (DL3)": [[513, null]], "Data analysis": [[496, "data-analysis"]], "Data analysis subpackages in gammapy": [[384, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[387, "data-and-observation-handling"]], "Data and models files": [[462, "data-and-models-files"]], "Data exploration": [[496, "data-exploration"]], "Data reduction": [[393, "data-reduction"], [461, "data-reduction"], [461, "id1"], [475, "data-reduction"], [500, "data-reduction"], [501, "data-reduction"]], "Data reduction (DL3 to DL4)": [[524, null]], "Data reduction into a MapDataset": [[493, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[483, "data-reduction-loop"]], "Data selection": [[475, "data-selection"]], "Data structures": [[502, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [390, "dataset"], [483, "dataset"]], "Dataset helper / convenience methods": [[390, "dataset-helper-convenience-methods"]], "Dataset serialization": [[390, "dataset-serialization"]], "Dataset simulations": [[455, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[480, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[224, null]], "Datasets": [[100, null], [387, "datasets"], [390, "datasets"], [405, "datasets"], [479, "datasets"]], "Datasets (DL4)": [[512, null]], "Datasets - Reduced data, IRFs, models": [[479, null]], "Datasets serialization": [[462, "datasets-serialization"]], "DatasetsMaker": [[169, null]], "Datastore": [[491, "datastore"]], "Dealing with links": [[379, "dealing-with-links"]], "Decision": [[383, "decision"], [384, "decision"], [385, "decision"], [386, "decision"], [387, "decision"], [388, "decision"], [389, "decision"], [390, "decision"], [391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"], [397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"], [401, "decision"], [402, "decision"], [403, "decision"], [404, "decision"], [405, "decision"], [406, "decision"]], "Define Target Region": [[453, "define-target-region"]], "Define an Observation": [[465, "define-an-observation"]], "Define an observation and make a dataset": [[466, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[448, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[463, "define-map-geometry"]], "Define the MapDataset": [[465, "define-the-mapdataset"]], "Define the ON region": [[455, "define-the-on-region"]], "Define the Sky model: a point-like source": [[465, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[450, "define-the-geometries"]], "Define the geometry": [[485, "define-the-geometry"]], "Define the model": [[501, "define-the-model"]], "Define the model to be used": [[470, "define-the-model-to-be-used"], [470, "id3"]], "Define the simulation source model": [[466, "define-the-simulation-source-model"]], "Define time intervals": [[471, "define-time-intervals"]], "Define underlying model": [[471, "define-underlying-model"]], "Defining the datastore and selecting observations": [[501, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[471, "defining-the-geometry"]], "Definition of a Contributor": [[404, "definition-of-a-contributor"]], "Definition of the Maintainer": [[404, "definition-of-the-maintainer"]], "Definition of the data selection": [[470, "definition-of-the-data-selection"], [470, "id1"]], "Definition of the dataset geometry": [[470, "definition-of-the-dataset-geometry"], [470, "id2"]], "Dependencies": [[377, null], [395, "dependencies"]], "Deprecating a function or a class": [[378, "deprecating-a-function-or-a-class"]], "Deprecation": [[403, "deprecation"]], "Derivation of the WStat formula": [[579, null]], "Detailed plan": [[385, "detailed-plan"]], "Developer How To": [[378, null]], "Developer guide": [[380, null]], "Discussion / Alternatives": [[393, "discussion-alternatives"]], "Disk spatial model": [[533, null]], "DiskSpatialModel": [[225, null]], "Dissolve gammapy.background": [[397, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[397, "dissolve-gammapy-image"]], "Distributions": [[395, "distributions"], [395, "id1"]], "Documentation": [[387, "documentation"], [444, "documentation"]], "Documentation How To": [[379, null]], "Documentation building": [[379, "documentation-building"]], "Documentation guidelines": [[379, "documentation-guidelines"]], "Documentation improvements": [[445, "documentation-improvements"]], "Download": [[408, "download"]], "EBL absorption spectral model": [[542, null]], "EBLAbsorptionNormSpectralModel": [[226, null]], "EBL_DATA_BUILTIN": [[227, null]], "EDispKernel": [[150, null]], "EDispKernelMap": [[151, null]], "EDispMap": [[152, null]], "ESTIMATOR_REGISTRY": [[119, null]], "Effective Area": [[482, "effective-area"]], "Effective area": [[491, "effective-area"], [518, null]], "EffectiveAreaTable2D": [[153, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[401, "energy-dependent-spatial-models"]], "Energy Dispersion": [[482, "energy-dispersion"], [492, "energy-dispersion"], [520, null]], "Energy dispersion": [[491, "energy-dispersion"]], "Energy edges": [[514, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[120, null]], "EnergyDependentMultiGaussPSF": [[154, null]], "EnergyDispersion2D": [[155, null]], "Estimating TS": [[578, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[476, null]], "Estimator": [[121, null]], "Estimators": [[405, "estimators"], [480, null]], "Estimators (DL4 to DL5, and DL6)": [[514, null]], "Event Simulation": [[387, "event-simulation"]], "Event lists": [[502, "event-lists"]], "Event sampling": [[465, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[491, "events"], [492, "events"]], "Example": [[577, "example"], [577, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[489, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[489, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[561, "example-of-extrapolation"]], "Example plot": [[532, "example-plot"], [533, "example-plot"], [534, "example-plot"], [535, "example-plot"], [536, "example-plot"], [537, "example-plot"], [538, "example-plot"], [539, "example-plot"], [540, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"], [549, "example-plot"], [550, "example-plot"], [551, "example-plot"], [552, "example-plot"], [553, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"], [557, "example-plot"], [558, "example-plot"], [559, "example-plot"], [560, "example-plot"], [561, "example-plot"], [563, "example-plot"], [564, "example-plot"], [565, "example-plot"], [566, "example-plot"], [567, "example-plot"], [568, "example-plot"], [569, "example-plot"]], "Examples using FluxPointsEstimator": [[514, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[514, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[512, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[524, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[512, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[524, "examples-using-spectrumdatasetmaker"]], "Examples using gammapy.analysis.Analysis": [[515, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[523, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[525, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[578, "excess-and-significance"], [578, "id2"]], "Excess errors": [[578, "excess-errors"], [578, "id4"]], "Excess estimators": [[402, "excess-estimators"]], "ExcessMapEstimator": [[122, null]], "Exclusion masks": [[485, "exclusion-masks"]], "Execution": [[576, "execution"]], "Exemplary additional prior subclasses:": [[406, "exemplary-additional-prior-subclasses"]], "Exercises": [[448, "exercises"], [451, "exercises"], [453, "exercises"], [456, "exercises"], [461, "exercises"], [463, "exercises"], [465, "exercises"], [466, "exercises"], [472, "exercises"], [475, "exercises"], [491, "exercises"], [492, "exercises"], [493, "exercises"], [494, "exercises"], [502, "exercises"], [502, "id1"], [502, "id2"], [502, "id3"]], "Existing code": [[384, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[228, null]], "ExpCutoffPowerLawNormSpectralModel": [[229, null]], "ExpCutoffPowerLawSpectralModel": [[230, null]], "ExpDecay temporal model": [[564, null]], "ExpDecayTemporalModel": [[231, null]], "Expected number of detected events": [[521, "expected-number-of-detected-events"]], "Exploration of the fit results": [[454, "exploration-of-the-fit-results"]], "Explore the fit results": [[450, "explore-the-fit-results"]], "Explore the results": [[450, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[451, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[548, null]], "Exponential cutoff power law spectral model": [[546, null]], "Exponential cutoff power law spectral model used for 3FGL": [[547, null]], "Expose model parameters as attributes": [[389, "expose-model-parameters-as-attributes"]], "Exposure": [[492, "exposure"]], "Extended source using a template": [[465, "extended-source-using-a-template"]], "Extract the light curve": [[471, "extract-the-light-curve"]], "Extract the lightcurve": [[472, "extract-the-lightcurve"]], "Extracting the light curve": [[470, "extracting-the-light-curve"]], "Extracting the ring background": [[459, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[521, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[407, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[462, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[492, null]], "FermiST": [[504, "fermist"]], "Files": [[491, "files"]], "Filling a RegionNDMap": [[529, "filling-a-regionndmap"]], "Filling maps from event lists": [[484, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[484, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[471, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[383, "final-remarks"]], "Final result": [[579, "final-result"]], "Fit": [[211, null], [469, "fit"], [492, "fit"]], "Fit quality and model residuals": [[453, "fit-quality-and-model-residuals"], [455, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[481, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[461, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[461, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[453, "fit-spectrum"], [455, "fit-spectrum"]], "Fit statistics": [[577, null]], "Fit the datasets": [[472, "fit-the-datasets"]], "Fit the model": [[501, "fit-the-model"]], "FitResult": [[212, null]], "Fitting": [[387, "fitting"], [481, null]], "Fitting Multiple Datasets with and without the Prior": [[489, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[489, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[481, "fitting-options"]], "Fitting temporal models": [[472, "fitting-temporal-models"]], "Fitting the obtained light curve": [[472, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[378, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[378, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[480, "flux-points-estimation"]], "Flux Profile Estimation": [[467, null]], "Flux maps": [[514, "flux-maps"]], "Flux maps for annihilation": [[477, "flux-maps-for-annihilation"]], "Flux maps for decay": [[477, "flux-maps-for-decay"]], "Flux point fitting": [[451, null]], "Flux points": [[478, "flux-points"], [500, "flux-points"], [514, "flux-points"]], "Flux quantities": [[514, "flux-quantities"]], "FluxMaps": [[123, null]], "FluxMetaData": [[124, null]], "FluxPoints": [[125, null]], "FluxPointsDataset": [[101, null], [390, "fluxpointsdataset"], [479, "fluxpointsdataset"]], "FluxPointsEstimator": [[126, null]], "FluxProfileEstimator": [[127, null]], "FoV background": [[483, "fov-background"], [523, null]], "FoVAlignment": [[156, null]], "FoVBackgroundMaker": [[170, null]], "FoVBackgroundModel": [[232, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[476, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[486, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[379, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[378, "functions-returning-several-values"]], "Further extensions": [[449, "further-extensions"]], "Further references": [[577, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[492, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[506, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[477, "gamma-ray-spectra-at-production"]], "Gammapy": [[415, null]], "Gammapy Binder": [[408, "id1"]], "Gammapy analysis workflow and package structure": [[574, null]], "Gammapy overview": [[398, "gammapy-overview"]], "Gammapy repository": [[408, "gammapy-repository"]], "Gammapy webpages": [[408, "gammapy-webpages"]], "Gaussian spatial model": [[534, null]], "Gaussian spectral model": [[549, null]], "Gaussian temporal model": [[565, null]], "GaussianSpatialModel": [[233, null]], "GaussianSpectralModel": [[234, null]], "GaussianTemporalModel": [[235, null]], "General Gammapy publications": [[404, "general-gammapy-publications"]], "General code style guidelines": [[384, "general-code-style-guidelines"]], "General conventions": [[378, "general-conventions"]], "General idea and class diagram": [[388, "general-idea-and-class-diagram"]], "General method": [[514, "general-method"]], "General organization of the new approach": [[393, "general-organization-of-the-new-approach"]], "Generalist estimators": [[402, "generalist-estimators"]], "Generalized Gaussian temporal model": [[566, null]], "Generalized gaussian spatial model": [[535, null]], "GeneralizedGaussianSpatialModel": [[236, null]], "GeneralizedGaussianTemporalModel": [[237, null]], "Generating log messages": [[378, "generating-log-messages"]], "Geom": [[191, null]], "Get a fit stat profile for the redshift": [[449, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[381, "get-in-touch-early"]], "Get set up": [[381, "get-set-up"]], "Get the flux points": [[449, "get-the-flux-points"]], "Getting started": [[398, "getting-started"], [410, null], [505, "getting-started"], [506, "getting-started"], [507, "getting-started"]], "Getting started section restructuring": [[398, "getting-started-section-restructuring"]], "Getting started with data": [[513, "getting-started-with-data"]], "Getting started with maps": [[528, "getting-started-with-maps"]], "Getting the reduced dataset": [[458, "getting-the-reduced-dataset"], [459, "getting-the-reduced-dataset"]], "Global Model Handling": [[400, "global-model-handling"]], "Glossary": [[575, "glossary"]], "Glossary and references": [[575, null]], "Goodness of fit": [[579, "goodness-of-fit"]], "Guidelines and specific actions": [[398, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[494, null]], "HAWC data access and reduction": [[493, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[493, null]], "HAWC: 1D dataset for flux point fitting": [[462, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[313, null]], "HEALPix geometry": [[527, "healpix-geometry"]], "HEALPix-based maps": [[527, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[462, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[404, "handling-of-conference-material"]], "Help!?": [[413, "help"]], "Hierarchical clustering of observations": [[488, "hierarchical-clustering-of-observations"]], "Hierarchy": [[405, "hierarchy"]], "High Level Analysis Interface": [[515, null]], "High level interface": [[387, "high-level-interface"], [500, null]], "How To": [[398, "how-to"], [516, null]], "How to contribute to Gammapy": [[381, null]], "How to get data values": [[484, "how-to-get-data-values"]], "How to handle API breaking changes?": [[378, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[407, null]], "How to make a pull request": [[378, "how-to-make-a-pull-request"]], "How to set data values": [[484, "how-to-set-data-values"]], "How to use logging": [[378, "how-to-use-logging"]], "How to use random numbers": [[378, "how-to-use-random-numbers"]], "How to write code": [[378, "how-to-write-code"]], "How to write tests": [[378, "how-to-write-tests"]], "HpxGeom": [[192, null]], "HpxMap": [[193, null]], "HpxNDMap": [[194, null]], "IPython": [[414, "id3"]], "IRF": [[157, null], [405, "irf"]], "IRF axis naming": [[521, "irf-axis-naming"]], "IRFMap": [[158, null]], "IRF_REGISTRY": [[159, null]], "IRFs": [[387, "irfs"], [491, "irfs"]], "Image Plotting": [[484, "image-plotting"]], "ImageProfile": [[128, null]], "ImageProfileEstimator": [[129, null]], "Images and masks": [[392, "images-and-masks"]], "Implement default parameters": [[389, "implement-default-parameters"]], "Implement evaluation region specifications": [[389, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[389, "implement-sky-coordinate-handling"]], "Implementation": [[398, "implementation"], [406, "implementation"]], "Implementation Outline": [[406, "implementation-outline"]], "Implementation road map": [[388, "implementation-road-map"]], "Implementing a custom model": [[487, "implementing-a-custom-model"]], "Implementing a custom prior": [[489, "implementing-a-custom-prior"]], "Imports and versions": [[469, "imports-and-versions"]], "Improve SourceModels class": [[389, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[389, "improve-and-implement-model-serilization"]], "Improve spatial models": [[389, "improve-spatial-models"]], "In the RST files": [[379, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[482, "inbuilt-gammapy-irfs"]], "Include png files as images": [[379, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[484, "indexing-and-slicing-sub-maps"]], "Infrastructure": [[445, "infrastructure"]], "Inspect the reduced dataset": [[501, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[501, "inspecting-residuals"]], "Install issues": [[413, "install-issues"]], "Installation": [[398, "installation"], [410, "installation"], [411, null]], "Instrument Response Functions (DL3)": [[521, null]], "Interaction Between Models and Dataset Objects": [[400, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[528, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[484, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[378, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[401, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[402, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[402, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[402, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[399, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[399, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[399, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[397, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[399, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[389, "introduce-naming-scheme-for-models"]], "Introduction": [[389, "introduction"], [392, "introduction"], [393, "introduction"], [395, "introduction"], [396, "introduction"], [398, "introduction"], [402, "introduction"], [404, "introduction"], [405, "introduction"], [448, "introduction"], [453, "introduction"], [455, "introduction"], [463, "introduction"], [473, "introduction"], [477, "introduction"], [478, "introduction"], [479, "introduction"], [483, "introduction"], [484, "introduction"], [491, "introduction"], [492, "introduction"], [493, "introduction"], [494, "introduction"], [496, "introduction"], [502, "introduction"], [504, "introduction"], [506, "introduction"], [507, "introduction"], [577, "introduction"]], "Introduction of background models": [[389, "introduction-of-background-models"]], "Introduction of model name attributes": [[389, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[389, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[327, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[492, "isotropic-diffuse-background"]], "Iterating by image": [[484, "iterating-by-image"]], "J Factors": [[477, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[512, "joint-analysis"]], "Joint analysis": [[461, "joint-analysis"], [462, "joint-analysis"]], "Jupyter": [[410, "id2"], [412, "jupyter"]], "Jupyter notebooks": [[414, "jupyter-notebooks"]], "Key Features": [[480, "key-features"]], "LabelMapAxis": [[195, null], [484, "labelmapaxis"]], "Latest CTAO performance files": [[491, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[390, "lazy-loading-of-datasets"]], "LazyFitsData": [[314, null]], "Let\u2019s simulate the model": [[466, "let-s-simulate-the-model"]], "Light Curve Fitting": [[393, "light-curve-fitting"]], "Light Curve estimation by observation": [[470, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[571, null]], "Light curves": [[470, null]], "Light curves for flares": [[471, null]], "LightCurveEstimator": [[130, null]], "LightCurveTemplateTemporalModel": [[238, null]], "Lightcurve": [[393, "lightcurve"]], "Lightcurves": [[478, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[393, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[388, "limitations"]], "Linear temporal model": [[567, null]], "LinearTemporalModel": [[239, null]], "Links to documentation": [[379, "links-to-documentation"]], "Links to other tutorials": [[379, "links-to-other-tutorials"]], "List available catalogs": [[478, "list-available-catalogs"]], "Load Data": [[453, "load-data"]], "Load IRFs and prepare dataset": [[448, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[478, "load-catalogs"]], "Load data": [[455, "load-data"]], "Load spectral points": [[451, "load-spectral-points"]], "Load the data": [[449, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[480, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[493, "load-the-tables"]], "Loading models from a catalog": [[486, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[378, "locate-origin-of-warnings"]], "Log parabola spectral model": [[550, null]], "Log parabola spectral norm model": [[551, null]], "Log-Parabola Fit": [[451, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[240, null]], "LogParabolaSpectralModel": [[241, null]], "LogSpiral": [[34, null]], "Long Term Support releases": [[404, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[501, null]], "Low level map and cube analysis": [[384, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[171, null]], "METHOD_DEFAULT": [[321, null]], "METHOD_KWARGS_DEFAULT": [[322, null]], "MODEL_REGISTRY": [[242, null]], "Maintainer and developer perspective": [[385, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[387, "maintenance-and-code-quality"]], "Make a Bugfix release": [[407, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[473, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[463, "make-sky-images"]], "Make small pull requests": [[381, "make-small-pull-requests"]], "Maker": [[172, null]], "Makers": [[405, "makers"]], "Makers - Data reduction": [[483, null]], "Making a butterfly plot": [[501, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[378, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[378, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[378, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[488, "manual-grouping-of-observations"]], "Map": [[196, null]], "Map Analysis / Data Reduction": [[387, "map-analysis-data-reduction"]], "MapAxes": [[197, null]], "MapAxis": [[198, null]], "MapCoord": [[199, null], [528, "mapcoord"]], "MapDataset": [[102, null], [390, "mapdataset"], [479, "mapdataset"]], "MapDatasetEventSampler": [[103, null], [391, "mapdataseteventsampler"]], "MapDatasetMaker": [[173, null]], "MapDatasetMetaData": [[104, null]], "MapDatasetOnOff": [[105, null], [390, "mapdatasetonoff"]], "MapPanelPlotter": [[365, null]], "Maps": [[200, null], [387, "maps"], [484, null], [502, "maps"]], "Maps operations": [[484, "maps-operations"]], "Mask dilation and erosion": [[485, "mask-dilation-and-erosion"]], "Mask maps": [[485, null]], "Mask modifications": [[485, "mask-modifications"]], "Mask some sky regions": [[485, "mask-some-sky-regions"]], "Masks for fitting": [[485, "masks-for-fitting"]], "Masks operations": [[485, "masks-operations"]], "Meetings": [[387, "meetings"]], "Metadata API": [[405, "metadata-api"]], "Metadata files": [[404, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[405, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[476, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[243, null]], "Minor changes": [[399, "minor-changes"]], "Mission elapsed times (MET)": [[580, "mission-elapsed-times-met"]], "Model": [[244, null]], "Model and dataset": [[481, "model-and-dataset"], [489, "model-and-dataset"]], "Model fit": [[463, "model-fit"]], "Model fitting": [[454, "model-fitting"], [500, "model-fitting"]], "Model gallery": [[530, null]], "Model lists and serialisation": [[487, "model-lists-and-serialisation"]], "Model the observed spectrum": [[449, "model-the-observed-spectrum"]], "ModelBase": [[245, null]], "Modeling": [[387, "modeling"], [405, "modeling"], [475, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[573, null]], "Modeling and fitting": [[461, "modeling-and-fitting"]], "Modelling": [[458, "modelling"], [486, null]], "Models": [[246, null], [487, null]], "Models with energy dependent morphology": [[487, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[487, "models-with-shared-parameter"]], "Modifying Data": [[484, "modifying-data"]], "Modifying model parameters": [[487, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[464, null]], "Motivation": [[406, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[462, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[323, null]], "Naima spectral model": [[552, null]], "NaimaSpectralModel": [[247, null]], "New features": [[440, "new-features"], [443, "new-features"], [444, "new-features"], [445, "new-features"]], "Next steps": [[491, "next-steps"], [493, "next-steps"], [494, "next-steps"]], "Night-wise LC estimation": [[470, "night-wise-lc-estimation"]], "Norm Spectral Models": [[487, "norm-spectral-models"]], "Notations": [[578, "notations"]], "Notes": [[577, "notes"]], "OGIPDatasetReader": [[106, null]], "OGIPDatasetWriter": [[107, null]], "Object text repr, str and info": [[378, "object-text-repr-str-and-info"]], "Objective": [[458, "objective"], [459, "objective"], [465, "objective"], [466, "objective"], [488, "objective"]], "Objectives": [[388, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[483, "observation-duration-and-effective-livetime"]], "Observation selection": [[454, "observation-selection"], [500, "observation-selection"]], "ObservationEventSampler": [[108, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[488, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[464, "obtain-the-data-to-use"]], "Obtain the observations": [[488, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[448, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[408, "old-example-data"]], "On-Off analysis": [[456, "on-off-analysis"]], "Opening the data": [[473, "opening-the-data"]], "OptimizeResult": [[213, null]], "Optional dependencies": [[377, "optional-dependencies"], [395, "optional-dependencies"]], "Other folders": [[408, "other-folders"]], "Other packages": [[504, "other-packages"]], "Other repositories": [[408, "other-repositories"]], "Others": [[378, "others"], [408, "others"]], "Outlook": [[390, "outlook"], [392, "outlook"], [394, "outlook"], [395, "outlook"], [397, "outlook"], [398, "outlook"], [399, "outlook"], [402, "outlook"]], "Output in Jupyter notebook cells": [[378, "output-in-jupyter-notebook-cells"]], "Overview": [[523, "overview"], [525, "overview"], [526, "overview"]], "PIG 1 - PIG purpose and guidelines": [[383, null]], "PIG 10 - Regions": [[392, null]], "PIG 11 - Light curves": [[393, null]], "PIG 12 - High level interface": [[394, null]], "PIG 13 - Gammapy dependencies and distribution": [[395, null]], "PIG 14 - Uncertainty estimation": [[396, null]], "PIG 16 - Gammapy package structure": [[397, null]], "PIG 18 - Documentation": [[398, null]], "PIG 19 - Gammapy package structure follow up": [[399, null]], "PIG 2 - Organization of low level analysis code": [[384, null]], "PIG 20 - Global Model API": [[400, null]], "PIG 21 - Models improvements": [[401, null]], "PIG 22 - Unified flux estimators API": [[402, null]], "PIG 23 - Gammapy release cycle and version numbering": [[403, null]], "PIG 24 - Authorship policy": [[404, null]], "PIG 25 - Metadata container for Gammapy": [[405, null]], "PIG 26 - Model Priors API": [[406, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[385, null]], "PIG 4 - Setup for tutorial notebooks and data": [[386, null]], "PIG 5 - Gammapy 1.0 roadmap": [[387, null]], "PIG 6 - CTA observation handling": [[388, null]], "PIG 7 - Models": [[389, null]], "PIG 8 - Datasets": [[390, null]], "PIG 9 - Event sampling": [[391, null]], "PIG review": [[383, "pig-review"]], "PIG status": [[383, "pig-status"]], "PIGs": [[382, null]], "POOL_KWARGS_DEFAULT": [[324, null]], "PSF": [[482, "psf"], [492, "psf"]], "PSF3D": [[160, null]], "PSFKernel": [[161, null]], "PSFKing": [[162, null]], "PSFMap": [[163, null]], "PWN": [[50, null]], "Package / API": [[496, "package-api"]], "Package and docs": [[408, "package-and-docs"]], "Package structure and dependencies": [[431, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[387, "papers"]], "Parallel evaluation of datasets": [[390, "parallel-evaluation-of-datasets"]], "Parameter": [[214, null]], "ParameterEstimator": [[131, null]], "Parameters": [[215, null]], "ParametricPSF": [[164, null]], "Perform spectral model fitting": [[450, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[501, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[450, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[391, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[570, null]], "Phase-resolved map": [[473, "phase-resolved-map"]], "Phase-resolved spectrum": [[473, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[174, null]], "Phasogram": [[473, "phasogram"]], "Piecewise  norm spectral model": [[553, null]], "Piecewise norm spatial model": [[536, null]], "PiecewiseNormSpatialModel": [[248, null]], "PiecewiseNormSpectralModel": [[249, null]], "Pixel coordinate convention": [[378, "pixel-coordinate-convention"]], "Plot": [[463, "plot"]], "Plot off regions": [[453, "plot-off-regions"]], "Plot the fitted spectrum": [[501, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[449, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[467, "plotting-results"]], "Plotting a RegionGeom": [[529, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[486, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[454, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[529, "plotting-the-map-content"]], "Plotting the results": [[464, "plotting-the-results"]], "Plotting the underlying region": [[529, "plotting-the-underlying-region"]], "Point Spread Function": [[522, null]], "Point source sensitivity": [[448, null]], "Point spatial model": [[537, null]], "Point spread function": [[491, "point-spread-function"]], "PointSpatialModel": [[250, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[404, "possible-implementations"]], "Post release": [[407, "post-release"]], "Power Law Fit": [[451, "power-law-fit"]], "Power law 2 spectral model": [[555, null]], "Power law norm spectral model": [[556, null]], "Power law spectral model": [[554, null]], "PowerLaw temporal model": [[568, null]], "PowerLaw2SpectralModel": [[251, null]], "PowerLawNormSpectralModel": [[252, null]], "PowerLawSpectralModel": [[253, null]], "PowerLawTemporalModel": [[254, null]], "Predicted counts": [[512, "predicted-counts"]], "Prepare and run the event sampler": [[466, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[450, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[501, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[450, "prerequisites"], [451, "prerequisites"], [453, "prerequisites"], [454, "prerequisites"], [455, "prerequisites"], [456, "prerequisites"], [458, "prerequisites"], [462, "prerequisites"], [464, "prerequisites"], [465, "prerequisites"], [466, "prerequisites"], [467, "prerequisites"], [469, "prerequisites"], [470, "prerequisites"], [471, "prerequisites"], [472, "prerequisites"], [476, "prerequisites"], [481, "prerequisites"], [485, "prerequisites"], [486, "prerequisites"], [489, "prerequisites"], [500, "prerequisites"], [501, "prerequisites"]], "Pretty-print source information": [[478, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[255, null]], "PriorParameter": [[216, null]], "PriorParameters": [[217, null]], "Priors": [[489, null]], "Profile Estimation": [[467, "profile-estimation"]], "Profile Likelihood": [[579, "profile-likelihood"]], "Profiles": [[477, "profiles"]], "Project Management": [[387, "project-management"]], "Project setup": [[408, null]], "Projects": [[387, "projects"]], "Proposal": [[386, "proposal"], [388, "proposal"], [389, "proposal"], [390, "proposal"], [391, "proposal"], [392, "proposal"], [393, "proposal"], [394, "proposal"], [396, "proposal"], [397, "proposal"], [398, "proposal"], [399, "proposal"], [400, "proposal"], [401, "proposal"]], "Proposal of API for flux estimate results": [[402, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[467, "proposed-approach"]], "Proposed approach": [[450, "proposed-approach"], [451, "proposed-approach"], [454, "proposed-approach"], [456, "proposed-approach"], [457, "proposed-approach"], [458, "proposed-approach"], [459, "proposed-approach"], [462, "proposed-approach"], [465, "proposed-approach"], [466, "proposed-approach"], [469, "proposed-approach"], [470, "proposed-approach"], [471, "proposed-approach"], [472, "proposed-approach"], [475, "proposed-approach"], [476, "proposed-approach"], [481, "proposed-approach"], [485, "proposed-approach"], [486, "proposed-approach"], [488, "proposed-approach"], [500, "proposed-approach"], [501, "proposed-approach"]], "Proposed class diagram": [[388, "proposed-class-diagram"]], "Proposed metadata classes": [[405, "proposed-metadata-classes"]], "Proposed solution": [[405, "proposed-solution"]], "Pull Requests": [[431, "pull-requests"], [432, "pull-requests"], [440, "pull-requests"], [441, "pull-requests"], [442, "pull-requests"], [443, "pull-requests"], [444, "pull-requests"], [445, "pull-requests"]], "Pull requests": [[417, "pull-requests"], [418, "pull-requests"], [419, "pull-requests"], [420, "pull-requests"], [421, "pull-requests"], [422, "pull-requests"], [423, "pull-requests"], [424, "pull-requests"], [425, "pull-requests"], [426, "pull-requests"], [427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"], [433, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"], [436, "pull-requests"], [437, "pull-requests"], [438, "pull-requests"], [439, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[508, null]], "Pulsar Wind Nebula Source Models": [[509, null]], "Pulsar analysis": [[473, null]], "Python": [[414, "id2"]], "Python scripts": [[414, "python-scripts"]], "Python version support": [[378, "python-version-support"]], "RadMax2D": [[165, null]], "Read and Introduce Data": [[467, "read-and-introduce-data"]], "Read in input images": [[457, "read-in-input-images"]], "Read the datasets": [[486, "read-the-datasets"]], "Read the energy-dependent model": [[466, "read-the-energy-dependent-model"]], "Reading Maps": [[484, "reading-maps"]], "Reading and Writing": [[484, "reading-and-writing"]], "Reading and writing masks": [[485, "reading-and-writing-masks"]], "Reading different datasets": [[462, "reading-different-datasets"]], "RecoPSFMap": [[166, null]], "Recommended Setup": [[410, "recommended-setup"], [412, null]], "Reference": [[398, "reference"], [576, "reference"]], "References": [[575, "publications"]], "Reflected regions background": [[483, "reflected-regions-background"], [525, null]], "ReflectedRegionsBackgroundMaker": [[175, null]], "ReflectedRegionsFinder": [[176, null]], "Region arguments": [[392, "region-arguments"]], "RegionGeom": [[201, null], [529, "regiongeom"]], "RegionGeom and RegionNDMap": [[529, null]], "RegionGeom and coordinates": [[529, "regiongeom-and-coordinates"]], "RegionNDMap": [[202, null], [529, "regionndmap"]], "RegionsFinder": [[177, null]], "Relation to WCS geometries": [[529, "relation-to-wcs-geometries"]], "Release notes": [[378, "release-notes"], [416, null]], "Release preparation, feature freeze": [[403, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[403, "release-scheduling-and-lts"]], "Releases": [[387, "releases"], [404, "releases"], [408, "releases"]], "Releasing the final version of the major release": [[407, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[407, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[486, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[378, "removing-an-attribute"]], "Renaming an argument": [[378, "renaming-an-argument"]], "Required dependencies": [[377, "required-dependencies"], [395, "required-dependencies"]], "Requirements": [[405, "requirements"]], "Resampling datasets": [[479, "resampling-datasets"]], "Resolve gammapy.detect": [[399, "resolve-gammapy-detect"]], "Results": [[448, "results"]], "Results exploration": [[454, "results-exploration"]], "Ring background": [[483, "ring-background"], [526, null]], "Ring background map": [[459, null]], "RingBackgroundMaker": [[178, null]], "Rotated regions": [[392, "rotated-regions"]], "Run Estimation": [[467, "run-estimation"]], "Run Estimator": [[464, "run-estimator"]], "Run data reduction chain": [[453, "run-data-reduction-chain"], [455, "run-data-reduction-chain"]], "Run the 1D data reduction": [[470, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[470, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[576, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[381, "running-tests-building-documentation"]], "Running the Data Reduction": [[454, "running-the-data-reduction"]], "Running the analysis": [[500, "running-the-analysis"]], "Running the estimation": [[454, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[454, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[454, "running-the-fit"]], "Running the light curve extraction in 1D": [[470, "running-the-light-curve-extraction-in-1d"]], "SED types": [[514, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[256, null]], "SPECTRAL_MODEL_REGISTRY": [[257, null]], "Safe data range definition": [[524, "safe-data-range-definition"]], "Safe data range handling": [[483, "safe-data-range-handling"]], "SafeMaskMaker": [[179, null]], "Sample a source with energy-dependent temporal evolution": [[466, null]], "Sampling methods": [[391, "sampling-methods"]], "Sampling the source and background events": [[465, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[454, "save-dataset-to-disk"], [500, "save-dataset-to-disk"], [501, "save-dataset-to-disk"]], "ScaleSpectralModel": [[258, null]], "ScaledRegularGridInterpolator": [[317, null]], "Scripts": [[496, "scripts"]], "Select a catalog subset": [[478, "select-a-catalog-subset"]], "Select a source": [[478, "select-a-source"]], "Select observations": [[463, "select-observations"]], "Select the ON region": [[450, "select-the-on-region"]], "Select the data": [[450, "select-the-data"], [471, "select-the-data"]], "Selecting models contributing to a given region": [[486, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[486, "selecting-models-from-a-list"]], "SensitivityEstimator": [[132, null]], "Serialisation": [[406, "serialisation"], [482, "serialisation"], [482, "id1"], [482, "id2"], [492, "serialisation"]], "Serialisation and I/O": [[467, "serialisation-and-i-o"]], "Serialisation of datasets": [[512, "serialisation-of-datasets"]], "Serialisation of the fit result": [[454, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[454, "serialisation-of-the-results"]], "Serialising models": [[486, "serialising-models"]], "Serialization": [[405, "serialization"]], "Setting fitting parameters": [[454, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[500, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[500, "setting-the-background-normalization-maker"]], "Setting the data to use": [[500, "setting-the-data-to-use"]], "Setting the exclusion mask": [[454, "setting-the-exclusion-mask"], [500, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[500, "setting-the-reduced-datasets-geometry"]], "Setup": [[448, "setup"], [449, "setup"], [450, "setup"], [451, "setup"], [453, "setup"], [454, "setup"], [455, "setup"], [456, "setup"], [457, "setup"], [458, "setup"], [459, "setup"], [463, "setup"], [464, "setup"], [465, "setup"], [466, "setup"], [467, "setup"], [470, "setup"], [471, "setup"], [472, "setup"], [475, "setup"], [476, "setup"], [477, "setup"], [479, "setup"], [483, "setup"], [484, "setup"], [485, "setup"], [486, "setup"], [487, "setup"], [491, "setup"], [492, "setup"], [500, "setup"], [501, "setup"], [502, "setup"]], "Shell spatial model": [[538, null]], "Shell2 spatial model": [[539, null]], "Shell2SpatialModel": [[259, null]], "ShellSpatialModel": [[260, null]], "Show images": [[463, "show-images"]], "Show the results tables": [[464, "show-the-results-tables"]], "Show various observation quantities": [[488, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[401, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[401, "simplify-yaml-representation"]], "Simulate multiple event lists": [[465, "simulate-multiple-event-lists"]], "Simulating a light curve": [[472, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[472, null]], "Simulation": [[469, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[390, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[456, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[569, null]], "SineTemporalModel": [[261, null]], "Skip unit tests for some Astropy versions": [[378, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[392, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[528, null]], "SkyModel": [[262, null], [487, "skymodel"]], "Smooth broken power law spectral model": [[557, null]], "SmoothBrokenPowerLawSpectralModel": [[263, null]], "Some terminology": [[388, "some-terminology"]], "Source Detection": [[463, "source-detection"]], "Source candidates": [[457, "source-candidates"]], "Source catalogs": [[478, null], [502, "source-catalogs"], [511, null]], "Source detection and significance maps": [[457, null]], "Source information": [[478, "source-information"]], "Source models": [[478, "source-models"], [491, "source-models"]], "Source object": [[478, "source-object"]], "Source statistic": [[453, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[389, "sourceirfmodel"]], "Spatial analysis": [[463, "spatial-analysis"]], "Spatial models": [[487, "spatial-models"], [530, "spatial-models"]], "SpatialIRFModel": [[389, "spatialirfmodel"]], "SpatialModel": [[264, null]], "Special cases": [[579, "special-cases"]], "Specificities of the HGPS catalog": [[478, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[401, "spectral-absorption-model"]], "Spectral Norm Models": [[401, "spectral-norm-models"]], "Spectral analysis": [[453, null]], "Spectral analysis of extended sources": [[450, null]], "Spectral analysis with energy-dependent directional cuts": [[455, null]], "Spectral analysis with the HLI": [[454, null]], "Spectral models": [[487, "spectral-models"], [530, "spectral-models"]], "Spectral models and flux points": [[502, "spectral-models-and-flux-points"]], "Spectral points": [[463, "spectral-points"]], "SpectralIRFModel": [[389, "spectralirfmodel"]], "SpectralModel": [[265, null]], "Spectrum": [[463, "spectrum"]], "Spectrum dataset": [[483, "spectrum-dataset"]], "SpectrumDataset": [[109, null], [390, "spectrumdataset"], [479, "spectrumdataset"]], "SpectrumDatasetMaker": [[180, null]], "SpectrumDatasetOnOff": [[110, null], [390, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[379, "sphinx-gallery-extension"]], "Spiral arm models": [[506, "spiral-arm-models"]], "Stack observations": [[453, "stack-observations"]], "Stacked analysis": [[461, "stacked-analysis"]], "Stacking Multiple Datasets": [[512, "stacking-multiple-datasets"]], "Statistical utility functions": [[578, null]], "Status": [[388, "status"], [397, "status"]], "Storing the energy dispersion information as a function of sky position": [[520, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[393, "storing-the-results-and-further-studies"]], "Sub-packages": [[505, "sub-packages"]], "Suggestions": [[404, "suggestions"]], "Summary": [[417, "summary"], [418, "summary"], [419, "summary"], [420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [441, "summary"], [442, "summary"], [443, "summary"], [444, "summary"], [445, "summary"], [461, "summary"], [492, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[560, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[559, null]], "Super exponential cutoff power law model used for 3FGL": [[558, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[266, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[267, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[268, null]], "Supernova Remnant Models": [[510, null]], "Support for Asymmetric IRFs": [[482, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[403, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[498, null]], "Survey panel plots": [[581, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[269, null]], "TS map estimation": [[457, "ts-map-estimation"]], "TSMapEstimator": [[133, null]], "Table conversion": [[480, "table-conversion"]], "Task List": [[390, "task-list"]], "Task list": [[389, "task-list"], [391, "task-list"], [392, "task-list"], [393, "task-list"], [394, "task-list"], [395, "task-list"]], "Template spatial model": [[540, null]], "Template spectral model": [[561, null]], "TemplateNDSpatialModel": [[270, null]], "TemplateNDSpectralModel": [[271, null]], "TemplateNPredModel": [[272, null]], "TemplatePhaseCurveTemporalModel": [[273, null]], "TemplateSpatialModel": [[274, null]], "TemplateSpectralModel": [[275, null]], "Temporal models": [[487, "temporal-models"], [530, "temporal-models"]], "TemporalModel": [[276, null]], "Testing of plotting functions": [[378, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[384, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[464, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[408, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[408, "the-gammapy-extra-repository"]], "The index tables": [[513, "the-index-tables"]], "The reflected region finder": [[525, "the-reflected-region-finder"]], "The results for testing energy dependence": [[464, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[464, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[462, "the-setup"], [480, "the-setup"], [481, "the-setup"], [489, "the-setup"]], "Theta squared event distribution": [[494, "theta-squared-event-distribution"]], "Time": [[496, "time"]], "Time bin preparation": [[393, "time-bin-preparation"]], "Time bins": [[393, "time-bins"]], "Time differences": [[580, "time-differences"]], "Time format and scale": [[580, "time-format-and-scale"]], "Time handling in Gammapy": [[580, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[475, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[475, null]], "Time variable source using a lightcurve": [[465, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[203, null], [484, "timemapaxis"]], "Timing Analysis": [[387, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[287, null]], "Troubleshooting": [[413, null], [576, "troubleshooting"]], "Tutorial overview": [[464, "tutorial-overview"], [491, "tutorial-overview"], [493, "tutorial-overview"]], "Tutorials": [[398, "tutorials"], [496, null]], "Tutorials Overview": [[410, "tutorials-overview"]], "Type validation": [[405, "type-validation"]], "Types of supported datasets": [[512, "types-of-supported-datasets"]], "Unification of flux estimators?": [[402, "unification-of-flux-estimators"]], "Unify calling interface for models": [[389, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[529, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[406, "use-cases"]], "Use cases / scenarios": [[388, "use-cases-scenarios"]], "User guide": [[517, null]], "User perspective": [[385, "user-perspective"]], "Using Anaconda / Miniconda": [[411, "using-anaconda-miniconda"]], "Using Factory Methods": [[484, "using-factory-methods"]], "Using Gammapy": [[414, null]], "Using Gammapy IRFs": [[482, null]], "Using Mamba": [[411, "using-mamba"]], "Using YAML configuration files": [[500, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[454, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[454, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[515, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[504, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[507, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[511, "using-gammapy-catalog"]], "Using gammapy.data": [[513, "using-gammapy-data"]], "Using gammapy.datasets": [[512, "using-gammapy-datasets"]], "Using gammapy.estimators": [[514, "using-gammapy-estimators"]], "Using gammapy.irf": [[521, "using-gammapy-irf"]], "Using gammapy.makers": [[524, "using-gammapy-makers"]], "Using gammapy.maps": [[528, "using-gammapy-maps"]], "Using gammapy.modeling": [[573, "using-gammapy-modeling"]], "Using masks": [[479, "using-masks"]], "Using other package managers": [[411, "using-other-package-managers"]], "Using pip": [[411, "using-pip"]], "Using regions": [[525, "using-regions"]], "Using the reflected background estimator": [[525, "using-the-reflected-background-estimator"]], "Utility functions": [[580, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[506, "velocity-distributions"]], "Venv Environments": [[409, "venv-environments"]], "Version 0.1": [[416, "version-0-1"]], "Version 0.10": [[416, "version-0-10"]], "Version 0.11": [[416, "version-0-11"]], "Version 0.12": [[416, "version-0-12"]], "Version 0.13": [[416, "version-0-13"]], "Version 0.14": [[416, "version-0-14"]], "Version 0.15": [[416, "version-0-15"]], "Version 0.16": [[416, "version-0-16"]], "Version 0.17": [[416, "version-0-17"]], "Version 0.18": [[416, "version-0-18"]], "Version 0.19": [[416, "version-0-19"]], "Version 0.2": [[416, "version-0-2"]], "Version 0.20": [[416, "version-0-20"]], "Version 0.20.1": [[416, "version-0-20-1"]], "Version 0.3": [[416, "version-0-3"]], "Version 0.4": [[416, "version-0-4"]], "Version 0.5": [[416, "version-0-5"]], "Version 0.6": [[416, "version-0-6"]], "Version 0.7": [[416, "version-0-7"]], "Version 0.8": [[416, "version-0-8"]], "Version 0.9": [[416, "version-0-9"]], "Version 1.0": [[416, "version-1-0"]], "Version 1.0.1": [[416, "version-1-0-1"]], "Version 1.0.2": [[416, "version-1-0-2"]], "Version 1.1": [[416, "version-1-1"]], "Version 1.2": [[416, "version-1-2"]], "Version 1.3": [[416, "version-1-3"]], "Version numbering": [[403, "version-numbering"]], "Virtual Environments": [[409, null]], "Visualing a RegionNDMap": [[529, "visualing-a-regionndmap"]], "Visualising the results": [[475, "visualising-the-results"]], "Visualization": [[581, null]], "Visualizing and Plotting": [[484, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[577, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[578, "wstat-counts-statistic"]], "WStatCountsStatistic": [[288, null]], "WcsGeom": [[204, null]], "WcsMap": [[205, null]], "WcsNDMap": [[206, null]], "What checks and conversions should I do for inputs?": [[378, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[383, "what-is-a-pig"]], "What is this?": [[381, "what-is-this"]], "What next?": [[451, "what-next"], [453, "what-next"], [457, "what-next"], [463, "what-next"], [470, "what-next"], [502, "what-next"]], "What others have": [[388, "what-others-have"]], "What we have": [[386, "what-we-have"], [394, "what-we-have"], [402, "what-we-have"]], "What\u2019s new?": [[418, "what-s-new"], [419, "what-s-new"], [420, "what-s-new"], [421, "what-s-new"], [422, "what-s-new"], [423, "what-s-new"], [424, "what-s-new"], [425, "what-s-new"], [426, "what-s-new"], [427, "what-s-new"], [428, "what-s-new"], [429, "what-s-new"], [431, "what-s-new"], [432, "what-s-new"], [434, "what-s-new"], [435, "what-s-new"], [436, "what-s-new"], [437, "what-s-new"], [438, "what-s-new"], [439, "what-s-new"]], "What\u2019s next": [[500, "whats-next"]], "What\u2019s next?": [[454, "whats-next"]], "Where should I import from?": [[378, "where-should-i-import-from"]], "WobbleRegionsFinder": [[181, null]], "Working with event lists": [[513, "working-with-event-lists"]], "Write your own CLI": [[576, "write-your-own-cli"]], "Writing Maps": [[484, "writing-maps"]], "Writing a PIG": [[383, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[529, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[513, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[532, "yaml-representation"], [533, "yaml-representation"], [534, "yaml-representation"], [535, "yaml-representation"], [536, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [539, "yaml-representation"], [540, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [550, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [557, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [560, "yaml-representation"], [561, "yaml-representation"], [563, "yaml-representation"], [564, "yaml-representation"], [565, "yaml-representation"], [566, "yaml-representation"], [567, "yaml-representation"], [568, "yaml-representation"], [569, "yaml-representation"], [570, "yaml-representation"], [571, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[359, null]], "add_colorbar": [[366, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[367, null]], "apply_edisp": [[111, null], [116, null]], "arbitrary type input and validation": [[405, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[520, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[519, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[519, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[520, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[518, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[353, null]], "assert_skycoord_allclose": [[354, null]], "assert_time_allclose": [[355, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[306, null]], "cash": [[289, null]], "cash_sum_cython": [[290, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[404, "codemeta-json"]], "colormap_hess": [[368, null]], "colormap_milagro": [[369, null]], "combine_flux_maps": [[134, null]], "combine_significance_maps": [[135, null]], "compound_region_to_regions": [[336, null]], "compute_chisq": [[291, null]], "compute_flux_doubling": [[292, null]], "compute_fpp": [[293, null]], "compute_fvar": [[294, null]], "compute_lightcurve_discrete_correlation": [[136, null]], "compute_lightcurve_doublingtime": [[137, null]], "compute_lightcurve_fpp": [[138, null]], "compute_lightcurve_fvar": [[139, null]], "config": [[11, "gammapy-analysis-config"]], "containment_radius": [[207, null]], "containment_region": [[208, null]], "create_cosmic_ray_spectral_model": [[277, null]], "create_crab_spectral_model": [[278, null]], "create_empty_map_dataset_from_irfs": [[112, null]], "create_fermi_isotropic_diffuse_model": [[279, null]], "create_map_dataset_from_observation": [[113, null]], "create_map_dataset_geoms": [[114, null]], "cstat": [[295, null]], "data": [[405, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[296, null]], "docs.gammapy.org": [[408, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[328, null]], "earth_location_from_dict": [[315, null]], "estimate_exposure_reco_energy": [[140, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[297, null]], "find_peaks": [[141, null]], "find_peaks_in_flux_map": [[142, null]], "fov_to_sky": [[307, null]], "from_yaml": [[341, null]], "galactic": [[308, null]], "gamLike": [[504, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[408, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_flux_maps": [[143, null]], "get_combined_significance_maps": [[144, null]], "get_images_paths": [[342, null]], "get_irfs_features": [[96, null]], "get_random_state": [[329, null]], "get_rebinned_axis": [[145, null]], "get_wstat_gof_terms": [[298, null]], "get_wstat_mu_bkg": [[299, null]], "hierarchical_clustering": [[303, null]], "hstack_columns": [[348, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[280, null]], "interpolate_profile": [[318, null]], "interpolation_scale": [[319, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[167, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[337, null]], "make_counts_rad_max": [[182, null]], "make_edisp_kernel_map": [[183, null]], "make_edisp_map": [[184, null]], "make_effective_livetime_map": [[185, null]], "make_map_background_irf": [[186, null]], "make_map_exposure_true_energy": [[187, null]], "make_observation_time_map": [[188, null]], "make_orthogonal_rectangle_sky_regions": [[338, null]], "make_path": [[343, null]], "make_psf_map": [[189, null]], "make_theta_squared_table": [[190, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[309, null]], "mpl_plot_check": [[356, null]], "multiprocessing_manager": [[325, null]], "norm_bounds_cython": [[300, null]], "normalize": [[330, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[331, null]], "plot_contour_line": [[370, null]], "plot_distribution": [[371, null]], "plot_heatmap": [[372, null]], "plot_map_rgb": [[373, null]], "plot_npred_signal": [[374, null]], "plot_spectrum_datasets_off_regions": [[375, null]], "plot_theta_squared_table": [[376, null]], "polar": [[310, null]], "pydantic": [[405, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[281, null], [283, null]], "read_yaml": [[344, null]], "recursive_merge_dicts": [[345, null]], "region_to_frame": [[339, null]], "regions_to_compound_region": [[340, null]], "requires_data": [[357, null]], "requires_dependency": [[358, null]], "resample_energy_edges": [[146, null]], "run": [[11, "gammapy-analysis-run"]], "run_multiprocessing": [[326, null]], "sample_powerlaw": [[332, null]], "sample_sphere": [[333, null]], "sample_sphere_distance": [[334, null]], "sample_times": [[335, null]], "scale_plot_flux": [[282, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[284, null]], "sky_to_fov": [[311, null]], "split_dataset": [[115, null], [117, null]], "standard_scaler": [[304, null]], "standardise_unit": [[363, null]], "stat_profile_ul_scipy": [[285, null]], "stats - Statistics": [[12, null]], "structure_function": [[301, null]], "table_row_to_dict": [[349, null]], "table_standardise_units_copy": [[350, null]], "table_standardise_units_inplace": [[351, null]], "the base class": [[405, "the-base-class"]], "time_ref_from_dict": [[360, null]], "time_ref_to_dict": [[361, null]], "time_relative_to_ref": [[362, null]], "to_yaml": [[346, null]], "trapz_loglog": [[316, null]], "unit_from_fits_image_hdu": [[364, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[312, null]], "visualization - Plotting features": [[14, null]], "write_yaml": [[347, null]], "wstat": [[302, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_empty_map_dataset_from_irfs", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.combine_flux_maps", "api/gammapy.estimators.utils.combine_significance_maps", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_flux_maps", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "release-notes/v2.0", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_empty_map_dataset_from_irfs.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.combine_flux_maps.rst", "api/gammapy.estimators.utils.combine_significance_maps.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_flux_maps.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "release-notes/v2.0.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[575, "term-1D-Analysis", true]], "3d analysis": [[575, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[239, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[255, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[261, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[262, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[276, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[317, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[359, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[168, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[366, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[575, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[123, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[125, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[156, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[367, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[111, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[116, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[199, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[118, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[353, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[354, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[355, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[170, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[179, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[173, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[180, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[210, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[320, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[147, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[148, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[149, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[575, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[169, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[306, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[575, "term-Cash", true]], "cash() (in module gammapy.stats)": [[289, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[290, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[286, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[352, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[368, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[369, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "combine_flux_maps() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.combine_flux_maps", false]], "combine_significance_maps() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.combine_significance_maps", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[336, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[219, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[291, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[286, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[288, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[286, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[288, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[292, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[293, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[294, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[286, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[288, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[118, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[121, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[122, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[126, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[129, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[130, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[131, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[132, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[207, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[208, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[262, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[118, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[121, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[122, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[129, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[132, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[199, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[239, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[245, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[255, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[261, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[262, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[272, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[276, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[209, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[122, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[209, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[245, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[246, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[255, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[258, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[265, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[276, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[210, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[192, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[193, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[194, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[196, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[199, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[201, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[202, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[204, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[205, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[206, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[244, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[262, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[277, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[278, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_empty_map_dataset_from_irfs() (in module gammapy.datasets)": [[112, "gammapy.datasets.create_empty_map_dataset_from_irfs", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[279, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[113, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[114, "gammapy.datasets.create_map_dataset_geoms", false]], "crop() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[295, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[272, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[305, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[161, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[209, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[575, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[169, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[255, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[258, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[265, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[276, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.dict", false]], "discrete_correlation() (in module gammapy.stats)": [[296, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[575, "term-DL3", true]], "dl4": [[575, "term-DL4", true]], "dl5": [[575, "term-DL5", true]], "dl6": [[575, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[328, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[315, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[227, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[575, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[151, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[152, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[150, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[151, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[152, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[153, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[155, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[286, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[288, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[169, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[122, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[122, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[122, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[118, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[122, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[132, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[132, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[575, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[121, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[119, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[225, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[239, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[260, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[261, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[262, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[272, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[162, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[162, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[262, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[103, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[108, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[103, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[108, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[122, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[130, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[297, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[211, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[212, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[123, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[124, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[101, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[127, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[575, "term-FoV", true]], "fov background": [[575, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[307, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[156, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[170, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[239, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[245, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[255, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[261, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[262, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[272, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[276, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[204, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[197, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[150, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[152, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[101, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[224, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[225, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[239, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[244, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[245, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[246, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[250, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[255, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[260, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[261, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[262, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[264, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[265, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[272, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[276, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[215, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[217, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[209, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[150, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[155, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[161, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[163, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[166, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[152, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[163, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[166, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[193, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[194, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[196, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[200, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[202, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[205, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[206, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[203, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[203, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[192, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[194, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[206, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[123, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[125, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[147, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[148, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[149, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[150, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[152, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[153, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[155, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[157, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[158, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[164, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[160, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[162, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[163, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[165, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[166, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[191, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[192, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[193, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[194, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[196, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[200, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[201, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[202, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[204, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[205, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[206, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[192, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[204, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[165, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[123, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[125, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[225, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[239, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[245, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[250, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[255, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[260, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[261, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[262, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[264, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[265, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[272, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[276, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[153, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[225, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[250, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[260, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[264, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[225, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[201, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[161, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[123, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[125, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[193, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[194, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[195, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[196, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[202, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[205, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[206, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[209, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[215, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[217, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[125, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[147, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[148, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[149, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[150, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[153, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[155, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[157, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[164, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[160, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[162, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[165, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[195, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[197, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[202, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[203, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[197, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[203, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[203, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[194, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[224, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[246, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[341, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[245, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[246, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[255, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[258, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[265, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[276, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[575, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[308, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[191, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[200, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_flux_maps() (in module gammapy.estimators.utils)": [[143, "gammapy.estimators.utils.get_combined_flux_maps", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[144, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[107, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[313, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[342, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[192, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[118, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[329, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[145, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[118, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[209, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[298, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[299, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[575, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[151, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[152, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[158, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[313, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[303, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[575, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[192, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[193, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[194, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[348, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[128, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[313, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[286, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[288, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[239, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[261, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[276, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[262, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[280, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[318, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[319, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[327, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[575, "term-IRF", true]], "irf (class in gammapy.irf)": [[157, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[159, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[158, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[276, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[258, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[265, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[575, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[178, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[168, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[195, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[314, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[130, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[313, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[167, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "lon (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[173, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[170, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[170, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[337, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[173, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[174, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[174, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[175, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[182, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[168, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[169, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[170, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[173, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[173, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[183, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[184, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[185, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[170, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[173, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[173, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[187, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[178, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[173, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[188, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[338, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[343, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[173, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[189, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[190, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[575, "term-Maker", true]], "maker (class in gammapy.makers)": [[172, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[171, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[196, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[197, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[198, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[199, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[173, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[365, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[200, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[151, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[152, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[158, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[210, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[575, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[210, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.message", false]], "met": [[575, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[170, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[210, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[321, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[322, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[242, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[309, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[356, "gammapy.utils.testing.mpl_plot_check", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[325, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[286, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[288, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[126, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[130, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[169, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[323, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[286, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[288, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[286, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[288, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[246, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[258, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[300, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[128, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[330, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[108, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[169, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[106, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[107, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[213, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[286, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[288, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[126, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[130, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[169, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[214, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[215, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[245, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[246, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[255, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[258, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[265, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[276, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[245, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[246, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[255, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[258, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[265, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[276, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[164, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[313, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[331, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[128, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[174, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[258, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[265, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[203, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[128, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[239, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[261, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[276, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[365, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[370, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[209, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[371, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[128, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[372, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[373, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[374, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[365, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[375, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[376, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[310, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[324, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[246, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[216, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[217, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[128, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[128, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.projection", false]], "psf": [[575, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[160, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[161, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[161, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[162, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[163, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[156, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[165, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[101, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[123, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[125, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[147, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[148, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[149, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[150, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[152, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[153, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[155, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[157, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[158, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[164, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[160, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[161, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[162, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[163, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[165, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[166, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[193, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[194, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[196, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[200, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[202, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[205, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[206, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[224, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[246, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[281, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[283, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[344, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[239, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[245, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[255, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[261, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[262, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[272, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[276, "gammapy.modeling.models.TemporalModel.reassign", false]], "reco energy": [[575, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[166, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[345, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[276, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[575, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[175, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[176, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[339, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[201, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[202, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[340, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[177, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[151, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[152, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[158, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[357, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[358, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[146, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.reverse", false]], "reverse_lon_radec (gammapy.irf.fovalignment attribute)": [[156, "gammapy.irf.FoVAlignment.REVERSE_LON_RADEC", false]], "ring background": [[575, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[178, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[575, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[118, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[121, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[122, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[129, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[132, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[168, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[169, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[170, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[172, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[173, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[174, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[175, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[176, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[177, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[178, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[179, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[181, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[352, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[326, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[169, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[179, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[327, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[327, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[332, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[333, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[334, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[239, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[261, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[276, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[335, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[282, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[317, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[209, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[575, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[284, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[118, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[118, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[121, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[122, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[126, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[129, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[130, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[131, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[132, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[209, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[209, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[311, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[272, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[128, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[256, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[257, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[109, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[180, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[110, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[115, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[117, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[286, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[288, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[272, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[304, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[363, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[286, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[288, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[286, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[288, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[285, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[301, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[210, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[286, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[288, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[349, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[350, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[351, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[106, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[107, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[118, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[121, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[122, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[126, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[129, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[130, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[131, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[132, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[151, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[152, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[158, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[168, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[169, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[170, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[172, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[173, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[174, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[175, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[178, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[179, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[180, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[258, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[274, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[275, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[269, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[276, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[360, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[361, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[362, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[239, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[261, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[276, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[203, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[287, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[210, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[239, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[245, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[255, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[261, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[262, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[272, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[276, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[213, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[199, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[346, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[316, "gammapy.utils.integrate.trapz_loglog", false]], "ts (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[286, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[288, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[133, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[235, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[239, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[245, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[247, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[250, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[255, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[258, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[259, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[261, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[262, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[264, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[265, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[272, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[276, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[233, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[234, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[235, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[239, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[243, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[245, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[247, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[249, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[250, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[251, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[253, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[254, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[255, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[258, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[259, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[260, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[261, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[262, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[263, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[264, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[265, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[272, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[275, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[276, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[364, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[312, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[246, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[204, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[205, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[206, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.prior attribute)": [[255, "gammapy.modeling.models.Prior.weight", false]], "width (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[260, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[181, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[212, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[238, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[271, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[272, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[273, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[274, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[246, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[347, "gammapy.utils.scripts.write_yaml", false]], "wstat() (in module gammapy.stats)": [[302, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[288, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[128, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[128, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[128, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FluxPointsDataset"], [102, 1, 1, "", "MapDataset"], [103, 1, 1, "", "MapDatasetEventSampler"], [104, 1, 1, "", "MapDatasetMetaData"], [105, 1, 1, "", "MapDatasetOnOff"], [106, 1, 1, "", "OGIPDatasetReader"], [107, 1, 1, "", "OGIPDatasetWriter"], [108, 1, 1, "", "ObservationEventSampler"], [109, 1, 1, "", "SpectrumDataset"], [110, 1, 1, "", "SpectrumDatasetOnOff"], [111, 4, 1, "", "apply_edisp"], [112, 4, 1, "", "create_empty_map_dataset_from_irfs"], [113, 4, 1, "", "create_map_dataset_from_observation"], [114, 4, 1, "", "create_map_dataset_geoms"], [115, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[101, 2, 1, "", "available_stat_type"], [101, 3, 1, "", "copy"], [101, 3, 1, "", "data_shape"], [101, 3, 1, "", "flux_pred"], [101, 3, 1, "", "from_dict"], [101, 2, 1, "", "gti"], [101, 2, 1, "", "mask"], [101, 2, 1, "", "mask_safe"], [101, 2, 1, "", "mask_valid"], [101, 2, 1, "", "models"], [101, 2, 1, "", "name"], [101, 3, 1, "", "plot_fit"], [101, 3, 1, "", "plot_residuals"], [101, 3, 1, "", "plot_spectrum"], [101, 3, 1, "", "read"], [101, 3, 1, "", "residuals"], [101, 3, 1, "", "stat_array"], [101, 3, 1, "", "stat_sum"], [101, 2, 1, "", "stat_type"], [101, 2, 1, "", "tag"], [101, 3, 1, "", "to_dict"], [101, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[102, 2, 1, "", "background"], [102, 2, 1, "", "background_model"], [102, 3, 1, "", "copy"], [102, 2, 1, "", "counts"], [102, 3, 1, "", "create"], [102, 3, 1, "", "cutout"], [102, 2, 1, "", "data_shape"], [102, 3, 1, "", "downsample"], [102, 2, 1, "", "edisp"], [102, 2, 1, "", "energy_range"], [102, 2, 1, "", "energy_range_fit"], [102, 2, 1, "", "energy_range_safe"], [102, 2, 1, "", "energy_range_total"], [102, 2, 1, "", "evaluators"], [102, 2, 1, "", "excess"], [102, 2, 1, "", "exposure"], [102, 3, 1, "", "fake"], [102, 3, 1, "", "from_dict"], [102, 3, 1, "", "from_geoms"], [102, 3, 1, "", "from_hdulist"], [102, 2, 1, "", "geoms"], [102, 2, 1, "", "gti"], [102, 3, 1, "", "info_dict"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_fit"], [102, 2, 1, "", "mask_fit_image"], [102, 2, 1, "", "mask_image"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_safe_edisp"], [102, 2, 1, "", "mask_safe_image"], [102, 2, 1, "", "mask_safe_psf"], [102, 2, 1, "", "meta"], [102, 2, 1, "", "meta_table"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "npred"], [102, 3, 1, "", "npred_background"], [102, 3, 1, "", "npred_signal"], [102, 3, 1, "", "pad"], [102, 3, 1, "", "peek"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_residuals_spatial"], [102, 3, 1, "", "plot_residuals_spectral"], [102, 2, 1, "", "psf"], [102, 3, 1, "", "read"], [102, 3, 1, "", "resample_energy_axis"], [102, 3, 1, "", "reset_data_cache"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "slice_by_energy"], [102, 3, 1, "", "slice_by_idx"], [102, 3, 1, "", "stack"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "to_hdulist"], [102, 3, 1, "", "to_image"], [102, 3, 1, "", "to_masked"], [102, 3, 1, "", "to_region_map_dataset"], [102, 3, 1, "", "to_spectrum_dataset"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[103, 3, 1, "", "event_det_coords"], [103, 3, 1, "", "event_list_meta"], [103, 3, 1, "", "run"], [103, 3, 1, "", "sample_background"], [103, 3, 1, "", "sample_edisp"], [103, 3, 1, "", "sample_psf"], [103, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[104, 3, 1, "", "construct"], [104, 3, 1, "", "copy"], [104, 3, 1, "", "dict"], [104, 3, 1, "", "from_header"], [104, 3, 1, "", "from_orm"], [104, 3, 1, "", "json"], [104, 2, 1, "", "model_computed_fields"], [104, 2, 1, "", "model_config"], [104, 3, 1, "", "model_construct"], [104, 3, 1, "", "model_copy"], [104, 3, 1, "", "model_dump"], [104, 3, 1, "", "model_dump_json"], [104, 2, 1, "", "model_extra"], [104, 2, 1, "", "model_fields"], [104, 2, 1, "", "model_fields_set"], [104, 3, 1, "", "model_json_schema"], [104, 3, 1, "", "model_parametrized_name"], [104, 3, 1, "", "model_post_init"], [104, 3, 1, "", "model_rebuild"], [104, 3, 1, "", "model_validate"], [104, 3, 1, "", "model_validate_json"], [104, 3, 1, "", "model_validate_strings"], [104, 3, 1, "", "parse_file"], [104, 3, 1, "", "parse_obj"], [104, 3, 1, "", "parse_raw"], [104, 3, 1, "", "schema"], [104, 3, 1, "", "schema_json"], [104, 3, 1, "", "stack"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_header"], [104, 3, 1, "", "to_yaml"], [104, 3, 1, "", "update_forward_refs"], [104, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[105, 2, 1, "", "alpha"], [105, 2, 1, "", "background"], [105, 2, 1, "", "background_model"], [105, 3, 1, "", "copy"], [105, 2, 1, "", "counts"], [105, 3, 1, "", "create"], [105, 3, 1, "", "cutout"], [105, 2, 1, "", "data_shape"], [105, 3, 1, "", "downsample"], [105, 2, 1, "", "edisp"], [105, 2, 1, "", "energy_range"], [105, 2, 1, "", "energy_range_fit"], [105, 2, 1, "", "energy_range_safe"], [105, 2, 1, "", "energy_range_total"], [105, 2, 1, "", "evaluators"], [105, 2, 1, "", "excess"], [105, 2, 1, "", "exposure"], [105, 3, 1, "", "fake"], [105, 3, 1, "", "from_dict"], [105, 3, 1, "", "from_geoms"], [105, 3, 1, "", "from_hdulist"], [105, 3, 1, "", "from_map_dataset"], [105, 2, 1, "", "geoms"], [105, 2, 1, "", "gti"], [105, 3, 1, "", "info_dict"], [105, 2, 1, "", "mask"], [105, 2, 1, "", "mask_fit"], [105, 2, 1, "", "mask_fit_image"], [105, 2, 1, "", "mask_image"], [105, 2, 1, "", "mask_safe"], [105, 2, 1, "", "mask_safe_edisp"], [105, 2, 1, "", "mask_safe_image"], [105, 2, 1, "", "mask_safe_psf"], [105, 2, 1, "", "meta"], [105, 2, 1, "", "meta_table"], [105, 2, 1, "", "models"], [105, 2, 1, "", "name"], [105, 3, 1, "", "npred"], [105, 3, 1, "", "npred_background"], [105, 3, 1, "", "npred_off"], [105, 3, 1, "", "npred_signal"], [105, 3, 1, "", "pad"], [105, 3, 1, "", "peek"], [105, 3, 1, "", "plot_residuals"], [105, 3, 1, "", "plot_residuals_spatial"], [105, 3, 1, "", "plot_residuals_spectral"], [105, 2, 1, "", "psf"], [105, 3, 1, "", "read"], [105, 3, 1, "", "resample_energy_axis"], [105, 3, 1, "", "reset_data_cache"], [105, 3, 1, "", "residuals"], [105, 3, 1, "", "slice_by_energy"], [105, 3, 1, "", "slice_by_idx"], [105, 3, 1, "", "stack"], [105, 3, 1, "", "stat_array"], [105, 3, 1, "", "stat_sum"], [105, 2, 1, "", "stat_type"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_dict"], [105, 3, 1, "", "to_hdulist"], [105, 3, 1, "", "to_image"], [105, 3, 1, "", "to_map_dataset"], [105, 3, 1, "", "to_masked"], [105, 3, 1, "", "to_region_map_dataset"], [105, 3, 1, "", "to_spectrum_dataset"], [105, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[106, 3, 1, "", "get_filenames"], [106, 3, 1, "", "get_valid_path"], [106, 3, 1, "", "read"], [106, 3, 1, "", "read_arf"], [106, 3, 1, "", "read_bkg"], [106, 3, 1, "", "read_pha"], [106, 3, 1, "", "read_rmf"], [106, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[107, 3, 1, "", "get_filenames"], [107, 3, 1, "", "get_ogip_meta"], [107, 2, 1, "", "tag"], [107, 3, 1, "", "to_counts_hdulist"], [107, 3, 1, "", "write"], [107, 3, 1, "", "write_arf"], [107, 3, 1, "", "write_bkg"], [107, 3, 1, "", "write_pha"], [107, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[108, 3, 1, "", "event_det_coords"], [108, 3, 1, "", "event_list_meta"], [108, 3, 1, "", "run"], [108, 3, 1, "", "sample_background"], [108, 3, 1, "", "sample_edisp"], [108, 3, 1, "", "sample_psf"], [108, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[109, 2, 1, "", "background"], [109, 2, 1, "", "background_model"], [109, 3, 1, "", "copy"], [109, 2, 1, "", "counts"], [109, 3, 1, "", "create"], [109, 3, 1, "", "cutout"], [109, 2, 1, "", "data_shape"], [109, 3, 1, "", "downsample"], [109, 2, 1, "", "edisp"], [109, 2, 1, "", "energy_range"], [109, 2, 1, "", "energy_range_fit"], [109, 2, 1, "", "energy_range_safe"], [109, 2, 1, "", "energy_range_total"], [109, 2, 1, "", "evaluators"], [109, 2, 1, "", "excess"], [109, 2, 1, "", "exposure"], [109, 3, 1, "", "fake"], [109, 3, 1, "", "from_dict"], [109, 3, 1, "", "from_geoms"], [109, 3, 1, "", "from_hdulist"], [109, 2, 1, "", "geoms"], [109, 2, 1, "", "gti"], [109, 3, 1, "", "info_dict"], [109, 2, 1, "", "mask"], [109, 2, 1, "", "mask_fit"], [109, 2, 1, "", "mask_fit_image"], [109, 2, 1, "", "mask_image"], [109, 2, 1, "", "mask_safe"], [109, 2, 1, "", "mask_safe_edisp"], [109, 2, 1, "", "mask_safe_image"], [109, 2, 1, "", "mask_safe_psf"], [109, 2, 1, "", "meta"], [109, 2, 1, "", "meta_table"], [109, 2, 1, "", "models"], [109, 2, 1, "", "name"], [109, 3, 1, "", "npred"], [109, 3, 1, "", "npred_background"], [109, 3, 1, "", "npred_signal"], [109, 3, 1, "", "pad"], [109, 3, 1, "", "peek"], [109, 3, 1, "", "plot_counts"], [109, 3, 1, "", "plot_excess"], [109, 3, 1, "", "plot_fit"], [109, 3, 1, "", "plot_masks"], [109, 3, 1, "", "plot_residuals"], [109, 3, 1, "", "plot_residuals_spatial"], [109, 3, 1, "", "plot_residuals_spectral"], [109, 2, 1, "", "psf"], [109, 3, 1, "", "read"], [109, 3, 1, "", "resample_energy_axis"], [109, 3, 1, "", "reset_data_cache"], [109, 3, 1, "", "residuals"], [109, 3, 1, "", "slice_by_energy"], [109, 3, 1, "", "slice_by_idx"], [109, 3, 1, "", "stack"], [109, 3, 1, "", "stat_array"], [109, 3, 1, "", "stat_sum"], [109, 2, 1, "", "stat_type"], [109, 2, 1, "", "tag"], [109, 3, 1, "", "to_dict"], [109, 3, 1, "", "to_hdulist"], [109, 3, 1, "", "to_image"], [109, 3, 1, "", "to_masked"], [109, 3, 1, "", "to_region_map_dataset"], [109, 3, 1, "", "to_spectrum_dataset"], [109, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[110, 2, 1, "", "alpha"], [110, 2, 1, "", "background"], [110, 2, 1, "", "background_model"], [110, 3, 1, "", "copy"], [110, 2, 1, "", "counts"], [110, 3, 1, "", "create"], [110, 3, 1, "", "cutout"], [110, 2, 1, "", "data_shape"], [110, 3, 1, "", "downsample"], [110, 2, 1, "", "edisp"], [110, 2, 1, "", "energy_range"], [110, 2, 1, "", "energy_range_fit"], [110, 2, 1, "", "energy_range_safe"], [110, 2, 1, "", "energy_range_total"], [110, 2, 1, "", "evaluators"], [110, 2, 1, "", "excess"], [110, 2, 1, "", "exposure"], [110, 3, 1, "", "fake"], [110, 3, 1, "", "from_dict"], [110, 3, 1, "", "from_geoms"], [110, 3, 1, "", "from_hdulist"], [110, 3, 1, "", "from_map_dataset"], [110, 3, 1, "", "from_spectrum_dataset"], [110, 2, 1, "", "geoms"], [110, 2, 1, "", "gti"], [110, 3, 1, "", "info_dict"], [110, 2, 1, "", "mask"], [110, 2, 1, "", "mask_fit"], [110, 2, 1, "", "mask_fit_image"], [110, 2, 1, "", "mask_image"], [110, 2, 1, "", "mask_safe"], [110, 2, 1, "", "mask_safe_edisp"], [110, 2, 1, "", "mask_safe_image"], [110, 2, 1, "", "mask_safe_psf"], [110, 2, 1, "", "meta"], [110, 2, 1, "", "meta_table"], [110, 2, 1, "", "models"], [110, 2, 1, "", "name"], [110, 3, 1, "", "npred"], [110, 3, 1, "", "npred_background"], [110, 3, 1, "", "npred_off"], [110, 3, 1, "", "npred_signal"], [110, 3, 1, "", "pad"], [110, 3, 1, "", "peek"], [110, 3, 1, "", "plot_counts"], [110, 3, 1, "", "plot_excess"], [110, 3, 1, "", "plot_fit"], [110, 3, 1, "", "plot_masks"], [110, 3, 1, "", "plot_residuals"], [110, 3, 1, "", "plot_residuals_spatial"], [110, 3, 1, "", "plot_residuals_spectral"], [110, 2, 1, "", "psf"], [110, 3, 1, "", "read"], [110, 3, 1, "", "resample_energy_axis"], [110, 3, 1, "", "reset_data_cache"], [110, 3, 1, "", "residuals"], [110, 3, 1, "", "slice_by_energy"], [110, 3, 1, "", "slice_by_idx"], [110, 3, 1, "", "stack"], [110, 3, 1, "", "stat_array"], [110, 3, 1, "", "stat_sum"], [110, 2, 1, "", "stat_type"], [110, 2, 1, "", "tag"], [110, 3, 1, "", "to_dict"], [110, 3, 1, "", "to_hdulist"], [110, 3, 1, "", "to_image"], [110, 3, 1, "", "to_map_dataset"], [110, 3, 1, "", "to_masked"], [110, 3, 1, "", "to_region_map_dataset"], [110, 3, 1, "", "to_spectrum_dataset"], [110, 3, 1, "", "write"]], "gammapy.datasets.utils": [[116, 4, 1, "", "apply_edisp"], [117, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[118, 1, 1, "", "ASmoothMapEstimator"], [119, 5, 1, "", "ESTIMATOR_REGISTRY"], [120, 1, 1, "", "EnergyDependentMorphologyEstimator"], [121, 1, 1, "", "Estimator"], [122, 1, 1, "", "ExcessMapEstimator"], [123, 1, 1, "", "FluxMaps"], [124, 1, 1, "", "FluxMetaData"], [125, 1, 1, "", "FluxPoints"], [126, 1, 1, "", "FluxPointsEstimator"], [127, 1, 1, "", "FluxProfileEstimator"], [128, 1, 1, "", "ImageProfile"], [129, 1, 1, "", "ImageProfileEstimator"], [130, 1, 1, "", "LightCurveEstimator"], [131, 1, 1, "", "ParameterEstimator"], [132, 1, 1, "", "SensitivityEstimator"], [133, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[118, 2, 1, "", "config_parameters"], [118, 3, 1, "", "copy"], [118, 3, 1, "", "estimate_maps"], [118, 3, 1, "", "get_kernels"], [118, 3, 1, "", "get_scales"], [118, 3, 1, "", "run"], [118, 3, 1, "", "selection_all"], [118, 2, 1, "", "selection_optional"], [118, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "estimate_energy_dependence"], [120, 3, 1, "", "run"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 3, 1, "", "run"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[122, 2, 1, "", "config_parameters"], [122, 3, 1, "", "copy"], [122, 2, 1, "", "correlation_radius"], [122, 3, 1, "", "estimate_excess_map"], [122, 3, 1, "", "estimate_exposure_reco_energy"], [122, 3, 1, "", "estimate_kernel"], [122, 3, 1, "", "estimate_mask_default"], [122, 3, 1, "", "run"], [122, 2, 1, "", "selection_optional"], [122, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[123, 2, 1, "", "acceptance_off"], [123, 2, 1, "", "acceptance_on"], [123, 3, 1, "", "all_quantities"], [123, 2, 1, "", "alpha"], [123, 2, 1, "", "available_quantities"], [123, 3, 1, "", "copy"], [123, 2, 1, "", "counts"], [123, 2, 1, "", "dnde"], [123, 2, 1, "", "dnde_err"], [123, 2, 1, "", "dnde_errn"], [123, 2, 1, "", "dnde_errp"], [123, 2, 1, "", "dnde_ref"], [123, 2, 1, "", "dnde_scan_values"], [123, 2, 1, "", "dnde_ul"], [123, 2, 1, "", "e2dnde"], [123, 2, 1, "", "e2dnde_err"], [123, 2, 1, "", "e2dnde_errn"], [123, 2, 1, "", "e2dnde_errp"], [123, 2, 1, "", "e2dnde_ref"], [123, 2, 1, "", "e2dnde_ul"], [123, 2, 1, "", "eflux"], [123, 2, 1, "", "eflux_err"], [123, 2, 1, "", "eflux_errn"], [123, 2, 1, "", "eflux_errp"], [123, 2, 1, "", "eflux_ref"], [123, 2, 1, "", "eflux_ul"], [123, 2, 1, "", "energy_axis"], [123, 2, 1, "", "energy_max"], [123, 2, 1, "", "energy_min"], [123, 2, 1, "", "energy_ref"], [123, 2, 1, "", "filter_success_nan"], [123, 2, 1, "", "flux"], [123, 2, 1, "", "flux_err"], [123, 2, 1, "", "flux_errn"], [123, 2, 1, "", "flux_errp"], [123, 2, 1, "", "flux_ref"], [123, 2, 1, "", "flux_sensitivity"], [123, 2, 1, "", "flux_ul"], [123, 3, 1, "", "from_hdulist"], [123, 3, 1, "", "from_maps"], [123, 3, 1, "", "from_stack"], [123, 2, 1, "", "geom"], [123, 3, 1, "", "get_flux_points"], [123, 2, 1, "", "has_any_ts"], [123, 2, 1, "", "has_stat_profiles"], [123, 2, 1, "", "has_success"], [123, 2, 1, "", "has_ul"], [123, 2, 1, "", "is_convertible_to_flux_sed_type"], [123, 2, 1, "", "is_ul"], [123, 3, 1, "", "iter_by_axis"], [123, 2, 1, "", "n_dof"], [123, 2, 1, "", "n_sigma"], [123, 2, 1, "", "n_sigma_ul"], [123, 2, 1, "", "niter"], [123, 2, 1, "", "norm"], [123, 2, 1, "", "norm_err"], [123, 2, 1, "", "norm_errn"], [123, 2, 1, "", "norm_errp"], [123, 2, 1, "", "norm_sensitivity"], [123, 2, 1, "", "norm_ul"], [123, 2, 1, "", "npred"], [123, 2, 1, "", "npred_background"], [123, 2, 1, "", "npred_excess"], [123, 2, 1, "", "npred_excess_err"], [123, 2, 1, "", "npred_excess_errn"], [123, 2, 1, "", "npred_excess_errp"], [123, 2, 1, "", "npred_excess_ref"], [123, 2, 1, "", "npred_excess_ul"], [123, 3, 1, "", "read"], [123, 2, 1, "", "reference_model"], [123, 2, 1, "", "reference_model_default"], [123, 2, 1, "", "reference_spectral_model"], [123, 2, 1, "", "sed_type_init"], [123, 2, 1, "", "sed_type_plot_default"], [123, 3, 1, "", "slice_by_coord"], [123, 3, 1, "", "slice_by_energy"], [123, 3, 1, "", "slice_by_idx"], [123, 3, 1, "", "slice_by_time"], [123, 2, 1, "", "sqrt_ts"], [123, 2, 1, "", "sqrt_ts_threshold_ul"], [123, 2, 1, "", "stat"], [123, 2, 1, "", "stat_null"], [123, 2, 1, "", "stat_scan"], [123, 2, 1, "", "success"], [123, 3, 1, "", "to_hdulist"], [123, 3, 1, "", "to_maps"], [123, 2, 1, "", "ts"], [123, 2, 1, "", "ts_scan"], [123, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[124, 3, 1, "", "construct"], [124, 3, 1, "", "copy"], [124, 3, 1, "", "dict"], [124, 3, 1, "", "from_header"], [124, 3, 1, "", "from_orm"], [124, 3, 1, "", "json"], [124, 2, 1, "", "model_computed_fields"], [124, 2, 1, "", "model_config"], [124, 3, 1, "", "model_construct"], [124, 3, 1, "", "model_copy"], [124, 3, 1, "", "model_dump"], [124, 3, 1, "", "model_dump_json"], [124, 2, 1, "", "model_extra"], [124, 2, 1, "", "model_fields"], [124, 2, 1, "", "model_fields_set"], [124, 3, 1, "", "model_json_schema"], [124, 3, 1, "", "model_parametrized_name"], [124, 3, 1, "", "model_post_init"], [124, 3, 1, "", "model_rebuild"], [124, 3, 1, "", "model_validate"], [124, 3, 1, "", "model_validate_json"], [124, 3, 1, "", "model_validate_strings"], [124, 3, 1, "", "parse_file"], [124, 3, 1, "", "parse_obj"], [124, 3, 1, "", "parse_raw"], [124, 3, 1, "", "schema"], [124, 3, 1, "", "schema_json"], [124, 2, 1, "", "tag"], [124, 3, 1, "", "to_header"], [124, 3, 1, "", "to_yaml"], [124, 3, 1, "", "update_forward_refs"], [124, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[125, 2, 1, "", "acceptance_off"], [125, 2, 1, "", "acceptance_on"], [125, 3, 1, "", "all_quantities"], [125, 2, 1, "", "alpha"], [125, 2, 1, "", "available_quantities"], [125, 3, 1, "", "copy"], [125, 2, 1, "", "counts"], [125, 2, 1, "", "dnde"], [125, 2, 1, "", "dnde_err"], [125, 2, 1, "", "dnde_errn"], [125, 2, 1, "", "dnde_errp"], [125, 2, 1, "", "dnde_ref"], [125, 2, 1, "", "dnde_scan_values"], [125, 2, 1, "", "dnde_ul"], [125, 2, 1, "", "e2dnde"], [125, 2, 1, "", "e2dnde_err"], [125, 2, 1, "", "e2dnde_errn"], [125, 2, 1, "", "e2dnde_errp"], [125, 2, 1, "", "e2dnde_ref"], [125, 2, 1, "", "e2dnde_ul"], [125, 2, 1, "", "eflux"], [125, 2, 1, "", "eflux_err"], [125, 2, 1, "", "eflux_errn"], [125, 2, 1, "", "eflux_errp"], [125, 2, 1, "", "eflux_ref"], [125, 2, 1, "", "eflux_ul"], [125, 2, 1, "", "energy_axis"], [125, 2, 1, "", "energy_max"], [125, 2, 1, "", "energy_min"], [125, 2, 1, "", "energy_ref"], [125, 2, 1, "", "filter_success_nan"], [125, 2, 1, "", "flux"], [125, 2, 1, "", "flux_err"], [125, 2, 1, "", "flux_errn"], [125, 2, 1, "", "flux_errp"], [125, 2, 1, "", "flux_ref"], [125, 2, 1, "", "flux_sensitivity"], [125, 2, 1, "", "flux_ul"], [125, 3, 1, "", "from_hdulist"], [125, 3, 1, "", "from_maps"], [125, 3, 1, "", "from_stack"], [125, 3, 1, "", "from_table"], [125, 2, 1, "", "geom"], [125, 3, 1, "", "get_flux_points"], [125, 2, 1, "", "has_any_ts"], [125, 2, 1, "", "has_stat_profiles"], [125, 2, 1, "", "has_success"], [125, 2, 1, "", "has_ul"], [125, 2, 1, "", "is_convertible_to_flux_sed_type"], [125, 2, 1, "", "is_ul"], [125, 3, 1, "", "iter_by_axis"], [125, 2, 1, "", "n_dof"], [125, 2, 1, "", "n_sigma"], [125, 2, 1, "", "n_sigma_ul"], [125, 2, 1, "", "niter"], [125, 2, 1, "", "norm"], [125, 2, 1, "", "norm_err"], [125, 2, 1, "", "norm_errn"], [125, 2, 1, "", "norm_errp"], [125, 2, 1, "", "norm_sensitivity"], [125, 2, 1, "", "norm_ul"], [125, 2, 1, "", "npred"], [125, 2, 1, "", "npred_background"], [125, 2, 1, "", "npred_excess"], [125, 2, 1, "", "npred_excess_err"], [125, 2, 1, "", "npred_excess_errn"], [125, 2, 1, "", "npred_excess_errp"], [125, 2, 1, "", "npred_excess_ref"], [125, 2, 1, "", "npred_excess_ul"], [125, 3, 1, "", "plot"], [125, 3, 1, "", "plot_ts_profiles"], [125, 3, 1, "", "read"], [125, 3, 1, "", "recompute_ul"], [125, 2, 1, "", "reference_model"], [125, 2, 1, "", "reference_model_default"], [125, 2, 1, "", "reference_spectral_model"], [125, 3, 1, "", "resample_axis"], [125, 2, 1, "", "sed_type_init"], [125, 2, 1, "", "sed_type_plot_default"], [125, 3, 1, "", "slice_by_coord"], [125, 3, 1, "", "slice_by_energy"], [125, 3, 1, "", "slice_by_idx"], [125, 3, 1, "", "slice_by_time"], [125, 2, 1, "", "sqrt_ts"], [125, 2, 1, "", "sqrt_ts_threshold_ul"], [125, 2, 1, "", "stat"], [125, 2, 1, "", "stat_null"], [125, 2, 1, "", "stat_scan"], [125, 2, 1, "", "success"], [125, 3, 1, "", "to_hdulist"], [125, 3, 1, "", "to_maps"], [125, 3, 1, "", "to_table"], [125, 2, 1, "", "ts"], [125, 2, 1, "", "ts_scan"], [125, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[126, 2, 1, "", "config_parameters"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "estimate_best_fit"], [126, 3, 1, "", "estimate_counts"], [126, 3, 1, "", "estimate_errn_errp"], [126, 3, 1, "", "estimate_flux_point"], [126, 3, 1, "", "estimate_npred"], [126, 3, 1, "", "estimate_npred_excess"], [126, 3, 1, "", "estimate_scan"], [126, 3, 1, "", "estimate_ts"], [126, 3, 1, "", "estimate_ul"], [126, 3, 1, "", "get_scale_model"], [126, 2, 1, "", "n_jobs"], [126, 2, 1, "", "parallel_backend"], [126, 3, 1, "", "run"], [126, 2, 1, "", "selection_optional"], [126, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[127, 2, 1, "", "config_parameters"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "estimate_best_fit"], [127, 3, 1, "", "estimate_counts"], [127, 3, 1, "", "estimate_errn_errp"], [127, 3, 1, "", "estimate_flux_point"], [127, 3, 1, "", "estimate_npred"], [127, 3, 1, "", "estimate_npred_excess"], [127, 3, 1, "", "estimate_scan"], [127, 3, 1, "", "estimate_ts"], [127, 3, 1, "", "estimate_ul"], [127, 3, 1, "", "get_scale_model"], [127, 2, 1, "", "n_jobs"], [127, 2, 1, "", "parallel_backend"], [127, 2, 1, "", "projected_distance_axis"], [127, 3, 1, "", "run"], [127, 2, 1, "", "selection_optional"], [127, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[128, 3, 1, "", "normalize"], [128, 3, 1, "", "peek"], [128, 3, 1, "", "plot"], [128, 3, 1, "", "plot_err"], [128, 2, 1, "", "profile"], [128, 2, 1, "", "profile_err"], [128, 3, 1, "", "smooth"], [128, 2, 1, "", "x_max"], [128, 2, 1, "", "x_min"], [128, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[130, 2, 1, "", "config_parameters"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "estimate_best_fit"], [130, 3, 1, "", "estimate_counts"], [130, 3, 1, "", "estimate_errn_errp"], [130, 3, 1, "", "estimate_flux_point"], [130, 3, 1, "", "estimate_npred"], [130, 3, 1, "", "estimate_npred_excess"], [130, 3, 1, "", "estimate_scan"], [130, 3, 1, "", "estimate_time_bin_flux"], [130, 3, 1, "", "estimate_ts"], [130, 3, 1, "", "estimate_ul"], [130, 3, 1, "", "expand_map"], [130, 3, 1, "", "get_scale_model"], [130, 2, 1, "", "n_jobs"], [130, 2, 1, "", "parallel_backend"], [130, 3, 1, "", "run"], [130, 2, 1, "", "selection_optional"], [130, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "estimate_best_fit"], [131, 3, 1, "", "estimate_counts"], [131, 3, 1, "", "estimate_errn_errp"], [131, 3, 1, "", "estimate_npred"], [131, 3, 1, "", "estimate_scan"], [131, 3, 1, "", "estimate_ts"], [131, 3, 1, "", "estimate_ul"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "estimate_min_e2dnde"], [132, 3, 1, "", "estimate_min_excess"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[133, 2, 1, "", "config_parameters"], [133, 3, 1, "", "copy"], [133, 3, 1, "", "estimate_fit_input_maps"], [133, 3, 1, "", "estimate_flux_default"], [133, 3, 1, "", "estimate_flux_map"], [133, 3, 1, "", "estimate_kernel"], [133, 3, 1, "", "estimate_mask_default"], [133, 3, 1, "", "estimate_pad_width"], [133, 2, 1, "", "n_jobs"], [133, 2, 1, "", "parallel_backend"], [133, 3, 1, "", "run"], [133, 2, 1, "", "selection_all"], [133, 2, 1, "", "selection_optional"], [133, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[134, 4, 1, "", "combine_flux_maps"], [135, 4, 1, "", "combine_significance_maps"], [136, 4, 1, "", "compute_lightcurve_discrete_correlation"], [137, 4, 1, "", "compute_lightcurve_doublingtime"], [138, 4, 1, "", "compute_lightcurve_fpp"], [139, 4, 1, "", "compute_lightcurve_fvar"], [140, 4, 1, "", "estimate_exposure_reco_energy"], [141, 4, 1, "", "find_peaks"], [142, 4, 1, "", "find_peaks_in_flux_map"], [143, 4, 1, "", "get_combined_flux_maps"], [144, 4, 1, "", "get_combined_significance_maps"], [145, 4, 1, "", "get_rebinned_axis"], [146, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[147, 1, 1, "", "Background2D"], [148, 1, 1, "", "Background3D"], [149, 1, 1, "", "BackgroundIRF"], [150, 1, 1, "", "EDispKernel"], [151, 1, 1, "", "EDispKernelMap"], [152, 1, 1, "", "EDispMap"], [153, 1, 1, "", "EffectiveAreaTable2D"], [154, 1, 1, "", "EnergyDependentMultiGaussPSF"], [155, 1, 1, "", "EnergyDispersion2D"], [156, 1, 1, "", "FoVAlignment"], [157, 1, 1, "", "IRF"], [158, 1, 1, "", "IRFMap"], [159, 5, 1, "", "IRF_REGISTRY"], [160, 1, 1, "", "PSF3D"], [161, 1, 1, "", "PSFKernel"], [162, 1, 1, "", "PSFKing"], [163, 1, 1, "", "PSFMap"], [164, 1, 1, "", "ParametricPSF"], [165, 1, 1, "", "RadMax2D"], [166, 1, 1, "", "RecoPSFMap"], [167, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[147, 2, 1, "", "axes"], [147, 3, 1, "", "cumsum"], [147, 2, 1, "", "data"], [147, 2, 1, "", "default_interp_kwargs"], [147, 2, 1, "", "default_unit"], [147, 3, 1, "", "evaluate"], [147, 2, 1, "", "fov_alignment"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "from_table"], [147, 2, 1, "", "has_offset_axis"], [147, 3, 1, "", "integral"], [147, 3, 1, "", "integrate_log_log"], [147, 3, 1, "", "interp_missing_data"], [147, 3, 1, "", "is_allclose"], [147, 2, 1, "", "is_pointlike"], [147, 3, 1, "", "normalize"], [147, 3, 1, "", "pad"], [147, 3, 1, "", "peek"], [147, 3, 1, "", "plot"], [147, 3, 1, "", "plot_at_energy"], [147, 3, 1, "", "plot_energy_dependence"], [147, 3, 1, "", "plot_offset_dependence"], [147, 3, 1, "", "plot_spectrum"], [147, 2, 1, "", "quantity"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "slice_by_idx"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_3d"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_table"], [147, 3, 1, "", "to_table_hdu"], [147, 3, 1, "", "to_unit"], [147, 2, 1, "", "unit"], [147, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[148, 2, 1, "", "axes"], [148, 3, 1, "", "cumsum"], [148, 2, 1, "", "data"], [148, 2, 1, "", "default_interp_kwargs"], [148, 2, 1, "", "default_unit"], [148, 3, 1, "", "evaluate"], [148, 2, 1, "", "fov_alignment"], [148, 3, 1, "", "from_hdulist"], [148, 3, 1, "", "from_table"], [148, 2, 1, "", "has_offset_axis"], [148, 3, 1, "", "integral"], [148, 3, 1, "", "integrate_log_log"], [148, 3, 1, "", "interp_missing_data"], [148, 3, 1, "", "is_allclose"], [148, 2, 1, "", "is_pointlike"], [148, 3, 1, "", "normalize"], [148, 3, 1, "", "pad"], [148, 3, 1, "", "peek"], [148, 3, 1, "", "plot_at_energy"], [148, 2, 1, "", "quantity"], [148, 3, 1, "", "read"], [148, 2, 1, "", "required_axes"], [148, 3, 1, "", "slice_by_idx"], [148, 2, 1, "", "tag"], [148, 3, 1, "", "to_2d"], [148, 3, 1, "", "to_hdulist"], [148, 3, 1, "", "to_table"], [148, 3, 1, "", "to_table_hdu"], [148, 3, 1, "", "to_unit"], [148, 2, 1, "", "unit"], [148, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[149, 2, 1, "", "axes"], [149, 3, 1, "", "cumsum"], [149, 2, 1, "", "data"], [149, 2, 1, "", "default_interp_kwargs"], [149, 3, 1, "", "evaluate"], [149, 2, 1, "", "fov_alignment"], [149, 3, 1, "", "from_hdulist"], [149, 3, 1, "", "from_table"], [149, 2, 1, "", "has_offset_axis"], [149, 3, 1, "", "integral"], [149, 3, 1, "", "integrate_log_log"], [149, 3, 1, "", "interp_missing_data"], [149, 3, 1, "", "is_allclose"], [149, 2, 1, "", "is_pointlike"], [149, 3, 1, "", "normalize"], [149, 3, 1, "", "pad"], [149, 2, 1, "", "quantity"], [149, 3, 1, "", "read"], [149, 2, 1, "", "required_axes"], [149, 3, 1, "", "slice_by_idx"], [149, 2, 1, "", "tag"], [149, 3, 1, "", "to_hdulist"], [149, 3, 1, "", "to_table"], [149, 3, 1, "", "to_table_hdu"], [149, 3, 1, "", "to_unit"], [149, 2, 1, "", "unit"], [149, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_diagonal_response"], [150, 3, 1, "", "from_gauss"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 3, 1, "", "get_bias"], [150, 3, 1, "", "get_bias_energy"], [150, 3, 1, "", "get_mean"], [150, 3, 1, "", "get_resolution"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "pdf_in_safe_range"], [150, 2, 1, "", "pdf_matrix"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot_bias"], [150, 3, 1, "", "plot_matrix"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_image"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[151, 3, 1, "", "copy"], [151, 3, 1, "", "cutout"], [151, 3, 1, "", "downsample"], [151, 2, 1, "", "edisp_map"], [151, 3, 1, "", "from_diagonal_response"], [151, 3, 1, "", "from_edisp_kernel"], [151, 3, 1, "", "from_gauss"], [151, 3, 1, "", "from_geom"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "get_edisp_kernel"], [151, 2, 1, "", "has_single_spatial_bin"], [151, 2, 1, "", "mask_safe_image"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "resample_energy_axis"], [151, 3, 1, "", "slice_by_idx"], [151, 3, 1, "", "stack"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_image"], [151, 3, 1, "", "to_region_nd_map"], [151, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[152, 3, 1, "", "copy"], [152, 3, 1, "", "cutout"], [152, 3, 1, "", "downsample"], [152, 2, 1, "", "edisp_map"], [152, 3, 1, "", "from_diagonal_response"], [152, 3, 1, "", "from_geom"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "get_edisp_kernel"], [152, 2, 1, "", "has_single_spatial_bin"], [152, 2, 1, "", "mask_safe_image"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "peek"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "sample_coord"], [152, 3, 1, "", "slice_by_idx"], [152, 3, 1, "", "stack"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_edisp_kernel_map"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_region_nd_map"], [152, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[153, 2, 1, "", "axes"], [153, 3, 1, "", "cumsum"], [153, 2, 1, "", "data"], [153, 2, 1, "", "default_interp_kwargs"], [153, 2, 1, "", "default_unit"], [153, 3, 1, "", "evaluate"], [153, 2, 1, "", "fov_alignment"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "from_parametrization"], [153, 3, 1, "", "from_table"], [153, 2, 1, "", "has_offset_axis"], [153, 3, 1, "", "integral"], [153, 3, 1, "", "integrate_log_log"], [153, 3, 1, "", "interp_missing_data"], [153, 3, 1, "", "is_allclose"], [153, 2, 1, "", "is_pointlike"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "pad"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot"], [153, 3, 1, "", "plot_energy_dependence"], [153, 3, 1, "", "plot_offset_dependence"], [153, 2, 1, "", "quantity"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "slice_by_idx"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_table"], [153, 3, 1, "", "to_table_hdu"], [153, 3, 1, "", "to_unit"], [153, 2, 1, "", "unit"], [153, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "containment"], [154, 3, 1, "", "containment_radius"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 3, 1, "", "evaluate"], [154, 3, 1, "", "evaluate_containment"], [154, 3, 1, "", "evaluate_direct"], [154, 3, 1, "", "evaluate_parameters"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "info"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_containment_radius"], [154, 3, 1, "", "plot_containment_radius_vs_energy"], [154, 3, 1, "", "plot_psf_vs_rad"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 2, 1, "", "required_parameters"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_psf3d"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[155, 2, 1, "", "axes"], [155, 3, 1, "", "cumsum"], [155, 2, 1, "", "data"], [155, 2, 1, "", "default_interp_kwargs"], [155, 2, 1, "", "default_unit"], [155, 3, 1, "", "evaluate"], [155, 2, 1, "", "fov_alignment"], [155, 3, 1, "", "from_gauss"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "from_table"], [155, 2, 1, "", "has_offset_axis"], [155, 3, 1, "", "integral"], [155, 3, 1, "", "integrate_log_log"], [155, 3, 1, "", "interp_missing_data"], [155, 3, 1, "", "is_allclose"], [155, 2, 1, "", "is_pointlike"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "pad"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "plot_bias"], [155, 3, 1, "", "plot_migration"], [155, 2, 1, "", "quantity"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "slice_by_idx"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_edisp_kernel"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_table"], [155, 3, 1, "", "to_table_hdu"], [155, 3, 1, "", "to_unit"], [155, 2, 1, "", "unit"], [155, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[156, 2, 1, "", "ALTAZ"], [156, 2, 1, "", "RADEC"], [156, 2, 1, "", "REVERSE_LON_RADEC"]], "gammapy.irf.IRF": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 3, 1, "", "evaluate"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[158, 3, 1, "", "copy"], [158, 3, 1, "", "cutout"], [158, 3, 1, "", "downsample"], [158, 3, 1, "", "from_hdulist"], [158, 2, 1, "", "has_single_spatial_bin"], [158, 2, 1, "", "mask_safe_image"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 3, 1, "", "slice_by_idx"], [158, 3, 1, "", "stack"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_region_nd_map"], [158, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[160, 2, 1, "", "axes"], [160, 3, 1, "", "containment"], [160, 3, 1, "", "containment_radius"], [160, 3, 1, "", "cumsum"], [160, 2, 1, "", "data"], [160, 2, 1, "", "default_interp_kwargs"], [160, 2, 1, "", "default_unit"], [160, 3, 1, "", "evaluate"], [160, 2, 1, "", "fov_alignment"], [160, 3, 1, "", "from_hdulist"], [160, 3, 1, "", "from_table"], [160, 2, 1, "", "has_offset_axis"], [160, 3, 1, "", "info"], [160, 3, 1, "", "integral"], [160, 3, 1, "", "integrate_log_log"], [160, 3, 1, "", "interp_missing_data"], [160, 3, 1, "", "is_allclose"], [160, 2, 1, "", "is_pointlike"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "pad"], [160, 3, 1, "", "peek"], [160, 3, 1, "", "plot_containment_radius"], [160, 3, 1, "", "plot_containment_radius_vs_energy"], [160, 3, 1, "", "plot_psf_vs_rad"], [160, 2, 1, "", "quantity"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 3, 1, "", "slice_by_idx"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_table"], [160, 3, 1, "", "to_table_hdu"], [160, 3, 1, "", "to_unit"], [160, 2, 1, "", "unit"], [160, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[161, 2, 1, "", "data"], [161, 3, 1, "", "from_gauss"], [161, 3, 1, "", "from_spatial_model"], [161, 3, 1, "", "normalize"], [161, 3, 1, "", "peek"], [161, 3, 1, "", "plot_kernel"], [161, 2, 1, "", "psf_kernel_map"], [161, 3, 1, "", "read"], [161, 3, 1, "", "slice_by_idx"], [161, 3, 1, "", "to_image"], [161, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[162, 2, 1, "", "axes"], [162, 3, 1, "", "containment"], [162, 3, 1, "", "containment_radius"], [162, 3, 1, "", "cumsum"], [162, 2, 1, "", "data"], [162, 2, 1, "", "default_interp_kwargs"], [162, 3, 1, "", "evaluate"], [162, 3, 1, "", "evaluate_containment"], [162, 3, 1, "", "evaluate_direct"], [162, 3, 1, "", "evaluate_parameters"], [162, 2, 1, "", "fov_alignment"], [162, 3, 1, "", "from_hdulist"], [162, 3, 1, "", "from_table"], [162, 2, 1, "", "has_offset_axis"], [162, 3, 1, "", "info"], [162, 3, 1, "", "integral"], [162, 3, 1, "", "integrate_log_log"], [162, 3, 1, "", "interp_missing_data"], [162, 3, 1, "", "is_allclose"], [162, 2, 1, "", "is_pointlike"], [162, 3, 1, "", "normalize"], [162, 3, 1, "", "pad"], [162, 3, 1, "", "peek"], [162, 3, 1, "", "plot_containment_radius"], [162, 3, 1, "", "plot_containment_radius_vs_energy"], [162, 3, 1, "", "plot_psf_vs_rad"], [162, 2, 1, "", "quantity"], [162, 3, 1, "", "read"], [162, 2, 1, "", "required_axes"], [162, 2, 1, "", "required_parameters"], [162, 3, 1, "", "slice_by_idx"], [162, 2, 1, "", "tag"], [162, 3, 1, "", "to_hdulist"], [162, 3, 1, "", "to_psf3d"], [162, 3, 1, "", "to_table"], [162, 3, 1, "", "to_table_hdu"], [162, 3, 1, "", "to_unit"], [162, 2, 1, "", "unit"], [162, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[163, 3, 1, "", "containment"], [163, 3, 1, "", "containment_radius"], [163, 3, 1, "", "containment_radius_map"], [163, 3, 1, "", "copy"], [163, 3, 1, "", "cutout"], [163, 3, 1, "", "downsample"], [163, 2, 1, "", "energy_name"], [163, 3, 1, "", "from_gauss"], [163, 3, 1, "", "from_geom"], [163, 3, 1, "", "from_hdulist"], [163, 3, 1, "", "get_psf_kernel"], [163, 2, 1, "", "has_single_spatial_bin"], [163, 2, 1, "", "mask_safe_image"], [163, 3, 1, "", "normalize"], [163, 3, 1, "", "peek"], [163, 3, 1, "", "plot_containment_radius_vs_energy"], [163, 3, 1, "", "plot_psf_vs_rad"], [163, 2, 1, "", "psf_map"], [163, 3, 1, "", "read"], [163, 2, 1, "", "required_axes"], [163, 3, 1, "", "sample_coord"], [163, 3, 1, "", "slice_by_idx"], [163, 3, 1, "", "stack"], [163, 2, 1, "", "tag"], [163, 3, 1, "", "to_hdulist"], [163, 3, 1, "", "to_image"], [163, 3, 1, "", "to_region_nd_map"], [163, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[164, 2, 1, "", "axes"], [164, 3, 1, "", "containment"], [164, 3, 1, "", "containment_radius"], [164, 3, 1, "", "cumsum"], [164, 2, 1, "", "data"], [164, 2, 1, "", "default_interp_kwargs"], [164, 3, 1, "", "evaluate"], [164, 3, 1, "", "evaluate_containment"], [164, 3, 1, "", "evaluate_direct"], [164, 3, 1, "", "evaluate_parameters"], [164, 2, 1, "", "fov_alignment"], [164, 3, 1, "", "from_hdulist"], [164, 3, 1, "", "from_table"], [164, 2, 1, "", "has_offset_axis"], [164, 3, 1, "", "info"], [164, 3, 1, "", "integral"], [164, 3, 1, "", "integrate_log_log"], [164, 3, 1, "", "interp_missing_data"], [164, 3, 1, "", "is_allclose"], [164, 2, 1, "", "is_pointlike"], [164, 3, 1, "", "normalize"], [164, 3, 1, "", "pad"], [164, 3, 1, "", "peek"], [164, 3, 1, "", "plot_containment_radius"], [164, 3, 1, "", "plot_containment_radius_vs_energy"], [164, 3, 1, "", "plot_psf_vs_rad"], [164, 2, 1, "", "quantity"], [164, 3, 1, "", "read"], [164, 2, 1, "", "required_axes"], [164, 2, 1, "", "required_parameters"], [164, 3, 1, "", "slice_by_idx"], [164, 2, 1, "", "tag"], [164, 3, 1, "", "to_hdulist"], [164, 3, 1, "", "to_psf3d"], [164, 3, 1, "", "to_table"], [164, 3, 1, "", "to_table_hdu"], [164, 3, 1, "", "to_unit"], [164, 2, 1, "", "unit"], [164, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[165, 2, 1, "", "axes"], [165, 3, 1, "", "cumsum"], [165, 2, 1, "", "data"], [165, 2, 1, "", "default_interp_kwargs"], [165, 2, 1, "", "default_unit"], [165, 3, 1, "", "evaluate"], [165, 2, 1, "", "fov_alignment"], [165, 3, 1, "", "from_hdulist"], [165, 3, 1, "", "from_irf"], [165, 3, 1, "", "from_table"], [165, 2, 1, "", "has_offset_axis"], [165, 3, 1, "", "integral"], [165, 3, 1, "", "integrate_log_log"], [165, 3, 1, "", "interp_missing_data"], [165, 3, 1, "", "is_allclose"], [165, 2, 1, "", "is_fixed_rad_max"], [165, 2, 1, "", "is_pointlike"], [165, 3, 1, "", "normalize"], [165, 3, 1, "", "pad"], [165, 3, 1, "", "plot_rad_max_vs_energy"], [165, 2, 1, "", "quantity"], [165, 3, 1, "", "read"], [165, 2, 1, "", "required_axes"], [165, 3, 1, "", "slice_by_idx"], [165, 2, 1, "", "tag"], [165, 3, 1, "", "to_hdulist"], [165, 3, 1, "", "to_table"], [165, 3, 1, "", "to_table_hdu"], [165, 3, 1, "", "to_unit"], [165, 2, 1, "", "unit"], [165, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[166, 3, 1, "", "containment"], [166, 3, 1, "", "containment_radius"], [166, 3, 1, "", "containment_radius_map"], [166, 3, 1, "", "copy"], [166, 3, 1, "", "cutout"], [166, 3, 1, "", "downsample"], [166, 2, 1, "", "energy_name"], [166, 3, 1, "", "from_gauss"], [166, 3, 1, "", "from_geom"], [166, 3, 1, "", "from_hdulist"], [166, 3, 1, "", "get_psf_kernel"], [166, 2, 1, "", "has_single_spatial_bin"], [166, 2, 1, "", "mask_safe_image"], [166, 3, 1, "", "normalize"], [166, 3, 1, "", "peek"], [166, 3, 1, "", "plot_containment_radius_vs_energy"], [166, 3, 1, "", "plot_psf_vs_rad"], [166, 2, 1, "", "psf_map"], [166, 3, 1, "", "read"], [166, 2, 1, "", "required_axes"], [166, 3, 1, "", "sample_coord"], [166, 3, 1, "", "slice_by_idx"], [166, 3, 1, "", "stack"], [166, 2, 1, "", "tag"], [166, 3, 1, "", "to_hdulist"], [166, 3, 1, "", "to_image"], [166, 3, 1, "", "to_region_nd_map"], [166, 3, 1, "", "write"]], "gammapy.makers": [[168, 1, 1, "", "AdaptiveRingBackgroundMaker"], [169, 1, 1, "", "DatasetsMaker"], [170, 1, 1, "", "FoVBackgroundMaker"], [171, 5, 1, "", "MAKER_REGISTRY"], [172, 1, 1, "", "Maker"], [173, 1, 1, "", "MapDatasetMaker"], [174, 1, 1, "", "PhaseBackgroundMaker"], [175, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [176, 1, 1, "", "ReflectedRegionsFinder"], [177, 1, 1, "", "RegionsFinder"], [178, 1, 1, "", "RingBackgroundMaker"], [179, 1, 1, "", "SafeMaskMaker"], [180, 1, 1, "", "SpectrumDatasetMaker"], [181, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[168, 3, 1, "", "kernels"], [168, 3, 1, "", "make_cubes"], [168, 3, 1, "", "run"], [168, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[169, 3, 1, "", "callback"], [169, 3, 1, "", "error_callback"], [169, 3, 1, "", "make_dataset"], [169, 2, 1, "", "n_jobs"], [169, 2, 1, "", "offset_max"], [169, 2, 1, "", "parallel_backend"], [169, 3, 1, "", "run"], [169, 2, 1, "", "safe_mask_maker"], [169, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[170, 2, 1, "", "available_methods"], [170, 3, 1, "", "make_background_fit"], [170, 3, 1, "", "make_background_scale"], [170, 3, 1, "", "make_default_fov_background_model"], [170, 3, 1, "", "make_exclusion_mask"], [170, 2, 1, "", "method"], [170, 3, 1, "", "run"], [170, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[172, 3, 1, "", "run"], [172, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[173, 2, 1, "", "available_selection"], [173, 3, 1, "", "make_background"], [173, 3, 1, "", "make_counts"], [173, 3, 1, "", "make_edisp"], [173, 3, 1, "", "make_edisp_kernel"], [173, 3, 1, "", "make_exposure"], [173, 3, 1, "", "make_exposure_irf"], [173, 3, 1, "", "make_meta_table"], [173, 3, 1, "", "make_psf"], [173, 3, 1, "", "run"], [173, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[174, 3, 1, "", "make_counts"], [174, 3, 1, "", "make_counts_off"], [174, 3, 1, "", "run"], [174, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[175, 3, 1, "", "make_counts_off"], [175, 3, 1, "", "run"], [175, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[176, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[177, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[178, 3, 1, "", "kernel"], [178, 3, 1, "", "make_maps_off"], [178, 3, 1, "", "run"], [178, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[179, 2, 1, "", "available_methods"], [179, 3, 1, "", "make_mask_bkg_invalid"], [179, 3, 1, "", "make_mask_energy_aeff_default"], [179, 3, 1, "", "make_mask_energy_aeff_max"], [179, 3, 1, "", "make_mask_energy_bkg_peak"], [179, 3, 1, "", "make_mask_energy_edisp_bias"], [179, 3, 1, "", "make_mask_offset_max"], [179, 3, 1, "", "run"], [179, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[180, 2, 1, "", "available_selection"], [180, 3, 1, "", "make_background"], [180, 3, 1, "", "make_counts"], [180, 3, 1, "", "make_edisp"], [180, 3, 1, "", "make_edisp_kernel"], [180, 3, 1, "", "make_exposure"], [180, 3, 1, "", "make_exposure_irf"], [180, 3, 1, "", "make_meta_table"], [180, 3, 1, "", "make_psf"], [180, 3, 1, "", "run"], [180, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[181, 3, 1, "", "run"]], "gammapy.makers.utils": [[182, 4, 1, "", "make_counts_rad_max"], [183, 4, 1, "", "make_edisp_kernel_map"], [184, 4, 1, "", "make_edisp_map"], [185, 4, 1, "", "make_effective_livetime_map"], [186, 4, 1, "", "make_map_background_irf"], [187, 4, 1, "", "make_map_exposure_true_energy"], [188, 4, 1, "", "make_observation_time_map"], [189, 4, 1, "", "make_psf_map"], [190, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[191, 1, 1, "", "Geom"], [192, 1, 1, "", "HpxGeom"], [193, 1, 1, "", "HpxMap"], [194, 1, 1, "", "HpxNDMap"], [195, 1, 1, "", "LabelMapAxis"], [196, 1, 1, "", "Map"], [197, 1, 1, "", "MapAxes"], [198, 1, 1, "", "MapAxis"], [199, 1, 1, "", "MapCoord"], [200, 1, 1, "", "Maps"], [201, 1, 1, "", "RegionGeom"], [202, 1, 1, "", "RegionNDMap"], [203, 1, 1, "", "TimeMapAxis"], [204, 1, 1, "", "WcsGeom"], [205, 1, 1, "", "WcsMap"], [206, 1, 1, "", "WcsNDMap"], [207, 4, 1, "", "containment_radius"], [208, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[191, 2, 1, "", "as_energy_true"], [191, 2, 1, "", "center_coord"], [191, 2, 1, "", "center_pix"], [191, 2, 1, "", "center_skydir"], [191, 3, 1, "", "contains"], [191, 3, 1, "", "contains_pix"], [191, 3, 1, "", "coord_to_idx"], [191, 3, 1, "", "coord_to_pix"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "crop"], [191, 3, 1, "", "data_nbytes"], [191, 2, 1, "", "data_shape"], [191, 3, 1, "", "downsample"], [191, 3, 1, "", "drop"], [191, 3, 1, "", "energy_mask"], [191, 3, 1, "", "from_hdulist"], [191, 3, 1, "", "get_coord"], [191, 3, 1, "", "get_idx"], [191, 2, 1, "", "has_energy_axis"], [191, 2, 1, "", "is_allsky"], [191, 2, 1, "", "is_flat"], [191, 2, 1, "", "is_image"], [191, 3, 1, "", "pad"], [191, 3, 1, "", "pix_to_coord"], [191, 3, 1, "", "pix_to_idx"], [191, 3, 1, "", "rename_axes"], [191, 3, 1, "", "replace_axis"], [191, 3, 1, "", "resample_axis"], [191, 3, 1, "", "slice_by_idx"], [191, 3, 1, "", "solid_angle"], [191, 3, 1, "", "squash"], [191, 3, 1, "", "to_bands_hdu"], [191, 3, 1, "", "to_cube"], [191, 3, 1, "", "to_image"], [191, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[192, 2, 1, "", "as_energy_true"], [192, 2, 1, "", "axes"], [192, 2, 1, "", "axes_names"], [192, 2, 1, "", "center_coord"], [192, 2, 1, "", "center_pix"], [192, 2, 1, "", "center_skydir"], [192, 3, 1, "", "contains"], [192, 3, 1, "", "contains_pix"], [192, 3, 1, "", "coord_to_idx"], [192, 3, 1, "", "coord_to_pix"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "create"], [192, 3, 1, "", "crop"], [192, 3, 1, "", "cutout"], [192, 3, 1, "", "data_nbytes"], [192, 2, 1, "", "data_shape"], [192, 2, 1, "", "data_shape_axes"], [192, 3, 1, "", "downsample"], [192, 3, 1, "", "drop"], [192, 3, 1, "", "energy_mask"], [192, 2, 1, "", "frame"], [192, 3, 1, "", "from_hdu"], [192, 3, 1, "", "from_hdulist"], [192, 3, 1, "", "from_header"], [192, 3, 1, "", "get_coord"], [192, 3, 1, "", "get_idx"], [192, 3, 1, "", "get_index_list"], [192, 3, 1, "", "global_to_local"], [192, 2, 1, "", "has_energy_axis"], [192, 3, 1, "", "interp_weights"], [192, 2, 1, "", "ipix"], [192, 3, 1, "", "is_aligned"], [192, 3, 1, "", "is_allclose"], [192, 2, 1, "", "is_allsky"], [192, 2, 1, "", "is_flat"], [192, 2, 1, "", "is_hpx"], [192, 2, 1, "", "is_image"], [192, 2, 1, "", "is_region"], [192, 2, 1, "", "is_regular"], [192, 3, 1, "", "local_to_global"], [192, 2, 1, "", "ndim"], [192, 2, 1, "", "nest"], [192, 2, 1, "", "npix"], [192, 2, 1, "", "npix_max"], [192, 2, 1, "", "nside"], [192, 2, 1, "", "order"], [192, 2, 1, "", "ordering"], [192, 3, 1, "", "pad"], [192, 3, 1, "", "pix_to_coord"], [192, 3, 1, "", "pix_to_idx"], [192, 2, 1, "", "pixel_scales"], [192, 2, 1, "", "projection"], [192, 2, 1, "", "region"], [192, 3, 1, "", "region_mask"], [192, 3, 1, "", "rename_axes"], [192, 3, 1, "", "replace_axis"], [192, 3, 1, "", "resample_axis"], [192, 3, 1, "", "separation"], [192, 2, 1, "", "shape_axes"], [192, 3, 1, "", "slice_by_idx"], [192, 3, 1, "", "solid_angle"], [192, 3, 1, "", "squash"], [192, 3, 1, "", "to_bands_hdu"], [192, 3, 1, "", "to_binsz"], [192, 3, 1, "", "to_cube"], [192, 3, 1, "", "to_header"], [192, 3, 1, "", "to_image"], [192, 3, 1, "", "to_nside"], [192, 3, 1, "", "to_swapped"], [192, 3, 1, "", "to_wcs_geom"], [192, 3, 1, "", "to_wcs_tiles"], [192, 3, 1, "", "upsample"], [192, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[193, 3, 1, "", "coadd"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "create"], [193, 3, 1, "", "crop"], [193, 3, 1, "", "cumsum"], [193, 2, 1, "", "data"], [193, 3, 1, "", "dot"], [193, 3, 1, "", "downsample"], [193, 3, 1, "", "fill_by_coord"], [193, 3, 1, "", "fill_by_idx"], [193, 3, 1, "", "fill_by_pix"], [193, 3, 1, "", "fill_events"], [193, 3, 1, "", "from_geom"], [193, 3, 1, "", "from_hdulist"], [193, 3, 1, "", "from_stack"], [193, 2, 1, "", "geom"], [193, 3, 1, "", "get_by_coord"], [193, 3, 1, "", "get_by_idx"], [193, 3, 1, "", "get_by_pix"], [193, 3, 1, "", "get_image_by_coord"], [193, 3, 1, "", "get_image_by_idx"], [193, 3, 1, "", "get_image_by_pix"], [193, 3, 1, "", "get_spectrum"], [193, 3, 1, "", "integral"], [193, 3, 1, "", "interp_by_coord"], [193, 3, 1, "", "interp_by_pix"], [193, 3, 1, "", "interp_to_geom"], [193, 3, 1, "", "is_allclose"], [193, 2, 1, "", "is_mask"], [193, 3, 1, "", "iter_by_axis"], [193, 3, 1, "", "iter_by_image"], [193, 3, 1, "", "iter_by_image_data"], [193, 3, 1, "", "iter_by_image_index"], [193, 3, 1, "", "mask_nearest_position"], [193, 2, 1, "", "meta"], [193, 3, 1, "", "normalize"], [193, 3, 1, "", "pad"], [193, 3, 1, "", "plot_grid"], [193, 3, 1, "", "plot_interactive"], [193, 2, 1, "", "quantity"], [193, 3, 1, "", "read"], [193, 3, 1, "", "reduce"], [193, 3, 1, "", "reduce_over_axes"], [193, 3, 1, "", "rename_axes"], [193, 3, 1, "", "reorder_axes"], [193, 3, 1, "", "reproject_by_image"], [193, 3, 1, "", "reproject_to_geom"], [193, 3, 1, "", "resample"], [193, 3, 1, "", "resample_axis"], [193, 3, 1, "", "sample_coord"], [193, 3, 1, "", "set_by_coord"], [193, 3, 1, "", "set_by_idx"], [193, 3, 1, "", "set_by_pix"], [193, 3, 1, "", "slice_by_idx"], [193, 3, 1, "", "split_by_axis"], [193, 3, 1, "", "sum_over_axes"], [193, 2, 1, "", "tag"], [193, 3, 1, "", "to_cube"], [193, 3, 1, "", "to_hdu"], [193, 3, 1, "", "to_hdulist"], [193, 3, 1, "", "to_swapped"], [193, 3, 1, "", "to_unit"], [193, 3, 1, "", "to_wcs"], [193, 2, 1, "", "unit"], [193, 3, 1, "", "upsample"], [193, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[194, 3, 1, "", "coadd"], [194, 3, 1, "", "convolve"], [194, 3, 1, "", "convolve_full"], [194, 3, 1, "", "convolve_wcs"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "cumsum"], [194, 3, 1, "", "cutout"], [194, 2, 1, "", "data"], [194, 3, 1, "", "dot"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "fill_by_coord"], [194, 3, 1, "", "fill_by_idx"], [194, 3, 1, "", "fill_by_pix"], [194, 3, 1, "", "fill_events"], [194, 3, 1, "", "from_geom"], [194, 3, 1, "", "from_hdu"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "from_stack"], [194, 3, 1, "", "from_wcs_tiles"], [194, 2, 1, "", "geom"], [194, 3, 1, "", "get_by_coord"], [194, 3, 1, "", "get_by_idx"], [194, 3, 1, "", "get_by_pix"], [194, 3, 1, "", "get_image_by_coord"], [194, 3, 1, "", "get_image_by_idx"], [194, 3, 1, "", "get_image_by_pix"], [194, 3, 1, "", "get_spectrum"], [194, 3, 1, "", "integral"], [194, 3, 1, "", "interp_by_coord"], [194, 3, 1, "", "interp_by_pix"], [194, 3, 1, "", "interp_to_geom"], [194, 3, 1, "", "is_allclose"], [194, 2, 1, "", "is_mask"], [194, 3, 1, "", "iter_by_axis"], [194, 3, 1, "", "iter_by_image"], [194, 3, 1, "", "iter_by_image_data"], [194, 3, 1, "", "iter_by_image_index"], [194, 3, 1, "", "mask_nearest_position"], [194, 2, 1, "", "meta"], [194, 3, 1, "", "normalize"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "plot"], [194, 3, 1, "", "plot_grid"], [194, 3, 1, "", "plot_interactive"], [194, 3, 1, "", "plot_mask"], [194, 2, 1, "", "quantity"], [194, 3, 1, "", "read"], [194, 3, 1, "", "reduce"], [194, 3, 1, "", "reduce_over_axes"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "reorder_axes"], [194, 3, 1, "", "reproject_by_image"], [194, 3, 1, "", "reproject_to_geom"], [194, 3, 1, "", "resample"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "sample_coord"], [194, 3, 1, "", "set_by_coord"], [194, 3, 1, "", "set_by_idx"], [194, 3, 1, "", "set_by_pix"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "smooth"], [194, 3, 1, "", "split_by_axis"], [194, 3, 1, "", "stack"], [194, 3, 1, "", "sum_over_axes"], [194, 2, 1, "", "tag"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_hdu"], [194, 3, 1, "", "to_hdulist"], [194, 3, 1, "", "to_nside"], [194, 3, 1, "", "to_region_nd_map"], [194, 3, 1, "", "to_swapped"], [194, 3, 1, "", "to_unit"], [194, 3, 1, "", "to_wcs"], [194, 3, 1, "", "to_wcs_tiles"], [194, 2, 1, "", "unit"], [194, 3, 1, "", "upsample"], [194, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[195, 2, 1, "", "as_plot_center"], [195, 2, 1, "", "as_plot_edges"], [195, 2, 1, "", "as_plot_labels"], [195, 2, 1, "", "as_plot_xerr"], [195, 3, 1, "", "assert_name"], [195, 2, 1, "", "bin_width"], [195, 2, 1, "", "center"], [195, 3, 1, "", "concatenate"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "downsample"], [195, 2, 1, "", "edges"], [195, 2, 1, "", "edges_max"], [195, 2, 1, "", "edges_min"], [195, 3, 1, "", "format_plot_xaxis"], [195, 3, 1, "", "from_stack"], [195, 3, 1, "", "from_table"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "name"], [195, 2, 1, "", "nbin"], [195, 2, 1, "", "node_type"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 3, 1, "", "resample"], [195, 3, 1, "", "slice"], [195, 3, 1, "", "squash"], [195, 3, 1, "", "to_header"], [195, 2, 1, "", "unit"], [195, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[196, 3, 1, "", "coadd"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_interactive"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_unit"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[197, 3, 1, "", "assert_names"], [197, 3, 1, "", "bin_volume"], [197, 2, 1, "", "center_coord"], [197, 3, 1, "", "coord_to_idx"], [197, 3, 1, "", "coord_to_pix"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "count"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "drop"], [197, 3, 1, "", "from_default"], [197, 3, 1, "", "from_table"], [197, 3, 1, "", "from_table_hdu"], [197, 3, 1, "", "get_coord"], [197, 3, 1, "", "index"], [197, 3, 1, "", "index_data"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_flat"], [197, 2, 1, "", "is_unidimensional"], [197, 2, 1, "", "iter_with_reshape"], [197, 2, 1, "", "names"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "pix_to_coord"], [197, 3, 1, "", "pix_to_idx"], [197, 2, 1, "", "primary_axis"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "replace"], [197, 3, 1, "", "resample"], [197, 2, 1, "", "reverse"], [197, 2, 1, "", "shape"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "squash"], [197, 3, 1, "", "to_header"], [197, 3, 1, "", "to_table"], [197, 3, 1, "", "to_table_hdu"], [197, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[198, 2, 1, "", "as_plot_center"], [198, 2, 1, "", "as_plot_edges"], [198, 2, 1, "", "as_plot_labels"], [198, 2, 1, "", "as_plot_scale"], [198, 2, 1, "", "as_plot_xerr"], [198, 3, 1, "", "assert_name"], [198, 2, 1, "", "bin_width"], [198, 2, 1, "", "bounds"], [198, 2, 1, "", "center"], [198, 3, 1, "", "concatenate"], [198, 3, 1, "", "coord_to_idx"], [198, 3, 1, "", "coord_to_pix"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "downsample"], [198, 2, 1, "", "edges"], [198, 2, 1, "", "edges_max"], [198, 2, 1, "", "edges_min"], [198, 3, 1, "", "format_plot_xaxis"], [198, 3, 1, "", "format_plot_yaxis"], [198, 3, 1, "", "from_bounds"], [198, 3, 1, "", "from_edges"], [198, 3, 1, "", "from_energy_bounds"], [198, 3, 1, "", "from_energy_edges"], [198, 3, 1, "", "from_nodes"], [198, 3, 1, "", "from_stack"], [198, 3, 1, "", "from_table"], [198, 3, 1, "", "from_table_hdu"], [198, 3, 1, "", "group_table"], [198, 2, 1, "", "interp"], [198, 3, 1, "", "is_aligned"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "is_energy_axis"], [198, 2, 1, "", "iter_by_edges"], [198, 2, 1, "", "name"], [198, 2, 1, "", "nbin"], [198, 2, 1, "", "nbin_per_decade"], [198, 2, 1, "", "node_type"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "pix_to_coord"], [198, 3, 1, "", "pix_to_idx"], [198, 3, 1, "", "rename"], [198, 3, 1, "", "round"], [198, 3, 1, "", "slice"], [198, 3, 1, "", "squash"], [198, 3, 1, "", "to_header"], [198, 3, 1, "", "to_node_type"], [198, 3, 1, "", "to_table"], [198, 3, 1, "", "to_table_hdu"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"], [198, 2, 1, "", "use_center_as_plot_labels"], [198, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[199, 3, 1, "", "apply_mask"], [199, 2, 1, "", "axis_names"], [199, 2, 1, "", "broadcasted"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "create"], [199, 2, 1, "", "flat"], [199, 2, 1, "", "frame"], [199, 2, 1, "", "lat"], [199, 2, 1, "", "lon"], [199, 2, 1, "", "match_by_name"], [199, 2, 1, "", "ndim"], [199, 2, 1, "", "phi"], [199, 2, 1, "", "shape"], [199, 2, 1, "", "size"], [199, 2, 1, "", "skycoord"], [199, 2, 1, "", "theta"], [199, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[200, 3, 1, "", "clear"], [200, 3, 1, "", "from_geom"], [200, 3, 1, "", "from_hdulist"], [200, 2, 1, "", "geom"], [200, 3, 1, "", "get"], [200, 3, 1, "", "items"], [200, 3, 1, "", "keys"], [200, 3, 1, "", "pop"], [200, 3, 1, "", "popitem"], [200, 3, 1, "", "read"], [200, 3, 1, "", "setdefault"], [200, 3, 1, "", "to_hdulist"], [200, 3, 1, "", "update"], [200, 3, 1, "", "values"], [200, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[201, 2, 1, "", "as_energy_true"], [201, 2, 1, "", "axes"], [201, 2, 1, "", "axes_names"], [201, 3, 1, "", "bin_volume"], [201, 2, 1, "", "binsz_wcs"], [201, 2, 1, "", "center_coord"], [201, 2, 1, "", "center_pix"], [201, 2, 1, "", "center_skydir"], [201, 3, 1, "", "contains"], [201, 3, 1, "", "contains_pix"], [201, 3, 1, "", "contains_wcs_pix"], [201, 3, 1, "", "coord_to_idx"], [201, 3, 1, "", "coord_to_pix"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "create"], [201, 3, 1, "", "crop"], [201, 3, 1, "", "data_nbytes"], [201, 2, 1, "", "data_shape"], [201, 2, 1, "", "data_shape_axes"], [201, 3, 1, "", "downsample"], [201, 3, 1, "", "drop"], [201, 3, 1, "", "energy_mask"], [201, 2, 1, "", "frame"], [201, 3, 1, "", "from_hdulist"], [201, 3, 1, "", "from_regions"], [201, 3, 1, "", "get_coord"], [201, 3, 1, "", "get_idx"], [201, 3, 1, "", "get_wcs_coord_and_weights"], [201, 2, 1, "", "has_energy_axis"], [201, 2, 1, "", "is_all_point_sky_regions"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_allsky"], [201, 2, 1, "", "is_flat"], [201, 2, 1, "", "is_hpx"], [201, 2, 1, "", "is_image"], [201, 2, 1, "", "is_region"], [201, 2, 1, "", "is_regular"], [201, 2, 1, "", "npix"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "pix_to_coord"], [201, 3, 1, "", "pix_to_idx"], [201, 3, 1, "", "plot_region"], [201, 2, 1, "", "projection"], [201, 2, 1, "", "region"], [201, 3, 1, "", "rename_axes"], [201, 3, 1, "", "replace_axis"], [201, 3, 1, "", "resample_axis"], [201, 3, 1, "", "separation"], [201, 3, 1, "", "slice_by_idx"], [201, 3, 1, "", "solid_angle"], [201, 3, 1, "", "squash"], [201, 3, 1, "", "to_bands_hdu"], [201, 3, 1, "", "to_binsz"], [201, 3, 1, "", "to_binsz_wcs"], [201, 3, 1, "", "to_cube"], [201, 3, 1, "", "to_hdulist"], [201, 3, 1, "", "to_image"], [201, 3, 1, "", "to_wcs_geom"], [201, 3, 1, "", "union"], [201, 3, 1, "", "upsample"], [201, 2, 1, "", "wcs"], [201, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[202, 3, 1, "", "coadd"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "create"], [202, 3, 1, "", "crop"], [202, 3, 1, "", "cumsum"], [202, 3, 1, "", "cutout"], [202, 2, 1, "", "data"], [202, 3, 1, "", "dot"], [202, 3, 1, "", "downsample"], [202, 3, 1, "", "fill_by_coord"], [202, 3, 1, "", "fill_by_idx"], [202, 3, 1, "", "fill_by_pix"], [202, 3, 1, "", "fill_events"], [202, 3, 1, "", "from_geom"], [202, 3, 1, "", "from_hdulist"], [202, 3, 1, "", "from_stack"], [202, 3, 1, "", "from_table"], [202, 2, 1, "", "geom"], [202, 3, 1, "", "get_by_coord"], [202, 3, 1, "", "get_by_idx"], [202, 3, 1, "", "get_by_pix"], [202, 3, 1, "", "get_image_by_coord"], [202, 3, 1, "", "get_image_by_idx"], [202, 3, 1, "", "get_image_by_pix"], [202, 3, 1, "", "get_spectrum"], [202, 3, 1, "", "integral"], [202, 3, 1, "", "interp_by_coord"], [202, 3, 1, "", "interp_by_pix"], [202, 3, 1, "", "interp_to_geom"], [202, 3, 1, "", "is_allclose"], [202, 2, 1, "", "is_mask"], [202, 3, 1, "", "iter_by_axis"], [202, 3, 1, "", "iter_by_axis_data"], [202, 3, 1, "", "iter_by_image"], [202, 3, 1, "", "iter_by_image_data"], [202, 3, 1, "", "iter_by_image_index"], [202, 3, 1, "", "mask_nearest_position"], [202, 2, 1, "", "meta"], [202, 3, 1, "", "normalize"], [202, 3, 1, "", "pad"], [202, 3, 1, "", "plot"], [202, 3, 1, "", "plot_grid"], [202, 3, 1, "", "plot_hist"], [202, 3, 1, "", "plot_interactive"], [202, 3, 1, "", "plot_mask"], [202, 3, 1, "", "plot_region"], [202, 2, 1, "", "quantity"], [202, 3, 1, "", "read"], [202, 3, 1, "", "reduce"], [202, 3, 1, "", "reduce_over_axes"], [202, 3, 1, "", "rename_axes"], [202, 3, 1, "", "reorder_axes"], [202, 3, 1, "", "reproject_by_image"], [202, 3, 1, "", "reproject_to_geom"], [202, 3, 1, "", "resample"], [202, 3, 1, "", "resample_axis"], [202, 3, 1, "", "sample_coord"], [202, 3, 1, "", "set_by_coord"], [202, 3, 1, "", "set_by_idx"], [202, 3, 1, "", "set_by_pix"], [202, 3, 1, "", "slice_by_idx"], [202, 3, 1, "", "split_by_axis"], [202, 3, 1, "", "stack"], [202, 3, 1, "", "sum_over_axes"], [202, 2, 1, "", "tag"], [202, 3, 1, "", "to_cube"], [202, 3, 1, "", "to_hdulist"], [202, 3, 1, "", "to_region_nd_map"], [202, 3, 1, "", "to_table"], [202, 3, 1, "", "to_unit"], [202, 2, 1, "", "unit"], [202, 3, 1, "", "upsample"], [202, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[203, 2, 1, "", "as_plot_center"], [203, 2, 1, "", "as_plot_edges"], [203, 2, 1, "", "as_plot_labels"], [203, 2, 1, "", "as_plot_xerr"], [203, 3, 1, "", "assert_name"], [203, 2, 1, "", "bin_width"], [203, 2, 1, "", "bounds"], [203, 2, 1, "", "center"], [203, 3, 1, "", "coord_to_idx"], [203, 3, 1, "", "coord_to_pix"], [203, 3, 1, "", "copy"], [203, 3, 1, "", "downsample"], [203, 2, 1, "", "edges"], [203, 2, 1, "", "edges_max"], [203, 2, 1, "", "edges_min"], [203, 3, 1, "", "format_plot_xaxis"], [203, 3, 1, "", "from_gti"], [203, 3, 1, "", "from_gti_bounds"], [203, 3, 1, "", "from_table"], [203, 3, 1, "", "from_time_bounds"], [203, 3, 1, "", "from_time_edges"], [203, 3, 1, "", "group_table"], [203, 2, 1, "", "interp"], [203, 3, 1, "", "is_aligned"], [203, 3, 1, "", "is_allclose"], [203, 2, 1, "", "is_contiguous"], [203, 2, 1, "", "iter_by_edges"], [203, 2, 1, "", "name"], [203, 2, 1, "", "nbin"], [203, 2, 1, "", "node_type"], [203, 3, 1, "", "pix_to_coord"], [203, 3, 1, "", "pix_to_idx"], [203, 2, 1, "", "reference_time"], [203, 3, 1, "", "slice"], [203, 3, 1, "", "squash"], [203, 2, 1, "", "time_bounds"], [203, 2, 1, "", "time_delta"], [203, 2, 1, "", "time_edges"], [203, 2, 1, "", "time_format"], [203, 2, 1, "", "time_max"], [203, 2, 1, "", "time_mid"], [203, 2, 1, "", "time_min"], [203, 3, 1, "", "to_contiguous"], [203, 3, 1, "", "to_gti"], [203, 3, 1, "", "to_header"], [203, 3, 1, "", "to_table"], [203, 2, 1, "", "unit"], [203, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[204, 2, 1, "", "as_energy_true"], [204, 2, 1, "", "axes"], [204, 2, 1, "", "axes_names"], [204, 3, 1, "", "bin_volume"], [204, 3, 1, "", "binary_structure"], [204, 3, 1, "", "boundary_mask"], [204, 2, 1, "", "center_coord"], [204, 2, 1, "", "center_pix"], [204, 2, 1, "", "center_skydir"], [204, 3, 1, "", "contains"], [204, 3, 1, "", "contains_pix"], [204, 3, 1, "", "coord_to_idx"], [204, 3, 1, "", "coord_to_pix"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "create"], [204, 3, 1, "", "crop"], [204, 3, 1, "", "cutout"], [204, 3, 1, "", "cutout_slices"], [204, 3, 1, "", "data_nbytes"], [204, 2, 1, "", "data_shape"], [204, 2, 1, "", "data_shape_axes"], [204, 2, 1, "", "data_shape_image"], [204, 3, 1, "", "downsample"], [204, 3, 1, "", "drop"], [204, 3, 1, "", "energy_mask"], [204, 2, 1, "", "footprint"], [204, 2, 1, "", "footprint_rectangle_sky_region"], [204, 2, 1, "", "frame"], [204, 3, 1, "", "from_aligned"], [204, 3, 1, "", "from_hdulist"], [204, 3, 1, "", "from_header"], [204, 3, 1, "", "get_coord"], [204, 3, 1, "", "get_idx"], [204, 3, 1, "", "get_pix"], [204, 2, 1, "", "has_energy_axis"], [204, 3, 1, "", "is_aligned"], [204, 3, 1, "", "is_allclose"], [204, 2, 1, "", "is_allsky"], [204, 2, 1, "", "is_flat"], [204, 2, 1, "", "is_hpx"], [204, 2, 1, "", "is_image"], [204, 2, 1, "", "is_region"], [204, 2, 1, "", "is_regular"], [204, 2, 1, "", "ndim"], [204, 2, 1, "", "npix"], [204, 3, 1, "", "pad"], [204, 3, 1, "", "pix_to_coord"], [204, 3, 1, "", "pix_to_idx"], [204, 2, 1, "", "pixel_area"], [204, 2, 1, "", "pixel_scales"], [204, 2, 1, "", "projection"], [204, 3, 1, "", "region_mask"], [204, 3, 1, "", "region_weights"], [204, 3, 1, "", "rename_axes"], [204, 3, 1, "", "replace_axis"], [204, 3, 1, "", "resample_axis"], [204, 3, 1, "", "separation"], [204, 2, 1, "", "shape_axes"], [204, 3, 1, "", "slice_by_idx"], [204, 3, 1, "", "solid_angle"], [204, 3, 1, "", "squash"], [204, 3, 1, "", "to_bands_hdu"], [204, 3, 1, "", "to_binsz"], [204, 3, 1, "", "to_cube"], [204, 3, 1, "", "to_even_npix"], [204, 3, 1, "", "to_header"], [204, 3, 1, "", "to_image"], [204, 3, 1, "", "to_odd_npix"], [204, 3, 1, "", "upsample"], [204, 2, 1, "", "wcs"], [204, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[205, 3, 1, "", "coadd"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "create"], [205, 3, 1, "", "crop"], [205, 3, 1, "", "cumsum"], [205, 2, 1, "", "data"], [205, 3, 1, "", "dot"], [205, 3, 1, "", "downsample"], [205, 3, 1, "", "fill_by_coord"], [205, 3, 1, "", "fill_by_idx"], [205, 3, 1, "", "fill_by_pix"], [205, 3, 1, "", "fill_events"], [205, 3, 1, "", "from_geom"], [205, 3, 1, "", "from_hdulist"], [205, 3, 1, "", "from_stack"], [205, 2, 1, "", "geom"], [205, 3, 1, "", "get_by_coord"], [205, 3, 1, "", "get_by_idx"], [205, 3, 1, "", "get_by_pix"], [205, 3, 1, "", "get_image_by_coord"], [205, 3, 1, "", "get_image_by_idx"], [205, 3, 1, "", "get_image_by_pix"], [205, 3, 1, "", "get_spectrum"], [205, 3, 1, "", "integral"], [205, 3, 1, "", "interp_by_coord"], [205, 3, 1, "", "interp_by_pix"], [205, 3, 1, "", "interp_to_geom"], [205, 3, 1, "", "is_allclose"], [205, 2, 1, "", "is_mask"], [205, 3, 1, "", "iter_by_axis"], [205, 3, 1, "", "iter_by_image"], [205, 3, 1, "", "iter_by_image_data"], [205, 3, 1, "", "iter_by_image_index"], [205, 3, 1, "", "mask_nearest_position"], [205, 2, 1, "", "meta"], [205, 3, 1, "", "normalize"], [205, 3, 1, "", "pad"], [205, 3, 1, "", "plot_grid"], [205, 3, 1, "", "plot_interactive"], [205, 2, 1, "", "quantity"], [205, 3, 1, "", "read"], [205, 3, 1, "", "reduce"], [205, 3, 1, "", "reduce_over_axes"], [205, 3, 1, "", "rename_axes"], [205, 3, 1, "", "reorder_axes"], [205, 3, 1, "", "reproject_by_image"], [205, 3, 1, "", "reproject_to_geom"], [205, 3, 1, "", "resample"], [205, 3, 1, "", "resample_axis"], [205, 3, 1, "", "sample_coord"], [205, 3, 1, "", "set_by_coord"], [205, 3, 1, "", "set_by_idx"], [205, 3, 1, "", "set_by_pix"], [205, 3, 1, "", "slice_by_idx"], [205, 3, 1, "", "split_by_axis"], [205, 3, 1, "", "sum_over_axes"], [205, 2, 1, "", "tag"], [205, 3, 1, "", "to_cube"], [205, 3, 1, "", "to_hdu"], [205, 3, 1, "", "to_hdulist"], [205, 3, 1, "", "to_unit"], [205, 2, 1, "", "unit"], [205, 3, 1, "", "upsample"], [205, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[206, 3, 1, "", "binary_dilate"], [206, 3, 1, "", "binary_erode"], [206, 3, 1, "", "coadd"], [206, 3, 1, "", "convolve"], [206, 3, 1, "", "copy"], [206, 3, 1, "", "create"], [206, 3, 1, "", "crop"], [206, 3, 1, "", "cumsum"], [206, 3, 1, "", "cutout"], [206, 3, 1, "", "cutout_and_mask_region"], [206, 2, 1, "", "data"], [206, 3, 1, "", "dot"], [206, 3, 1, "", "downsample"], [206, 3, 1, "", "fill_by_coord"], [206, 3, 1, "", "fill_by_idx"], [206, 3, 1, "", "fill_by_pix"], [206, 3, 1, "", "fill_events"], [206, 3, 1, "", "from_geom"], [206, 3, 1, "", "from_hdu"], [206, 3, 1, "", "from_hdulist"], [206, 3, 1, "", "from_stack"], [206, 2, 1, "", "geom"], [206, 3, 1, "", "get_by_coord"], [206, 3, 1, "", "get_by_idx"], [206, 3, 1, "", "get_by_pix"], [206, 3, 1, "", "get_image_by_coord"], [206, 3, 1, "", "get_image_by_idx"], [206, 3, 1, "", "get_image_by_pix"], [206, 3, 1, "", "get_spectrum"], [206, 3, 1, "", "integral"], [206, 3, 1, "", "interp_by_coord"], [206, 3, 1, "", "interp_by_pix"], [206, 3, 1, "", "interp_to_geom"], [206, 3, 1, "", "is_allclose"], [206, 2, 1, "", "is_mask"], [206, 3, 1, "", "iter_by_axis"], [206, 3, 1, "", "iter_by_image"], [206, 3, 1, "", "iter_by_image_data"], [206, 3, 1, "", "iter_by_image_index"], [206, 3, 1, "", "mask_contains_region"], [206, 3, 1, "", "mask_nearest_position"], [206, 2, 1, "", "meta"], [206, 3, 1, "", "normalize"], [206, 3, 1, "", "pad"], [206, 3, 1, "", "plot"], [206, 3, 1, "", "plot_grid"], [206, 3, 1, "", "plot_interactive"], [206, 3, 1, "", "plot_mask"], [206, 2, 1, "", "quantity"], [206, 3, 1, "", "read"], [206, 3, 1, "", "reduce"], [206, 3, 1, "", "reduce_over_axes"], [206, 3, 1, "", "rename_axes"], [206, 3, 1, "", "reorder_axes"], [206, 3, 1, "", "reproject_by_image"], [206, 3, 1, "", "reproject_to_geom"], [206, 3, 1, "", "resample"], [206, 3, 1, "", "resample_axis"], [206, 3, 1, "", "sample_coord"], [206, 3, 1, "", "set_by_coord"], [206, 3, 1, "", "set_by_idx"], [206, 3, 1, "", "set_by_pix"], [206, 3, 1, "", "slice_by_idx"], [206, 3, 1, "", "smooth"], [206, 3, 1, "", "split_by_axis"], [206, 3, 1, "", "stack"], [206, 3, 1, "", "sum_over_axes"], [206, 2, 1, "", "tag"], [206, 3, 1, "", "to_cube"], [206, 3, 1, "", "to_hdu"], [206, 3, 1, "", "to_hdulist"], [206, 3, 1, "", "to_region_nd_map"], [206, 3, 1, "", "to_region_nd_map_histogram"], [206, 3, 1, "", "to_unit"], [206, 2, 1, "", "unit"], [206, 3, 1, "", "upsample"], [206, 3, 1, "", "write"]], "gammapy.modeling": [[209, 1, 1, "", "Covariance"], [210, 1, 1, "", "CovarianceResult"], [211, 1, 1, "", "Fit"], [212, 1, 1, "", "FitResult"], [213, 1, 1, "", "OptimizeResult"], [214, 1, 1, "", "Parameter"], [215, 1, 1, "", "Parameters"], [216, 1, 1, "", "PriorParameter"], [217, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [284, 4, 1, "", "select_nested_models"], [285, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[209, 2, 1, "", "correlation"], [209, 2, 1, "", "data"], [209, 3, 1, "", "from_factor_matrix"], [209, 3, 1, "", "from_stack"], [209, 3, 1, "", "get_subcovariance"], [209, 3, 1, "", "plot_correlation"], [209, 2, 1, "", "scipy_mvn"], [209, 3, 1, "", "set_subcovariance"], [209, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[210, 2, 1, "", "backend"], [210, 2, 1, "", "matrix"], [210, 2, 1, "", "message"], [210, 2, 1, "", "method"], [210, 2, 1, "", "success"], [210, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[211, 3, 1, "", "confidence"], [211, 3, 1, "", "covariance"], [211, 3, 1, "", "optimize"], [211, 3, 1, "", "run"], [211, 3, 1, "", "stat_contour"], [211, 3, 1, "", "stat_profile"], [211, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[212, 2, 1, "", "backend"], [212, 2, 1, "", "covariance_result"], [212, 2, 1, "", "message"], [212, 2, 1, "", "method"], [212, 2, 1, "", "minuit"], [212, 2, 1, "", "models"], [212, 2, 1, "", "nfev"], [212, 2, 1, "", "optimize_result"], [212, 2, 1, "", "parameters"], [212, 2, 1, "", "success"], [212, 2, 1, "", "total_stat"], [212, 2, 1, "", "trace"], [212, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[213, 2, 1, "", "backend"], [213, 2, 1, "", "message"], [213, 2, 1, "", "method"], [213, 2, 1, "", "minuit"], [213, 2, 1, "", "models"], [213, 2, 1, "", "nfev"], [213, 2, 1, "", "parameters"], [213, 2, 1, "", "success"], [213, 3, 1, "", "to_dict"], [213, 2, 1, "", "total_stat"], [213, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[214, 3, 1, "", "autoscale"], [214, 3, 1, "", "check_limits"], [214, 2, 1, "", "conf_max"], [214, 2, 1, "", "conf_min"], [214, 3, 1, "", "copy"], [214, 2, 1, "", "error"], [214, 2, 1, "", "factor"], [214, 2, 1, "", "factor_max"], [214, 2, 1, "", "factor_min"], [214, 2, 1, "", "frozen"], [214, 2, 1, "", "max"], [214, 2, 1, "", "min"], [214, 2, 1, "", "name"], [214, 2, 1, "", "prior"], [214, 3, 1, "", "prior_stat_sum"], [214, 2, 1, "", "quantity"], [214, 2, 1, "", "scale"], [214, 2, 1, "", "scale_method"], [214, 2, 1, "", "scan_max"], [214, 2, 1, "", "scan_min"], [214, 2, 1, "", "scan_n_sigma"], [214, 2, 1, "", "scan_values"], [214, 3, 1, "", "to_dict"], [214, 2, 1, "", "type"], [214, 2, 1, "", "unit"], [214, 3, 1, "", "update_from_dict"], [214, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[215, 3, 1, "", "autoscale"], [215, 3, 1, "", "check_limits"], [215, 3, 1, "", "copy"], [215, 3, 1, "", "count"], [215, 2, 1, "", "free_parameters"], [215, 3, 1, "", "freeze_all"], [215, 3, 1, "", "from_dict"], [215, 3, 1, "", "from_stack"], [215, 3, 1, "", "index"], [215, 2, 1, "", "max"], [215, 2, 1, "", "min"], [215, 2, 1, "", "names"], [215, 2, 1, "", "prior"], [215, 3, 1, "", "prior_stat_sum"], [215, 3, 1, "", "restore_status"], [215, 3, 1, "", "select"], [215, 3, 1, "", "set_parameter_factors"], [215, 3, 1, "", "to_dict"], [215, 3, 1, "", "to_table"], [215, 2, 1, "", "types"], [215, 3, 1, "", "unfreeze_all"], [215, 2, 1, "", "unique_parameters"], [215, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[216, 3, 1, "", "autoscale"], [216, 3, 1, "", "check_limits"], [216, 2, 1, "", "conf_max"], [216, 2, 1, "", "conf_min"], [216, 3, 1, "", "copy"], [216, 2, 1, "", "error"], [216, 2, 1, "", "factor"], [216, 2, 1, "", "factor_max"], [216, 2, 1, "", "factor_min"], [216, 2, 1, "", "frozen"], [216, 2, 1, "", "max"], [216, 2, 1, "", "min"], [216, 2, 1, "", "name"], [216, 2, 1, "", "prior"], [216, 3, 1, "", "prior_stat_sum"], [216, 2, 1, "", "quantity"], [216, 2, 1, "", "scale"], [216, 2, 1, "", "scale_method"], [216, 2, 1, "", "scan_max"], [216, 2, 1, "", "scan_min"], [216, 2, 1, "", "scan_n_sigma"], [216, 2, 1, "", "scan_values"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "type"], [216, 2, 1, "", "unit"], [216, 3, 1, "", "update_from_dict"], [216, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[217, 3, 1, "", "autoscale"], [217, 3, 1, "", "check_limits"], [217, 3, 1, "", "copy"], [217, 3, 1, "", "count"], [217, 2, 1, "", "free_parameters"], [217, 3, 1, "", "freeze_all"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_stack"], [217, 3, 1, "", "index"], [217, 2, 1, "", "max"], [217, 2, 1, "", "min"], [217, 2, 1, "", "names"], [217, 2, 1, "", "prior"], [217, 3, 1, "", "prior_stat_sum"], [217, 3, 1, "", "restore_status"], [217, 3, 1, "", "select"], [217, 3, 1, "", "set_parameter_factors"], [217, 3, 1, "", "to_dict"], [217, 3, 1, "", "to_table"], [217, 2, 1, "", "types"], [217, 3, 1, "", "unfreeze_all"], [217, 2, 1, "", "unique_parameters"], [217, 2, 1, "", "value"]], "gammapy.modeling.models": [[218, 1, 1, "", "BrokenPowerLawSpectralModel"], [219, 1, 1, "", "CompoundSpectralModel"], [220, 1, 1, "", "ConstantFluxSpatialModel"], [221, 1, 1, "", "ConstantSpatialModel"], [222, 1, 1, "", "ConstantSpectralModel"], [223, 1, 1, "", "ConstantTemporalModel"], [224, 1, 1, "", "DatasetModels"], [225, 1, 1, "", "DiskSpatialModel"], [226, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [227, 5, 1, "", "EBL_DATA_BUILTIN"], [228, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [229, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [230, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [231, 1, 1, "", "ExpDecayTemporalModel"], [232, 1, 1, "", "FoVBackgroundModel"], [233, 1, 1, "", "GaussianSpatialModel"], [234, 1, 1, "", "GaussianSpectralModel"], [235, 1, 1, "", "GaussianTemporalModel"], [236, 1, 1, "", "GeneralizedGaussianSpatialModel"], [237, 1, 1, "", "GeneralizedGaussianTemporalModel"], [238, 1, 1, "", "LightCurveTemplateTemporalModel"], [239, 1, 1, "", "LinearTemporalModel"], [240, 1, 1, "", "LogParabolaNormSpectralModel"], [241, 1, 1, "", "LogParabolaSpectralModel"], [242, 5, 1, "", "MODEL_REGISTRY"], [243, 1, 1, "", "MeyerCrabSpectralModel"], [244, 1, 1, "", "Model"], [245, 1, 1, "", "ModelBase"], [246, 1, 1, "", "Models"], [247, 1, 1, "", "NaimaSpectralModel"], [248, 1, 1, "", "PiecewiseNormSpatialModel"], [249, 1, 1, "", "PiecewiseNormSpectralModel"], [250, 1, 1, "", "PointSpatialModel"], [251, 1, 1, "", "PowerLaw2SpectralModel"], [252, 1, 1, "", "PowerLawNormSpectralModel"], [253, 1, 1, "", "PowerLawSpectralModel"], [254, 1, 1, "", "PowerLawTemporalModel"], [255, 1, 1, "", "Prior"], [256, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [257, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [258, 1, 1, "", "ScaleSpectralModel"], [259, 1, 1, "", "Shell2SpatialModel"], [260, 1, 1, "", "ShellSpatialModel"], [261, 1, 1, "", "SineTemporalModel"], [262, 1, 1, "", "SkyModel"], [263, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [264, 1, 1, "", "SpatialModel"], [265, 1, 1, "", "SpectralModel"], [266, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [267, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [268, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [269, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [270, 1, 1, "", "TemplateNDSpatialModel"], [271, 1, 1, "", "TemplateNDSpectralModel"], [272, 1, 1, "", "TemplateNPredModel"], [273, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [274, 1, 1, "", "TemplateSpatialModel"], [275, 1, 1, "", "TemplateSpectralModel"], [276, 1, 1, "", "TemporalModel"], [277, 4, 1, "", "create_cosmic_ray_spectral_model"], [278, 4, 1, "", "create_crab_spectral_model"], [279, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [280, 4, 1, "", "integrate_spectrum"], [281, 4, 1, "", "read_hermes_cube"], [282, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[218, 3, 1, "", "__call__"], [218, 2, 1, "", "amplitude"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "covariance"], [218, 2, 1, "", "default_parameters"], [218, 2, 1, "", "ebreak"], [218, 3, 1, "", "energy_flux"], [218, 3, 1, "", "energy_flux_error"], [218, 3, 1, "", "evaluate"], [218, 3, 1, "", "evaluate_error"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_parameters"], [218, 2, 1, "", "frozen"], [218, 2, 1, "", "index1"], [218, 2, 1, "", "index2"], [218, 3, 1, "", "integral"], [218, 3, 1, "", "integral_error"], [218, 3, 1, "", "inverse"], [218, 3, 1, "", "inverse_all"], [218, 2, 1, "", "is_norm_spectral_model"], [218, 2, 1, "", "parameters"], [218, 2, 1, "", "parameters_unique_names"], [218, 2, 1, "", "pivot_energy"], [218, 3, 1, "", "plot"], [218, 3, 1, "", "plot_error"], [218, 3, 1, "", "reassign"], [218, 3, 1, "", "reference_fluxes"], [218, 3, 1, "", "spectral_index"], [218, 3, 1, "", "spectral_index_error"], [218, 2, 1, "", "tag"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[219, 3, 1, "", "__call__"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "covariance"], [219, 2, 1, "", "default_parameters"], [219, 3, 1, "", "energy_flux"], [219, 3, 1, "", "energy_flux_error"], [219, 3, 1, "", "evaluate"], [219, 3, 1, "", "evaluate_error"], [219, 3, 1, "", "freeze"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_parameters"], [219, 2, 1, "", "frozen"], [219, 3, 1, "", "integral"], [219, 3, 1, "", "integral_error"], [219, 3, 1, "", "inverse"], [219, 3, 1, "", "inverse_all"], [219, 2, 1, "", "is_norm_spectral_model"], [219, 2, 1, "", "parameters"], [219, 2, 1, "", "parameters_unique_names"], [219, 2, 1, "", "pivot_energy"], [219, 3, 1, "", "plot"], [219, 3, 1, "", "plot_error"], [219, 3, 1, "", "reassign"], [219, 3, 1, "", "reference_fluxes"], [219, 3, 1, "", "spectral_index"], [219, 3, 1, "", "spectral_index_error"], [219, 2, 1, "", "tag"], [219, 3, 1, "", "to_dict"], [219, 2, 1, "", "type"], [219, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[220, 3, 1, "", "__call__"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_geom"], [220, 2, 1, "", "evaluation_bin_size_min"], [220, 2, 1, "", "evaluation_radius"], [220, 2, 1, "", "evaluation_region"], [220, 2, 1, "", "frame"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 3, 1, "", "from_position"], [220, 2, 1, "", "frozen"], [220, 3, 1, "", "integrate_geom"], [220, 2, 1, "", "is_energy_dependent"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "parameters_unique_names"], [220, 2, 1, "", "phi_0"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "plot_grid"], [220, 3, 1, "", "plot_interactive"], [220, 3, 1, "", "plot_position_error"], [220, 2, 1, "", "position"], [220, 2, 1, "", "position_error"], [220, 2, 1, "", "position_lonlat"], [220, 3, 1, "", "reassign"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_region"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[221, 3, 1, "", "__call__"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_geom"], [221, 2, 1, "", "evaluation_bin_size_min"], [221, 2, 1, "", "evaluation_radius"], [221, 2, 1, "", "evaluation_region"], [221, 2, 1, "", "frame"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 3, 1, "", "from_position"], [221, 2, 1, "", "frozen"], [221, 3, 1, "", "integrate_geom"], [221, 2, 1, "", "is_energy_dependent"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "parameters_unique_names"], [221, 2, 1, "", "phi_0"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "plot_grid"], [221, 3, 1, "", "plot_interactive"], [221, 3, 1, "", "plot_position_error"], [221, 2, 1, "", "position"], [221, 2, 1, "", "position_error"], [221, 2, 1, "", "position_lonlat"], [221, 3, 1, "", "reassign"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 3, 1, "", "to_region"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"], [221, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[222, 3, 1, "", "__call__"], [222, 2, 1, "", "const"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 3, 1, "", "energy_flux"], [222, 3, 1, "", "energy_flux_error"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_error"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 3, 1, "", "integral"], [222, 3, 1, "", "integral_error"], [222, 3, 1, "", "inverse"], [222, 3, 1, "", "inverse_all"], [222, 2, 1, "", "is_norm_spectral_model"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "parameters_unique_names"], [222, 2, 1, "", "pivot_energy"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "plot_error"], [222, 3, 1, "", "reassign"], [222, 3, 1, "", "reference_fluxes"], [222, 3, 1, "", "spectral_index"], [222, 3, 1, "", "spectral_index_error"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[223, 3, 1, "", "__call__"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "integral"], [223, 2, 1, "", "is_energy_dependent"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "reference_time"], [223, 3, 1, "", "sample_time"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "time_sum"], [223, 3, 1, "", "to_dict"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[224, 3, 1, "", "copy"], [224, 3, 1, "", "count"], [224, 2, 1, "", "covariance"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_yaml"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "index"], [224, 2, 1, "", "names"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 3, 1, "", "plot_positions"], [224, 3, 1, "", "plot_regions"], [224, 2, 1, "", "positions"], [224, 3, 1, "", "read"], [224, 3, 1, "", "read_covariance"], [224, 3, 1, "", "reassign"], [224, 3, 1, "", "restore_status"], [224, 3, 1, "", "select"], [224, 3, 1, "", "select_from_geom"], [224, 3, 1, "", "select_mask"], [224, 3, 1, "", "select_region"], [224, 3, 1, "", "selection_mask"], [224, 3, 1, "", "set_parameters_bounds"], [224, 3, 1, "", "to_dict"], [224, 3, 1, "", "to_parameters_table"], [224, 3, 1, "", "to_regions"], [224, 3, 1, "", "to_template_sky_model"], [224, 3, 1, "", "to_template_spectral_model"], [224, 3, 1, "", "to_yaml"], [224, 3, 1, "", "unfreeze"], [224, 3, 1, "", "update_link_label"], [224, 3, 1, "", "update_parameters_from_table"], [224, 2, 1, "", "wcs_geom"], [224, 3, 1, "", "write"], [224, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 2, 1, "", "e"], [225, 2, 1, "", "edge_width"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_geom"], [225, 2, 1, "", "evaluation_bin_size_min"], [225, 2, 1, "", "evaluation_radius"], [225, 2, 1, "", "evaluation_region"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 3, 1, "", "from_position"], [225, 3, 1, "", "from_region"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integrate_geom"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "lat_0"], [225, 2, 1, "", "lon_0"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "phi"], [225, 2, 1, "", "phi_0"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "plot_grid"], [225, 3, 1, "", "plot_interactive"], [225, 3, 1, "", "plot_position_error"], [225, 2, 1, "", "position"], [225, 2, 1, "", "position_error"], [225, 2, 1, "", "position_lonlat"], [225, 2, 1, "", "r_0"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 3, 1, "", "to_region"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[226, 3, 1, "", "__call__"], [226, 2, 1, "", "alpha_norm"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "energy_flux"], [226, 3, 1, "", "energy_flux_error"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_error"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integral"], [226, 3, 1, "", "integral_error"], [226, 3, 1, "", "inverse"], [226, 3, 1, "", "inverse_all"], [226, 2, 1, "", "is_norm_spectral_model"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 2, 1, "", "pivot_energy"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "plot_error"], [226, 3, 1, "", "read"], [226, 3, 1, "", "read_builtin"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "redshift"], [226, 3, 1, "", "reference_fluxes"], [226, 3, 1, "", "spectral_index"], [226, 3, 1, "", "spectral_index_error"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[228, 3, 1, "", "__call__"], [228, 2, 1, "", "amplitude"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 2, 1, "", "ecut"], [228, 3, 1, "", "energy_flux"], [228, 3, 1, "", "energy_flux_error"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_error"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 2, 1, "", "index"], [228, 3, 1, "", "integral"], [228, 3, 1, "", "integral_error"], [228, 3, 1, "", "inverse"], [228, 3, 1, "", "inverse_all"], [228, 2, 1, "", "is_norm_spectral_model"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 2, 1, "", "pivot_energy"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "reference"], [228, 3, 1, "", "reference_fluxes"], [228, 3, 1, "", "spectral_index"], [228, 3, 1, "", "spectral_index_error"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[229, 3, 1, "", "__call__"], [229, 2, 1, "", "alpha"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 3, 1, "", "energy_flux"], [229, 3, 1, "", "energy_flux_error"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "evaluate_error"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 2, 1, "", "index"], [229, 3, 1, "", "integral"], [229, 3, 1, "", "integral_error"], [229, 3, 1, "", "inverse"], [229, 3, 1, "", "inverse_all"], [229, 2, 1, "", "is_norm_spectral_model"], [229, 2, 1, "", "lambda_"], [229, 2, 1, "", "norm"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 2, 1, "", "pivot_energy"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "plot_error"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "reference"], [229, 3, 1, "", "reference_fluxes"], [229, 3, 1, "", "spectral_index"], [229, 3, 1, "", "spectral_index_error"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[230, 3, 1, "", "__call__"], [230, 2, 1, "", "alpha"], [230, 2, 1, "", "amplitude"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 2, 1, "", "e_peak"], [230, 3, 1, "", "energy_flux"], [230, 3, 1, "", "energy_flux_error"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_error"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 2, 1, "", "frozen"], [230, 2, 1, "", "index"], [230, 3, 1, "", "integral"], [230, 3, 1, "", "integral_error"], [230, 3, 1, "", "inverse"], [230, 3, 1, "", "inverse_all"], [230, 2, 1, "", "is_norm_spectral_model"], [230, 2, 1, "", "lambda_"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 2, 1, "", "pivot_energy"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "reference"], [230, 3, 1, "", "reference_fluxes"], [230, 3, 1, "", "spectral_index"], [230, 3, 1, "", "spectral_index_error"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "to_dict"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[231, 3, 1, "", "__call__"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integral"], [231, 2, 1, "", "is_energy_dependent"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "reference_time"], [231, 3, 1, "", "sample_time"], [231, 2, 1, "", "t0"], [231, 2, 1, "", "t_ref"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "time_sum"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[232, 3, 1, "", "contributes"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "evaluate_geom"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 2, 1, "", "name"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 3, 1, "", "reassign"], [232, 3, 1, "", "reset_to_default"], [232, 2, 1, "", "spatial_model"], [232, 2, 1, "", "spectral_model"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpatialModel": [[233, 3, 1, "", "__call__"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 2, 1, "", "e"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "evaluate_geom"], [233, 2, 1, "", "evaluation_bin_size_min"], [233, 2, 1, "", "evaluation_radius"], [233, 2, 1, "", "evaluation_region"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 3, 1, "", "from_position"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "integrate_geom"], [233, 2, 1, "", "is_energy_dependent"], [233, 2, 1, "", "lat_0"], [233, 2, 1, "", "lon_0"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 2, 1, "", "phi"], [233, 2, 1, "", "phi_0"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "plot_error"], [233, 3, 1, "", "plot_grid"], [233, 3, 1, "", "plot_interactive"], [233, 3, 1, "", "plot_position_error"], [233, 2, 1, "", "position"], [233, 2, 1, "", "position_error"], [233, 2, 1, "", "position_lonlat"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "sigma"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "to_dict"], [233, 3, 1, "", "to_region"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[234, 3, 1, "", "__call__"], [234, 2, 1, "", "amplitude"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "energy_flux"], [234, 3, 1, "", "energy_flux_error"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_error"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 3, 1, "", "integral"], [234, 3, 1, "", "integral_error"], [234, 3, 1, "", "inverse"], [234, 3, 1, "", "inverse_all"], [234, 2, 1, "", "is_norm_spectral_model"], [234, 2, 1, "", "mean"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 2, 1, "", "pivot_energy"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "plot_error"], [234, 3, 1, "", "reassign"], [234, 3, 1, "", "reference_fluxes"], [234, 2, 1, "", "sigma"], [234, 3, 1, "", "spectral_index"], [234, 3, 1, "", "spectral_index_error"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[235, 3, 1, "", "__call__"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integral"], [235, 2, 1, "", "is_energy_dependent"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "reference_time"], [235, 3, 1, "", "sample_time"], [235, 2, 1, "", "sigma"], [235, 2, 1, "", "t_ref"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "time_sum"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[236, 3, 1, "", "__call__"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 2, 1, "", "e"], [236, 2, 1, "", "eta"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "evaluate_geom"], [236, 2, 1, "", "evaluation_bin_size_min"], [236, 2, 1, "", "evaluation_radius"], [236, 2, 1, "", "evaluation_region"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 3, 1, "", "from_position"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "integrate_geom"], [236, 2, 1, "", "is_energy_dependent"], [236, 2, 1, "", "lat_0"], [236, 2, 1, "", "lon_0"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 2, 1, "", "phi"], [236, 2, 1, "", "phi_0"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "plot_error"], [236, 3, 1, "", "plot_grid"], [236, 3, 1, "", "plot_interactive"], [236, 3, 1, "", "plot_position_error"], [236, 2, 1, "", "position"], [236, 2, 1, "", "position_error"], [236, 2, 1, "", "position_lonlat"], [236, 2, 1, "", "r_0"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "to_dict"], [236, 3, 1, "", "to_region"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[237, 3, 1, "", "__call__"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 2, 1, "", "eta"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integral"], [237, 2, 1, "", "is_energy_dependent"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "reassign"], [237, 2, 1, "", "reference_time"], [237, 3, 1, "", "sample_time"], [237, 2, 1, "", "t_decay"], [237, 2, 1, "", "t_ref"], [237, 2, 1, "", "t_rise"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "time_sum"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[238, 3, 1, "", "__call__"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 3, 1, "", "from_table"], [238, 2, 1, "", "frozen"], [238, 3, 1, "", "integral"], [238, 2, 1, "", "is_energy_dependent"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "read"], [238, 3, 1, "", "reassign"], [238, 2, 1, "", "reference_time"], [238, 3, 1, "", "sample_time"], [238, 2, 1, "", "t_ref"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "time_sum"], [238, 3, 1, "", "to_dict"], [238, 3, 1, "", "to_table"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"], [238, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[239, 3, 1, "", "__call__"], [239, 2, 1, "", "alpha"], [239, 2, 1, "", "beta"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integral"], [239, 2, 1, "", "is_energy_dependent"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "reference_time"], [239, 3, 1, "", "sample_time"], [239, 2, 1, "", "t_ref"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "time_sum"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[240, 3, 1, "", "__call__"], [240, 2, 1, "", "alpha"], [240, 2, 1, "", "beta"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 3, 1, "", "energy_flux"], [240, 3, 1, "", "energy_flux_error"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "evaluate_error"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_log10"], [240, 3, 1, "", "from_parameters"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integral"], [240, 3, 1, "", "integral_error"], [240, 3, 1, "", "inverse"], [240, 3, 1, "", "inverse_all"], [240, 2, 1, "", "is_norm_spectral_model"], [240, 2, 1, "", "norm"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 2, 1, "", "pivot_energy"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "reference"], [240, 3, 1, "", "reference_fluxes"], [240, 3, 1, "", "spectral_index"], [240, 3, 1, "", "spectral_index_error"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[241, 3, 1, "", "__call__"], [241, 2, 1, "", "alpha"], [241, 2, 1, "", "amplitude"], [241, 2, 1, "", "beta"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 2, 1, "", "e_peak"], [241, 3, 1, "", "energy_flux"], [241, 3, 1, "", "energy_flux_error"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "evaluate_error"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_log10"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 3, 1, "", "integral_error"], [241, 3, 1, "", "inverse"], [241, 3, 1, "", "inverse_all"], [241, 2, 1, "", "is_norm_spectral_model"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 2, 1, "", "pivot_energy"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "plot_error"], [241, 3, 1, "", "reassign"], [241, 2, 1, "", "reference"], [241, 3, 1, "", "reference_fluxes"], [241, 3, 1, "", "spectral_index"], [241, 3, 1, "", "spectral_index_error"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[243, 3, 1, "", "__call__"], [243, 2, 1, "", "coefficients"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 3, 1, "", "energy_flux"], [243, 3, 1, "", "energy_flux_error"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "evaluate_error"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integral"], [243, 3, 1, "", "integral_error"], [243, 3, 1, "", "inverse"], [243, 3, 1, "", "inverse_all"], [243, 2, 1, "", "is_norm_spectral_model"], [243, 2, 1, "", "norm"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 2, 1, "", "pivot_energy"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "plot_error"], [243, 3, 1, "", "reassign"], [243, 3, 1, "", "reference_fluxes"], [243, 3, 1, "", "spectral_index"], [243, 3, 1, "", "spectral_index_error"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[244, 3, 1, "", "create"], [244, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 3, 1, "", "reassign"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[246, 3, 1, "", "append"], [246, 3, 1, "", "clear"], [246, 3, 1, "", "copy"], [246, 3, 1, "", "count"], [246, 2, 1, "", "covariance"], [246, 3, 1, "", "extend"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_yaml"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "index"], [246, 3, 1, "", "insert"], [246, 2, 1, "", "names"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 3, 1, "", "plot_positions"], [246, 3, 1, "", "plot_regions"], [246, 3, 1, "", "pop"], [246, 2, 1, "", "positions"], [246, 3, 1, "", "read"], [246, 3, 1, "", "read_covariance"], [246, 3, 1, "", "reassign"], [246, 3, 1, "", "remove"], [246, 3, 1, "", "restore_status"], [246, 3, 1, "", "reverse"], [246, 3, 1, "", "select"], [246, 3, 1, "", "select_from_geom"], [246, 3, 1, "", "select_mask"], [246, 3, 1, "", "select_region"], [246, 3, 1, "", "selection_mask"], [246, 3, 1, "", "set_parameters_bounds"], [246, 3, 1, "", "set_prior"], [246, 3, 1, "", "to_dict"], [246, 3, 1, "", "to_parameters_table"], [246, 3, 1, "", "to_regions"], [246, 3, 1, "", "to_template_sky_model"], [246, 3, 1, "", "to_template_spectral_model"], [246, 3, 1, "", "to_yaml"], [246, 3, 1, "", "unfreeze"], [246, 3, 1, "", "update_link_label"], [246, 3, 1, "", "update_parameters_from_table"], [246, 2, 1, "", "wcs_geom"], [246, 3, 1, "", "write"], [246, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[247, 3, 1, "", "__call__"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "energy_flux"], [247, 3, 1, "", "energy_flux_error"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_error"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 2, 1, "", "include_ssc"], [247, 3, 1, "", "integral"], [247, 3, 1, "", "integral_error"], [247, 3, 1, "", "inverse"], [247, 3, 1, "", "inverse_all"], [247, 2, 1, "", "is_norm_spectral_model"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 2, 1, "", "particle_distribution"], [247, 2, 1, "", "pivot_energy"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "reassign"], [247, 3, 1, "", "reference_fluxes"], [247, 3, 1, "", "spectral_index"], [247, 3, 1, "", "spectral_index_error"], [247, 2, 1, "", "ssc_model"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[248, 3, 1, "", "__call__"], [248, 2, 1, "", "coords"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "evaluate_geom"], [248, 2, 1, "", "evaluation_bin_size_min"], [248, 2, 1, "", "evaluation_radius"], [248, 2, 1, "", "evaluation_region"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 3, 1, "", "from_position"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integrate_geom"], [248, 2, 1, "", "is_energy_dependent"], [248, 2, 1, "", "norms"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 2, 1, "", "phi_0"], [248, 3, 1, "", "plot"], [248, 3, 1, "", "plot_error"], [248, 3, 1, "", "plot_grid"], [248, 3, 1, "", "plot_interactive"], [248, 3, 1, "", "plot_position_error"], [248, 2, 1, "", "position"], [248, 2, 1, "", "position_error"], [248, 2, 1, "", "position_lonlat"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "tag"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[249, 3, 1, "", "__call__"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 2, 1, "", "energy"], [249, 3, 1, "", "energy_flux"], [249, 3, 1, "", "energy_flux_error"], [249, 3, 1, "", "evaluate"], [249, 3, 1, "", "evaluate_error"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 2, 1, "", "frozen"], [249, 3, 1, "", "integral"], [249, 3, 1, "", "integral_error"], [249, 3, 1, "", "inverse"], [249, 3, 1, "", "inverse_all"], [249, 2, 1, "", "is_norm_spectral_model"], [249, 2, 1, "", "norms"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "parameters_unique_names"], [249, 2, 1, "", "pivot_energy"], [249, 3, 1, "", "plot"], [249, 3, 1, "", "plot_error"], [249, 3, 1, "", "reassign"], [249, 3, 1, "", "reference_fluxes"], [249, 3, 1, "", "spectral_index"], [249, 3, 1, "", "spectral_index_error"], [249, 2, 1, "", "tag"], [249, 3, 1, "", "to_dict"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[250, 3, 1, "", "__call__"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 3, 1, "", "evaluate_geom"], [250, 2, 1, "", "evaluation_bin_size_min"], [250, 2, 1, "", "evaluation_radius"], [250, 2, 1, "", "evaluation_region"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 3, 1, "", "from_position"], [250, 2, 1, "", "frozen"], [250, 3, 1, "", "integrate_geom"], [250, 2, 1, "", "is_energy_dependent"], [250, 2, 1, "", "lat_0"], [250, 2, 1, "", "lon_0"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "parameters_unique_names"], [250, 2, 1, "", "phi_0"], [250, 3, 1, "", "plot"], [250, 3, 1, "", "plot_error"], [250, 3, 1, "", "plot_grid"], [250, 3, 1, "", "plot_interactive"], [250, 3, 1, "", "plot_position_error"], [250, 2, 1, "", "position"], [250, 2, 1, "", "position_error"], [250, 2, 1, "", "position_lonlat"], [250, 3, 1, "", "reassign"], [250, 2, 1, "", "tag"], [250, 3, 1, "", "to_dict"], [250, 3, 1, "", "to_region"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[251, 3, 1, "", "__call__"], [251, 2, 1, "", "amplitude"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 2, 1, "", "emax"], [251, 2, 1, "", "emin"], [251, 3, 1, "", "energy_flux"], [251, 3, 1, "", "energy_flux_error"], [251, 3, 1, "", "evaluate"], [251, 3, 1, "", "evaluate_error"], [251, 3, 1, "", "evaluate_integral"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 2, 1, "", "index"], [251, 3, 1, "", "integral"], [251, 3, 1, "", "integral_error"], [251, 3, 1, "", "inverse"], [251, 3, 1, "", "inverse_all"], [251, 2, 1, "", "is_norm_spectral_model"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 2, 1, "", "pivot_energy"], [251, 3, 1, "", "plot"], [251, 3, 1, "", "plot_error"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "reference_fluxes"], [251, 3, 1, "", "spectral_index"], [251, 3, 1, "", "spectral_index_error"], [251, 2, 1, "", "tag"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[252, 3, 1, "", "__call__"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 3, 1, "", "energy_flux"], [252, 3, 1, "", "energy_flux_error"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "evaluate_energy_flux"], [252, 3, 1, "", "evaluate_error"], [252, 3, 1, "", "evaluate_integral"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 2, 1, "", "frozen"], [252, 3, 1, "", "integral"], [252, 3, 1, "", "integral_error"], [252, 3, 1, "", "inverse"], [252, 3, 1, "", "inverse_all"], [252, 2, 1, "", "is_norm_spectral_model"], [252, 2, 1, "", "norm"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 2, 1, "", "pivot_energy"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "reassign"], [252, 2, 1, "", "reference"], [252, 3, 1, "", "reference_fluxes"], [252, 3, 1, "", "spectral_index"], [252, 3, 1, "", "spectral_index_error"], [252, 2, 1, "", "tag"], [252, 2, 1, "", "tilt"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[253, 3, 1, "", "__call__"], [253, 2, 1, "", "amplitude"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "energy_flux"], [253, 3, 1, "", "energy_flux_error"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_energy_flux"], [253, 3, 1, "", "evaluate_error"], [253, 3, 1, "", "evaluate_integral"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 2, 1, "", "frozen"], [253, 2, 1, "", "index"], [253, 3, 1, "", "integral"], [253, 3, 1, "", "integral_error"], [253, 3, 1, "", "inverse"], [253, 3, 1, "", "inverse_all"], [253, 2, 1, "", "is_norm_spectral_model"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 2, 1, "", "pivot_energy"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "reassign"], [253, 2, 1, "", "reference"], [253, 3, 1, "", "reference_fluxes"], [253, 3, 1, "", "spectral_index"], [253, 3, 1, "", "spectral_index_error"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[254, 3, 1, "", "__call__"], [254, 2, 1, "", "alpha"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integral"], [254, 2, 1, "", "is_energy_dependent"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "reassign"], [254, 2, 1, "", "reference_time"], [254, 3, 1, "", "sample_time"], [254, 2, 1, "", "t0"], [254, 2, 1, "", "t_ref"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "time_sum"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[255, 3, 1, "", "__call__"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 2, 1, "", "frozen"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 3, 1, "", "reassign"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"], [255, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[258, 3, 1, "", "__call__"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 3, 1, "", "energy_flux"], [258, 3, 1, "", "energy_flux_error"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "evaluate_error"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 3, 1, "", "integral"], [258, 3, 1, "", "integral_error"], [258, 3, 1, "", "inverse"], [258, 3, 1, "", "inverse_all"], [258, 2, 1, "", "is_norm_spectral_model"], [258, 2, 1, "", "norm"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "pivot_energy"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "reassign"], [258, 3, 1, "", "reference_fluxes"], [258, 3, 1, "", "spectral_index"], [258, 3, 1, "", "spectral_index_error"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[259, 3, 1, "", "__call__"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 2, 1, "", "eta"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_geom"], [259, 2, 1, "", "evaluation_bin_size_min"], [259, 2, 1, "", "evaluation_radius"], [259, 2, 1, "", "evaluation_region"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 3, 1, "", "from_position"], [259, 2, 1, "", "frozen"], [259, 3, 1, "", "integrate_geom"], [259, 2, 1, "", "is_energy_dependent"], [259, 2, 1, "", "lat_0"], [259, 2, 1, "", "lon_0"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 2, 1, "", "phi_0"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "plot_grid"], [259, 3, 1, "", "plot_interactive"], [259, 3, 1, "", "plot_position_error"], [259, 2, 1, "", "position"], [259, 2, 1, "", "position_error"], [259, 2, 1, "", "position_lonlat"], [259, 2, 1, "", "r_0"], [259, 2, 1, "", "r_in"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "to_dict"], [259, 3, 1, "", "to_region"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[260, 3, 1, "", "__call__"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "evaluate_geom"], [260, 2, 1, "", "evaluation_bin_size_min"], [260, 2, 1, "", "evaluation_radius"], [260, 2, 1, "", "evaluation_region"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 3, 1, "", "from_position"], [260, 2, 1, "", "frozen"], [260, 3, 1, "", "integrate_geom"], [260, 2, 1, "", "is_energy_dependent"], [260, 2, 1, "", "lat_0"], [260, 2, 1, "", "lon_0"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 2, 1, "", "phi_0"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "plot_grid"], [260, 3, 1, "", "plot_interactive"], [260, 3, 1, "", "plot_position_error"], [260, 2, 1, "", "position"], [260, 2, 1, "", "position_error"], [260, 2, 1, "", "position_lonlat"], [260, 2, 1, "", "radius"], [260, 3, 1, "", "reassign"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "to_dict"], [260, 3, 1, "", "to_region"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"], [260, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[261, 3, 1, "", "__call__"], [261, 2, 1, "", "amp"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 3, 1, "", "integral"], [261, 2, 1, "", "is_energy_dependent"], [261, 2, 1, "", "omega"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "reassign"], [261, 2, 1, "", "reference_time"], [261, 3, 1, "", "sample_time"], [261, 2, 1, "", "t_ref"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "time_sum"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[262, 3, 1, "", "__call__"], [262, 3, 1, "", "contributes"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 3, 1, "", "create"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "evaluate"], [262, 3, 1, "", "evaluate_geom"], [262, 2, 1, "", "evaluation_bin_size_min"], [262, 2, 1, "", "evaluation_radius"], [262, 2, 1, "", "evaluation_region"], [262, 2, 1, "", "frame"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 3, 1, "", "integrate_geom"], [262, 2, 1, "", "name"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "parameters_unique_names"], [262, 2, 1, "", "position"], [262, 2, 1, "", "position_lonlat"], [262, 3, 1, "", "reassign"], [262, 2, 1, "", "spatial_model"], [262, 2, 1, "", "spectral_model"], [262, 2, 1, "", "tag"], [262, 2, 1, "", "temporal_model"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[263, 3, 1, "", "__call__"], [263, 2, 1, "", "amplitude"], [263, 2, 1, "", "beta"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 2, 1, "", "ebreak"], [263, 3, 1, "", "energy_flux"], [263, 3, 1, "", "energy_flux_error"], [263, 3, 1, "", "evaluate"], [263, 3, 1, "", "evaluate_error"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 2, 1, "", "frozen"], [263, 2, 1, "", "index1"], [263, 2, 1, "", "index2"], [263, 3, 1, "", "integral"], [263, 3, 1, "", "integral_error"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "inverse_all"], [263, 2, 1, "", "is_norm_spectral_model"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 2, 1, "", "pivot_energy"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "plot_error"], [263, 3, 1, "", "reassign"], [263, 2, 1, "", "reference"], [263, 3, 1, "", "reference_fluxes"], [263, 3, 1, "", "spectral_index"], [263, 3, 1, "", "spectral_index_error"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 3, 1, "", "evaluate_geom"], [264, 2, 1, "", "evaluation_bin_size_min"], [264, 2, 1, "", "evaluation_radius"], [264, 2, 1, "", "evaluation_region"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 3, 1, "", "from_position"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integrate_geom"], [264, 2, 1, "", "is_energy_dependent"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "parameters_unique_names"], [264, 2, 1, "", "phi_0"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_error"], [264, 3, 1, "", "plot_grid"], [264, 3, 1, "", "plot_interactive"], [264, 3, 1, "", "plot_position_error"], [264, 2, 1, "", "position"], [264, 2, 1, "", "position_error"], [264, 2, 1, "", "position_lonlat"], [264, 3, 1, "", "reassign"], [264, 3, 1, "", "to_dict"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[265, 3, 1, "", "__call__"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 3, 1, "", "energy_flux"], [265, 3, 1, "", "energy_flux_error"], [265, 3, 1, "", "evaluate_error"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 2, 1, "", "frozen"], [265, 3, 1, "", "integral"], [265, 3, 1, "", "integral_error"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "inverse_all"], [265, 2, 1, "", "is_norm_spectral_model"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "pivot_energy"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "plot_error"], [265, 3, 1, "", "reassign"], [265, 3, 1, "", "reference_fluxes"], [265, 3, 1, "", "spectral_index"], [265, 3, 1, "", "spectral_index_error"], [265, 3, 1, "", "to_dict"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[266, 3, 1, "", "__call__"], [266, 2, 1, "", "amplitude"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 2, 1, "", "ecut"], [266, 3, 1, "", "energy_flux"], [266, 3, 1, "", "energy_flux_error"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "evaluate_error"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 2, 1, "", "frozen"], [266, 2, 1, "", "index_1"], [266, 2, 1, "", "index_2"], [266, 3, 1, "", "integral"], [266, 3, 1, "", "integral_error"], [266, 3, 1, "", "inverse"], [266, 3, 1, "", "inverse_all"], [266, 2, 1, "", "is_norm_spectral_model"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "pivot_energy"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_error"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "reference"], [266, 3, 1, "", "reference_fluxes"], [266, 3, 1, "", "spectral_index"], [266, 3, 1, "", "spectral_index_error"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[267, 3, 1, "", "__call__"], [267, 2, 1, "", "amplitude"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "energy_flux"], [267, 3, 1, "", "energy_flux_error"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_error"], [267, 2, 1, "", "expfactor"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 2, 1, "", "frozen"], [267, 2, 1, "", "index_1"], [267, 2, 1, "", "index_2"], [267, 3, 1, "", "integral"], [267, 3, 1, "", "integral_error"], [267, 3, 1, "", "inverse"], [267, 3, 1, "", "inverse_all"], [267, 2, 1, "", "is_norm_spectral_model"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "pivot_energy"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "plot_error"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "reference"], [267, 3, 1, "", "reference_fluxes"], [267, 3, 1, "", "spectral_index"], [267, 3, 1, "", "spectral_index_error"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "to_dict"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[268, 3, 1, "", "__call__"], [268, 2, 1, "", "amplitude"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 3, 1, "", "energy_flux"], [268, 3, 1, "", "energy_flux_error"], [268, 3, 1, "", "evaluate"], [268, 3, 1, "", "evaluate_error"], [268, 2, 1, "", "expfactor"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 2, 1, "", "frozen"], [268, 2, 1, "", "index_1"], [268, 2, 1, "", "index_2"], [268, 3, 1, "", "integral"], [268, 3, 1, "", "integral_error"], [268, 3, 1, "", "inverse"], [268, 3, 1, "", "inverse_all"], [268, 2, 1, "", "is_norm_spectral_model"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "pivot_energy"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "plot_error"], [268, 3, 1, "", "reassign"], [268, 2, 1, "", "reference"], [268, 3, 1, "", "reference_fluxes"], [268, 3, 1, "", "spectral_index"], [268, 3, 1, "", "spectral_index_error"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[270, 3, 1, "", "__call__"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 3, 1, "", "evaluate"], [270, 3, 1, "", "evaluate_geom"], [270, 2, 1, "", "evaluation_bin_size_min"], [270, 2, 1, "", "evaluation_radius"], [270, 2, 1, "", "evaluation_region"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 3, 1, "", "from_position"], [270, 2, 1, "", "frozen"], [270, 3, 1, "", "integrate_geom"], [270, 2, 1, "", "is_energy_dependent"], [270, 2, 1, "", "map"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "phi_0"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "plot_grid"], [270, 3, 1, "", "plot_interactive"], [270, 3, 1, "", "plot_position_error"], [270, 2, 1, "", "position"], [270, 2, 1, "", "position_error"], [270, 2, 1, "", "position_lonlat"], [270, 3, 1, "", "reassign"], [270, 2, 1, "", "tag"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"], [270, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[271, 3, 1, "", "__call__"], [271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 2, 1, "", "default_parameters"], [271, 3, 1, "", "energy_flux"], [271, 3, 1, "", "energy_flux_error"], [271, 3, 1, "", "evaluate"], [271, 3, 1, "", "evaluate_error"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 2, 1, "", "frozen"], [271, 3, 1, "", "integral"], [271, 3, 1, "", "integral_error"], [271, 3, 1, "", "inverse"], [271, 3, 1, "", "inverse_all"], [271, 2, 1, "", "is_norm_spectral_model"], [271, 2, 1, "", "map"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 2, 1, "", "pivot_energy"], [271, 3, 1, "", "plot"], [271, 3, 1, "", "plot_error"], [271, 3, 1, "", "reassign"], [271, 3, 1, "", "reference_fluxes"], [271, 3, 1, "", "spectral_index"], [271, 3, 1, "", "spectral_index_error"], [271, 2, 1, "", "tag"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"], [271, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 3, 1, "", "cutout"], [272, 2, 1, "", "default_parameters"], [272, 2, 1, "", "energy_center"], [272, 3, 1, "", "evaluate"], [272, 2, 1, "", "evaluation_radius"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 2, 1, "", "frozen"], [272, 2, 1, "", "map"], [272, 2, 1, "", "name"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 2, 1, "", "position"], [272, 3, 1, "", "reassign"], [272, 3, 1, "", "slice_by_energy"], [272, 2, 1, "", "spectral_model"], [272, 3, 1, "", "stack"], [272, 2, 1, "", "tag"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"], [272, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[273, 3, 1, "", "__call__"], [273, 3, 1, "", "copy"], [273, 2, 1, "", "covariance"], [273, 2, 1, "", "default_parameters"], [273, 3, 1, "", "evaluate"], [273, 2, 1, "", "f0"], [273, 2, 1, "", "f1"], [273, 2, 1, "", "f2"], [273, 3, 1, "", "freeze"], [273, 3, 1, "", "from_dict"], [273, 3, 1, "", "from_parameters"], [273, 2, 1, "", "frozen"], [273, 3, 1, "", "integral"], [273, 2, 1, "", "is_energy_dependent"], [273, 2, 1, "", "parameters"], [273, 2, 1, "", "parameters_unique_names"], [273, 2, 1, "", "phi_ref"], [273, 3, 1, "", "plot"], [273, 3, 1, "", "plot_phasogram"], [273, 3, 1, "", "read"], [273, 3, 1, "", "reassign"], [273, 2, 1, "", "reference_time"], [273, 3, 1, "", "sample_time"], [273, 2, 1, "", "t_ref"], [273, 2, 1, "", "tag"], [273, 3, 1, "", "time_sum"], [273, 3, 1, "", "to_dict"], [273, 2, 1, "", "type"], [273, 3, 1, "", "unfreeze"], [273, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[274, 3, 1, "", "__call__"], [274, 3, 1, "", "copy"], [274, 2, 1, "", "covariance"], [274, 2, 1, "", "default_parameters"], [274, 3, 1, "", "evaluate"], [274, 3, 1, "", "evaluate_geom"], [274, 2, 1, "", "evaluation_bin_size_min"], [274, 2, 1, "", "evaluation_radius"], [274, 2, 1, "", "evaluation_region"], [274, 3, 1, "", "freeze"], [274, 3, 1, "", "from_dict"], [274, 3, 1, "", "from_parameters"], [274, 3, 1, "", "from_position"], [274, 2, 1, "", "frozen"], [274, 3, 1, "", "integrate_geom"], [274, 2, 1, "", "is_energy_dependent"], [274, 2, 1, "", "lat_0"], [274, 2, 1, "", "lon_0"], [274, 2, 1, "", "map"], [274, 2, 1, "", "map_center"], [274, 2, 1, "", "parameters"], [274, 2, 1, "", "parameters_unique_names"], [274, 2, 1, "", "phi_0"], [274, 3, 1, "", "plot"], [274, 3, 1, "", "plot_error"], [274, 3, 1, "", "plot_grid"], [274, 3, 1, "", "plot_interactive"], [274, 3, 1, "", "plot_position_error"], [274, 2, 1, "", "position"], [274, 2, 1, "", "position_error"], [274, 2, 1, "", "position_lonlat"], [274, 3, 1, "", "read"], [274, 3, 1, "", "reassign"], [274, 2, 1, "", "tag"], [274, 3, 1, "", "to_dict"], [274, 3, 1, "", "to_region"], [274, 2, 1, "", "type"], [274, 3, 1, "", "unfreeze"], [274, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[275, 3, 1, "", "__call__"], [275, 3, 1, "", "copy"], [275, 2, 1, "", "covariance"], [275, 2, 1, "", "default_parameters"], [275, 3, 1, "", "energy_flux"], [275, 3, 1, "", "energy_flux_error"], [275, 3, 1, "", "evaluate"], [275, 3, 1, "", "evaluate_error"], [275, 3, 1, "", "freeze"], [275, 3, 1, "", "from_dict"], [275, 3, 1, "", "from_parameters"], [275, 3, 1, "", "from_region_map"], [275, 2, 1, "", "frozen"], [275, 3, 1, "", "integral"], [275, 3, 1, "", "integral_error"], [275, 3, 1, "", "inverse"], [275, 3, 1, "", "inverse_all"], [275, 2, 1, "", "is_norm_spectral_model"], [275, 2, 1, "", "parameters"], [275, 2, 1, "", "parameters_unique_names"], [275, 2, 1, "", "pivot_energy"], [275, 3, 1, "", "plot"], [275, 3, 1, "", "plot_error"], [275, 3, 1, "", "read_xspec_model"], [275, 3, 1, "", "reassign"], [275, 3, 1, "", "reference_fluxes"], [275, 3, 1, "", "spectral_index"], [275, 3, 1, "", "spectral_index_error"], [275, 2, 1, "", "tag"], [275, 3, 1, "", "to_dict"], [275, 2, 1, "", "type"], [275, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[276, 3, 1, "", "__call__"], [276, 3, 1, "", "copy"], [276, 2, 1, "", "covariance"], [276, 2, 1, "", "default_parameters"], [276, 3, 1, "", "freeze"], [276, 3, 1, "", "from_dict"], [276, 3, 1, "", "from_parameters"], [276, 2, 1, "", "frozen"], [276, 3, 1, "", "integral"], [276, 2, 1, "", "is_energy_dependent"], [276, 2, 1, "", "parameters"], [276, 2, 1, "", "parameters_unique_names"], [276, 3, 1, "", "plot"], [276, 3, 1, "", "reassign"], [276, 2, 1, "", "reference_time"], [276, 3, 1, "", "sample_time"], [276, 3, 1, "", "time_sum"], [276, 3, 1, "", "to_dict"], [276, 2, 1, "", "type"], [276, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.utils": [[283, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[286, 1, 1, "", "CashCountsStatistic"], [287, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [288, 1, 1, "", "WStatCountsStatistic"], [289, 4, 1, "", "cash"], [290, 4, 1, "", "cash_sum_cython"], [291, 4, 1, "", "compute_chisq"], [292, 4, 1, "", "compute_flux_doubling"], [293, 4, 1, "", "compute_fpp"], [294, 4, 1, "", "compute_fvar"], [295, 4, 1, "", "cstat"], [296, 4, 1, "", "discrete_correlation"], [297, 4, 1, "", "f_cash_root_cython"], [298, 4, 1, "", "get_wstat_gof_terms"], [299, 4, 1, "", "get_wstat_mu_bkg"], [300, 4, 1, "", "norm_bounds_cython"], [301, 4, 1, "", "structure_function"], [302, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[286, 3, 1, "", "compute_errn"], [286, 3, 1, "", "compute_errp"], [286, 3, 1, "", "compute_upper_limit"], [286, 2, 1, "", "error"], [286, 3, 1, "", "info_dict"], [286, 2, 1, "", "n_bkg"], [286, 2, 1, "", "n_sig"], [286, 3, 1, "", "n_sig_matching_significance"], [286, 2, 1, "", "p_value"], [286, 2, 1, "", "sqrt_ts"], [286, 2, 1, "", "stat_max"], [286, 2, 1, "", "stat_null"], [286, 3, 1, "", "sum"], [286, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[288, 3, 1, "", "compute_errn"], [288, 3, 1, "", "compute_errp"], [288, 3, 1, "", "compute_upper_limit"], [288, 2, 1, "", "error"], [288, 3, 1, "", "info_dict"], [288, 2, 1, "", "n_bkg"], [288, 2, 1, "", "n_sig"], [288, 3, 1, "", "n_sig_matching_significance"], [288, 2, 1, "", "p_value"], [288, 2, 1, "", "sqrt_ts"], [288, 2, 1, "", "stat_max"], [288, 2, 1, "", "stat_null"], [288, 3, 1, "", "sum"], [288, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[303, 4, 1, "", "hierarchical_clustering"], [304, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[305, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [306, 4, 1, "", "cartesian"], [307, 4, 1, "", "fov_to_sky"], [308, 4, 1, "", "galactic"], [309, 4, 1, "", "motion_since_birth"], [310, 4, 1, "", "polar"], [311, 4, 1, "", "sky_to_fov"], [312, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[313, 1, 1, "", "HDULocation"], [314, 1, 1, "", "LazyFitsData"], [315, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[313, 3, 1, "", "get_hdu"], [313, 3, 1, "", "info"], [313, 3, 1, "", "load"], [313, 3, 1, "", "path"]], "gammapy.utils.integrate": [[316, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[317, 1, 1, "", "ScaledRegularGridInterpolator"], [318, 4, 1, "", "interpolate_profile"], [319, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[317, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[320, 5, 1, "", "BACKEND_DEFAULT"], [321, 5, 1, "", "METHOD_DEFAULT"], [322, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [323, 5, 1, "", "N_JOBS_DEFAULT"], [324, 5, 1, "", "POOL_KWARGS_DEFAULT"], [325, 1, 1, "", "multiprocessing_manager"], [326, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[327, 1, 1, "", "InverseCDFSampler"], [328, 4, 1, "", "draw"], [329, 4, 1, "", "get_random_state"], [330, 4, 1, "", "normalize"], [331, 4, 1, "", "pdf"], [332, 4, 1, "", "sample_powerlaw"], [333, 4, 1, "", "sample_sphere"], [334, 4, 1, "", "sample_sphere_distance"], [335, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[327, 3, 1, "", "sample"], [327, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[336, 4, 1, "", "compound_region_to_regions"], [337, 4, 1, "", "make_concentric_annulus_sky_regions"], [338, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [339, 4, 1, "", "region_to_frame"], [340, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[341, 4, 1, "", "from_yaml"], [342, 4, 1, "", "get_images_paths"], [343, 4, 1, "", "make_path"], [344, 4, 1, "", "read_yaml"], [345, 4, 1, "", "recursive_merge_dicts"], [346, 4, 1, "", "to_yaml"], [347, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[348, 4, 1, "", "hstack_columns"], [349, 4, 1, "", "table_row_to_dict"], [350, 4, 1, "", "table_standardise_units_copy"], [351, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[352, 1, 1, "", "Checker"], [353, 4, 1, "", "assert_quantity_allclose"], [354, 4, 1, "", "assert_skycoord_allclose"], [355, 4, 1, "", "assert_time_allclose"], [356, 4, 1, "", "mpl_plot_check"], [357, 4, 1, "", "requires_data"], [358, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[352, 3, 1, "", "run"]], "gammapy.utils.time": [[359, 4, 1, "", "absolute_time"], [360, 4, 1, "", "time_ref_from_dict"], [361, 4, 1, "", "time_ref_to_dict"], [362, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[363, 4, 1, "", "standardise_unit"], [364, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[365, 1, 1, "", "MapPanelPlotter"], [366, 4, 1, "", "add_colorbar"], [367, 4, 1, "", "annotate_heatmap"], [368, 4, 1, "", "colormap_hess"], [369, 4, 1, "", "colormap_milagro"], [370, 4, 1, "", "plot_contour_line"], [371, 4, 1, "", "plot_distribution"], [372, 4, 1, "", "plot_heatmap"], [373, 4, 1, "", "plot_map_rgb"], [374, 4, 1, "", "plot_npred_signal"], [375, 4, 1, "", "plot_spectrum_datasets_off_regions"], [376, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[365, 3, 1, "", "plot"], [365, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 101, 102, 103, 104, 105, 108, 109, 110, 124, 125, 126, 130, 133, 141, 142, 147, 148, 149, 153, 173, 179, 200, 206, 218, 222, 223, 228, 230, 231, 234, 235, 237, 238, 239, 241, 244, 246, 247, 251, 253, 254, 261, 262, 263, 266, 267, 268, 273, 276, 277, 278, 284, 294, 313, 363, 367, 368, 375, 378, 379, 381, 383, 388, 389, 390, 392, 394, 395, 396, 397, 398, 401, 404, 407, 408, 410, 411, 413, 414, 415, 416, 444, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 495, 496, 498, 501, 502, 508, 509, 510, 511, 514, 516, 521, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 576, 577, 578, 580], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 83, 85, 87, 88, 89, 90, 91, 94, 96, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 122, 123, 125, 126, 127, 128, 130, 132, 133, 141, 142, 147, 148, 149, 150, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 168, 170, 173, 176, 177, 181, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 216, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 282, 284, 286, 287, 288, 289, 292, 293, 294, 295, 296, 303, 304, 323, 327, 334, 335, 355, 366, 368, 369, 373, 375, 378, 379, 381, 382, 385, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 411, 414, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 504, 508, 510, 514, 518, 520, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 576, 577, 578, 579], "00": [67, 87, 88, 89, 91, 101, 197, 379, 393, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 465, 466, 468, 469, 471, 472, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 497, 499, 500, 501, 502, 503, 531, 541, 561, 562, 572, 580], "000": [67, 87, 88, 91, 125, 393, 449, 451, 453, 454, 456, 457, 461, 462, 463, 465, 466, 469, 471, 472, 475, 478, 479, 480, 484, 486, 487, 492, 499, 500, 502, 531], "0000": 404, "00000": 142, "000000": 478, "000000000000002": 484, "00000000000001": 456, "00000000000003": 473, "00000000000004": 478, "0000000000016": 86, "0000000000018": 94, "000000000002": 465, "000000000006": 465, "000000000007": 478, "00000000001": 478, "00000000e": [481, 482], "00000001": 86, "0000000e": 482, "00000143": [379, 580], "0000e": [101, 449, 450, 453, 454, 455, 456, 458, 461, 469, 471, 472, 481, 487, 489, 501, 561], "0001": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 369, 463], "00010298": 479, "00015": 480, "000150": 451, "0002": [451, 502], "00020": 451, "0002000": 451, "0003": 463, "00050": 451, "000500": 451, "0006": 451, "00074287037": [94, 466], "000742870370370241": 94, "0008": 478, "0009": 451, "000e": [449, 453, 456, 458, 461, 462, 469, 472, 478, 481, 487, 489, 501, 502, 561], "000true": 451, "001": [50, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206, 355, 447, 465, 481, 490, 539], "0016288e": 482, "0016e": 472, "001e": 67, "002": [447, 479, 490], "002018": 492, "0025508e": 482, "0028272e": 482, "0029": 403, "0029202684427718766": 500, "002e": [67, 454], "003": [473, 486, 492], "003026327991562108": 462, "0031052863692021915": 500, "0033": 578, "00336861061002e": 475, "0036925550381217": 456, "00375698": 238, "004": 67, "00422666667": 476, "00449161": 243, "00490": 463, "00490483": 463, "0049409": 491, "005": 478, "00521472221220211": 462, "005909017160171437": 464, "0064830e": 482, "00688029": 238, "007": 478, "0076540e": 482, "008": [478, 577], "008166963876141447": 464, "008891944789387447": 464, "00894": 502, "009": [475, 478], "00931e": 448, "009433226692021113": 464, "00e": [83, 448, 454, 457, 465, 469, 472, 473, 475, 479, 482, 483, 492, 500], "01": [39, 52, 75, 83, 87, 88, 91, 94, 102, 105, 109, 110, 112, 113, 127, 133, 176, 177, 181, 191, 192, 197, 201, 204, 225, 231, 235, 237, 239, 254, 261, 379, 414, 447, 448, 449, 452, 453, 454, 455, 457, 458, 461, 462, 465, 469, 472, 473, 474, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 492, 493, 494, 500, 501, 502, 503, 508, 513, 523, 525, 526, 529, 533, 535, 537, 559, 560, 564, 565, 566, 572, 577, 580], "010": 486, "010135": 556, "010e": 67, "011": 486, "01183": 142, "011872336272724": 500, "012": 486, "0122385e": 482, "01235137e": 482, "012733796525585": 488, "012967983802625": 472, "0139252e": 482, "014": [85, 102, 105, 109, 110, 173, 454, 461, 478, 483, 500, 501, 525], "0143724": 238, "0143764": 491, "01449": 83, "0145": 485, "01450": [470, 501], "0149044e": 482, "015": 478, "01551196351647377": 238, "0163": 463, "01648855015875024": 576, "017": [447, 490], "01700709977114979": 476, "017442925431194484": 476, "018": 67, "018182745349064267": 462, "0183519e": 482, "01960784313726": 467, "019672": 480, "019899368286133": 462, "01e": [173, 414, 448, 478], "01t00": [87, 91, 94, 197, 379, 457, 465, 580], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 102, 105, 109, 110, 111, 116, 161, 168, 173, 191, 192, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 414, 447, 448, 449, 451, 453, 454, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 478, 481, 482, 483, 484, 485, 486, 487, 490, 492, 497, 500, 501, 502, 523, 525, 526, 533, 534, 535, 541], "020": [462, 478, 480], "020420144596410953": 488, "021": [67, 478], "0225e": 478, "0227e": 469, "02288737": 238, "023": 478, "0230e": 469, "023472814714293713": 500, "024": 478, "02432": 478, "024715584699834": 500, "024e": 502, "025": [478, 492], "0251191207999763": 463, "025e": 142, "026": [53, 67, 478], "02653": [457, 463], "026891": 478, "026914": 478, "027": 67, "028854": 485, "029e": [449, 478], "02e": [83, 469, 475], "02t23": 86, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 87, 89, 91, 203, 391, 406, 447, 448, 449, 451, 462, 463, 465, 472, 478, 482, 484, 486, 488, 489, 490, 494, 495, 501, 536], "03034567e": 480, "032": [447, 468, 469, 478], "0322": 67, "0322775e": 482, "033": [67, 447, 452, 453, 478], "033176650892097": 96, "03383": 491, "034": 577, "0344": 67, "03447394e": 480, "03493": 480, "034e": 451, "035": 480, "0354700e": 482, "0356": 448, "0356551": 448, "036": 67, "036e": 478, "037": 486, "03745318352059925": 570, "0375512e": 482, "0376213e": 482, "03893": 480, "039": [461, 462, 480], "039215686274545": 467, "03921700077803329": 462, "0395135e": 482, "03978226e": 487, "04": [30, 67, 94, 447, 452, 454, 456, 457, 459, 462, 465, 468, 472, 473, 478, 482, 484, 487, 492], "040": 453, "040e": 457, "041": 492, "0414": 457, "0415": 502, "041882": 478, "042": 478, "0423761": 448, "042e": 478, "043": 67, "04357249662280083": 453, "04454": 492, "0453e": 469, "0454683": 491, "046": 67, "0462798e": 482, "047": 67, "0473174": 243, "0474750e": 482, "048": [461, 492], "0482342e": 482, "04897634344908595": 96, "048e": 67, "049": [451, 461, 541], "04939e": 448, "049676": 478, "04d": 465, "04e": 483, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 87, 91, 122, 123, 125, 132, 204, 211, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 337, 406, 447, 448, 449, 450, 451, 452, 453, 457, 460, 461, 462, 463, 466, 469, 471, 477, 478, 479, 481, 482, 483, 486, 489, 491, 493, 495, 500, 501, 528, 533], "050": 486, "05019": 142, "0503641": 448, "0505949e": 482, "05075": 482, "0508075688763": 478, "05088486522436142": 453, "050e": 457, "051": [19, 20, 26, 486], "051c": [17, 21, 22, 24, 25, 27], "052": 478, "0520119e": 482, "0521419985089": 464, "05227": 478, "053": 461, "053212009682775": 488, "054833602905273e": 462, "0548e": 462, "054e": 67, "055": 478, "055e": 451, "0560": 502, "056130": 478, "05628243": 502, "05637e": 448, "05673": 502, "057": 478, "05762513693893088": 462, "058": 67, "058201": 478, "05853": 457, "058823529411775": 467, "059": 67, "05901956e": 482, "0598579": 448, "05deg": 204, "06": [147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206, 447, 452, 461, 462, 463, 468, 474, 478, 479, 481, 482, 483, 484, 490, 492, 495, 562], "060": [447, 459, 460], "061": 502, "0610083814486": 472, "062": [465, 486, 487, 492], "0625": 487, "0628": 502, "063": 67, "0631757e": 482, "06334488877417636": 488, "064108e": 478, "06430": 463, "0643032": 463, "06450": 142, "065071": 478, "065119": 502, "06549": 142, "066": 453, "066442": 478, "067": 457, "068245": 478, "0689": 481, "068e": 451, "069": 67, "07": [102, 173, 353, 393, 414, 447, 451, 452, 454, 458, 461, 463, 471, 473, 474, 475, 478, 479, 482, 484, 486, 490, 492, 503], "07022": 142, "070483": 478, "0711412": 448, "072": 67, "073": 67, "0739282e": 482, "074": [478, 492], "07454639": 463, "07455": 463, "0746": 502, "0748": [478, 502], "074e": 472, "075": 67, "07512322002655547": 462, "0756e": 448, "076": 502, "077": [448, 460], "078": 451, "07843137254903": 467, "07871368968": 479, "07934317e": 480, "07943648658692837": 488, "07944657408": 478, "079464e": 502, "0799109224230051": 488, "07e": 473, "08": [86, 373, 414, 455, 456, 458, 459, 461, 462, 469, 478, 479, 481, 483, 492, 500, 501, 542], "0800792e": 482, "08075": 482, "08081469527619482": 456, "08088": 179, "080e": 457, "0811551760882139": 488, "08142": 477, "08191603310406206": 488, "08192": 463, "08192101": 463, "082": 478, "082691868487906": 476, "08269984": 502, "082e": 125, "083": [67, 478], "08328557573258877": 488, "0833333358168602": 453, "0833333432674408": 453, "08342": 142, "08388624433428049": 488, "084": 67, "08447355125099419": 488, "0845515": 448, "085": 478, "08529426": 97, "0855013383552432": 488, "0859117235629056e": 475, "08675": 479, "086e": 478, "087": 502, "08795162606984375": 488, "087e": 478, "088": [447, 572], "088742": 478, "08880368117243051": 488, "08894569035619496": 488, "089": 137, "0894640e": 482, "0897868126630783": 488, "089881": 478, "08e": [469, 486], "09": [33, 125, 173, 447, 449, 454, 457, 459, 461, 478, 479, 482, 483, 500, 501, 502, 578], "0902437e": 482, "0907128e": 482, "0910": [252, 253], "0914": [52, 53], "092": [447, 572], "092e": 472, "093": [447, 572], "093477": 463, "09348": 463, "09375": 475, "09426693227142095": 488, "094834": 478, "095": [447, 572], "095232": 478, "09562941": 502, "095707": 502, "096": [447, 454, 572], "0960": 502, "09607": 502, "09610314778983592": 488, "09623312838375568": 488, "09740295372903346": 488, "097e": 67, "09805": 142, "098903": 478, "09907043184188653": 488, "09e": 483, "0b100": 323, "0d": [127, 467, 479, 537], "0e": [401, 454, 456, 457, 458, 462, 465, 469, 472, 475, 479, 480, 482, 484, 486, 487, 492, 500, 532, 533, 534, 535, 537, 538, 539, 540, 543, 544, 546, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "0f": [481, 492, 502], "0rc": 407, "0rc1": 407, "0true": 463, "0x105fd0cf8": 378, "0x105fe3b70": 378, "0x129602550": 378, "0x7f9f0d95fb80": 488, "0x7f9f14558730": 476, "0x7f9f346fa700": 487, "0x7f9f347fc8b0": 489, "0x7f9f34860bb0": 479, "0x7f9f34860dc0": 479, "0x7f9f3492ce50": 491, "0x7f9f34975490": 488, "0x7f9f34a01490": 491, "0x7f9f34a13130": 488, "0x7f9f34b1d0d0": 467, "0x7f9f34b1dc10": 467, "0x7f9f34e92ca0": 491, "0x7f9f3503c970": 491, "0x7f9f35202bb0": 488, "0x7f9f44e81760": 479, "0x7f9f46891760": 479, "0x7f9f46930190": 561, "1": [11, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 104, 105, 109, 110, 111, 115, 116, 117, 118, 122, 124, 125, 126, 127, 128, 130, 131, 133, 137, 141, 142, 147, 148, 149, 150, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 168, 173, 176, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 214, 216, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 249, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 271, 273, 274, 275, 276, 277, 278, 284, 286, 287, 288, 292, 293, 303, 304, 316, 317, 323, 324, 325, 334, 335, 337, 338, 363, 365, 368, 369, 373, 375, 378, 379, 381, 382, 385, 386, 388, 389, 390, 392, 393, 395, 398, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 414, 415, 418, 419, 421, 422, 426, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 497, 500, 501, 502, 504, 508, 509, 510, 513, 514, 516, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 577, 578, 579], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 86, 87, 88, 89, 91, 102, 103, 105, 108, 109, 110, 111, 116, 118, 122, 123, 125, 126, 127, 131, 132, 133, 135, 141, 142, 144, 147, 148, 150, 152, 154, 155, 160, 161, 162, 163, 164, 166, 173, 179, 192, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 211, 214, 216, 225, 228, 240, 241, 243, 244, 266, 278, 287, 293, 323, 325, 335, 366, 371, 373, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395, 400, 401, 402, 406, 408, 414, 419, 421, 432, 434, 437, 441, 443, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 500, 501, 502, 504, 510, 514, 520, 523, 525, 526, 527, 528, 538, 539, 542, 544, 547, 548, 550, 551, 552, 553, 555, 556, 558, 559, 560, 561, 564, 565, 566, 576, 577, 580], "100": [19, 20, 26, 46, 47, 74, 94, 125, 133, 152, 153, 163, 204, 206, 218, 219, 222, 223, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 247, 249, 251, 252, 253, 254, 258, 261, 263, 265, 266, 267, 268, 271, 273, 275, 276, 278, 280, 335, 378, 379, 381, 386, 397, 417, 448, 450, 453, 456, 461, 462, 463, 465, 466, 467, 469, 473, 476, 477, 478, 479, 480, 482, 483, 484, 487, 489, 491, 492, 493, 502, 506, 508, 509, 510, 514, 525, 528, 529, 532, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 577], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 199, 378, 381, 451, 478, 479, 482, 489, 492, 502, 528], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 103, 108, 152, 163, 166, 176, 478, 492], "100000": [74, 478, 500], "1000000": [51, 52, 54, 478, 561], "10000000": 561, "100000000000": 480, "1000e": 489, "1001": [436, 465, 466], "1002": 436, "10041": 141, "10045": [65, 268, 560], "10049": 448, "1006": 436, "101": [422, 447, 473, 478, 490], "1012": 477, "1013": 437, "1014": 437, "101430": 473, "10172": 487, "102": [173, 454, 457, 577, 578], "1021": 437, "1025": 437, "1026": 437, "10262943822890519": [96, 488], "1027": 437, "102877228833871": 488, "1029": 437, "10295505": 502, "102e": 478, "103": [141, 417, 440], "103000133": 493, "1031": 437, "1032": 437, "1032531953505502": 500, "1034": 502, "1035": 437, "1035002116788955": 454, "1036": 457, "1038": 437, "104": 463, "1040": 437, "10409": 463, "10409446": 463, "10416667": 475, "1043": 437, "104317": [102, 479, 486], "1044": 457, "1045": 437, "1046": 396, "10470702368766069": 488, "10477": 502, "105": [82, 469, 494], "1051": 437, "1052": 478, "1053": 437, "1054": 437, "1054498": 137, "1057": 437, "10592": 580, "105953": 502, "105e": 457, "106": [447, 572], "1061971e": 482, "106217": 83, "1062535e": 482, "1064": 478, "1065": 437, "1067": 437, "1069": 437, "107": [448, 484], "1070": [437, 502], "107214": 571, "1072542e": 482, "1073": 437, "10752883769757363": 488, "1076": 437, "1078": 437, "107e": [457, 478], "108": [434, 456], "108034597491956e": 487, "108043": 461, "1082": 437, "1083": 437, "1084": 437, "1085": 437, "1085000": 461, "1086": 293, "1087": 437, "1088": 437, "1089": 437, "109": [417, 449, 484], "1090": 437, "1092": [437, 457], "1093": [437, 457], "1098": 437, "1099306e": 482, "109e": 463, "10d": 467, "10e": [173, 478, 482], "10k": 194, "10th": [405, 416], "11": [67, 87, 91, 94, 104, 124, 125, 126, 130, 131, 214, 337, 382, 385, 387, 395, 402, 406, 417, 418, 439, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 466, 467, 469, 470, 471, 472, 473, 475, 478, 479, 480, 481, 483, 485, 486, 487, 489, 490, 492, 500, 501, 502, 525, 527, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 578], "110": [478, 492], "1100": [437, 453], "110000": [479, 483], "1102": 437, "1102e": 450, "1103": 437, "110380": [83, 394, 458, 461, 463, 491], "1104": 437, "1105": 437, "1107": 437, "1108": 437, "111": [366, 385, 437, 461, 478], "1110": 437, "1111": [135, 144, 478, 502], "111140": [394, 458, 461, 463], "111159": [394, 458, 461, 463, 491], "11132": 64, "1115": 437, "111507416": 473, "111630": [89, 473, 491], "111797": 478, "11184": [65, 267, 559], "112": [448, 453], "11208": 65, "11220184543": 480, "1127": 437, "11291820875721864": 488, "113": 502, "1131": [386, 459], "1133": 437, "1134": 437, "1136": 437, "114416978060044": 472, "115": 67, "1150": 437, "11517": 502, "11553325504064559": [96, 488], "11587179071752986": 96, "116": [417, 449, 450], "1160": 478, "11610": 502, "1162": 437, "1162290917256776e": 470, "1166": 437, "1167": [385, 392], "1169": 437, "116e": 67, "117": [417, 542], "1170": 437, "1172": 392, "1173775": 478, "1176": 437, "117877e": 478, "1179": 437, "118": [141, 461], "1183": 437, "118355": 478, "11839": 142, "119": [449, 457, 461], "1190": 437, "119432": 448, "1195": 437, "119e": 453, "11af4c": 417, "11e": 478, "12": [17, 38, 42, 67, 86, 87, 91, 102, 105, 112, 113, 125, 142, 163, 166, 192, 193, 194, 196, 202, 205, 206, 218, 222, 228, 230, 234, 241, 251, 253, 263, 266, 267, 268, 278, 382, 384, 385, 386, 387, 389, 390, 395, 398, 401, 417, 421, 422, 423, 435, 440, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 470, 471, 472, 475, 476, 478, 479, 480, 481, 484, 486, 487, 489, 492, 500, 502, 514, 525, 528, 529, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 546, 549, 550, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571], "120": [53, 393, 455, 492, 536], "120000": 458, "120154": 478, "1204": 437, "1207": 437, "120e": [67, 502], "121": [67, 463, 486], "1210": 437, "1211": [437, 478], "121241": 461, "12148": 457, "1215": 437, "1216": 450, "12186": 502, "1219": 478, "122": [67, 141, 417, 451, 486], "1220": 437, "1226": 437, "1227": 437, "12276676166802643": 488, "122e": [462, 472], "123": [87, 91, 390, 457], "1231": 438, "1234": 88, "123456789": [197, 379, 580], "1235": 437, "1237": 386, "1238": 437, "123890826": 86, "123892513": 86, "1239": 383, "123944": 83, "123e": 457, "124": [141, 390, 457, 478, 486], "1240": 437, "12423250e": 482, "1243": 502, "1244969200533408": 304, "1246": 437, "12493874": 482, "124e": 67, "125": [67, 125, 141, 453, 463, 484, 492, 502, 577], "12518": 462, "12525306": 476, "12546": 65, "1258925411": 480, "126": [67, 451, 478, 481], "12611": 142, "1264500e": 482, "126538": 555, "126585": 448, "1266": 437, "1268": 437, "12688": 83, "1269263e": 482, "12697": 462, "127": 457, "12704": [141, 142], "1271v": 294, "12751": 448, "1277": 384, "1278": 385, "12794487": 487, "128": [417, 473, 504], "12809": [102, 479, 486], "1281": 437, "12816": 502, "12856": 492, "1287": 437, "1289": 437, "128e": 451, "129": [443, 501], "1290": 437, "1291": 437, "1294": 437, "1299": 478, "12nan5": 451, "12r_": 53, "12th": [403, 416], "13": [67, 101, 125, 142, 203, 303, 382, 383, 387, 392, 397, 406, 422, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 500, 501, 502, 510, 578], "130": 525, "1300": 437, "1301v": 38, "13030": 502, "1305": 437, "13061": 487, "131": 451, "1310": 502, "1312": 437, "13131476695509": 472, "13133": 502, "13152": 463, "1316": 437, "1317": 438, "1318": 437, "1319": [94, 437], "13197": 461, "132": 457, "13226": 502, "1323e": 462, "132472": 463, "132e": 453, "133": 142, "1331": 438, "1334": 438, "1337": 438, "1339": 438, "133e": 451, "134": [142, 454, 457, 463], "1341": 438, "1342a": 153, "1343": 438, "1344": 478, "1345": 438, "1346": 438, "1347": 438, "13499879586502125": 464, "135": [38, 101, 142, 451, 467, 478, 481], "13500212963": 478, "1351e": 478, "1354": 438, "135498046875": 453, "1357": 438, "1359316": 502, "135e": 125, "136": 478, "1360": 438, "1361": 478, "1362": 438, "1367": 438, "1369": [386, 438], "137": [142, 457, 464], "1372": 438, "137254901960785": 467, "1373": 438, "1374": 438, "137521287529426e": 500, "1376": 438, "1376407570489014e": 470, "1377": 438, "1378": 438, "1379190199428797": 304, "137990": 478, "138": [417, 451, 465, 502], "1381": 438, "1386": 438, "1387": 438, "138e": 463, "139": [453, 457, 492], "13911": 502, "1393881668086242e": 475, "1394": 548, "13944023e": 480, "1395": 438, "1396": [378, 454], "13960": 502, "1397": 438, "1397412321592923": 488, "13e": 479, "13nan6": 451, "13th": 416, "14": [28, 65, 67, 86, 379, 382, 387, 390, 395, 397, 398, 436, 447, 448, 451, 453, 454, 457, 461, 473, 475, 478, 479, 480, 481, 485, 486, 487, 500, 501, 502, 503, 577], "140": 493, "1401": 438, "1406": 438, "14079": 141, "1408": [438, 502], "141": [302, 463, 478], "1411180": 461, "1412": 438, "14121": 463, "1412536400000000": 502, "14149953611195087": [96, 488], "14150": 463, "1419": [386, 439], "141945": 448, "142": [67, 417, 451, 478, 502], "14201": 141, "1421": 438, "14210": 451, "1423": 472, "1426": 438, "142e": [472, 478], "1432": 438, "1433": 438, "1435": 438, "1438": 176, "1438465e": 482, "1439110308062257": 488, "144": [451, 486, 502], "144177": 536, "14419991": 97, "1442739329466746e": 487, "1443": 438, "1444": 438, "1445": 392, "14457": 502, "1446": 438, "1447": 438, "145": 478, "1451": 393, "14531053887243": 463, "1456": 438, "1456479e": 482, "146": 502, "14610": 580, "146472": 478, "1467": [135, 144], "147": [436, 478, 484], "1470": [438, 502], "1474": 438, "1475": 438, "1476": 438, "14773": 492, "147e": 478, "148": 457, "1482": 478, "1485314": 97, "1486415e": 482, "1489": [438, 463], "149": [453, 483, 486], "1492": 438, "1494": 463, "149445429667434": 464, "1495": 438, "1499472780781963": 304, "149e": 478, "14e": [458, 477], "14msts37sst": [465, 466, 491], "14nan3": 451, "14nan5": 451, "14th": [402, 405, 416], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 104, 124, 150, 151, 152, 153, 154, 155, 160, 161, 162, 164, 203, 368, 369, 373, 387, 395, 415, 417, 421, 426, 431, 434, 435, 436, 438, 447, 448, 453, 457, 459, 461, 462, 463, 465, 466, 467, 468, 469, 473, 475, 476, 478, 479, 480, 481, 483, 484, 486, 487, 490, 492, 502, 525, 533], "150": [131, 141, 142, 417, 451, 453, 465, 466, 484, 502], "1505": 438, "1507": 472, "15076259": 97, "151": [417, 486], "1510": 137, "1510240e": 482, "15140": 457, "1515": 438, "15154854": 97, "1517": 438, "152": [457, 463], "1521": 463, "1523": 465, "1523e": 489, "15246": 465, "152477": 492, "1527": 438, "153": 478, "1530": 479, "15319": 465, "153600": 479, "154": [417, 447, 448, 478, 541], "1543": 438, "154e": 463, "155": 417, "15518": 502, "1552": 459, "1553": [478, 502], "1554": 438, "1554106e": 482, "1556": [438, 478, 502], "1556008e": 482, "1558": 438, "156": [417, 453, 454, 457, 463, 480, 486], "1562": 438, "15621": 502, "1564": 438, "156525": 478, "1567629e": 482, "1568": 438, "15686274509804": 467, "157": [417, 502], "1573": 438, "1576": 438, "158": [142, 448, 454, 461], "1582": 438, "15848931924": 480, "1586": 94, "15899": 457, "1594": 438, "1597317": 97, "15990": 142, "159t": 52, "15e": 459, "15h14m00": 478, "15nan8": 451, "15t15": [454, 458, 459, 461, 487, 500, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "16": [16, 24, 53, 67, 94, 109, 110, 192, 382, 386, 395, 398, 399, 422, 437, 442, 444, 445, 447, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 500, 501, 502, 527, 569, 577, 578], "160": [31, 125, 417, 426, 467, 486], "1600": 466, "1600e": 449, "1605": 438, "16056": 457, "1606": 438, "1607": 477, "160e": 67, "161": [141, 386, 453, 463, 478], "1610e": [449, 478], "161250": 469, "1613279491744304": 488, "1616": 438, "1618850e": 482, "1619e": 101, "162": 67, "16227766": 484, "1622776601683795": [483, 484, 500], "16240": 501, "1626e": 458, "16287": 502, "1629219e": 482, "163": [447, 452, 467, 572, 577], "1630": [438, 502], "16303": 463, "16303044": 463, "1634": 438, "164": 478, "1642": 448, "165": 486, "1650": 502, "16506": 448, "16511": 463, "16511148": 463, "1658": 438, "165e": 457, "166": [417, 463, 478], "1660": 438, "166015625": 450, "1661916367760008e": 475, "1665478": 97, "166871893629602e": 475, "167": [417, 463, 469], "167219": 478, "1675": 438, "168": [478, 479, 502], "1681": 438, "1685": 438, "1686": 478, "1687": 86, "168702": 448, "169": [463, 472], "1691": 448, "1695": 438, "169529": 469, "1696": 438, "1697": 438, "1698": 453, "169871": 469, "16th": 416, "17": [20, 21, 40, 67, 86, 389, 392, 395, 426, 443, 447, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 578], "170": 450, "17016482e": 481, "1702": 438, "17020": 457, "1710": 439, "1711": 438, "1713": 450, "1715": 392, "1717": 502, "171749": 502, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 277, "172": 467, "17229679": 97, "173": 478, "1731": [438, 486], "1732": 478, "17320": 478, "1736": 457, "1737799900000000": 502, "174": 453, "1742": 67, "17445": 502, "1746": [438, 502], "1748": [438, 486], "1750": 438, "1751": 438, "17511": 142, "1753": 502, "1755": 438, "1756": 454, "1759": 438, "175e": 478, "176": [142, 417, 473, 478], "1760": 438, "1761": 438, "1762": 504, "1763": [439, 478], "1764": [438, 463], "176470588235294": 467, "1766": 439, "1768896e": 482, "177": [417, 447, 492, 493, 562], "17776": 448, "1778279410": 480, "177858": 561, "177e": 478, "178": [437, 447, 541], "178442": 67, "1785": [438, 448], "179": [447, 483, 490], "1791": 438, "179475": 243, "1797": 472, "1799": 438, "17a": [60, 478], "17e": 486, "17g": 50, "17th": 432, "18": [11, 87, 91, 141, 203, 382, 397, 403, 423, 429, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "180": [392, 410, 412, 417, 478, 484], "1800": [438, 466, 484, 491], "180000": [465, 466, 491], "1804": 478, "180458": 461, "18046952655570045": 304, "1805": 392, "1807": 439, "1808": [438, 478, 502], "181": [447, 452, 457], "1811": 456, "1812": 438, "1813": 478, "1818": 438, "181915": 563, "1821": 438, "1822": 438, "1825": 478, "18257": 457, "183": [447, 453, 541], "1830e": 453, "183139597": 86, "1833": 472, "1834": 450, "1835": 94, "1836": 439, "1836544903987521": 488, "1837": 439, "18385658": 463, "18386": 463, "18392464": 516, "184": [86, 94, 431, 435, 457, 461, 465, 471, 475, 485, 486], "18400002": 471, "1841": 387, "1845": 439, "1846": 439, "18465": 502, "1849": 439, "184989894219835": 476, "185": 485, "1854": [439, 478], "1855": 439, "1857": 439, "1859": 439, "186": [430, 463, 478], "1861": 439, "1862": 439, "186484131475074": 335, "1866": 483, "186643": 502, "187": [423, 430, 447, 463, 562], "1871": 439, "1877": 388, "188": [430, 448, 472, 478], "1883": 439, "1884": 439, "18842984749525210": 463, "1888": [439, 472], "188e": 451, "189": [453, 482], "1890": 439, "1891": 439, "18921591": 482, "1893": 439, "1893e": [449, 478], "1894": 439, "1895": 439, "1896e": 449, "1898": 439, "18988": 502, "1899070e": 482, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 104, 124, 203, 382, 394, 396, 398, 417, 425, 426, 428, 440, 447, 454, 457, 464, 467, 468, 473, 475, 476, 478, 479, 484, 486, 489, 490], "190": 478, "1902": [65, 268, 560], "1903": 439, "1904": 439, "1905": 462, "190563": 500, "1908": 439, "1909": 439, "190e": 453, "191": [141, 430], "1910": 179, "1912": 439, "1917": 502, "1918": 439, "1919": 439, "192": 142, "1920": 502, "1921": 439, "19214093": 97, "1922": 439, "1926": 439, "1926520e": 482, "1927": 439, "1928": 478, "1929": 439, "193": 457, "1930": 439, "1933": 439, "1934": 439, "19354": 463, "1936925": 97, "1937": [439, 478], "193e": 454, "194": [430, 447, 457, 562], "1943186": 97, "1947565": 97, "1949": 439, "195": [142, 238, 453], "1950rspsa": 52, "1951": 418, "1953830": 97, "1955810e": 482, "1958e": 481, "196": [67, 448, 486], "1960784313725492": 467, "1961": [135, 144], "1962": 418, "1963": 478, "19644": 492, "1965tralm": 21, "1966": 418, "1969": 418, "196991563774588": 278, "197": [67, 445, 463, 492], "1971": 389, "19736017641361556": 464, "1975": 418, "1976572e": 482, "1978": 478, "1979": [289, 295, 418, 575], "1979892": 463, "198": 469, "1980": 478, "1982": 37, "1983": 575, "1986": 390, "1986027": 502, "1987": 463, "19879005": 176, "1988": [136, 296, 418], "1988apj": [136, 296], "1989": 418, "199": [463, 486], "1990": [37, 418], "1990apj": [36, 37], "1991": 418, "1991mnra": 22, "19932878": 482, "1994": [418, 575], "1994a": [52, 53], "1995": [417, 418], "1995a": 287, "1995apj": 17, "1996": [27, 457, 476, 575], "1996mnra": 27, "1997": 500, "1997apj": 25, "1998": [87, 91, 418, 575], "1998apj": 28, "1999": [53, 197, 379, 580], "19991": 500, "199999809265137": 478, "19999999999999998": 456, "1999apj": 53, "19e": 483, "19th": 416, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 109, 110, 127, 151, 152, 161, 175, 192, 194, 330, 371, 384, 388, 389, 391, 392, 393, 394, 397, 398, 399, 410, 420, 422, 423, 424, 425, 429, 431, 434, 438, 440, 441, 444, 447, 448, 450, 451, 452, 453, 455, 457, 461, 468, 472, 475, 479, 481, 483, 485, 487, 488, 489, 491, 492, 500, 512, 514, 516, 529, 575], "1dc": [82, 83, 89, 102, 105, 109, 110, 115, 117, 118, 122, 141, 142, 148, 152, 153, 154, 163, 366, 371, 373, 386, 388, 394, 398, 419, 448, 456, 458, 461, 463, 469, 472, 473, 479, 480, 482, 486, 514], "1deg": 204, "1e": [19, 20, 26, 86, 100, 130, 131, 133, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 244, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 278, 289, 295, 337, 353, 355, 378, 389, 449, 451, 453, 455, 457, 459, 461, 463, 465, 466, 469, 470, 471, 472, 473, 478, 481, 487, 489, 492, 493, 510, 514, 518, 542, 543, 544, 546, 549, 550, 554, 555, 557, 558, 559, 560], "1e0": 508, "1e10": [51, 153], "1e12": [508, 518], "1e2": [451, 508, 510], "1e3": [492, 518], "1e30": 552, "1e4": [481, 492, 493], "1e40": 509, "1e5": [455, 492, 510, 528, 529], "1e51": 52, "1e6": [45, 492, 506, 561], "1e7": [127, 561], "1f": 454, "1fhl": [423, 436], "1fhl_name": 71, "1h": 163, "1k": [102, 109], "1kpc": 510, "1lhaaso": [57, 70, 444, 478], "1lhaaso_catalog": 57, "1rc1": 407, "1tev": [52, 53, 131, 466], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 101, 102, 104, 105, 109, 110, 114, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 140, 142, 145, 146, 150, 151, 152, 153, 155, 161, 163, 166, 173, 176, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 206, 211, 214, 215, 217, 218, 222, 226, 228, 230, 234, 236, 237, 241, 244, 251, 252, 253, 259, 260, 262, 263, 266, 267, 268, 273, 277, 278, 284, 286, 287, 288, 289, 294, 295, 301, 303, 323, 325, 363, 366, 371, 373, 375, 378, 379, 382, 383, 387, 389, 390, 392, 393, 394, 395, 398, 401, 402, 403, 404, 405, 407, 410, 412, 414, 417, 418, 419, 420, 421, 422, 429, 434, 435, 436, 437, 438, 439, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 500, 501, 502, 510, 513, 514, 516, 521, 522, 523, 525, 526, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 576, 577, 578, 579], "20": [16, 38, 83, 87, 89, 91, 102, 105, 109, 110, 154, 155, 160, 162, 164, 173, 193, 194, 196, 202, 205, 206, 211, 287, 303, 379, 382, 383, 384, 386, 391, 393, 396, 398, 403, 440, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 504, 523, 525, 526, 527, 533, 534, 535, 538, 539, 548, 551, 556, 561, 562, 577], "200": [52, 87, 91, 133, 204, 402, 430, 453, 454, 457, 463, 467, 469, 478, 484, 487, 502, 577], "2000": [88, 102, 105, 109, 110, 127, 231, 235, 237, 239, 254, 261, 418, 465, 466, 467, 483, 492, 502, 575], "2000000": 461, "20000000000000004": 456, "20009124": 482, "2000apj": 278, "2000e": 487, "2001": [94, 418, 457, 575], "20016447648031e": 475, "2002": [87, 91, 293, 476], "2003": [294, 476], "2003mnra": 294, "2004": [86, 94, 476, 494], "2004a": [39, 40], "2004aph": [83, 88], "2004mnra": 24, "2005": [65, 575], "200503": 448, "2005a": 478, "2006": [31, 33, 393, 457, 464, 471, 475], "200638": 502, "2006a": 278, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 118], "2007": [396, 575], "20072608": 482, "2008": [38, 86, 226, 275, 449, 492, 504, 542], "2008aj": 38, "2009": [133, 297, 419, 457, 575], "20097159": 482, "2009851": 482, "20099855": 482, "201": [52, 447, 484, 541], "2010": [127, 153, 226, 243, 301, 379, 445, 542, 575, 580], "2010a": [243, 278], "2010mnra": 153, "2011": [226, 449, 504, 542], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [91, 419, 575], "2013": [101, 137, 398, 404, 408, 417, 476], "20136": [82, 304, 494], "20137": [304, 494], "2013aph": 277, "2013apj": 60, "2014": [135, 144, 416, 504], "2015": [52, 86, 392, 395, 416, 492], "20151": 304, "2015apj": 61, "2015jheap": 278, "2016": [26, 392, 395, 416, 419, 476, 483, 491], "2016apj": 58, "2017": [226, 383, 385, 395, 398, 414, 416, 419, 463, 491, 542], "2017apj": [59, 62], "2017icrc": 491, "2018": [52, 383, 384, 385, 386, 387, 388, 389, 393, 395, 397, 398, 416, 443, 491, 494, 575], "2019": [385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 416, 438, 439, 464, 575], "202": 463, "2020": [203, 387, 398, 399, 400, 401, 402, 416, 464, 465, 472, 484, 564, 565, 566], "2021": [89, 226, 400, 402, 416, 443, 487, 491, 542], "2021345e": 482, "2022": [403, 404, 416, 419, 493], "2023": [390, 405, 406, 416, 419], "2023arxiv230517030c": 57, "2024": [104, 124, 415, 416, 454, 458, 459, 461, 487, 491, 500, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "2024e": 501, "2026": [390, 419], "2028": 419, "2030": [390, 419], "2031": 419, "20326": [303, 450], "20327": [303, 450], "2033": 419, "20339": 303, "2034": 419, "20343": 303, "20344": 303, "20345": 303, "20346": 303, "20349": 450, "2035": [123, 125, 419], "20350": 450, "2036": [123, 125], "2037": 419, "20372": 491, "2038": 419, "2039": 419, "20396": 450, "20397": 450, "204": 141, "2040469e": 482, "2041222e": 482, "20421": 450, "20422": 450, "2045": 390, "2046": 419, "2049": [419, 478, 502], "205": [430, 463, 484], "2050": 419, "20508075688775": 478, "2051": 419, "20517": 450, "20518": 450, "20519": 450, "205192": 478, "20521": 450, "2053315944536949e": 491, "205357": 478, "2054": 419, "20559": 502, "2058705e": 482, "206": 478, "2061": 478, "2062580e": 482, "2064": 419, "2064335": 97, "2065": 419, "2066": 419, "2068682e": 482, "2069": 419, "207": [447, 459, 463, 467, 486, 541], "2071": [390, 419], "2075": 406, "207520865": 471, "207521165": 475, "207521465": 471, "207521627": 475, "2076": 419, "2077": 419, "2079930e": 482, "207e": 457, "208": [60, 447, 459, 562], "2085": 419, "2089": [392, 421], "20898": 450, "20899": 450, "209": 463, "20900": 450, "2093": 419, "2095": 463, "2097": [419, 448, 456, 458, 461, 463, 469, 472, 491], "2097e": 453, "2098": 419, "20challeng": 491, "20data": 491, "20dataset": 491, "20deg": [465, 466], "20document": 491, "20e": 482, "20scienc": 491, "20th": 404, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 127, 148, 381, 382, 426, 432, 441, 447, 448, 449, 456, 457, 463, 471, 474, 475, 477, 478, 480, 482, 484, 495, 502, 529, 577], "210": [430, 478], "2103": 478, "2104": 420, "2104353e": 482, "2106": 420, "2108": 420, "211": [478, 479], "2111": 420, "2112": [420, 501], "21134890398": 480, "2114": 420, "2115": 420, "211770556360534": 473, "2118": 420, "2119": 420, "211e": 478, "212": [67, 430, 453, 478], "2121": 420, "2121164e": 482, "2123": 420, "21236e": 448, "2124": 420, "2126": 420, "2128": 420, "2129": [392, 421], "213": 455, "2130": 420, "2131": [420, 478], "2132": 420, "21325": 492, "2133": 420, "2136": [391, 422], "2139": 420, "214": [451, 457], "2140": 420, "2141": 420, "2142": 420, "2145": 420, "2146": 420, "21464892": 502, "214e": 453, "215": [67, 430, 444, 478], "21500000000003": 536, "2151": 420, "2152": 420, "21525804550772332": 464, "2153": [420, 478], "2154": [420, 478], "2155": [424, 449, 471, 472, 475, 476, 478, 488, 502, 542], "215686274509824": 467, "2157": 420, "2159e": 101, "215e": 478, "216": [238, 453, 484, 486, 571], "2160": 420, "2162670e": 482, "2163": 420, "2164425e": 482, "2166": 420, "2169": 420, "217": [453, 478], "2171": 420, "21731921e": 484, "21733761e": 484, "21735587e": 484, "21739234771": 472, "218": 61, "2190": 396, "2192": 421, "2197": 463, "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 102, 105, 109, 110, 133, 168, 173, 176, 191, 192, 201, 204, 382, 416, 429, 447, 453, 454, 455, 456, 457, 462, 470, 472, 475, 478, 479, 483, 484, 485, 493, 494, 500, 501, 502, 513, 520, 523, 525, 526, 529], "220": [478, 486, 577, 578], "2200": 421, "2201": [65, 267, 478, 502, 559], "2202e": 502, "2204": 421, "2206": 421, "220e": 478, "221": [392, 430, 447, 562], "22149": 457, "2217": 421, "2217412e": 482, "2218": [395, 422], "2219": [394, 422], "222": [58, 447, 478, 486, 562], "2221": 478, "22245374e": 125, "2227134679628": 472, "22271346796282": 472, "222713467962826": 472, "2229": [391, 421], "223": 486, "2230": 421, "2231": 478, "2235": 421, "2237": [421, 502], "2238": 421, "2239": 421, "2240": 421, "2243": 421, "2244": 421, "224436": 502, "225": [96, 303, 304, 402, 430, 447, 472, 474, 478], "2250": 421, "22500": 459, "2254": 421, "2255": [396, 488], "225575051666": 478, "2255890": [471, 475, 488], "2257": 421, "2259": 421, "226": [463, 492], "22608": 479, "2262": 421, "22635140877790516": 481, "2264": [390, 421], "22646133647326874": 481, "2264827111476982": 481, "22648881839710966": 481, "2265163003209506": 481, "22662622801631419": 481, "227": [447, 562], "2270": 395, "2272": 421, "2274": [397, 422, 448], "2276": 421, "2277": 421, "2278": 421, "2278975306934438": 481, "2279": [395, 422], "227e": 478, "228": [289, 295, 386, 392, 454, 459, 478, 483, 494], "2287": 421, "2289": 421, "229": [67, 478], "2290": 397, "2292": 422, "2294": 421, "2296": 421, "2297": 421, "22974080e": 492, "2298": 421, "22e": 483, "22nd": 416, "23": [77, 94, 176, 378, 382, 404, 416, 440, 450, 453, 455, 457, 462, 469, 472, 475, 478, 481, 484, 486, 488, 502, 503, 525], "230": [430, 447, 457, 541], "2300": 421, "2304": 396, "2305": 421, "230542e": 478, "2307": [64, 65], "2308": 422, "231": 430, "2310": 421, "2313": 422, "2314": 422, "232": 62, "2320": [422, 478, 479], "2321": 422, "2323": 422, "2326": 422, "2327": [478, 486], "23273": 492, "233": 454, "2330": 422, "23306": 457, "2332": 486, "2334": 422, "2335": 422, "2338": 422, "2339": [450, 478, 502], "234": [430, 473], "234132519034915": 484, "23413252": 484, "2342": 422, "2343": 422, "234359264373779": 483, "2343e": 486, "2344": 422, "2345": 422, "2346": 422, "2347": 422, "235": 430, "2350": 423, "2351": 422, "23523": [146, 173, 211, 414, 453, 454, 462, 470, 479, 481, 483, 494, 500, 501, 513, 516, 576], "23526": [146, 211, 453, 454, 462, 470, 479, 481, 483, 494, 500, 501, 576], "235294117647083": 467, "2354": 422, "23559": [453, 454, 470, 479, 483, 500, 501, 523, 525, 526, 576], "2356": 422, "2357": 486, "2358": 422, "2359": 422, "23592": [453, 454, 470, 479, 483, 500, 501, 523, 525, 526, 576], "236": [430, 478], "2360": 422, "2360e": 472, "236194": 538, "2362506e": 482, "23628": 492, "2365": 422, "2366": 422, "2367": 422, "2368": 422, "237": 448, "23734": 502, "2375": 422, "2377": 422, "2378": 422, "2379": 422, "238": 461, "2381": 422, "238298": 448, "2384": 448, "2385": 422, "239": [67, 463], "23905561": 482, "239439": 502, "239557417": 86, "2399": 478, "239e": 478, "23a": 61, "24": [25, 27, 52, 53, 86, 87, 91, 94, 381, 382, 395, 399, 433, 438, 448, 454, 457, 472, 475, 478, 479, 484, 486, 491, 492, 500, 525, 542, 549, 558, 559, 560], "240": [102, 105, 109, 110, 122, 472, 478, 479, 480, 514], "2400": 422, "2401": 422, "2404": 422, "2405": 423, "240e": 453, "241": [447, 478, 562], "2412": 422, "2414": 478, "2419": 448, "242": [447, 562], "2428255": 480, "242835": 67, "243": [453, 480], "2431": 478, "2432": 457, "2433": 423, "2435": 423, "243742672227972e": 475, "244": [67, 430, 447, 453, 562], "2440": 478, "2441": 423, "244140625": 486, "2443672e": 482, "2444": 423, "2446": [423, 486], "2448": 423, "2449": 423, "245": 430, "2450": [423, 486], "245152": 463, "2454": 423, "2454e": 472, "2455": 423, "24579": 480, "2459": 423, "246": [430, 480], "2461": 423, "24611324074": 478, "2463": [398, 423], "2464": 423, "2465055e": 482, "2468": 423, "24685677e": 482, "247": [67, 430], "2470": 423, "2471938975366008": 303, "2472": 423, "2475": 423, "2476": 423, "2477": 423, "2478": 423, "2479": [423, 501], "248": 430, "2481": 423, "248122": 478, "2483": 423, "2485": 500, "2486": 423, "249": [22, 430], "2490": 423, "2491": 423, "2492": 423, "2493": 423, "2496": 423, "24968": 448, "2497": 423, "2498": 423, "2499": 423, "249965667724609": 483, "249e": 142, "24e": [478, 486], "25": [33, 52, 87, 91, 101, 141, 142, 152, 163, 176, 289, 295, 382, 395, 402, 416, 437, 444, 448, 449, 453, 454, 456, 457, 463, 472, 473, 475, 478, 482, 484, 486, 502, 534, 535, 539], "250": [484, 575], "2501": 423, "250185": 483, "2502": [423, 463], "2505": 423, "2505121": 97, "2505703": 473, "2509": 478, "251": [457, 461], "2510": 423, "251185": 502, "2511884200000000": 502, "2511886431": 480, "25162e": 448, "2518": 478, "251932": 478, "252": [430, 447, 461, 463, 468, 478], "2520": 423, "2521": 423, "2523": 423, "252489313607": 472, "2525": 423, "2528": 423, "253": [456, 486], "2535": 423, "2536": [423, 486], "2537": 486, "2538": 423, "254": 430, "2540": 423, "2546": 423, "254901960784338": 467, "25496": 502, "255": 472, "2551": 423, "2552": [423, 478], "2553": 423, "2555": 399, "2557": 423, "255750516626": 478, "2558": 423, "2559": 423, "256": [67, 433], "2560538e": 482, "2561": 423, "2562": 423, "2563": 423, "2564": 423, "2567": 423, "2568710719919036": 464, "257": [141, 456], "2574": 423, "25743553e": 481, "25763": 457, "257642": 478, "257695": 557, "2579999": 491, "258": [456, 540], "2580": 423, "25823909e": 480, "258330": 553, "2585": 423, "2587": 423, "2589254117941673": 500, "259": [447, 456, 481, 490, 502], "2591e": [449, 478], "2594": 423, "2595": 423, "2595e": 461, "259e": [142, 457], "25b": 17, "25e": 486, "25t_": 53, "25th": 404, "26": [19, 87, 91, 142, 382, 416, 444, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 504, 533, 536, 540, 552, 570], "260": [433, 502], "2604": 423, "260847": 461, "2609": 486, "261": [433, 502], "2616": 423, "26173": 457, "2619": 423, "262": [433, 447, 457, 486, 502, 503], "2620": 423, "262554796103245": 500, "2625818241224747": 481, "2627": 423, "262728": 491, "26272868097919794": 488, "2628525e": 482, "263": [141, 142, 457, 486, 562], "2633e": 462, "2635": 423, "2635108e": 482, "2637": 423, "2639554729438709": 488, "264": [141, 433, 463], "2645": 423, "26475": 459, "2648150": 97, "2649e": 481, "265": [32, 142, 392, 448, 457, 463, 486, 502], "2651": 423, "2654": 423, "266": [141, 142, 392, 456, 457, 463, 465, 469, 484, 486, 502], "2660": 423, "266192": 448, "26665050077722524": 488, "2667": 424, "267": [67, 142, 456, 457, 463, 486, 491], "2672": 424, "2673": 424, "26739753": 97, "2674": 424, "267e": 453, "268": [404, 457, 463, 478, 486, 500, 502], "2681": 424, "2684": 424, "2685": 424, "268616": 461, "268663733018811": 488, "2687": 424, "26883694": 502, "26887783978974283": 488, "2689": 463, "269": [467, 502], "2692": 424, "269385": 478, "269627": 491, "2697": 424, "2699878e": 482, "26a": [39, 40, 50, 52, 53, 243, 278, 287, 478], "26e": [478, 486], "26th": 400, "27": [142, 384, 444, 447, 453, 457, 463, 474, 475, 477, 479, 490, 502, 532, 534, 537, 577], "270": [450, 457, 478, 486, 502], "2703": 424, "2705": 424, "27057337686547633": 488, "2707": 424, "2708": 243, "2709": 424, "27093776e": 482, "271": [453, 456, 457, 461, 502], "2711": 424, "2712": 424, "2713": 424, "2715": 424, "271777777777796": 450, "27177778": 94, "2718": 424, "2719": 424, "272": [456, 457, 478, 486], "2720": [399, 425], "27209": 502, "2723": 424, "2725": 424, "2726": 424, "2726e": 502, "2727": 424, "2727693": 491, "2727e": 453, "2728": 424, "2729": 424, "273": [83, 433, 451, 457, 502], "2730": 424, "2731": 424, "2733": 424, "2734": 125, "2735": 424, "2737": 424, "2738": 424, "2739": 424, "274": 484, "27409496735322464": 488, "2741": 424, "2742": 424, "2743": 424, "274509803921596": 467, "2746": 424, "2747": 424, "27473": 463, "275": [456, 478, 570], "2750": 424, "2751": 424, "2752": 424, "2753": 424, "2755": 424, "2756": 424, "2759": 425, "276": 433, "2761": 425, "2762": 425, "2764": 425, "2765": 425, "2767": 425, "2768": 425, "277": 456, "2771": 425, "2772": 425, "27727": 486, "2775": 425, "277522283785622": 464, "2776": 425, "2777": 425, "2777074437073429": 488, "2778": 425, "2779": 425, "278": [27, 433, 447, 456, 469, 478, 486, 541], "2781": 425, "2782": 425, "2783": 425, "2784": 425, "2785": 425, "2785e": 453, "2787": 425, "2788": 425, "2789": 425, "278e": 457, "279": 433, "2790": 425, "2791": 425, "2792": 425, "2793": 425, "2794": 425, "2796": 425, "2797": 425, "2798": 425, "2799": 425, "27e": 478, "27t20": 89, "28": [21, 24, 67, 94, 141, 142, 387, 416, 451, 453, 455, 456, 457, 463, 465, 469, 475, 478, 483, 484, 486, 491, 502, 538, 547], "280": [67, 433, 453, 456, 484], "2800": [465, 486, 502], "2801": 425, "2802": 425, "2803": 425, "2804": 425, "2805": 425, "2808": 425, "2809": 425, "281": [456, 478], "2810": 425, "2811": 425, "28118133544922": 478, "2812": 425, "28120079": 478, "2815": 425, "2816": [425, 486], "2817": 425, "2818": 425, "2818047723094509": 488, "28183829312": 480, "282": [141, 142], "2820": 425, "2822": [425, 486], "2823": 425, "2825456e": 482, "2827": 425, "28275990e": 480, "2827988e": 482, "2828": 425, "2829": 425, "282951078740491e": 475, "282e": 478, "283": [433, 456], "2832": 425, "283218": 448, "283487": 478, "2837": 425, "28382603": 482, "2838398": 491, "28385358839966657": 488, "2839": 425, "284": [456, 478, 580], "2841": 425, "2842": 425, "28429": 463, "2845": 425, "2846": [425, 463], "285": [433, 456], "2852": 486, "28551": 142, "2859229": 480, "285f": [83, 88], "286": [433, 456, 480], "2861432787940619": 488, "286e": [457, 478], "287": [52, 53], "2872": 426, "28720322": 97, "2874": [426, 502], "28755283551095173": 488, "2878662980210884": 304, "288": 125, "2880470e": 482, "2885": 426, "288e": 451, "289": [433, 456], "28905": 492, "2891": 426, "28958": 457, "2896": 426, "2897": 426, "28e": [102, 451, 461, 463, 479, 492], "29": [67, 142, 273, 393, 403, 416, 444, 448, 451, 454, 456, 457, 463, 469, 471, 472, 475, 478, 484, 486, 487, 491, 502, 545, 557, 560], "290": [434, 456, 464, 472, 480], "2900": 486, "290098": 480, "2903": [426, 486], "2903e": 455, "2907": 426, "291": 433, "2912": 426, "29158": 142, "29170324": 479, "291e": 502, "292": 447, "2922477": 97, "2923272203680937e": 475, "2924": 426, "2927": 426, "2929": 426, "293": [456, 472], "2930": 478, "2931": 426, "2932": 426, "29355238360800506": 488, "2938": 426, "2939": 426, "2942": 400, "2943": 426, "2944": [401, 426], "2945": 426, "2947": 426, "2948": 426, "295": 433, "2950": 426, "2951": 426, "2953": 463, "29553683e": 480, "2956": 426, "29585273e": 492, "2959": 486, "295e": 478, "296": 433, "2965": 426, "2966": 426, "2967": 426, "297": 448, "2971e": 478, "2974": 426, "2976": 426, "2978e": 449, "298": [456, 463, 472, 478], "2981": 426, "2984": 426, "29882214027996945": 488, "299": [433, 456, 478], "2990": 426, "2991": 426, "2992": 426, "2993": 426, "2995484265169": 476, "2996": 502, "2998": 426, "2999": [426, 478], "299940468335294": 463, "299995937905366": 463, "299e": 478, "299t": 53, "29t20": [471, 475], "29t21": 475, "29t22": 475, "29t23": 475, "29th": 416, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 141, 142, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 173, 183, 184, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 211, 233, 384, 389, 394, 397, 398, 399, 410, 418, 424, 437, 438, 439, 447, 457, 459, 460, 463, 484, 485, 502, 512, 515, 526, 527, 528, 540], "2degx2deg": 465, "2e": [198, 448, 450, 451, 465, 466, 475, 478, 481, 486], "2e3": [198, 484], "2e6": 492, "2f": [367, 448, 454, 488, 501, 578], "2fhl": [58, 71, 423, 435, 436, 478, 502, 511], "2hwc": [59, 72, 423, 429, 437, 478, 511], "2k": [102, 109], "2m": [243, 278], "2nd": [60, 403], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 445, 478], "2pc_catalog_v04": 60, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 77, 80, 83, 85, 86, 87, 91, 94, 96, 102, 105, 109, 110, 111, 116, 118, 125, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 176, 179, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 215, 217, 226, 233, 236, 244, 267, 273, 275, 277, 278, 286, 287, 288, 293, 303, 304, 325, 334, 355, 366, 371, 373, 375, 378, 379, 381, 382, 384, 389, 390, 392, 393, 394, 395, 397, 402, 403, 404, 409, 414, 417, 418, 419, 421, 422, 427, 429, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 503, 504, 506, 509, 510, 513, 514, 518, 520, 522, 523, 525, 526, 529, 533, 535, 536, 538, 539, 542, 547, 548, 550, 551, 552, 553, 555, 556, 559, 561, 565, 566, 570, 574, 575, 577, 578], "30": [24, 52, 67, 83, 96, 102, 112, 113, 141, 153, 192, 303, 304, 385, 386, 391, 398, 405, 416, 418, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 514, 520, 525, 526, 533, 534, 542, 548, 551, 552, 553, 556, 561], "300": [74, 87, 91, 287, 456, 458, 462, 465, 466, 469, 472, 478, 492], "3000": [388, 478, 528], "30000": 478, "300000": 454, "3000000": 561, "30000000": 561, "3000020211954284": 463, "3000e": 449, "3001": 426, "30015e": 448, "3002": 426, "3003": 486, "3004625872247901": 462, "3005": 426, "3006": 502, "3006942": 97, "3007": 426, "301": [433, 456], "3011061699260256": 488, "3012": 426, "3013": 478, "301668796295": 478, "302": [456, 469], "3020791585772495": 303, "30287": 457, "3028e": 486, "302e": 478, "303": [447, 453, 456, 478, 541], "3030": 426, "30316121502588": 472, "3032": 426, "3034": 478, "3035": 426, "3037": 426, "3037632e": 482, "3038": [426, 502], "3039": 426, "304": [449, 471, 472, 475, 476, 478, 488, 502, 542], "3041": 426, "3042": 426, "3043": 486, "3045": 426, "3046875": [479, 486], "3049664466089965": 304, "304_steadi": 449, "305": [67, 456], "3051": 426, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 426, "3053": 426, "30535345877453707": 488, "3054": 426, "3054538213469855": 464, "30561": 142, "3058": 426, "3058422e": 482, "305e": 478, "306": [433, 577], "3060": 426, "306196370000000": 502, "3063": 426, "3069": 426, "306e": 478, "307": 456, "3070": 426, "3071": 478, "3072": 426, "3074": 426, "3075": 402, "3076": 426, "307e": 478, "308": [456, 463, 472, 536], "3080": 426, "3081": 426, "3083": 426, "3085": 426, "3086": 426, "3088": 426, "3089": 426, "3091": 426, "3092": 426, "30997": 502, "30a": 278, "30d00m00": 405, "30e": [449, 482, 486], "30t00": 475, "30t01": 475, "30t02": 475, "30th": 390, "31": [141, 142, 387, 388, 401, 402, 414, 441, 449, 451, 453, 454, 456, 457, 461, 464, 467, 471, 472, 475, 478, 479, 483, 484, 486, 489, 493, 500, 502, 552, 554], "3100": 426, "3106": 426, "31067517": 478, "3107": [478, 502], "311": [536, 578], "3110": 427, "3111": 427, "3112": 427, "3113": 427, "31139074e": 481, "3114": 427, "311489174710791e": 502, "3116": 427, "3117988e": 482, "31186857659616535": 488, "3119611261122878": 488, "312": [433, 447, 562], "3122": 428, "3123": 428, "3124": 428, "3125": 428, "3126": 428, "3127": 428, "3129": 428, "312989": 549, "313": [456, 462], "3130": 428, "3131": [429, 486], "3135914081482271": 488, "3136": 429, "313714614138": 479, "3138": 429, "313911": 532, "314": [438, 447, 541], "3140": 429, "3141": 429, "3145": 429, "3148": 429, "315": 478, "3152": 429, "3153": 429, "3155": 429, "315767542862533": 500, "3158": 429, "316": [456, 492, 493], "3162": 429, "316227": 478, "316227766016838": 483, "3165": 429, "3168": 429, "3169": 429, "317": [433, 447, 456, 486, 490], "3173": 429, "3178": 429, "317a": 278, "317e": [449, 478], "318": 433, "3180": 429, "3182": 429, "31834": 142, "3185": 429, "3189697265625": 453, "31898": 142, "319": [434, 492], "3191": 429, "3195": 502, "3197": 429, "319725": 491, "3199": 429, "32": [83, 141, 192, 447, 453, 457, 459, 461, 468, 475, 483, 484, 502, 550, 553, 559], "320": [102, 105, 109, 110, 122, 478, 479, 480, 486, 514], "3202": 429, "3207": 429, "3208": 429, "32095": 502, "321": [447, 467, 562], "3211": 429, "3216": 429, "3217": 429, "3219": 429, "3219e": 455, "322": 456, "3222": 429, "3228": 429, "3229": 463, "323": 456, "3230": 429, "3232943": 345, "3233356": 345, "32377509405904137": 96, "323779": 293, "3237948931463171": 488, "3238": 429, "324": [447, 562], "3241": 429, "3243": 429, "3246": 429, "32465247": 487, "325": [447, 452], "3254": 429, "3257": 429, "3258": 429, "325e": 454, "326": [433, 447, 562], "3262": 429, "32684": 502, "32684833": 491, "327": 463, "3272": 429, "3276": 429, "3277": 429, "3278": 429, "3279": 429, "3279955e": 482, "328": 463, "3281": 429, "3283": 429, "3284": 429, "32843": 502, "32847": 448, "3285": 429, "329": [96, 303, 304, 447, 471, 475, 478, 488, 495, 516, 562], "3293": 429, "3299": 478, "329e": [453, 478], "33": [475, 476, 477, 481, 484, 502, 516, 544, 558], "330": [434, 447, 456, 486, 562], "3301": 429, "33013e": 448, "3302": 429, "3302565e": 482, "3303": 429, "330376": 67, "3304": 429, "3305": 429, "330505": 491, "33055e": 448, "3306": 429, "3307": 429, "3308": 429, "3309": 429, "3310": 429, "3314": 429, "33164865722698683": 488, "3319": 429, "3319831545301117": 303, "332": [67, 434, 492], "3320": 429, "3323": [429, 479], "332525": 478, "3328": 429, "332e": [453, 457, 463], "332f": [30, 31, 32, 33], "333": [136, 296], "3330487": 97, "3331": 502, "333119": 554, "3331761": 97, "3333": 429, "33333333": 378, "3333333333333344": 467, "3335": 429, "33368e": 448, "3337": 429, "3338": 429, "334": [125, 492], "3342": 429, "3343": 429, "3346": 429, "3347": 429, "33484": 448, "3349": 429, "3349654391": 480, "334e": 478, "335": 434, "3353": 429, "3357": 429, "3358": 429, "335e": 451, "336": [467, 478], "3363": 429, "3364130e": 482, "336444e": 478, "336606": 448, "3368855e": 482, "3369": 429, "337": [434, 456], "3374": 429, "3377": 429, "33787": [96, 488], "33788": [96, 142, 488], "33789": [96, 488], "3379": 429, "33790": 488, "33791": 488, "33792": 488, "33793": 488, "33794": 488, "33795": 488, "33796": 488, "33797": 488, "33798": 488, "33799": 488, "338": [434, 478], "33800": 488, "33800122": 97, "33801": 488, "3380311e": 482, "3381": 429, "339": [434, 453, 467], "3390": 429, "3392": 429, "3393": 429, "3395": 429, "3397": 429, "339835555384604": 488, "3398360": 482, "33983991887701287": 96, "3399": 429, "33e": [459, 473], "34": [52, 53, 67, 417, 447, 448, 463, 471, 474, 475, 479, 484, 486, 502, 549, 551, 556], "34005": 448, "340180": 104, "3402": 429, "3403": 429, "340391": 502, "3404": 429, "34047": 448, "3406": 429, "3409": [94, 429], "341": [447, 448, 495], "3413": 429, "3416": 429, "3418": 429, "342": 434, "3420": 429, "3423": 429, "3426": 429, "3428": 429, "3434": 429, "3438": 429, "3439": 429, "343e": 451, "344": 478, "344115": 544, "344238": 502, "3443842": 491, "3445": 429, "3446": 429, "344671959045": 472, "3447": 429, "3449": 429, "344e": 67, "345": [294, 448, 486], "3453": 429, "3454": 429, "345692": 502, "3458": 429, "346": 486, "34613054105945": 464, "346488e": 478, "3466": 429, "3468": 429, "347": [434, 450], "3471": 429, "3474": 429, "348": [36, 37, 434, 453], "3480": 429, "3481e": 461, "3488": 429, "348e": [67, 478], "3491": [429, 457], "3493": 141, "34932": 142, "349530550405035": 481, "349530725254468": 481, "34953073943366": 481, "34953075819191": 481, "34953077463306": 481, "34953079334042": 481, "349530807529028": 481, "349535814693404": 481, "349536723056637": 481, "349537158300407": 481, "349537804239922": 481, "34953807814367": 481, "34953910575007": 481, "34953932636892": 481, "349542158419318": 481, "349559366703698": 481, "349655": 480, "34971209244579": 481, "349724940685938": 481, "3499075e": 482, "349e": 457, "34e": [478, 486], "35": [67, 395, 402, 414, 453, 471, 475, 478, 481, 489, 491, 543, 555], "350": [467, 473, 480], "350105": 463, "3502": 478, "35030398537787": 481, "3503706026275275": 488, "3504": 502, "35052105086856": 481, "350556388466543": 481, "350d": 467, "351": [434, 478, 502], "3514e": 501, "3515": 429, "352": [434, 478], "3521": 450, "3523": 429, "3529": 429, "3529411764705888": 467, "353": [24, 434, 502], "3535": 431, "353592500058824e": 500, "3536": 448, "353e": 463, "354": 467, "3544": 429, "35569283": 482, "355804": 502, "3559": 429, "356": 502, "3561": 429, "3568": 429, "357": [478, 502], "35722435185": 478, "3576e": 450, "358": [463, 478, 502], "3583": 463, "3584": 429, "359": [434, 463, 478, 502], "3590188e": 482, "3592": 429, "3599": 465, "359e": 502, "36": [67, 86, 148, 323, 450, 456, 463, 465, 478, 479, 482, 502, 546, 548, 561], "360": [392, 484, 504], "3600": [456, 465, 466, 484], "36014": 461, "36073833513766157": 488, "361": [67, 434], "3619e": 501, "361e": 472, "36228879": 502, "36273": 502, "363": [447, 474, 475], "363472509034498": 488, "3639946": 473, "364": 434, "3659253e": 482, "366": [480, 501], "366486": 480, "36669663417038234": 488, "3669": 431, "367": [434, 467, 486], "3674884": 478, "368": 118, "36834038301420274": 488, "368346217294295": 96, "3684": 431, "3689322e": 482, "369": 434, "3690": 502, "3699": 431, "36e": [477, 478], "37": [448, 449, 454, 456, 459, 480, 481, 492, 565, 570, 578], "370": [467, 478, 486], "37058": 142, "371": 434, "371029": 487, "3710784e": 482, "3712": 431, "3713": 431, "3715810e": 482, "3718745": 97, "372": [35, 125, 502], "3720": 431, "3722": 431, "3725490196078436": 467, "3728": 431, "373": 463, "3733": 431, "373892759762174e": 475, "3739292e": 482, "374": [465, 467], "3740": 431, "37455141": 502, "3748": 431, "375": [434, 484], "3750": 463, "37506": 502, "37517": 457, "3752": 431, "3759377929871826": 488, "376": 67, "3760": 431, "3761": 431, "376489": 568, "3765": 448, "3777": 431, "37773": 457, "3779": 502, "3783": 431, "3784": 141, "378698": 459, "378743": 564, "379": [434, 453], "3792": 486, "3796": 431, "3797": 431, "38": [22, 67, 448, 450, 460, 478, 484, 486, 502, 561, 566, 567, 568, 569, 571], "3802": 431, "3804": 431, "3806": 431, "381": 486, "3810": 431, "3812": [478, 502], "3812120e": 482, "3812160e": 482, "38143003": 97, "3817": 431, "38258165e": 480, "3829": 502, "382e": 453, "383": [67, 434, 478, 484], "3833": 431, "3837": 431, "383e": 67, "384": 480, "3841385": 480, "3842": 431, "3846": 431, "3848912826152664e": 502, "3856": 431, "385e": 142, "3860": 431, "3862": 440, "387": [434, 502], "3872": 478, "3873": 431, "3874": 431, "3876": 431, "387834": 502, "388": 540, "388405": 502, "3885947175689592": 488, "3886270e": 482, "3887": 431, "388935": 124, "389": 383, "3892": 431, "3895": 431, "3898": 431, "389e": 502, "39": [17, 18, 21, 22, 24, 25, 27, 59, 142, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 540, 561, 563, 564], "390": 429, "3904": 431, "39042": 86, "3905": 431, "3906": 431, "391": 478, "3915": 431, "3918": 431, "392": [434, 454], "39200283e": 475, "392156862745098": 467, "39224": 457, "3925": 440, "393": [207, 208], "3933": 431, "3935": 450, "3936": 431, "394": 434, "3941": 431, "3945": [450, 478], "3947637541758": 472, "394765638937866": 500, "3948": 432, "395": 434, "3950": [403, 440], "395004": 502, "3956": 440, "3959": 432, "396": 434, "3962942e": 482, "3966": 432, "397": 453, "3970": 404, "397035933646679e": 475, "39728": 502, "3975": 432, "3979": [432, 576], "397918129147546": [414, 576], "39791813": [414, 576], "398": [434, 459, 461], "3981": 502, "39810717055": 480, "3981075200000000": 502, "3983": 432, "3986": 432, "3987": 432, "3988": 432, "398e": 478, "3990": 432, "39e": 478, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 148, 154, 161, 162, 164, 173, 281, 283, 384, 387, 388, 389, 393, 394, 397, 398, 399, 410, 418, 419, 420, 422, 423, 424, 425, 436, 437, 438, 447, 448, 449, 451, 453, 454, 457, 458, 459, 463, 464, 465, 466, 467, 468, 471, 472, 475, 479, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 500, 501, 512, 514, 515, 516, 523, 528, 573, 575], "3d33m15": 67, "3dataset": 462, "3e": [20, 125, 131, 463, 466, 469, 470, 473, 475, 478, 486], "3e4": 492, "3e5": 492, "3e6": 561, "3e7": 561, "3f": [125, 464, 577, 578], "3fgl": [61, 67, 74, 228, 266, 401, 430, 433, 435, 436, 437, 447, 451, 478, 487, 502, 511, 530, 562], "3fgl_name": 71, "3fhl": [62, 75, 86, 127, 129, 133, 284, 398, 436, 437, 451, 457, 465, 467, 478, 484, 485, 486, 487, 492, 502, 511, 513], "3fhl_data_fermi": 462, "3fhl_dataset": [284, 462, 485], "3fhl_model": [284, 462, 486], "3g": [477, 478], "3hwc": [63, 76, 429, 440, 478, 511], "3lr94h": 475, "3ml": [396, 492], "3nk5adxo": 475, "3pc": [64, 69, 77, 445, 478], "3pc_catalog": 64, "3r9a6quc": 475, "3rc1": [11, 16, 104, 124, 410, 412, 415, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "3rd": 64, "3rd_psr_catalog": 64, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 101, 102, 105, 109, 110, 115, 117, 128, 133, 142, 145, 150, 153, 161, 173, 176, 192, 193, 194, 195, 196, 197, 202, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 238, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 277, 284, 285, 323, 365, 378, 379, 381, 382, 390, 392, 395, 398, 402, 403, 414, 417, 426, 428, 429, 430, 433, 435, 436, 439, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 500, 501, 502, 504, 509, 510, 511, 525, 528, 529, 533, 534, 537, 542, 547, 560, 561, 569, 575, 576, 577, 578, 579], "40": [59, 109, 110, 385, 430, 450, 451, 453, 454, 456, 461, 463, 471, 472, 475, 484, 487, 491, 502, 525, 548, 551, 556, 561, 577], "400": [133, 447, 457, 458, 463, 467, 478, 484, 495, 502, 570], "4000": 440, "40000": [173, 501], "400056": 448, "40050506591797": 478, "40051035": 478, "40071076": 97, "400x200": 467, "401": 454, "40112": 502, "4013": 440, "4014": 440, "4015": 440, "4017": 440, "4018": 440, "401e": 457, "402": 153, "4022": 440, "40235": 461, "4024": 440, "4025": 440, "4026": 440, "402712": 478, "403": [434, 463, 486], "4035": 502, "4037": 440, "404": 301, "4043": 440, "4044": 440, "40481": 461, "405": [386, 447, 562], "4051": 440, "40525": 461, "4054": 440, "4058": 440, "406": [502, 572], "40611": 502, "4067": 440, "40671": 459, "40672": 459, "407": 478, "4071": 440, "4073": 440, "4073799600000000": 502, "4075": 440, "4076": 440, "4079": 440, "408": [453, 484], "4080": 440, "4080942e": 482, "40822469e": 487, "4083": 440, "4084": 440, "4088": 440, "4089": 440, "40919": 457, "4093": 440, "409416": 502, "4095": 440, "4098": 440, "40a": 59, "40deg": 491, "41": [67, 86, 94, 392, 478, 479, 484, 492, 500, 502], "410": 467, "41009347393684": 479, "4103": 440, "4105": 440, "4106": 440, "4107": 440, "4108": 440, "411": 502, "4110e": 478, "4112": [125, 440], "4113": 440, "4115": 440, "41176470588239": 467, "4119": 440, "411e": 451, "4120719e": 482, "412165": 463, "412643": 500, "412779907405": 478, "413": 463, "414": 434, "4140541880588": 464, "41415047": 97, "4142135623730951": 118, "41449": 457, "414e": 457, "415": [434, 552], "4151e": 461, "4155": [478, 502], "41584196": 476, "416": [67, 461, 478, 483], "4161e": 461, "417": 478, "418007850646973": 414, "41803": 459, "41866": 492, "419": 486, "4191": 443, "41924": 141, "4198250e": 482, "41995": 457, "419e": 478, "41e19": [19, 20], "42": [25, 27, 94, 153, 345, 392, 456, 463, 478, 482, 483, 484, 488, 491, 529, 532], "42050348": 479, "4208": 443, "4209": [443, 457], "421": [434, 467, 502, 575], "4210": 443, "4212": 443, "4212028e": 482, "4213": 443, "4215": 443, "4216": 443, "4217": 444, "4219": 443, "422": [39, 40], "4220": 461, "4221": 441, "4225498e": 482, "4225631e": 482, "42267": 463, "4226731": 463, "423": 453, "4231": [441, 443], "42361": 457, "42399798": 463, "423e": 125, "42400": 463, "4242": 443, "4243": 443, "4245": 443, "42463": 492, "424650": 479, "42474": 502, "425": 502, "4252": 443, "426": 478, "4264": 443, "4268": 441, "427": 454, "4275": [441, 443], "4277": 443, "4280": 443, "4281": 478, "4282": 443, "4288": 443, "429": 453, "4294": 443, "42e": [481, 486], "43": [277, 345, 392, 454, 463, 472, 479, 484, 502, 529], "430": [447, 478, 490], "43000": [52, 53], "4301": [441, 443], "4303606e": 482, "4305": 443, "431": [137, 386, 467, 479], "431023787974766e": 500, "43113": 448, "43137254901962": 467, "4313847458879893": 488, "4319": 502, "43197": 457, "4324": [441, 443], "4326": 443, "432878": 478, "432e": 478, "433": 457, "4336": [441, 443], "43366": 570, "4338e": 449, "434": 478, "43416595": 473, "4344": 441, "4346": 443, "435": 434, "4350": 443, "4351637481047363": 488, "4352": 443, "435386": 459, "4359": [441, 443], "435e": 453, "435l": 478, "436": 434, "4360750e": 482, "4369": 443, "437": [478, 486], "4370": 443, "4373240195300975": 488, "438": 486, "4380": [442, 443], "4381": [406, 444], "4382": 442, "438798": 500, "439": 453, "4393": [442, 443], "4394": 442, "4395": 443, "4397": [442, 443], "439e": 478, "43e": 486, "44": [21, 50, 86, 345, 449, 456, 471, 472, 473, 484], "4402": 443, "44055555555555603": 94, "4406": 443, "4408": 444, "4409": 443, "4412": [442, 443], "4417": 443, "4418": 443, "4420073e": 482, "4420222e": 482, "4428": 443, "4428634e": 482, "443": 453, "4430": 443, "44319": 479, "4432": 444, "4433": 445, "4435": [442, 443], "444": 468, "4444": 443, "444e": 462, "445": 457, "4450": 502, "44528685": 502, "4453": [442, 443], "44573": 94, "4458": 443, "4459": 443, "446": [486, 578], "4466": [443, 461], "4466832000000000": 502, "4466835921": 480, "447": 434, "44742": 502, "44749e": 448, "44755": 459, "447552": 448, "447e": [463, 478], "447l": 17, "448": [447, 467, 562], "4480056e": 482, "44802852": 502, "4481": 478, "4485": 444, "4486": [442, 443], "448e": 142, "4491": [405, 444], "4495": 443, "4497": 479, "4498": 141, "44e": 414, "45": [51, 54, 456, 462, 473, 475, 479, 484, 485, 487, 504, 529, 534, 535], "450": 486, "4500": [442, 443], "4501": 444, "4504": 443, "4506": 443, "4508": 443, "4509803921569": 467, "4510": [443, 461, 502], "4515": 477, "4517490659800822": 470, "4520": 442, "4521": 443, "4524": 442, "453": [449, 486], "454": [447, 453, 474], "4540": 444, "4545": 443, "4546": 444, "455": [434, 451], "45515263080596924": 450, "45517415e": 480, "455870": 463, "455e": 67, "456": [434, 447, 460], "4561": 444, "45646095": 473, "4567": 444, "457": [278, 434, 486], "457251": 502, "4574": [442, 444], "4575": 94, "4578": 442, "4579e": 448, "458": [467, 478], "4584": 444, "45856": 502, "4586649826004114": 303, "459": [434, 479, 486], "4593": 442, "45935": 502, "4595": 444, "4599": 444, "45\u00ba": 493, "46": [53, 67, 109, 110, 392, 478, 484], "460249999": 86, "4608": 444, "461": [434, 475], "4615": 444, "46186956763267517": 450, "4619": 442, "462": [434, 453], "4620": [406, 444], "4620e": 478, "46225": 457, "4628": 444, "463": 502, "4631": 442, "4635": 444, "4638": 444, "4638e": 458, "464": 469, "4642048e": 482, "4647544e": 482, "465": [453, 478, 486], "4653": 442, "4657": [442, 444], "465784": 502, "466": [447, 471, 474], "4660": 444, "4664": 444, "4668": 444, "4669": 444, "467": 503, "4671": 444, "46711": 457, "4675e": 471, "4677": [442, 444], "468": [473, 478], "4681": 442, "4684": 450, "468805426856864e": 52, "468e": 67, "4697": 444, "46e": [83, 458, 463], "47": [67, 472, 475, 478, 484, 502], "4703": 444, "470588235294144": 467, "4711": 502, "4712": 457, "4714": 444, "4721": 442, "4726": 444, "4728": 442, "4729": 444, "473": [434, 453], "4738": 444, "474": 434, "4740": 444, "4741": 444, "474e": 478, "475": [434, 486], "4750": 444, "4753": [442, 444], "475468": 448, "4755": 442, "4759": 444, "476": [447, 562], "4770": 444, "4772": 442, "47797": 457, "477e": 478, "478": 434, "47802": 488, "47803": 488, "47804": 488, "47827": 488, "47828": 488, "47829": [82, 488, 494], "4783": 444, "478436": 546, "4785": 444, "47e": 478, "48": [33, 173, 417, 461, 462, 484, 486, 492], "480": [450, 478, 486], "4802": 444, "4805": 444, "480554966154": 461, "48068": 457, "4808": 444, "480e": 478, "481": [383, 434], "4810": 444, "4814": [444, 502], "4817": 444, "48180882997916e": 500, "4819444e": 482, "482": 448, "48215685": 97, "4822": 444, "48248": 478, "4825": [478, 502], "4828": 444, "4829": 444, "4834": 444, "4834488e": 482, "4835": 444, "4837": 444, "484": 434, "48442": 273, "4845": 444, "4847": 444, "4848653": 478, "4849": [444, 478, 502], "484e": 142, "485": 434, "4850": 444, "4851": 444, "4854": 444, "485p": [36, 37], "486": 452, "487": [434, 500], "4875723e": 482, "4876": 442, "4879": 444, "4881": [252, 253], "4886": 444, "48871": 448, "488z": 27, "489e": 478, "48e": [478, 486, 501], "49": [53, 457, 461, 472, 478, 486, 492, 500, 528], "490": 25, "4902": 444, "4904": 444, "4904078e": 482, "49078e": 448, "4913": 442, "49152": 492, "4917": 444, "493": 25, "493043594026": 461, "4933657e": 482, "4936": [442, 444], "4937": [442, 444], "4940": 444, "49417615": 86, "4942": 444, "494e": 453, "4958277": 97, "496021": 491, "4963": 502, "4966": 502, "4968236e": 482, "4970": 444, "4971": 444, "49716789e": 480, "4971704e": 482, "4973": 444, "4975": 444, "4978": 444, "498": 502, "4983": 445, "498784": 478, "4989": 444, "498e": [478, 502], "499": [67, 478], "49919925926": [238, 571], "4992": 444, "4994": 444, "4996": 445, "49972277488662115": 488, "4999833830074": 463, "4d": 397, "4e": [473, 478, 486, 561], "4f": [576, 577, 578], "4fgl": [65, 78, 267, 268, 401, 421, 423, 429, 431, 444, 447, 449, 462, 478, 485, 487, 511, 530, 562], "4th": [390, 416], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 102, 103, 105, 108, 109, 110, 118, 122, 125, 126, 128, 130, 132, 141, 142, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 173, 176, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 218, 219, 222, 225, 226, 228, 229, 230, 233, 234, 236, 238, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 273, 275, 278, 301, 305, 337, 368, 369, 373, 375, 378, 379, 382, 383, 385, 389, 390, 392, 393, 394, 395, 397, 401, 402, 403, 409, 414, 417, 419, 421, 422, 429, 431, 433, 434, 436, 437, 438, 442, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 504, 509, 510, 513, 520, 523, 525, 526, 527, 528, 529, 533, 534, 535, 536, 538, 542, 543, 548, 550, 551, 552, 556, 557, 561, 564, 565, 566, 567, 569, 575, 577, 578], "50": [87, 91, 94, 111, 116, 345, 385, 405, 448, 454, 455, 459, 461, 469, 471, 472, 473, 478, 479, 482, 484, 486, 487, 488, 491, 492, 494, 500, 501, 502, 525, 528, 536, 578], "500": [193, 194, 196, 202, 205, 206, 457, 463, 465, 466, 484, 491, 492, 502, 528, 533], "5000": [19, 20, 87, 91, 504, 528], "5000056568267741": 463, "5000e": 456, "50022222": 94, "500249": 478, "5004": 463, "5015": 444, "502": 434, "5029747": 455, "503": 434, "5030": 502, "504": 28, "5040": 444, "5044": 444, "5049": 502, "505": [67, 478, 479], "505523195905": 461, "5057": 445, "5058": 445, "506": 434, "5066": 478, "507": 434, "5074834": 97, "5078068": 97, "50807568877": 478, "509587": 480, "509632": 480, "509e": 478, "50e": [456, 486], "51": [52, 53, 67, 142, 459, 461, 467, 500], "510": [434, 480], "5106": 502, "51095676": 473, "511": [67, 434, 447, 464, 468], "5115": 445, "51179": [379, 580], "5118": 445, "512": 453, "5125": 445, "5126": 67, "5129": 445, "513": [414, 484], "51312": 463, "5135": 445, "5144": [94, 448], "5145": 445, "514854": 491, "51544": [456, 465, 466, 469], "5156": 445, "5160": 445, "5161": 445, "5162628e": 482, "5163273": 491, "5169": 445, "5176": 445, "518": [434, 486], "5180": 445, "5180793554213": 472, "5184": 445, "5186": 445, "5188": 445, "5188338e": 482, "51910": 94, "5192420e": 482, "5194769e": 482, "51948705e": 487, "51958055e": 480, "52": [53, 125, 173, 448, 450, 457, 459, 461, 472, 478, 491, 494, 502], "5200": 445, "5205": [445, 492], "5206": 445, "5207": 445, "52074074074": 83, "521": 435, "5222": 445, "523": [435, 484], "5230376e": 482, "52318414": 97, "523681640625": 453, "5237647004325865": 488, "52389101852": 478, "523a": [243, 278], "523b": 22, "523e": 454, "524": [435, 478, 486], "5248": 502, "524807800000000": 502, "5254": 445, "5255": 445, "5258": 445, "52587": 457, "526": 435, "52607": 502, "5269": 445, "527": [435, 492], "5270": 445, "5271": 445, "5275": 445, "5279": 445, "527e": 454, "528": [447, 453, 486, 497], "5280": 445, "52826166": 478, "5283": [478, 502], "52839183495354": 472, "5285": 445, "5289": 445, "529": [435, 447, 500, 503], "5292": 479, "529411764705883": 467, "5297": 445, "5297030e": 482, "5298": 445, "52e": [473, 500], "53": [28, 104, 124, 463, 475, 489, 500, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "530": 435, "5300": 445, "53025": 94, "5303": 445, "5304": 445, "531": [435, 467], "5312": 445, "5314": 445, "5316": 445, "5320": 445, "53213": 463, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": 478, "53343": [414, 470], "53344": 470, "53345": 470, "53346": 470, "53347": 470, "53348": 470, "5342": 445, "5345275e": 482, "5346": 445, "53482e": 448, "535": [435, 478], "5350": 445, "535058216604496": 278, "5353": 445, "5356": 445, "53566": 448, "53616": 243, "5366": 445, "5370": 445, "5378": 445, "5380": 445, "5381": 445, "5382": 445, "53849342472254e": 475, "5385": 445, "5389": 445, "539": [278, 486], "5390": 445, "5390438": 97, "5392e": 471, "539397": 478, "53945": 471, "53946": [475, 476], "539e": 478, "53e": [414, 456], "54": [67, 450, 453, 454, 478, 482, 487], "5400": 479, "5405": 445, "5407": 445, "5407363826067": 513, "5407363826070": 513, "5408": 445, "5409": 445, "541": 435, "5411": 448, "5423": 445, "5427": 445, "5427520e": 482, "54282": 457, "5433": 445, "5437": 445, "5438": 445, "5438860e": 482, "544": [435, 478, 492], "5445": 445, "5448": 445, "5449": 445, "545": 435, "5453": 445, "54566271": 577, "545y": [39, 40], "546": 435, "5461745": 97, "5462": 445, "5466": 445, "54676837e": 481, "54682": [457, 478, 492, 502], "547": [435, 448, 478], "5472": 445, "54721e": 448, "5477": 478, "54772": 478, "54892": 457, "548e": 478, "549": 435, "549007644529844e": 500, "549019607843138": 467, "5499840": 491, "54e": 486, "55": [39, 42, 87, 91, 211, 454, 459, 472, 473, 481, 485, 489], "550": 453, "55027": 142, "55045": 478, "551": [478, 540], "55197": [379, 580], "552": 478, "5525": 445, "55275": 492, "553": [449, 478], "5531e": 449, "553337": 502, "5538": 502, "5538942e": 482, "553e": 457, "554": 67, "55410": 478, "5545": 445, "5545130e": 482, "55461982e": 480, "554875": 487, "554e": 451, "5559e": 455, "556": [435, 453, 578], "5561760e": 482, "557": [435, 486], "55775": 478, "558": 435, "558338072878877": 500, "559": 435, "5594": 83, "56": [448, 454, 458, 461, 473, 484, 493], "560": [37, 478], "5606985": 473, "5607778e": 482, "56093766": 97, "561": [447, 457, 460], "56141": 478, "562": 478, "562247854505": 568, "5622482": 97, "562253419295": 569, "562255686076": 567, "56234132519": 480, "563005": 469, "56353481": 577, "563e": [453, 463], "564": [293, 435, 453, 486], "564139576925786": 464, "5644": 479, "565": 435, "56506": 478, "565095": 448, "5667979002706": 472, "566e": 453, "56711": 502, "5686274509803928": 467, "56871": 478, "569": 435, "56922612": 577, "5692809e": 482, "56973": 502, "57": [33, 454, 457, 463, 473, 484], "57011": 463, "571": 478, "57185": 513, "5719922e": 482, "571e": 478, "572": 454, "57233": 502, "57236": [457, 478, 492, 502], "572e": [451, 457], "573": [67, 453, 502], "57300957": 176, "5754970e": 482, "575499": 543, "575931": 550, "576": 486, "5760": 502, "57602": 478, "5763635e": 482, "5768262e": 482, "576e": 457, "577398": 492, "5779092e": 482, "578": [478, 480, 577], "578100": 533, "5782814": 480, "579": 478, "579178801616083e": 475, "57944657408": 478, "57967": 478, "57e": 478, "58": [414, 417, 456, 461, 464, 478, 483, 484, 486, 494, 500], "580": [447, 572, 578], "580451": 535, "581": 454, "581048": 566, "5819e": 455, "582": [435, 447, 467, 468], "58332": 478, "5833e": 478, "5835918e": 482, "583e": 457, "5842497e": 482, "585": 478, "58540702": 97, "5867488e": 482, "58693695": 473, "58698": 478, "587": [447, 489, 490], "588": [447, 474], "5882352941176467": 467, "588e": 478, "58909": 472, "58926": 457, "5892966e": 482, "5895": 450, "58999": 238, "58e": [469, 478, 480], "59": [83, 459, 469, 470, 478, 483, 487, 494, 502], "590": 453, "59000": [238, 571], "59001": 238, "59063": 478, "5908": 478, "590835686434463": 488, "591": [435, 478], "59100": [570, 571], "59123": [564, 565, 566], "5915030546513255": 476, "5915e": 478, "59200": 570, "59233": 487, "59235": [83, 491], "59240": 487, "5924e": 501, "59250": 487, "59254e": 448, "59265": 448, "593": 435, "59300": 473, "59344": 502, "59348": 502, "59365": 571, "594": 435, "59400008": 97, "59428": 478, "59451": 457, "59497703e": 475, "5951631e": 482, "5956621435": 480, "596": 486, "59696": 457, "596e": 478, "597194451442478e": 475, "597774": 482, "59793": 478, "598": 502, "5985": 502, "5987726": 97, "599": [435, 467, 471, 486], "599625": 491, "59976": 478, "599999904632568": 478, "59d09m41": 478, "59e": [478, 486, 492], "5a": 58, "5e": [456, 466, 478, 480, 486], "5rg3ujtf": 456, "5v3t87aw": 483, "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 102, 109, 111, 116, 125, 130, 142, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 162, 164, 165, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 238, 278, 366, 369, 382, 385, 390, 394, 395, 398, 403, 411, 414, 427, 429, 431, 437, 438, 442, 444, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 508, 525, 529, 535, 539, 559, 575, 577], "60": [67, 91, 155, 442, 454, 456, 457, 478, 481, 492], "600": [454, 457, 462], "6000": 528, "6000000000000001": 487, "600661": 482, "60075": 482, "60090769e": 487, "600e": 453, "6018166e": 482, "601e": 478, "6024e": 501, "603": [486, 502], "6033": 448, "60350": 451, "603625": 482, "604": 453, "6046689e": 482, "60603928": 487, "60629": [567, 568, 569], "607843137254942": 467, "60e": 478, "61": [67, 142, 424, 461, 478, 486, 492, 578], "610": 486, "61051": 492, "6105760e": 482, "611": [457, 480, 577], "611168": 480, "6116853": 478, "611703": 545, "611e": 478, "6125": 494, "612e": 457, "613114": 476, "61422433": 97, "61453755944866": 464, "61489": 482, "61526": 142, "615316": 502, "617": [447, 468], "617835": 482, "6181862e": 482, "61862": 238, "618876": 458, "619": 478, "6194453e": 482, "61975454954816": 500, "62": [472, 478, 493, 501], "620": 478, "620398": 482, "6205": 502, "621": [447, 477, 490], "62111": 457, "621499": 502, "6218742e": 482, "6219": 451, "622": [435, 451], "62258": 478, "6227766": 484, "62277660168379": 484, "6228e": 451, "623": [478, 502], "62320": 451, "623397": 482, "62341325": 484, "623413251903492": 484, "624": 486, "624122": 463, "624d": 24, "62503": 478, "62514628": 482, "6253652e": 482, "625877": 534, "6259962e": 482, "6266": 502, "6267247": 502, "627450980392158": 467, "628": 435, "62842028": 479, "63": [191, 192, 201, 204, 448, 453, 455, 479, 483, 493, 494, 500, 501, 523, 525, 526, 529], "630": [82, 486, 494, 500], "6309576500000000": 502, "630e": 67, "631": [435, 461], "631155605": 465, "631159205": 465, "631170005": 465, "631173605": 465, "631177205": 465, "631180805": 465, "6318811e": 482, "632627": 502, "633": [85, 102, 105, 109, 110, 173, 454, 462, 483, 500, 501, 525], "63307": 83, "63308": [470, 501], "633083": 485, "63310241699219": 462, "63326": 457, "6333": 94, "63342": 502, "633600": 486, "635": 435, "63500212963": 478, "6354": 502, "63541": 491, "63668832485633": 472, "638": 486, "639": 478, "6390": 448, "63902": 448, "6395e": 458, "6397": 502, "63e": 479, "64": [39, 67, 83, 125, 192, 417, 469, 478, 492], "640": 435, "6402822e": 482, "641": [435, 502], "64103": 491, "6413": 463, "6417": 463, "6419578e": 482, "642": 502, "6423836025257211": 464, "6429005895278312": 488, "642e": 453, "643": [30, 31, 32, 33], "64323": 457, "64438": 492, "6444": 448, "644527": 480, "645": [479, 480], "6451": 463, "6464": 448, "646e": [136, 296], "647": 435, "647058823529452": 467, "6471115e": 482, "64794383e": 487, "648": 435, "648e": 67, "649": 435, "64987376": 97, "64e": 454, "65": [63, 142, 402, 417, 419, 479], "650": [447, 479, 490], "6509": 448, "651": 478, "651058": 502, "6514": 502, "652": 462, "6522806": 502, "652368617859867": 462, "653": [435, 450], "65357608e": 482, "654": [448, 478], "65412": 463, "654e": 478, "655": 457, "655283": 457, "6554088e": 482, "6556248e": 482, "6557": 457, "655e": [67, 454], "656": 577, "65603222222": 492, "65603794185": 478, "6561e": 461, "6577182894355391": 488, "658": 486, "658387": 558, "6588": 472, "658909145253801e": 502, "6589622747787678": 488, "659": [453, 457], "65e": 118, "66": [52, 53, 417, 420, 456, 462, 479, 481, 486, 489, 492, 500], "660": 435, "6604475": 463, "660e": 502, "660fals": 451, "661": 435, "66104": 448, "662": 478, "663": [447, 453, 474, 577], "663742400000000": 502, "664502403": 491, "664502405": 491, "664502408": 491, "664502409": 491, "664502414": 491, "664e": 457, "6652219e": 482, "6656409356335768": 464, "66650390625": 450, "6666666666583865": 471, "6666666666666666": 566, "666666666666696": 467, "6678": 457, "66813": 463, "669100": 551, "66984341": 482, "669e": [142, 457], "66e": [461, 479], "67": [17, 417, 478, 502], "670": 478, "6705024680435898": 303, "671616": 448, "6728": [478, 502], "673": [455, 465, 494, 564], "67304": 97, "67375": 448, "67457342435522e": 502, "675": 453, "6768369882260035": 454, "6768e": 454, "677": [435, 447, 503], "6772235e": 482, "67759236e": 482, "678": [86, 464], "67824": 479, "6784": 577, "67861": 482, "678683717532289e": 454, "679": 435, "679478008080033e": 454, "6795e": 454, "67992517": 97, "67e21": 477, "68": [67, 83, 96, 154, 160, 162, 163, 164, 166, 233, 417, 448, 478, 481, 482, 484, 491, 502, 578], "680": 486, "6803": 502, "6812310184489": 472, "68125": 482, "6823": 448, "683535101178161e": 475, "684": 173, "68542112": 97, "68588096384626e": 475, "68628538586": 479, "687": 486, "687214": 483, "687500": 483, "687685": 478, "688606": 570, "68e": [449, 461, 478], "69": [102, 444, 445, 457, 469, 478, 479], "690": 67, "690557685186": 478, "6909290e": 482, "691": 478, "691299354164691": 464, "69138": 457, "691680": [102, 479, 486], "692": 457, "692e": 454, "69314486": 485, "693940": 461, "6953125": 479, "69543812": 97, "6959369197218669": 488, "695e": 457, "697317": 492, "69735": 482, "697e": 451, "697fals": 451, "6985": 450, "6992": 463, "6e": [451, 478, 486], "6h": 493, "6th": 416, "7": [30, 31, 38, 52, 53, 67, 87, 91, 125, 131, 141, 173, 176, 203, 209, 211, 236, 368, 369, 378, 382, 383, 390, 394, 395, 398, 414, 418, 419, 421, 422, 428, 429, 434, 435, 436, 438, 439, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 529, 533, 534, 570, 577, 578], "70": [67, 91, 102, 454, 463, 478, 479, 577], "700": [386, 466, 480, 485], "70000000e": 487, "7000e": 487, "70016": 463, "7007": 463, "701": 525, "70181": 142, "702": [470, 478, 492, 501], "702e": 457, "703": 414, "70358483e": 487, "704": 486, "70428": 502, "70437": 482, "705": 502, "70546": 457, "70634e": 448, "706e": [462, 478], "707945784": 480, "707t": 287, "708": [453, 454], "709": 435, "7097381e": 482, "70e": 487, "71": [33, 454, 456, 486, 578], "710": 435, "71067811865478": 478, "7115414505410296e": 475, "7116851": 487, "711e": 457, "712": 464, "71220672": 479, "7123895e": 482, "712e": [470, 501], "713": [435, 478], "7132e": 502, "71387207e": 480, "714": 478, "715": 502, "716": [96, 303, 304, 484], "716062": 491, "71693826": [471, 475, 488, 516], "717": 478, "71795506": 502, "7184": 502, "719": [435, 486], "7190994e": 482, "71944e": 448, "7195": 478, "719e": [472, 478], "72": [421, 450, 478, 483, 502], "720": [466, 478], "7200": 469, "722": 486, "72217": 502, "722557505166": 478, "723": 457, "723e": 478, "7240965e": 482, "725": 478, "725490196078432": 467, "727": 486, "72775": 502, "7284447e": 482, "729e": 457, "73": [448, 456, 502], "7303": 502, "731": 435, "731589446928548e": 500, "732e": [67, 478], "733": [67, 435], "734": 502, "735": [447, 468], "7350250533013533": 488, "7350380e": 482, "7351418e": 482, "735e": 478, "736": [453, 577, 578], "737": 453, "738": [435, 478], "7385727e": 482, "739": 435, "7395744e": 482, "739e": 67, "73e": [478, 500], "74": [448, 502], "740": 435, "742": 486, "743e": [449, 478], "74427": 463, "74465974e": 482, "74479": 457, "745098039215687": 467, "74542e": 448, "746": 435, "7471700e": 482, "7479085e": 482, "748": 478, "748259": 461, "74989420933": 480, "75": [67, 371, 449, 453, 502], "750": 578, "751643891117176": 500, "75267735": 502, "753": [435, 454], "7537086e": 482, "754": [435, 492], "75408483": 502, "7555": 483, "7559": 502, "756": 478, "7567": 448, "7580410e": 482, "759": [435, 474], "7596682e": 482, "75e": [478, 501], "76": [464, 475, 484], "7613": 414, "761c": 28, "762": 435, "762199399999986": 540, "763": 435, "7637308880733709": 488, "7638": 457, "763e": 457, "76419591747674": 472, "7647": 502, "764705882352942": 467, "76473": 457, "7652512e": 482, "766": [435, 457], "7660168382": 478, "766d": 491, "767": 435, "76739": 478, "768000": [102, 479], "768048": 97, "7681656e": 482, "76837444": 473, "7684028": 502, "7692170e": 482, "76e": 486, "770": [67, 447, 463, 468], "771667": 494, "77174": 457, "7718272408581743": 303, "771e": 478, "772": [435, 448], "77206": 502, "77218": 457, "773": 478, "7733e": [449, 478], "77351": 457, "774": [435, 469], "7743835449219": 453, "774e": 478, "775": [67, 486], "7752246942468283": 463, "7755386e": 482, "7760": 502, "7763307219821931": 303, "7765957e": 482, "77678": 448, "7769775": 491, "777": 435, "7771617763704126": 303, "77751797": 97, "777e": [67, 451], "777l": 35, "778": [435, 453, 478], "77827941": 484, "778279410038923": 484, "779": [454, 478], "7796942": 502, "779e": 453, "77e": [456, 478], "78": [484, 485, 493, 501], "780": [31, 125], "7800e": 453, "7804888e": 482, "78083": [141, 142], "780e": 125, "78181": 142, "78188": 457, "78188096": 97, "782": 492, "7827941": 484, "78279410038923": 484, "783": [435, 478, 502], "78332719": 463, "78333": 463, "783587001383003": 491, "783e": 463, "784": [436, 454], "7843137254901955": 467, "78499999999997": 536, "785": 536, "7853981633974483": 569, "786692": 569, "787": [67, 173], "787169465401243e": 470, "7875405607868806": 488, "7876233e": 482, "788": 478, "7887840e": 482, "788e": 478, "789": 435, "78910994": 97, "7894": 463, "78952750835169": 472, "78e": 486, "79": [450, 478], "790": 435, "791": 436, "7913e": 453, "7922": 448, "793": [436, 457], "794": 480, "7941697": 480, "79432823": 487, "7943282347": 480, "79469899": 463, "79470": 463, "794e": 457, "796": [436, 486], "797": 436, "7972": 483, "798": 436, "798218": 448, "799": [453, 472], "7990194e": 482, "7997221e": 482, "799999952316284": 478, "7c": 484, "7c4afgnw": 475, "7d": 478, "7e": [478, 486, 487], "7e955f": 417, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 102, 105, 109, 110, 111, 116, 128, 142, 147, 148, 197, 204, 236, 238, 305, 378, 382, 385, 386, 395, 418, 419, 422, 424, 425, 429, 430, 431, 434, 435, 436, 439, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 509, 511, 520, 525, 529, 533, 542, 553, 561, 577], "80": [176, 455, 457, 479, 484, 492, 525, 552, 561], "800932": 478, "801": [502, 525], "801668796295": 478, "802": [486, 502], "803": [453, 457, 540], "8031431e": 482, "8037638e": 482, "803921568627494": 467, "804": [447, 486, 495], "804492": 469, "80492": 142, "80571": 141, "8062607e": 482, "806365": 547, "80683246": 482, "8071": 457, "807201": 502, "8075": [478, 502], "8075185": 478, "8084e": 461, "808687936570502e": 481, "80871364": 97, "8090746": 491, "809505": 478, "80982039": 482, "80e": 449, "81": [425, 449, 470, 542], "810": [436, 478], "810000": 469, "8100e": 449, "810e": 478, "811": 436, "8115337251905373e": 481, "812": 436, "812075194992371e": 481, "8122169596532167e": 481, "8122425483643125e": 481, "8122e": 481, "812358724314062e": 481, "8129257829574434e": 481, "812951371538087e": 481, "813": 436, "814": 436, "8150": 502, "8157971601581226e": 481, "816": 436, "8160964882165554": 303, "81699e": 448, "816e": 478, "818388e": 502, "81847286": 473, "818e": 451, "819": 478, "81e": 542, "82": [67, 417, 461, 478, 501, 529], "820": [436, 472], "8205513": 491, "820562952023891": 303, "820734654694367e": 475, "8222980e": 482, "8226e": 472, "823": 453, "82352941176471": 467, "824": [137, 436, 486], "8241471833009617": 488, "825": [436, 448, 464, 478], "8256": 502, "826": 436, "8262e": 489, "826414166666": 94, "827": 436, "8272": 504, "82739": 457, "8278": 469, "827e": 142, "8290458e": 482, "8293": 502, "82946153": 502, "8294e": 455, "82e": 462, "83": [30, 67, 83, 85, 94, 102, 105, 109, 110, 173, 176, 191, 192, 201, 204, 453, 454, 455, 457, 462, 470, 479, 483, 484, 485, 493, 494, 500, 501, 520, 523, 525, 526, 529], "830": [436, 447, 562], "8300": 502, "831": 436, "832": 436, "83242471": 482, "833": [436, 454, 457], "833333333336": 473, "834": 436, "8341884287660133": 488, "8349780e": 482, "835": 436, "835e": [454, 463], "835fals": 451, "836": [436, 473, 478], "836731": 478, "8369650e": 482, "837": [436, 486], "8377268e": 482, "838": 457, "8383396349722769": 303, "84": [24, 142, 417, 447, 453, 455, 463, 478, 486, 529], "840": [436, 457], "841": 478, "84196311": 97, "842": [436, 478], "84233": 457, "842x": [135, 144], "843": [59, 448, 473], "843137254902004": 467, "843863242310971e": 500, "843e": 67, "844": [447, 490], "8441040e": 482, "844770648146": 94, "8449575657133206": 303, "845": 437, "84529": 478, "8455480e": 482, "845693": 448, "846": [457, 478, 577], "847": 436, "8475576e": 482, "8475650e": 482, "84e": 461, "85": [87, 91, 443, 463, 533, 534], "851": 436, "85157506": 502, "8515948e": 482, "85188496e": 482, "85202": 502, "85287": 492, "852e": 478, "854": 436, "854166666664": 473, "85416667": 471, "85469291": 97, "855": 436, "85527": 463, "85527359": 463, "8555500e": 482, "85624": 458, "85625": 458, "8568": 502, "856e": 478, "8570719e": 482, "85722435185": 478, "858": 436, "858e": 478, "859": [436, 453], "85900": 463, "85900392": 463, "85925": 502, "8593054": 478, "859e": 457, "85e": 478, "86": [451, 453, 454, 457, 484, 502, 513], "860": 478, "860352": 454, "860726642105014": 472, "861": 502, "86111111": 471, "861150": 451, "8613613e": 482, "86178": 141, "8620": 469, "8623": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "862745098039234": 467, "864": [436, 502], "865": [436, 457], "86676": 492, "8669": 448, "8672": 463, "86793518066406": 450, "868": [436, 478], "86831929": 97, "8699": 448, "8699165e": 482, "87": [67, 463, 484], "870": [67, 436], "870032": 539, "8704": 457, "871": 436, "871730083414263e": 475, "872": [436, 457], "873": [454, 495], "8733348": 491, "8736082200157": 464, "873659477745188": 488, "874": 450, "875": 436, "876": 486, "87621184": 459, "8769240e": 482, "876e": 457, "87710186": 97, "877563": 478, "878": [478, 486], "87897": 463, "87897418": 463, "8799800e": 482, "87e": 21, "88": [417, 439, 455, 463, 464, 475, 478, 484, 502], "880e": 457, "881": [436, 448, 457], "8815212313941426": 488, "882": 67, "882352941176466": 467, "883": 436, "8834862e": 482, "883e": 67, "884": [436, 472], "884238": 454, "88470839": 487, "885": 436, "886": 478, "8865": 502, "88781": 457, "888": 436, "888216": 542, "8885138e": 482, "889": 478, "8893600e": 482, "88e": [451, 478], "89": [33, 472, 484], "890047": 565, "8908866e": 482, "8909e": 472, "890e": 67, "892": [447, 452, 486], "89243456": 502, "8926": 502, "89287": 448, "893": 436, "894": 451, "8943121e": 482, "89492144e": 481, "895": 473, "8954039e": 482, "89595846": 487, "89709472": 502, "897745": 552, "898": 436, "8986348363207728": 488, "89873": 463, "8989213": 463, "898e": [457, 478], "899": 67, "8999": 463, "899a": 278, "89e": 479, "8e": [451, 461, 464, 466, 486, 492, 561], "9": [16, 31, 33, 35, 67, 83, 84, 87, 90, 91, 104, 124, 141, 197, 209, 236, 238, 335, 342, 375, 382, 383, 387, 395, 414, 420, 422, 433, 436, 438, 441, 443, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 528, 535, 539, 540, 541, 548, 564, 572, 577], "90": [57, 67, 401, 456, 459, 462, 463, 478, 484, 487, 504], "900": 478, "9002269877996247": 473, "900269": 482, "9023670e": 482, "90242058e": 479, "9032163": 86, "904": 502, "905": 478, "9053655e": 482, "9053906e": 482, "906": [436, 478], "90605275e": 492, "90677811e": 480, "90685": 457, "907": 478, "9074812e": 482, "9077294": 491, "90e": [102, 454, 461, 479], "91": [456, 484, 489, 529], "910030": 548, "910907": 559, "911": 436, "911552434768802e": 470, "912": 478, "912525e": 502, "912779907405": 478, "913196574074": 470, "913e": 457, "914": 67, "915": 478, "91507": [102, 479], "91612243652344": 450, "9163195e": 482, "91719": 479, "918": 67, "918365": 478, "919": 436, "919e": 478, "91e": 486, "92": [142, 456, 457, 484, 491], "920": 453, "92052435e": 480, "9205875e": 482, "921": 454, "9215375e": 482, "921614": 540, "92234009259": [414, 470], "924": 454, "9240e": 487, "92490": 457, "925106": 463, "9269494e": 482, "9277492e": 482, "928": 478, "9280475e": 482, "929": [448, 454], "92960065298276": 500, "93": [67, 123, 125, 456, 457, 484, 491], "93026": 478, "9303": [478, 502], "931": 301, "93128e": 448, "932": 436, "93271046296": 470, "933": [436, 447, 490], "9332549000000": 502, "9343": 448, "935826709880043": 476, "93702": 492, "9382336444241555": 488, "938e": [463, 478], "939": [289, 295], "9391360e": 482, "93988308": 97, "93e": 478, "94": [456, 478, 484, 491, 500, 502], "940": 490, "940e": 478, "940fals": 451, "94111838": 97, "941176470588236": 467, "94186555556": [414, 470], "942": [447, 452], "943282347242818": 500, "944060876": 480, "9441e": 458, "944328": 537, "945": [447, 465, 468], "9453950989269149": 488, "9461e": 472, "9462": 463, "946923": 273, "94722599": 463, "94723": 463, "947e": 457, "948683": 448, "9489822e": 482, "949": 486, "9499210e": 482, "94e": [463, 478], "95": [33, 67, 154, 160, 162, 163, 164, 166, 220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274, 456, 457, 463, 469, 478, 479, 481, 484, 485, 491, 533, 578], "950": 436, "9500979841335693": 303, "95024543e": 481, "950455": 560, "950e": 453, "952": 67, "9526e": 472, "9529719e": 482, "953": 486, "95421509259": 470, "95451985e": 125, "9546285068162436": 488, "95615": 448, "957": 67, "9580e": 455, "95883": 502, "959198": 478, "959d": [52, 53], "96": [417, 449, 456, 479, 484, 542], "9606540e": 482, "960784313725491": 467, "9608912e": 482, "9619812963": 470, "96374320": 459, "966": 436, "96602": 458, "967546": 457, "9677107409819438": 303, "968": [453, 463], "96814": 502, "96833546296": [478, 492], "968488": 301, "9688e": 469, "969": [447, 452, 469, 478], "9692e": 449, "96e": 451, "96r": 484, "97": [456, 478, 482, 488, 501], "97003": 502, "97054": 457, "970e": 478, "97116": 463, "9721952295357764e": 475, "973": 478, "9730e": 462, "97369425926": 470, "974e": 478, "975": 436, "97529": 141, "97596": 457, "976": 436, "97749": 463, "97749371": 463, "9776920e": 482, "979": [67, 436, 484], "97934": 457, "97978": 83, "97e": 478, "98": [83, 345, 450, 455, 456, 457, 461, 470, 472, 482, 500], "980": 67, "9803921568627443": 467, "98049": 457, "981": [447, 452], "981352": 567, "98149518519": 470, "9816452e": 482, "982075849517389e": 487, "98258": 457, "9833462074166": 478, "9834338e": 482, "98359211196148547": 463, "9839e": 469, "98429": 457, "9845": 448, "9847406e": 482, "984e": 457, "985": [436, 451], "985502122122975": 488, "9868440049211211": 500, "9876": 448, "98772": 141, "988": [436, 478, 486], "988409870698051e": 52, "9890": 502, "98e": 478, "99": [345, 456, 457, 458, 469, 480, 501, 502], "99004": 142, "991": 478, "9910796e": 482, "9912648e": 482, "9912712e": 482, "993": 450, "9931": 502, "994": 436, "99467": 142, "994e": 478, "995": 486, "9952623149688797": 500, "9969731e": 482, "997": 436, "9977859e": 482, "9978": 502, "998": 464, "99848e": 492, "99878762e": 480, "999": [50, 163, 166, 478], "99919925926": 238, "99993896484375": 453, "9999912037958": 463, "999999": 478, "99999994": 86, "9999999995": 478, "9999999997835": 450, "99999999999545": 475, "999999999997": 465, "9999999999977": 478, "9999999999978": 471, "9999999999998": 478, "99999999999994": 478, "99999999999999": [456, 478], "99e": 478, "9e": [449, 451, 478, 561], "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 104, 105, 108, 109, 110, 123, 124, 125, 133, 136, 141, 142, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 215, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 286, 288, 296, 297, 305, 314, 367, 368, 369, 371, 372, 379, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 416, 418, 422, 423, 424, 425, 426, 429, 431, 432, 435, 436, 437, 438, 440, 442, 443, 444, 445, 448, 450, 455, 457, 461, 463, 464, 467, 470, 471, 472, 473, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 499, 501, 502, 504, 512, 513, 514, 516, 517, 525, 526, 528, 529, 531, 533, 570, 571, 574, 575, 578], "AND": [485, 486], "AS": 407, "And": [278, 378, 381, 396, 398, 404, 409, 450, 451, 453, 454, 461, 465, 467, 472, 479, 481, 484, 485, 487, 491, 500, 501, 502], "As": [83, 305, 335, 378, 379, 381, 386, 390, 391, 392, 394, 396, 404, 405, 407, 414, 419, 438, 448, 449, 450, 453, 454, 455, 457, 458, 459, 463, 465, 466, 470, 471, 472, 475, 476, 477, 478, 479, 481, 483, 484, 487, 489, 492, 494, 500, 502, 516, 525, 578], "At": [262, 392, 395, 404, 405, 408, 422, 465, 484, 491, 521, 574], "But": [378, 383, 386, 392, 397, 405, 408, 414, 438, 453, 454, 481, 489, 491, 500, 576], "By": [19, 20, 26, 50, 65, 87, 91, 101, 102, 105, 109, 110, 122, 126, 130, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 170, 173, 180, 190, 192, 193, 194, 196, 202, 205, 206, 218, 219, 221, 222, 225, 226, 228, 229, 230, 233, 234, 236, 240, 241, 243, 247, 248, 249, 251, 252, 253, 258, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 375, 378, 404, 405, 406, 423, 424, 426, 465, 466, 471, 476, 481, 484, 489, 501, 523, 527, 533, 534, 535, 579], "FOR": [136, 296], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 105, 109, 110, 118, 120, 122, 123, 125, 126, 127, 130, 131, 132, 133, 150, 151, 152, 158, 163, 166, 173, 178, 179, 180, 183, 184, 186, 187, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 246, 247, 248, 249, 250, 251, 253, 254, 259, 260, 261, 263, 264, 266, 267, 268, 270, 274, 275, 287, 289, 293, 295, 302, 308, 323, 377, 378, 379, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 419, 420, 421, 423, 424, 425, 426, 429, 436, 440, 443, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 467, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 496, 500, 501, 502, 504, 511, 512, 514, 516, 526, 528, 529, 534, 539, 571, 575, 576, 578, 579, 580], "IN": [92, 100, 246], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 120, 122, 123, 124, 125, 126, 128, 130, 133, 136, 140, 141, 143, 145, 150, 151, 152, 158, 161, 163, 166, 167, 169, 170, 173, 175, 176, 179, 180, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 285, 302, 305, 317, 318, 323, 364, 367, 371, 372, 373, 374, 378, 379, 380, 381, 383, 385, 386, 391, 392, 394, 395, 396, 399, 400, 401, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 418, 419, 420, 437, 438, 439, 448, 450, 451, 453, 455, 456, 458, 461, 463, 466, 469, 470, 471, 472, 473, 475, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 502, 514, 516, 527, 529, 535, 537, 550, 576, 577, 578, 579], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 87, 88, 91, 94, 101, 103, 108, 125, 150, 169, 192, 194, 197, 200, 206, 214, 216, 274, 285, 318, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 414, 419, 420, 421, 422, 423, 424, 425, 426, 429, 440, 443, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 493, 500, 501, 502, 512, 514, 516, 521, 524, 525, 526, 528, 529, 530, 533, 534, 539, 552, 571, 574, 575, 576, 577, 578, 579, 580], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 102, 105, 109, 110, 111, 114, 116, 123, 141, 150, 154, 161, 162, 163, 164, 166, 176, 179, 183, 184, 189, 193, 194, 196, 198, 201, 202, 205, 206, 208, 218, 219, 222, 225, 226, 228, 229, 230, 234, 238, 240, 241, 243, 247, 249, 251, 258, 262, 263, 265, 266, 267, 268, 271, 275, 287, 291, 293, 294, 313, 327, 332, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 409, 413, 415, 419, 420, 421, 422, 426, 429, 431, 432, 433, 438, 440, 442, 443, 444, 448, 454, 459, 462, 464, 466, 469, 473, 476, 478, 479, 480, 481, 483, 484, 485, 487, 489, 491, 492, 493, 494, 500, 501, 502, 504, 505, 512, 513, 515, 516, 520, 521, 523, 525, 529, 543, 546, 547, 549, 550, 554, 555, 557, 558, 559, 560, 573, 574, 575, 576, 577, 578, 580], "Its": [390, 404, 405, 429, 431, 467, 471, 489, 501, 518, 519, 520, 522], "NOT": 485, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 389, 399, 402, 403, 437, 439, 446, 467, 475, 478, 481, 483, 484, 502], "Not": [105, 109, 110, 195, 201, 203, 386, 561], "ON": [102, 105, 132, 180, 181, 182, 190, 376, 384, 431, 445, 448, 449, 453, 456, 459, 463, 470, 471, 473, 481, 483, 489, 516, 525, 577, 579], "OR": [102, 109, 479, 485, 486], "Of": [378, 381, 414, 461, 479, 484, 492, 576, 579], "On": [59, 168, 174, 175, 178, 287, 294, 301, 378, 379, 384, 386, 393, 394, 407, 409, 410, 411, 412, 433, 461, 462, 481, 496, 578], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 101, 102, 105, 109, 110, 224, 246, 331, 378, 379, 384, 386, 387, 388, 389, 392, 394, 395, 396, 404, 443, 445, 450, 454, 459, 470, 483, 484, 485, 500, 502, 525, 529, 552, 576, 578], "Ones": 305, "Or": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 379, 397, 398, 454, 461, 475, 479, 480, 484, 491, 492, 514], "Such": [390, 482, 520], "THE": [136, 296], "That": [16, 19, 20, 84, 90, 104, 124, 211, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 378, 379, 383, 392, 395, 398, 481, 502, 576], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 170, 174, 175, 179, 180, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 215, 217, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 277, 278, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 301, 305, 317, 323, 325, 326, 329, 345, 361, 362, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 415, 418, 419, 421, 422, 423, 424, 425, 426, 429, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 496, 500, 501, 502, 504, 505, 506, 507, 511, 512, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 533, 535, 537, 538, 539, 542, 548, 550, 552, 561, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581], "Their": 485, "Then": [67, 102, 107, 109, 381, 383, 388, 391, 393, 394, 395, 396, 402, 411, 450, 453, 461, 462, 465, 469, 470, 481, 485, 487, 489, 501], "There": [87, 91, 141, 378, 379, 383, 384, 385, 387, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 408, 410, 411, 437, 445, 463, 467, 476, 477, 478, 479, 481, 482, 483, 485, 486, 493, 504, 512, 513, 516, 529], "These": [77, 95, 198, 277, 378, 379, 383, 384, 389, 391, 392, 393, 394, 398, 399, 404, 421, 423, 424, 425, 429, 437, 443, 448, 462, 464, 465, 472, 476, 477, 479, 482, 484, 487, 488, 493, 496, 504, 521, 526, 528, 529, 577, 578, 579], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 100, 104, 108, 122, 124, 126, 130, 192, 204, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 273, 275, 277, 287, 368, 369, 380, 381, 385, 386, 389, 390, 391, 393, 394, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 419, 420, 421, 424, 425, 429, 431, 437, 438, 440, 443, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 496, 500, 502, 512, 513, 514, 517, 521, 523, 525, 526, 533, 574, 576, 577, 578], "With": [83, 378, 387, 388, 404, 425, 438, 489, 512, 578], "_": [102, 109, 128, 234, 253, 378, 392, 402, 404, 453, 456, 459, 477, 478, 481, 486, 489, 512, 525], "_0": [50, 51], "_1": [105, 110, 513], "_2": [105, 110], "__all__": 378, "__array__": 305, "__array_ufunc__": [455, 465, 494, 564], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 317, 384, 389, 406, 425], "__class__": [378, 402, 477, 510], "__dict__": [16, 84, 90, 104, 124, 378], "__enter__": 356, "__eq__": 431, "__exit__": 356, "__fields__": [16, 84, 90, 104, 124, 405], "__getitem__": [388, 389, 390, 445], "__init__": [16, 84, 90, 104, 124, 201, 274, 378, 384, 390, 402, 440], "__int__": 323, "__len__": 388, "__main__": [257, 378, 489, 498, 576], "__name__": [378, 459, 470, 471, 472, 475, 477, 498, 510, 576], "__neq__": 431, "__pydantic_extra__": [16, 84, 90, 104, 124], "__pydantic_fields_set__": [16, 84, 90, 104, 124], "__repr__": [378, 424, 438], "__str__": [378, 390, 405, 421], "__subclasses__": 477, "__version__": 413, "_basemodel__context": [16, 84, 90, 104, 124], "_build": [379, 408, 516], "_check_interv": 443, "_compute_flux_spati": 429, "_covari": [224, 246], "_data": 402, "_dataset": 379, "_dom_class": [461, 469, 484, 500, 501], "_energy_t": 402, "_err": 475, "_errn": [126, 127, 130, 131], "_errp": [126, 127, 130, 131], "_evaluate_timevar_sourc": 443, "_f_cash_root_cython": 300, "_factr": 481, "_fields_set": [16, 84, 90, 104, 124], "_i": 128, "_k": [102, 109, 512], "_l": 512, "_lat": 378, "_lon": 378, "_map": 371, "_model": 123, "_new_attribut": 378, "_old_attribut": 378, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 104, 124], "_phi": 378, "_prior": 406, "_propagate_error": 428, "_reco": 378, "_repr_html_": 378, "_row_index": 69, "_sample_coord_time_energi": 443, "_scan": 481, "_time_group": 402, "_time_t": 402, "_true": 378, "_type": [406, 489], "_types_namespac": [16, 84, 90, 104, 124], "_was_": [16, 84, 90, 104, 124], "_wc": 540, "_weight": 406, "a_": [105, 110, 153, 518, 521, 578], "a_off": 578, "a_on": 578, "a_scan": 489, "aa": [87, 91, 305, 404], "aaguasca": 440, "aaize8od": 483, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 64, 65, 83, 88, 118, 135, 136, 144, 153, 206, 214, 216, 243, 277, 278, 287, 294, 296, 477, 478], "abc": [18, 56, 99, 121, 172, 191, 196, 483], "abcmeta": 483, "abdalla2018": [525, 526, 575], "abeysekara": 59, "abil": [402, 489], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388, 393, 396, 450, 469, 470, 471, 489, 496, 576], "about": [11, 13, 16, 84, 90, 104, 124, 148, 153, 233, 238, 335, 378, 381, 383, 387, 394, 395, 397, 398, 399, 403, 404, 406, 407, 408, 413, 414, 433, 434, 438, 439, 440, 449, 451, 457, 458, 459, 462, 463, 465, 478, 482, 484, 487, 492, 501, 502, 512, 513, 576, 579], "abov": [29, 44, 52, 53, 83, 122, 124, 125, 128, 132, 133, 141, 142, 168, 203, 367, 369, 378, 379, 384, 387, 388, 390, 392, 394, 395, 396, 397, 398, 402, 410, 411, 414, 448, 457, 463, 465, 466, 467, 470, 473, 475, 480, 481, 483, 484, 485, 487, 488, 489, 491, 492, 493, 500, 510, 512, 513, 520, 523, 529, 575, 576, 577, 578, 579], "abramowski": 153, "abruptli": [378, 403], "abs_path": 313, "absenc": [393, 459, 483, 485, 525, 577], "absolut": [82, 91, 106, 147, 148, 149, 150, 153, 155, 157, 160, 165, 193, 194, 196, 198, 202, 205, 206, 309, 335, 355, 359, 514], "absolute_tim": 580, "absopt": 396, "absorb": [275, 388, 401, 436, 542], "absorbedspectralmodel": [423, 436], "absorbt": 401, "absorpt": [226, 396, 426, 436, 445, 447, 452, 496, 530, 562], "abstract": [56, 57, 59, 99, 121, 136, 164, 172, 177, 191, 193, 196, 205, 287, 296, 389, 425, 528], "abstractsetintstr": [16, 84, 90, 104, 124], "acada": 404, "academ": [137, 301], "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 105, 106, 110, 122, 123, 125, 168, 185, 190, 192, 193, 194, 196, 204, 205, 206, 224, 246, 288, 376, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 430, 434, 443, 445, 448, 449, 454, 455, 456, 459, 463, 466, 479, 483, 484, 492, 512, 528, 534, 552, 577, 578], "acceptance_off": [105, 106, 110, 122, 123, 125, 168, 178, 390, 448, 450, 453, 456, 459, 512, 578], "acceptance_on": [122, 123, 125], "acceptang": 122, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 87, 91, 102, 161, 191, 192, 201, 204, 294, 313, 378, 386, 387, 388, 389, 391, 394, 402, 408, 410, 413, 418, 419, 426, 433, 434, 436, 437, 443, 444, 451, 453, 454, 455, 461, 475, 478, 481, 482, 486, 487, 491, 494, 500, 501, 502, 511, 516, 527, 528, 529, 574], "accessor": 484, "accident": [492, 576], "accomplish": 480, "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 87, 91, 102, 105, 109, 110, 118, 123, 145, 151, 161, 168, 192, 198, 214, 216, 302, 367, 388, 389, 392, 393, 396, 402, 404, 423, 432, 444, 459, 470, 479, 483, 487, 488, 496, 512, 513, 516], "accordingli": [390, 404, 420, 426, 485], "account": [102, 105, 109, 110, 122, 123, 136, 170, 186, 224, 246, 262, 286, 288, 294, 353, 386, 391, 394, 402, 404, 425, 442, 444, 447, 448, 450, 452, 453, 455, 459, 461, 467, 472, 473, 480, 481, 483, 485, 496, 501, 512, 514, 577, 578], "accur": [134, 143, 396, 439, 461, 481, 523], "accuraci": [392, 481, 516], "aceptance_off": 390, "acero": [396, 419, 421, 423, 426, 429, 431, 436, 438, 444, 445], "achiev": [16, 84, 90, 104, 118, 124, 168, 368, 369, 378, 387, 388, 389, 390, 391, 392, 394, 401, 404, 426, 484, 487, 488, 526], "acknowledg": [381, 404, 415], "acquir": 414, "acquisit": 575, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 118, 378, 387, 390, 408, 464, 472, 486, 492, 512, 528, 537, 575], "act": [91, 394, 486, 539], "action": [168, 383, 388, 394, 404, 408, 429, 472], "activ": [91, 294, 381, 395, 409, 410, 412, 413, 414, 423, 440, 476, 516], "actual": [181, 353, 354, 355, 377, 378, 379, 383, 387, 389, 391, 393, 394, 402, 403, 405, 407, 456, 466, 469, 471, 479, 480, 481, 483, 484, 485, 489, 492, 493, 501, 502, 523, 525, 575, 576, 578], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 82, 83, 84, 87, 90, 91, 102, 104, 105, 109, 110, 114, 115, 117, 124, 125, 193, 194, 196, 201, 202, 205, 206, 378, 379, 381, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 402, 404, 418, 419, 420, 422, 423, 424, 426, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 455, 459, 461, 462, 482, 483, 486, 487, 488, 489, 493, 512, 529, 579], "adapt": [118, 168, 211, 387, 388, 391, 392, 397, 398, 400, 401, 404, 407, 414, 419, 420, 422, 423, 424, 426, 427, 429, 432, 435, 436, 438, 440, 442, 443, 444, 445, 479, 482, 484, 485, 523, 526], "adaptiveringbackgroundestim": [178, 384], "adaptiveringbackgroundmak": [171, 423, 526], "adass": 398, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 90, 91, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 123, 124, 125, 147, 148, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 166, 170, 193, 194, 196, 200, 202, 205, 206, 212, 224, 246, 262, 302, 347, 366, 375, 377, 378, 379, 381, 383, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 404, 406, 407, 410, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 456, 461, 462, 465, 469, 470, 473, 479, 482, 483, 484, 485, 487, 489, 491, 502, 506, 507, 516, 529, 544, 576, 579], "add_artist": [487, 533, 534], "add_cbar": [102, 105, 109, 110, 125, 147, 148, 150, 153, 154, 155, 160, 161, 162, 164, 193, 194, 196, 202, 205, 206, 366, 457, 458, 459, 461, 463, 469, 473, 477, 479, 482, 483, 484, 486, 487, 492, 493, 500, 501, 529, 532, 533, 534, 537, 538, 540], "add_column": [87, 91], "add_enabled_unit": [448, 456, 458, 461, 463, 469, 472, 491], "add_index": [87, 91], "add_loc": 378, "add_row": [87, 91], "add_subplot": 366, "addit": [16, 19, 20, 26, 43, 84, 87, 90, 91, 102, 104, 105, 109, 110, 114, 122, 124, 126, 131, 165, 193, 194, 196, 199, 202, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 378, 381, 382, 383, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 402, 403, 404, 405, 407, 408, 409, 410, 411, 420, 421, 423, 425, 426, 429, 430, 437, 438, 440, 443, 444, 445, 451, 455, 467, 473, 478, 479, 480, 481, 484, 486, 487, 489, 491, 492, 501, 502, 512, 514, 516, 523, 528, 529, 573, 579], "addition": [131, 390, 479, 481, 484, 486, 487], "address": [387, 390, 391, 392, 394, 404, 489, 515], "adequ": 201, "adher": 381, "adjac": [145, 198, 429, 471, 484, 525], "adjust": [16, 67, 193, 194, 196, 202, 205, 206, 387, 389, 401, 445, 454, 476, 479, 480, 487, 488, 500, 516, 523, 575], "admit": 398, "adonath": 384, "adopt": [37, 391, 394, 399, 455, 465, 466, 477], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 118, 136, 153, 243, 277, 278, 287, 294, 296], "adult": 378, "advanc": [390, 394, 395, 398, 406, 410, 482, 484, 516, 575, 576], "advantag": [386, 392, 395, 402, 429, 484, 489, 552, 576], "advanteg": 390, "advertis": 407, "advic": [378, 404], "advis": [379, 404, 481, 489, 496], "advoc": 378, "aeff": [16, 82, 87, 88, 105, 110, 153, 179, 187, 388, 390, 391, 425, 426, 450, 453, 454, 455, 458, 459, 461, 463, 471, 475, 482, 483, 491, 493, 494, 500, 501, 518, 523, 525, 526, 575], "aeff2d": 152, "aeff_2d": [82, 87, 153, 491, 494], "aeff_3d": 482, "aeff_ev": 482, "aeff_new": 482, "aeff_perc": [179, 450, 453, 454, 463, 471, 475, 483, 493, 525], "aegi": 226, "af": 374, "affect": [136, 378, 386, 390, 392, 403, 420, 421, 432, 441, 449, 489], "affili": [392, 404, 440], "afmhot": [486, 502], "aforement": 404, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 102, 104, 105, 109, 124, 163, 166, 294, 317, 335, 359, 362, 378, 381, 383, 386, 387, 389, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 414, 418, 425, 427, 428, 429, 431, 437, 439, 440, 441, 451, 459, 461, 471, 475, 476, 481, 484, 486, 491, 493, 494, 516, 576, 580], "aftervalid": 90, "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 309, 378, 506], "again": [102, 105, 109, 110, 163, 381, 388, 390, 392, 394, 399, 405, 409, 424, 425, 428, 435, 440, 451, 453, 454, 461, 466, 467, 484, 487, 489, 492, 500, 502, 529, 576], "against": [16, 84, 90, 104, 124, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206, 379, 381, 395, 401, 408, 478, 480, 492, 500, 511, 514], "agent": 394, "agglom": 13, "aggreg": 405, "agil": 391, "agn": [137, 292, 392, 453, 470, 472, 476, 491], "agnost": 481, "ago": 385, "agre": [195, 198, 381, 383, 392, 404], "agreement": [378, 381, 399, 473], "aguasca": [431, 440, 441, 442, 443, 445], "aharonian": 464, "ahead": [392, 418], "ahelp": 211, "aim": [378, 387, 388, 404, 461, 465, 477, 488, 504, 575], "aimhnycl": 475, "air": 491, "ait": [192, 193, 194, 498], "aitoff": 392, "aka": 502, "al": [26, 33, 59, 101, 136, 137, 153, 226, 293, 294, 296, 301, 388, 445, 457, 464, 476, 504, 575], "albert": 575, "albert2007": 575, "alexi": [426, 429], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 118, 133, 168, 211, 287, 378, 384, 390, 391, 392, 397, 405, 421, 426, 434, 435, 436, 445, 457, 476, 480, 481, 493, 514, 528, 574, 578], "alia": [16, 56, 84, 90, 104, 124, 381, 502], "alias": [16, 56, 84, 90, 104, 124], "align": [87, 91, 100, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 192, 193, 194, 196, 198, 202, 204, 205, 206, 378, 482, 485, 487], "alisha": 431, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 102, 103, 104, 105, 107, 108, 109, 110, 122, 123, 124, 125, 126, 130, 131, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 167, 173, 180, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 284, 350, 351, 352, 353, 354, 355, 365, 374, 377, 378, 379, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 453, 454, 455, 458, 459, 461, 463, 464, 465, 469, 470, 472, 473, 475, 478, 479, 480, 481, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 506, 512, 514, 516, 525, 527, 528, 529, 530, 552, 573, 576, 577, 578], "all_quant": [123, 125], "allclos": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 195, 196, 198, 202, 203, 205, 206, 353], "alloc": [194, 202, 206], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 104, 118, 123, 124, 125, 132, 133, 163, 166, 192, 197, 199, 328, 378, 379, 381, 383, 384, 385, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 420, 422, 423, 424, 425, 426, 429, 431, 438, 439, 440, 443, 445, 448, 453, 464, 472, 479, 480, 481, 482, 483, 484, 485, 501, 512, 514, 516, 523, 528, 529, 573, 574, 576, 581], "allow_extra": 197, "allow_pickl": [16, 84, 90, 104, 124], "allowed_channel": [26, 477], "allski": [83, 484], "alma": 397, "almeida": 426, "almost": [377, 379, 381, 392, 492, 502], "alon": 383, "along": [68, 101, 123, 125, 129, 145, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 164, 165, 193, 194, 196, 202, 204, 205, 206, 292, 293, 294, 296, 316, 317, 327, 337, 338, 387, 388, 402, 440, 443, 445, 458, 467, 478, 479, 482, 483, 486, 487, 513, 528, 529, 545, 575], "alpha": [21, 27, 28, 48, 102, 105, 109, 110, 122, 123, 125, 168, 190, 211, 229, 230, 239, 240, 241, 254, 288, 299, 302, 375, 376, 390, 401, 403, 429, 436, 445, 448, 449, 450, 451, 453, 455, 456, 459, 461, 462, 466, 473, 478, 481, 489, 491, 533, 542, 544, 546, 548, 550, 551, 552, 561, 567, 568, 577, 578, 579], "alpha_": [105, 110], "alpha_1": [105, 110], "alpha_2": [105, 110], "alpha_norm": [226, 401, 449, 542], "alphabet": [395, 404, 419, 420, 421, 422, 423, 424, 425, 426, 429], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 124, 211, 270, 271, 272, 274, 378, 384, 385, 386, 389, 390, 391, 392, 393, 395, 398, 399, 400, 402, 405, 407, 408, 438, 449, 451, 455, 457, 459, 466, 473, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 502, 504, 529, 540], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 118, 122, 123, 125, 126, 134, 135, 141, 143, 144, 165, 170, 176, 191, 198, 200, 201, 211, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 273, 275, 285, 305, 313, 318, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 429, 437, 438, 439, 443, 448, 449, 450, 453, 454, 455, 456, 457, 459, 461, 463, 464, 465, 466, 467, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 500, 501, 504, 512, 513, 514, 515, 516, 523, 525, 528, 529, 552, 555, 573, 575, 576, 577, 578, 580], "alt": [83, 85, 88, 94, 95, 378, 580], "alt_pnt": 91, "altaz": [83, 85, 94, 156, 378, 482, 580], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 284, 377, 378, 381, 383, 387, 411, 429, 449, 453, 455, 457, 464, 478, 481, 482, 484, 486, 491, 512, 513, 576], "although": [378, 391, 392, 393, 395, 398, 402, 481, 491, 538, 539, 573, 580], "altitud": 450, "alwai": [77, 83, 87, 91, 150, 198, 201, 208, 214, 216, 232, 378, 379, 381, 384, 385, 386, 388, 389, 390, 392, 395, 403, 404, 411, 418, 425, 440, 441, 443, 456, 457, 461, 469, 477, 481, 483, 484, 486, 488, 489, 496, 514, 528, 529], "am": 387, "ambigu": [392, 437], "amend": 381, "among": [82, 87, 91, 102, 105, 109, 110, 134, 143, 394, 398, 399, 401, 406, 426, 481, 575], "amount": [385, 392, 406, 516], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 261, 569], "ampl_2": [154, 482], "ampl_3": [154, 482], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 101, 126, 131, 133, 193, 194, 196, 205, 206, 211, 218, 225, 228, 230, 234, 241, 244, 251, 252, 253, 261, 263, 266, 267, 268, 278, 284, 297, 389, 390, 393, 401, 449, 450, 451, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 486, 487, 491, 492, 500, 501, 502, 514, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 578], "amplitude_err": 475, "amplitude_maximum_signific": 476, "amplitude_maximum_vari": 476, "amplitude_ref": 473, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 116, 123, 124, 125, 126, 127, 128, 130, 131, 133, 140, 141, 142, 148, 150, 151, 152, 153, 155, 158, 161, 163, 165, 166, 169, 173, 176, 178, 181, 183, 184, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 214, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 280, 287, 292, 294, 303, 305, 309, 323, 334, 338, 356, 362, 368, 369, 371, 374, 377, 379, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 414, 415, 418, 419, 422, 423, 424, 425, 426, 429, 431, 432, 433, 436, 437, 438, 440, 441, 443, 444, 445, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 467, 469, 470, 471, 472, 473, 475, 476, 478, 480, 481, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 504, 506, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 525, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 578, 579], "anaconda": [395, 409, 410], "analog": [87, 91, 193, 194, 196, 202, 205, 206, 529], "analogi": 399, "analys": [82, 377, 378, 387, 388, 389, 390, 392, 396, 398, 400, 401, 406, 414, 415, 421, 422, 423, 425, 426, 436, 438, 441, 453, 454, 461, 471, 472, 477, 478, 485, 487, 491, 492, 493, 500, 501, 504, 512, 576], "analysi": [6, 16, 57, 67, 70, 72, 74, 83, 102, 104, 105, 109, 110, 115, 117, 151, 152, 158, 163, 166, 175, 179, 377, 378, 379, 382, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 405, 408, 409, 410, 411, 414, 415, 418, 419, 420, 422, 423, 424, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 449, 451, 452, 457, 458, 459, 460, 464, 465, 467, 468, 469, 471, 472, 474, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 501, 502, 504, 514, 516, 517, 521, 523, 524, 525, 526, 529, 555, 573, 575, 576, 578], "analysis3d": 439, "analysis_1": [447, 500, 503], "analysis_1d": 470, "analysis_2": [379, 447, 501, 503], "analysis_3d": [438, 447, 461, 468, 470], "analysis_joint": 461, "analysis_mwl": [447, 462, 468], "analysis_stack": 461, "analysisconfig": [15, 379, 454, 458, 459, 461, 470, 500], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 153, 154, 162, 164, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 391, 396, 444, 445, 480, 482, 487, 514, 535, 579], "analyz": [136, 296, 388, 575], "andrea": 391, "andrew": 438, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 102, 105, 115, 117, 118, 122, 129, 133, 147, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 166, 169, 176, 177, 179, 181, 191, 192, 194, 199, 201, 204, 206, 207, 221, 225, 233, 236, 248, 250, 259, 260, 262, 264, 270, 272, 274, 277, 333, 365, 378, 384, 392, 394, 401, 405, 417, 419, 420, 421, 438, 445, 448, 450, 453, 456, 462, 465, 466, 471, 475, 478, 484, 485, 487, 488, 491, 492, 516, 521, 525, 528, 529, 533, 534, 535, 538, 539, 575], "angle_incr": 176, "angular": [23, 102, 105, 115, 117, 128, 151, 152, 158, 163, 166, 169, 194, 201, 204, 206, 225, 233, 236, 272, 309, 312, 378, 394, 442, 455, 466, 473, 521, 522, 575], "angular_extens": 41, "angular_s": 529, "angular_separ": [401, 442, 444, 487], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 104, 120, 124, 130, 152, 175, 193, 194, 196, 201, 202, 204, 205, 206, 305, 328, 363, 377, 378, 379, 381, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 404, 405, 407, 410, 411, 412, 413, 414, 418, 419, 437, 438, 439, 444, 454, 463, 464, 467, 470, 471, 473, 475, 479, 483, 484, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 504, 513, 514, 526, 528, 529, 544, 576, 580], "ann": [23, 437], "anna": 378, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 440, 487, 504], "annoi": [378, 576], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 367, 405, 533], "announc": [378, 383, 385, 392, 394, 397, 399, 401, 403, 404, 407, 408], "annuli": [467, 529], "annulu": [127, 337, 529], "anonym": 381, "anoth": [19, 20, 26, 83, 86, 87, 91, 102, 105, 109, 110, 151, 152, 153, 158, 163, 165, 166, 195, 198, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 378, 392, 393, 394, 396, 398, 399, 402, 405, 409, 410, 412, 414, 423, 438, 473, 479, 484, 485, 487, 529, 576], "another_posit": 525, "answer": [481, 516], "anti": [484, 485], "anticip": 387, "anymor": 440, "anyon": [383, 385, 491], "anyth": [150, 394, 576], "anytim": [381, 420], "anywai": [381, 392], "anywher": [392, 395, 397, 512], "ap": [383, 395, 403], "apart": 393, "apertur": 575, "api": [232, 382, 384, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 403, 404, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 429, 433, 437, 438, 447, 450, 453, 454, 457, 463, 465, 471, 479, 484, 485, 486, 487, 490, 491, 492, 500, 502, 503, 514, 515, 523, 573, 574, 575, 576], "apj": [289, 295], "aplpi": 438, "apologis": [418, 419, 438], "app": [87, 91, 408, 414, 437], "appear": [87, 91, 378, 379, 386, 392, 405, 432, 443, 478], "append": [87, 91, 92, 100, 146, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 211, 246, 390, 391, 393, 424, 443, 450, 453, 455, 456, 461, 462, 463, 465, 471, 472, 473, 475, 479, 480, 481, 483, 486, 487, 488, 489, 525], "append_ax": [147, 148, 150, 153, 154, 155, 160, 162, 164, 206, 366], "appendix": [30, 133, 153, 243, 278, 297, 457], "appl": [410, 412, 414], "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 105, 109, 110, 111, 115, 116, 117, 118, 122, 125, 126, 130, 133, 150, 151, 152, 158, 163, 165, 166, 170, 176, 179, 180, 193, 194, 196, 197, 201, 202, 204, 205, 206, 214, 216, 224, 232, 246, 262, 275, 285, 286, 287, 288, 317, 318, 363, 367, 375, 378, 384, 385, 388, 389, 391, 393, 396, 402, 403, 404, 426, 431, 436, 437, 438, 439, 443, 445, 448, 453, 455, 465, 471, 472, 473, 475, 479, 480, 483, 484, 485, 486, 487, 489, 491, 494, 501, 502, 514, 516, 523, 561, 574, 577], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 378, 389, 404, 406, 425, 476, 481, 528, 575], "apply_async": [325, 326], "apply_edisp": 444, "apply_hysteresis_threshold": 485, "apply_irf": [262, 425], "apply_mask": 199, "apply_psf": [389, 422], "apply_standard_scal": 96, "apply_threshold_sensit": 122, "apply_union": 208, "approach": [87, 91, 133, 378, 384, 386, 390, 394, 399, 402, 403, 405, 443, 448, 453, 483, 496, 575, 578], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 192, 193, 194, 196, 205, 206, 305, 313, 379, 455, 459, 461, 475, 484, 576], "approv": [384, 385, 386], "approx": [52, 53], "approxim": [101, 133, 134, 143, 179, 180, 192, 193, 194, 221, 225, 233, 236, 248, 259, 260, 264, 270, 274, 286, 288, 316, 389, 392, 420, 445, 448, 453, 481, 491, 514, 525, 534, 535, 538, 539], "appveyor": 434, "apr": [400, 416], "april": [398, 405, 425], "apt": 411, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 104, 105, 108, 109, 110, 112, 113, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 137, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 173, 174, 179, 180, 181, 186, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 287, 292, 296, 301, 305, 317, 323, 325, 337, 338, 353, 367, 369, 374, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 500, 501, 502, 504, 505, 506, 507, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 526, 527, 528, 529, 530, 533, 534, 542, 552, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581], "arakelian": 293, "arang": [118, 393, 457, 471, 475, 528], "arb": 489, "arbitrari": [199, 201, 202, 389, 401, 424, 437, 465, 479, 484, 489, 528, 529], "arbitrary_types_allow": [16, 84, 90, 104, 124, 405], "arbitrarytypemetadata": 405, "architectur": [410, 412], "archiv": [404, 494, 501], "arcsec": 176, "arctan": 392, "area": [82, 88, 105, 107, 152, 153, 168, 179, 180, 187, 194, 202, 204, 206, 378, 379, 389, 433, 435, 448, 453, 465, 473, 483, 493, 494, 521, 528, 529, 575], "areasc": [436, 438], "aren": [354, 378, 392, 397, 398, 409, 410, 412], "arf": [106, 107, 110, 197, 198, 201, 202, 453, 529], "arf_ob": 106, "arffil": 106, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 104, 109, 110, 124, 147, 148, 149, 153, 154, 155, 157, 160, 161, 162, 164, 165, 194, 195, 202, 219, 232, 244, 251, 252, 253, 328, 576], "arg_in_kwarg": 378, "argmax": 476, "argmin": 476, "argpars": [383, 576], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 101, 102, 104, 105, 108, 109, 110, 124, 125, 126, 128, 130, 133, 146, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 169, 179, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 209, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 285, 303, 305, 317, 323, 325, 326, 365, 366, 367, 371, 372, 373, 374, 375, 381, 384, 390, 393, 425, 426, 429, 431, 437, 443, 444, 445, 457, 461, 466, 467, 481, 483, 484, 487, 488, 492, 501, 514, 516, 527, 528, 529, 552, 576], "aris": [383, 394, 516], "arithmet": [219, 389, 439, 484, 485, 487, 544], "arjun": [436, 437], "arm": [33, 34, 38, 45, 433], "arm64": [410, 412], "armstrong": 437, "arnau": [431, 440, 441, 442, 443, 445], "around": [56, 141, 169, 192, 194, 204, 206, 317, 392, 393, 455, 473, 477, 481, 485, 493, 502, 516, 525, 528, 529], "arpit": 436, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 101, 102, 109, 110, 118, 123, 125, 126, 127, 130, 131, 133, 136, 141, 142, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 214, 218, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 266, 267, 268, 272, 273, 274, 275, 276, 285, 286, 288, 290, 296, 301, 305, 316, 317, 318, 332, 333, 334, 338, 371, 372, 377, 378, 391, 392, 396, 402, 405, 414, 424, 437, 440, 442, 444, 455, 456, 465, 466, 473, 475, 478, 479, 481, 482, 484, 486, 487, 489, 491, 493, 494, 502, 528, 529, 536, 561, 564, 577, 578], "array_lik": [102, 109, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 289, 295, 302], "array_shap": [442, 444], "arriba": [430, 433, 434], "arriv": [223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 383, 391, 423, 424, 425, 465, 575, 579], "arrow": 574, "arrowprop": 533, "arrowstyl": 533, "artefact": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "arthmet": 389, "articl": [135, 137, 144, 293, 301, 383, 450, 471], "artifact": [122, 194], "artifici": 465, "artist": [201, 224, 246, 533, 534], "arxiv": [64, 65, 179, 252, 253, 267, 268, 462, 477, 478, 559, 560], "as_arrai": [87, 91], "as_artist": [201, 202, 487, 529, 533, 534], "as_energy_tru": [191, 192, 201, 204], "as_plot_cent": [195, 198, 203, 475], "as_plot_edg": [195, 198, 203], "as_plot_label": [195, 198, 203], "as_plot_scal": 198, "as_plot_xerr": [195, 198, 203], "asanyarrai": 378, "ascii": [87, 91, 125, 378], "asid": 480, "asimov": 489, "asinh": 457, "asinha": 82, "ask": [379, 381, 383, 385, 392, 394, 395, 398, 404, 413, 470, 502, 516, 517, 576], "asmooth": [118, 119, 397, 424, 435, 438], "asmoothestim": 399, "asmoothmapestim": [119, 399, 424, 426, 429, 457, 516], "aspect": [381, 404, 517, 576, 581], "assert": [195, 197, 198, 203, 353, 354, 355, 381, 389, 401, 484], "assert_allclos": 378, "assert_equ": 378, "assert_nam": [195, 197, 198, 203], "assert_quantity_allclos": [378, 433], "assess": [453, 455, 476], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 103, 108, 109, 192, 262, 272, 374, 378, 387, 390, 393, 405, 407, 450, 469, 470, 479, 484, 487, 489, 501, 502, 528], "assist": 394, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 478, 502], "assoc2": [74, 75, 78, 502], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 478, "assoc_prob_lr": 478, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 87, 91, 100, 102, 105, 123, 132, 136, 137, 138, 139, 151, 152, 163, 166, 183, 184, 189, 202, 273, 296, 305, 378, 384, 394, 402, 403, 404, 405, 406, 443, 444, 449, 450, 451, 453, 457, 462, 478, 479, 480, 483, 484, 486, 487, 489, 493, 502, 513, 514, 516, 529, 578], "association_catalog": [67, 478], "association_nam": [67, 478], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 101, 122, 123, 125, 133, 134, 135, 140, 143, 144, 153, 165, 176, 190, 192, 193, 194, 196, 199, 203, 205, 206, 211, 268, 274, 277, 284, 332, 335, 378, 381, 390, 391, 393, 401, 402, 406, 414, 415, 448, 449, 450, 453, 455, 456, 459, 465, 466, 467, 469, 477, 482, 484, 487, 489, 492, 506, 512, 514, 521, 573, 578], "assumpt": [72, 95, 102, 105, 109, 110, 118, 132, 135, 144, 392, 402, 449, 521, 525, 577], "astri": 97, "astrisim": 391, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 126, 186, 193, 194, 196, 205, 206, 257, 275, 378, 379, 390, 397, 398, 402, 421, 430, 434, 438, 440, 444, 455, 477, 482, 484, 491, 505, 506, 508, 509, 510, 513, 575], "astro_dark_matt": [398, 447, 477, 490], "astromodel": 504, "astronom": [13, 392, 399, 437, 575], "astronomi": [11, 278, 377, 388, 392, 396, 408, 415, 436, 450, 453, 459, 463, 483, 491, 516, 525, 526, 573, 574, 575, 576, 577, 578, 580, 581], "astrophys": [6, 23, 309, 393, 516, 574, 575], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 102, 105, 109, 110, 115, 117, 118, 123, 125, 127, 129, 130, 133, 141, 142, 150, 152, 161, 163, 176, 190, 191, 192, 193, 194, 196, 197, 199, 201, 202, 203, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 237, 238, 240, 241, 243, 247, 249, 251, 252, 253, 254, 258, 261, 262, 263, 265, 266, 267, 268, 271, 273, 275, 276, 278, 287, 296, 303, 304, 305, 335, 354, 355, 364, 368, 369, 373, 377, 379, 380, 381, 383, 384, 385, 389, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 414, 415, 417, 421, 422, 423, 424, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 500, 501, 502, 506, 508, 509, 510, 512, 513, 514, 516, 518, 520, 523, 525, 526, 527, 528, 529, 533, 534, 535, 536, 537, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 577, 580], "astropy_healpix": 387, "astropy_help": [378, 419, 420, 421], "astropy_introduct": 420, "astropy_timeseri": 393, "astropy_vers": 378, "astropydeprecationwarn": 465, "astyp": [87, 91], "asymetr": [101, 453], "asymmetr": [122, 126, 127, 130, 131, 133, 134, 143, 396, 419, 425, 444, 453, 489, 500, 514, 534], "asymmetri": 482, "asymptot": [578, 579], "atmospher": [393, 410, 415, 491], "atnf": 437, "atol": [86, 100, 130, 198, 203, 353, 355, 378], "atol_ax": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206], "atom": 394, "atproduction_gamma": 26, "atreye": [390, 393, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 437, 438, 439, 440, 441, 442, 443, 444, 445], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 224, 232, 246, 262, 272, 389, 399, 442, 472, 481, 486, 487, 576], "attempt": [16, 84, 90, 104, 124, 381, 392, 395], "attenu": 449, "attr": 378, "attract": 398, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 178, 179, 180, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 286, 288, 305, 388, 390, 400, 405, 406, 419, 420, 423, 424, 425, 426, 429, 431, 433, 435, 437, 442, 443, 444, 451, 455, 465, 481, 483, 484, 485, 487, 502, 512, 528, 529, 578], "attributeerror": 378, "attrribut": 484, "aug": [391, 394, 395, 397, 416], "august": [385, 391, 394, 397, 463], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407], "authoris": 404, "authorship": 382, "auto": [77, 193, 194, 196, 205, 206, 379, 381, 389, 398, 424, 438, 481, 576], "autocorrel": 136, "autodiff": 396, "autogener": 398, "autograd": [389, 396], "autom": [11, 386, 394, 404, 407, 408, 431, 481, 576], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 104, 112, 113, 124, 126, 130, 133, 221, 225, 233, 236, 248, 259, 260, 264, 270, 274, 377, 378, 379, 381, 385, 386, 388, 389, 395, 398, 400, 404, 407, 418, 419, 425, 455, 463, 465, 481, 484, 576, 580], "automatis": 515, "autopep8": 378, "autoscal": [214, 215, 216, 217], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 101, 102, 105, 109, 110, 122, 123, 125, 126, 130, 131, 133, 134, 143, 146, 167, 173, 179, 180, 198, 211, 214, 216, 220, 221, 225, 226, 233, 236, 248, 250, 259, 260, 264, 270, 272, 274, 278, 329, 366, 378, 381, 384, 385, 386, 387, 389, 390, 391, 392, 395, 396, 398, 405, 408, 409, 410, 411, 412, 413, 419, 423, 424, 425, 429, 432, 436, 438, 440, 443, 445, 449, 453, 454, 457, 475, 480, 481, 483, 485, 487, 491, 492, 496, 500, 502, 504, 506, 507, 513, 515, 516, 518, 519, 520, 522, 530, 542, 574, 576, 578], "available_hdu": 88, "available_irf": 88, "available_method": [170, 179], "available_quant": [123, 125, 457, 480], "available_select": [173, 180], "available_stat_typ": 101, "averag": [19, 102, 105, 109, 110, 173, 180, 183, 184, 186, 187, 429, 449, 450, 453, 512], "averageaz": [465, 466], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 122, 173, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 287, 378, 379, 384, 385, 386, 388, 392, 396, 397, 400, 401, 403, 404, 406, 429, 431, 440, 442, 443, 453, 459, 485, 489, 513, 516, 525, 576], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 286, 288], "awar": [378, 383, 390, 398, 404], "ax": [16, 19, 20, 26, 66, 67, 83, 101, 102, 105, 109, 110, 111, 112, 113, 114, 116, 122, 123, 125, 127, 128, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 173, 180, 183, 184, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 286, 288, 365, 366, 370, 371, 372, 373, 374, 375, 378, 387, 397, 420, 424, 429, 435, 436, 437, 440, 443, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 500, 501, 502, 512, 514, 516, 518, 523, 525, 526, 527, 528, 533, 534, 535, 539, 542, 570, 571, 575], "ax1": [448, 457, 459, 463, 473, 485, 486], "ax2": [448, 457, 459, 463, 473, 485, 486], "ax3": [457, 463], "ax_crab_3fhl": 502, "ax_ebl": 542, "ax_excess": [450, 453], "ax_model": 542, "ax_residu": [101, 109, 110, 450, 453, 454, 455, 473, 500], "ax_s": [454, 500], "ax_spati": [102, 105, 109, 110], "ax_spectr": [102, 105, 109, 110], "ax_spectrum": [101, 109, 110, 450, 453, 454, 455, 473], "ax_sqrt_t": [450, 453], "axcols1": 484, "axcols2": 484, "axel": [387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "axes0": [193, 194, 196, 202, 205, 206], "axes_loc": [147, 148, 150, 153, 154, 155, 160, 162, 164, 206, 366], "axes_nam": [192, 193, 194, 196, 201, 202, 204, 205, 206], "axesimag": [366, 367], "axesn": [193, 194, 196, 202, 205, 206], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 101, 102, 105, 109, 110, 111, 112, 113, 114, 116, 118, 122, 123, 125, 126, 127, 129, 130, 133, 134, 137, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 246, 247, 249, 251, 252, 253, 254, 258, 261, 263, 265, 266, 267, 268, 271, 272, 273, 275, 276, 282, 286, 287, 288, 292, 293, 294, 296, 316, 317, 327, 366, 371, 372, 373, 374, 384, 387, 400, 402, 421, 424, 425, 426, 429, 431, 436, 438, 439, 440, 443, 448, 450, 453, 454, 455, 456, 458, 459, 461, 463, 465, 466, 467, 469, 471, 472, 475, 476, 478, 479, 482, 483, 484, 491, 492, 493, 500, 501, 502, 512, 514, 516, 520, 525, 528, 529, 571, 575], "axis0": 528, "axis1": 484, "axis2": 484, "axis_edg": 371, "axis_nam": [101, 102, 105, 109, 110, 123, 125, 137, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 467, 470, 471, 472, 479, 480], "axis_new": [125, 145, 471, 476], "axis_origin": 476, "axis_rgb": 373, "axis_tru": 463, "axisymmetr": 444, "axvlin": [456, 477, 488, 489], "axvspan": [202, 473], "az": [83, 85, 88, 94, 95, 378, 580], "azimuth": 492, "azur": 425, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 104, 124, 153, 211, 345, 378, 379, 392, 401, 404, 453, 464, 477, 478, 481, 484, 485, 487, 492, 502, 508, 512, 529], "b1509": 478, "b7": 475, "b_0": [533, 534], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 194, 317, 381, 388, 389, 392, 398, 453, 454, 456, 484, 487, 500, 576], "backend": [93, 101, 120, 126, 127, 130, 131, 133, 169, 210, 211, 212, 213, 284, 320, 325, 326, 377, 387, 389, 419, 438, 439, 443, 450, 451, 453, 454, 455, 461, 462, 463, 473, 475, 480, 481, 492, 500, 501, 516, 573, 574], "backend_default": [127, 130, 133], "background": [16, 67, 82, 83, 88, 93, 102, 103, 105, 106, 108, 109, 110, 113, 114, 118, 122, 123, 125, 132, 147, 148, 149, 159, 168, 170, 171, 173, 174, 175, 176, 178, 179, 180, 186, 226, 232, 272, 279, 286, 288, 297, 298, 299, 300, 302, 374, 378, 384, 387, 390, 391, 392, 394, 398, 399, 402, 410, 415, 418, 419, 420, 422, 423, 424, 425, 426, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 460, 461, 463, 466, 467, 469, 470, 471, 472, 473, 475, 478, 479, 481, 482, 484, 485, 489, 493, 494, 496, 501, 512, 514, 515, 574, 575, 576, 578, 579], "background2d": [148, 149, 159, 425, 432, 440, 442, 444, 519], "background3d": [88, 147, 159, 186, 384, 425, 429, 437, 438, 439, 482, 491, 519], "background_estim": 397, "background_interp_missing_data": 173, "background_map": [272, 389], "background_min": 146, "background_model": [102, 105, 109, 110, 133, 390, 391, 398, 400, 425, 458, 501, 519], "background_oversampl": [173, 180, 483], "background_pad_offset": 173, "background_r": [397, 479], "backgroundconfig": 16, "backgroundestim": [393, 423], "backgroundevalu": 389, "backgroundirf": [147, 148], "backgroundirfmodel": 400, "backgroundmodel": [390, 400, 401, 422, 424, 425, 426, 429], "backgroundtempl": 389, "backport": [385, 403, 407], "backround": 387, "backscal": 202, "backward": [383, 392, 401, 402, 403, 421, 480, 514], "bad": [86, 378, 392], "badli": 408, "balanc": 512, "band": [19, 20, 26, 68, 83, 89, 120, 123, 125, 128, 151, 152, 155, 158, 163, 166, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 384, 396, 397, 401, 402, 410, 418, 451, 453, 454, 462, 463, 464, 473, 477, 478, 487, 492, 494, 511, 512, 514, 574], "bandshdu": 484, "banner": 408, "bar": [15, 82, 87, 91, 102, 105, 109, 110, 118, 130, 133, 147, 148, 206, 211, 234, 294, 326, 372, 395, 429, 432, 433, 439, 444, 473, 489, 516, 549], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 286, 288, 304, 313, 314, 317, 323, 325, 327, 352, 365, 373, 378, 379, 381, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 401, 406, 408, 410, 411, 418, 420, 421, 423, 425, 426, 429, 431, 434, 435, 436, 437, 438, 444, 445, 449, 453, 455, 456, 458, 461, 462, 463, 464, 465, 467, 473, 476, 478, 480, 482, 484, 485, 487, 488, 489, 491, 492, 501, 502, 504, 513, 514, 516, 526, 528, 540, 550, 574, 575, 577, 578], "base_dir": [82, 87, 313, 491, 493, 494, 504], "baselin": [82, 83, 239, 491], "basement": 420, "basemodel": [16, 84, 90, 104, 124, 405], "baseradi": 247, "bash": [410, 412, 576], "basi": [383, 384, 394, 397, 407, 431, 433, 473, 477], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 105, 110, 125, 238, 381, 384, 388, 389, 390, 391, 392, 394, 398, 402, 405, 414, 426, 436, 438, 447, 450, 453, 455, 468, 470, 476, 477, 478, 485, 496, 502, 504, 506, 507, 514, 525, 528, 575, 576], "basicconfig": [16, 463, 498], "bayesian": 396, "bayesian_block": 476, "bayesian_edg": 476, "baysian": 387, "bb": [87, 91, 404], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [148, 152, 153, 154, 163, 448, 456, 469, 472, 482, 491], "becam": 385, "becaus": [16, 84, 90, 104, 124, 193, 194, 196, 200, 202, 205, 206, 378, 379, 381, 383, 385, 389, 390, 392, 393, 397, 401, 402, 405, 408, 429, 431, 450, 451, 454, 467, 471, 473, 483, 484, 485, 486, 491, 492, 493, 500, 501, 502, 512, 516, 576, 579], "becom": [378, 386, 388, 389, 392, 397, 405, 465, 471, 487, 516, 576, 579], "beeen": 445, "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 104, 122, 123, 124, 125, 165, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 305, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 409, 411, 425, 426, 429, 431, 432, 438, 439, 440, 441, 442, 443, 444, 445, 449, 454, 464, 471, 472, 473, 475, 480, 484, 487, 488, 491, 493, 500, 513, 528, 561], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 104, 123, 124, 193, 194, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 317, 373, 378, 379, 381, 383, 385, 386, 387, 388, 392, 393, 394, 396, 397, 403, 407, 408, 414, 432, 438, 449, 454, 456, 470, 471, 480, 481, 484, 487, 493, 496, 500, 552, 576], "beforevalid": 90, "begin": [52, 87, 91, 102, 109, 123, 125, 133, 398, 401, 404, 453, 455, 484, 487, 533, 538, 539, 543, 559, 578], "behav": [378, 388, 443, 458, 579], "behavior": [16, 84, 87, 90, 91, 95, 104, 124, 402, 428, 432, 443, 445], "behaviour": [353, 378, 400, 401, 426, 431, 437, 444, 471, 485, 492, 493, 512, 577], "behind": 475, "being": [122, 132, 194, 378, 383, 386, 392, 399, 402, 408, 455, 464, 476, 485, 505, 516, 529, 576], "belief": 489, "believ": [413, 489], "belong": [86, 402, 425], "below": [52, 53, 87, 91, 192, 196, 203, 204, 367, 368, 369, 373, 375, 379, 381, 382, 387, 388, 392, 394, 395, 398, 401, 402, 404, 405, 406, 408, 409, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 453, 457, 473, 478, 481, 483, 485, 487, 488, 489, 491, 492, 513, 516, 534, 578], "benchmark": [394, 404, 408], "benefit": 395, "benn": 394, "berg": 575, "berge2007": [392, 525, 526, 575], "bernet": 444, "besancon": 506, "besid": [122, 133, 392, 393, 402, 454, 455, 484, 492, 500, 501, 529], "best": [67, 71, 74, 75, 78, 80, 101, 123, 125, 126, 127, 130, 131, 141, 212, 213, 284, 286, 288, 371, 378, 381, 388, 391, 396, 404, 410, 412, 449, 451, 453, 454, 455, 458, 461, 464, 473, 478, 480, 481, 489, 500, 514, 516, 518, 542, 548, 551, 552, 556, 578, 579, 580], "best_fit_model": 455, "beta": [27, 28, 48, 211, 239, 240, 241, 263, 401, 403, 425, 449, 451, 455, 462, 478, 481, 544, 550, 551, 552, 557, 567], "better": [378, 381, 383, 384, 385, 386, 387, 391, 392, 397, 398, 399, 402, 419, 436, 437, 461, 462, 465, 473, 475, 481, 484, 485, 492, 512], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 105, 110, 120, 122, 123, 125, 127, 128, 130, 141, 142, 154, 160, 162, 163, 164, 166, 176, 190, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 218, 219, 222, 223, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 247, 249, 251, 252, 253, 254, 258, 261, 263, 265, 266, 267, 268, 271, 273, 275, 276, 278, 284, 302, 335, 368, 369, 376, 378, 379, 386, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 402, 403, 405, 406, 416, 426, 429, 432, 443, 448, 455, 457, 462, 464, 467, 472, 473, 476, 480, 481, 483, 484, 485, 486, 489, 492, 493, 502, 512, 514, 521, 522, 525, 534, 535, 575, 578, 580], "bewar": [273, 450, 471], "bexcub": 197, "bexpcub": [192, 193, 194, 196, 205, 206, 484], "beyond": [197, 392, 402, 405, 425, 483, 504], "bfg": 481, "bgstat": 435, "bi": [436, 439], "bia": [96, 150, 151, 155, 179, 437, 443, 483, 489, 520], "bias": [455, 577], "bias_energi": 150, "bias_perc": 179, "bibliographi": 575, "biederbeck": [406, 444], "big": [385, 388, 395, 407, 439, 492, 577, 579], "bigger": 194, "biggest": 397, "billion": 378, "bimod": 31, "bin": [19, 20, 26, 83, 86, 88, 102, 105, 108, 109, 110, 112, 113, 118, 120, 122, 123, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 153, 155, 158, 161, 163, 165, 166, 173, 175, 176, 177, 179, 181, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 280, 289, 295, 296, 302, 371, 373, 376, 384, 389, 390, 391, 392, 394, 397, 398, 402, 409, 410, 420, 421, 423, 424, 426, 428, 429, 431, 434, 435, 436, 437, 438, 443, 444, 445, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 512, 514, 516, 520, 523, 524, 574, 575, 576, 577, 579], "bin_cent": 473, "bin_edg": 473, "bin_volum": [197, 201, 204, 529], "bin_width": [195, 198, 203, 473], "binari": [204, 206, 386, 392, 395, 404, 408, 429], "binary_dil": [206, 485], "binary_erod": [206, 485], "binary_eros": [206, 429], "binary_structur": 204, "bincent": 296, "bind": 381, "binder": [386, 407, 437, 440, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "binlik": 125, "binned_likelihood": 126, "binneddataaxi": [420, 436], "binnedtimeseri": [125, 393], "bins_axi": 206, "binsiz": [16, 454, 458, 459, 461, 470, 500, 501], "binsize_irf": [16, 454, 458, 459, 461, 470, 500], "binsz": [102, 105, 109, 110, 111, 116, 152, 161, 163, 173, 176, 177, 181, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 394, 453, 463, 464, 465, 466, 469, 473, 477, 479, 482, 483, 484, 485, 487, 492, 493, 501, 523, 525, 526, 528, 529, 532, 534, 535, 536, 537], "binsz_irf": [102, 105, 109, 110, 114, 479, 483, 516], "binsz_irf_default": [102, 105, 109, 110, 483], "binsz_wc": [201, 202], "bintabl": [192, 193, 194, 196, 205, 206], "bintablehdu": [83, 86, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 197, 198, 204, 205, 206, 465, 484, 512], "binwis": 445, "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [83, 141, 379, 381, 385, 386, 392, 396, 397, 405, 473, 484, 529], "bitbucket": 494, "bitpix": 484, "bkg": [16, 82, 87, 88, 102, 106, 107, 109, 110, 147, 148, 149, 179, 186, 232, 400, 424, 426, 431, 448, 453, 454, 458, 459, 461, 462, 465, 466, 469, 473, 479, 482, 483, 486, 491, 493, 494, 500, 501, 512, 519, 575, 577, 578, 579], "bkg_": [102, 109], "bkg_2d": [87, 147], "bkg_3d": [82, 87, 148, 491, 494], "bkg_err": 473, "bkg_maker": [400, 450, 453, 455, 463, 471, 475, 525], "bkg_model": [390, 400, 406, 461, 465, 466, 469, 486, 501, 536], "bkg_ob": 106, "bkg_sy": 132, "bkg_syst_fract": [132, 448], "bkg_syst_fraction_sensit": 122, "bkgfile": 106, "black": [109, 110, 367, 368, 375, 396, 438, 440, 448, 473, 477, 483, 488, 525, 561], "blackground": 448, "blanch": [437, 438], "blanklin": [238, 414, 514, 529], "blazar": [301, 449, 475], "blind": [440, 516], "bll": 502, "blob": 417, "block": [379, 381, 384, 391, 398, 408, 417, 437], "block_reduc": 438, "blue": [101, 102, 105, 109, 110, 368, 449, 453, 459, 461, 464, 488, 525, 561], "blur": 33, "board": [387, 398], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 378, "boj41vmi": 475, "boller": 476, "boni": [429, 432], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 122, 123, 124, 125, 126, 130, 131, 133, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 173, 180, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 272, 273, 274, 287, 302, 305, 314, 317, 318, 335, 341, 344, 346, 347, 349, 375, 378, 392, 463, 478, 483, 484], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 123, 126, 127, 130, 131, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 211, 224, 246, 262, 394, 426, 461, 478, 484, 485, 486], "boost": 465, "bootstrap": [87, 91], "border": 91, "bose": 420, "bot": 384, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 150, 151, 152, 158, 163, 166, 190, 193, 194, 196, 198, 200, 201, 202, 204, 205, 206, 214, 216, 378, 383, 384, 389, 390, 391, 392, 393, 398, 403, 407, 419, 423, 425, 426, 429, 432, 454, 455, 465, 469, 479, 480, 484, 485, 486, 488, 489, 513, 514, 516, 528, 529, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 578], "bother": 458, "bottom": [398, 400, 449, 465, 470, 471, 472, 476, 478], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 105, 109, 110, 123, 125, 126, 127, 130, 198, 201, 203, 211, 218, 219, 222, 223, 224, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 246, 247, 249, 251, 252, 253, 254, 258, 261, 263, 265, 266, 267, 268, 271, 272, 273, 275, 276, 300, 387, 484, 489], "boundari": [198, 204, 274, 406, 434, 445, 481, 487, 528], "boundary_mask": [204, 485], "boundary_typ": 198, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 378, 482], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 102, 105, 127, 128, 201, 204, 206, 337, 338, 387, 392, 396, 402, 436, 485, 487, 529], "bpl": [218, 401, 487], "bpwl_norm": 401, "bracket": [150, 211, 441, 443], "brake": 51, "branch": [378, 381, 385, 392, 403, 408, 417], "branchnam": 378, "bratio": 504, "break": [218, 263, 384, 392, 394, 403, 423, 424, 425, 543, 557], "brent": 457, "brentq": [19, 20, 26, 125, 211, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 285], "breviti": [461, 516], "brief": 580, "briefli": [493, 494], "bright": [68, 127, 262, 277, 459, 470, 471, 485, 487, 510, 525], "brighter": 465, "brightest": 478, "brigitta": [395, 419, 421, 423, 425, 434, 435, 436, 437, 438, 439, 440, 445], "bring": 383, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 193, 194, 196, 199, 202, 205, 206, 262, 317, 445, 466, 482, 484, 528], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [218, 263, 404, 447, 475, 530, 562], "brokenpowerlaw": 401, "brokenpowerlawspectralmodel": [257, 263, 401, 426, 487, 543], "brought": 445, "brown": [137, 476], "brown2013": 137, "brows": [87, 91, 379, 414, 502], "browser": [87, 91, 381, 408, 414, 434, 437, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 498, 500, 501, 502, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "bruno": [404, 421, 423, 426, 429, 432, 436, 437, 438, 440, 441, 442, 443, 444, 445], "br\u00fcgge": [437, 438], "bsd": 404, "bst": [87, 91], "buchner": 429, "budget": 516, "buffer": 356, "bug": [378, 381, 384, 385, 403, 404, 407, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442], "bugfix": [385, 387, 403, 436, 437], "build": [16, 84, 90, 104, 124, 192, 226, 378, 384, 385, 386, 391, 392, 394, 398, 402, 403, 404, 405, 407, 425, 431, 440, 445, 457, 461, 473, 483, 485, 513, 516, 576], "build_doc": [342, 379, 381, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 540, 548, 564], "built": [10, 180, 226, 345, 362, 377, 378, 379, 389, 390, 392, 394, 395, 397, 405, 408, 415, 438, 443, 478, 486, 492, 496, 512], "builtin": 502, "bullet": 383, "bump": [392, 436], "bunch": [103, 108, 379, 576], "bundl": [101, 102, 105, 109, 110, 387, 390, 408, 430, 438, 463, 479, 483, 512, 529, 574, 575], "bunit": [364, 438, 484], "bureaucrat": 383, "burkert": [17, 504], "burst": 476, "butterfli": [437, 481, 502], "button": [440, 484], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 90, 104, 124], "byte": [16, 84, 87, 90, 91, 104, 124, 323, 356, 378], "bytearrai": [16, 84, 90, 104, 124, 323], "bytestr": [87, 91], "b\u00fchler": 417, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 199, 209, 228, 266, 289, 295, 305, 345, 377, 378, 395, 410, 411, 413, 430, 437, 453, 459, 473, 475, 477, 481, 489, 491, 492, 504, 528, 547, 558, 576, 577, 579], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c5u": 475, "c7": 101, "c_": 209, "c_0": [191, 192, 201, 204], "c_i": [191, 192, 201, 204], "c_n": [191, 192, 201, 204], "cabot": 445, "cach": [87, 88, 91, 100, 102, 105, 109, 110, 272, 313, 314, 387, 388, 390, 397, 400, 408, 422, 426, 429, 444], "cahil": 431, "cal_gen_92_002": [150, 198], "cal_gen_92_002_summari": 150, "calcul": [13, 15, 19, 20, 26, 96, 105, 110, 136, 137, 138, 139, 179, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 258, 263, 265, 266, 267, 268, 271, 274, 275, 291, 293, 294, 302, 304, 327, 360, 368, 369, 388, 391, 419, 425, 429, 430, 431, 437, 442, 444, 448, 473, 476, 477, 480, 489, 500, 501, 504, 516, 575, 579], "caldb": [82, 148, 150, 152, 153, 154, 163, 198, 431, 448, 456, 465, 466, 469, 472, 482, 491], "calendar": [403, 407], "calib_vers": [492, 502], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 101, 102, 104, 105, 109, 110, 124, 136, 137, 138, 139, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 175, 191, 192, 201, 204, 211, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 233, 234, 236, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 255, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 317, 329, 350, 356, 364, 367, 375, 378, 379, 381, 383, 384, 387, 390, 391, 392, 393, 394, 396, 398, 400, 402, 404, 406, 408, 410, 414, 425, 429, 443, 453, 454, 463, 478, 479, 480, 481, 483, 484, 487, 492, 494, 500, 501, 502, 512, 516, 525, 526, 527, 528, 529, 576, 577, 578, 579], "callabl": [16, 45, 84, 90, 104, 124, 280], "callback": [169, 576], "caller": [378, 389], "camera": [472, 482, 483], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 102, 104, 105, 108, 109, 110, 114, 118, 122, 123, 124, 125, 130, 131, 133, 134, 141, 143, 148, 153, 161, 163, 166, 170, 176, 179, 191, 192, 193, 194, 196, 198, 199, 201, 202, 203, 204, 205, 206, 208, 211, 215, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 233, 234, 236, 238, 240, 241, 243, 246, 247, 248, 249, 251, 252, 253, 258, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 285, 287, 292, 305, 317, 318, 323, 326, 335, 354, 356, 371, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 421, 423, 425, 426, 429, 431, 432, 436, 437, 438, 439, 440, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 500, 501, 502, 504, 506, 507, 512, 513, 514, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 550, 552, 561, 571, 573, 574, 575, 576, 577, 578, 579], "candel": 226, "candid": [403, 431, 478], "candl": [278, 575], "cannot": [16, 67, 84, 87, 90, 91, 95, 104, 112, 113, 123, 124, 125, 208, 295, 345, 375, 381, 391, 392, 443, 482, 486, 487, 514, 529], "cap": [51, 54], "capabl": [388, 492, 504], "capsiz": 489, "captur": [378, 394], "car": [102, 105, 109, 110, 173, 204, 205, 206, 224, 246, 392, 421, 463, 482, 483, 484, 501, 502], "card": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 150, 151, 152, 158, 163, 166, 193, 194, 196, 200, 202, 205, 206, 484], "care": [123, 125, 305, 378, 387, 394, 403, 450, 455, 461, 484, 576], "carefulli": [404, 465, 466, 489], "carina": [33, 38], "carlo": [396, 521, 575], "carri": [393, 401, 403, 405, 429, 451, 501], "carr\u00e9": 204, "cartesian": [41, 46, 194, 205, 206, 308, 310, 442, 502, 528], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 150, 169, 181, 192, 194, 200, 201, 204, 206, 211, 214, 216, 236, 247, 270, 272, 274, 285, 295, 318, 335, 373, 378, 379, 381, 383, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 410, 418, 419, 422, 425, 431, 432, 437, 443, 444, 448, 450, 453, 454, 455, 456, 458, 459, 461, 465, 466, 469, 470, 472, 473, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 494, 496, 500, 502, 511, 514, 515, 516, 526, 529, 533, 534, 535, 538, 539, 543, 552, 559, 574, 576, 578], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [102, 105, 109, 110, 173, 290, 295, 378, 390, 429, 456, 458, 461, 469, 472, 479, 483, 486, 489, 500, 501, 512, 575], "cash1979": [575, 578], "cashcountsstatist": [414, 444, 576, 578], "cast": 91, "cat": [66, 67, 79, 386, 408, 436, 437, 451, 478, 487, 511, 575, 576], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 122, 126, 392, 398, 417, 421, 423, 425, 429, 430, 431, 434, 435, 436, 437, 438, 440, 444, 445, 447, 449, 451, 457, 462, 479, 487, 490, 492, 496, 506, 540, 574, 575], "catalog_3fgl": 451, "catalog_3fhl": [451, 478], "catalog_3fhl_bright": 478, "catalog_4fgl": 478, "catalog_4fgl_roi": 478, "catalog_gammacat": [451, 478], "catalog_hgp": 478, "catalog_registri": [451, 478, 485], "catalogimageestim": 438, "catalogu": [78, 429, 436], "catch_warn": 516, "categori": [378, 389, 402, 429, 485, 487, 530], "caus": [385, 392, 438, 441, 516], "cautious": 464, "caveat": [211, 301, 444, 534], "cax": 482, "cb98": 48, "cbar": 366, "cbar_kw": 372, "cbarlabel": 372, "cc": [387, 392, 394, 397, 399, 401, 404, 406], "ccube": [192, 193, 194, 196, 197, 198, 204, 205, 206, 484], "cd": [378, 379, 381, 394, 410, 411, 412], "cdelt": [204, 206], "cdelt1": 484, "cdelt2": 484, "cdf": [327, 391, 465, 481], "cdot": [51, 52, 53, 54, 102, 109, 251, 266, 401, 487, 512, 533, 538, 539, 543, 546, 547, 554, 555, 557, 558, 559, 560, 565, 566, 567, 569, 577], "celesti": [484, 528, 533, 537, 580], "celfix": 540, "cell": [386, 414, 440, 462, 473, 484, 491, 492, 502], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 102, 105, 109, 110, 112, 113, 123, 125, 127, 128, 129, 133, 150, 151, 152, 153, 154, 155, 158, 162, 163, 164, 166, 173, 176, 177, 179, 180, 181, 183, 184, 186, 187, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 220, 221, 224, 225, 233, 236, 246, 248, 250, 259, 260, 262, 264, 270, 272, 274, 307, 311, 337, 378, 379, 392, 394, 401, 402, 419, 420, 429, 431, 444, 448, 450, 453, 455, 456, 457, 458, 459, 461, 463, 465, 466, 467, 471, 472, 473, 475, 477, 482, 483, 484, 485, 486, 487, 491, 492, 501, 502, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 533, 534, 537], "center_coord": [191, 192, 197, 201, 204], "center_pix": [191, 192, 201, 204], "center_ski": 529, "center_skydir": [191, 192, 201, 204, 483, 484, 492, 493, 523, 525, 526], "centr": [477, 485, 504], "central": [390, 399, 451, 502], "cern": 504, "certain": [50, 83, 87, 91, 211, 292, 377, 392, 394, 396, 402, 448, 477, 483, 484, 492, 511, 529], "certainli": 381, "certif": 404, "certifi": 404, "cfa": [211, 481], "cff": 407, "cg": 508, "ch": 53, "chain": [169, 391, 394, 423, 483, 516, 526, 575], "chainer": 396, "chakraborti": [435, 436], "challeng": [385, 387, 391, 436, 459, 461, 463, 491], "chanc": 383, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 104, 123, 124, 125, 192, 201, 204, 218, 219, 222, 226, 228, 229, 230, 234, 238, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 353, 363, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 400, 402, 403, 404, 407, 408, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 435, 436, 437, 438, 439, 441, 446, 455, 456, 457, 463, 465, 466, 470, 475, 476, 479, 480, 481, 485, 487, 489, 491, 500, 512, 516, 523, 525, 529, 540, 548, 576], "changelog": [378, 407, 430, 438], "channel": [19, 20, 26, 377, 380, 381, 395, 437, 466, 477, 484, 494, 504], "channel0": 504, "channel1": 504, "channel_registri": [19, 20, 26], "chapter": 477, "charact": [87, 91, 378, 486], "character": [294, 402, 465], "characterist": [21, 25, 27, 51, 52, 53, 54, 137, 292, 389, 443, 476, 575], "charg": [404, 552], "chatti": [378, 463], "cheat": 413, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 102, 105, 106, 109, 110, 123, 125, 150, 151, 152, 158, 163, 166, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 215, 217, 224, 246, 262, 301, 352, 354, 381, 394, 400, 404, 407, 408, 410, 411, 412, 415, 424, 429, 437, 451, 469, 475, 482, 496, 504, 516, 520, 529, 573, 576, 577], "check_limit": [214, 215, 216, 217], "check_random_st": 378, "check_tutorials_setup": [448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "checker": [435, 438], "checklist": 408, "checkout": [378, 381, 420, 461, 465, 487], "checksum": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 150, 151, 152, 158, 163, 166, 193, 194, 196, 200, 202, 205, 206, 212, 224, 246, 341, 344, 347, 444, 462, 492], "chen": 438, "cherenkov": [153, 391, 410, 415, 450, 453, 459, 470, 483, 491, 493, 525, 526, 575], "cherri": [378, 385, 392, 403], "chi": [291, 393, 577, 578, 579], "chi2": [101, 135, 144, 390, 420, 453, 464, 472, 481, 512, 578], "chi2assym": 423, "child": 388, "children": [461, 469, 484, 500, 501], "chime": 381, "chisq": 291, "chisquar": 291, "chmod": 576, "choic": [136, 391, 395, 397, 404, 453, 454, 456, 458, 481, 493, 500, 517, 573, 576], "choos": [45, 77, 191, 192, 195, 197, 198, 201, 204, 275, 319, 390, 392, 394, 398, 410, 412, 429, 451, 453, 457, 461, 463, 472, 479, 481, 483, 484, 486, 487, 488, 492, 501, 516, 576], "chose": [465, 492, 493, 578, 580], "chosen": [26, 150, 163, 166, 192, 193, 194, 202, 205, 206, 224, 233, 246, 378, 381, 393, 394, 397, 454, 471, 483, 484, 488, 489, 493, 500, 514, 524, 525, 529], "christoph": [383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 417, 418, 419, 420, 421, 422, 423, 424, 430, 433, 434, 435, 436, 437, 438, 439], "chrome": [87, 91], "chromei": 431, "chunk": [152, 163, 166], "chunk_siz": [152, 163, 166], "ci": [378, 381, 385, 404, 408, 423, 429, 431, 434, 440], "circl": [83, 181, 375, 379, 392, 431, 453, 463, 472, 477, 483, 485, 488, 491, 501, 502, 513, 523, 525, 526, 529], "circle_area": 379, "circleannulusskyregion": [259, 260, 525], "circledast": 512, "circlepixelregion": 392, "circleskyregion": [102, 105, 109, 110, 175, 176, 180, 204, 225, 379, 392, 448, 450, 453, 455, 456, 459, 461, 463, 465, 466, 471, 475, 477, 479, 483, 485, 486, 501, 523, 525, 526, 529], "circular": [91, 102, 105, 180, 192, 194, 204, 389, 397, 399, 450, 455, 479, 488, 525, 529], "circumv": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "cirelli": [26, 504], "citat": 407, "cite": [381, 404], "cl": [16, 84, 90, 102, 104, 109, 124, 405], "clabel": 481, "clang": 414, "clarif": 383, "clarifi": [402, 443], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 286, 288, 313, 314, 317, 325, 327, 352, 365, 381, 384, 387, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 406, 410, 414, 417, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 448, 451, 453, 454, 455, 456, 457, 458, 459, 463, 465, 466, 469, 470, 473, 478, 479, 480, 481, 482, 483, 484, 487, 489, 491, 492, 493, 500, 502, 507, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 524, 526, 527, 528, 529, 530, 552, 561, 573, 574, 575, 576, 581], "class1": 478, "class2": 478, "classic": [387, 396, 410, 419, 450, 453, 459, 463, 479, 483, 514, 516, 525, 526, 575, 578], "classifi": 493, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 101, 102, 104, 105, 109, 110, 123, 124, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 405], "classproperti": 429, "classvar": [16, 84, 90, 104, 124], "claudio": [442, 444, 445], "claus": [378, 404], "clean": [378, 379, 381, 386, 387, 392, 394, 396, 417, 419, 420, 421, 422, 423, 424, 425, 426, 429, 436, 437, 438, 439], "cleaner": 440, "cleanup": [385, 397, 408, 417, 422, 423, 428, 429, 430, 434, 435, 437, 445], "clear": [92, 100, 200, 246, 378, 383, 385, 389, 392, 393, 397, 398, 399, 437, 464, 580], "clearer": 422, "clearli": [137, 378, 383, 384, 392, 395, 403], "cli": [11, 394, 439, 574], "click": [377, 394, 395, 414, 422, 437, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 576], "clip": [19, 20, 26, 191, 192, 195, 197, 198, 201, 203, 204, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 274, 275, 317, 422, 423, 457], "clockwis": [225, 233, 236, 533], "clone": [381, 411, 438], "close": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 274, 353, 354, 355, 387, 392, 407, 432, 443, 444, 445, 481, 561], "closer": 502, "closest": [118, 122, 126, 130, 133, 192, 193, 194, 196, 202, 205, 206, 480, 485, 514], "cloud": [408, 496], "cluster": [6, 96, 303, 304, 391, 443, 444, 447, 490, 496, 513, 516], "clutter": [461, 516], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 101, 125, 131, 133, 218, 222, 228, 230, 234, 241, 244, 251, 253, 262, 263, 266, 267, 268, 277, 363, 389, 401, 449, 450, 451, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 469, 471, 472, 473, 477, 478, 480, 481, 487, 489, 491, 492, 500, 502, 509, 510, 514, 516, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575], "cm2": [51, 54, 67, 107, 125, 142, 153, 206, 278, 363, 448, 449, 451, 453, 454, 456, 457, 461, 462, 463, 465, 466, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 484, 486, 487, 489, 492, 500, 501, 502, 514, 529, 545, 548, 551, 556, 561], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 477], "cm5": 477, "cmap": [102, 105, 109, 110, 368, 369, 455, 461, 477, 484, 486, 492, 493, 500, 501, 525], "cmb": 552, "co": [53, 199, 403, 404, 448, 533, 534, 535], "coadd": [193, 194, 196, 202, 205, 206], "coars": 479, "coarser": [198, 203, 479], "codaci": 408, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 150, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 373, 381, 382, 383, 385, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 411, 414, 417, 420, 421, 423, 424, 425, 426, 429, 431, 434, 435, 436, 437, 438, 440, 443, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 504, 516, 523, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 576], "codebas": [379, 395, 417, 436, 438], "codemeta": 431, "codespel": 429, "codestyl": 381, "coeffici": [128, 239, 243, 542], "coerce_numbers_to_str": 104, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coher": 445, "coincid": 476, "col": [87, 91, 429], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 372, "collabor": [77, 368, 369, 383, 385, 387, 391, 431, 464, 492, 575], "colleagu": [381, 576], "collect": [200, 246, 378, 380, 405, 408, 436, 437, 454, 479, 486, 504, 513, 517, 521, 575, 580], "collis": 50, "colnam": [87, 91, 193, 194, 196, 202, 205, 206, 492, 502], "color": [101, 109, 110, 147, 148, 206, 367, 368, 369, 372, 375, 379, 448, 449, 451, 453, 454, 455, 456, 457, 459, 461, 463, 464, 467, 470, 473, 477, 480, 481, 483, 486, 488, 489, 516, 525, 529, 533, 534, 552, 561], "colorbar": [125, 147, 148, 150, 153, 154, 155, 160, 161, 162, 164, 206, 366, 372, 475, 481, 484], "colorblind": 516, "colorblind10": 516, "colormap": [367, 368, 369, 417, 430, 502], "colormap_hess": [399, 581], "colormap_milagro": 581, "colour": 440, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 103, 108, 123, 125, 128, 141, 147, 148, 150, 174, 193, 194, 195, 196, 197, 198, 202, 203, 205, 206, 273, 294, 303, 348, 349, 350, 351, 371, 372, 375, 376, 378, 391, 393, 402, 440, 443, 444, 448, 465, 466, 473, 478, 484, 487, 491, 513, 516], "column_nam": 482, "column_prefix": 198, "columnclass": [87, 91], "columnspac": 375, "com": [135, 137, 144, 301, 332, 333, 345, 381, 398, 407, 408, 411, 491], "combin": [99, 101, 102, 105, 109, 110, 134, 143, 145, 179, 187, 193, 194, 196, 201, 202, 205, 206, 219, 262, 378, 384, 388, 389, 390, 391, 392, 393, 398, 401, 410, 422, 437, 443, 445, 451, 456, 461, 462, 469, 472, 479, 481, 482, 483, 484, 485, 487, 493, 501, 502, 504, 506, 516, 523, 528, 544, 574, 575], "combine_flux_map": [143, 445], "combine_significance_map": 144, "combined_ev": 513, "combining_and_defin": [448, 456, 458, 461, 463, 469, 472, 491], "come": [69, 381, 384, 385, 386, 387, 388, 392, 393, 394, 395, 397, 398, 403, 405, 407, 408, 425, 426, 429, 438, 439, 443, 453, 461, 469, 487, 491, 500, 576], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 478], "command": [6, 13, 94, 101, 125, 154, 160, 162, 164, 377, 379, 381, 386, 387, 389, 394, 395, 408, 409, 410, 411, 412, 413, 419, 423, 434, 437, 438, 440, 465, 515, 574], "commensur": 206, "comment": [125, 378, 379, 383, 387, 391, 392, 394, 395, 397, 399, 401, 403, 404], "commit": [378, 381, 386, 392, 403, 404, 416, 417, 440], "committe": [383, 385, 403, 404], "commod": 404, "common": [95, 377, 378, 379, 381, 383, 384, 392, 394, 398, 399, 401, 402, 404, 411, 413, 414, 429, 431, 454, 455, 467, 478, 482, 485, 487, 500, 501, 504, 511, 514, 515, 529, 534, 576], "common_irf_head": 482, "commonli": [29, 83, 392, 396, 438, 467, 504, 573, 574, 576, 578, 581], "commun": [378, 394, 400, 404, 407, 409, 415, 494], "comp": 478, "compact": [16, 84, 87, 90, 91, 104, 124], "compar": [87, 91, 126, 127, 130, 131, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206, 211, 284, 378, 392, 395, 398, 426, 442, 443, 448, 449, 450, 453, 457, 461, 464, 467, 469, 471, 475, 478, 481, 483, 489, 492, 500, 511, 575, 577], "comparison": [86, 87, 91, 100, 130, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 335, 434, 506], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 193, 194, 196, 205, 206, 232, 383, 385, 389, 392, 401, 403, 405, 406, 414, 417, 419, 421, 438, 444, 445, 484, 528], "compil": [381, 430], "complain": 381, "complaint": 396, "complement": 398, "complementari": [101, 134, 143, 453], "complet": [13, 16, 84, 90, 104, 124, 335, 378, 384, 388, 389, 390, 391, 392, 395, 396, 398, 402, 403, 404, 411, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 434, 435, 436, 437, 438, 439, 461, 466, 481, 488, 496, 516, 521], "complex": [378, 379, 384, 388, 392, 393, 394, 400, 402, 414, 445, 450, 453, 463, 466, 472, 476, 479, 484, 485, 487, 488, 492, 525], "complianc": [404, 440], "compliant": [193, 194, 196, 205, 206, 444, 575], "complic": [392, 529], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 102, 103, 105, 108, 109, 110, 130, 137, 165, 167, 201, 224, 246, 247, 262, 277, 389, 390, 391, 394, 400, 401, 419, 423, 425, 429, 437, 438, 449, 454, 455, 456, 458, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 475, 478, 479, 480, 486, 487, 491, 492, 500, 501, 504, 512, 514, 516, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575], "component_1": 389, "component_2": 389, "component_class": 478, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 384, 404], "composit": [57, 70, 80, 316, 404, 436], "compound": [201, 208, 219, 336, 340, 392, 401, 447, 449, 467, 530, 562], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 431], "compoundpixelregion": 340, "compoundskymodel": 389, "compoundskyregion": [208, 336, 340], "compoundsourcemodel": 389, "compoundspectralmodel": [257, 401, 443, 449, 487, 492, 542, 544, 548, 551, 553, 556, 561], "compress": 386, "compris": 493, "compromis": [378, 383, 391, 489], "compton": [247, 425, 552], "compulsori": [445, 487], "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 101, 102, 104, 105, 109, 110, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 179, 180, 182, 185, 186, 187, 188, 190, 192, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 207, 211, 218, 219, 222, 224, 226, 228, 229, 230, 234, 238, 240, 241, 243, 246, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 273, 275, 277, 278, 284, 285, 286, 288, 291, 292, 293, 294, 296, 300, 301, 304, 308, 309, 312, 378, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 406, 408, 410, 411, 415, 417, 419, 420, 421, 422, 425, 426, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 450, 455, 457, 461, 462, 466, 467, 470, 471, 473, 476, 477, 479, 480, 483, 486, 487, 488, 489, 492, 493, 494, 500, 502, 504, 512, 514, 516, 521, 525, 552, 574, 575, 576, 577, 578, 579, 580], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 211, 391, 392, 512], "compute_chisq": 436, "compute_differential_jfactor": 23, "compute_errn": [286, 288, 440, 578], "compute_errp": [286, 288, 578], "compute_flux_doubl": 137, "compute_fpp": 138, "compute_fvar": [139, 293], "compute_jfactor": [23, 477], "compute_lightcurve_doublingtim": 476, "compute_lightcurve_fpp": 476, "compute_lightcurve_fvar": 476, "compute_lima_map": 425, "compute_npr": 391, "compute_upper_limit": [286, 288], "computedfieldinfo": [16, 84, 90, 104, 124], "con": [378, 394], "concaten": [83, 86, 92, 195, 198, 390, 394, 400, 443, 484], "concentr": 337, "concept": [16, 84, 90, 104, 124, 398, 399, 405, 415, 477, 484, 517], "conception": [391, 400], "concern": [381, 383, 392, 394, 395, 397, 399, 401, 404, 429, 439, 493, 578], "conclud": 387, "concret": [16, 84, 90, 104, 124, 395, 398], "conda": [377, 381, 385, 386, 395, 398, 403, 407, 408, 410, 411, 412, 413, 414, 419, 421, 437, 438, 576], "condit": [52, 53, 146, 198, 215, 217, 224, 246, 402, 406, 426, 445, 448, 453, 456, 466, 478, 485, 486, 488, 493, 512, 521], "conduct": [440, 472], "cone": [91, 392, 454, 488, 500, 501, 516], "conesearch": 394, "conf": [87, 91, 378, 379, 408, 420, 435], "conf_1d": 470, "conf_3d": 470, "conf_max": [214, 216], "conf_min": [214, 216], "confid": [122, 211, 214, 216, 286, 288, 389, 396, 420, 425, 439, 575, 578], "confidence_opt": [211, 480], "config": [15, 16, 84, 90, 104, 124, 377, 379, 384, 386, 387, 394, 395, 398, 405, 410, 412, 422, 423, 424, 429, 437, 454, 461, 500, 573], "config_dict": 500, "config_joint": 461, "config_paramet": [118, 120, 121, 122, 126, 127, 129, 130, 131, 132, 133], "config_stack": 461, "config_str": 16, "configdict": [16, 84, 90, 104, 124], "configpars": 435, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 104, 109, 110, 118, 120, 121, 122, 124, 126, 127, 129, 130, 131, 132, 133, 325, 378, 379, 381, 387, 389, 393, 394, 398, 399, 405, 408, 414, 422, 424, 425, 429, 431, 440, 443, 444, 453, 455, 457, 463, 465, 466, 475, 491, 496, 515, 516, 521, 575, 576], "confirm": 381, "conflict": [87, 91, 378, 381, 404], "confluenc": 494, "conform": [16, 84, 90, 104, 124, 484], "confus": [378, 379, 384, 397], "connect": [388, 453, 467, 469, 485, 501, 573], "consant": [193, 194, 196, 202, 205, 206], "consciou": 383, "consecut": [176, 335, 378, 403], "consensu": [383, 404], "consent": 378, "consequ": [404, 466, 529], "conserv": [512, 537], "consid": [19, 20, 59, 96, 173, 180, 183, 184, 186, 187, 194, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 284, 374, 383, 384, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 404, 406, 450, 453, 455, 461, 465, 466, 476, 482, 485, 513, 516, 521, 579], "consider": [394, 419, 429, 437, 461], "consist": [74, 91, 95, 123, 125, 151, 152, 163, 166, 193, 194, 196, 205, 206, 233, 236, 378, 388, 389, 391, 392, 393, 398, 405, 422, 423, 424, 425, 426, 433, 437, 438, 440, 442, 443, 444, 454, 455, 456, 457, 464, 469, 472, 481, 483, 484, 487, 489, 500, 550, 552, 577], "consol": [378, 576], "consortium": [405, 491], "const": [220, 221, 222, 223, 401, 466, 487, 545, 563], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 401, "constant": [50, 51, 52, 53, 102, 109, 118, 153, 193, 194, 196, 202, 204, 205, 206, 220, 221, 222, 223, 225, 237, 239, 334, 391, 392, 397, 437, 447, 470, 492, 509, 512, 530, 541, 562, 572, 575, 579], "constant_model": 563, "constantmodel": 439, "constantnormspectralmodel": 401, "constantspatialmodel": [256, 401, 487, 492, 532], "constantspectralmodel": [257, 401, 466, 487, 545], "constanttemporalmodel": [269, 401, 422, 487, 563], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 479, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 404, 449, 458, 462, 483, 489, 523], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 516], "construct": [16, 84, 90, 104, 124, 198, 240, 241, 343, 529, 575], "constructor": [191, 192, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 443, 501, 527], "consult": 413, "consum": [481, 516], "contact": [380, 385, 387, 404, 413, 415, 418, 419, 420, 434, 437], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 108, 109, 110, 112, 113, 123, 124, 125, 133, 134, 135, 136, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 175, 178, 180, 185, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 292, 303, 304, 371, 373, 375, 376, 378, 381, 382, 384, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 404, 407, 408, 415, 419, 423, 424, 425, 426, 428, 429, 431, 432, 435, 436, 437, 438, 439, 443, 444, 448, 451, 453, 454, 455, 458, 461, 462, 465, 466, 469, 470, 471, 473, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 504, 505, 507, 512, 513, 514, 516, 520, 524, 525, 528, 529, 530, 573, 575, 577, 578, 579], "containment_correct": [16, 102, 105, 180, 448, 453, 454, 455, 458, 459, 461, 463, 470, 471, 473, 475, 479, 483, 500], "containment_fract": 96, "containment_radiu": [154, 160, 162, 163, 164, 166, 448, 479, 482, 485], "containment_radius_map": [163, 166], "contains_pix": [191, 192, 201, 204], "contains_wcs_pix": 201, "contamin": [67, 459, 478, 485, 525], "content": [84, 90, 104, 124, 125, 193, 194, 196, 202, 205, 206, 341, 344, 378, 381, 383, 387, 393, 398, 405, 408, 423, 432, 437, 450, 484, 485, 491, 493, 513, 516, 527, 528], "content_typ": [16, 84, 90, 104, 124], "context": [16, 84, 87, 90, 91, 104, 124, 215, 217, 224, 246, 325, 356, 378, 393, 404, 408, 444, 484, 506], "contigu": [198, 203, 429], "continu": [198, 385, 387, 388, 391, 392, 394, 395, 397, 398, 403, 414, 417, 418, 421, 429, 434, 435, 436, 438, 453, 466, 475, 485, 528, 575], "continuous_upd": [461, 469, 484, 500, 501], "contour": [208, 211, 370, 387, 439], "contour_": 481, "contourf": 206, "contract": 404, "contrari": [379, 386], "contrast": [398, 575], "contrera": 439, "contribut": [100, 115, 117, 224, 232, 246, 262, 374, 378, 380, 387, 392, 400, 402, 408, 415, 418, 429, 431, 433, 483, 517, 552, 573, 576, 577], "contributes_to_stat": 100, "contributor": [378, 381, 398, 408, 416, 427, 428], "control": [83, 87, 91, 102, 105, 109, 110, 378, 391, 409, 411, 448, 477, 484, 489, 516, 578], "controversi": [378, 383, 384, 398], "conveni": [13, 123, 377, 378, 381, 388, 392, 400, 402, 409, 419, 421, 426, 429, 431, 436, 463, 475, 477, 478, 479, 484, 485, 486, 487, 491, 493, 502, 511, 515, 574], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 192, 193, 194, 196, 204, 205, 206, 400, 402, 421, 422, 425, 426, 440, 479, 483, 484, 487, 512, 514, 521, 528, 578], "converg": [406, 420, 441, 453, 455, 461, 475, 481, 512, 516, 523, 533], "convers": [84, 87, 90, 91, 104, 123, 124, 125, 134, 143, 383, 402, 405, 410, 412, 429, 442, 443, 444, 448, 529], "conversion_typ": [492, 502], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 101, 102, 105, 107, 109, 110, 123, 125, 128, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 176, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 213, 214, 215, 216, 217, 224, 238, 246, 284, 302, 305, 306, 310, 323, 339, 359, 361, 362, 379, 384, 392, 393, 402, 405, 408, 430, 442, 443, 444, 445, 448, 457, 464, 471, 472, 475, 479, 480, 481, 485, 486, 491, 502, 514, 520, 525, 528, 578, 580], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 502, "convolut": [118, 122, 128, 133, 161, 194, 206, 377, 390, 396, 417, 424, 426, 435, 437, 438, 444, 445, 459, 484, 512, 529], "convolution_method": 194, "convolv": [105, 111, 116, 133, 161, 194, 206, 389, 417, 426, 429, 438, 456, 457, 459, 484, 522, 552], "convolve_ful": 194, "convolve_wc": 194, "cookiecutt": 394, "coolwarm": [461, 492, 493, 501], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 248, 292, 389, 422, 466, 484, 485, 525, 528, 529, 536], "coord_to_idx": [191, 192, 195, 197, 198, 201, 203, 204, 484], "coord_to_pix": [191, 192, 195, 197, 198, 201, 203, 204, 484], "coordiant": 482, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 102, 103, 105, 108, 109, 110, 112, 113, 123, 125, 127, 128, 129, 137, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 176, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 224, 225, 233, 236, 238, 246, 248, 250, 259, 260, 262, 274, 292, 296, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 327, 333, 337, 338, 354, 379, 383, 384, 385, 387, 391, 392, 397, 398, 401, 403, 404, 417, 419, 422, 424, 435, 437, 438, 440, 448, 450, 453, 455, 456, 459, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 479, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 501, 502, 512, 520, 525, 527, 528, 533, 534, 537, 574, 575, 580], "coordsi": 424, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 104, 105, 108, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 151, 152, 155, 158, 163, 166, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 305, 350, 378, 383, 386, 388, 392, 394, 400, 407, 408, 414, 429, 431, 438, 439, 440, 443, 445, 449, 450, 453, 455, 456, 461, 463, 469, 471, 472, 475, 478, 481, 483, 487, 489, 492, 516, 525, 529, 540, 576], "copy_data": [87, 91, 224, 232, 246, 262, 270, 272, 274], "copy_indic": [87, 91], "copy_ob": [82, 516], "copy_on_getitem": [87, 91], "copyright": 414, "core": [16, 53, 84, 90, 104, 124, 159, 377, 378, 385, 391, 392, 399, 403, 404, 415, 418, 435, 439, 443, 448, 455, 456, 458, 461, 463, 465, 467, 469, 472, 475, 486, 491, 504, 514, 576], "corner": [392, 395, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "corr_coord": [163, 166], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 102, 103, 105, 152, 163, 166, 180, 185, 186, 199, 232, 248, 249, 274, 378, 390, 391, 403, 404, 405, 407, 421, 424, 426, 427, 428, 429, 432, 435, 436, 438, 440, 441, 442, 443, 444, 445, 448, 449, 453, 454, 455, 456, 465, 469, 470, 478, 479, 481, 483, 485, 486, 487, 489, 493, 500, 502, 513, 514, 523, 536, 548, 551, 553, 556, 561], "correctli": [19, 20, 26, 77, 151, 152, 158, 163, 166, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 379, 381, 404, 405, 419, 421, 426, 431, 432, 441, 482, 483, 484, 485, 486, 489, 528, 534], "correl": [19, 20, 26, 122, 128, 136, 209, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 258, 263, 265, 266, 267, 268, 271, 275, 296, 396, 401, 402, 429, 439, 445, 464, 467, 481, 485, 487, 489, 500, 514, 573], "correlate_off": [122, 459], "correlation_radiu": [16, 122, 141, 142, 454, 458, 459, 461, 473, 480, 493, 500, 514], "correspond": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 84, 87, 89, 90, 91, 100, 102, 104, 105, 109, 110, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 143, 150, 151, 152, 158, 161, 163, 165, 166, 167, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 218, 219, 222, 226, 228, 229, 230, 233, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 273, 275, 303, 371, 388, 389, 390, 391, 398, 399, 402, 404, 406, 423, 426, 450, 451, 453, 454, 455, 461, 465, 466, 470, 478, 481, 483, 484, 487, 488, 489, 491, 492, 493, 500, 502, 512, 513, 514, 516, 528, 529, 539, 542, 574, 575, 580], "cosimo": [426, 429, 431, 437, 438, 440, 443], "cosmic": [52, 226, 277, 396, 491], "coto": 437, "could": [16, 84, 90, 104, 124, 379, 381, 383, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 404, 405, 408, 450, 453, 461, 463, 478, 480, 489, 491, 492, 500, 515], "count": [16, 83, 92, 100, 102, 105, 106, 107, 108, 109, 110, 114, 118, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 142, 168, 170, 173, 174, 175, 180, 182, 186, 190, 193, 194, 196, 197, 198, 202, 205, 206, 215, 217, 224, 246, 286, 288, 289, 290, 295, 297, 300, 302, 327, 363, 365, 374, 376, 384, 386, 389, 390, 391, 393, 394, 398, 402, 420, 421, 424, 426, 429, 431, 432, 438, 439, 443, 444, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 467, 469, 470, 471, 472, 473, 475, 479, 481, 483, 484, 485, 489, 493, 498, 500, 501, 502, 514, 516, 520, 523, 524, 525, 526, 529, 575, 576, 577, 579], "count_bkg": 473, "count_statist": 578, "counter": [225, 233, 236, 533], "counts_3d": 484, "counts_imag": [467, 479], "counts_min": 146, "counts_off": [102, 105, 106, 109, 110, 168, 174, 175, 178, 376, 390, 431, 442, 443, 449, 454, 455, 456, 459, 463, 473, 479, 512, 578], "counts_on": 420, "counts_rat": 479, "counts_statist": 459, "countspredictor": 389, "countsspectrum": [390, 393, 420, 421, 423, 425, 434], "countsstatist": [286, 288, 402, 425, 426, 429, 440], "coupl": [386, 392, 397, 408, 426, 438, 484], "cours": [378, 381, 385, 388, 395, 414, 454, 461, 479, 484, 492, 500, 576, 579], "cousin": [420, 426, 434, 436, 575], "cousins2007": [575, 578], "coutinho": [426, 429], "cov": [252, 253, 408], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [209, 371, 439], "covar_list": 209, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 126, 127, 130, 131, 210, 211, 212, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 286, 288, 371, 396, 406, 425, 431, 439, 440, 443, 445, 454, 500, 578], "covariance_data": [224, 232, 246, 262, 272], "covariance_opt": 211, "covariance_result": 212, "covariance_typ": 406, "covariancegaussianprior": 406, "covariancemixin": [219, 224, 262, 445], "covarianceresult": [101, 211, 212, 450, 451, 453, 454, 455, 461, 462, 463, 473, 475, 481, 492, 500, 501], "cover": [273, 378, 380, 392, 393, 394, 402, 450, 470, 471, 479, 484, 496, 502, 517], "coverag": [387, 393, 408, 417, 421, 429, 435, 438, 471, 481], "coveral": [408, 417], "cpu": [126, 127, 130, 133, 325, 326, 391], "cpython": 383, "crab": [67, 83, 109, 110, 131, 146, 211, 243, 278, 284, 386, 390, 398, 417, 423, 435, 437, 453, 454, 455, 462, 463, 470, 478, 479, 480, 481, 485, 489, 492, 493, 494, 500, 501, 502, 514, 525, 529, 575], "crab_10gev_100tev_dataset": 462, "crab_3fhl": 502, "crab_3fhl_spec": 502, "crab_events_pass4": 493, "crab_fp": 454, "crab_fp_tabl": 454, "crab_hess_ecpl": 278, "crab_hess_fp": [123, 125, 145], "crab_magic_lp": 455, "crab_model": 481, "crab_posit": 525, "crab_spec": 462, "crab_spectrum": 481, "crabnebula": 470, "crabspectrum": 421, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 104, 105, 109, 110, 111, 112, 113, 114, 116, 118, 123, 124, 125, 126, 127, 130, 133, 134, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 173, 175, 176, 177, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 284, 305, 315, 336, 340, 356, 365, 367, 372, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 421, 422, 423, 426, 429, 431, 437, 438, 440, 441, 442, 443, 444, 445, 448, 449, 451, 454, 455, 456, 461, 463, 464, 465, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 481, 483, 486, 487, 488, 489, 491, 492, 493, 494, 498, 500, 502, 504, 511, 512, 513, 516, 520, 523, 525, 526, 527, 528, 532, 534, 535, 536, 537, 542, 552, 561, 573, 574, 576, 581], "create_crab_spectral_model": [453, 455, 462], "create_fermi_isotropic_diffuse_model": [486, 492], "create_map_dataset_from_observ": [93, 108], "create_t": 475, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 127, 204, 387, 388, 392, 401, 404, 423, 429, 445, 476, 487, 494], "creator": [104, 124, 381, 405, 454, 458, 459, 461, 487, 500, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "creatormedadata": 405, "creatormetadata": [84, 90, 104, 124, 405], "credit": 414, "crimson": 455, "criteria": [15, 91, 431, 483, 488, 496], "criterion": [91, 133, 303, 448, 516], "critic": 489, "criticis": 369, "crop": [86, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206], "crop_width": [191, 192, 193, 194, 196, 201, 202, 204, 205, 206], "cross": [19, 384, 398, 445, 504], "crowd": 478, "crpix": 204, "crpix1": 484, "crpix2": 484, "crucial": [405, 465, 466, 479], "cruft": 408, "crux": [33, 38, 475], "crval1": 484, "crval2": 484, "cryptic": 389, "csf": 491, "csh": 576, "csobsselect": 388, "css": [87, 91, 408, 445], "cstat": [390, 423], "csv": 125, "ct": [363, 438], "cta": [82, 83, 89, 102, 105, 109, 110, 115, 117, 118, 122, 141, 142, 148, 152, 153, 154, 163, 226, 366, 371, 373, 382, 385, 386, 387, 391, 394, 397, 398, 407, 418, 419, 429, 435, 436, 437, 438, 445, 447, 448, 456, 458, 461, 463, 465, 466, 469, 472, 473, 479, 480, 482, 486, 495, 496, 500, 514, 518, 575], "cta_data_analysi": [398, 447, 463, 468], "cta_dataset": 486, "cta_north": 97, "cta_sensist": 398, "cta_sensit": [447, 448, 452], "cta_simul": 418, "cta_south": [97, 448, 456, 465, 466, 469, 472], "cta_util": 438, "ctadata": 491, "ctao": [82, 152, 153, 173, 277, 378, 398, 404, 407, 410, 415, 445, 447, 448, 454, 456, 458, 463, 465, 466, 473, 488, 493, 494, 495, 496, 504, 516, 574], "ctaoobservatori": 491, "ctapip": [381, 385, 387, 394, 395, 397, 398, 399], "ctaspectrumobserv": 438, "ctobssim": 391, "ctool": [388, 391, 394, 398, 550], "cts_sigma": 481, "ctselect": 388, "ctype1": 484, "ctype2": 484, "cube": [46, 102, 105, 133, 168, 186, 193, 194, 196, 202, 205, 206, 242, 262, 378, 389, 390, 391, 397, 398, 399, 401, 410, 417, 421, 422, 425, 430, 433, 434, 435, 436, 437, 438, 457, 458, 463, 467, 492, 502, 512, 521, 523, 528, 529, 575], "cubic": 484, "cumbersom": [388, 396], "cumsum": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206], "cumul": [100, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206, 327, 391, 453, 465, 486, 516], "cunit1": 484, "cunit2": 484, "curat": [408, 418], "curl": [67, 395, 409, 410, 412, 491], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 101, 102, 105, 109, 110, 125, 126, 130, 156, 179, 191, 192, 193, 194, 196, 202, 203, 204, 205, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 356, 372, 378, 379, 381, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 409, 410, 411, 412, 421, 439, 454, 477, 480, 482, 483, 484, 486, 491, 493, 494, 500, 501, 505, 512, 513, 514, 529, 573, 575, 576], "curv": [15, 19, 20, 26, 73, 77, 83, 130, 137, 218, 219, 222, 226, 228, 229, 230, 234, 238, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 273, 275, 294, 370, 382, 389, 391, 394, 398, 402, 410, 419, 423, 425, 426, 430, 433, 434, 436, 438, 440, 443, 444, 447, 448, 474, 475, 476, 496, 514, 515, 525, 530, 572, 574], "curve_fit": 371, "cuspi": 504, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 104, 124, 129, 387, 388, 389, 394, 396, 401, 405, 409, 423, 424, 426, 438, 448, 456, 458, 461, 463, 469, 472, 479, 482, 484, 491, 516, 561], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 487, "customis": [398, 482], "customprior": 489, "cut": [91, 122, 165, 179, 180, 388, 437, 443, 447, 448, 452, 456, 473, 479, 483, 484, 488, 491, 496, 501, 502, 524, 525], "cutoff": [228, 229, 230, 266, 267, 268, 284, 423, 443, 447, 456, 461, 530, 562], "cutout": [102, 105, 109, 110, 115, 117, 151, 152, 158, 163, 166, 169, 192, 194, 202, 204, 206, 272, 384, 390, 419, 424, 429, 435, 438, 445, 458, 459, 461, 463, 467, 479, 483, 492, 501, 502, 512], "cutout2d": [102, 105, 151, 152, 158, 163, 166, 169, 204, 206, 272, 384], "cutout_and_mask_region": [206, 443], "cutout_info": 423, "cutout_mod": 169, "cutout_slic": 204, "cutout_template_model": 445, "cutout_width": 169, "cval": [193, 194, 196, 202, 205, 206], "cwd": 386, "cwt": [398, 423, 435, 438], "cxc": [211, 398, 481], "cyan": 375, "cycl": [375, 381, 382, 383, 395, 397, 411, 436, 440], "cycler": [375, 448], "cython": [381, 420, 430], "d": [19, 20, 23, 87, 89, 91, 197, 200, 203, 238, 243, 254, 273, 278, 345, 381, 396, 398, 431, 440, 451, 459, 465, 466, 472, 484, 487, 488, 521, 528, 533, 563, 564, 565, 566, 567, 568, 569, 570, 571, 576, 579], "dai": [87, 91, 123, 125, 203, 231, 235, 237, 254, 261, 381, 392, 398, 407, 408, 484, 569, 576], "daniel": [439, 442, 444, 445], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 398, 406, 438, 443, 444, 447, 490, 496, 505, 574], "dark_matter_spectra": 26, "darkbit": 504, "darkblu": 489, "darkgreen": 489, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 257, 379, 398, 438, 477, 505], "darkmatterannihilationspectralmodel": [20, 257, 440, 477, 487], "darkmatterdecayspectralmodel": [257, 444, 477, 487], "darkorang": [453, 454], "darksusi": 504, "darwin": 414, "dash": [473, 477, 489], "dashboard": 408, "dat": [26, 87, 91, 224, 246, 454, 500, 504], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 123, 124, 125, 126, 127, 128, 129, 136, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 173, 174, 175, 179, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 289, 294, 295, 296, 298, 299, 302, 303, 304, 313, 314, 317, 335, 341, 344, 348, 349, 357, 366, 367, 368, 369, 371, 372, 377, 379, 382, 385, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 404, 406, 407, 410, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 443, 444, 447, 448, 451, 456, 457, 458, 459, 463, 465, 466, 469, 472, 477, 478, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 498, 503, 504, 512, 514, 516, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 535, 536, 548, 551, 553, 555, 556, 561, 573, 574, 575, 578, 579, 580], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [191, 192, 201, 204], "data_path": 493, "data_reduct": 394, "data_shap": [101, 102, 105, 109, 110, 191, 192, 201, 204, 479, 529], "data_shape_ax": [192, 201, 204], "data_shape_imag": 204, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 173, 303, 304, 394, 414, 455, 463, 465, 471, 473, 475, 483, 488, 491, 493, 494, 498, 501, 513, 523, 525, 526], "data_storag": 513, "data_summari": 435, "dataaxi": 420, "databas": [384, 516], "dataclass": 378, "datafram": [87, 91], "dataset": [6, 15, 16, 19, 20, 26, 63, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 135, 140, 141, 142, 143, 144, 146, 151, 152, 158, 163, 166, 168, 169, 170, 173, 174, 175, 178, 179, 180, 195, 200, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 325, 371, 374, 375, 379, 381, 382, 384, 386, 391, 393, 394, 395, 397, 398, 402, 406, 407, 408, 410, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 453, 456, 457, 463, 464, 465, 467, 469, 473, 475, 477, 478, 484, 487, 488, 490, 491, 492, 494, 496, 498, 502, 513, 514, 516, 521, 523, 524, 525, 526, 536, 540, 542, 570, 571, 573, 574, 575, 576, 577, 578], "dataset1": [489, 512], "dataset1_prior": 489, "dataset2": [489, 512], "dataset2_prior": 489, "dataset_1": 514, "dataset_2": 514, "dataset_3fgl": 451, "dataset_3fhl": 451, "dataset_cta": 479, "dataset_empti": [450, 453, 455, 456, 463, 471, 475, 479, 483, 493, 525], "dataset_energy_depend": 464, "dataset_fak": 456, "dataset_fp": 472, "dataset_gammacat": 451, "dataset_hawc": 462, "dataset_hess": [462, 481], "dataset_imag": [463, 479], "dataset_kwarg": [93, 108], "dataset_lc": 472, "dataset_mak": [453, 455, 463, 471, 475, 483, 525], "dataset_nam": [108, 112, 113, 130, 224, 232, 246, 400, 406, 445, 461, 465, 466, 469, 479, 486, 501, 536], "dataset_on_off": [168, 174, 175, 178, 448, 453, 455, 456, 459, 463, 471, 475, 483, 525, 526], "dataset_on_off1": 448, "dataset_onoff": 390, "dataset_simul": 455, "dataset_stack": [453, 461], "datasetmodel": [213, 246, 262, 400, 426, 465, 466, 469, 475], "datasetread": 106, "datasets1": 375, "datasets2": 375, "datasets3": 375, "datasets_fil": [16, 454, 458, 459, 461, 500], "datasets_hess": 462, "datasets_in_phase_bin_3": 402, "datasets_mak": 483, "datasets_nam": [19, 20, 26, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 425, 462, 486, 500, 536], "datasets_read": [486, 492], "datasets_sl": 479, "datasets_to_fit": 475, "datasetsconfig": 16, "datasetsmak": [171, 431, 443, 483, 488, 516], "datasetsmetadata": 405, "datasetwrit": 107, "datastor": [16, 89, 96, 173, 303, 304, 384, 388, 393, 410, 414, 420, 431, 432, 434, 435, 437, 443, 444, 450, 453, 454, 455, 458, 459, 461, 463, 465, 469, 471, 473, 475, 483, 488, 493, 494, 498, 500, 513, 516, 523, 525, 526, 576], "datastorecheck": 438, "datastoreindex": 388, "datastoreinmemori": 388, "datastoremak": [420, 431], "datastoremetadata": 405, "datastoreobserv": [174, 384, 388, 424, 437], "datastorexml": 388, "datasum": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 150, 151, 152, 158, 163, 166, 193, 194, 196, 200, 202, 205, 206], "datat": [87, 91], "date": [87, 91, 104, 124, 359, 395, 403, 404, 405, 407, 415, 437, 454, 457, 458, 459, 461, 487, 494, 500, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 580], "datefmt": [16, 454, 458, 459, 461, 500, 576], "dateref": 457, "datetim": [104, 124, 405], "datetime64": [87, 91], "datfix": 457, "daughter": 405, "david": [388, 393, 418, 438, 439], "dc": [461, 491], "dc1": [387, 398, 439, 465, 473, 482, 486, 491], "dc2": 387, "ddof": 476, "de": [19, 20, 26, 67, 100, 218, 219, 222, 226, 228, 229, 230, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 302, 404, 407, 426, 429, 432, 477, 575], "deabsorb": 449, "deactiv": 409, "dead": [83, 86, 88, 335, 388], "dead_tim": [83, 88, 335], "deadc": 388, "deadlin": [387, 391], "deadtim": [88, 90, 186, 456, 465, 469, 491], "deadtime_fract": [88, 90], "deal": [86, 378, 384, 393, 394, 456, 465, 471, 496, 516], "debanjan": 420, "debian": [395, 411, 433], "debug": [11, 378, 384, 389, 394, 440, 453, 480, 484, 516, 576], "dec": [67, 83, 85, 87, 88, 91, 94, 141, 142, 176, 378, 379, 383, 387, 389, 391, 394, 395, 398, 416, 442, 448, 453, 455, 457, 459, 463, 466, 470, 471, 473, 475, 478, 483, 485, 491, 492, 493, 494, 501, 502, 504, 516, 520, 525, 580], "dec_pnt": 494, "dec_tru": 391, "decad": [17, 18, 21, 22, 24, 25, 27, 112, 113, 198, 280, 444, 465], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 231, 237, 254, 401, 465, 472, 476, 487, 504, 566], "decemb": 416, "decid": [378, 384, 387, 388, 389, 390, 392, 393, 397, 400, 401, 402, 407, 454, 488, 500], "decim": [87, 91, 301], "decis": [378, 379], "declar": [15, 87, 91, 262, 357, 358, 381, 385, 386, 389, 394, 395, 401, 408, 425, 515], "decor": [357, 358, 378, 405, 576], "decorrel": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "decoupl": 69, "dedic": [381, 392, 393, 402, 404, 405, 408, 424, 425, 426, 444, 453, 454, 455, 461, 473, 481, 500, 501, 513], "deduc": [402, 444], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 101, 102, 104, 105, 109, 110, 123, 124, 125, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 273, 275, 276, 461], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 270, 272, 274], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 287, 357, 358, 378, 379, 389, 390, 391, 392, 401, 402, 405, 406, 453, 461, 475, 481, 487, 489, 498, 525, 576, 578], "def_unit": [448, 456, 458, 461, 463, 469, 472, 491], "defalut": 113, "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 301, 302, 303, 305, 316, 317, 318, 323, 325, 326, 332, 333, 334, 335, 337, 338, 341, 344, 346, 347, 349, 355, 360, 361, 365, 367, 368, 369, 371, 372, 374, 375, 378, 384, 390, 394, 395, 401, 404, 408, 414, 420, 422, 423, 424, 426, 429, 431, 437, 438, 440, 441, 442, 443, 444, 453, 454, 455, 457, 459, 461, 465, 466, 471, 472, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 492, 500, 501, 502, 512, 514, 516, 523, 526, 527, 528, 529, 533, 534, 535, 542, 548, 552, 576, 580], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 361, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 436], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 406], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [147, 148, 153, 155, 160, 165, 482], "defer": [105, 110], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 101, 102, 103, 104, 105, 108, 109, 110, 115, 117, 122, 123, 124, 125, 126, 127, 129, 130, 133, 150, 151, 152, 154, 158, 161, 162, 163, 164, 166, 169, 170, 174, 179, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 287, 289, 295, 297, 317, 327, 332, 333, 334, 335, 338, 368, 369, 378, 379, 381, 383, 384, 387, 389, 390, 391, 392, 393, 394, 395, 399, 400, 402, 403, 404, 405, 406, 409, 410, 411, 412, 419, 420, 423, 426, 429, 432, 436, 437, 442, 443, 444, 449, 454, 456, 457, 458, 459, 461, 462, 464, 467, 469, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 500, 502, 512, 513, 514, 516, 518, 521, 525, 526, 528, 533, 535, 537, 538, 539, 542, 543, 546, 547, 549, 550, 552, 554, 555, 557, 558, 559, 560, 561, 571, 573, 574, 575, 576, 577, 578, 579], "definit": [83, 84, 86, 88, 90, 100, 102, 104, 105, 109, 110, 124, 170, 201, 287, 302, 316, 378, 387, 388, 392, 399, 400, 401, 402, 405, 421, 425, 426, 442, 444, 445, 453, 455, 458, 467, 471, 482, 483, 500, 512, 514, 521, 522, 527, 529, 533, 534, 578], "deform": 529, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 102, 105, 109, 110, 112, 113, 114, 115, 117, 118, 122, 127, 128, 133, 141, 142, 152, 154, 155, 160, 161, 162, 163, 164, 165, 166, 168, 176, 177, 179, 181, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 224, 225, 233, 236, 246, 250, 259, 260, 262, 303, 304, 337, 373, 378, 379, 389, 392, 394, 401, 402, 405, 414, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 500, 501, 502, 513, 514, 516, 518, 520, 523, 525, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540], "deg2": 494, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 112, 113, 114, 120, 123, 125, 135, 144, 192, 193, 194, 196, 199, 204, 205, 206, 224, 246, 250, 262, 273, 444, 448, 450, 454, 459, 464, 471, 475, 478, 483, 484, 485, 491, 500, 514, 528, 529, 578, 579], "deil": [383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 417, 418, 419, 420, 421, 422, 423, 424, 430, 433, 434, 435, 436, 437, 438, 439], "deiml": 437, "dej2000": [478, 502], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 389], "delai": [399, 403], "deleg": 394, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 378, 389, 408, 409, 410, 412, 444, 486], "delete_interv": 86, "delimit": 125, "deliv": 394, "delta": [19, 20, 23, 87, 91, 122, 123, 128, 131, 133, 155, 203, 252, 253, 285, 301, 443, 449, 457, 481, 489, 514, 521, 522, 534, 535, 537, 578], "delta_t": [120, 285, 464], "demonstr": [394, 419, 422, 423, 424, 425, 426, 431, 443, 444, 470, 476, 484, 486, 496, 528], "denot": [102, 109, 402, 512], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 101, 125, 155, 206, 331, 334, 371, 391, 459, 461, 477, 478, 489, 504, 506, 510, 520, 521, 522, 575], "dep": 443, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 102, 103, 108, 109, 120, 123, 125, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 180, 191, 192, 201, 204, 206, 224, 238, 246, 262, 305, 358, 378, 380, 381, 382, 384, 389, 390, 391, 392, 393, 396, 397, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 418, 422, 423, 426, 433, 435, 438, 439, 441, 443, 444, 445, 447, 448, 452, 456, 458, 459, 468, 471, 478, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492, 496, 512, 516, 520, 524, 525, 528, 542], "deploy": 404, "deposit": 404, "deprec": [16, 84, 85, 90, 104, 124, 420, 429, 442, 443, 444, 445, 467, 492, 540], "deprecated_argument_funct": 378, "deprecated_argument_function_kwarg": 378, "deprecated_attribut": 378, "deprecated_funct": 378, "deprecated_renamed_argu": 378, "deprecatedparseprotocol": [16, 84, 90, 104, 124], "deprecation_polici": 403, "depriv": 523, "depth": [16, 84, 90, 104, 124, 345, 410, 415, 449, 476, 542], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 122, 126, 130, 133, 134, 143, 273, 378, 390, 391, 396, 399, 402, 457, 480, 491, 493, 514, 528, 577, 578], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 125, 126, 128, 133, 162, 202, 211, 275, 297, 379, 381, 383, 384, 387, 388, 390, 391, 392, 394, 395, 397, 398, 401, 402, 403, 404, 415, 421, 429, 437, 438, 454, 457, 465, 466, 476, 480, 481, 487, 489, 491, 493, 494, 500, 512, 516, 520, 529, 530, 575, 576, 577, 578], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 127, 211, 379, 383, 384, 392, 398, 403, 404, 415, 440, 444, 461, 469, 478, 481, 484, 491, 493, 500, 501, 516], "description1": 379, "description2": 379, "description3": 379, "description_width": [461, 469, 484, 500, 501], "descriptionstyl": [461, 469, 484, 500, 501], "descriptor": [87, 88, 91, 102, 105, 109, 110, 272, 314, 379, 425], "design": [383, 384, 387, 388, 391, 392, 394, 398, 400, 402, 403, 417, 437, 444], "desir": [16, 84, 87, 90, 91, 104, 124, 161, 191, 192, 201, 204, 287, 353, 354, 355, 484, 502, 529], "desktop": 415, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 102, 105, 109, 110, 125, 126, 151, 152, 158, 163, 166, 169, 192, 204, 206, 211, 214, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 272, 273, 274, 378, 379, 381, 383, 386, 387, 388, 391, 392, 393, 397, 398, 399, 403, 404, 407, 409, 413, 415, 416, 423, 427, 428, 447, 448, 449, 453, 455, 456, 457, 458, 463, 464, 465, 468, 469, 472, 475, 479, 480, 481, 483, 484, 485, 486, 487, 489, 491, 493, 494, 496, 501, 502, 512, 513, 515, 521, 525, 526, 528, 573, 574, 576, 580], "detect": [59, 141, 142, 284, 368, 369, 379, 394, 397, 398, 400, 417, 423, 424, 425, 435, 437, 438, 444, 447, 460, 478, 491, 493, 496, 575, 578], "detect_t": 398, "detector": [83, 88, 103, 108, 155, 485, 493, 521, 575], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 112, 113, 132, 154, 160, 162, 164, 176, 177, 179, 181, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 273, 275, 305, 327, 389, 393, 396, 404, 431, 443, 444, 448, 455, 458, 459, 464, 470, 483, 485, 506, 574], "determinist": 378, "deti": [83, 103, 108, 391, 491], "detx": [83, 103, 108, 391, 491], "dev": [16, 82, 84, 90, 104, 124, 378, 380, 381, 394, 404, 407, 408, 445], "develop": [379, 383, 384, 386, 387, 388, 389, 391, 392, 394, 395, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 411, 415, 417, 430, 437, 438, 439, 491], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 126, 194, 206, 211, 287, 291, 481, 489], "devoid": [453, 519], "devop": 404, "devot": 496, "dex": 305, "df": [87, 91, 120, 135, 144, 464, 481, 578], "diagnosi": 387, "diagnost": 394, "diagon": [150, 151, 152, 396, 406, 492], "diagram": 580, "dialog": [410, 412], "diamet": [192, 193, 194, 450], "diamond": 488, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 118, 120, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 178, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 284, 285, 286, 287, 288, 292, 303, 317, 325, 326, 341, 344, 345, 346, 349, 359, 360, 361, 362, 365, 366, 367, 371, 372, 373, 374, 375, 378, 393, 395, 399, 402, 405, 422, 426, 429, 437, 454, 461, 470, 471, 475, 478, 481, 484, 488, 500, 501, 528, 533, 542], "dict_kei": [449, 542], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 120, 123, 124, 125, 126, 127, 130, 131, 133, 135, 136, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 178, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 206, 210, 211, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 286, 287, 288, 292, 315, 341, 344, 345, 346, 349, 359, 362, 372, 379, 395, 397, 402, 405, 406, 453, 455, 461, 481, 482, 488, 489, 571], "dictionnari": 371, "did": [77, 385, 392, 397, 398, 399, 401, 404, 420, 448, 456, 458, 461, 463, 469, 472, 481, 489, 491], "didn": [83, 88, 385, 388, 392, 395, 504], "diff": [101, 102, 105, 109, 110, 378, 381, 386, 390, 461, 469, 501], "diff_flux": 477, "diff_flux_point": [101, 479], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 80, 86, 87, 91, 94, 100, 101, 120, 122, 123, 125, 126, 127, 130, 131, 133, 141, 147, 148, 149, 150, 153, 155, 157, 160, 165, 175, 193, 194, 196, 199, 200, 201, 202, 204, 205, 206, 284, 285, 286, 288, 335, 339, 353, 354, 369, 378, 379, 381, 383, 384, 386, 388, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 404, 406, 408, 410, 412, 421, 424, 426, 436, 439, 440, 441, 443, 445, 448, 453, 454, 455, 457, 458, 461, 464, 465, 466, 467, 470, 472, 475, 476, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 491, 492, 493, 496, 500, 502, 504, 512, 514, 516, 521, 528, 529, 534, 535, 574, 576, 577, 578], "different": 386, "differenti": [23, 79, 123, 125, 132, 193, 194, 196, 198, 202, 205, 206, 247, 262, 277, 278, 332, 384, 389, 396, 402, 436, 484, 487, 492, 502, 514, 575], "differential_flux": 125, "difficult": [389, 392, 408], "diffus": [68, 193, 194, 196, 202, 205, 206, 279, 378, 394, 397, 438, 439, 461, 465, 478, 484, 486, 487, 491, 573], "diffuse_cub": 487, "diffuse_galactic_fermi": 486, "diffuse_iem": [486, 492], "diffuse_iso": [486, 492], "diffuse_model": 279, "difrsp0": [492, 502], "difrsp1": [492, 502], "difrsp2": [492, 502], "difrsp3": [492, 502], "difrsp4": [492, 502], "digit": 378, "dilat": [206, 429], "dim": [160, 334, 434, 435, 463, 575], "dimens": [46, 53, 102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 175, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 270, 271, 274, 305, 317, 371, 394, 426, 437, 439, 443, 445, 481, 482, 484, 487, 496, 512, 528, 529, 534], "dimension": [31, 32, 37, 68, 87, 91, 191, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 233, 236, 280, 318, 331, 384, 392, 406, 410, 435, 457, 480, 481, 482, 484, 487, 502, 520, 522, 528, 529, 574, 575], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 155, 267, 268, 304, 467, 487], "dimitri": [429, 431], "dipol": [51, 54], "dirac": 19, "direct": [91, 104, 165, 183, 184, 187, 189, 198, 225, 233, 236, 309, 312, 379, 384, 390, 392, 397, 399, 402, 405, 429, 447, 452, 456, 483, 496, 513, 521, 522, 524, 525, 533, 574, 575], "directional_offset_bi": [448, 456], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 90, 91, 104, 124, 134, 140, 143, 144, 165, 180, 193, 194, 196, 202, 205, 206, 270, 272, 274, 378, 380, 381, 383, 385, 386, 389, 390, 391, 392, 396, 398, 405, 410, 412, 413, 417, 419, 420, 421, 423, 437, 444, 451, 453, 454, 456, 461, 462, 463, 466, 467, 469, 471, 472, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 491, 492, 500, 501, 502, 504, 512, 516, 521, 525, 528, 552, 578], "directori": [11, 82, 87, 378, 394, 454, 464, 494, 500, 502, 513, 516, 576], "dirk": [420, 434, 436], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 378, 429], "disable_unicode_literals_warn": 378, "disadvantag": 576, "disagr": 383, "disambigu": 383, "disc": [458, 459, 461, 466], "discard": [405, 475, 478], "discard_on_copi": [87, 91], "discarded_ind": 478, "discarded_spati": 478, "discarded_t": 478, "disccus": 387, "discourag": 378, "discov": 576, "discrep": 453, "discret": [91, 136, 296, 301, 391, 445, 481, 528], "discrete_correl": 136, "discrete_correlation_dict": 136, "discrete_correlation_err": [136, 296], "discuss": [13, 59, 275, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 415, 437, 489, 494, 505, 580], "disjoint": 392, "disk": [82, 110, 152, 155, 194, 204, 206, 225, 236, 238, 356, 377, 378, 388, 389, 390, 394, 401, 402, 447, 448, 453, 461, 462, 484, 485, 486, 487, 527, 530, 535, 539, 541], "disk_inc": 392, "diskspatialmodel": [72, 256, 401, 422, 443, 486, 487, 533], "dismiss": 100, "disp": [520, 521], "dispatch": 389, "dispers": [82, 88, 102, 103, 105, 107, 108, 109, 110, 111, 114, 116, 150, 151, 152, 155, 173, 179, 180, 183, 184, 187, 378, 384, 389, 390, 391, 423, 425, 435, 436, 437, 439, 448, 450, 453, 454, 461, 465, 483, 493, 494, 500, 501, 512, 521, 524, 575], "displac": 309, "displai": [11, 15, 82, 87, 91, 118, 130, 133, 211, 292, 326, 371, 375, 378, 379, 408, 410, 412, 429, 432, 443, 444, 448, 450, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 467, 469, 470, 472, 473, 478, 479, 480, 481, 484, 486, 487, 491, 492, 494, 516, 576], "display_length": [87, 91], "disrupt": [418, 419], "dissolv": 422, "dist": [328, 408], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 127, 141, 142, 201, 247, 274, 301, 308, 334, 392, 435, 442, 455, 457, 467, 477, 478, 481, 510, 525, 552], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 477], "distance_max": [46, 47, 334, 478], "distance_min": [47, 334, 478], "distance_refer": 478, "distibut": [134, 143], "distinct": [393, 394, 399, 493, 579], "distinguish": [286, 288, 402, 405, 448, 484], "distort": [392, 421], "distrib": [101, 134, 143, 453], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 101, 108, 134, 135, 143, 144, 155, 190, 230, 241, 247, 286, 288, 327, 328, 332, 371, 374, 376, 377, 378, 382, 383, 386, 391, 396, 397, 400, 403, 404, 408, 411, 422, 431, 437, 443, 444, 448, 453, 455, 456, 459, 461, 465, 467, 469, 470, 481, 486, 489, 491, 502, 504, 516, 520, 521, 523, 529, 537, 552, 575, 577, 578], "divers": 402, "divid": [192, 198, 203, 399, 402, 455, 465, 488, 493, 494], "divis": 198, "djangoproject": 398, "djuvsland": 444, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 179, 197, 198, 303, 304, 379, 384, 386, 387, 389, 398, 405, 410, 414, 420, 423, 425, 431, 440, 444, 450, 453, 454, 455, 458, 459, 461, 470, 471, 475, 483, 485, 488, 498, 500, 501, 512, 516, 518, 519, 520, 522, 523, 525, 526, 574, 575], "dl4": [99, 101, 102, 105, 109, 110, 118, 122, 126, 130, 133, 158, 179, 379, 384, 405, 410, 425, 472, 479, 480, 481, 516, 574, 575], "dl5": [118, 122, 126, 130, 133, 405, 444, 472, 480, 481, 574, 575], "dl6": [118, 122, 126, 130, 133, 480, 574, 575], "dm": [19, 20, 26, 425, 440, 477, 487], "dm_exampl": 504, "dmfitfunct": 504, "dmpipe": 504, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 477, 504], "dmsky": 504, "dn": [230, 241, 477, 575], "dnde": [19, 20, 26, 67, 123, 124, 125, 132, 134, 136, 137, 138, 139, 143, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 277, 402, 429, 451, 453, 454, 463, 467, 478, 479, 480, 487, 492, 500, 502, 514], "dnde_cu": 278, "dnde_err": [123, 125, 134, 143, 514], "dnde_errn": [67, 123, 125, 134, 143, 478], "dnde_error": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "dnde_errp": [67, 123, 125, 134, 143, 478], "dnde_ref": [123, 125, 402], "dnde_scan_axi": [134, 143], "dnde_scan_valu": [123, 125], "dnde_ul": [67, 123, 125, 134, 143, 478, 502], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 104, 124, 150, 161, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 329, 371, 379, 381, 383, 384, 385, 388, 392, 393, 394, 395, 396, 397, 398, 401, 402, 405, 407, 408, 410, 412, 423, 449, 451, 453, 454, 456, 457, 458, 459, 461, 463, 464, 465, 469, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 491, 492, 500, 501, 502, 512, 516, 523, 528, 573, 576, 579, 580], "do_someth": 378, "doc": [11, 13, 16, 83, 84, 87, 90, 91, 104, 124, 150, 192, 198, 201, 204, 211, 224, 246, 305, 342, 378, 379, 381, 383, 386, 392, 394, 395, 397, 398, 407, 414, 415, 417, 423, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 445, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 529, 540, 542, 548, 564, 570, 571, 575, 576, 580], "docker": [395, 408], "dockerfil": [386, 407, 408], "docstr": [378, 398, 404, 429, 430, 431, 433, 436, 442, 443, 444, 445, 487], "doctest": [161, 366, 379], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 286, 288, 313, 317, 327, 352, 365, 378, 380, 382, 383, 385, 386, 388, 392, 394, 395, 397, 399, 401, 403, 404, 408, 409, 414, 415, 416, 423, 425, 426, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 484, 486, 491, 493, 494, 516, 527, 528, 529, 576], "documentaion": 445, "doe": [16, 84, 87, 90, 91, 104, 124, 126, 130, 136, 153, 163, 166, 200, 238, 273, 284, 378, 379, 385, 386, 388, 390, 392, 393, 395, 397, 398, 401, 402, 404, 405, 420, 429, 440, 448, 449, 453, 456, 458, 461, 463, 464, 478, 481, 482, 483, 484, 485, 493, 504, 516, 525, 576], "doesn": [69, 378, 379, 383, 385, 386, 392, 395, 396, 398, 445, 491, 492, 576], "dof": 578, "doi": [135, 144, 404], "domain": [193, 194, 196, 202, 205, 206, 378, 392, 476], "domenico": 435, "dominguez": [226, 227, 401, 449, 542], "dominquez": 226, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 150, 377, 378, 381, 383, 385, 386, 395, 405, 408, 450, 453, 458, 463, 470, 485, 487, 574, 576, 579, 580], "donath": [387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 123, 126, 151, 152, 158, 163, 166, 371, 378, 379, 381, 383, 384, 385, 389, 391, 392, 393, 394, 396, 397, 398, 401, 402, 404, 410, 414, 438, 443, 445, 450, 456, 461, 462, 466, 467, 469, 472, 473, 479, 480, 483, 484, 487, 488, 512, 516, 524, 525, 529, 561, 578, 580], "dos2unix": 378, "dot": [50, 51, 54, 109, 110, 193, 194, 196, 202, 205, 206, 407, 443], "doubl": [27, 122, 136, 137, 292, 404, 436, 444], "doubling_dict": 292, "down": [50, 51, 54, 133, 383, 385, 388, 392, 397, 421, 479, 492, 579], "downgrad": [192, 377], "download": [67, 94, 101, 125, 381, 386, 394, 395, 398, 405, 407, 409, 410, 412, 414, 418, 419, 421, 422, 429, 438, 439, 440, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 576], "downsampl": [102, 105, 109, 110, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 420, 426, 435, 445, 479, 480], "downsampled_energi": 479, "downsampling_factor": [133, 463], "downward": [286, 288], "dozen": 378, "dpp": 404, "dr": [17, 18, 21, 22, 24, 25, 27, 535], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 155, 173, 268, 303, 304, 379, 386, 398, 414, 447, 450, 453, 454, 459, 461, 471, 475, 483, 488, 498, 500, 501, 513, 516, 518, 519, 520, 522, 523, 525, 526, 530, 562], "dr2": [65, 268, 429, 447, 530, 562], "dr3": [65, 267, 447, 487, 530, 562], "dr4": [65, 444], "draft": [378, 382, 383, 406, 438], "drag": 381, "draw": [33, 194, 327, 391, 489], "drawback": [393, 397], "drawn": [327, 391], "drift": [85, 94, 95, 440], "drive": 394, "driven": [11, 15, 384, 394, 396, 398, 437, 496, 515], "drop": [52, 53, 102, 105, 109, 110, 123, 125, 130, 151, 152, 158, 163, 166, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 225, 232, 272, 363, 382, 383, 394, 395, 400, 419, 422, 423, 426, 429, 436, 439, 465, 484, 512], "ds9": [83, 192, 201, 204, 208, 224, 246, 378, 379, 392, 421, 485, 487, 529], "ds9parser": 392, "dss": 388, "dt": [87, 91], "dtime_t": 476, "dtype": [33, 38, 87, 91, 111, 116, 148, 150, 153, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 224, 246, 305, 378, 406, 455, 458, 467, 475, 478, 479, 480, 482, 483, 484, 491, 492, 502, 514], "duck": [16, 84, 90, 104, 124], "due": [59, 87, 91, 378, 406, 432, 447, 452, 453, 484, 489, 491, 496, 552, 576], "dummi": [109, 110, 392, 458, 516], "dump": [16, 84, 90, 104, 124, 394], "dumps_kwarg": [16, 84, 90, 104, 124], "duplic": [87, 91, 100, 151, 378, 379, 381, 384, 398, 399, 402, 426, 429, 445], "durat": [83, 86, 88, 94, 456, 465, 469, 471, 475, 491, 513, 516], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 102, 104, 105, 109, 110, 124, 170, 284, 379, 386, 390, 394, 397, 398, 400, 403, 404, 405, 406, 407, 408, 423, 426, 443, 444, 454, 455, 465, 470, 471, 475, 479, 483, 485, 489, 501, 512, 513, 575, 579], "dust": 226, "duti": 404, "dwarf": 504, "dx": [33, 309], "dy": [33, 309], "dynam": [375, 513], "dz": 309, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 104, 114, 124, 125, 126, 141, 150, 151, 152, 153, 155, 179, 186, 192, 193, 194, 196, 198, 200, 202, 204, 205, 206, 211, 214, 216, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 273, 274, 275, 286, 288, 292, 305, 307, 311, 337, 345, 356, 367, 368, 373, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 414, 415, 417, 418, 419, 423, 429, 430, 431, 435, 437, 438, 439, 443, 447, 449, 450, 451, 453, 454, 455, 456, 459, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 495, 496, 498, 500, 501, 502, 504, 511, 512, 513, 514, 516, 520, 521, 526, 527, 528, 533, 534, 535, 542, 543, 545, 546, 547, 549, 550, 554, 555, 557, 558, 559, 560, 570, 573, 575, 576, 577, 578, 579, 580, 581], "e2dnd": [19, 20, 26, 123, 124, 125, 132, 136, 137, 138, 139, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 402, 429, 436, 448, 449, 451, 453, 454, 455, 462, 478, 480, 502, 514, 516, 552], "e2dnde_err": [123, 125], "e2dnde_errn": [123, 125, 478], "e2dnde_errp": [123, 125, 478], "e2dnde_ref": [123, 125], "e2dnde_ul": [123, 125, 478], "e501": [19, 20, 150, 186, 197, 198, 204, 226, 375], "e_": [19, 20, 26, 50, 52, 53, 150, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 512, 518, 520, 521, 522, 543, 547, 555, 557, 558], "e_0": [228, 229, 230, 240, 241, 252, 253, 263, 266, 267, 268, 546, 547, 550, 552, 554, 557, 558, 559, 560], "e_b": 401, "e_cut": [67, 478], "e_cutoff": 552, "e_d": [252, 253], "e_edg": 426, "e_max": [67, 125, 402, 448, 453, 454, 455, 466, 470, 478, 479, 480, 481, 484, 489, 502, 514], "e_min": [67, 125, 402, 448, 453, 454, 455, 466, 470, 478, 479, 480, 481, 484, 489, 492, 502, 514], "e_peak": [230, 241], "e_reco": [111, 116, 150, 155, 473, 575], "e_ref": [67, 125, 402, 448, 453, 454, 470, 478, 480, 500, 502, 514], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 451, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 463, "e_sn": [43, 44, 52], "e_tru": [111, 116, 155, 473, 492], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 86, 87, 91, 92, 100, 102, 105, 108, 109, 110, 115, 117, 118, 120, 122, 123, 125, 126, 130, 132, 133, 135, 137, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 174, 175, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 233, 234, 236, 240, 241, 243, 246, 247, 248, 249, 251, 252, 253, 258, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 296, 303, 342, 367, 376, 378, 381, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 398, 399, 402, 404, 408, 409, 416, 423, 426, 437, 440, 443, 450, 456, 457, 459, 461, 462, 463, 465, 466, 470, 471, 472, 473, 475, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 493, 494, 501, 505, 511, 512, 513, 516, 520, 521, 522, 528, 529, 536, 552, 553, 575, 576, 579, 580], "eager": 394, "earli": [392, 397, 398, 491], "earlier": [385, 404], "earth": [41, 88, 90, 277, 492], "earth_azimuth_angl": [492, 502], "earthloc": [83, 85, 88, 90, 94, 97, 315, 405], "easi": [378, 379, 384, 389, 392, 393, 394, 397, 398, 402, 405, 423, 429, 437, 484, 485, 492, 513, 573, 574, 576, 580], "easier": [378, 384, 389, 397, 402, 437, 440, 491], "easiest": 411, "easili": [87, 91, 125, 384, 389, 390, 394, 405, 410, 411, 470, 471, 481, 482, 484, 492, 502, 576], "ebel": 457, "ebl": [226, 227, 275, 396, 401, 423, 426, 436, 443, 445, 447, 452, 487, 496, 530, 562], "ebl_data_builtin": [449, 542], "ebl_dominguez11": [227, 542], "ebl_franceschini": [227, 275], "ebl_franceschini_2017": 227, "ebl_saldana": 227, "eblabsorbtionnormspectralmodel": 401, "eblabsorptionnormspectralmodel": [257, 401, 426, 449, 487, 542], "ebltabl": 449, "ebound": [150, 198, 529], "ebreak": [218, 263, 543, 557], "ec": [473, 487, 529], "eccentr": [225, 233, 236, 533, 534, 535], "echo": 576, "eco": 404, "ecosystem": 405, "ecpl": [67, 80, 228, 229, 230, 284, 401, 435, 451, 478, 487], "ecpl_norm": 548, "ecsv": [59, 63, 125, 390], "ecut": [228, 266, 547, 558], "edelson": [136, 293, 296, 476], "edelson1988": [136, 296], "edelson2002": 293, "edg": [102, 105, 109, 110, 118, 120, 122, 126, 129, 130, 133, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 162, 164, 165, 173, 174, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 225, 371, 392, 402, 420, 426, 429, 448, 449, 453, 462, 463, 464, 465, 466, 476, 480, 482, 483, 484, 485, 492, 493, 500, 523, 533], "edge_max": 533, "edge_min": 533, "edge_width": [225, 486, 533], "edgecolor": [375, 453, 455, 457, 463, 464, 467, 473, 477, 525, 533, 534, 535], "edges_max": [195, 197, 198, 203, 484], "edges_min": [195, 197, 198, 203, 484], "edisp": [16, 82, 87, 88, 96, 102, 105, 106, 109, 110, 111, 116, 150, 151, 152, 155, 159, 173, 179, 180, 183, 184, 262, 303, 304, 379, 388, 389, 390, 391, 394, 424, 426, 429, 435, 436, 437, 445, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 466, 469, 471, 472, 475, 479, 483, 488, 491, 492, 493, 494, 500, 512, 520, 521, 575], "edisp2d": [152, 155, 379], "edisp2d_ax": 155, "edisp3d": 482, "edisp_": 512, "edisp_2d": [82, 87, 155, 491, 494], "edisp_3d": 482, "edisp_ev": 482, "edisp_kernel": [150, 479, 520], "edisp_kernel_map": [151, 493], "edisp_map": [103, 108, 151, 152, 482, 520], "edisp_new": 482, "edispkernel": [105, 111, 116, 151, 155, 183, 424, 520], "edispkernelmap": [102, 105, 106, 109, 110, 114, 152, 158, 159, 163, 166, 173, 180, 183, 425, 426, 457, 483, 492, 516, 520], "edispmap": [102, 103, 105, 108, 109, 110, 151, 158, 159, 163, 166, 173, 180, 183, 184, 390, 391, 399, 419, 422, 423, 424, 426, 429, 482, 512, 520], "edit": [379, 381, 383, 385, 386, 387, 394, 398, 407, 408, 411, 500, 576], "editor": [379, 404, 454, 500, 576], "editori": 404, "edm": 481, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 118, 136, 153, 192, 201, 204, 211, 224, 243, 246, 277, 278, 287, 294, 296, 398, 481, 529], "eemin": 552, "eff": [153, 518, 521, 534, 535], "eff_area": 482, "effarea": 482, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 87, 88, 91, 105, 107, 152, 153, 179, 180, 185, 187, 188, 201, 224, 246, 368, 369, 378, 383, 388, 389, 391, 392, 402, 433, 435, 453, 465, 467, 470, 476, 489, 493, 494, 496, 500, 521, 529, 534, 535, 575], "effective_area": [159, 391, 491], "effective_livetim": 483, "effective_times_src": 483, "effectivearea3d": 482, "effectiveareat": [390, 417, 429, 433], "effectiveareatable2d": [88, 152, 159, 165, 187, 384, 433, 482, 491, 518], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 105, 110, 383, 389, 390, 391, 392, 393, 400, 451, 488, 521, 526, 578], "effort": [385, 387, 394, 395, 397, 398, 401, 420, 512], "eflux": [19, 20, 26, 123, 124, 125, 136, 137, 138, 139, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 402, 429, 467, 487, 514], "eflux_err": [123, 125, 402], "eflux_errn": [123, 125], "eflux_errp": [123, 125], "eflux_ref": [123, 125], "eflux_ul": [123, 125], "eg": [378, 445, 449, 461, 469, 472, 475, 479, 482, 486, 487, 489], "egal": 491, "egg": 411, "einasto": [21, 504], "either": [67, 82, 87, 88, 91, 95, 110, 123, 125, 155, 170, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 204, 205, 206, 238, 287, 305, 335, 367, 379, 381, 383, 385, 392, 394, 397, 400, 404, 410, 429, 443, 454, 461, 467, 472, 479, 481, 487, 489, 500, 512, 514, 516, 527, 529, 573, 576], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 477], "elabor": [404, 457], "elaps": [83, 387, 575], "electron": [50, 277, 491, 552], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 371, 396, 443, 445, 478, 484, 528], "elementtre": 491, "elev": 393, "elif": [378, 392, 405], "elli": [417, 430], "ellips": [225, 392, 529, 533], "ellipseannulusskyregion": [525, 529], "ellipseskyregion": [220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274, 450, 487, 525], "ellipsoid": 481, "ellipt": [529, 535], "elong": [419, 422, 423, 533, 534], "elpas": 443, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 123, 125, 133, 200, 378, 381, 392, 395, 402, 405, 406, 408, 410, 412, 488, 576, 578], "elsewher": [115, 117], "email": [379, 381, 404, 408], "emax": [130, 251, 278, 458, 464, 555], "emax_fit": 473, "embryon": 394, "emce": [387, 395, 419, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "emerg": 388, "emeri": 438, "emin": [130, 251, 278, 458, 464, 555], "emin_fit": 473, "emiss": [52, 68, 137, 384, 389, 393, 453, 459, 461, 462, 465, 486, 491, 492, 512, 526, 552, 573], "emit": [82, 214, 215, 216, 217, 364, 378, 419, 437, 449, 521], "emitt": 453, "emmanoulopoulo": [301, 445], "emmanoulopoulos2010": 301, "emphas": 480, "emphasi": 481, "empir": 40, "emploi": 455, "empti": [92, 100, 102, 105, 109, 110, 141, 173, 193, 194, 196, 200, 202, 205, 206, 211, 246, 364, 386, 388, 420, 432, 461, 465, 466, 469, 472, 483, 484, 493, 505, 512, 525, 526, 529], "empty_dataset": 448, "empty_i": 472, "empty_map": [102, 105, 109, 110, 464, 483, 525], "emsembl": 93, "en": [34, 83, 87, 88, 91, 126, 186, 201, 211, 275, 305, 381, 398, 448, 456, 458, 461, 463, 469, 472, 481, 482, 485, 491, 513, 516, 527, 529], "enabl": [387, 390, 411, 420, 429, 438, 448, 456, 458, 461, 463, 469, 472, 491, 523], "encapsul": [204, 402, 527], "enclos": [206, 379, 450, 455, 481, 485], "enclosur": [82, 157, 445, 455, 482], "encod": [16, 84, 87, 90, 91, 104, 124], "encompass": [192, 527, 529], "encount": [167, 410, 411, 412, 413, 455, 459, 465, 472, 475, 494, 564, 576], "encourag": [378, 383, 404, 407, 437], "end": [52, 53, 86, 87, 91, 92, 94, 100, 102, 109, 123, 125, 133, 198, 238, 246, 383, 385, 387, 389, 390, 392, 393, 394, 395, 397, 398, 401, 430, 440, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 498, 500, 501, 502, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 578], "end_po": [127, 338, 467], "endswith": 378, "energet": 465, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 80, 82, 83, 88, 96, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 122, 123, 125, 126, 127, 130, 132, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 173, 175, 179, 180, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 373, 374, 378, 384, 387, 389, 390, 391, 392, 393, 394, 396, 397, 400, 402, 406, 410, 414, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 431, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 475, 478, 479, 480, 483, 484, 493, 494, 496, 500, 501, 502, 511, 512, 513, 516, 521, 523, 524, 525, 527, 528, 529, 536, 542, 548, 551, 553, 556, 561, 571, 574, 575, 577], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 102, 105, 109, 110, 111, 112, 113, 116, 123, 125, 150, 151, 152, 155, 163, 166, 173, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 402, 448, 450, 453, 455, 456, 457, 459, 463, 465, 466, 471, 472, 475, 479, 482, 483, 484, 487, 492, 493, 501, 520, 523, 525, 526, 528, 529], "energy_axis_new": 479, "energy_axis_tru": [102, 105, 109, 110, 111, 112, 113, 114, 116, 150, 151, 152, 153, 155, 161, 163, 173, 379, 423, 448, 450, 453, 455, 456, 457, 459, 463, 465, 466, 469, 471, 472, 473, 475, 479, 482, 483, 492, 493, 501, 520, 523, 525, 526], "energy_bin": 394, "energy_bin_per_decade_max": [112, 113], "energy_bound": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 392, 429, 449, 451, 453, 455, 461, 462, 473, 477, 478, 481, 487, 492, 501, 502, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561], "energy_cent": 272, "energy_column": 402, "energy_depend": 464, "energy_dependent_estim": [447, 464, 468], "energy_edg": [16, 118, 120, 122, 126, 127, 130, 133, 141, 142, 146, 198, 325, 402, 449, 453, 454, 457, 458, 459, 461, 462, 463, 464, 467, 470, 471, 472, 473, 480, 493, 500, 501, 514], "energy_estim": 493, "energy_flux": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 487, 502], "energy_flux_err": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "energy_flux_error": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "energy_index": 160, "energy_integr": 51, "energy_logspac": 397, "energy_mask": [191, 192, 201, 204, 425, 455, 461, 473, 479, 481, 485, 489], "energy_max": [19, 20, 26, 83, 100, 102, 105, 109, 110, 123, 125, 126, 127, 130, 150, 191, 192, 198, 201, 204, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 272, 275, 280, 392, 394, 461, 466, 473, 475, 477, 479, 483, 487, 502], "energy_min": [19, 20, 26, 52, 53, 83, 100, 102, 105, 109, 110, 123, 125, 126, 127, 130, 150, 191, 192, 198, 201, 204, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 272, 275, 280, 392, 394, 461, 466, 473, 475, 477, 479, 483, 487, 502], "energy_nam": [163, 166], "energy_nod": [401, 487], "energy_pow": [19, 20, 26, 125, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 282, 453, 461, 473, 481, 501, 502], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 102, 105, 109, 110, 429, 479, 485, 559, 560], "energy_range_fit": [102, 105, 109, 110, 479], "energy_range_saf": [102, 105, 109, 110, 479], "energy_range_tot": [102, 105, 109, 110, 485], "energy_reco": [378, 469], "energy_ref": [123, 125], "energy_resolut": 437, "energy_saf": 394, "energy_tru": [16, 96, 102, 105, 109, 110, 111, 116, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 173, 180, 183, 191, 192, 198, 201, 204, 303, 304, 378, 379, 391, 443, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 466, 469, 470, 471, 472, 473, 475, 479, 482, 483, 484, 485, 487, 488, 491, 492, 493, 500, 501, 520, 521, 523, 525, 526, 528, 529], "energy_true_axi": 150, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 421, "energydependentmorphologi": 464, "energydependentmorphologyestim": [444, 464], "energydependentmultigausspsf": [159, 417, 482, 491, 522], "energydependenttablepsf": [384, 399, 418, 429], "energydispers": [150, 151, 152, 155, 390, 424, 434, 437, 438], "energydispersion2d": [88, 150, 152, 159, 165, 183, 184, 379, 384, 429, 431, 436, 482, 491, 520], "energydispersion3d": 482, "energyoffsetarrai": 434, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 381, 405], "engin": [87, 91], "english": 516, "enhanc": [383, 387, 414], "enlarg": 526, "enough": [391, 393, 394, 453, 456, 459, 469, 470, 485, 523], "enrico": 394, "enrico_config": 394, "enrico_xml": 394, "enriqu": [386, 394, 398, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 437, 438, 439], "ensembl": 93, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 179, 199, 284, 378, 384, 389, 390, 401, 405, 411, 431, 448, 453, 471, 480, 485, 523, 528, 537], "enter": [215, 217, 224, 246, 414], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 102, 104, 105, 109, 110, 124, 180, 450, 461, 464, 476], "entri": [43, 44, 87, 91, 94, 120, 123, 126, 127, 130, 131, 133, 135, 136, 143, 144, 211, 212, 224, 246, 284, 345, 378, 379, 390, 398, 402, 405, 407, 410, 412, 429, 440, 450, 454, 478, 481, 484, 487, 488, 516, 517, 529], "entry_point": 430, "enum": [95, 156, 320, 321], "enumer": [453, 465, 478, 481, 486, 489], "env": [381, 395, 407, 409, 410, 412, 413, 438, 576], "envelop": [391, 481, 501], "environ": [11, 82, 343, 377, 378, 381, 385, 386, 390, 395, 398, 407, 408, 410, 411, 412, 413, 414, 418, 419, 421, 437, 438, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 576], "envis": 387, "envvar": 11, "eosbc5kx": 475, "eosc": 404, "episod": 137, "epoch": 361, "epsilon": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "epsilon_": [102, 109, 512], "epsilon_k": [102, 109, 512], "epsmch": 481, "eq": 101, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 401, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 118, 122, 126, 130, 133, 150, 198, 378, 388, 391, 439, 453, 470, 471, 485, 489, 512, 528, 579], "equat": [27, 267, 268, 293, 538, 539, 543, 546, 547, 549, 550, 554, 555, 557, 558, 559, 560, 578, 579], "equatori": [95, 156, 192, 193, 194, 196, 199, 201, 204, 205, 206, 482], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 123, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 371, 379, 390, 391, 392, 401, 402, 443, 444, 453, 478, 483, 484, 485, 487, 491, 500, 512, 514, 516, 527, 528, 529, 576, 577, 578], "er": [26, 477], "era": 226, "ereco": [150, 482], "erf": [234, 533], "erg": [52, 53, 67, 448, 453, 478, 502, 509, 516], "erlangen": 397, "erod": 206, "eros": [204, 206], "err": 481, "errat": 378, "errn": [122, 126, 130, 131, 133, 211, 440, 578], "errn_2sigma": 578, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 101, 102, 104, 105, 109, 110, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 143, 169, 195, 198, 203, 214, 216, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 286, 288, 292, 293, 294, 296, 301, 356, 378, 379, 392, 393, 394, 396, 401, 402, 405, 406, 419, 423, 425, 427, 429, 430, 432, 436, 437, 440, 442, 443, 444, 445, 449, 450, 451, 453, 454, 456, 457, 458, 461, 462, 463, 464, 466, 469, 470, 472, 473, 475, 476, 478, 480, 487, 488, 489, 491, 500, 501, 502, 504, 512, 514, 516, 534, 552, 561, 573, 576], "error_callback": 169, "errorbar": [83, 101, 102, 105, 109, 110, 198, 202, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 448, 475, 489], "errp": [122, 126, 130, 131, 133, 211, 440, 578], "errp_2sigma": 578, "escap": [378, 404], "especi": [87, 91, 137, 381, 385, 388, 392, 398, 399, 408, 429, 435, 450, 463, 471, 478, 484, 489, 491, 492], "essenti": [388, 390, 393, 423, 424, 425, 467, 484], "establish": [378, 391], "estim": [6, 19, 20, 26, 50, 72, 101, 105, 110, 112, 113, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 168, 174, 175, 176, 182, 191, 192, 201, 204, 206, 211, 214, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 284, 291, 294, 299, 325, 371, 382, 384, 387, 391, 392, 393, 394, 397, 400, 406, 410, 419, 420, 423, 424, 425, 426, 429, 430, 431, 435, 436, 437, 438, 440, 443, 444, 445, 447, 448, 449, 453, 455, 459, 461, 462, 463, 466, 468, 471, 472, 473, 474, 479, 481, 485, 489, 490, 493, 496, 500, 501, 512, 516, 526, 573, 574, 575, 577, 579], "estimate_best_fit": [126, 127, 130, 131], "estimate_count": [126, 127, 130, 131], "estimate_energy_depend": 120, "estimate_errn_errp": [126, 127, 130, 131], "estimate_excess_map": 122, "estimate_exposure_reco_energi": 122, "estimate_fit_input_map": 133, "estimate_flux_default": 133, "estimate_flux_map": 133, "estimate_flux_point": [126, 127, 130], "estimate_kernel": [122, 133], "estimate_map": 118, "estimate_mask_default": [122, 133], "estimate_min_e2dnd": 132, "estimate_min_excess": 132, "estimate_npr": [126, 127, 130, 131], "estimate_npred_excess": [126, 127, 130], "estimate_pad_width": 133, "estimate_scan": [126, 127, 130, 131], "estimate_t": [126, 127, 130, 131], "estimate_time_bin_flux": 130, "estimate_ul": [126, 127, 130, 131], "estimator_result": [135, 143, 144, 473], "et": [26, 33, 59, 101, 136, 137, 153, 226, 293, 294, 296, 301, 388, 445, 457, 464, 476, 504, 575], "eta": [236, 237, 259, 535, 539, 566], "eta_": 50, "eta_b": 50, "eta_rang": [535, 539], "etc": [105, 110, 123, 378, 383, 384, 388, 389, 390, 393, 394, 398, 399, 402, 404, 405, 426, 454, 456, 461, 469, 470, 472, 473, 475, 479, 484, 487, 489, 492, 500, 512, 525], "etru": 482, "eu": 398, "euclidean": 303, "europ": 404, "ev": [480, 482, 516, 552], "ev2": 482, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 102, 105, 108, 109, 110, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 180, 186, 201, 212, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 318, 378, 383, 387, 393, 396, 397, 400, 401, 402, 406, 418, 419, 420, 422, 425, 429, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 465, 466, 473, 482, 487, 489, 491, 492, 512, 534, 535, 542, 575, 578], "evaluate_contain": [154, 162, 164, 431], "evaluate_direct": [154, 162, 164], "evaluate_energy_flux": [252, 253], "evaluate_error": [19, 20, 26, 125, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 396], "evaluate_geom": [220, 221, 225, 232, 233, 236, 248, 250, 259, 260, 262, 264, 270, 274, 444, 487, 535], "evaluate_integr": [251, 252, 253], "evaluate_paramet": [154, 162, 164], "evaluation_bin_size_min": [220, 221, 225, 233, 236, 248, 250, 259, 260, 262, 264, 270, 274], "evaluation_radiu": [220, 221, 225, 233, 236, 248, 250, 259, 260, 262, 264, 270, 272, 274, 389, 390, 401, 487], "evaluation_region": [220, 221, 225, 233, 236, 248, 250, 259, 260, 262, 264, 270, 274], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 134, 143, 204, 215, 217, 378, 381, 383, 385, 386, 392, 395, 396, 404, 405, 421, 470, 473, 480, 481, 483, 484, 485, 486, 487, 500, 512, 514, 538, 539, 576], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 103, 104, 108, 114, 122, 132, 152, 163, 166, 167, 174, 182, 193, 194, 196, 202, 205, 206, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 335, 378, 379, 382, 384, 388, 390, 392, 393, 394, 405, 410, 414, 421, 422, 423, 425, 429, 430, 431, 436, 437, 438, 439, 440, 443, 444, 445, 447, 450, 453, 454, 455, 459, 461, 462, 468, 472, 483, 493, 496, 498, 500, 501, 516, 524, 525, 526, 574, 575, 578], "event_3fhl": 502, "event_class": [84, 492, 502], "event_det_coord": [103, 108], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [391, 491, 492, 502, 513], "event_list": [83, 378, 379, 391], "event_list_meta": [103, 108, 424], "event_sampl": [447, 465, 468], "event_sampling_nrg_depend_model": [447, 466, 468], "event_typ": [104, 492, 502], "eventlist": [84, 88, 103, 108, 182, 193, 194, 196, 202, 205, 206, 378, 379, 384, 391, 392, 393, 405, 414, 419, 426, 431, 433, 434, 435, 437, 438, 465, 466, 473, 484, 491, 492, 502, 513, 516, 525], "eventlistbas": 89, "eventlistdataset": 438, "eventlistmetadata": [83, 405], "events2": 83, "events_": 465, "events_0001": 465, "events_1": 513, "events_2": 513, "events_3fhl": 502, "events_bkg": 391, "events_gc_3fhl": 502, "events_list": 391, "events_path": [82, 465], "events_src": 391, "events_tot": 391, "events_vela": 473, "eventu": [378, 383, 394, 397, 398, 414, 487], "ever": 579, "everi": [192, 194, 206, 274, 378, 381, 386, 387, 388, 390, 394, 403, 405, 408, 450, 453, 484, 501, 576], "everyon": 383, "everyth": [378, 396, 397, 516], "everywher": [378, 392, 397, 398, 418], "evid": [137, 478], "evolut": [50, 52, 53, 226, 384, 398, 447, 468, 496, 509, 510, 530], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 226, 395, 398, 405, 466, 482], "evt_sampl": 465, "ex": [11, 484, 486, 487], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 396, 471, 484, 492], "exactli": [118, 122, 126, 130, 133, 198, 373, 453, 455, 471, 473, 485, 489, 492, 512, 529], "exagger": 369, "examin": [404, 520], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 101, 102, 105, 109, 110, 111, 115, 116, 117, 118, 120, 122, 123, 125, 127, 129, 130, 131, 132, 133, 137, 141, 142, 145, 146, 148, 150, 152, 153, 154, 155, 161, 163, 166, 173, 176, 178, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 215, 217, 238, 244, 275, 278, 284, 287, 303, 304, 325, 329, 335, 345, 357, 358, 363, 366, 368, 369, 371, 373, 375, 378, 379, 381, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 401, 404, 405, 406, 410, 411, 412, 414, 418, 420, 423, 426, 429, 430, 431, 434, 436, 437, 438, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 513, 516, 518, 519, 520, 522, 527, 529, 530, 531, 541, 562, 570, 571, 572, 573, 576, 578, 580, 581], "example_cub": 484, "example_cube_fgst": 484, "exce": [112, 113], "except": [67, 69, 80, 87, 91, 102, 105, 109, 110, 169, 193, 194, 196, 202, 205, 206, 305, 375, 378, 389, 393, 397, 482, 486, 529], "excerpt": 494, "excess": [15, 67, 72, 102, 105, 109, 110, 119, 122, 123, 125, 126, 127, 130, 132, 135, 138, 139, 143, 144, 173, 286, 288, 293, 294, 376, 390, 393, 425, 426, 432, 437, 444, 445, 448, 449, 453, 454, 456, 457, 458, 461, 463, 467, 469, 472, 473, 478, 479, 480, 483, 485, 486, 493, 500, 501, 514, 516], "excess_estim": 493, "excess_estimator_integr": 493, "excess_integr": 493, "excess_map": [16, 454, 458, 459, 461, 500], "excess_map_estim": 473, "excess_matching_signific": [428, 438], "excess_min": 146, "excess_r": 479, "excessestim": 402, "excessmapconfig": 16, "excessmapestim": [119, 141, 142, 143, 144, 402, 425, 426, 427, 429, 432, 442, 444, 445, 459, 461, 473, 480, 485, 493, 514], "excesspointsestim": 402, "excessprofileestim": [402, 426], "exchang": 392, "exclud": [16, 84, 90, 101, 102, 104, 105, 109, 110, 124, 129, 174, 176, 215, 217, 224, 246, 384, 441, 483, 485, 525, 526], "exclude_default": [16, 84, 90, 104, 124], "exclude_non": [16, 84, 90, 104, 124], "exclude_unset": [16, 84, 90, 104, 124], "exclus": [16, 83, 168, 170, 175, 176, 177, 178, 181, 192, 204, 384, 392, 394, 425, 427, 445, 450, 458, 461, 483, 523, 525], "exclusion_mask": [168, 170, 175, 176, 177, 178, 181, 453, 459, 463, 483, 485, 501, 523, 525, 526], "exclusion_mask_2d": 483, "exclusion_mask_crab": [454, 500], "exclusion_radiu": 485, "exclusion_region": 453, "exclusionmask": 435, "execut": [11, 122, 126, 130, 131, 133, 378, 379, 381, 383, 385, 386, 387, 393, 394, 398, 408, 409, 410, 411, 412, 413, 414, 423, 431, 437, 447, 452, 460, 468, 474, 483, 484, 490, 492, 495, 496, 497, 499, 502, 503, 531, 541, 562, 572, 574], "exercis": [381, 394, 398, 404], "exhibit": 464, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 88, 91, 99, 100, 101, 102, 105, 107, 109, 110, 123, 125, 151, 152, 158, 163, 166, 178, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 212, 224, 238, 246, 270, 271, 272, 274, 347, 362, 378, 381, 383, 386, 387, 389, 390, 391, 392, 394, 395, 397, 398, 399, 401, 402, 404, 405, 410, 411, 414, 415, 418, 422, 423, 437, 438, 440, 443, 457, 459, 479, 484, 485, 487, 488, 492, 513, 528, 529, 577], "exist_ok": [453, 454, 461, 462, 465, 500, 501], "exit": [11, 15, 87, 91, 215, 217, 224, 246, 419, 540, 576], "exot": 395, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 153, 231, 234, 241, 252, 253, 266, 379, 401, 472, 487, 534, 535, 542, 546, 547, 548, 549, 558, 559, 560, 564, 565, 566, 579], "expand": [130, 343, 388, 429], "expand_map": 130, "expans": [50, 52, 53], "expcutoffpowerlaw": 548, "expcutoffpowerlaw3fglspectralmodel": [257, 401, 451, 487, 547], "expcutoffpowerlawnormspectralmodel": [230, 257, 444, 487, 548], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 218, 219, 222, 226, 228, 229, 234, 240, 241, 243, 247, 249, 251, 252, 253, 257, 258, 263, 265, 266, 267, 268, 271, 275, 401, 451, 453, 461, 487, 546, 552], "expdecai": [231, 447, 530, 572], "expdecay_model": [465, 564], "expdecaytemporalmodel": [269, 401, 425, 429, 465, 472, 487, 564], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 105, 108, 110, 123, 178, 183, 184, 189, 204, 286, 287, 288, 289, 291, 295, 302, 335, 378, 383, 391, 393, 394, 395, 398, 403, 405, 448, 450, 455, 456, 457, 459, 465, 466, 470, 476, 477, 481, 484, 485, 489, 492, 494, 512, 514, 577, 578, 579], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 453, 466], "experi": [378, 381, 383, 387, 389, 393, 406, 408, 437, 504, 575, 580], "experienc": [387, 413], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 394, 576], "expert": 398, "expertis": 395, "expfactor": [267, 268, 559, 560], "expir": 391, "explain": [87, 91, 378, 381, 383, 392, 395, 397, 398, 404, 408, 410, 412, 423, 429, 448, 453, 455, 477, 481, 485, 487, 491, 516, 574, 576], "explan": [118, 122, 126, 130, 133, 379, 383, 415, 476, 580], "explicit": [87, 91, 192, 194, 378, 379, 394, 396, 402, 528, 580], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 305, 388, 400, 409, 419, 466, 486, 514, 528, 580], "explor": [193, 194, 196, 202, 205, 206, 386, 394, 414, 447, 453, 458, 461, 464, 467, 468, 470, 471, 475, 476, 478, 479, 486, 493, 494, 500, 502, 516, 525], "explos": 52, "expomap": 391, "expon": [401, 487], "exponenti": [28, 30, 36, 39, 40, 77, 228, 229, 230, 231, 266, 267, 268, 379, 389, 423, 447, 461, 465, 472, 530, 562], "exponentialcutoffpowerlaw": 552, "export": [84, 87, 90, 91, 102, 104, 105, 123, 124, 125, 381, 402, 405, 410, 412, 423, 433, 440, 441, 444, 454, 487, 493, 494, 500], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387, 392, 393, 394, 397, 398, 442, 444, 445, 484, 496, 514, 515, 574], "exposur": [16, 83, 88, 102, 105, 106, 108, 109, 110, 122, 133, 140, 151, 152, 158, 161, 163, 166, 168, 173, 180, 183, 184, 185, 187, 188, 189, 262, 297, 300, 302, 384, 387, 388, 389, 390, 391, 402, 421, 426, 434, 436, 437, 438, 440, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 466, 469, 471, 472, 475, 479, 483, 484, 485, 493, 500, 501, 512, 521, 524, 529, 578], "exposure_geom": 152, "exposure_hdu": [151, 152, 158, 163, 166], "exposure_hdu_band": [151, 152, 158, 163, 166], "exposure_hpx": 492, "exposure_map": [151, 152, 158, 163, 166, 183, 184, 189, 482], "exposure_max": 479, "exposure_min": 479, "exposure_tim": 391, "express": [122, 137, 286, 288, 389, 401, 402, 444, 459, 481, 482, 487, 489, 512, 528, 535, 577, 578, 579], "exptest": 435, "extend": [15, 19, 20, 26, 69, 72, 87, 91, 92, 100, 168, 195, 198, 206, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 246, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 287, 385, 389, 390, 391, 392, 398, 400, 401, 402, 405, 410, 422, 424, 429, 447, 452, 453, 457, 466, 470, 478, 484, 485, 486, 487, 492, 496, 524, 525], "extended_archive_v18": 540, "extended_source_spectral_analysi": [447, 450, 452], "extens": [41, 150, 193, 194, 196, 198, 205, 206, 220, 221, 224, 225, 233, 236, 246, 248, 250, 259, 260, 264, 270, 274, 380, 383, 384, 385, 386, 387, 389, 391, 393, 394, 395, 396, 397, 398, 408, 432, 464, 465, 466, 487, 576], "extent": [204, 224, 246, 392, 457, 487], "extern": [114, 379, 404, 430, 434, 435, 438, 491, 516], "extnam": 482, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 101, 104, 124, 191, 192, 197, 201, 202, 204, 210, 211, 213, 270, 271, 303, 377, 379, 385, 386, 392, 394, 395, 398, 404, 405, 434, 437, 438, 449, 484, 485, 516, 529], "extra_term": 302, "extract": [16, 84, 90, 100, 102, 104, 105, 109, 110, 123, 124, 125, 130, 151, 152, 158, 163, 166, 169, 174, 175, 180, 182, 190, 193, 194, 195, 196, 198, 203, 204, 205, 206, 272, 378, 388, 393, 402, 404, 405, 431, 432, 443, 444, 448, 450, 453, 454, 455, 456, 461, 462, 465, 466, 467, 469, 475, 479, 480, 484, 500, 512, 520, 525], "extragalact": [226, 449, 491], "extrapol": [101, 147, 148, 149, 173, 193, 194, 196, 202, 205, 206, 226, 275, 317, 318, 429, 434, 436, 437, 445, 482, 484, 491, 492, 528], "extras_requir": 395, "extrem": [378, 405, 484, 535], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 133, 146, 200, 211, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 304, 305, 332, 378, 381, 395, 400, 401, 406, 409, 410, 412, 431, 440, 448, 450, 453, 454, 456, 462, 463, 464, 465, 466, 471, 472, 473, 475, 477, 478, 481, 483, 485, 487, 488, 489, 491, 492, 493, 498, 500, 501, 502, 510, 525, 542, 552, 563, 564, 565, 566, 567, 568, 569, 576, 577, 578], "f0": [273, 570], "f06": 48, "f06b": [49, 506], "f06p": 49, "f1": [273, 570], "f2": [273, 570], "f4": [148, 153, 455, 479, 482, 484, 491, 492], "f5folvgu": 449, "f8": [482, 492], "f8dzp": 475, "f_": [292, 294, 304, 512], "f_0": [251, 555], "f_dead": [83, 88], "f_i": 292, "f_max": 476, "f_max_err": 476, "f_mean": 476, "f_mean_err": 476, "f_min": 476, "f_min_err": 476, "f_pp": 293, "f_var": 293, "fabio": [391, 396, 419, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 436, 438, 440, 442, 443, 444, 445], "face": [383, 386], "facecolor": [375, 449, 453, 455, 463, 464, 467, 473, 477, 533, 534, 535], "facero": 445, "facil": 403, "fact": [19, 20, 97, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 404, 450, 529], "facto": 404, "factor": [19, 20, 23, 102, 103, 105, 108, 109, 110, 118, 122, 123, 151, 152, 154, 158, 160, 161, 162, 163, 164, 166, 173, 180, 186, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 209, 214, 215, 216, 217, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 248, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 273, 274, 276, 287, 378, 391, 393, 425, 445, 448, 456, 457, 458, 461, 463, 467, 469, 472, 479, 480, 483, 487, 491, 512, 529, 542], "factor1": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274], "factor_max": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274], "factor_min": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274], "factori": [193, 194, 205, 206, 392, 397, 401, 527, 529], "factoris": [262, 401, 487, 573], "fail": [16, 84, 90, 104, 124, 211, 379, 381, 392, 407, 408, 432, 462, 492], "failur": [440, 443], "faint": 577, "fair": [378, 404], "fair4r": [378, 404], "fake": [102, 105, 109, 110, 390, 391, 421, 455, 456, 469, 472, 489], "fall": [77, 137, 176, 203, 224, 246, 378, 385, 387, 388, 395, 438, 439, 476], "fallback": 378, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 122, 123, 124, 125, 126, 130, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 173, 180, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 287, 305, 318, 335, 341, 344, 346, 347, 375, 378, 392, 394, 401, 406, 437, 438, 444, 448, 449, 450, 453, 454, 455, 456, 458, 459, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 475, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 492, 500, 501, 502, 513, 516, 523, 525, 526, 540, 552, 561], "falsifi": 489, "famili": 404, "familiar": [395, 396, 484, 485, 502], "fanci": [378, 473], "far": [386, 391, 393, 395, 399, 402, 405, 414, 429, 465, 504], "fashion": [393, 398], "fast": [378, 392, 396, 481], "faster": [87, 91, 134, 143, 193, 194, 196, 202, 205, 206, 356, 444, 457], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 506, "favour": [383, 391, 406, 489], "favourit": 463, "fc": [487, 529], "fcluster": [303, 488], "fcluster_kwarg": [303, 488], "fcn": 481, "fdx": 378, "fe": 277, "feasibl": [392, 397, 456, 469, 479], "featur": [6, 13, 87, 91, 96, 118, 141, 303, 304, 368, 369, 378, 381, 385, 387, 388, 389, 390, 392, 394, 395, 400, 401, 402, 404, 405, 406, 411, 416, 419, 420, 421, 422, 423, 425, 426, 429, 433, 436, 437, 438, 439, 476, 484, 485, 487, 488, 514, 552], "feature_irf": 488, "features_irf": [96, 303, 304, 488], "feb": [384, 385, 395, 399, 414, 416], "februari": 416, "fed": 455, "feedback": [381, 383, 387, 392, 394, 395, 398, 399, 401, 407, 437, 482, 516], "feedstock": [407, 408], "feel": [388, 576], "feijen": [442, 443, 444, 445], "feldman": [420, 426, 434, 436, 575], "feldman1998": [575, 578], "fellowship": 404, "felt": 378, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 126, 127, 129, 133, 193, 194, 196, 202, 203, 205, 206, 226, 277, 279, 284, 385, 386, 387, 388, 390, 391, 394, 395, 398, 408, 410, 415, 417, 418, 421, 423, 426, 430, 433, 434, 435, 436, 437, 438, 445, 447, 449, 451, 457, 465, 467, 478, 484, 485, 486, 487, 495, 496, 502, 504, 513, 516, 521, 540, 550, 555, 573, 580], "fermi_3fhl": [83, 193, 194, 196, 202, 205, 206, 486, 492, 502], "fermi_3fhl_events_select": [83, 492], "fermi_3fhl_exposure_cube_hpx": 492, "fermi_3fhl_psf_gc": 492, "fermi_bkg_model": 486, "fermi_ct": 129, "fermi_dataset": [284, 486, 492], "fermi_lat": [398, 438, 447, 492, 495], "fermi_model": 492, "fermi_prof": 127, "fermi_ts_imag": 379, "fermilat": 449, "fermipi": [385, 387, 390, 394, 398, 402, 435, 437, 492, 504], "fermitool": 394, "fetch": [15, 378, 386, 417, 430, 500, 576], "few": [82, 83, 87, 88, 91, 377, 378, 379, 381, 383, 384, 385, 386, 388, 390, 392, 396, 398, 403, 407, 408, 414, 428, 439, 441, 444, 450, 454, 459, 461, 463, 478, 480, 481, 484, 491, 500, 501, 525, 529, 581], "fewer": [392, 398], "ff": 404, "fft": 206, "fftconvolv": 206, "fgl": [203, 485], "fgst": [192, 193, 194, 196, 197, 198, 204, 205, 206, 484], "fhit": 493, "fidalgo": [388, 393, 418, 438, 439], "fiduci": 484, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 104, 124, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 170, 232, 247, 307, 311, 365, 378, 392, 404, 405, 414, 419, 424, 431, 438, 453, 455, 459, 461, 463, 465, 482, 483, 485, 491, 492, 516, 518, 519, 520, 521, 522, 523, 525, 552, 575], "fieldinfo": [16, 84, 90, 104, 124], "fig": [206, 366, 448, 450, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 467, 470, 472, 473, 477, 481, 485, 489, 525, 526, 535, 539, 542, 574], "figsiz": [88, 102, 105, 109, 110, 128, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 193, 194, 196, 202, 205, 206, 209, 366, 450, 453, 456, 457, 459, 461, 462, 463, 464, 470, 471, 472, 473, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 525, 535, 539, 542], "figur": [88, 102, 105, 109, 110, 128, 147, 148, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 166, 193, 194, 196, 202, 205, 206, 209, 356, 365, 366, 372, 378, 379, 383, 398, 408, 449, 453, 457, 461, 463, 464, 465, 467, 470, 471, 476, 477, 478, 479, 481, 483, 484, 486, 487, 491, 492, 493, 494, 576], "fihpzyz": 487, "file": [11, 15, 16, 26, 65, 66, 67, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 179, 193, 194, 196, 200, 202, 205, 206, 212, 224, 226, 238, 246, 270, 271, 272, 273, 274, 275, 313, 341, 344, 347, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 397, 398, 399, 401, 402, 405, 406, 407, 408, 409, 410, 412, 414, 422, 423, 429, 431, 433, 435, 436, 437, 438, 440, 441, 443, 444, 445, 447, 448, 452, 455, 456, 460, 461, 463, 465, 466, 468, 469, 472, 474, 478, 479, 483, 484, 485, 486, 487, 490, 493, 494, 495, 496, 497, 499, 502, 503, 504, 515, 516, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 580], "file_dir": 313, "file_model": 465, "file_nam": 313, "filemod": [16, 454, 458, 459, 461, 500, 576], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 127, 129, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 193, 194, 196, 200, 202, 205, 206, 224, 226, 238, 246, 270, 271, 272, 273, 274, 275, 279, 281, 283, 284, 313, 344, 347, 357, 378, 379, 383, 426, 445, 453, 454, 458, 459, 461, 462, 466, 467, 478, 479, 480, 484, 485, 486, 487, 491, 492, 500, 501, 502, 513, 516, 518, 519, 520, 522, 540, 542, 570, 571, 576], "filename_1": 513, "filename_2": 513, "filename_arf": 107, "filename_bkg": 107, "filename_model": [100, 123, 284, 486, 492], "filename_rmf": 107, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 102, 104, 105, 108, 109, 110, 124, 150, 161, 192, 193, 194, 196, 202, 204, 205, 206, 275, 378, 386, 387, 391, 394, 398, 404, 407, 408, 423, 430, 437, 440, 450, 465, 466, 478, 482, 483, 485, 492, 501, 528], "fill_between": [19, 20, 26, 128, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 473], "fill_by_coord": [161, 193, 194, 196, 202, 205, 206, 484, 492, 528], "fill_by_idx": [193, 194, 196, 202, 205, 206, 528], "fill_by_pix": [193, 194, 196, 202, 205, 206, 528], "fill_ev": [193, 194, 196, 202, 205, 206, 432, 443, 455, 484, 492, 498], "fill_nan": 194, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206, 270, 271, 274, 378, 482, 484], "filled_t": [87, 91], "filter": [88, 89, 384, 388, 390, 392, 393, 438, 439, 442, 475, 485, 488, 496, 501, 502], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [123, 125], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [472, 473], "final": [130, 287, 378, 379, 385, 386, 388, 391, 392, 394, 395, 397, 399, 401, 403, 404, 408, 423, 424, 425, 448, 449, 450, 451, 453, 461, 463, 465, 466, 470, 471, 473, 477, 479, 481, 483, 485, 488, 492, 493, 496, 500, 501, 502, 512, 513, 514], "finalis": 382, "find": [19, 20, 26, 133, 141, 142, 150, 176, 177, 181, 208, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 297, 378, 383, 389, 391, 397, 407, 408, 409, 429, 431, 437, 438, 443, 444, 451, 453, 457, 478, 479, 484, 487, 491, 494, 502, 576, 578, 579], "find_peak": [142, 438, 457, 463], "find_peaks_in_flux_map": 457, "find_root": 429, "finder": [141, 176, 177, 429, 438, 457], "fine": [285, 318, 391, 459, 479, 492, 529, 576], "finer": [465, 479, 529], "fingertip": 377, "finish": [381, 385, 387, 407, 435, 437], "finit": [100, 102, 105, 109, 110, 151, 152, 158, 163, 179, 194, 202, 206, 272, 396], "fink": [226, 227, 449, 542], "fir": 552, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 102, 105, 109, 110, 123, 125, 127, 134, 136, 141, 143, 150, 167, 176, 193, 194, 195, 198, 202, 203, 224, 246, 278, 296, 338, 367, 378, 379, 381, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 408, 409, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 436, 438, 439, 440, 441, 443, 445, 448, 450, 451, 453, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 496, 500, 501, 502, 513, 525, 528, 576], "firstli": [464, 465, 480], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 170, 173, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 210, 212, 213, 214, 216, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 272, 273, 274, 275, 284, 285, 286, 288, 289, 290, 295, 298, 302, 313, 314, 315, 360, 361, 364, 366, 371, 373, 377, 378, 379, 384, 388, 389, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 410, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 434, 436, 437, 438, 439, 441, 443, 444, 445, 447, 448, 452, 456, 457, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 478, 479, 480, 482, 483, 484, 486, 487, 488, 490, 491, 493, 494, 496, 498, 502, 512, 513, 514, 515, 516, 518, 519, 520, 522, 523, 524, 525, 533, 540, 542, 552, 570, 571, 574, 575, 580], "fit2": 486, "fit_covari": [454, 500], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [450, 453, 461, 462], "fit_prior": 489, "fit_rang": [16, 454, 458, 459, 461, 500], "fit_result": [211, 284, 454, 475, 480, 500], "fit_results_nul": 284, "fit_scipi": 481, "fit_sherpa": 481, "fit_stat_scan": 393, "fit_statist": [378, 459], "fit_statistics_cython": 408, "fitconfig": 16, "fitmc": 396, "fitresult": [211, 431, 443, 445, 481, 501], "fitsfixedwarn": [457, 540], "fitsonli": 491, "fitspectrum": 433, "fitstepresult": [210, 213], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 436, 437, 451], "five": 502, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 106, 107, 133, 145, 163, 165, 180, 211, 248, 249, 254, 274, 381, 383, 384, 385, 389, 390, 393, 395, 400, 402, 403, 404, 407, 408, 410, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 448, 455, 456, 458, 459, 461, 462, 465, 469, 471, 472, 475, 481, 482, 483, 486, 487, 488, 500, 526, 528, 536, 553], "fixed_altaz": 85, "fixed_bin": 145, "fixed_icr": [85, 163, 448, 456, 465, 466, 469, 472], "fixed_offset": [96, 179, 429], "fixed_r_in": 168, "fixed_width": 168, "fixedpointinginfo": [88, 163, 186, 443, 444, 448, 456, 465, 466, 469, 472], "fk5": [529, 540], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 108, 123, 125, 126, 127, 130, 131, 191, 192, 193, 194, 196, 198, 199, 201, 202, 204, 205, 206, 210, 211, 212, 213, 450, 461, 465, 478, 487], "flake8": 381, "flare": [137, 292, 410, 423, 424, 447, 470, 472, 474, 475, 476, 496, 514, 525], "flask": 437, "flat": [125, 137, 155, 165, 191, 192, 197, 199, 201, 204, 207, 208, 248, 389, 402], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 191, 192, 199, 201, 204, 476], "fledg": 406, "flexibl": [82, 329, 378, 383, 387, 388, 389, 392, 394, 398, 399, 405, 484, 516, 573], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 102, 105, 109, 110, 114, 118, 122, 124, 125, 128, 131, 132, 133, 141, 142, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 168, 170, 179, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 207, 208, 211, 213, 214, 216, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 284, 285, 286, 287, 288, 291, 295, 297, 305, 316, 323, 332, 334, 367, 368, 369, 483, 489, 491, 492, 576, 580], "float32": [191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 458, 463, 484], "float64": [87, 91, 111, 116, 150, 153, 378, 406, 414, 480, 482, 484, 514, 576], "float64float64float64": 463, "float64float64float64float64float64float64float64float32bool": 451, "float64float64float64float64float64float64float64float64": 463, "float_a": [87, 91], "flow": [405, 574, 575], "fluctuat": [286, 288, 402, 456, 469, 489, 578], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 101, 102, 105, 109, 110, 118, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 218, 219, 220, 222, 223, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 247, 249, 250, 251, 252, 253, 254, 258, 261, 262, 263, 265, 266, 267, 268, 271, 273, 275, 276, 277, 278, 282, 291, 292, 293, 294, 296, 301, 382, 390, 391, 393, 394, 396, 398, 399, 401, 410, 417, 420, 422, 423, 425, 429, 431, 435, 436, 437, 439, 444, 445, 447, 452, 455, 457, 461, 463, 465, 466, 468, 470, 471, 472, 473, 475, 476, 479, 484, 487, 492, 496, 510, 512, 516, 521, 530, 537, 552, 573, 574, 575, 578], "flux1": 296, "flux2": 296, "flux_err": [19, 20, 26, 123, 125, 133, 142, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 292, 293, 294, 301, 457, 470, 476], "flux_err1": 296, "flux_err2": 296, "flux_errn": [123, 125, 478], "flux_errp": [123, 125, 478], "flux_int_cu": 278, "flux_map": [123, 125, 134, 143, 402, 477], "flux_metadata_fits_kei": 124, "flux_per_omega": 487, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 101, 123, 125, 126, 390, 448, 451, 453, 454, 458, 459, 461, 463, 473, 478, 479, 500, 501, 502], "flux_point_dataset": 390, "flux_points_at_tim": 402, "flux_points_ctb_37b": 125, "flux_points_dataset": [453, 463, 473], "flux_points_dataset_no_ul": 453, "flux_points_fermi": 462, "flux_points_hawc": 462, "flux_points_hess": 462, "flux_points_intrins": 449, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 453, "flux_points_ob": 449, "flux_points_recomput": 125, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 101, "flux_profil": [447, 467, 468], "flux_profile_estim": 467, "flux_profile_fermi": 467, "flux_quant": [136, 137, 138, 139, 476], "flux_ref": [123, 125, 402], "flux_sensit": [123, 125], "flux_ul": [123, 125, 133, 478], "fluxestim": [123, 125, 126, 399, 425, 427, 428, 429, 431, 444], "fluxmap": [122, 124, 125, 133, 134, 135, 142, 143, 429, 444, 445, 457, 514], "fluxmapestim": 402, "fluxmapsmetadata": 405, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 101, 123, 124, 126, 127, 130, 136, 137, 138, 139, 145, 390, 393, 402, 405, 429, 436, 437, 443, 444, 445, 448, 451, 462, 467, 470, 471, 476, 478, 479, 502, 511, 512, 514, 516], "fluxpointdataset": 423, "fluxpointestim": [393, 420, 426, 439], "fluxpointfit": 390, "fluxpointfitt": 438, "fluxpointprofil": 439, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 102, 105, 399, 402, 405, 419, 423, 444, 445, 451, 453, 462, 463, 472, 473, 512], "fluxpointsdatasetmetadata": 405, "fluxpointsestim": [119, 127, 130, 325, 399, 400, 402, 410, 420, 425, 426, 429, 443, 444, 449, 453, 462, 463, 473, 480, 500, 501, 516], "fluxpointsetim": 402, "fluxpointsmetadata": 405, "fluxprofileestim": [119, 429, 442, 444, 467], "fly": 388, "fmt": [475, 481, 489], "focu": [388, 398, 423, 436, 455, 576], "focus": [388, 404], "fold": [108, 402, 451, 462, 471, 480, 512, 514], "folder": [11, 82, 94, 101, 106, 110, 125, 342, 378, 379, 383, 386, 407, 409, 414, 419, 429, 432, 454, 461, 465, 491, 500, 501, 574, 576], "follow": [15, 19, 20, 43, 44, 80, 82, 83, 84, 90, 91, 102, 104, 106, 107, 109, 110, 123, 124, 125, 128, 133, 135, 141, 144, 192, 193, 194, 196, 200, 205, 206, 211, 262, 278, 284, 368, 369, 371, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 421, 422, 423, 425, 426, 429, 431, 432, 438, 439, 443, 444, 448, 449, 450, 451, 453, 454, 456, 457, 458, 461, 462, 465, 466, 470, 471, 472, 473, 475, 477, 478, 480, 481, 483, 484, 485, 486, 487, 491, 496, 500, 502, 504, 506, 507, 512, 514, 516, 518, 520, 521, 525, 527, 528, 529, 530, 538, 539, 543, 546, 547, 549, 550, 554, 555, 557, 558, 559, 560, 561, 574, 575, 577, 578, 579, 581], "font": [193, 194, 196, 202, 205, 206, 379, 484], "fontsiz": [375, 473, 481], "foo": [87, 91], "footprint": [193, 194, 196, 202, 204, 205, 206, 536], "footprint_rectangle_sky_region": 204, "forbid": [16, 84, 90, 104, 124], "forbidden": 486, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 151, 152, 158, 161, 163, 166, 204, 206, 305, 383, 393, 419], "forecom": [378, 403], "foremost": 576, "forens": 394, "foreseen": [388, 403], "forev": 419, "forg": [377, 395, 407, 408, 410, 411, 414, 437, 491], "forget": [454, 464, 500], "forgot": 378, "forgotten": 378, "fork": 381, "form": [16, 84, 87, 90, 91, 102, 104, 124, 163, 166, 201, 317, 378, 384, 388, 393, 401, 403, 405, 415, 437, 445, 485, 489, 513, 521, 534, 544, 574], "formal": [383, 406, 457], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 104, 105, 107, 109, 110, 123, 124, 125, 126, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 186, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 208, 224, 232, 238, 246, 262, 272, 275, 313, 335, 359, 360, 367, 377, 386, 387, 388, 389, 390, 392, 394, 402, 404, 405, 408, 417, 429, 431, 434, 438, 440, 441, 443, 444, 449, 451, 453, 454, 455, 457, 458, 459, 461, 463, 465, 466, 467, 470, 472, 476, 478, 480, 482, 484, 485, 487, 491, 492, 493, 494, 500, 502, 504, 510, 512, 513, 514, 515, 518, 519, 520, 521, 522, 529, 570, 571, 575, 576, 577], "format_plot_xaxi": [195, 198, 203, 482], "format_plot_yaxi": [198, 482], "formatt": [367, 484], "formatwarn": 378, "former": [404, 420, 425, 450, 486, 574, 577], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 162, 252, 253, 302, 448, 577], "forthcom": 480, "forum": 407, "forward": [19, 20, 26, 83, 87, 91, 102, 105, 109, 110, 127, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 175, 197, 201, 202, 203, 211, 218, 219, 222, 223, 226, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 243, 247, 249, 251, 252, 253, 254, 258, 261, 262, 263, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 303, 367, 372, 379, 385, 388, 402, 451, 462, 471, 480, 512, 514, 529], "forwardref": [16, 84, 90, 104, 124], "found": [19, 20, 26, 82, 86, 87, 91, 137, 176, 181, 200, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 292, 381, 382, 386, 393, 403, 404, 423, 426, 427, 428, 432, 459, 465, 476, 487, 489, 494, 513, 514, 525, 526], "four": [381, 389, 402, 470, 491, 492, 520, 522, 528, 575], "fov": [122, 147, 148, 170, 171, 185, 186, 188, 190, 232, 378, 384, 392, 434, 437, 438, 458, 475, 482, 485, 486, 491, 501, 524, 575], "fov_": 378, "fov_align": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 482], "fov_background": [458, 500], "fov_bkg_mak": [483, 523], "fov_lat": [148, 482, 491, 521], "fov_lat_axi": 482, "fov_lon": [148, 482, 491, 521], "fov_lon_axi": 482, "fov_theta": 378, "fovalign": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 482], "fovbackground": [406, 425], "fovbackgroundmak": [171, 424, 429, 483, 500, 501], "fovbackgroundmodel": [15, 102, 108, 109, 113, 170, 242, 406, 426, 443, 444, 445, 461, 462, 465, 466, 469, 479, 486, 500, 501, 523, 536], "fp": [123, 125, 145, 402, 500, 514, 516], "fp_dataset": [453, 479], "fp_dnde": 402, "fp_energy_flux": 402, "fp_estim": 480, "fp_result": 480, "fpe": [325, 400, 402, 449, 453, 463, 473, 501], "fpe_no_ul": 453, "fpp": 293, "fpp_err": [293, 476], "fpp_tabl": 476, "fr": [404, 491], "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 105, 110, 150, 153, 209, 230, 234, 251, 253, 266, 292, 294, 304, 401, 512, 520, 521, 533, 534, 535, 538, 539, 543, 546, 547, 549, 550, 554, 555, 557, 558, 559, 560, 564, 565, 566, 568, 578, 579], "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 122, 132, 139, 154, 160, 162, 163, 164, 166, 201, 207, 208, 218, 219, 222, 225, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 293, 294, 388, 393, 436, 444, 448, 456, 465, 469, 479, 482, 485, 491, 492, 493], "frame": [16, 83, 85, 91, 94, 95, 96, 102, 105, 109, 110, 111, 112, 113, 116, 127, 141, 163, 173, 176, 186, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 220, 221, 225, 233, 236, 248, 250, 259, 260, 262, 264, 270, 274, 303, 304, 339, 354, 378, 379, 387, 389, 392, 402, 419, 420, 422, 423, 424, 450, 453, 454, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 479, 482, 483, 484, 485, 486, 487, 488, 492, 493, 494, 500, 501, 502, 520, 525, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540], "framework": [389, 391, 392, 394, 396, 397, 401, 419, 420, 426, 438, 473, 487, 506, 516], "franceschini": [226, 227, 275, 443, 449, 542], "franceschini17": [227, 449, 542], "franceschni": 542, "frd_ab": 227, "free": [50, 52, 53, 77, 102, 105, 109, 110, 126, 130, 131, 173, 211, 215, 217, 248, 249, 284, 383, 393, 419, 445, 449, 454, 456, 458, 459, 461, 463, 464, 469, 470, 472, 475, 479, 481, 483, 486, 487, 489, 492, 496, 500, 501, 504, 514, 523, 536, 552, 553, 576, 578, 579], "free_paramet": [215, 217, 284, 475, 481, 486], "freedom": [120, 123, 125, 135, 144, 404, 444, 464, 514, 578, 579], "freez": [19, 20, 26, 87, 91, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 393, 404, 419, 429, 444, 458, 469, 475, 481, 487, 552], "freeze_al": [215, 217], "frenk": 504, "frequenc": [273, 287, 508], "frequent": [198, 378, 387, 396, 404, 471, 472, 476, 485, 516, 517, 576], "frequentist": 396, "fridai": 387, "friendli": [378, 383, 405, 440, 454, 500, 516], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 179, 180, 182, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 291, 294, 303, 304, 305, 315, 323, 325, 327, 328, 332, 335, 336, 340, 345, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580], "from_align": [204, 429], "from_attribut": [16, 84, 90, 104, 124], "from_bound": [153, 155, 163, 192, 198, 204, 402, 462, 465, 466, 479, 482, 483, 484, 494, 528, 529], "from_covariance_matrix": 406, "from_default": 197, "from_diagonal_respons": [111, 116, 150, 151, 152, 457, 492], "from_dict": [19, 20, 26, 101, 102, 105, 109, 110, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 422, 429, 489], "from_dir": [82, 89, 96, 173, 303, 304, 414, 450, 453, 455, 463, 471, 473, 475, 483, 488, 491, 494, 498, 501, 513, 516, 523, 525, 526], "from_edg": [152, 193, 194, 196, 198, 202, 205, 206, 456, 469, 472, 482, 492, 493], "from_edisp_kernel": 151, "from_energy_bound": [102, 105, 109, 110, 111, 116, 150, 152, 153, 155, 161, 163, 173, 191, 192, 197, 198, 201, 204, 206, 379, 448, 450, 453, 455, 462, 463, 465, 466, 471, 473, 475, 479, 482, 483, 487, 492, 493, 501, 520, 523, 525, 526, 529], "from_energy_edg": [150, 198, 373, 479, 482], "from_events_fil": [82, 465, 491], "from_factor_matrix": 209, "from_fil": [82, 513], "from_fits_head": 85, "from_gauss": [150, 151, 155, 161, 163, 166, 520], "from_gaussian": 426, "from_geom": [102, 105, 109, 110, 151, 152, 161, 163, 166, 193, 194, 196, 200, 202, 205, 206, 423, 442, 479, 484, 485, 529, 535], "from_gti": 203, "from_gti_bound": 203, "from_hdu": [192, 194, 206], "from_hdulist": [102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 484], "from_head": [84, 90, 104, 124, 192, 204, 405], "from_irf": 165, "from_log10": [240, 241, 550], "from_map": [123, 125], "from_map_dataset": [105, 110], "from_nam": [459, 463], "from_nod": 198, "from_orm": [16, 84, 90, 104, 124], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276], "from_parametr": [153, 518], "from_posit": [220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274, 466], "from_refer": 401, "from_region": [201, 225, 443, 525], "from_region_map": 275, "from_spatial_model": 161, "from_spectrum_dataset": [110, 448, 456], "from_stack": [83, 86, 92, 123, 125, 193, 194, 195, 196, 198, 202, 205, 206, 209, 215, 217, 443, 444, 513], "from_tabl": [125, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 195, 197, 198, 202, 203, 238, 440, 448], "from_table_hdu": [86, 197, 198], "from_time_bound": 203, "from_time_edg": [203, 475, 476], "from_time_interv": 86, "from_wcs_til": 194, "from_yaml": [16, 224, 246, 389, 454], "fromnumer": [455, 475], "front": [387, 407, 436], "frozen": [19, 20, 26, 101, 126, 130, 170, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 393, 401, 406, 421, 444, 449, 450, 451, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 475, 478, 479, 480, 481, 485, 486, 487, 489, 492, 500, 501, 502, 514, 523, 552, 561], "fr\u00f6se": [444, 445], "ftol": 481, "ftool": 393, "fulfil": [405, 484], "full": [82, 126, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 194, 212, 224, 246, 313, 374, 377, 378, 383, 387, 388, 391, 393, 394, 398, 404, 406, 409, 416, 419, 429, 431, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 498, 500, 501, 502, 516, 527, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574], "full_enclosur": [186, 482], "full_output": [19, 20, 26, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276], "fulli": [130, 191, 192, 201, 204, 273, 387, 388, 395, 399, 404, 408, 411, 421, 423, 431, 450, 476, 487, 491, 493, 494], "fun": [378, 381], "func": [17, 18, 21, 22, 24, 25, 27, 90, 193, 194, 196, 202, 205, 206, 280, 326, 330, 331, 371, 459, 461], "function": [6, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 85, 87, 88, 90, 91, 100, 101, 102, 103, 105, 108, 109, 110, 118, 123, 130, 133, 134, 136, 137, 138, 139, 142, 143, 153, 154, 155, 157, 158, 160, 162, 163, 164, 166, 193, 194, 196, 198, 202, 205, 206, 211, 212, 213, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 261, 262, 263, 265, 266, 267, 268, 271, 275, 280, 286, 287, 288, 296, 297, 301, 318, 326, 327, 329, 330, 334, 335, 345, 363, 366, 367, 371, 373, 375, 377, 381, 384, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 403, 405, 406, 410, 412, 414, 415, 417, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 448, 449, 453, 454, 455, 456, 457, 461, 463, 464, 465, 466, 467, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 493, 494, 496, 500, 501, 502, 504, 505, 506, 511, 512, 513, 515, 516, 525, 527, 529, 534, 535, 537, 564, 573, 574, 575, 576, 577, 579, 581], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [391, 400, 405], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 118, 122, 126, 127, 130, 133, 199, 329, 378, 381, 382, 384, 387, 388, 391, 392, 395, 397, 398, 399, 400, 401, 424, 425, 426, 429, 431, 459, 465, 477, 478, 479, 480, 484, 501, 502, 505, 506, 521, 576], "furthermor": 491, "futur": [103, 108, 378, 383, 388, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 437, 461, 465, 467, 484, 492, 505, 514, 573], "fvar": [139, 294, 393, 436], "fvar_err": [294, 476], "fvar_tabl": 476, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 85, 86, 87, 91, 95, 114, 141, 192, 193, 194, 196, 198, 202, 204, 205, 206, 211, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 292, 305, 345, 367, 373, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 404, 405, 407, 408, 410, 411, 412, 429, 431, 435, 437, 438, 439, 440, 443, 450, 451, 453, 454, 456, 463, 465, 467, 477, 478, 479, 481, 484, 485, 486, 487, 491, 492, 496, 502, 504, 508, 511, 512, 513, 514, 516, 521, 526, 527, 528, 535, 573, 575, 576, 578, 580, 581], "g0": [461, 492], "g28": 67, "g320": 478, "g_1": 153, "g_2": 153, "g_3": 153, "ga": 467, "gabriel": 438, "gadf": [83, 84, 85, 86, 88, 90, 95, 102, 104, 105, 109, 110, 124, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 388, 391, 402, 405, 429, 431, 440, 443, 480, 482, 484, 500, 512, 516, 529, 575], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 383, 395, 437], "gal_diffus": 394, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 67, 68, 83, 91, 102, 105, 109, 110, 111, 116, 126, 127, 129, 163, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 225, 233, 236, 250, 259, 260, 312, 339, 378, 379, 389, 392, 398, 417, 419, 436, 449, 450, 453, 456, 457, 458, 461, 463, 464, 465, 467, 469, 472, 477, 478, 479, 484, 485, 486, 487, 491, 502, 504, 507, 511, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 575, 581], "galactic_median": 83, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 226, 293, 294, 417, 450], "galelli": [442, 444, 445], "gallant": 437, "galleri": [408, 424, 426, 429, 440, 444, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 517, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573], "gallery_jupyt": 530, "gallery_python": 530, "galprop": [192, 193, 194, 196, 205, 206], "galprop2": [192, 193, 194, 196, 205, 206], "gambit": 504, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 63, 66, 67, 79, 83, 122, 126, 132, 162, 186, 193, 194, 196, 205, 206, 226, 228, 229, 230, 251, 252, 253, 275, 278, 332, 378, 384, 386, 389, 390, 391, 392, 402, 408, 410, 414, 415, 420, 434, 435, 436, 437, 438, 448, 449, 451, 453, 454, 455, 459, 462, 463, 464, 465, 467, 478, 482, 484, 485, 488, 491, 493, 494, 500, 502, 504, 506, 507, 511, 512, 513, 516, 519, 521, 523, 525, 526, 535, 542, 546, 547, 554, 555, 573, 574, 575, 576, 577, 578, 581], "gamma1": [218, 543, 557], "gamma2": [218, 543, 557], "gamma_1": [263, 266, 267, 268, 401, 558, 559, 560], "gamma_2": [263, 266, 267, 268, 401, 558, 559, 560], "gamma_min": [132, 448], "gamma_min_sensit": 122, "gammacat": [55, 66, 436, 451], "gammalib": [378, 391], "gammamc_dif": 504, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 400, 401, 402, 406, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 495, 496, 498, 500, 501, 502, 505, 506, 508, 509, 510, 516, 517, 518, 519, 520, 522, 526, 527, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 576, 577, 578, 581], "gammapy_analysis_config": 394, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 101, 102, 105, 109, 110, 115, 117, 118, 122, 123, 125, 127, 129, 131, 133, 141, 142, 145, 146, 148, 152, 153, 154, 155, 163, 173, 193, 194, 196, 202, 205, 206, 211, 227, 238, 275, 284, 303, 304, 357, 366, 371, 373, 378, 379, 381, 394, 410, 412, 414, 418, 419, 420, 429, 438, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 498, 500, 501, 502, 513, 514, 516, 518, 519, 520, 522, 523, 525, 526, 540, 570, 571], "gammapy_extra": 418, "gammapybaseconfig": 16, "gammapydeprecationwarn": [378, 467, 492, 548], "gammmapi": [388, 395], "gap": 136, "garcia": 438, "gather": [392, 398, 407], "gauss": [42, 51, 54, 102, 105, 128, 129, 154, 194, 206, 233, 234, 235, 236, 401, 435, 473, 484, 487, 502, 533, 534], "gauss_elong": 487, "gauss_temp": 487, "gaussian": [67, 68, 80, 81, 101, 118, 128, 134, 143, 150, 151, 155, 161, 163, 166, 194, 206, 233, 234, 235, 236, 237, 293, 294, 389, 397, 401, 406, 422, 426, 445, 447, 449, 451, 453, 463, 465, 469, 472, 476, 478, 481, 482, 487, 489, 491, 502, 520, 522, 530, 541, 562, 572], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 118, "gaussian_compon": [67, 478], "gaussian_error": [134, 143], "gaussian_filt": [128, 206], "gaussian_model": 565, "gaussian_sigma": 481, "gaussianband2d": 437, "gaussianprior": [406, 449, 489], "gaussianspatialmodel": [80, 81, 115, 117, 256, 401, 422, 463, 464, 469, 487, 534], "gaussianspectralmodel": [257, 401, 487, 549], "gaussiantemporalmod": 429, "gaussiantemporalmodel": [269, 401, 425, 487, 565], "gb": [386, 388, 491, 493], "gc": [86, 102, 105, 109, 110, 115, 117, 118, 122, 127, 129, 133, 141, 142, 366, 371, 373, 381, 457, 458, 461, 463, 465, 467, 477, 479, 480, 484, 486, 487, 491, 492, 502, 504, 513, 514], "gc_3fhl": 502, "gc_3fhl_cutout": 502, "gc_3fhl_smooth": 502, "gc_imag": 467, "gc_po": 492, "gc_sep": 486, "gca": 449, "gcc": 414, "ge": 90, "geminga": 59, "gen_gaussian_model": 566, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 102, 103, 104, 105, 108, 109, 110, 124, 152, 163, 166, 193, 194, 196, 197, 198, 202, 205, 206, 211, 223, 231, 235, 236, 237, 238, 239, 254, 261, 270, 271, 273, 275, 276, 287, 327, 329, 332, 333, 334, 335, 342, 379, 381, 387, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 408, 411, 414, 420, 424, 425, 426, 429, 431, 436, 440, 443, 444, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 512, 516, 521, 527, 529, 530, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 567, 568, 569, 570, 571, 572, 576, 578, 579], "generalconfig": 16, "generalis": [125, 397, 423, 482], "generalized_gaussian_model": 566, "generalizedgaussianspatialmodel": [256, 426, 487, 535], "generalizedgaussiantemporalmodel": [269, 431, 487, 566], "generalrandom": 421, "generatejsonschema": [16, 84, 90, 104, 124], "gengauss": [237, 487, 535], "geodeticloc": 94, "geolat": 450, "geom": [16, 23, 83, 102, 105, 109, 110, 111, 114, 116, 122, 123, 125, 127, 133, 151, 152, 161, 163, 166, 173, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 220, 221, 224, 225, 232, 233, 236, 246, 248, 250, 259, 260, 262, 264, 270, 274, 389, 391, 393, 426, 429, 438, 444, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 492, 493, 500, 501, 502, 514, 523, 525, 526, 527, 528, 529, 532, 534, 535, 536, 537], "geom_24_energy_bin": 529, "geom_6_energy_bin": 529, "geom_edisp": [102, 105, 109, 110, 479], "geom_energi": 529, "geom_exposur": [102, 105, 109, 110, 442, 479], "geom_imag": [459, 463, 529], "geom_irf": 391, "geom_psf": [102, 105, 109, 110, 479], "geom_tru": 423, "geomconfig": 16, "geometri": [23, 83, 100, 102, 105, 109, 110, 112, 113, 114, 123, 125, 133, 134, 135, 143, 151, 152, 158, 161, 163, 166, 170, 173, 175, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 220, 221, 224, 225, 233, 236, 246, 248, 250, 259, 260, 262, 264, 270, 274, 374, 384, 390, 393, 394, 423, 429, 440, 445, 453, 454, 455, 456, 458, 459, 461, 465, 466, 469, 479, 480, 483, 492, 493, 512, 514, 516, 524, 528, 574, 575], "geomspac": [125, 406, 480], "geq": [52, 53], "gerrit": 445, "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 102, 104, 106, 107, 109, 118, 122, 124, 126, 127, 130, 131, 133, 141, 145, 150, 151, 152, 158, 163, 166, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 209, 215, 217, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 233, 234, 236, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 255, 258, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 277, 313, 329, 378, 379, 383, 384, 385, 386, 387, 388, 392, 393, 395, 402, 404, 405, 406, 408, 409, 411, 412, 414, 415, 418, 420, 435, 436, 437, 438, 445, 448, 454, 456, 457, 461, 462, 463, 469, 471, 475, 478, 479, 481, 482, 483, 485, 486, 487, 489, 491, 492, 493, 494, 496, 500, 501, 502, 504, 512, 516, 529, 575, 579], "get_altaz": [85, 94, 443], "get_bia": 150, "get_bias_energi": 150, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [193, 194, 196, 202, 205, 206, 483, 484, 492, 493, 528], "get_by_idx": [193, 194, 196, 202, 205, 206, 484, 528], "get_by_pix": [193, 194, 196, 202, 205, 206, 528], "get_cl": [451, 478, 485], "get_combined_flux_map": 134, "get_combined_significance_map": 135, "get_coord": [191, 192, 197, 201, 204, 422, 429, 438, 466, 484, 485, 525, 529], "get_dataset": [15, 454, 458, 459, 461, 470, 500, 516], "get_devel_vers": 381, "get_edges_fixed_bin": 145, "get_edges_min_t": 145, "get_edisp_kernel": [151, 152, 424, 429, 479, 492, 520], "get_events_meta_data": 391, "get_excess_map": [15, 500], "get_filenam": [106, 107], "get_flux_point": [15, 123, 125, 402, 424, 454, 500], "get_group_by_idx": 402, "get_hdu": 313, "get_icr": [85, 94, 443], "get_idx": [191, 192, 201, 204, 529], "get_image_by_coord": [193, 194, 196, 202, 205, 206, 484], "get_image_by_idx": [193, 194, 196, 202, 205, 206], "get_image_by_pix": [193, 194, 196, 202, 205, 206], "get_index_list": 192, "get_irfs_featur": [303, 304, 443, 488], "get_kernel": 118, "get_light_curv": 15, "get_mean": 150, "get_observ": [15, 82, 96, 303, 304, 420, 431, 450, 453, 454, 455, 458, 459, 461, 463, 465, 470, 471, 473, 475, 483, 488, 493, 494, 498, 500, 501, 516, 523, 525, 526], "get_ogip_meta": 107, "get_pix": 204, "get_pointing_altaz": [88, 488], "get_pointing_icr": [88, 443, 463, 483, 501], "get_psf_kernel": [161, 163, 166, 444, 445, 492], "get_random_st": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 287, 327, 332, 333, 334, 335, 378], "get_rebinned_axi": 471, "get_resolut": 150, "get_respons": 436, "get_scal": 118, "get_scale_model": [126, 127, 130], "get_spectrum": [193, 194, 196, 202, 205, 206], "get_subcovari": 209, "get_transform": [457, 463, 533, 534], "get_valid_path": 106, "get_wcs_coord_and_weight": 201, "getattr": 406, "getitem": 436, "getlogg": [378, 459, 463, 470, 471, 472, 475, 498], "getter": 379, "getting_start": 398, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 127, 133, 193, 194, 196, 198, 202, 205, 206, 451, 455, 457, 461, 462, 467, 469, 472, 473, 477, 478, 483, 484, 485, 486, 491, 492, 493, 502, 529, 552, 574, 575], "gev2": [19, 477], "gevgevgev1": 451, "gfhsnwdm": 475, "gh": [378, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408], "git": [86, 262, 378, 379, 381, 383, 385, 386, 404, 411, 440], "github": [379, 381, 382, 383, 384, 386, 387, 396, 398, 404, 407, 408, 411, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 434, 435, 436, 437, 438, 439, 516], "giuliani": 391, "giunti": [419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 432, 440, 443], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 101, 140, 292, 293, 378, 383, 387, 388, 392, 393, 394, 395, 398, 399, 404, 408, 419, 421, 423, 431, 444, 453, 454, 457, 464, 466, 471, 475, 476, 478, 481, 482, 483, 484, 487, 491, 492, 500, 516, 521, 576, 577, 579, 580], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 175, 176, 179, 181, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 284, 286, 288, 294, 303, 305, 308, 309, 316, 323, 327, 330, 331, 339, 365, 366, 371, 375, 378, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 401, 402, 404, 406, 418, 423, 429, 437, 438, 443, 448, 449, 450, 451, 454, 457, 465, 466, 467, 469, 470, 471, 472, 477, 478, 479, 480, 482, 483, 484, 485, 487, 491, 492, 500, 502, 512, 513, 514, 516, 520, 521, 525, 526, 528, 529, 535, 539, 542, 573, 575, 576, 577, 578], "glast": 492, "glat": [41, 67, 68, 83, 378, 453, 478, 484, 492], "glat_err": 478, "glat_pnt": [463, 491], "glimps": [493, 496], "gll_iem_v06_cutout": [193, 194, 196, 202, 205, 206], "gll_iem_v06_gc": [465, 484, 486, 487, 492], "gll_psc_v16": 61, "gll_psc_v20": 478, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 379, 479, 480], "global": [16, 33, 42, 45, 46, 47, 100, 102, 103, 105, 108, 109, 110, 152, 163, 166, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 211, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 287, 327, 329, 332, 333, 334, 335, 378, 382, 384, 426, 443, 453, 463, 464, 473, 486, 489, 514, 574], "global_dataset": 483, "global_to_loc": 192, "glon": [41, 67, 68, 83, 378, 453, 478, 484, 492], "glon_pnt": [463, 491], "glossari": [398, 440, 512, 529], "glue": 516, "glueviz": 395, "gnufzi": 491, "go": [50, 87, 91, 381, 388, 398, 403, 440, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 498, 500, 501, 502, 504, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 576], "goal": [383, 392, 406, 481], "goe": [41, 52, 368, 378, 397, 408, 467, 489], "gogia": 436, "good": [82, 86, 101, 125, 298, 302, 378, 383, 385, 386, 387, 388, 389, 392, 394, 395, 396, 398, 449, 453, 455, 456, 459, 469, 471, 472, 476, 477, 479, 481, 483, 485, 487, 492, 493, 496, 538, 539, 575, 580], "googl": [87, 91, 398, 407, 445], "got": 491, "gov": [58, 60, 61, 62, 64, 65, 150, 198, 398, 555], "gp": [82, 83, 89, 379, 388, 394, 458, 461, 463, 473, 491, 493], "gpl3": 378, "gps_baseline_110380": [82, 83, 491], "gq93akq": 449, "gradient": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "grai": [369, 525, 552], "grand": 378, "grant": [381, 404], "granular": 476, "grayify_colormap": 397, "grb": [472, 476], "great": [383, 392, 397, 435, 496], "greater": [170, 371], "green": [101, 109, 110, 437, 464, 488, 489], "grei": 473, "grep": 413, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 126, 129, 154, 162, 164, 193, 194, 196, 198, 202, 205, 206, 220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274, 280, 371, 378, 389, 394, 421, 423, 481, 528, 529, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569], "gridsearch": [211, 481], "gridspec": 365, "gridspec_kw": [457, 463, 470, 472, 542], "ground": [95, 393, 491, 577], "group": [86, 87, 91, 92, 126, 127, 130, 131, 133, 151, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 303, 384, 393, 397, 398, 399, 402, 407, 410, 420, 423, 425, 429, 435, 438, 457, 470, 472, 496, 514, 516, 530, 576], "group_1": 488, "group_2": 488, "group_bi": [87, 91, 402], "group_by_axi": 402, "group_by_label": [92, 488], "group_high_zenith": 488, "group_low_zenith": 488, "group_siz": [145, 471], "group_tabl": [86, 198, 203], "grouped_observ": 488, "grow": [386, 397, 437], "grown": 398, "gr\u00e9aux": 443, "gsfc": [58, 60, 61, 62, 64, 65, 150, 198, 398, 555], "gt": 482, "gtexpcube2": 492, "gti": [82, 87, 88, 89, 100, 101, 102, 105, 109, 110, 123, 125, 127, 130, 134, 143, 167, 203, 262, 384, 387, 388, 391, 392, 393, 402, 421, 423, 424, 426, 439, 443, 444, 465, 471, 472, 475, 479, 483, 491, 493, 494, 512, 575], "gti_1": 513, "gti_2": 513, "gti_t0": 472, "gtimetadata": 405, "gtmktime": [388, 492], "gtobsim": 391, "gtol": 481, "gtpsf": [151, 152, 158, 163, 166, 198, 457, 492], "gtselect": [388, 492], "guarante": [386, 401, 403], "guess": [125, 192, 194, 444], "guid": [381, 394, 396, 410, 411, 412, 415, 438, 496, 516, 531, 541, 562, 572], "guidelin": [378, 382, 415, 437], "guiger": [31, 39], "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 102, 105, 109, 110, 115, 117, 118, 122, 127, 129, 133, 141, 142, 155, 227, 275, 366, 371, 373, 379, 400, 438, 449, 453, 454, 457, 464, 465, 466, 467, 478, 479, 480, 482, 484, 486, 487, 491, 492, 493, 498, 500, 501, 502, 513, 514, 516, 518, 519, 520, 522, 542], "h": [26, 67, 82, 86, 87, 91, 95, 126, 128, 152, 179, 193, 194, 196, 202, 205, 206, 287, 368, 398, 401, 410, 414, 415, 423, 438, 447, 448, 449, 450, 453, 454, 456, 459, 462, 464, 470, 471, 472, 475, 477, 481, 482, 483, 484, 487, 488, 489, 491, 492, 493, 495, 496, 498, 500, 501, 511, 516, 529, 564, 565, 575, 576], "h0": 464, "h05": [45, 49], "h1": 464, "h_0": [464, 578], "h_1": [464, 578], "h_i": 128, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 87, 91, 101, 102, 105, 109, 110, 122, 123, 125, 165, 187, 191, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 214, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 271, 273, 274, 275, 371, 373, 375, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 425, 426, 429, 431, 432, 438, 439, 440, 442, 443, 444, 445, 449, 450, 453, 454, 455, 459, 464, 466, 470, 471, 473, 477, 478, 479, 481, 483, 484, 485, 487, 488, 489, 491, 493, 494, 500, 501, 512, 513, 516, 521, 525, 526, 528, 529, 533, 534, 561, 573, 576, 578], "habilit": 302, "hack": 434, "had": [378, 384, 386, 404, 426, 432, 436, 437], "hadron": [277, 384, 389, 459, 479, 491, 512, 525], "hajlaoui": [426, 429], "hal": 404, "half": [163, 166, 198, 204, 274], "halo": 504, "halv": [137, 292, 444], "halving_coord": 476, "halving_err": 476, "hand": [175, 378, 381, 386, 389, 398, 404, 406, 441, 481, 496, 516], "handbook": [398, 496], "handi": 461, "handl": [3, 16, 84, 90, 104, 123, 124, 125, 179, 200, 295, 377, 379, 382, 390, 391, 392, 394, 399, 401, 402, 405, 407, 410, 412, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 453, 455, 461, 462, 463, 465, 479, 482, 484, 486, 487, 492, 493, 496, 501, 502, 512, 513, 516, 575], "handler_map": 375, "hanna": [444, 445], "hap": 394, "happen": [82, 381, 383, 385, 386, 392, 396, 408, 454, 486, 496, 500, 501, 512, 516, 578], "happi": [381, 385, 398, 418, 419, 438], "hard": [378, 379, 401, 406, 424, 489], "harder": [385, 576], "hardli": 405, "harri": [433, 434], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 118, 136, 153, 211, 243, 277, 278, 287, 294, 296, 398, 481], "has_any_t": [123, 125], "has_energy_axi": [191, 192, 201, 204], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165], "has_single_spatial_bin": [151, 152, 158, 163, 166], "has_stat_profil": [123, 125], "has_success": [123, 125], "has_ul": [123, 125], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 378, "hasn": 383, "hatch": 473, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 104, 107, 111, 116, 123, 124, 125, 126, 130, 141, 142, 150, 151, 152, 161, 163, 166, 173, 175, 187, 191, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 305, 329, 335, 375, 377, 378, 379, 380, 381, 383, 384, 385, 387, 389, 391, 392, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 423, 426, 429, 431, 432, 435, 437, 438, 439, 440, 441, 443, 444, 445, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 473, 475, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 496, 500, 501, 502, 504, 512, 513, 514, 516, 523, 527, 528, 529, 539, 550, 573, 576, 579, 580], "haven": 414, "hawc": [55, 59, 63, 72, 76, 97, 415, 423, 429, 437, 440, 441, 443, 447, 495, 496, 511, 524, 575], "hawc19_flux_point": [125, 462, 516], "hawc_crab": [125, 462, 516], "hd": 67, "hdr": 405, "hdr_dict": 405, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 313, 364, 379, 388, 417, 432, 434, 437, 440, 441, 465, 482, 484, 491, 493, 494, 512, 513, 516, 518, 519, 520, 522, 529, 571], "hdu1": 150, "hdu2": 150, "hdu_al": 465, "hdu_band": [123, 125, 151, 152, 158, 163, 166, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206], "hdu_class": [82, 87, 313, 491, 493, 494], "hdu_class_uniqu": 87, "hdu_evt": 465, "hdu_filenam": 493, "hdu_gti": 465, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [151, 152, 154, 158, 162, 163, 164, 166, 193, 194, 205, 206], "hdu_loc": 87, "hdu_nam": 313, "hdu_ob": 82, "hdu_out": [193, 194], "hdu_region": [201, 202], "hdu_tabl": [82, 493], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 491, 493, 494], "hdu_type_uniqu": 87, "hduclas2": 482, "hduclas3": 482, "hduclas4": 482, "hduclasn": 482, "hduindext": [82, 313, 493], "hdulist": [102, 105, 107, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 465, 484, 512], "hduloc": [87, 102], "he": [277, 388, 393], "hea": 393, "head": 379, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 101, 102, 104, 105, 106, 107, 109, 110, 123, 124, 125, 150, 151, 152, 158, 163, 166, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 274, 315, 360, 361, 364, 383, 388, 391, 405, 423, 431, 433, 438, 440, 443, 455, 465, 466, 484, 491, 580], "healpi": [192, 377, 385, 387, 395, 409, 410, 412, 421, 429, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 527], "healpix": [13, 192, 193, 194, 196, 202, 205, 206, 377, 385, 387, 392, 429, 437, 484, 492, 528], "healpix_to_imag": 430, "heapsort": [87, 91], "heart": 578, "heasarc": [150, 198], "heatmap": [367, 372], "heavi": [438, 439], "heavier": 461, "heavili": 429, "hegra": [97, 278], "heidelberg": [378, 407], "heidt": 476, "height": [16, 29, 87, 91, 94, 127, 338, 454, 458, 459, 461, 467, 470, 473, 477, 484, 485, 487, 500, 525, 529], "heighten": 476, "helen": 435, "hello": [414, 463], "help": [11, 87, 91, 289, 295, 378, 381, 383, 385, 392, 393, 394, 398, 404, 407, 408, 409, 414, 418, 419, 420, 437, 438, 440, 478, 483, 484, 486, 492, 494, 502, 516, 576], "helper": [13, 313, 318, 385, 387, 392, 393, 394, 397, 408, 414, 420, 421, 422, 423, 429, 431, 434, 436, 437, 443, 444, 467, 478, 485, 486, 525, 574, 581], "henc": [87, 91, 394, 458, 459, 514, 529, 578], "her": 407, "here": [13, 82, 83, 87, 91, 102, 109, 125, 135, 144, 148, 153, 162, 211, 286, 288, 291, 366, 377, 378, 379, 380, 381, 384, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 404, 405, 406, 408, 410, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 491, 492, 493, 496, 500, 501, 502, 506, 512, 516, 521, 523, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 576, 577, 578, 580, 581], "hereaft": 465, "herebi": 489, "heritag": 404, "herm": [281, 283, 444], "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 101, 109, 110, 131, 145, 146, 153, 155, 173, 211, 284, 303, 304, 379, 386, 387, 392, 394, 398, 407, 410, 414, 417, 419, 422, 433, 434, 437, 438, 447, 450, 451, 453, 454, 455, 459, 461, 463, 464, 471, 473, 475, 478, 479, 480, 481, 483, 488, 489, 492, 494, 495, 498, 500, 501, 504, 513, 514, 516, 518, 519, 520, 522, 523, 525, 526], "hess2": [153, 518], "hess_dl3_dr1_obs_id_020136": [88, 155, 379, 518, 519, 520, 522], "hess_dl3_dr1_obs_id_023523": [83, 86, 513], "hess_dl3_dr1_obs_id_023526": 513, "hess_ecpl": [278, 453], "hess_pl": 278, "hessian": 514, "heterogen": [405, 451, 462], "hfm": 67, "hgp": [67, 80, 81, 122, 398, 423, 435, 437, 438, 511], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 478], "hhkptqeg": 475, "hi": [378, 436], "hi_bnd": 198, "hi_threshold": 150, "hidden": 389, "hide": [13, 383, 400], "hierarch": [13, 303, 345, 387, 389, 405, 444, 516, 528], "hierarchi": [303, 389, 422], "hierarchical_clust": [443, 488], "high": [6, 15, 58, 62, 63, 83, 150, 198, 328, 378, 382, 383, 384, 391, 392, 393, 398, 405, 421, 422, 423, 424, 425, 429, 437, 438, 447, 448, 451, 454, 457, 458, 461, 467, 469, 470, 477, 478, 479, 480, 483, 485, 491, 492, 493, 494, 496, 501, 502, 503, 511, 512, 513, 514, 521, 524, 574, 575, 576, 577], "high_zenith": 488, "higher": [191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 237, 381, 384, 389, 394, 397, 399, 411, 451, 466, 476, 482, 484, 523, 529], "highest": [141, 179, 476, 483, 491, 502], "highli": 487, "highlight": 576, "him": 407, "hint": [405, 457, 514], "hire": [154, 398, 506, 508, 509, 510, 512, 513, 518, 519, 520, 522, 525, 529, 578, 581], "hist": [83, 109, 110, 202, 206, 371, 456, 489], "histogram": [83, 109, 110, 198, 202, 206, 371, 443, 473, 529, 575], "histori": [392, 404, 440], "hjkkssr": 461, "hli": [391, 424, 425, 429, 440, 447, 452, 496, 512, 515, 575], "hli_spectrum_analysi": 454, "hline": 533, "hoc": 392, "hold": [69, 82, 89, 92, 96, 100, 161, 232, 305, 387, 388, 390, 393, 576, 578], "home": [16, 342, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 540, 542, 548, 564, 570, 571], "homebrew": 395, "homework": 420, "homogen": [87, 91, 426], "honk": 383, "hood": [454, 496, 500], "hook": [381, 440], "hope": 383, "hopefulli": 385, "horizont": [85, 95, 156, 348, 482, 580], "host": 378, "hour": [67, 94, 381, 394, 408, 448, 478, 483, 484, 516], "hover": 379, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 104, 124, 125, 127, 129, 173, 194, 204, 206, 329, 335, 380, 383, 386, 390, 392, 394, 395, 397, 400, 401, 404, 405, 408, 409, 410, 414, 415, 418, 419, 420, 423, 424, 431, 433, 436, 437, 438, 443, 444, 448, 449, 451, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 500, 502, 506, 512, 514, 517, 521, 525, 527, 528, 542, 561, 574, 576, 577, 578, 580, 581], "howev": [77, 87, 91, 101, 122, 293, 377, 378, 379, 381, 385, 388, 391, 392, 396, 404, 406, 411, 450, 459, 467, 473, 475, 477, 478, 479, 481, 489, 493, 494, 496, 512, 516, 528, 529, 534, 550, 576], "howto": [398, 440, 441], "hpx": [192, 193, 194, 196, 205, 206, 392, 429, 484, 492], "hpx2wc": [193, 194], "hpx_map": [193, 194], "hpx_pixel": 392, "hpx_reg": 192, "hpxgeom": [123, 191, 193, 194, 424, 429, 440, 492, 527], "hpxmap": [194, 196, 527], "hpxndmap": [270, 429, 527], "hpxsparsemap": 423, "hpxtowcsmap": [193, 194], "hr": [465, 466, 469, 472], "hspace": 477, "hspec": [433, 434, 435], "hst": 226, "hstack": [87, 91, 391], "html": [26, 83, 87, 91, 126, 150, 186, 192, 198, 201, 204, 211, 224, 246, 275, 305, 332, 333, 378, 379, 381, 386, 398, 403, 404, 408, 416, 437, 448, 456, 458, 461, 463, 469, 472, 481, 482, 491, 513, 516, 519, 527, 529, 555], "htmlcov": 408, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 87, 88, 90, 91, 104, 118, 124, 126, 135, 136, 137, 144, 150, 153, 179, 186, 192, 198, 201, 204, 211, 224, 243, 246, 252, 253, 267, 268, 275, 277, 278, 287, 293, 294, 296, 301, 305, 332, 333, 345, 381, 395, 398, 403, 404, 407, 408, 409, 410, 411, 412, 416, 420, 437, 448, 453, 456, 458, 461, 462, 463, 469, 472, 477, 478, 481, 482, 491, 513, 516, 527, 529, 555, 559, 560, 576], "hubert": 438, "hue": 369, "huestart": 369, "huge": [408, 534], "hugovk": 419, "human": [359, 389, 408, 431, 454, 500], "hundr": 493, "hwlqy2dw": 475, "hypercub": [484, 528, 529], "hypothes": [284, 443, 516, 578], "hypothesi": [123, 125, 126, 127, 130, 131, 284, 286, 288, 445, 451, 457, 464, 480, 514, 516, 575, 578], "hysteresi": 475, "hyy9iu49": 475, "hz": [335, 502], "hz8rplnw": 475, "hzfk1guq": 475, "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 305, 307, 311, 313, 316, 317, 318, 323, 325, 326, 329, 332, 333, 334, 335, 337, 338, 341, 344, 346, 347, 349, 353, 355, 356, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 500, 501, 502, 504, 505, 506, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581], "i0": [87, 91], "i1": [87, 91], "i4": 467, "i8": [484, 502], "i_0": [193, 194, 196, 202, 205, 206], "i_hpx": [193, 194, 196, 202, 205, 206], "i_lat": [193, 194, 196, 202, 205, 206], "i_lon": [193, 194, 196, 202, 205, 206], "i_n": [193, 194, 196, 202, 205, 206], "i_scan": 489, "iact": [82, 83, 85, 94, 173, 176, 180, 384, 387, 388, 389, 390, 392, 394, 398, 415, 420, 434, 436, 438, 451, 457, 459, 483, 484, 486, 491, 492, 494, 513, 518, 519, 520, 522, 573, 575], "iactbasicimageestim": [384, 437], "iau": [52, 417, 421], "iau2015": 52, "ic": 552, "icon": 574, "icr": [83, 85, 88, 91, 94, 95, 96, 102, 105, 109, 110, 112, 113, 141, 163, 173, 176, 192, 193, 194, 196, 199, 201, 204, 205, 206, 220, 221, 225, 233, 236, 250, 259, 260, 303, 304, 339, 378, 379, 402, 422, 453, 454, 455, 456, 457, 459, 462, 463, 465, 466, 469, 470, 471, 472, 473, 475, 478, 479, 482, 483, 484, 485, 487, 488, 491, 492, 493, 494, 500, 501, 513, 516, 520, 525, 529, 533, 534, 535, 537, 538, 539], "icrc": 433, "id": [67, 80, 82, 83, 87, 88, 91, 92, 112, 113, 391, 394, 414, 454, 456, 465, 467, 469, 473, 478, 487, 491, 492, 493, 494, 500, 513], "id_obs_vela": 473, "idea": [383, 386, 393, 397, 398, 399, 454, 475, 482, 488, 492, 500], "ideal": [380, 381, 388, 392, 393, 402, 406, 407, 451, 492], "idempot": [16, 84, 90, 104, 124], "ident": [353, 381, 393, 440, 453, 455], "identif": [67, 384, 478], "identifi": [67, 88, 103, 108, 192, 262, 378, 388, 389, 391, 394, 403, 404, 408, 424, 457, 465, 476, 478, 479, 487, 491, 493, 515], "identified_object": 478, "idx": [83, 87, 91, 92, 100, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 246, 456, 465, 472, 478, 481, 484, 528], "idx1": 481, "idx2": 481, "idx_glob": 192, "idx_loc": 192, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 404, 449, 475, 486, 487, 512, 575], "iem": [486, 492], "iem_minus_iem": 484, "iem_plus_iem": 484, "iem_times_two": 484, "ignacio": 439, "ignasi": 433, "ignor": [11, 16, 84, 87, 90, 91, 101, 104, 124, 136, 157, 167, 196, 214, 216, 232, 305, 317, 379, 431, 445, 453, 467, 472, 473, 479, 485, 500, 516, 576], "ii": [209, 435], "ij": 209, "ilist": 192, "illustr": [109, 110, 379, 388, 390, 391, 392, 394, 397, 455, 457, 462, 467, 479, 483, 484, 486, 487, 492, 506, 512, 525, 526, 533, 534, 542, 574], "illustrate_colormap": 397, "iloc": [87, 91], "im": [367, 481], "imag": [102, 105, 109, 110, 118, 128, 129, 141, 152, 153, 154, 160, 162, 163, 164, 166, 168, 178, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 274, 297, 300, 342, 364, 366, 367, 368, 369, 373, 378, 386, 387, 389, 394, 395, 398, 399, 408, 410, 415, 417, 418, 419, 422, 423, 424, 430, 434, 435, 436, 437, 438, 445, 447, 458, 461, 467, 468, 483, 485, 487, 491, 501, 502, 512, 521, 525, 526, 527, 528, 529, 574, 575, 581], "image_analysi": [398, 418], "image_err": 129, "image_fitting_with_sherpa": [398, 439], "image_pip": 437, "image_profil": 436, "imagehdu": [193, 194, 205, 206], "imagenorm": [368, 369], "imageprofil": 129, "images_t": 463, "imagin": 576, "img": [366, 484], "iminuit": [211, 377, 395, 404, 429, 431, 438, 442, 443, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 573], "immut": 224, "impact": [385, 391, 395, 493], "imperfect": 483, "implement": [19, 20, 102, 105, 109, 110, 135, 144, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 287, 293, 378, 379, 383, 384, 386, 387, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 436, 437, 439, 440, 443, 444, 445, 450, 458, 471, 476, 477, 478, 483, 484, 485, 504, 512, 514, 516, 521, 522, 523, 561, 573, 574, 575, 576, 577, 580], "implent": 378, "impli": [237, 378, 397, 512, 575], "implic": 400, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 521], "implicitli": 483, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 101, 102, 104, 105, 109, 110, 111, 115, 116, 117, 118, 122, 123, 124, 125, 127, 129, 131, 133, 141, 142, 145, 146, 148, 150, 152, 153, 154, 155, 161, 163, 173, 176, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 215, 217, 218, 219, 222, 226, 228, 229, 230, 234, 238, 240, 241, 243, 244, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 278, 284, 287, 293, 294, 303, 304, 325, 335, 345, 357, 358, 363, 366, 368, 369, 371, 373, 379, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 413, 414, 425, 435, 437, 442, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 498, 500, 501, 502, 505, 506, 508, 509, 510, 512, 513, 514, 516, 518, 519, 520, 522, 523, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 576, 577, 578, 580], "importantli": [402, 438, 450, 576], "importerror": [87, 91], "impos": [442, 448, 525], "improv": [108, 284, 380, 382, 383, 384, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 403, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 484, 491, 516, 526, 533], "imshow": [102, 105, 161, 194, 206, 366, 372, 436, 484, 502], "in2p3": [404, 491], "in_memori": [88, 516], "in_memory_gener": 92, "in_safe_data_rang": [102, 105, 109, 110], "inaccur": 378, "incex": [16, 84, 90, 104, 124], "incid": 384, "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 104, 124, 130, 161, 167, 169, 170, 176, 177, 181, 191, 192, 201, 204, 247, 313, 377, 378, 384, 386, 389, 390, 391, 392, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 419, 421, 426, 437, 442, 443, 444, 448, 462, 464, 465, 467, 472, 477, 478, 480, 481, 483, 485, 486, 487, 491, 493, 504, 506, 512, 514, 515, 526, 528, 573, 577, 580], "include_irf": [88, 513, 516], "include_ssc": 247, "inclus": [83, 201, 392], "incompat": [403, 431], "incomplet": [378, 408, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "inconsist": [426, 432, 442, 443], "inconveni": [397, 438], "incorpor": [394, 398, 406, 575], "incorrect": [83, 378, 405, 413, 422, 440, 441, 483, 489], "incorrectli": [440, 485], "increas": [141, 168, 198, 203, 225, 233, 236, 378, 387, 405, 471, 480, 483, 512, 516, 533], "increment": [19, 20, 26, 118, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 392, 484, 528], "ind": [192, 204, 224, 246], "inde": [465, 534], "indefinit": 385, "indent": [16, 84, 90, 104, 124], "independ": [67, 126, 130, 134, 135, 143, 144, 302, 316, 378, 384, 388, 389, 390, 391, 392, 393, 396, 399, 400, 401, 402, 404, 410, 419, 429, 448, 454, 470, 478, 484, 485, 486, 487, 493, 500, 501, 511, 516, 521, 575, 579], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 101, 102, 105, 109, 110, 118, 122, 123, 125, 126, 127, 131, 132, 133, 140, 150, 151, 152, 158, 161, 163, 166, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 215, 217, 218, 219, 222, 224, 226, 228, 229, 230, 234, 240, 241, 243, 244, 246, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 278, 287, 313, 327, 332, 381, 384, 387, 388, 389, 390, 393, 394, 401, 402, 403, 407, 410, 420, 434, 436, 437, 443, 444, 449, 450, 451, 453, 454, 456, 457, 458, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 478, 479, 480, 481, 482, 486, 487, 491, 492, 493, 494, 500, 501, 502, 514, 516, 527, 528, 529, 532, 533, 534, 535, 537, 538, 539, 540, 542, 544, 546, 547, 548, 553, 554, 555, 563, 564, 565, 566, 567, 568, 569, 570, 571], "index1": [218, 263, 543, 557], "index2": [218, 263, 543, 557], "index_1": [266, 267, 268, 558, 559, 560], "index_2": [77, 266, 267, 268, 558, 559, 560], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 197, "index_err": 475, "index_error": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "index_mod": [87, 91], "index_scan": 489, "indexerror": [92, 100, 246], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 378, 440, 456, 466, 476, 483, 484, 488, 489, 493, 494, 516, 528, 529, 575], "indico": 387, "indirect": [477, 504], "individu": [87, 91, 108, 120, 128, 374, 384, 390, 391, 393, 398, 401, 402, 406, 450, 453, 456, 464, 467, 471, 478, 479, 481, 483, 486, 487, 502, 512, 516, 521], "indiviud": 400, "indstead": 445, "indxschm": [193, 194, 205, 206], "ineffici": [87, 91, 381], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 236, 406, 489], "infer": [123, 125, 191, 192, 193, 194, 196, 204, 205, 206, 226, 379, 500, 528], "inferno": 484, "infil": 378, "infin": 489, "influenc": 489, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 154, 160, 162, 164, 286, 288, 313, 379, 393, 394, 398, 407, 413, 423, 424, 426, 433, 434, 437, 454, 458, 459, 461, 465, 471, 475, 477, 478, 479, 484, 492, 493, 494, 496, 498, 500, 576], "info_dict": [102, 105, 109, 110, 286, 288, 371, 426, 444, 479], "info_t": [100, 450, 453, 454, 456, 461, 472, 479, 486, 516], "infodict": 371, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 109, 110, 123, 124, 125, 150, 154, 160, 162, 164, 165, 168, 173, 174, 179, 180, 199, 211, 218, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 253, 254, 259, 260, 261, 263, 266, 267, 268, 270, 271, 274, 275, 289, 295, 313, 329, 360, 361, 378, 382, 383, 388, 390, 391, 392, 393, 394, 401, 402, 405, 406, 408, 413, 414, 415, 423, 425, 426, 429, 431, 437, 443, 444, 449, 451, 454, 455, 462, 465, 466, 469, 475, 476, 479, 480, 481, 483, 484, 487, 491, 492, 493, 494, 500, 501, 502, 511, 512, 513, 514, 516, 529, 576, 579], "infrar": 226, "infrastructur": [408, 416, 429, 440, 443], "ingredi": [402, 477], "inherit": [87, 91, 287, 378, 388, 390, 393, 402, 405, 406, 424, 429, 436, 479, 482, 527, 528], "init": [19, 20, 26, 87, 91, 122, 127, 133, 170, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 317, 329, 390, 426, 441, 443, 444, 457, 467, 471, 478, 479, 480, 502], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 104, 123, 124, 125, 133, 194, 197, 198, 224, 246, 248, 249, 305, 378, 383, 388, 389, 390, 394, 431, 448, 456, 459, 461, 462, 464, 465, 466, 469, 473, 478, 479, 484, 487, 500, 501, 502, 511, 513, 561, 575], "initialis": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 287, 327, 329, 332, 333, 334, 335, 378, 400, 489], "inject": [456, 469], "inlin": [383, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 484, 485, 486, 487, 491, 492, 494, 500, 501, 502], "inner": [44, 52, 53, 127, 168, 178, 260, 459, 502, 539], "inner_height": [525, 529], "inner_width": [525, 529], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 102, 104, 105, 108, 118, 120, 122, 123, 124, 125, 126, 129, 130, 133, 137, 138, 139, 140, 142, 146, 151, 152, 154, 161, 162, 163, 164, 165, 166, 168, 170, 174, 176, 178, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 217, 224, 238, 246, 273, 274, 275, 287, 305, 316, 326, 329, 348, 350, 371, 373, 384, 386, 388, 389, 390, 391, 392, 393, 394, 399, 414, 424, 429, 432, 439, 443, 445, 456, 465, 466, 473, 480, 484, 489, 514, 528, 529, 577], "input_map": [111, 116], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 443, "insensit": 200, "insert": [87, 91, 92, 100, 246, 404, 424, 579], "insert_row": [87, 91], "inset": 430, "insid": [50, 83, 102, 109, 115, 117, 150, 176, 192, 193, 194, 196, 201, 204, 205, 206, 224, 246, 262, 367, 371, 378, 379, 392, 394, 402, 429, 448, 453, 456, 458, 461, 463, 469, 472, 479, 483, 485, 486, 487, 491, 493, 513, 523, 525, 526, 529], "inside_geom": 485, "insight": 413, "inspect": [390, 394, 414, 453, 455, 461, 465, 466, 481, 484, 486, 491, 492], "inspir": [378, 402], "instal": [87, 91, 377, 378, 381, 385, 386, 387, 395, 407, 408, 409, 412, 414, 415, 418, 419, 429, 433, 436, 437, 438, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 496, 500, 501, 502, 516, 576], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 104, 120, 124, 125, 126, 128, 130, 131, 165, 167, 175, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 323, 329, 365, 367, 368, 369, 372, 374, 378, 384, 389, 390, 393, 394, 400, 402, 405, 429, 451, 453, 456, 467, 478, 480, 481, 483, 485, 486, 487, 502, 506, 516, 528, 529, 552], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 193, 194, 196, 198, 205, 206, 389, 394, 450, 454, 478, 479, 484, 487, 489, 500], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 102, 104, 105, 109, 110, 114, 124, 180, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 378, 379, 381, 383, 385, 386, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 407, 409, 410, 412, 419, 422, 425, 426, 439, 443, 445, 449, 455, 461, 465, 467, 469, 470, 472, 473, 478, 479, 482, 483, 484, 487, 489, 492, 513, 520, 521, 528, 529, 576], "instruct": [378, 387, 395, 407, 409, 410, 418, 429, 433, 437, 465, 491], "instrument": [6, 83, 95, 108, 153, 157, 158, 232, 378, 388, 389, 390, 391, 393, 398, 402, 410, 414, 423, 426, 438, 439, 440, 447, 450, 451, 453, 454, 457, 461, 468, 473, 475, 479, 481, 482, 483, 486, 487, 488, 489, 491, 492, 493, 494, 496, 500, 501, 512, 513, 514, 518, 520, 522, 574, 575], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 102, 103, 104, 105, 108, 109, 110, 112, 113, 118, 120, 124, 125, 126, 127, 130, 131, 133, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 173, 176, 180, 181, 186, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 280, 282, 284, 286, 287, 288, 292, 293, 294, 296, 301, 305, 316, 317, 323, 327, 329, 332, 333, 334, 335, 337, 338, 365, 371, 378, 392, 436, 481, 506], "int64": [102, 105, 109, 110, 111, 116, 122, 133, 514], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 218, 219, 222, 226, 228, 229, 230, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 521, 533], "int_flux": 477, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 102, 105, 109, 110, 123, 125, 126, 127, 130, 133, 141, 142, 151, 152, 158, 163, 166, 169, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 215, 217, 224, 246, 305, 323, 329, 378, 384, 392, 528], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 101, 102, 105, 109, 110, 123, 125, 128, 130, 140, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 168, 193, 194, 196, 198, 202, 205, 206, 207, 208, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277, 278, 280, 316, 377, 385, 387, 389, 391, 392, 393, 395, 396, 398, 402, 404, 417, 419, 420, 424, 425, 429, 434, 435, 436, 437, 438, 439, 440, 443, 453, 455, 456, 458, 472, 475, 477, 478, 479, 484, 485, 487, 502, 504, 512, 514, 520, 535, 555], "integral_error": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 396, 426, 475], "integral_flux": 475, "integral_flux_imag": 430, "integrate_geom": [220, 221, 225, 233, 236, 248, 250, 259, 260, 262, 264, 270, 274, 429, 442, 444], "integrate_log_log": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165], "integrate_spectrum": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 420, 426], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 305, 388, 406, 482], "intens": [193, 194, 196, 202, 205, 206, 211, 237, 388, 484, 512], "intent": 383, "interact": [19, 20, 87, 91, 163, 166, 193, 194, 196, 202, 205, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 377, 378, 379, 387, 388, 389, 390, 394, 398, 401, 414, 423, 449, 461, 469, 481, 484, 486, 487, 496, 500, 501, 525, 528, 552, 576], "interchang": 528, "interest": [115, 117, 126, 130, 211, 284, 383, 391, 392, 396, 398, 408, 451, 461, 465, 467, 475, 478, 479, 481, 483, 485, 488, 491, 492, 502, 513, 514, 552, 575, 578, 579], "interfac": [6, 11, 15, 19, 20, 87, 91, 209, 211, 214, 215, 216, 217, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 378, 382, 383, 384, 388, 390, 391, 393, 395, 396, 397, 398, 419, 422, 424, 425, 426, 429, 433, 436, 437, 443, 447, 449, 454, 457, 458, 461, 469, 470, 481, 487, 491, 496, 501, 502, 503, 512, 513, 516, 524, 527, 552, 573, 574, 575, 576], "intermedi": [204, 387, 394, 404, 414, 450, 471], "intern": [15, 19, 20, 26, 87, 91, 123, 125, 136, 137, 138, 139, 170, 176, 201, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 280, 305, 317, 378, 390, 392, 394, 397, 402, 429, 431, 440, 443, 448, 454, 461, 470, 476, 479, 482, 484, 491, 494, 500, 512, 516, 571], "interp": [19, 20, 155, 193, 194, 196, 198, 202, 203, 205, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 318, 373, 401, 406, 442, 444, 456, 462, 466, 469, 472, 482, 483, 484, 487, 492, 493, 494, 528, 529, 552, 553], "interp1": 484, "interp1d": 318, "interp2": 484, "interp_by_coord": [193, 194, 196, 202, 205, 206, 274, 440, 484], "interp_by_pix": [193, 194, 196, 202, 205, 206, 270, 271, 484], "interp_kwarg": [68, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 226, 270, 271, 274, 275, 378, 482, 492, 561], "interp_map": [193, 194, 196, 202, 205, 206], "interp_missing_data": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165], "interp_param": 378, "interp_scal": [101, 285, 318], "interp_to_geom": [193, 194, 196, 202, 205, 206, 426, 442, 484, 492, 516], "interp_weight": 192, "interpol": [6, 26, 94, 101, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 173, 192, 193, 194, 196, 198, 202, 203, 205, 206, 226, 238, 248, 249, 270, 271, 273, 274, 275, 285, 317, 318, 319, 377, 389, 390, 391, 419, 424, 429, 431, 434, 437, 439, 440, 441, 442, 443, 444, 453, 466, 482, 483, 487, 492, 493, 516, 524, 528, 561], "interpolatedunivariatesplin": 273, "interpret": [91, 102, 105, 128, 141, 142, 194, 198, 204, 205, 206, 323, 396, 406, 484, 514, 529], "intersect": [89, 176, 177, 181, 201, 392, 471], "interspers": 383, "interstellar": [45, 465], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 101, 103, 108, 125, 130, 174, 198, 203, 211, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 387, 388, 392, 393, 396, 402, 410, 423, 425, 426, 429, 438, 439, 444, 445, 470, 472, 475, 481, 484, 493, 501, 513, 528, 575, 578], "interval_edg": 203, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 247, 294, 389, 393], "intrinsic_model": 449, "intro_map": 438, "introduc": [19, 20, 193, 194, 196, 198, 202, 205, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 378, 385, 386, 388, 390, 391, 392, 393, 395, 398, 400, 403, 406, 420, 422, 423, 425, 426, 429, 431, 432, 436, 437, 438, 440, 443, 444, 445, 464, 476, 483, 487, 529, 534, 576, 579], "introduct": [381, 399, 400, 401, 419, 423, 424, 425, 426, 445, 451, 454, 487, 500, 501, 505], "introductori": 476, "introspect": 305, "intuit": [399, 579], "invalid": [364, 378, 392, 405, 406, 429, 445, 455, 459, 465, 494], "invalid_pixel": 485, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 204, 218, 219, 222, 226, 228, 229, 230, 234, 237, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 286, 287, 288, 327, 334, 391, 465, 485, 487, 489, 552], "inverse_al": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "inverse_cdf": 465, "inversecdf": 391, "inversecdfsampl": [391, 421], "inversecompton": [247, 552], "invert": [91, 192, 204, 502], "invest": 381, "investig": [464, 471, 475], "involv": [87, 91, 102, 105, 109, 110, 378, 383, 392, 394, 396, 400, 457, 576], "io": [13, 83, 86, 87, 91, 126, 186, 196, 201, 211, 275, 381, 387, 398, 408, 420, 423, 435, 439, 443, 465, 481, 482, 484, 491, 513, 516, 527, 529], "iop": 293, "iopscienc": 293, "ipix": 192, "ipykernel": [410, 412], "ipynb": [386, 398, 420, 423, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 498, 500, 501, 502, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "ipynb_to_galleri": 378, "ipython": [87, 91, 377, 378, 394, 395, 409, 413, 421, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 496, 500, 501, 502, 515, 576], "ipython3": 411, "ipywidget": 484, "irap": 398, "irf": [6, 82, 88, 96, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 116, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 179, 180, 182, 183, 184, 186, 188, 189, 192, 201, 204, 262, 304, 378, 379, 384, 388, 389, 390, 391, 394, 397, 398, 399, 400, 406, 410, 418, 420, 423, 425, 426, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 461, 465, 466, 469, 470, 472, 483, 485, 488, 489, 490, 492, 493, 494, 496, 500, 501, 512, 513, 516, 518, 519, 520, 522, 523, 574, 575], "irf_dict": 167, "irf_dl3_hdu_specif": 482, "irf_fil": [88, 148, 152, 153, 154, 163, 448, 456, 469, 472, 482, 491], "irf_filenam": [465, 466, 482, 491], "irf_map": [151, 152, 158, 163, 166], "irf_path": 465, "irfmap": [151, 152, 163, 166, 410, 426, 516], "irfmetadata": 405, "irfmodel": 389, "irfs1": 491, "irfs2": 491, "irfs_path": 82, "irfstack": [426, 435], "irregular": [192, 204, 528], "irrespect": [391, 461, 484, 528], "is_align": [192, 198, 203, 204], "is_all_point_sky_region": 201, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206], "is_allski": [191, 192, 201, 204], "is_bkg": 107, "is_contigu": [203, 484], "is_convertible_to_flux_sed_typ": [123, 125], "is_energy_axi": 198, "is_energy_depend": [220, 221, 223, 225, 231, 233, 235, 236, 237, 238, 239, 248, 250, 254, 259, 260, 261, 264, 270, 273, 274, 276, 442, 487], "is_fixed_rad_max": 165, "is_flat": [191, 192, 197, 201, 204], "is_hpx": [192, 201, 204], "is_imag": [191, 192, 201, 204], "is_mask": [193, 194, 196, 202, 205, 206], "is_norm": [406, 431, 444], "is_norm_spectral_model": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 429, 487], "is_nul": 484, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 429], "is_region": [192, 201, 204], "is_regular": [192, 201, 204], "is_ul": [67, 123, 125, 429, 444, 454, 478, 480, 502], "is_unidimension": 197, "isf": [481, 578], "isinst": [378, 389, 392, 401, 405, 406], "ism": [52, 53, 552], "isn": [381, 385, 392, 394, 397, 408, 463, 576], "isnan": [484, 485], "iso": [88, 125, 203, 208, 443, 472, 486, 492, 528, 570], "iso_p8r2_source_v6_v06": [486, 492], "isol": [392, 409, 485], "isot": [359, 580], "isotherm": [22, 504], "isotrop": [47, 221, 279, 486], "issu": [19, 20, 26, 87, 91, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 378, 379, 381, 386, 387, 389, 390, 392, 395, 398, 403, 404, 405, 406, 407, 410, 411, 412, 419, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 463, 485, 491, 512, 516, 576, 577], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 200, 246, 398, 405], "iter": [87, 91, 92, 100, 123, 125, 133, 193, 194, 196, 197, 198, 200, 202, 203, 205, 206, 246, 381, 384, 386, 394, 430, 457, 472], "iter_by_axi": [123, 125, 193, 194, 196, 202, 205, 206], "iter_by_axis_data": 202, "iter_by_coord": 421, "iter_by_edg": [198, 203], "iter_by_imag": [193, 194, 196, 202, 205, 206, 438], "iter_by_image_data": [193, 194, 196, 202, 205, 206, 484], "iter_by_image_index": [193, 194, 196, 202, 205, 206], "iter_by_pix": 421, "iter_with_reshap": 197, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 481, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 102, 105, 109, 110, 123, 125, 169, 170, 179, 192, 198, 200, 218, 219, 222, 225, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 284, 378, 381, 384, 387, 388, 390, 393, 394, 395, 397, 402, 404, 405, 408, 411, 429, 443, 444, 445, 450, 454, 455, 458, 465, 466, 470, 471, 476, 478, 480, 481, 483, 484, 485, 486, 487, 489, 500, 502, 505, 521, 523, 525, 527, 528, 529, 575, 578], "itself": [87, 91, 377, 378, 393, 404, 450, 470, 471, 473, 489, 576], "ivoa": [378, 444], "j": [19, 20, 23, 102, 109, 128, 135, 144, 287, 379, 381, 512], "j0001": [478, 502], "j0002": [478, 502], "j0003": [478, 502], "j0006": 478, "j0007": 502, "j0008": [478, 502], "j0009": 502, "j0010": 478, "j0013": 478, "j0021": 478, "j0022": 478, "j0025": 478, "j0031": 478, "j0349": 478, "j0521": 453, "j0534": [478, 502], "j0633": 502, "j0835": [451, 502], "j0851": 478, "j1036": 478, "j1104": [478, 502], "j1506": 451, "j1507": 451, "j1513": 478, "j1514": 478, "j1555": 502, "j1653": 478, "j1713": 450, "j1731": 486, "j1732": 486, "j1741": 486, "j1744": 486, "j1745": 486, "j1746": 486, "j1747": 486, "j1748": 486, "j1753": 486, "j1800": 486, "j1801": 486, "j1802": 486, "j1809": 486, "j1811": 486, "j1824": 478, "j1825": 464, "j1843": 67, "j1844": 67, "j2028": 478, "j2158": 478, "j2347": 502, "j2350": 502, "j2351": 502, "j2352": 502, "j2356": 502, "j2357": [478, 502], "j2358": [478, 502], "j2359": [478, 502], "j_": 23, "jackson": [87, 91], "jacob": [419, 438], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 425], "jalel": [426, 429], "jan": [383, 384, 387, 390, 395, 399, 416], "jana": 444, "januari": [385, 387, 403], "jargon": 410, "jason": 419, "javascript": [87, 91], "jax": 396, "jbernet": 444, "jean": [437, 438], "jeffrei": 489, "jeltema": 504, "jep": 383, "jet": 369, "jfact": 477, "jfact_decai": 477, "jfact_map": 477, "jfactor": [19, 20, 443], "jfactori": 477, "jj": 209, "jk": [102, 109, 512], "jk_gbtcn": 475, "jkl": 512, "jl": 512, "jo": [87, 91], "job": [93, 126, 127, 130, 133, 169, 431], "johann": [422, 429, 433, 434, 435, 436, 437, 438], "john": [87, 91], "join": [380, 389, 390, 491], "joint": [100, 109, 110, 120, 131, 134, 135, 144, 146, 211, 284, 386, 387, 390, 394, 398, 400, 410, 419, 420, 422, 423, 438, 439, 445, 447, 450, 451, 453, 454, 455, 457, 464, 468, 472, 479, 480, 481, 483, 487, 488, 489, 492, 496, 500, 514, 516, 573, 574, 575], "joint_fit": 473, "joint_result": 473, "jointli": [488, 493], "jonathan": [433, 434], "jose": [429, 431, 437], "joshi": 429, "jos\u00e9": [386, 394, 398, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 437, 438, 439], "journal": 404, "jouvin": [419, 421, 422, 423, 426, 434, 435, 436, 437, 438], "jqueri": [87, 91], "jskwarg": [87, 91], "json": [16, 84, 90, 104, 124, 407, 431, 433, 437], "json_data": [16, 84, 90, 104, 124], "json_encode_earth_loc": 90, "json_schema": [16, 84, 90, 104, 124], "json_schema_input_typ": 90, "jsonschema": [395, 422, 423], "jsviewer": [87, 91, 463], "juan": 444, "jul": [384, 393, 395, 397, 416], "juli": [384, 387, 392, 394, 395, 397, 401, 403, 405, 471, 475], "julia": 444, "julian": 580, "julien": [435, 436, 437], "jun": [392, 394, 395, 400, 401], "june": [392, 396, 416], "junior": [66, 398], "jupyt": [377, 385, 394, 395, 398, 409, 413, 415, 420, 435, 436, 437, 439, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 576], "jupyterlab": [377, 395, 398, 414, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "jupytext": 398, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 153, 353, 378, 379, 380, 381, 383, 386, 388, 392, 394, 395, 396, 398, 407, 408, 409, 411, 437, 439, 449, 453, 454, 456, 461, 463, 465, 470, 471, 473, 476, 479, 484, 492, 493, 500, 502, 513, 529, 576], "juypter": 394, "jyear": [87, 91], "k": [19, 33, 52, 53, 102, 109, 200, 222, 273, 329, 451, 453, 455, 478, 481, 484, 486, 492, 512, 529, 533, 545, 552, 563], "k03tt_gx": 475, "kai": [437, 438], "kaori": 421, "kaspi": [31, 39, 45], "katrin": [406, 442, 443, 444], "kb": 386, "keep": [13, 87, 91, 100, 123, 161, 193, 194, 196, 202, 205, 206, 211, 378, 379, 381, 383, 384, 385, 386, 392, 395, 396, 397, 398, 401, 402, 427, 437, 458, 459, 464, 469, 475, 481, 486, 492], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [103, 108], "keepdim": [161, 163, 166, 193, 194, 196, 202, 205, 206, 418, 423, 483], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 82, 84, 87, 89, 90, 91, 102, 104, 105, 109, 110, 118, 124, 133, 200, 211, 341, 346, 347, 364, 386, 388, 395, 400, 402, 405, 415, 438, 449, 479, 487, 542], "kept": [89, 102, 105, 109, 110, 123, 125, 126, 130, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 378, 384, 398, 402, 449, 475, 514], "kernel": [102, 105, 109, 110, 118, 122, 128, 129, 133, 150, 151, 152, 161, 163, 166, 168, 173, 178, 180, 183, 194, 204, 206, 384, 405, 410, 412, 424, 425, 430, 435, 439, 440, 445, 457, 459, 473, 483, 484, 485, 492, 502, 512, 516, 520], "kernel_width": [133, 457, 463], "kernelbackgroundestim": 425, "kernelbackgroundmapestim": 399, "kev": [107, 133, 198, 457, 479, 480, 529], "keyboard": 414, "keyerror": [91, 200, 402], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 101, 102, 104, 105, 109, 110, 124, 125, 127, 128, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 209, 211, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 285, 287, 317, 325, 326, 347, 359, 361, 362, 365, 366, 367, 371, 372, 373, 374, 375, 405, 425, 429, 432, 440, 441, 455, 465, 466, 479, 484, 493, 514, 529, 540], "kg": 52, "khelifi": [421, 423, 426, 429, 432, 436, 437, 438, 440, 441], "kh\u00e9lifi": [404, 440, 442, 443, 444, 445], "kind": [87, 91, 353, 389, 390, 391, 396, 397, 401, 404, 438], "kinet": 44, "king": [162, 422, 433, 434, 435, 436, 437, 438, 482, 522], "kirsti": [442, 443, 444, 445], "kl": 512, "klepser": 433, "km": [32, 37], "km2": 491, "km2a": [57, 70], "knn9udiu": 475, "know": [379, 381, 383, 387, 392, 394, 395, 402, 408, 420, 437, 438, 439, 463, 466, 477, 482, 483, 484, 491, 493, 494, 576], "knowledg": [406, 414, 451, 456, 462, 464, 467, 469, 470, 481, 483, 484, 486, 489], "known": [286, 288, 305, 391, 453, 457, 459, 464, 470, 483, 484, 485, 502, 516, 526, 576, 577, 578], "koenig": [287, 445], "konig": [287, 445], "konrad": 444, "kornecki": 444, "kovalev": 476, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 247, 305, 308, 477, 478, 510, 552], "kqkbo6wb": 457, "kurt": 444, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 101, 102, 105, 109, 110, 125, 126, 127, 128, 130, 145, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 175, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 285, 317, 328, 353, 365, 366, 367, 370, 372, 373, 374, 375, 378, 389, 405, 406, 442, 451, 455, 465, 473, 483, 494, 564], "kwargs_ax": [371, 459, 461], "kwargs_background": [109, 110], "kwargs_colorbar": [147, 148, 150, 153, 154, 155, 160, 162, 164, 206, 366], "kwargs_count": [109, 110], "kwargs_excess": [109, 110], "kwargs_extens": [220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274, 464], "kwargs_fit": [109, 110, 371], "kwargs_fp": 101, "kwargs_hist": [371, 459, 461], "kwargs_list": 200, "kwargs_model": 101, "kwargs_npred_sign": [109, 110], "kwargs_point": [201, 224, 246, 455], "kwargs_posit": [220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274, 464], "kwargs_residu": [101, 109, 110], "kwargs_saf": [109, 110], "kwargs_spati": [102, 105, 109, 110, 461, 501], "kwargs_spectr": [102, 105, 109, 110, 461, 501], "kwargs_spectrum": [101, 109, 110], "l": [23, 26, 51, 54, 101, 102, 109, 110, 173, 375, 379, 392, 401, 404, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 469, 472, 473, 478, 479, 481, 483, 484, 485, 487, 488, 489, 491, 492, 500, 501, 502, 512, 516, 529, 552, 561, 575, 577, 578, 579], "l06": [48, 506], "l_": [52, 53], "l_0": [51, 509, 533, 534], "l_snr": 44, "la": 435, "lab": [404, 410, 412, 414, 437], "label": [92, 195, 198, 203, 224, 246, 303, 366, 367, 372, 375, 378, 379, 382, 387, 391, 392, 407, 408, 429, 431, 440, 441, 443, 445, 448, 449, 451, 453, 455, 459, 461, 462, 466, 467, 470, 471, 473, 476, 477, 481, 484, 487, 488, 489, 502, 509, 510, 518, 542, 548, 551, 552, 556, 561], "label_axi": [195, 484], "label_axis2": 484, "labelcolor": 448, "labelmapaxi": [429, 443, 445], "lack": [200, 393, 473], "lafferti": [417, 575], "lafferty1994": 575, "lai": 485, "lambda": [67, 229, 230, 287, 371, 478, 491, 546, 578], "lambda_": [229, 230, 284, 451, 453, 461, 546, 548], "lancast": [135, 144], "land": 408, "langl": 19, "languag": [385, 397], "laplac": [236, 535], "lar": [394, 418, 419, 420, 436, 437, 438, 441, 443, 445], "larg": [67, 87, 91, 193, 194, 196, 202, 205, 206, 270, 272, 274, 378, 381, 383, 384, 392, 398, 399, 419, 429, 438, 439, 444, 448, 453, 459, 471, 478, 485, 491, 492, 493, 502, 512, 514, 516, 517, 523, 529, 535, 573, 576, 581], "large_scale_compon": [67, 478], "larger": [27, 132, 151, 152, 158, 163, 166, 284, 293, 379, 386, 397, 443, 445, 448, 450, 453, 479, 483, 484, 485, 489, 513, 529, 535, 577, 578], "largest": [102, 105, 109, 110, 206, 378], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 193, 194, 195, 196, 198, 202, 205, 206, 246, 335, 375, 385, 388, 390, 400, 404, 407, 408, 410, 412, 418, 419, 476, 523, 525], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 102, 105, 109, 111, 116, 122, 126, 127, 129, 133, 151, 152, 158, 163, 166, 169, 193, 194, 196, 199, 202, 204, 205, 206, 220, 221, 225, 232, 233, 236, 248, 250, 259, 260, 262, 264, 270, 272, 274, 279, 284, 307, 308, 311, 333, 378, 379, 386, 387, 388, 389, 390, 391, 397, 398, 401, 408, 410, 415, 418, 423, 436, 437, 438, 445, 447, 451, 454, 457, 458, 459, 461, 463, 467, 470, 471, 475, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 495, 496, 500, 501, 502, 504, 511, 513, 514, 516, 521, 528, 529, 533, 534, 535, 536, 537, 538, 539, 573, 580], "lat_0": [225, 233, 236, 250, 259, 260, 274, 393, 401, 457, 458, 461, 462, 464, 465, 466, 469, 470, 478, 479, 486, 487, 492, 500, 501, 533, 534, 535, 537, 538, 539, 540], "lat_0_err": 464, "lat_pnt": [307, 311], "lat_rang": 333, "lat_t": [307, 311], "later": [378, 383, 384, 385, 389, 390, 391, 394, 395, 396, 397, 398, 399, 417, 419, 429, 430, 432, 433, 439, 449, 453, 455, 461, 462, 479, 483, 484, 487, 492, 502, 512], "latest": [126, 186, 275, 305, 381, 385, 398, 403, 404, 411, 440, 448, 456, 458, 461, 462, 463, 469, 472, 481, 513, 516, 529], "latex": [378, 379], "latex_inlin": 443, "latitud": [94, 148, 191, 192, 193, 194, 199, 201, 204, 205, 206, 333, 365, 422, 467, 484, 487, 521, 528, 536], "latpol": 484, "latter": [180, 211, 389, 391, 393, 399, 402, 405, 423, 455, 456, 465, 466, 469, 485, 486, 523, 525, 577], "launch": [410, 412, 437, 576], "laura": [426, 429, 431, 432, 438, 440, 442, 443, 444, 445], "law": [27, 101, 118, 123, 125, 127, 132, 140, 161, 163, 166, 218, 228, 229, 230, 251, 252, 253, 254, 263, 266, 267, 268, 277, 287, 332, 391, 417, 423, 437, 447, 449, 456, 458, 461, 465, 467, 469, 471, 472, 473, 475, 486, 487, 489, 516, 530, 542, 562, 568], "law2": 555, "layer": [87, 91, 390, 397], "layout": [429, 461, 469, 484, 491, 500, 501], "lazi": [88, 100, 102, 105, 109, 110, 272, 314, 437], "lazili": 102, "lazyfitsdata": 425, "lc": [86, 130, 203, 391, 393], "lc_1d": [123, 125, 145, 470, 471, 472, 476], "lc_3d": 470, "lc_estim": 393, "lc_maker_1d": [470, 471, 472], "lc_maker_3d": 470, "lc_new": 471, "le": 90, "lea": 426, "lead": [122, 378, 387, 392, 397, 399, 401, 403, 404, 422, 445, 489, 491, 493, 504, 576], "leak": [455, 525], "leakag": [287, 445, 470], "learn": [148, 153, 378, 395, 398, 407, 410, 412, 414, 438, 451, 453, 457, 463, 464, 465, 467, 476, 478, 479, 481, 484, 487, 489, 491, 496, 502, 576], "least": [43, 44, 134, 143, 378, 381, 383, 387, 465, 476, 528], "leav": [383, 390, 392, 393, 395, 398, 407, 409, 486], "lefaucheur": [435, 436, 437], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 102, 109, 123, 125, 130, 133, 151, 153, 193, 194, 196, 202, 205, 206, 230, 234, 253, 266, 289, 295, 378, 386, 388, 392, 394, 397, 401, 414, 457, 463, 470, 472, 476, 478, 486, 514, 523, 526, 534, 535, 542, 543, 546, 547, 549, 550, 552, 554, 557, 558, 559, 560, 564, 565, 566, 568, 577, 578, 579], "legaci": [378, 437, 438], "legacy_altaz": 85, "legal": [87, 91], "legend": [375, 448, 449, 451, 453, 455, 461, 462, 466, 467, 470, 471, 473, 476, 477, 481, 487, 488, 489, 492, 509, 510, 518, 542, 548, 551, 552, 556, 561], "legend_kwarg": 375, "lemi\u00e8r": 437, "len": [83, 284, 375, 457, 464, 465, 466, 471, 473, 475, 476, 478, 483, 486, 502, 516], "lenain": [437, 438], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 169, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 287, 317, 371, 404, 451, 453, 456, 463, 467, 475, 478, 481, 484, 492, 502, 533], "lengthi": 484, "lennarz": [420, 434, 436], "leq": [533, 538, 539], "less": [77, 192, 194, 198, 238, 273, 295, 378, 383, 385, 396, 408, 437, 481, 487, 488, 489], "let": [67, 278, 378, 381, 383, 387, 392, 395, 410, 413, 437, 438, 439, 451, 454, 455, 456, 457, 461, 462, 463, 464, 465, 467, 472, 473, 478, 479, 481, 484, 485, 487, 489, 492, 500, 502, 576], "level": [6, 11, 15, 16, 83, 84, 90, 104, 122, 124, 211, 286, 288, 378, 379, 381, 382, 383, 389, 391, 393, 397, 398, 399, 402, 405, 410, 414, 421, 422, 423, 424, 425, 429, 437, 444, 447, 450, 451, 453, 454, 457, 458, 459, 461, 463, 465, 469, 470, 471, 472, 473, 476, 477, 480, 481, 486, 488, 491, 492, 493, 494, 496, 498, 502, 503, 512, 513, 514, 521, 523, 524, 574, 575, 576, 580], "levelnam": 378, "levmar": [211, 481], "lf": 408, "lgpl": 378, "lgtm": 408, "lhaaso": [55, 57], "li": [118, 122, 176, 384, 448, 457, 459, 465, 480, 575, 578], "lib": [342, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 540, 548, 564], "librari": [87, 91, 378, 383, 384, 388, 398, 404, 415, 450, 453, 465, 487, 491, 501, 504, 513, 516, 574, 576], "licenc": 404, "licens": [404, 414], "lie": [191, 192, 198, 201, 204, 480], "life": [385, 481], "lifetim": [20, 444], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 130, 137, 226, 238, 294, 382, 389, 391, 394, 398, 402, 410, 423, 425, 426, 433, 436, 438, 443, 444, 447, 449, 474, 475, 476, 496, 514, 515, 525, 530, 572, 574], "light_curv": [16, 238, 398, 438, 447, 454, 458, 459, 461, 470, 474, 500, 571], "light_curve_flar": [447, 471, 474], "light_curve_model": 571, "light_curve_simul": [447, 472, 474], "lightcrv_pksb1222": [238, 571], "lightcurv": [71, 73, 74, 75, 77, 78, 119, 125, 130, 136, 137, 138, 139, 145, 202, 203, 238, 291, 292, 294, 387, 389, 394, 397, 399, 402, 410, 421, 423, 424, 425, 429, 435, 436, 437, 438, 440, 441, 443, 444, 447, 470, 471, 474, 480, 496, 511, 516, 571], "lightcurve1": 136, "lightcurve2": 136, "lightcurve_at_energi": 402, "lightcurveconfig": 16, "lightcurveestim": [119, 393, 394, 399, 402, 410, 421, 423, 425, 426, 429, 437, 438, 443, 470, 471, 472, 475, 516], "lightcurvetablemodel": [389, 391], "lightcurvetempl": 389, "lightcurvetemplatemodel": [442, 443], "lightcurvetemplatetemporalmodel": [269, 401, 440, 443, 445, 466, 487, 571], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 141, 142, 157, 165, 193, 194, 196, 200, 202, 205, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 305, 325, 335, 377, 378, 379, 381, 383, 384, 385, 386, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 407, 409, 410, 414, 420, 429, 431, 432, 436, 437, 439, 440, 442, 443, 448, 449, 451, 453, 454, 455, 456, 459, 466, 467, 473, 476, 477, 479, 481, 482, 484, 488, 489, 491, 492, 496, 500, 502, 504, 505, 512, 516, 521, 529, 539, 574, 576, 577, 578, 579], "likelhood": 390, "likelihood": [100, 101, 102, 105, 110, 122, 123, 124, 125, 127, 133, 134, 143, 285, 302, 378, 384, 387, 390, 391, 394, 396, 398, 399, 400, 402, 410, 417, 419, 420, 423, 430, 433, 436, 438, 439, 444, 445, 451, 453, 454, 455, 457, 463, 467, 470, 471, 473, 479, 480, 481, 483, 489, 492, 500, 501, 504, 512, 514, 516, 552, 574, 575, 577, 578], "likelihood_profil": [389, 419], "likelihood_typ": 424, "likewis": [194, 206], "lima": 118, "lima1983": [514, 575, 578], "lima_map": 459, "lima_maps2": 459, "limamapestim": [399, 425], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 101, 112, 113, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 143, 150, 165, 168, 198, 215, 217, 251, 285, 286, 288, 325, 326, 365, 384, 386, 387, 389, 390, 391, 392, 393, 395, 396, 398, 399, 401, 402, 406, 419, 425, 429, 436, 437, 438, 439, 444, 448, 453, 457, 461, 464, 467, 470, 479, 480, 481, 484, 485, 488, 492, 500, 512, 514, 516, 525, 534, 552, 561, 574, 575, 579], "lin": [19, 20, 198, 202, 203, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 285, 317, 318, 319, 406, 466, 482, 484, 494, 529, 552], "line": [6, 13, 46, 82, 83, 87, 91, 101, 102, 105, 109, 110, 154, 160, 162, 164, 201, 202, 224, 246, 337, 338, 375, 377, 379, 381, 384, 387, 389, 392, 394, 395, 402, 408, 409, 410, 412, 414, 423, 434, 437, 445, 461, 481, 483, 487, 504, 516, 529, 574], "line2d": [201, 224, 246], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 147, 148, 149, 150, 153, 155, 157, 160, 165, 193, 194, 196, 202, 203, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 238, 239, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 270, 271, 273, 274, 275, 317, 378, 440, 447, 461, 466, 467, 469, 484, 487, 492, 500, 501, 530, 572], "linear_model": 567, "linearli": [203, 206, 484, 512], "linearsegmentedcolormap": [368, 369], "linearstretch": [368, 369], "lineartemporalmodel": [269, 487, 567], "lineno": 378, "liner": [273, 392], "linestyl": [448, 473, 475, 477, 489, 510, 529, 533, 534], "linewidth": [375, 379, 475], "linhoff": [441, 442, 443, 444, 445], "link": [67, 69, 80, 101, 224, 226, 246, 284, 381, 383, 386, 387, 390, 398, 404, 408, 414, 415, 426, 429, 431, 435, 436, 437, 449, 450, 453, 454, 455, 456, 458, 461, 462, 469, 471, 472, 478, 481, 487, 489, 491, 501, 502, 516, 561, 573], "linkag": 303, "linkage_kwarg": 303, "linkcheck": 379, "linspac": [83, 152, 193, 194, 196, 202, 205, 206, 211, 465, 467, 473, 481, 482, 484, 489, 528, 533], "linux": [385, 395, 408, 411, 438, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 576], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 101, 102, 103, 104, 105, 108, 109, 110, 118, 120, 122, 123, 125, 126, 127, 130, 131, 133, 134, 135, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 168, 169, 173, 174, 176, 177, 179, 180, 181, 182, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 326, 336, 337, 338, 340, 367, 371, 372, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 450, 453, 456, 457, 462, 466, 467, 469, 470, 472, 475, 476, 479, 480, 481, 482, 483, 488, 489, 491, 492, 493, 494, 496, 501, 512, 516, 519, 528, 529, 573, 574, 575, 576], "list_format": [87, 91], "listen": 516, "listenv": 381, "liter": [16, 84, 90, 104, 124, 323, 378], "literatur": [504, 506, 575], "littl": [87, 91, 397, 399, 405, 484, 492, 521, 525, 576], "live": [83, 86, 88, 378, 383, 386, 388, 399, 439, 442, 480], "livetim": [67, 88, 89, 105, 106, 110, 163, 185, 187, 188, 384, 448, 450, 453, 454, 456, 463, 465, 466, 469, 472, 478, 479, 482, 484, 492, 493, 502, 512, 516], "livetime_fract": 89, "ljouvin": 384, "ll": [123, 125, 133, 381, 383, 395, 411, 448, 449, 450, 453, 455, 458, 459, 463, 470, 471, 472, 473, 475, 476, 576, 578], "llvm": 414, "ln": [53, 481, 559], "lo": [23, 436], "lo_bnd": 198, "lo_threshold": 150, "load": [66, 67, 83, 86, 87, 91, 100, 101, 102, 105, 109, 127, 129, 167, 173, 191, 192, 193, 194, 204, 313, 378, 432, 435, 437, 443, 454, 456, 458, 459, 465, 466, 469, 472, 473, 476, 485, 491, 492, 494, 500, 502, 513], "load_cta_irf": [439, 443], "load_irf_dict_from_fil": [163, 443, 448, 456, 465, 466, 469, 472, 491], "loc": [87, 91, 206, 371, 473, 509, 510, 518, 542, 548, 551, 552, 556], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 141, 142, 178, 191, 192, 201, 202, 204, 378, 379, 381, 386, 392, 407, 408, 411, 415, 419, 429, 454, 457, 458, 459, 464, 465, 477, 483, 496, 500, 516], "local_dataset": 483, "local_dens": [17, 18, 21, 22, 24, 25, 27, 477], "local_to_glob": 192, "localfold": 11, "localis": 313, "localn": [16, 84, 90, 104, 124], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 137, 151, 152, 158, 163, 166, 204, 334, 386, 392, 396, 399, 404, 405, 410, 412, 443, 445, 448, 456, 465, 466, 469, 472, 478, 493, 494, 513, 529, 576], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 102, 104, 123, 124, 125, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 198, 202, 206, 214, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 270, 271, 273, 274, 275, 277, 280, 289, 295, 316, 317, 319, 364, 373, 390, 394, 416, 433, 440, 444, 447, 449, 454, 456, 457, 458, 459, 461, 462, 463, 466, 469, 470, 471, 472, 475, 477, 479, 481, 482, 483, 484, 487, 489, 492, 493, 498, 500, 501, 516, 518, 528, 529, 530, 553, 561, 562, 568, 575, 576, 577, 578, 579], "log10": 473, "log_": [240, 241, 487, 550], "log_2": 292, "log_en": 487, "log_level": 11, "log_parabola": 451, "log_parabola_norm": 401, "logarithm": [34, 484, 489, 550], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 436, "loggaussian": 389, "logger": [344, 347, 378, 463], "logic": [16, 84, 86, 90, 104, 124, 179, 402, 445, 484, 485], "logical_and": [193, 194, 196, 202, 205, 206], "logical_or": [193, 194, 196, 202, 205, 206, 483], "loglog": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 316, 448, 477, 508, 509, 510], "lognorm": 477, "logo": 408, "logparabola": [389, 551], "logparabolanormspectralmodel": [241, 257, 401, 426, 487, 551], "logparabolaspectralmodel": [211, 240, 257, 401, 449, 451, 453, 455, 462, 478, 481, 487, 544, 550], "logscal": 423, "logspac": [152, 193, 194, 196, 202, 205, 206, 456, 469, 472, 473, 477, 484, 508, 509, 510, 529], "logspir": [33, 38], "lomb": [393, 437], "lon": [16, 47, 91, 94, 96, 102, 105, 109, 111, 116, 122, 127, 129, 133, 151, 152, 158, 163, 166, 169, 193, 194, 196, 199, 202, 204, 205, 206, 220, 221, 225, 232, 233, 236, 248, 250, 259, 260, 262, 264, 270, 272, 274, 307, 308, 311, 333, 378, 379, 389, 392, 397, 401, 422, 454, 457, 458, 459, 461, 463, 467, 470, 471, 475, 478, 479, 480, 482, 483, 484, 487, 488, 492, 500, 501, 502, 514, 528, 529, 533, 534, 535, 536, 537, 538, 539], "lon_0": [225, 233, 236, 250, 259, 260, 274, 393, 401, 457, 458, 461, 462, 464, 465, 466, 469, 470, 478, 479, 486, 487, 492, 500, 501, 533, 534, 535, 537, 538, 539, 540], "lon_0_err": 464, "lon_pnt": [307, 311], "lon_rang": 333, "lon_t": [307, 311], "long": [378, 381, 383, 385, 392, 394, 397, 398, 400, 403, 405, 431, 440, 449, 478, 496, 528], "longer": [293, 378, 384, 385, 392, 393, 395, 398, 411, 429, 432, 437, 438, 440, 443, 450, 456, 470], "longest": 197, "longitud": [68, 94, 148, 191, 192, 193, 194, 199, 201, 204, 205, 206, 333, 365, 392, 467, 484, 487, 521, 528, 536], "lonpol": 484, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 102, 105, 109, 110, 125, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 335, 378, 380, 381, 383, 390, 392, 393, 395, 397, 398, 401, 414, 437, 450, 453, 454, 456, 457, 458, 459, 461, 463, 465, 467, 469, 470, 472, 473, 479, 482, 484, 487, 491, 492, 494, 496, 500, 502, 504, 513, 516, 576], "look_up": 435, "lookup": 199, "loop": [87, 91, 326, 391, 443, 453, 478, 484, 493, 500, 516], "lopez": [226, 437, 443, 542], "lopez21": [227, 449, 542], "lopez_2021": 227, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 378, "loss": 52, "lost": [100, 102, 105, 109, 110, 516, 529], "lot": [82, 378, 381, 383, 384, 385, 386, 389, 391, 392, 394, 398, 408, 418, 420, 421, 429, 437, 438, 454, 463, 492, 500, 501, 526], "low": [87, 91, 150, 198, 328, 378, 379, 382, 387, 407, 435, 437, 447, 450, 453, 457, 463, 465, 479, 485, 486, 491, 492, 496, 500, 503, 523, 577], "low_zenith": 488, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 123, 125, 150, 179, 198, 200, 203, 218, 219, 222, 223, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 247, 249, 251, 252, 253, 254, 258, 261, 263, 265, 266, 267, 268, 271, 273, 275, 276, 378, 392, 397, 398, 405, 467, 483, 501], "lower_error": 125, "lowest": [397, 476], "lp": [240, 241, 401, 451, 478, 487, 544], "lp_norm": 551, "lqbkvir3": 483, "lss": 453, "lst": [385, 491], "lsw": 407, "lt": [378, 404, 431, 440, 538, 539], "ltcube": [192, 193, 194, 196, 205, 206, 484], "lts_author": 404, "luca": [419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 432, 440, 443], "lui": 439, "luigi": 434, "luminos": [41, 46, 51, 52, 53, 54, 247], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 510], "lvtm": 472, "lw": [453, 455, 457, 463, 473, 481, 529, 533, 535], "ly": [429, 486], "lyne": 37, "l\u00e9a": [419, 421, 422, 423, 426, 434, 435, 436, 437, 438], "l\u00f3pez": 437, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 111, 116, 130, 191, 192, 193, 194, 196, 202, 204, 205, 206, 287, 302, 378, 379, 381, 392, 409, 410, 411, 412, 466, 477, 481, 482, 484, 487, 498, 521, 525, 527, 528, 529, 540, 576, 579], "m1": [410, 412], "m2": [102, 153, 173, 449, 454, 456, 458, 459, 461, 463, 469, 479, 482, 483, 491, 500, 501], "m_": [20, 50, 52, 53], "m_3fhl_gc": 484, "m_4d": 484, "m_allski": 484, "m_b": 577, "m_cube": 484, "m_ejecta": [52, 509], "m_gc": 484, "m_hpx": 484, "m_i": 577, "m_iem_10gev": 484, "m_iem_cutout": 484, "m_iem_gc": 484, "m_iem_interp": 484, "m_sub": 484, "m_sun": 509, "m_wc": [193, 194, 196, 202, 205, 206, 484], "ma": [87, 91, 118, 122, 448, 457, 459, 480, 575, 578], "mac": [87, 91, 378, 385, 408, 436, 576], "machin": [381, 385, 386, 391, 395, 408, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 461], "maco": [395, 438], "macport": [395, 436, 438], "made": [173, 180, 201, 204, 215, 217, 224, 246, 305, 337, 338, 378, 381, 383, 394, 397, 399, 402, 403, 404, 429, 440, 441, 453, 457, 461, 462, 483, 491, 529, 540], "madrid": 388, "magenta": [375, 464, 488], "magic": [97, 410, 415, 431, 437, 440, 455, 492, 575], "magic_ecpl": 278, "magic_lp": [278, 455], "magnet": [42, 50, 51, 54, 552], "magnetic_field": [50, 51, 54], "magnitud": [317, 465], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 101, 104, 124, 125, 378, 379, 381, 386, 387, 391, 392, 394, 395, 403, 404, 408, 409, 411, 416, 417, 449, 458, 459, 465, 480, 491, 515, 516, 528, 535, 552, 573, 576, 580], "mail": [379, 381, 383, 385, 392, 394, 397, 399, 401, 404, 407, 413, 418, 419, 502, 576], "mailmap": [429, 440], "main": [91, 102, 109, 378, 381, 383, 384, 386, 390, 393, 394, 395, 398, 402, 404, 408, 419, 425, 429, 432, 437, 443, 454, 464, 465, 467, 469, 475, 478, 482, 484, 485, 486, 498, 500, 501, 511, 513, 517, 576], "mainli": [378, 388, 389, 392, 399, 484], "maint": 445, "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 378, 380, 395, 397, 398, 399, 403, 408, 438, 483], "mainten": [378, 385, 404, 408, 420, 442], "major": [201, 225, 233, 236, 378, 382, 383, 387, 395, 403, 431, 437, 438, 533, 534, 535], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 101, 104, 124, 168, 169, 173, 174, 175, 176, 178, 179, 180, 183, 184, 189, 190, 192, 193, 194, 197, 198, 201, 203, 204, 205, 206, 273, 335, 337, 338, 349, 377, 379, 380, 383, 384, 385, 388, 390, 392, 394, 395, 396, 397, 398, 399, 402, 404, 405, 408, 410, 412, 414, 417, 418, 420, 423, 424, 429, 431, 434, 435, 436, 437, 440, 442, 445, 449, 450, 453, 455, 456, 459, 461, 465, 469, 470, 482, 483, 484, 487, 491, 492, 498, 502, 513, 516, 576, 577], "make_background": [173, 180], "make_background_fit": 170, "make_background_scal": 170, "make_base_catalog_galact": [437, 506], "make_concentric_annulus_sky_region": 467, "make_contour": 481, "make_count": [173, 174, 175, 180], "make_counts_off": [174, 175], "make_cub": 168, "make_dataset": 169, "make_default_fov_background_model": 170, "make_edisp": [173, 180], "make_edisp_kernel": [173, 180], "make_edisp_kernel_map": 482, "make_edisp_map": 152, "make_effective_livetime_map": [445, 483], "make_exclusion_mask": 170, "make_exposur": [173, 180], "make_exposure_irf": [173, 180], "make_imag": 438, "make_lupton_rgb": 373, "make_map_background_irf": 432, "make_map_count": 384, "make_map_cutout": 384, "make_map_exposure_reco_energi": 384, "make_map_exposure_true_energi": [152, 384, 482], "make_map_fov_background": 384, "make_map_hadron_accept": 384, "make_map_ring_background": 384, "make_map_xxx": 384, "make_maps_off": 178, "make_mask_bkg_invalid": 179, "make_mask_energy_aeff_default": 179, "make_mask_energy_aeff_max": 179, "make_mask_energy_bkg_peak": 179, "make_mask_energy_edisp_bia": 179, "make_mask_offset_max": 179, "make_mean_edisp": 439, "make_mean_psf": 439, "make_meta_t": [173, 180], "make_model": 397, "make_more_random_stuff": 378, "make_observation_time_map": 483, "make_orthogonal_rectangle_sky_region": [127, 467], "make_path": [125, 462, 479, 480], "make_pixel_region": 392, "make_psf": [163, 173, 180, 439], "make_psf_map": 482, "make_quant": 349, "make_random_stuff": 378, "make_region": 392, "make_sky_coord": 392, "make_some_random_stuff": 378, "make_theta_squared_t": [429, 494], "makefil": [408, 433], "maker": [6, 152, 163, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 384, 391, 393, 404, 423, 425, 426, 431, 440, 443, 444, 447, 448, 453, 455, 456, 459, 463, 465, 466, 469, 472, 473, 475, 479, 482, 485, 490, 493, 494, 496, 526, 575], "maker_fov": 501, "maker_safe_mask": [463, 469, 501], "mamba": [381, 409, 410, 431], "manag": [87, 91, 215, 217, 224, 246, 325, 356, 377, 378, 381, 386, 394, 395, 397, 400, 404, 405, 407, 429, 434, 436, 440, 444, 484, 486, 576], "manconi": 421, "mandatori": [179, 381, 391, 404, 466, 487], "mandatory_keyword": 482, "mani": [87, 91, 317, 378, 379, 381, 383, 385, 387, 390, 392, 393, 394, 395, 398, 399, 404, 408, 414, 420, 421, 426, 429, 435, 436, 437, 438, 439, 442, 443, 450, 453, 456, 464, 469, 476, 480, 484, 494, 496, 504, 512, 514, 526, 529, 573, 574, 575, 576, 580], "manifest": 388, "manipul": [87, 91, 402, 405, 431, 489, 528], "manner": [442, 443], "manpow": [383, 395], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 385, 390, 400, 407, 465, 516, 524, 576, 577], "manuel": [430, 433, 434], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 87, 90, 91, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 133, 134, 135, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 221, 224, 225, 232, 233, 236, 238, 246, 248, 250, 259, 260, 262, 264, 270, 271, 272, 274, 275, 282, 287, 327, 365, 366, 371, 373, 375, 377, 378, 379, 381, 385, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 405, 410, 414, 418, 419, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 447, 448, 450, 453, 454, 455, 456, 460, 461, 464, 465, 466, 467, 468, 470, 471, 472, 475, 476, 478, 479, 480, 483, 487, 490, 491, 492, 493, 494, 496, 497, 500, 501, 504, 511, 512, 515, 516, 520, 522, 523, 524, 525, 526, 532, 534, 535, 536, 537, 540, 571, 574, 575], "map_": [207, 208, 366, 373], "map_4d": 484, "map_analysi": 397, "map_cent": 274, "map_coord": [83, 152, 163, 166], "map_dataset": [390, 473], "map_dataset_empti": 473, "map_dataset_mak": 473, "map_dataset_on_off": 473, "map_edisp": [111, 116], "map_in": [193, 194, 196, 202, 205, 206], "map_out": [105, 110, 151, 152, 158, 163, 166, 193, 194, 196, 202, 205, 206], "map_result": 457, "map_select": [16, 454, 458, 459, 461, 500], "map_typ": [193, 194, 196, 202, 205, 206, 484, 528], "mapax": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 426, 429, 431, 484], "mapaxi": [19, 20, 26, 102, 105, 109, 110, 111, 112, 113, 114, 116, 123, 125, 127, 134, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 173, 183, 184, 189, 190, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 373, 379, 393, 402, 420, 421, 423, 426, 429, 439, 443, 445, 448, 450, 453, 455, 456, 462, 463, 465, 466, 469, 471, 472, 473, 475, 479, 482, 483, 484, 487, 492, 493, 494, 501, 520, 523, 525, 526, 528, 529], "mapcoord": [83, 152, 163, 166, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 248, 437, 438, 484, 529, 536], "mapdataset": [98, 99, 103, 105, 108, 109, 110, 112, 113, 114, 115, 117, 118, 122, 127, 130, 133, 140, 141, 142, 143, 144, 168, 169, 170, 173, 174, 178, 179, 232, 371, 374, 391, 393, 399, 400, 419, 420, 421, 422, 423, 424, 425, 426, 429, 443, 444, 445, 457, 458, 462, 463, 464, 466, 467, 469, 470, 472, 473, 480, 481, 483, 485, 486, 492, 500, 501, 514, 516, 523, 526, 575, 577, 578], "mapdataseteventsampl": [93, 108, 423, 424, 425, 432, 443, 445, 465, 466], "mapdatasetmak": [163, 171, 180, 391, 423, 426, 429, 432, 440, 463, 465, 466, 469, 473, 482, 483, 493, 500, 501, 516, 523, 526], "mapdatasetmetadata": [102, 105, 405], "mapdatasetoff": 431, "mapdatasetonoff": [98, 102, 109, 110, 118, 122, 140, 168, 174, 178, 423, 424, 426, 429, 442, 443, 459, 473, 483, 512, 526, 577], "mapdatasetsampl": 391, "mapevalu": [389, 390, 422, 423, 426, 429, 440, 441, 442, 444], "mapeventsampl": [421, 422], "mapfit": [389, 390, 419, 438, 439], "mapgeom": [384, 439, 440], "mapmak": [173, 394, 419, 423, 438], "mapmakerob": [422, 423], "mappabl": 402, "mappanelplott": [399, 581], "mapper": 313, "mappingintstrani": [16, 84, 90, 104, 124], "maps_off": 178, "mar": [395, 416, 441], "march": [385, 387, 416, 418, 439], "marcocirelli": 26, "margin": [101, 105, 110, 115, 117, 192, 194, 204, 206, 224, 246, 262, 389, 485, 533, 577], "marion": [419, 438], "mark": [91, 378, 389, 407], "marker": [101, 102, 105, 109, 110, 448, 450, 453, 455, 457, 463, 470, 471, 472, 476, 502], "markerfacecolor": [102, 105, 109, 110], "markers": [101, 102, 105, 109, 110, 489], "markov": 575, "mask": [83, 87, 91, 99, 101, 102, 105, 109, 110, 122, 126, 127, 129, 130, 131, 133, 151, 152, 158, 163, 166, 168, 170, 175, 176, 177, 178, 179, 181, 191, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 215, 217, 224, 246, 262, 390, 406, 423, 425, 426, 427, 429, 432, 438, 440, 441, 442, 443, 445, 447, 448, 450, 461, 463, 483, 486, 490, 493, 496, 512, 523, 525, 528, 575], "mask_1": 488, "mask_2": 488, "mask_bright": 478, "mask_contains_region": 206, "mask_data": 485, "mask_energi": [479, 485], "mask_fit": [101, 102, 105, 109, 110, 115, 117, 390, 423, 440, 455, 459, 461, 473, 479, 481, 485, 489, 512], "mask_fit_imag": [102, 105, 109, 110], "mask_imag": [102, 105, 109, 110], "mask_map": [192, 204, 447, 485, 490], "mask_map_catalog": 485, "mask_nearest_posit": [193, 194, 196, 202, 205, 206], "mask_off": 473, "mask_roi": 478, "mask_saf": [101, 102, 105, 106, 109, 110, 179, 390, 423, 479, 483, 485, 512], "mask_safe_edisp": [102, 105, 109, 110, 445], "mask_safe_imag": [102, 105, 109, 110, 151, 152, 158, 163, 166], "mask_safe_psf": [102, 105, 109, 110], "mask_spac": 479, "mask_valid": 101, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 391, 425, 444, 477, 504, 537], "massdm": [19, 20, 477], "master": [384, 385, 392, 407, 408, 417], "match": [87, 91, 108, 113, 191, 192, 194, 197, 198, 199, 201, 204, 206, 208, 286, 288, 378, 386, 437, 439, 444, 453, 456, 472, 480, 492, 511, 528], "match_by_nam": 199, "math": [233, 377], "mathcal": [481, 512], "mathemat": [487, 489], "mathieu": [429, 432], "mathrm": [19, 20, 23, 102, 109, 153, 477, 481, 512, 577, 579], "mathworld": [332, 333], "matomo": 445, "matplotlib": [19, 20, 26, 66, 67, 83, 129, 147, 150, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 193, 194, 196, 202, 205, 206, 209, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 356, 366, 367, 368, 371, 372, 373, 375, 377, 378, 379, 392, 395, 404, 411, 414, 421, 429, 431, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 508, 509, 510, 516, 518, 519, 520, 522, 525, 533, 535, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 580], "matric": 209, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 111, 116, 150, 151, 152, 155, 209, 210, 211, 215, 224, 246, 286, 288, 371, 395, 396, 406, 439, 440, 443, 445, 481, 482, 512, 514, 520], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 392, 398, 406, 438, 443, 444, 447, 483, 490, 492, 496, 505, 574, 576], "matthew": [385, 435, 437, 438], "matthia": [437, 438], "mattox": 457, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 102, 112, 113, 126, 128, 130, 165, 169, 173, 175, 179, 206, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 273, 274, 275, 333, 386, 394, 401, 406, 414, 425, 426, 427, 429, 431, 443, 445, 449, 450, 453, 454, 455, 456, 458, 459, 461, 462, 463, 464, 467, 469, 470, 471, 472, 473, 475, 476, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 492, 493, 500, 501, 502, 504, 523, 525, 526, 533, 552, 555, 561, 578], "max_ag": [45, 506], "max_column": [87, 91], "max_energi": 476, "max_lin": [87, 91], "max_nit": [133, 445], "max_offset": 394, "max_percentil": 83, "max_radiu": [161, 163, 166, 204, 492], "max_region_numb": [176, 525], "max_width": [87, 91], "maxcal": 211, "maxclust": 303, "maxfev": 481, "maxim": [45, 82, 91, 112, 113, 133, 179, 221, 225, 233, 236, 248, 259, 260, 264, 270, 274, 441, 442, 443, 444, 445, 525], "maxima": [141, 215, 217], "maximilian": [429, 431, 432, 441, 442, 443, 444, 445], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 123, 125, 128, 163, 166, 168, 176, 179, 185, 188, 192, 198, 203, 204, 214, 216, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 286, 288, 332, 334, 337, 375, 381, 384, 392, 431, 451, 457, 476, 480, 483, 484, 489, 493, 501, 506, 514, 525, 552, 574, 575, 578], "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 378, 386, 388, 389, 400], "mb": [191, 192, 201, 204, 386, 410, 412, 447, 452, 460, 468, 474, 490, 491, 492, 494, 495, 497, 499, 503, 531, 541, 562, 572], "mbox": [102, 109], "mc": 396, "mc_id": [83, 388, 391, 431, 465, 491], "mcerp": 396, "mckee": [53, 444], "mcmc": [396, 398, 419, 424, 426, 552, 575], "mcmc_sampl": [398, 421], "md": [381, 398, 404], "mdm": [26, 477], "mean": [42, 68, 87, 91, 96, 101, 102, 127, 129, 150, 151, 152, 155, 158, 163, 166, 234, 238, 273, 287, 291, 304, 323, 378, 379, 381, 383, 385, 391, 392, 394, 395, 401, 406, 411, 414, 426, 435, 453, 456, 457, 466, 476, 480, 481, 483, 487, 488, 489, 492, 493, 502, 534, 549, 576, 577], "meaning": 487, "meant": [384, 443, 448, 456, 458, 461, 463, 469, 472, 491], "measur": [27, 67, 101, 105, 110, 129, 134, 143, 198, 278, 286, 288, 291, 292, 293, 294, 296, 298, 299, 301, 302, 384, 392, 397, 402, 408, 417, 422, 430, 436, 438, 449, 450, 453, 455, 456, 459, 462, 464, 467, 469, 470, 471, 476, 478, 492, 501, 502, 514, 521, 523, 526, 574, 575, 578, 579], "mechan": [386, 396, 402, 405], "media": 404, "median": [83, 163, 166, 414, 473, 488, 492], "median_zenith": 488, "medium": [45, 52, 378, 387], "meeseeksdev": 378, "meeseeksmachin": 378, "meet": [224, 246, 305, 384, 386, 398, 403, 408], "megabyt": [191, 192, 201, 204], "mem": [447, 452, 460, 468, 474, 490, 495, 497, 499, 503, 531, 541, 562, 572], "member": [83, 379, 383, 392, 404, 405, 437, 443, 480, 491, 494], "memo": [150, 198], "memori": [87, 88, 91, 92, 100, 102, 103, 105, 108, 109, 110, 191, 192, 201, 204, 270, 272, 274, 356, 378, 388, 390, 391, 394, 400, 402, 423, 429, 444, 456, 469, 516], "memoryobserv": 88, "mender": [442, 443, 444], "mention": [59, 145, 378, 379, 381, 385, 386, 390, 392, 395, 397, 398, 403, 404, 407, 408, 482, 486, 487, 489, 504, 575], "mentor": [381, 398], "mere": 388, "merg": [67, 86, 87, 91, 195, 198, 224, 246, 345, 378, 381, 382, 383, 384, 391, 392, 393, 397, 398, 403, 404, 407, 408, 418, 419, 420, 421, 422, 423, 424, 425, 426, 434, 435, 436, 437, 438, 439], "merge_equ": 86, "mergesort": [87, 91], "mess": 379, "messag": [101, 210, 212, 213, 381, 392, 394, 401, 427, 442, 450, 451, 453, 454, 455, 461, 462, 463, 472, 473, 475, 480, 481, 492, 500, 501, 516, 576], "met": [86, 359, 443, 471, 475, 575], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 102, 103, 105, 107, 108, 109, 110, 123, 125, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 180, 193, 194, 196, 202, 205, 206, 270, 271, 274, 275, 315, 359, 360, 361, 362, 388, 391, 392, 393, 402, 405, 425, 426, 437, 441, 443, 444, 465, 473, 484, 488, 491, 493, 513, 514, 571], "meta_t": [100, 101, 102, 105, 109, 110, 173, 180, 402, 405, 426, 450, 456, 483, 512], "metaattribut": [87, 91], "metadata": [16, 83, 84, 85, 87, 88, 90, 91, 104, 106, 123, 124, 125, 147, 148, 149, 153, 154, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206, 360, 382, 384, 395, 444, 454, 458, 459, 461, 465, 487, 500, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "metadata_fits_export_kei": [84, 90, 104, 124], "metadatabas": 405, "metadatabasemodel": 405, "metapackag": 395, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 286, 288, 294, 296, 303, 313, 317, 321, 325, 326, 327, 352, 365, 367, 377, 378, 381, 384, 387, 388, 389, 392, 393, 394, 396, 397, 398, 400, 402, 404, 405, 410, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 448, 450, 451, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 469, 471, 473, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 511, 513, 515, 516, 520, 523, 525, 526, 527, 529, 550, 564, 573, 574, 575, 576, 578], "method_kwarg": [325, 326], "methoda": 421, "metric": 303, "mev": [74, 83, 147, 148, 149, 153, 448, 449, 456, 458, 461, 463, 469, 472, 473, 478, 482, 484, 487, 491, 492, 502, 561], "meval": 535, "mexico": 493, "meyer": [243, 278, 462, 575], "meyer2010": 575, "mgtime": 393, "michael": [442, 444], "michel": 445, "mid": [112, 432, 443, 491], "middl": [367, 394], "midli": 453, "midpoint": 88, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 181, 198, 211, 378, 383, 389, 390, 392, 395, 397, 402, 404, 405, 410, 412, 419, 453, 471, 473, 479, 483, 485, 492, 493, 496, 502, 504, 512, 516, 523, 529, 576, 578], "migra": [102, 105, 109, 110, 152, 155, 160, 184, 394, 465, 466, 482, 521], "migra_axi": [102, 105, 109, 110, 114, 152, 154, 155, 465, 466, 482, 483], "migrad": [101, 211, 450, 451, 453, 454, 455, 461, 462, 463, 473, 475, 480, 481, 492, 500, 501], "migrad_opt": [211, 481], "migrat": [102, 105, 109, 110, 114, 154, 155, 160, 387, 422, 429, 438, 465, 483, 520, 521], "milagro": [97, 369], "mileston": [387, 407], "milki": [33, 38, 417, 506], "miller": [87, 91], "million": [378, 405], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 102, 126, 128, 130, 145, 173, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 273, 274, 275, 292, 333, 393, 394, 401, 406, 414, 429, 437, 445, 449, 450, 453, 454, 455, 456, 458, 459, 461, 462, 463, 464, 467, 469, 470, 471, 472, 473, 475, 476, 478, 479, 481, 482, 483, 484, 487, 488, 489, 492, 500, 501, 502, 504, 525, 552, 555, 561], "min_count": 170, "min_dist": [141, 142, 176, 457, 463, 525], "min_distance_input": [176, 525], "min_energi": 476, "min_npix": [151, 152, 158, 163, 166, 204, 206], "min_npred_background": 170, "min_pix": 445, "min_signific": 393, "min_significance_lc": 393, "minaya": 439, "mind": [381, 398, 469, 481], "mini": 398, "miniconda": 409, "minim": [19, 20, 26, 112, 113, 132, 193, 194, 196, 201, 202, 205, 206, 207, 211, 218, 219, 221, 222, 225, 226, 228, 229, 230, 233, 234, 236, 240, 241, 243, 247, 248, 249, 250, 251, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 284, 390, 393, 401, 405, 431, 441, 443, 448, 465, 479, 481, 489, 501, 516, 525, 526, 529, 574, 579], "minima": [215, 217, 489], "minimis": [472, 488], "minimmum": [151, 152, 158, 163, 166, 204, 206], "minimum": [19, 20, 26, 47, 83, 100, 122, 123, 125, 128, 132, 137, 141, 142, 145, 146, 168, 170, 176, 198, 201, 203, 213, 214, 216, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 273, 274, 275, 280, 285, 289, 292, 305, 332, 334, 337, 373, 395, 431, 437, 453, 457, 465, 480, 481, 484, 489, 492, 514, 516, 525, 552, 579], "mino": [211, 481], "minor": [378, 383, 398, 401, 403, 428, 441, 534, 535], "minos_contour": [421, 439], "minu": [155, 473], "minuit": [101, 120, 211, 212, 213, 389, 396, 423, 438, 439, 443, 450, 451, 453, 454, 455, 461, 462, 463, 473, 475, 480, 481, 492, 500, 501], "minuit_opt": 481, "minut": [398, 408, 437, 453, 457, 459, 461, 463, 464, 465, 467, 469, 471, 472, 475, 477, 479, 481, 483, 486, 489, 500], "mireia": 440, "mirror": 190, "misc": [417, 430, 434, 435, 436], "miss": [82, 87, 91, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 378, 381, 386, 387, 388, 389, 392, 398, 399, 402, 427, 429, 431, 437, 442, 445, 484], "mission": [83, 443, 575], "mistak": [383, 403], "mix": [377, 378, 394, 479, 484], "mixin": [87, 91], "mjd": [86, 94, 125, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 360, 362, 379, 442, 443, 457, 465, 466, 470, 471, 472, 475, 476, 484, 487, 513, 564, 565, 566, 567, 568, 569, 570, 571, 580], "mjdref": [457, 484], "mjdreff": [94, 359, 362, 466], "mjdrefi": [94, 359, 362, 466], "mkdir": [394, 453, 454, 461, 462, 465, 500, 501], "mkn": [502, 575], "mkn_421_3fhl": 502, "mncontour": 211, "mnra": [137, 301], "mnt": 440, "mock": 464, "mock_dl4": 464, "mode": [16, 84, 85, 87, 90, 91, 94, 102, 104, 105, 109, 124, 128, 151, 152, 158, 163, 166, 169, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 272, 405, 424, 437, 440, 444, 472], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 140, 143, 144, 147, 153, 154, 161, 162, 163, 164, 166, 170, 173, 186, 193, 194, 196, 202, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 297, 300, 302, 374, 377, 378, 379, 382, 383, 384, 390, 391, 393, 394, 396, 398, 399, 402, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 451, 456, 457, 459, 464, 467, 469, 473, 480, 482, 483, 484, 485, 490, 492, 493, 496, 504, 505, 511, 512, 514, 516, 517, 521, 523, 524, 531, 541, 562, 572, 574, 575, 578, 579], "model1": [219, 542, 544, 548, 551, 553, 556], "model2": [219, 449, 472, 542, 544, 548, 551, 553, 556], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 454], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [487, 544], "model_best": 449, "model_best_joint": 453, "model_best_stack": 453, "model_bin_": 475, "model_bin_0": 475, "model_bkg": 479, "model_computed_field": [16, 84, 90, 104, 124], "model_config": [16, 84, 90, 104, 124, 458, 500], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 104, 124], "model_copi": [16, 84, 90, 104, 124, 487], "model_dump": [16, 84, 90, 104, 124], "model_dump_json": [16, 84, 90, 104, 124], "model_extra": [16, 84, 90, 104, 124], "model_field": [16, 84, 90, 104, 124], "model_fields_set": [16, 84, 90, 104, 124], "model_fit": 472, "model_in_bin": 475, "model_joint": 461, "model_json_schema": [16, 84, 90, 104, 124], "model_manag": [447, 486, 490], "model_nam": [102, 105, 109, 110, 224, 246, 374, 479], "model_parametrized_nam": [16, 84, 90, 104, 124], "model_plot": 464, "model_post_init": [16, 84, 90, 104, 124], "model_prior": 489, "model_read": 489, "model_rebuild": [16, 84, 90, 104, 124], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [456, 469, 472], "model_spectrum": 487, "model_str": 454, "model_typ": [224, 232, 244, 246, 262, 272, 284, 401, 486], "model_valid": [16, 84, 90, 104, 124], "model_validate_json": [16, 84, 90, 104, 124], "model_validate_str": [16, 84, 90, 104, 124], "model_weak": 489, "model_weak_prior": 489, "model_without_nam": 487, "modelbas": [232, 255, 262, 264, 265, 272, 276, 406], "modeldm": [19, 20], "modelevalu": 389, "modeling_2d": [447, 458, 460], "modelmetadata": 405, "modelmodel_dump": [16, 84, 90, 104, 124], "modelmodel_dump_json": [16, 84, 90, 104, 124], "models_3fhl": 486, "models_4fgl_roi": 478, "models_as_dict": [16, 84, 90, 104, 124], "models_diffus": 465, "models_fil": [16, 454, 458, 459, 461, 500], "models_fit": 469, "models_gc": 486, "models_gp": 491, "models_joint": 461, "models_or": 486, "models_read": 487, "models_select": 486, "models_stack": 461, "models_yaml": 487, "modelsmetadata": 405, "modern": [87, 91, 396], "modernis": [395, 423], "modest": [378, 534], "modif": [16, 84, 87, 90, 91, 104, 124, 378, 381, 400, 407, 440], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 102, 109, 125, 126, 127, 130, 133, 169, 211, 325, 350, 375, 388, 390, 394, 400, 404, 405, 424, 426, 427, 429, 431, 439, 442, 443, 445, 449, 454, 466, 483, 485, 489, 493, 500, 514, 529, 580], "modul": [6, 261, 378, 379, 383, 387, 394, 399, 417, 419, 425, 437, 472, 478, 480, 483, 486, 504, 505, 506, 507, 552, 569, 580], "modular": 384, "mohanti": 101, "mohrmann": [394, 418, 419, 420, 436, 437, 438, 441, 443, 445, 575], "mohrmann2019": 575, "moment": [15, 51, 54, 86, 95, 262, 354, 384, 392, 394, 395, 398, 403, 404, 482, 484, 521], "moncar": [211, 481], "monitor": [391, 491, 516], "monkei": 378, "mono": 386, "monoton": 198, "mont": [396, 521, 575], "montecarlo": [103, 108, 211], "month": [78, 381, 387, 392, 395, 397, 398, 403, 407, 411, 417, 418, 419, 420, 421, 430, 433, 434, 435, 436, 437, 438, 439], "monthli": [387, 405, 410, 439], "moor": 24, "morcuend": [439, 442, 444, 445], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 101, 102, 105, 109, 110, 134, 141, 143, 150, 179, 193, 194, 196, 205, 206, 218, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 253, 254, 259, 260, 261, 263, 266, 267, 268, 274, 275, 289, 295, 313, 353, 378, 379, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409, 410, 411, 414, 423, 424, 425, 426, 429, 436, 438, 439, 443, 445, 449, 450, 453, 455, 457, 459, 461, 465, 466, 472, 475, 476, 477, 479, 481, 483, 484, 485, 486, 487, 488, 489, 493, 494, 496, 502, 512, 513, 514, 516, 525, 526, 528, 529, 534, 573, 574, 576, 578, 580], "moreov": [394, 478, 483, 512], "morpholog": [120, 391, 447, 468, 496], "morphologi": [50, 52, 120, 389, 391, 401, 417, 434, 436, 450, 458, 464, 465, 466, 469, 478, 483, 530], "mosaic": 384, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 118, 125, 377, 378, 379, 381, 383, 384, 385, 386, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 408, 410, 411, 429, 436, 437, 439, 440, 443, 444, 458, 459, 467, 470, 472, 478, 480, 481, 482, 483, 484, 485, 491, 492, 496, 502, 504, 514, 515, 516, 521, 523, 529, 573, 575, 576, 579], "mostli": [56, 69, 305, 378, 379, 384, 385, 386, 387, 392, 394, 397, 398, 399, 402, 403, 405, 407, 408, 429, 437, 478, 483, 494, 502, 578, 580], "motion": [45, 309], "motiv": [179, 383, 385, 386, 392, 395, 397, 407, 487, 516], "move": [284, 383, 384, 385, 386, 389, 392, 397, 398, 399, 402, 407, 413, 419, 420, 422, 423, 424, 425, 429, 430, 434, 435, 437, 438, 439, 440, 456], "move_axi": 443, "movement": 404, "mpatch": 467, "mpg": 67, "mpi": 67, "mpl": 378, "mpl_check_plot": 378, "mpl_kwarg": [453, 463, 467], "mpl_normal": [368, 369], "mpl_plot_check": 378, "mpl_style": 437, "msg": [448, 456, 458, 461, 463, 469, 472, 491], "msh": [459, 478, 483], "msh15": 494, "mst": 491, "mu": [26, 286, 288, 289, 371, 406, 449, 477, 489, 520, 521, 578], "mu_": [289, 295, 577, 578, 579], "mu_background": 576, "mu_bkg": [105, 110, 286, 299, 302, 414, 576, 578], "mu_off": 578, "mu_on": [289, 295, 578], "mu_sig": [288, 299, 302, 459, 577, 578], "mu_x": 578, "much": [194, 378, 384, 389, 392, 394, 397, 398, 422, 429, 456, 461, 467, 473, 489, 492, 502, 535], "mul": [26, 449, 477, 487, 542, 548, 551, 553, 556, 561], "mulitpli": 255, "multi": [87, 91, 192, 204, 387, 392, 406, 423, 426, 430, 437, 447, 451, 457, 468, 479, 481, 482, 487, 488, 492, 496, 514, 516, 528, 574, 575], "multicompon": 445, "multidimension": [384, 394, 406, 444, 480, 496, 521, 574], "multinorm": 396, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 101, 102, 105, 108, 109, 110, 113, 115, 117, 133, 141, 167, 193, 194, 196, 202, 205, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 378, 379, 384, 387, 390, 391, 392, 394, 396, 399, 400, 402, 406, 410, 419, 426, 427, 429, 437, 443, 444, 445, 455, 461, 471, 478, 479, 480, 483, 484, 485, 487, 492, 514, 528, 552, 561, 573, 574, 575, 576, 581], "multipli": [19, 20, 26, 125, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 233, 234, 236, 238, 240, 241, 243, 246, 247, 248, 249, 251, 252, 253, 258, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 282, 287, 297, 300, 305, 449, 457, 459, 473, 477, 487, 542, 578], "multiprocess": [13, 93, 126, 127, 130, 133, 169, 320, 325, 326, 423, 443, 444], "multithread": 13, "multivari": 396, "multivariategaussianprior": 406, "multiwavelength": 226, "muon": 488, "muoneff": 488, "mur": [26, 477], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 88, 91, 101, 102, 105, 106, 110, 111, 116, 125, 130, 133, 134, 141, 142, 143, 161, 169, 173, 175, 180, 187, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 293, 294, 305, 323, 373, 378, 383, 389, 390, 393, 402, 403, 404, 405, 448, 453, 458, 471, 479, 480, 483, 485, 486, 487, 491, 492, 501, 502, 516, 528], "mutablemap": 200, "mutablesequ": [92, 100, 246], "mutipl": 410, "mutltipl": 381, "my": [378, 400, 401, 409, 465, 466, 479, 487], "my_custom_model": 487, "my_flux_map": 402, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 400, "mybind": [408, 437], "myconfig": [11, 576], "mycustomgaussianmodel": [401, 487], "mycustomprior": 489, "mycustomspectralmodel": [257, 487], "n": [19, 20, 51, 82, 87, 91, 123, 125, 191, 192, 193, 194, 196, 198, 199, 202, 204, 205, 206, 214, 216, 277, 284, 378, 381, 392, 395, 409, 411, 435, 469, 471, 475, 477, 478, 480, 481, 484, 486, 489, 491, 492, 493, 494, 499, 521, 528, 529, 531, 534, 535, 575, 577, 579], "n_": [102, 109, 289, 295, 512, 577, 578, 579], "n_0": [234, 549], "n_bad": 492, "n_bin": 479, "n_bkg": [286, 288, 578], "n_dof": [123, 125, 514], "n_event": [193, 194, 196, 202, 205, 206, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 391], "n_event_bunch": [103, 108], "n_events_bkg": 391, "n_fit_bin": [461, 472, 479, 486], "n_free_paramet": 284, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 509, 510], "n_job": [16, 93, 126, 127, 130, 133, 169, 325, 443, 454, 457, 458, 459, 461, 467, 471, 483, 500], "n_jobs_default": [93, 126, 127, 130, 133, 169], "n_model": [72, 76], "n_ob": [456, 465, 472], "n_observ": 576, "n_off": [105, 110, 288, 298, 299, 302, 459, 577, 578], "n_off_posit": 455, "n_off_region": [181, 455], "n_on": [286, 288, 289, 295, 298, 299, 302, 414, 459, 576, 577, 578], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 218, 219, 222, 223, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 247, 249, 251, 252, 253, 254, 258, 261, 263, 265, 266, 267, 268, 271, 273, 275, 276, 406, 570], "n_scale": 118, "n_sig": [286, 288, 473, 578], "n_sig_matching_signific": [286, 288], "n_sigma": [71, 74, 75, 78, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 284, 286, 288, 448, 457, 467, 471, 478, 479, 480, 500, 502, 514], "n_sigma_sensit": [122, 123, 124, 125], "n_sigma_ul": [71, 74, 75, 78, 122, 123, 124, 125, 126, 127, 130, 131, 133, 457, 467, 470, 471, 478, 479, 480, 500, 502, 514], "n_sourc": [45, 506], "n_spatial_ax": 197, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": [471, 475], "nachiketa": [435, 436], "naima": [247, 377, 395, 396, 397, 398, 401, 420, 447, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 516, 530, 561, 562], "naimamodel": [420, 423, 425], "naimaspectralmodel": [257, 401, 429, 487, 516, 552], "nakashima": 421, "nakuxvzk": 475, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 115, 116, 117, 123, 124, 125, 126, 127, 130, 131, 133, 137, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 173, 174, 183, 184, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 303, 304, 326, 357, 358, 373, 379, 381, 384, 387, 388, 390, 391, 392, 393, 396, 397, 400, 401, 402, 404, 405, 406, 407, 410, 412, 419, 420, 421, 422, 423, 424, 425, 426, 429, 438, 440, 441, 443, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 504, 514, 516, 520, 523, 525, 526, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 578], "name1": 481, "name2": 481, "name_err": [126, 127, 130, 131], "name_scan": [126, 127, 130, 131], "name_substr": [224, 246, 486], "name_ul": [126, 127, 130, 131], "namedtupl": 378, "nameerror": 378, "namespac": [6, 16, 84, 90, 104, 124, 378, 397, 399, 422, 425, 435, 487, 505, 580], "namibia": 494, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 102, 123, 125, 136, 173, 191, 192, 193, 194, 196, 202, 205, 206, 214, 216, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 378, 401, 406, 445, 449, 450, 453, 454, 455, 456, 458, 459, 461, 462, 467, 469, 470, 471, 472, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 500, 501, 502, 516, 552, 561], "nan_to_num": [100, 102, 105, 109, 110, 151, 152, 158, 163, 166, 194, 202, 206, 272], "nanograv": 516, "nansum": [193, 194, 196, 205, 206], "nasa": [58, 60, 61, 62, 64, 65, 150, 198, 398, 555], "nativ": [87, 91, 199, 390, 395, 429, 484], "natur": [87, 91, 378, 384, 401, 404, 487, 550], "nauroi": [302, 575], "naurois2012": 575, "navarro": 504, "navi": 449, "navig": [437, 439], "navkxa1j": 487, "naxi": 484, "naxis1": 484, "naxis2": 484, "naxis3": 484, "naxis4": 484, "nbin": [16, 111, 116, 127, 153, 155, 161, 163, 195, 198, 203, 206, 337, 338, 394, 448, 453, 454, 455, 458, 459, 461, 462, 463, 465, 466, 467, 470, 471, 473, 475, 479, 482, 483, 484, 487, 492, 493, 494, 500, 520, 523, 525, 526, 529], "nbin_per_decad": 198, "nbstripout": 386, "nchunk": 287, "ncol": [147, 148, 193, 194, 196, 202, 205, 206, 371, 375, 450, 453, 457, 459, 461, 463, 473, 479, 481, 484, 485, 525, 542], "ncp": 476, "nd": [193, 194, 196, 202, 205, 206, 270, 271, 399, 484, 529], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 91, 92, 101, 118, 147, 148, 149, 150, 151, 154, 155, 157, 160, 161, 162, 163, 164, 166, 179, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 214, 215, 216, 217, 224, 248, 249, 275, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 301, 302, 305, 316, 317, 318, 327, 332, 334, 367, 371, 372, 378, 479, 484, 502, 528, 529], "nddata": [420, 423], "nddataarrai": [421, 435, 436], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 280], "ndepft9": 475, "ndim": [102, 109, 111, 116, 148, 150, 153, 192, 199, 204, 455, 458, 463, 467, 479, 480, 482, 483, 484, 491, 492, 502, 514, 529], "ndimag": [206, 392], "ndmap": 480, "ndmin": 305, "ne": 390, "nearest": [26, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 193, 194, 196, 198, 202, 205, 206, 317, 431, 438, 440, 484, 514, 516, 528], "nearli": [378, 429, 450], "nebula": [50, 278, 284, 423, 453, 454, 455, 459, 462, 463, 464, 470, 481, 485, 487, 489, 492, 493, 494, 500, 501, 502, 507, 529, 575], "necess": [402, 489], "necessari": [16, 84, 90, 101, 104, 124, 381, 388, 393, 404, 431, 450, 453, 455, 456, 459, 465, 466, 469, 471, 472, 480, 483, 484, 486, 487, 501, 512, 513, 516], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 393, 458], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 101, 102, 104, 105, 109, 110, 122, 124, 125, 151, 152, 163, 165, 166, 201, 277, 278, 305, 377, 378, 379, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 408, 409, 414, 418, 419, 420, 437, 439, 444, 449, 450, 454, 456, 457, 458, 459, 463, 465, 466, 471, 472, 475, 476, 481, 482, 484, 485, 486, 487, 488, 491, 493, 500, 502, 512, 525, 527, 528, 576, 580], "need_upd": 429, "neg": [19, 20, 26, 87, 91, 123, 125, 126, 127, 130, 131, 133, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 274, 275, 286, 288, 379, 426, 444, 445, 489, 514, 578, 579], "neglect": [128, 179, 448, 483, 514, 579], "neighbor": [154, 162, 164, 431, 438], "neighbour": [317, 537], "neither": [96, 179, 395, 403], "neldermead": 211, "nep": [383, 403], "neraest": 194, "nest": [15, 192, 193, 194, 247, 284, 305, 345, 443, 492, 527, 578], "nested_model": 247, "net": [26, 87, 91, 453, 516], "neutrino": [52, 378], "neutron": 36, "never": [375, 377, 378, 381, 384, 388, 392, 400, 493], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 101, 102, 104, 105, 109, 110, 123, 124, 125, 126, 130, 133, 136, 145, 147, 148, 149, 150, 153, 155, 157, 160, 165, 176, 177, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 224, 246, 262, 272, 296, 305, 329, 356, 363, 381, 383, 384, 385, 386, 387, 388, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 430, 433, 461, 475, 476, 478, 479, 484, 486, 487, 513, 514, 516, 561, 575], "new_attribut": 378, "new_axi": 145, "new_dataset_nam": [224, 246], "new_datasets_nam": [19, 20, 26, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276], "new_ev": 516, "new_flux_map": 402, "new_funct": 378, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 561, "new_nam": [87, 91, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206], "new_ob": [88, 516], "new_observ": 92, "newaxi": 528, "newer": [395, 408, 419, 438], "newli": [423, 424, 425], "next": [87, 91, 102, 378, 379, 383, 394, 398, 399, 403, 406, 407, 435, 436, 448, 461, 464, 465, 467, 469, 478, 479, 480, 483, 484, 487, 488, 489, 492], "nfcn": 481, "nfev": [101, 211, 212, 213, 450, 451, 453, 454, 455, 461, 462, 463, 473, 475, 480, 481, 492, 500, 501], "nfw": [25, 27, 504], "nfwprofil": 477, "nhxzbm": 475, "ni": 378, "nice": [378, 383, 389, 395, 397, 405, 421, 429, 457, 461, 478, 576], "nicer": [378, 414, 502], "nieto": [426, 429, 431, 432, 440, 442, 443, 444, 445], "nieva": 440, "night": [393, 471], "nightli": [410, 470], "nightwise_lc": 470, "nigro": [426, 429, 431, 437, 438, 440, 443], "niter": [123, 125, 133, 457], "nmcid": 432, "nn": 493, "noah": [406, 444], "node": [19, 20, 26, 163, 166, 195, 198, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 248, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 420, 481, 482, 484, 491, 492, 536, 553], "node_typ": [155, 195, 198, 203, 465, 466, 482, 492], "noeth": [426, 427], "nois": [287, 293, 396, 575], "noisi": 491, "non": [16, 84, 87, 90, 91, 100, 102, 104, 105, 109, 110, 115, 117, 123, 124, 125, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 175, 179, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 272, 305, 368, 369, 371, 373, 384, 389, 392, 396, 398, 399, 405, 419, 423, 424, 425, 429, 437, 440, 441, 443, 444, 445, 450, 475, 492, 496, 512, 516, 527, 528, 552, 575], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 286, 287, 288, 302, 303, 305, 308, 313, 317, 325, 326, 327, 329, 332, 333, 334, 335, 344, 347, 353, 361, 365, 366, 367, 371, 372, 373, 374, 375, 378, 390, 392, 395, 402, 405, 406, 431, 442, 443, 445, 449, 450, 451, 453, 454, 456, 457, 461, 462, 463, 465, 466, 467, 469, 471, 472, 473, 475, 477, 478, 479, 480, 483, 484, 486, 487, 489, 492, 500, 504, 512, 528, 533, 534, 535, 576], "nonetyp": [84, 90, 104, 124], "nonposit": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "nonposx": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 429], "nonstopmod": 379, "nonzero": 39, "nooverlaperror": 442, "noqa": [19, 20, 150, 186, 197, 198, 204, 226, 375], "nor": [96, 179, 388, 399, 403, 407], "norm": [19, 20, 26, 122, 123, 125, 126, 127, 130, 133, 135, 142, 144, 170, 218, 219, 222, 223, 226, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 243, 247, 248, 249, 251, 252, 253, 254, 258, 261, 263, 265, 266, 267, 268, 271, 273, 275, 276, 371, 389, 400, 402, 406, 423, 424, 426, 429, 444, 445, 447, 453, 457, 458, 459, 461, 462, 464, 465, 466, 467, 469, 471, 472, 473, 477, 478, 479, 480, 481, 492, 500, 501, 502, 504, 514, 516, 523, 530, 535, 541, 542, 549, 561, 562, 570, 578], "norm_0": [536, 553], "norm_1": [536, 553], "norm_2": [536, 553], "norm_3": [536, 553], "norm_4": 553, "norm_5": 553, "norm_err": [122, 123, 125, 127, 133, 142, 402, 457, 467, 471, 479, 480, 514], "norm_errn": [123, 125, 471, 478, 480, 502, 514], "norm_errp": [123, 125, 471, 478, 480, 502, 514], "norm_only_chang": 441, "norm_prior": 406, "norm_scan": [123, 402, 453, 454, 480, 514], "norm_sensit": [123, 125], "norm_ul": [123, 125, 402, 467, 471, 478, 479, 480, 502, 514], "norma": [33, 38], "normal": [42, 101, 102, 105, 109, 110, 126, 127, 128, 130, 140, 147, 148, 149, 150, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 170, 193, 194, 196, 202, 203, 205, 206, 232, 248, 249, 252, 272, 274, 277, 305, 368, 369, 378, 379, 383, 384, 388, 389, 392, 396, 402, 418, 422, 431, 445, 449, 459, 465, 470, 471, 473, 483, 484, 485, 486, 487, 492, 501, 502, 528, 533, 534, 535, 538, 539, 540, 561, 577, 578], "normalis": [67, 80, 122, 123, 125, 130, 147, 148, 149, 150, 153, 155, 157, 160, 161, 165, 170, 190, 193, 194, 196, 202, 205, 206, 248, 249, 262, 376, 454, 457, 458, 459, 472, 480, 485, 486, 487, 492, 500], "normed_templ": 487, "normspectralmodel": [224, 246, 401, 426, 442, 444, 487, 523], "north": [225, 233, 236, 533], "notat": [426, 518, 520, 526, 579], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 101, 102, 103, 104, 105, 108, 109, 110, 118, 122, 124, 125, 130, 133, 150, 155, 163, 165, 175, 186, 204, 208, 211, 214, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 273, 274, 275, 293, 294, 305, 326, 353, 369, 375, 377, 380, 381, 383, 386, 391, 392, 395, 398, 402, 403, 404, 406, 407, 408, 411, 417, 419, 439, 441, 443, 448, 449, 450, 454, 455, 457, 458, 461, 464, 466, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 512, 514, 516, 523, 528, 529, 538, 539, 550, 578, 579, 580], "notebook": [87, 91, 342, 381, 382, 387, 388, 392, 393, 394, 395, 396, 398, 408, 410, 411, 412, 415, 418, 419, 420, 421, 423, 424, 425, 427, 429, 431, 435, 436, 437, 438, 439, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 515, 516, 517, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 576], "noth": [329, 395, 489], "notic": [384, 481, 496], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [385, 390, 395, 396, 398, 402, 415, 416, 440], "novemb": [387, 416, 426, 427, 428, 429], "now": [16, 82, 84, 88, 90, 99, 104, 123, 124, 125, 203, 247, 378, 381, 383, 384, 385, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 402, 404, 405, 406, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 453, 454, 455, 456, 458, 459, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 479, 481, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 513, 514, 525, 563, 567, 568, 569, 576, 578, 579, 580], "np": [83, 87, 91, 102, 105, 109, 110, 111, 116, 118, 122, 125, 133, 152, 193, 194, 196, 202, 205, 206, 211, 277, 378, 379, 389, 390, 393, 401, 402, 406, 414, 440, 445, 448, 456, 457, 459, 465, 467, 469, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 508, 509, 510, 514, 516, 523, 528, 529, 533, 534, 536, 561, 569, 576], "npanel": 365, "npix": [192, 201, 204, 205, 206, 453, 463, 482, 492, 525, 529, 532, 536], "npix_max": 192, "npoint": [287, 481], "npred": [102, 105, 109, 110, 122, 123, 125, 126, 127, 130, 131, 133, 142, 272, 290, 389, 390, 391, 400, 402, 417, 419, 426, 429, 435, 437, 445, 457, 465, 467, 471, 478, 479, 480, 489, 492, 512, 514, 578], "npred_background": [102, 105, 109, 110, 123, 125, 426, 455, 456, 467, 479, 514, 578], "npred_background_min": 146, "npred_excess": [122, 123, 125, 127, 133, 135, 142, 144, 457, 459, 467, 471, 473, 480, 514], "npred_excess_err": [123, 125], "npred_excess_errn": [123, 125], "npred_excess_errp": [123, 125], "npred_excess_ref": [123, 125], "npred_excess_ul": [123, 125], "npred_min": 146, "npred_off": [105, 110, 578], "npred_sig": [102, 105, 109, 110, 390], "npred_sign": [102, 105, 109, 110, 374, 429, 443, 479, 578], "npred_signal_min": 146, "npred_sourc": 479, "nrow": [450, 453, 481, 542], "nside": [192, 193, 194, 440, 492, 527], "nside2resol": 194, "nside_til": [192, 194], "nsou": 457, "nstep": 393, "nu": [19, 26], "nu_e": [26, 477], "nu_mu": [26, 477], "nu_tau": [26, 477], "nuisanc": [453, 481, 575, 579], "null": [123, 125, 126, 127, 130, 131, 284, 286, 288, 445, 454, 458, 459, 461, 464, 480, 487, 500, 514, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 578], "null_valu": [131, 284, 467], "nullabl": [87, 91], "num": 83, "numba": 395, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 102, 103, 105, 108, 109, 110, 112, 113, 118, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 169, 170, 173, 176, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 273, 274, 275, 276, 280, 284, 286, 287, 288, 301, 305, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338, 365, 371, 382, 383, 384, 387, 389, 390, 391, 392, 393, 397, 399, 402, 404, 405, 407, 414, 419, 429, 431, 432, 433, 438, 439, 440, 443, 444, 445, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 483, 484, 485, 487, 488, 491, 492, 493, 494, 500, 501, 502, 506, 512, 514, 516, 523, 525, 528, 529, 575, 576, 577, 578, 579], "number_of_column": [87, 91], "number_param": 209, "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 87, 91, 125, 198, 214, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 273, 274, 275, 276, 305, 377, 378, 391, 396, 411, 429, 448, 456, 458, 461, 463, 469, 472, 484, 491], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 101, 111, 116, 118, 125, 147, 148, 149, 150, 152, 153, 154, 155, 157, 160, 161, 162, 164, 165, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 208, 209, 211, 214, 215, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 266, 267, 268, 273, 274, 286, 288, 305, 329, 334, 372, 377, 378, 379, 381, 385, 389, 391, 395, 396, 397, 404, 406, 414, 415, 422, 423, 426, 434, 435, 436, 438, 440, 441, 442, 444, 445, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 500, 501, 502, 508, 509, 510, 514, 516, 528, 529, 533, 534, 536, 561, 569], "numpoint": [211, 481], "numpy121": 381, "nupeak_ob": 502, "nutshel": 580, "nyg95": 483, "n\u00f6the": [429, 431, 432], "o": [67, 82, 87, 91, 101, 200, 378, 387, 392, 395, 399, 402, 409, 410, 412, 421, 429, 432, 435, 436, 437, 443, 448, 450, 453, 457, 463, 470, 471, 472, 475, 476, 484, 488, 489, 491, 516, 575, 576], "ob": [40, 82, 83, 88, 89, 91, 92, 96, 163, 173, 303, 304, 390, 391, 394, 395, 400, 414, 432, 433, 442, 448, 450, 453, 456, 457, 463, 465, 469, 471, 472, 473, 475, 483, 488, 491, 492, 493, 494, 498, 501, 513, 516, 521, 523, 525, 526], "obei": 528, "obj": [16, 84, 90, 104, 124, 455, 475], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 101, 102, 103, 104, 105, 109, 110, 123, 124, 125, 128, 129, 130, 136, 137, 138, 139, 142, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 177, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 286, 288, 305, 309, 313, 314, 317, 325, 327, 329, 335, 338, 352, 353, 354, 355, 360, 365, 371, 373, 374, 375, 384, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 402, 404, 405, 410, 414, 420, 421, 423, 424, 425, 426, 429, 431, 436, 437, 438, 440, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 462, 464, 467, 469, 470, 471, 472, 475, 476, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 506, 511, 512, 513, 514, 522, 525, 527, 528, 529, 561, 573, 575, 576, 580], "obs2": 516, "obs_": 453, "obs_clust": [92, 488], "obs_col": 463, "obs_con": [16, 454, 458, 459, 461, 500], "obs_copi": 88, "obs_fil": [16, 454, 458, 459, 461, 500], "obs_filenam": 493, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 146, 211, 303, 304, 388, 390, 400, 405, 414, 450, 453, 454, 455, 456, 458, 459, 461, 462, 463, 465, 466, 470, 471, 472, 475, 481, 483, 488, 491, 493, 494, 498, 500, 501, 525], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [90, 104, 405], "obs_list": [437, 439], "obs_list_vela": 473, "obs_mod": 95, "obs_model": 449, "obs_muoneff": 488, "obs_po": [41, 308], "obs_tabl": [82, 91, 96, 303, 304, 431, 463, 465, 471, 475, 483, 488, 491, 493, 494, 498, 501, 525], "obs_table_filenam": 82, "obs_tim": [16, 454, 458, 459, 461, 500], "obs_time_src": 483, "obs_zenith": 488, "obscor": 444, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 163, 168, 169, 170, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 188, 189, 190, 223, 226, 231, 235, 237, 238, 239, 254, 261, 273, 276, 289, 295, 302, 304, 313, 334, 382, 384, 390, 391, 392, 393, 394, 398, 400, 402, 405, 410, 419, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 450, 455, 456, 458, 459, 461, 462, 469, 472, 473, 475, 476, 481, 489, 490, 491, 493, 494, 496, 498, 504, 512, 513, 516, 519, 521, 523, 525, 526, 552, 575, 576, 577, 578], "observation_clust": [447, 488, 490], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 438, "observationcta": 388, "observationeventsampl": 444, "observationfilt": [88, 388, 393, 418, 439], "observationlist": [388, 439], "observationmetadata": 405, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 444, "observationseventssampl": 445, "observationssummari": 423, "observationstat": [418, 423], "observationt": [82, 391, 392, 440, 488, 493, 501], "observationtablecheck": 438, "observationtablesummari": 435, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 391, 405, 407, 410, 430, 491, 493, 494, 511, 516], "observatory_earth_loc": [83, 88, 445], "observatory_loc": [405, 431, 448, 456, 465, 466, 469, 472], "obsinfometadata": [90, 104], "obstim": [85, 94, 186, 580], "obtain": [85, 102, 105, 108, 110, 123, 125, 137, 292, 388, 393, 395, 396, 402, 439, 445, 453, 454, 455, 457, 459, 465, 466, 471, 475, 476, 481, 484, 485, 489, 500, 502, 512, 516, 520, 521, 577, 578], "obviou": [390, 397, 398, 399, 405], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 504], "occur": [193, 194, 196, 205, 206, 335, 378, 398, 399, 403, 492], "occurr": [92, 100, 197, 215, 217, 224, 246], "oct": [386, 388, 389, 393, 395, 398, 404], "octob": [387, 416], "odd": [204, 206], "odd_npix": [204, 206], "odot": [28, 35, 39, 40, 52], "off": [102, 103, 105, 107, 108, 109, 110, 122, 123, 125, 168, 174, 175, 178, 181, 190, 288, 302, 375, 376, 381, 384, 390, 392, 393, 394, 423, 429, 431, 433, 443, 445, 448, 449, 450, 454, 455, 459, 463, 470, 471, 473, 475, 479, 481, 483, 489, 512, 525, 526, 575, 577, 578, 579], "off_2": [105, 110], "off_ev": 473, "off_patch": 473, "off_phas": [174, 473], "off_phase_rang": 473, "offdatabackgroundmak": 434, "offer": [123, 381, 389, 404, 405, 410, 411, 438, 455, 480, 481, 483, 487, 516], "offici": [404, 517, 576], "offlin": [87, 91], "offset": [83, 96, 112, 113, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 169, 173, 179, 180, 185, 188, 193, 194, 196, 198, 202, 205, 206, 378, 384, 392, 414, 423, 433, 435, 437, 442, 443, 444, 445, 448, 455, 456, 458, 461, 462, 463, 469, 473, 482, 483, 488, 491, 494, 501, 513, 521, 523, 526], "offset2": 83, "offset_axi": [153, 154, 155], "offset_band": 83, "offset_from_median": 83, "offset_index": 160, "offset_max": [16, 83, 169, 179, 185, 188, 454, 458, 459, 461, 463, 469, 473, 483, 500, 501, 523, 526], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 137, 278, 368, 369, 378, 383, 392, 393, 394, 396, 436, 448, 450, 454, 458, 459, 462, 463, 469, 475, 479, 481, 483, 485, 500, 501, 512, 516, 575], "ogip": [95, 106, 107, 110, 150, 195, 197, 198, 201, 202, 203, 390, 393, 436, 449, 453, 462, 512, 520, 529], "ogip_column": 202, "ogipdatasetread": 110, "ogipdatasetwrit": [110, 442, 444], "oikxz0p": 475, "ok": [378, 392, 481], "old": [197, 363, 378, 383, 386, 390, 394, 395, 420, 421, 436, 437, 438, 476], "old_attribut": 378, "older": [385, 395, 411, 436, 478], "oldest": 398, "olga": [434, 435], "olivera": [426, 429, 431, 432, 440, 442, 443, 444, 445], "omega": [19, 20, 23, 261, 277, 491, 533, 569], "omit": [133, 379, 461, 491, 576], "omp": 398, "on_circl": 525, "on_ellipse_annulu": 525, "on_ev": 473, "on_patch": 473, "on_phas": [174, 473], "on_phase_rang": 473, "on_posit": 190, "on_radii": 448, "on_radiu": [463, 473], "on_rectangl": 525, "on_region": [16, 102, 105, 176, 448, 450, 453, 454, 455, 456, 458, 459, 461, 463, 465, 466, 470, 471, 473, 475, 479, 500, 525], "on_region_radiu": [448, 453, 456, 465, 466, 471, 475], "onc": [87, 91, 102, 204, 378, 381, 383, 388, 389, 392, 393, 394, 398, 399, 400, 402, 403, 407, 408, 409, 410, 412, 455, 471, 473, 483, 486, 493, 496, 513, 516, 576], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 84, 87, 89, 90, 91, 92, 93, 95, 99, 102, 104, 105, 108, 109, 110, 113, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 173, 175, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 280, 284, 286, 287, 288, 313, 318, 334, 349, 365, 371, 372, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 408, 409, 410, 437, 440, 441, 443, 445, 448, 450, 453, 454, 455, 458, 461, 465, 470, 472, 473, 476, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 500, 501, 502, 511, 512, 513, 514, 516, 521, 523, 525, 528, 529, 535, 573, 574, 576, 577, 578, 579, 580], "ones": [87, 91, 118, 122, 126, 130, 133, 150, 197, 382, 386, 390, 392, 395, 398, 406, 411, 414, 472, 476, 482, 484, 504, 523, 575, 576], "ones_lik": [473, 523], "ongo": [381, 384, 385, 408], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 108, 109, 110, 122, 124, 125, 126, 130, 133, 134, 136, 143, 144, 151, 152, 156, 158, 163, 166, 169, 175, 180, 191, 192, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 214, 215, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 266, 267, 268, 272, 273, 274, 286, 288, 305, 325, 353, 375, 378, 379, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 411, 419, 421, 425, 429, 431, 432, 437, 441, 443, 444, 445, 450, 451, 453, 454, 455, 458, 459, 461, 462, 464, 465, 466, 467, 470, 471, 472, 473, 475, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 501, 504, 512, 514, 520, 523, 526, 529, 571, 575, 576, 577, 578], "onlin": [87, 91, 379, 383, 386, 398, 414], "onlinelibrari": [135, 144], "onoff": [432, 512], "onserv": 93, "ontim": [186, 388, 465, 479], "onto": [105, 110, 193, 194, 196, 202, 204, 205, 206, 365, 384, 501, 512, 516, 528, 574], "oo": 404, "op": 394, "opac": 226, "open": [66, 87, 91, 378, 379, 381, 383, 389, 392, 395, 397, 398, 402, 403, 404, 407, 409, 410, 412, 414, 415, 436, 454, 462, 484, 491, 493, 494, 500, 511, 575, 576], "openastronomi": 437, "oper": [87, 91, 192, 204, 219, 378, 384, 389, 392, 424, 426, 429, 438, 439, 443, 449, 479, 486, 487, 528, 529, 542, 544, 548, 551, 553, 556, 561], "opinion": [383, 576], "oppos": [476, 552, 576], "opposit": [193, 194], "opt": [89, 478, 542, 552], "opt_method": 481, "optic": [226, 392, 449, 542], "optim": [19, 20, 26, 101, 131, 133, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 371, 377, 378, 387, 390, 391, 400, 402, 450, 451, 453, 454, 455, 456, 457, 461, 462, 463, 473, 475, 476, 480, 481, 489, 492, 500, 501], "optimis": [19, 20, 211, 212, 213, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 392, 394, 396, 438, 445, 514, 573], "optimize_opt": [211, 461, 469, 480, 481, 501], "optimize_result": [211, 212, 443], "optimizeresult": [101, 211, 212, 450, 451, 453, 454, 455, 461, 462, 463, 473, 475, 480, 481, 492, 500, 501], "optin": 404, "optinon": [109, 110], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 292, 293, 294, 296, 301, 302, 303, 305, 316, 326, 329, 332, 333, 334, 335, 337, 338, 341, 346, 347, 349, 360, 361, 365, 366, 367, 372, 373, 374, 375, 378, 381, 383, 384, 386, 387, 389, 390, 392, 394, 396, 398, 401, 405, 408, 409, 410, 411, 412, 418, 419, 420, 423, 425, 426, 429, 431, 435, 437, 438, 439, 440, 442, 443, 444, 445, 457, 461, 469, 470, 472, 478, 479, 483, 484, 485, 487, 488, 491, 492, 500, 501, 512, 514, 516, 528, 529, 571, 575, 576], "option1": 379, "option2": 379, "option3": 379, "option_context": [87, 91], "optionali": 536, "optout": 404, "optpars": 383, "oral": 404, "orang": [379, 453, 461, 467, 470, 473, 477, 480, 489, 525], "orchestr": [384, 388, 390, 394, 454, 500, 501], "orcid": 404, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 105, 125, 136, 147, 148, 150, 151, 152, 153, 154, 155, 158, 160, 163, 165, 166, 169, 173, 180, 183, 184, 189, 191, 192, 193, 194, 196, 197, 201, 202, 203, 204, 205, 206, 272, 284, 305, 375, 378, 379, 384, 389, 390, 392, 393, 394, 395, 402, 403, 404, 406, 419, 420, 421, 422, 423, 424, 425, 426, 429, 445, 453, 454, 455, 457, 461, 462, 465, 473, 478, 481, 482, 483, 484, 487, 493, 500, 501, 502, 527, 528, 529, 576, 579], "ordereddict": [384, 395, 422], "ordinari": 502, "org": [11, 34, 63, 64, 65, 83, 87, 88, 91, 179, 211, 252, 253, 267, 268, 293, 305, 381, 386, 395, 398, 403, 404, 407, 409, 410, 412, 416, 435, 437, 448, 456, 458, 461, 462, 463, 469, 472, 477, 478, 481, 491, 559, 560, 576], "organ": [382, 398, 403, 404, 429, 493, 494, 513, 528], "organis": [385, 394, 397, 404, 437], "orient": [148, 156, 157, 378, 389], "origin": [16, 41, 84, 87, 90, 91, 102, 104, 109, 123, 124, 125, 194, 206, 270, 272, 274, 388, 392, 404, 405, 435, 454, 458, 459, 461, 471, 476, 484, 487, 492, 500, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 579, 580], "orthogon": 338, "oscar": [437, 438], "osx": 425, "ot": 407, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 102, 104, 105, 109, 110, 123, 124, 126, 130, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 175, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 215, 217, 272, 285, 305, 318, 348, 367, 372, 377, 381, 383, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 409, 437, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 512, 513, 514, 516, 521, 523, 525, 529, 544, 573, 574, 576, 580], "other_id": 450, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 102, 104, 105, 109, 110, 124, 161, 200, 204, 206, 208, 214, 215, 216, 217, 224, 246, 305, 371, 391, 401, 404, 445, 486, 487, 492, 543], "oup": [137, 301], "our": [378, 381, 387, 392, 394, 395, 397, 400, 401, 402, 404, 419, 420, 436, 445, 448, 450, 453, 454, 455, 458, 459, 461, 462, 463, 466, 471, 472, 473, 475, 484, 485, 489, 493, 500, 501, 576], "ourself": 502, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 101, 125, 193, 194, 196, 202, 205, 206, 246, 259, 260, 377, 378, 379, 381, 383, 386, 388, 390, 392, 394, 396, 397, 398, 403, 407, 414, 415, 417, 423, 437, 451, 455, 458, 459, 475, 484, 485, 491, 492, 500, 502, 504, 505, 525, 538, 539, 573, 576, 580], "out_fold": 394, "outcom": [383, 392], "outdat": [395, 398], "outdir": [16, 82, 93, 454, 458, 459, 461, 500], "outer": [43, 44, 52, 53, 127, 168, 259, 539], "outer_height": [525, 529], "outer_width": [525, 529], "outfil": 378, "outflow": 203, "outlin": [102, 105, 109, 110, 220, 221, 225, 233, 236, 250, 259, 260, 274, 381, 383, 386, 387, 388, 389, 392, 398, 401], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 104, 124, 141, 142, 150, 155, 193, 194, 196, 202, 205, 206, 212, 224, 238, 246, 287, 334, 379, 386, 388, 391, 394, 395, 399, 402, 405, 418, 433, 439, 442, 443, 461, 465, 466, 469, 472, 480, 483, 484, 500, 501, 514, 516, 576, 577], "output_map": [193, 194, 196, 202, 205, 206], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 102, 105, 109, 110, 115, 117, 150, 170, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 214, 216, 226, 275, 318, 366, 378, 392, 393, 394, 429, 459, 480, 481, 483, 484, 485, 516, 523, 535, 561], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 101, 102, 105, 109, 110, 126, 133, 137, 150, 151, 161, 163, 166, 173, 180, 183, 184, 186, 187, 193, 194, 196, 197, 198, 202, 204, 205, 206, 224, 246, 277, 286, 288, 292, 316, 317, 330, 369, 378, 379, 383, 386, 387, 388, 391, 392, 393, 398, 401, 405, 409, 411, 429, 450, 453, 457, 459, 461, 464, 465, 472, 478, 479, 480, 483, 484, 487, 501, 502, 514, 516, 520, 577, 578], "overal": [386, 392, 453], "overcom": 485, "overestim": [514, 578], "overflow": [203, 455, 472, 475, 564], "overkil": 472, "overlai": [454, 480], "overlaid": [102, 105, 109, 110, 453, 454], "overlap": [86, 91, 115, 117, 130, 181, 198, 203, 375, 393, 453], "overlap_ok": 86, "overlin": [102, 109, 512], "overload": 429, "overplot": [478, 511], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 345, 389, 453, 455, 463, 467], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 124, 201, 375], "oversampl": [103, 108, 161, 163, 166, 173, 180, 186, 192, 193, 194, 196, 201, 202, 205, 206, 221, 225, 233, 236, 237, 238, 248, 259, 260, 262, 264, 270, 274, 276, 280, 420, 483], "oversample_energy_factor": [103, 108, 466], "oversampling_factor": [194, 204, 220, 221, 225, 233, 236, 237, 238, 248, 250, 259, 260, 262, 264, 270, 274, 276], "overview": [6, 381, 408, 423, 424, 426, 429, 447, 473, 480, 484, 487, 496, 502, 503, 516, 517, 530, 577], "overwrit": [11, 15, 16, 19, 20, 26, 82, 88, 93, 100, 101, 102, 105, 107, 109, 110, 123, 125, 151, 152, 158, 163, 166, 191, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 212, 214, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 270, 271, 272, 273, 274, 325, 347, 402, 438, 440, 445, 453, 454, 461, 462, 465, 466, 467, 482, 484, 485, 486, 487, 491, 492, 498, 500, 501, 512, 529, 540, 576], "overwrite_templ": [212, 224, 246], "overwritten": [163, 166, 317], "owen": [417, 430], "own": [87, 91, 99, 123, 125, 200, 202, 381, 384, 394, 400, 404, 429, 448, 465, 487, 492, 501, 516, 528, 529], "oz3f5dk6": 475, "p": [38, 51, 54, 87, 91, 109, 110, 129, 291, 302, 378, 429, 454, 464, 477, 481, 500, 516, 521, 522, 578], "p0_birth": 43, "p90": 48, "p_": [518, 520, 521, 522], "p_0": [51, 193, 196, 202, 205, 206, 508], "p_dot": [51, 54], "p_i": [193, 196, 202, 205, 206], "p_lat": [193, 196, 202, 205, 206], "p_lon": [193, 196, 202, 205, 206], "p_mean": 42, "p_n": [193, 196, 202, 205, 206], "p_stdv": 42, "p_valu": [286, 288, 481, 576, 578], "pace": [386, 387], "packag": [6, 11, 141, 305, 342, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 392, 395, 396, 398, 403, 404, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 422, 423, 425, 426, 429, 432, 433, 434, 435, 436, 437, 438, 440, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 512, 515, 516, 517, 524, 529, 540, 548, 550, 564, 576, 580], "pacman": 434, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 102, 105, 109, 110, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 206, 366, 426, 429], "pad_width": [102, 109, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206], "pad_with": [193, 194, 196, 202, 205, 206], "page": [6, 87, 91, 211, 289, 295, 302, 379, 381, 383, 390, 392, 395, 398, 404, 407, 408, 410, 411, 415, 423, 424, 429, 432, 433, 436, 437, 438, 439, 445, 481, 484, 494, 496, 514, 516, 527, 529, 577, 580], "pain": [378, 381, 385], "pair": [16, 84, 90, 102, 104, 105, 109, 110, 123, 124, 125, 137, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 394, 449], "panda": [87, 91, 377, 395, 438, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "panel": [88, 101, 102, 105, 109, 110, 365, 432, 465, 481], "panel_fov": 365, "panni": 429, "papadopoulo": [429, 431], "paper": [57, 59, 63, 72, 74, 126, 179, 398, 404, 438, 471, 476, 478, 483, 493, 504], "papermil": 394, "par": [389, 401, 406, 449, 475, 481, 489, 491], "par_000_amplitud": 481, "par_001_alpha": 481, "par_002_beta": 481, "par_00x_": 389, "par_1": [211, 481], "par_2": [211, 481], "par_alpha": [211, 481], "par_beta": [211, 481], "par_box": 91, "par_nam": [224, 232, 246, 262, 272], "par_to_v": 491, "par_typ": [224, 232, 246, 262, 272], "parabol": [285, 318, 481], "parabola": [240, 241, 447, 462, 481, 530, 562], "paragraph": 383, "parallel": [6, 93, 126, 127, 130, 133, 169, 320, 321, 322, 323, 324, 325, 326, 381, 395, 408, 431, 443, 444, 445, 457, 479], "parallel_backend": [93, 126, 127, 130, 133, 169, 325, 467], "parallelbackendenum": 320, "parallelmixin": [93, 126, 133, 169], "param": [16, 84, 90, 104, 124, 226, 275, 371, 394, 424, 481], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 481, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 307, 309, 311, 312, 314, 316, 317, 318, 319, 325, 326, 327, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 387, 390, 391, 393, 394, 396, 397, 400, 402, 404, 415, 418, 419, 420, 421, 422, 423, 425, 426, 429, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 450, 451, 453, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 475, 477, 478, 479, 480, 482, 483, 488, 489, 491, 492, 501, 502, 504, 512, 514, 515, 516, 523, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579], "parameter": 487, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_nam": 379, "parameter_name_scan": 211, "parameter_typ": 379, "parameterestim": [119, 425, 444], "parameteris": [518, 520], "parameters_list": [215, 217], "parameters_nam": [224, 246], "parameters_stat_sum": 406, "parameters_unique_nam": [19, 20, 26, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 481], "parametr": [16, 27, 84, 90, 101, 104, 124, 153, 154, 159, 162, 164, 240, 241, 259, 390, 394, 401, 419, 426, 429, 455, 457, 487, 491, 538, 539, 550], "parametricpsf": [154, 162, 429, 431], "parametris": [162, 401, 423, 520, 522, 533, 534, 535, 536, 543, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571], "parent": [16, 84, 90, 104, 118, 122, 124, 126, 130, 133, 204, 378, 388, 405, 471, 480, 514, 552], "parenthes": [389, 395, 441, 443], "parfiv": [395, 422], "parnam": 489, "pars": [16, 84, 85, 90, 104, 124, 192, 201, 379, 392, 445, 448, 456, 458, 461, 463, 469, 472, 485, 491, 576], "parse_arg": 576, "parse_fil": [16, 84, 90, 104, 124], "parse_obj": [16, 84, 90, 104, 124], "parse_raw": [16, 84, 90, 104, 124], "parseabl": 305, "parser": 576, "part": [101, 378, 381, 384, 387, 389, 391, 392, 393, 394, 396, 397, 398, 403, 404, 419, 423, 424, 425, 433, 438, 443, 444, 448, 450, 453, 461, 469, 478, 479, 484, 485, 501, 502, 516, 521, 525], "parti": 383, "partial": [91, 102, 105, 151, 152, 158, 163, 166, 169, 192, 204, 206, 272, 392, 396, 424, 438, 527], "partial_overlap": 91, "particip": [383, 387, 398], "particl": [19, 26, 247, 277, 425, 504, 552], "particle_distribut": [247, 552], "particular": [87, 91, 378, 384, 391, 393, 400, 402, 403, 405, 426, 429, 440, 441, 450, 453, 454, 455, 456, 458, 462, 465, 471, 472, 476, 481, 483, 486, 491, 493, 494, 500, 501, 513, 516, 523, 525, 529, 578], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [381, 387, 388, 392, 398, 399], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 102, 104, 105, 108, 109, 110, 124, 125, 128, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 178, 186, 191, 192, 193, 194, 196, 198, 200, 201, 202, 204, 205, 206, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 285, 287, 305, 317, 325, 326, 327, 332, 333, 334, 335, 365, 366, 371, 373, 374, 378, 381, 388, 390, 391, 392, 393, 405, 425, 429, 431, 443, 444, 445, 450, 451, 453, 454, 461, 462, 466, 470, 471, 476, 478, 479, 481, 482, 483, 484, 485, 487, 488, 491, 500, 501, 502, 516, 527, 528, 529, 533, 534, 576, 580], "pass4": 493, "passkwarg": [455, 475], "past": [378, 383, 386, 394, 395, 398, 399, 401, 404, 406, 414, 435, 437, 438, 484, 576], "patch": [375, 378, 385, 404, 432, 441, 453, 455, 463, 467, 473], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 104, 106, 107, 110, 124, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 193, 194, 196, 201, 202, 205, 206, 212, 224, 238, 246, 273, 313, 342, 343, 344, 347, 378, 381, 413, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 514, 570, 571, 576], "path_effect": [201, 224, 246], "path_to_notebook": 378, "path_to_script": 378, "patheffect": [201, 224, 246], "pathlib": [16, 82, 83, 86, 87, 91, 150, 202, 212, 224, 246, 343, 453, 454, 461, 462, 465, 466, 491, 500, 501], "pathpatch": 467, "pattern": [378, 384, 392], "paula": 444, "paulakx": 444, "paz": [430, 433, 434], "pbar": 516, "pc": [46, 47, 50, 52, 509, 510], "pcolormesh": [83, 125, 147, 148, 150, 153, 154, 155, 160, 162, 164, 165, 436, 442, 481, 482], "pcq": 475, "pd": [87, 91], "pdf": [150, 154, 179, 252, 253, 267, 268, 327, 371, 379, 462, 465, 477, 506, 508, 509, 510, 512, 513, 518, 519, 520, 522, 525, 529, 559, 560, 578, 581], "pdf_in_safe_rang": 150, "pdf_matrix": 150, "pdf_threshold": [150, 151, 155], "pdflatex": 379, "peak": [68, 128, 141, 142, 150, 179, 230, 235, 237, 241, 431, 437, 444, 457, 476, 478, 483, 539], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 378, "peek": [83, 88, 102, 105, 109, 110, 128, 129, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 378, 390, 414, 426, 432, 436, 440, 450, 455, 461, 465, 466, 473, 479, 482, 491, 493, 494, 513, 516, 518, 519, 520, 522], "pei": 445, "penalti": 489, "pend": 305, "peopl": [383, 385, 398, 404, 407, 408, 477, 504, 516, 576], "pep": 383, "pep8": 381, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 101, 102, 105, 109, 110, 112, 113, 122, 123, 125, 126, 127, 130, 131, 135, 141, 144, 145, 146, 163, 166, 198, 231, 238, 239, 280, 289, 295, 302, 378, 384, 390, 391, 394, 402, 404, 405, 417, 425, 429, 431, 444, 448, 456, 465, 469, 470, 472, 477, 483, 484, 488, 489, 493, 494, 512, 516, 519, 523, 575, 577], "per_decad": [198, 453, 455, 465, 466, 473, 479, 492, 520, 526], "percent": 132, "percentag": [150, 179, 483], "percentil": 83, "peresano": 445, "perfect": 150, "perfectli": [534, 576], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 104, 108, 124, 170, 178, 192, 204, 206, 221, 224, 225, 233, 236, 246, 248, 259, 260, 264, 270, 274, 286, 288, 341, 344, 371, 378, 379, 384, 387, 388, 389, 393, 394, 402, 405, 408, 410, 419, 426, 429, 431, 434, 438, 441, 443, 444, 445, 448, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 464, 466, 469, 470, 471, 472, 475, 479, 481, 483, 484, 485, 486, 488, 493, 496, 500, 512, 516, 524, 525, 528, 534, 552, 574, 575, 576, 577], "perhap": 529, "period": [42, 51, 54, 198, 273, 385, 404, 437, 445, 488, 508], "period_dot": 51, "periodicmapaxi": 445, "periodogram": [287, 393, 438, 445], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 404], "perseu": [33, 38], "person": [378, 381, 383, 385, 386, 387, 391, 396, 399], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 437, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 502, "ph": 363, "pha": [106, 107, 110, 202, 390, 435, 438, 453, 462], "pha_": 479, "pha_meta": 106, "pha_ob": [106, 146, 211, 462, 480, 481], "pha_obs23523": [109, 110, 131, 284, 489, 514], "pha_obs23592": 514, "phacountsspectrum": 421, "phacountsspectrumlist": 420, "phase": [50, 52, 53, 89, 171, 174, 273, 383, 388, 389, 392, 393, 395, 397, 402, 414, 419, 438, 440, 443, 445, 447, 487, 505, 516, 530, 572], "phase_axi": 402, "phase_bkg_mak": 473, "phase_column_nam": [174, 473], "phase_curve_model": 570, "phase_filt": 89, "phase_max": 473, "phase_min": 473, "phase_model": 570, "phasebackgroundestim": 423, "phasebackgroundmak": [171, 423, 443, 445, 473], "phasecurv": [273, 437, 570], "phasecurve_lsi_dc": 570, "phasecurvemodel": 401, "phasecurvetablemodel": [389, 391], "phasecurvetempl": 389, "phasogram": [273, 570], "phi": [19, 20, 26, 199, 218, 219, 222, 225, 226, 228, 229, 230, 233, 236, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 309, 401, 469, 486, 487, 492, 502, 521, 533, 534, 535, 537, 538, 539, 543, 545, 546, 547, 549, 550, 554, 555, 557, 558, 559, 560], "phi_0": [218, 220, 221, 225, 228, 229, 230, 233, 236, 240, 241, 248, 250, 252, 253, 259, 260, 263, 264, 266, 267, 268, 270, 274, 401, 481, 543, 546, 547, 550, 554, 557, 558, 559, 560], "phi_ref": [273, 570], "philipp": [437, 438], "phone": 398, "photon": [44, 226, 247, 363, 393, 449, 456, 465, 469, 485, 487, 502, 521, 552, 575], "photutil": [141, 378, 392, 438], "php": 63, "physic": [126, 127, 130, 133, 325, 326, 377, 402, 406, 420, 454, 462, 484, 487, 489, 491, 500, 514, 516, 552, 575, 578, 579], "pi": [19, 20, 30, 31, 32, 37, 54, 234, 277, 401, 487, 510, 533, 534, 535, 538, 539, 549, 569], "pick": [378, 385, 392, 403, 419, 502], "pictur": 379, "pie": 516, "piec": [378, 384, 392, 397, 406], "piecewis": [248, 249, 447, 487, 530, 541, 562], "piecewisebrokenpowerlawnormspectralmodel": 401, "piecewisebrokenpowerlawnormspectramodel": 401, "piecewisenormsectralmodel": 426, "piecewisenormspatialmodel": [256, 443, 445, 487, 536], "piecewisenormspectralmodel": [257, 406, 426, 429, 442, 444, 487, 523, 553], "pig": [13, 378, 380, 381, 418, 419, 421, 422, 423, 425, 426, 437, 439, 440, 444], "pii": [135, 144], "pillar": 394, "pin": 438, "pink": [109, 110], "pint": [473, 516], "pintor": [391, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 440, 442, 443, 444, 445], "pip": [377, 381, 385, 395, 409, 410, 412, 419, 438, 491, 576], "pipe": [434, 435, 436], "pipelin": [391, 393, 425], "piron": 575, "piron2001": 575, "pivot": [19, 20, 26, 67, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 444, 478], "pivot_energi": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "pix": [191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 528], "pix_reg": 477, "pix_reg_rec": 477, "pix_to_coord": [191, 192, 195, 197, 198, 201, 203, 204, 444], "pix_to_idx": [191, 192, 195, 197, 198, 201, 203, 204], "pix_tuple_to_idx": 445, "pixcoord": 392, "pixel": [13, 83, 102, 105, 109, 110, 112, 113, 114, 118, 128, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 176, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 221, 224, 225, 233, 236, 246, 248, 259, 260, 264, 270, 274, 389, 417, 421, 435, 438, 457, 465, 467, 479, 483, 484, 492, 502, 512, 514, 526, 527, 528, 537], "pixel_area": 204, "pixel_scal": [118, 192, 204], "pixelis": 528, "pixelregion": [392, 525], "pixilis": 484, "pixreg": 535, "pixregion": 206, "pk": [137, 424, 449, 471, 472, 475, 476, 478, 488, 502, 542], "pks2155": [449, 471, 475], "pks2155_hess_lc": [123, 125, 145, 476, 480], "pl": [67, 80, 122, 127, 133, 170, 244, 251, 252, 253, 401, 451, 457, 467, 471, 478, 479, 480, 487, 502], "pl_model": 568, "pl_spectrum": 489, "place": [83, 86, 87, 91, 92, 100, 102, 105, 109, 110, 141, 147, 148, 149, 150, 151, 152, 153, 157, 158, 163, 165, 166, 176, 181, 193, 194, 196, 202, 205, 206, 246, 272, 301, 351, 378, 379, 385, 386, 389, 390, 391, 392, 394, 397, 398, 399, 400, 403, 408, 422, 424, 453, 470, 484, 485, 487, 502, 512, 513, 574, 580], "placehold": 383, "plai": [398, 463], "plain": [395, 484], "plainseri": 90, "plan": [382, 383, 387, 388, 392, 394, 395, 398, 403, 407, 418, 435, 437, 438, 439, 573], "planar": [274, 389], "plane": [29, 67, 68, 126, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 398, 477, 478, 484, 491, 511, 526, 529, 534, 575, 581], "plate": [204, 484], "platform": [395, 404, 429], "plausibl": [405, 464], "pleas": [103, 108, 379, 381, 383, 385, 387, 413, 418, 419, 420, 429, 437, 439, 451, 453, 454, 455, 456, 458, 461, 465, 466, 471, 472, 476, 479, 480, 500, 505, 516], "pleasant": 381, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 101, 102, 105, 109, 110, 125, 128, 129, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 193, 194, 195, 196, 198, 201, 202, 203, 205, 206, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 278, 282, 356, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 379, 392, 393, 394, 396, 397, 399, 402, 414, 417, 420, 423, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 448, 450, 451, 455, 457, 458, 459, 461, 462, 466, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483, 485, 487, 488, 489, 491, 492, 493, 494, 500, 502, 506, 508, 509, 510, 512, 516, 518, 519, 520, 522, 525, 570, 571, 575, 578, 580], "plot_absorb": [447, 542, 562], "plot_at_energi": [147, 148, 491], "plot_bia": [150, 155], "plot_broken_powerlaw": [447, 543, 562], "plot_compound": [447, 544, 562], "plot_const": [447, 532, 541], "plot_constant_spectr": [447, 545, 562], "plot_constant_tempor": [447, 563, 572], "plot_containment_radiu": [154, 160, 162, 164], "plot_containment_radius_vs_energi": [154, 160, 162, 163, 164, 166, 491, 492], "plot_contour_lin": 481, "plot_correl": [209, 481], "plot_count": [109, 110], "plot_dat": 580, "plot_disk": [447, 533, 541], "plot_distribut": [445, 459, 461], "plot_energi": [83, 466], "plot_energy_depend": [147, 153, 491, 518], "plot_energy_offset": 83, "plot_err": 128, "plot_error": [19, 20, 26, 66, 67, 101, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 233, 234, 236, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 396, 449, 451, 453, 455, 461, 462, 464, 478, 481, 501], "plot_excess": [109, 110, 432], "plot_exp_cutoff_powerlaw": [447, 546, 562], "plot_exp_cutoff_powerlaw_3fgl": [447, 547, 562], "plot_exp_cutoff_powerlaw_norm_spectr": [447, 548, 562], "plot_expdecay_tempor": [447, 564, 572], "plot_extension_error": [220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274], "plot_fit": [101, 109, 110, 450, 453, 454, 455, 463, 473, 500], "plot_gauss": [447, 534, 541], "plot_gauss_spectr": [447, 549, 562], "plot_gaussian_tempor": [447, 565, 572], "plot_gen_gauss": [447, 535, 541], "plot_generalized_gaussian_tempor": [447, 566, 572], "plot_grid": [161, 193, 194, 196, 202, 205, 206, 220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274, 402, 431, 442, 461, 479, 482, 483, 484, 485, 487, 493], "plot_heatmap": 209, "plot_hist": [202, 529], "plot_imag": 83, "plot_interact": [193, 194, 196, 202, 205, 206, 220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274, 431, 438, 461, 469, 484, 500, 501], "plot_kernel": 161, "plot_kwarg": [453, 455, 463], "plot_linear_tempor": [447, 567, 572], "plot_logparabola": [447, 550, 562], "plot_logparabola_norm_spectr": [447, 551, 562], "plot_map_rgb": 443, "plot_mask": [109, 110, 194, 202, 206, 525], "plot_matrix": [150, 479, 492], "plot_migr": 155, "plot_naima": [447, 552, 562], "plot_npred_sign": [443, 461, 463, 501], "plot_offset2_distribut": 83, "plot_offset_depend": [147, 153], "plot_panel": 365, "plot_phasogram": 273, "plot_piecewise_norm_spati": [447, 536, 541], "plot_piecewise_norm_spectr": [447, 553, 562], "plot_point": [447, 537, 541], "plot_posit": [224, 246, 486], "plot_position_error": [220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274], "plot_powerlaw": [447, 554, 562], "plot_powerlaw2": [447, 555, 562], "plot_powerlaw_norm_spectr": [447, 556, 562], "plot_powerlaw_tempor": [447, 568, 572], "plot_profil": 128, "plot_psf_vs_rad": [154, 160, 162, 163, 164, 166, 492], "plot_rad_max_vs_energi": [165, 445, 455], "plot_region": [201, 202, 224, 246, 375, 455, 467, 486, 525, 529], "plot_residu": [101, 102, 105, 109, 110, 427, 429, 461, 501], "plot_residuals_spati": [102, 105, 109, 110, 461, 469, 501], "plot_residuals_spectr": [102, 105, 109, 110], "plot_rgb": 443, "plot_shel": [447, 538, 541], "plot_shell2": [447, 539, 541], "plot_sine_tempor": [447, 569, 572], "plot_smooth_broken_powerlaw": [447, 557, 562], "plot_spati": 429, "plot_spectrum": [101, 147, 461, 472, 479], "plot_spectrum_datasets_off_region": [426, 442, 443, 453, 455, 463, 525], "plot_stat": 453, "plot_super_exp_cutoff_powerlaw_3fgl": [447, 558, 562], "plot_super_exp_cutoff_powerlaw_4fgl": [447, 559, 562], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [447, 560, 562], "plot_templ": [447, 540, 541], "plot_template_phase_tempor": [447, 570, 572], "plot_template_spectr": [447, 561, 562], "plot_template_tempor": [447, 571, 572], "plot_theta_squared_t": 494, "plot_tim": 83, "plot_ts_profil": [125, 453, 454, 467, 470, 480], "plotmixin": [109, 110], "plotter": 365, "plsuperexpcutoff3fgl": 436, "plsuperexpcutoff4fgl": 421, "plt": [19, 20, 26, 66, 67, 129, 147, 153, 154, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 366, 375, 378, 379, 414, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 508, 509, 510, 516, 518, 519, 520, 522, 525, 533, 535, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 225, 398, 404, 487], "pmf": 391, "png": [154, 386, 414, 506, 508, 509, 510, 512, 513, 518, 519, 520, 522, 525, 529, 578, 581], "po": [152, 204, 525], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 104, 105, 109, 110, 112, 113, 119, 123, 125, 126, 127, 130, 131, 132, 133, 134, 138, 143, 145, 152, 154, 157, 163, 165, 166, 176, 177, 179, 180, 181, 183, 184, 186, 187, 189, 190, 193, 194, 196, 201, 202, 205, 206, 211, 224, 246, 250, 262, 280, 284, 287, 293, 307, 311, 317, 323, 333, 370, 378, 380, 381, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 407, 410, 417, 420, 422, 423, 429, 431, 432, 434, 435, 436, 437, 439, 442, 443, 444, 447, 450, 452, 455, 456, 457, 461, 466, 467, 469, 470, 471, 472, 473, 475, 479, 481, 482, 483, 484, 487, 488, 492, 494, 496, 504, 505, 511, 512, 513, 516, 521, 525, 528, 530, 534, 535, 541, 552, 573, 574, 575], "point_sourc": 389, "pointer": 386, "pointing_altaz": [405, 443], "pointing_galact": 91, "pointing_info": [85, 94, 448], "pointing_posit": [163, 456, 466, 469], "pointing_radec": [83, 91, 443, 491], "pointing_t": 94, "pointing_zen": 443, "pointinginfo": [85, 435], "pointinginfometadata": [90, 104], "pointingmetadata": 405, "pointingmod": 85, "pointlik": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 437, 525], "points_scal": 317, "pointskyregion": [175, 180, 201, 250, 432, 455, 466], "pointsourc": [389, 504], "pointspatialmodel": [19, 20, 72, 80, 133, 256, 401, 402, 422, 442, 457, 458, 461, 462, 465, 466, 470, 478, 479, 486, 487, 492, 500, 501, 537], "pointspreadfunct": 482, "poisson": [105, 110, 286, 287, 288, 289, 295, 298, 299, 302, 335, 390, 391, 420, 425, 451, 456, 459, 469, 575, 576, 578], "poissonian": [287, 473, 476, 575], "poissonlikelihoodfitt": 434, "polar": [51, 54, 306, 378], "pole": [51, 392, 484], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194], "polici": 382, "pollut": 393, "polygon": [194, 208, 392], "polygonis": 392, "polygonpixelregion": 392, "polygonskyregion": [208, 392], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 243, 484], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [321, 325, 326], "pool_kwarg": [325, 326], "poolmethodenum": 321, "poon": 435, "poorli": [483, 523], "pop": [92, 100, 200, 246], "popitem": 200, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 379, 398, 436, 505, 507, 552, 574], "popular": 576, "port": 436, "pos_ob": 463, "pos_on": 190, "pos_target": [463, 473], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 102, 103, 104, 105, 108, 112, 113, 123, 124, 125, 126, 127, 130, 131, 133, 151, 152, 158, 161, 163, 166, 176, 179, 181, 190, 192, 193, 194, 196, 201, 202, 203, 204, 205, 206, 207, 214, 215, 216, 217, 220, 221, 224, 225, 233, 236, 246, 248, 250, 259, 260, 262, 264, 270, 272, 274, 284, 286, 288, 303, 304, 307, 308, 311, 312, 366, 378, 385, 389, 391, 392, 401, 402, 403, 404, 419, 421, 426, 429, 431, 444, 445, 448, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 472, 473, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 491, 492, 494, 502, 512, 513, 514, 516, 521, 522, 525, 526, 527, 529, 533, 534, 535, 537, 552, 578], "position_angl": 456, "position_error": [220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274, 423], "position_lonlat": [220, 221, 225, 233, 236, 248, 250, 259, 260, 262, 264, 270, 274], "position_off": 190, "positv": 440, "posixpath": [16, 342], "possibl": [33, 82, 87, 91, 136, 156, 378, 379, 381, 385, 386, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 402, 405, 408, 410, 420, 421, 429, 436, 438, 443, 449, 453, 457, 458, 459, 464, 467, 479, 481, 482, 483, 484, 492, 501, 502, 514, 516, 523, 528, 529, 552, 576, 577], "possibli": [87, 91, 123, 384, 388, 389, 391, 392, 396, 397, 398, 399, 405, 407, 429, 523], "post": [52, 387, 405], "poster": [381, 404, 408, 433], "posterior": [396, 489], "posteriori": 489, "postfix": 378, "potenti": [120, 386, 394, 464, 516], "potentiel": 404, "power": [19, 20, 26, 27, 101, 118, 123, 125, 127, 132, 140, 161, 163, 166, 192, 214, 216, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 254, 258, 263, 265, 266, 267, 268, 271, 275, 277, 282, 287, 332, 389, 391, 417, 423, 435, 437, 445, 447, 449, 456, 458, 461, 465, 467, 469, 471, 472, 473, 475, 486, 487, 489, 516, 530, 542, 562, 568], "power_spectrum": 287, "power_spectrum_param": 287, "powerlaw": [179, 252, 254, 287, 389, 390, 394, 435, 437, 447, 450, 458, 466, 467, 478, 487, 489, 501, 530, 556, 572], "powerlaw2spectralmodel": [244, 252, 253, 257, 401, 451, 458, 487, 502, 555], "powerlaw_with_paramet": 287, "powerlawnormspectralmodel": [67, 232, 251, 253, 257, 272, 400, 401, 406, 426, 444, 461, 462, 465, 466, 469, 479, 486, 487, 492, 500, 523, 536, 556, 561], "powerlawspectr": 133, "powerlawspectralmodel": [70, 72, 76, 80, 101, 109, 110, 115, 117, 122, 125, 131, 133, 215, 217, 251, 252, 257, 278, 401, 402, 406, 449, 450, 451, 454, 456, 457, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 478, 479, 480, 486, 487, 489, 491, 492, 500, 501, 502, 514, 532, 533, 534, 535, 537, 538, 539, 540, 542, 544, 553, 554, 563, 564, 565, 566, 567, 568, 569, 570, 571], "powerlawspectramodel": 406, "powerlawtemporalmodel": [269, 487, 568], "pppc4dm": 504, "pppc4dmid": 26, "pprint": [87, 91, 577], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pr": [378, 388, 390, 392, 401, 402, 404, 406, 407, 423, 424], "practic": [391, 395, 399, 402, 403, 404, 405, 453, 479, 485, 487, 501, 512, 516, 525, 575], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 101, 104, 108, 124, 125, 305, 378, 381, 387, 398, 404, 405, 409, 410, 426, 438, 440, 454, 458, 459, 462, 464, 467, 476, 478, 480, 481, 486, 489, 512, 518], "preced": [323, 392, 394, 404, 487], "precis": [133, 154, 160, 162, 164, 221, 225, 233, 236, 248, 259, 260, 264, 270, 274, 378, 396, 403, 404, 466], "precision_factor": [163, 166, 193, 194, 196, 202, 205, 206], "precomput": [26, 101, 125, 445, 479, 486], "pred": 512, "predefin": [410, 412, 431, 467, 470, 471, 500], "predic": 389, "predict": [101, 102, 105, 108, 109, 110, 122, 123, 125, 126, 127, 130, 131, 140, 170, 173, 179, 186, 250, 262, 290, 327, 374, 384, 389, 390, 391, 426, 443, 444, 449, 454, 456, 458, 459, 461, 463, 465, 467, 469, 479, 480, 483, 489, 500, 501, 514, 516, 520, 523, 542, 575, 578], "prefer": [87, 91, 353, 378, 383, 385, 389, 397, 398, 404, 409, 410, 414, 467, 472, 484, 485, 489, 496, 576, 578], "prefix": [198, 389], "preliminari": [387, 398, 406, 434, 436, 444, 457, 482, 492], "prepar": [82, 173, 388, 389, 407, 454, 462, 480, 483, 487, 492, 500, 524, 573], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [87, 91], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 445, 457, 476, 484, 552, 575], "present": [15, 70, 82, 83, 85, 91, 92, 100, 106, 110, 123, 125, 167, 195, 200, 224, 232, 246, 305, 378, 379, 381, 391, 394, 398, 402, 405, 408, 429, 450, 455, 458, 459, 470, 471, 475, 476, 477, 482, 483, 484, 486, 512, 514, 517, 529, 576, 578], "preserv": [87, 91, 105, 193, 194, 196, 198, 202, 205, 206, 395, 479, 485], "preserve_count": [193, 194, 196, 202, 205, 206, 484], "press": 491, "pretti": [392, 398, 408, 414], "prevent": [194, 226, 305, 429, 461, 523], "preview": [381, 494], "previou": [74, 87, 91, 378, 381, 392, 398, 399, 403, 407, 420, 426, 444, 455, 464, 465, 484, 487, 488, 489, 502, 511], "previous": [284, 395, 425, 437, 438, 448, 453, 461, 462, 478, 483, 485], "primari": [26, 87, 91, 193, 194, 196, 197, 205, 206, 383, 404, 425, 440, 480, 484], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 197, "primary_band": 484, "primary_hdu": 465, "primaryflux": [19, 20, 477, 504], "primaryhdu": [465, 484], "prime": 23, "primer": 396, "princip": 464, "principl": [378, 404, 406, 453, 526], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 101, 102, 109, 111, 116, 122, 125, 127, 133, 141, 142, 148, 150, 153, 154, 160, 162, 164, 173, 176, 215, 217, 224, 238, 246, 278, 303, 304, 313, 345, 378, 379, 389, 390, 393, 402, 405, 413, 414, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 500, 501, 502, 514, 516, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 576, 577, 578, 580], "print0": 378, "print_level": [461, 469, 481, 501], "print_stack": 378, "printout": [378, 436, 437, 479], "prior": [19, 20, 99, 101, 102, 109, 214, 215, 216, 217, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 382, 387, 410, 412, 444, 445, 447, 449, 450, 453, 454, 455, 456, 458, 461, 462, 467, 469, 471, 472, 478, 481, 487, 490, 496, 501, 502, 561, 573], "prior_registri": 489, "prior_stat_sum": [214, 215, 216, 217, 406, 489], "priorfitstatist": 406, "priori": [402, 459, 485], "prioriti": [375, 387, 389, 390, 392, 404, 407], "priormodel": 406, "priorparamet": [255, 406, 489], "privat": [378, 381, 387, 401, 437, 493, 494], "pro": [378, 394], "probabl": [13, 101, 134, 143, 155, 381, 384, 385, 386, 388, 391, 392, 396, 398, 400, 406, 408, 453, 456, 469, 481, 484, 487, 489, 492, 520, 521, 522, 575, 576, 578, 579], "probe": [133, 293, 487], "problem": [19, 20, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 301, 356, 386, 388, 392, 399, 406, 413, 441, 481, 516], "problemat": [397, 402, 405, 471, 516], "proce": [381, 408, 410, 412, 440, 449, 450, 453, 454, 465, 469, 471, 485, 486, 491, 492, 500, 501], "procedur": [391, 403, 408, 449, 457, 461], "proceed": [398, 404, 493], "process": [11, 83, 93, 126, 127, 130, 133, 134, 143, 169, 194, 206, 324, 325, 326, 335, 378, 379, 381, 383, 384, 386, 387, 388, 390, 391, 393, 394, 400, 403, 404, 405, 411, 415, 421, 426, 429, 431, 437, 444, 445, 450, 453, 457, 463, 465, 466, 478, 479, 483, 493, 498, 501, 506, 513, 515, 516, 574, 575, 576], "process_lots_of_data": 378, "processor": 398, "prod": 418, "prod3": 398, "prod3b": 491, "prod5": [465, 466, 491], "produc": [15, 102, 105, 109, 110, 114, 123, 281, 283, 378, 379, 384, 393, 394, 402, 403, 405, 408, 423, 449, 450, 453, 455, 457, 462, 463, 464, 465, 469, 471, 473, 477, 481, 483, 489, 491, 501, 516, 519, 521, 576], "product": [108, 134, 143, 193, 194, 196, 199, 202, 205, 206, 273, 384, 393, 394, 404, 405, 414, 429, 443, 444, 449, 451, 457, 466, 473, 479, 481, 483, 492, 494, 514, 521, 575], "prof_mak": 127, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 101, 119, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 143, 154, 160, 162, 163, 164, 166, 190, 194, 202, 211, 235, 237, 285, 302, 318, 337, 338, 390, 392, 396, 397, 404, 410, 412, 417, 419, 426, 429, 434, 436, 438, 439, 444, 445, 447, 453, 454, 463, 468, 470, 471, 472, 480, 481, 489, 496, 504, 514, 516, 533, 578], "profile_err": 128, "profile_high": 467, "profile_new": 467, "profuma": 504, "program": [378, 394], "programmat": 461, "progress": [15, 82, 118, 130, 133, 211, 326, 384, 387, 394, 395, 408, 429, 436, 437, 438, 444, 516], "progress_download": 516, "proj": [102, 105, 109, 110, 173, 192, 193, 194, 204, 205, 206, 453, 483, 484, 492, 501, 525], "project": [102, 109, 127, 170, 176, 192, 193, 194, 196, 201, 202, 204, 205, 206, 221, 224, 225, 233, 236, 246, 248, 259, 260, 264, 270, 274, 312, 338, 378, 379, 380, 381, 383, 385, 392, 394, 395, 398, 404, 421, 429, 437, 443, 454, 457, 459, 463, 467, 473, 482, 484, 485, 486, 491, 492, 498, 500, 501, 502, 504, 525, 528, 529, 538, 539, 574, 576], "projected_distance_axi": 127, "prompt": 576, "pronounc": 516, "pronunci": 516, "prop_cycl": 375, "propag": [19, 20, 26, 53, 128, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 292, 389, 396, 423, 443, 481], "proper": [45, 100, 393, 404, 442, 443, 455, 461, 516], "properli": [133, 186, 383, 393, 404, 441, 442, 453, 454, 480, 481, 500, 512, 577], "properti": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 96, 123, 170, 204, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 294, 375, 378, 379, 389, 391, 401, 402, 405, 406, 426, 429, 431, 436, 437, 439, 442, 443, 453, 455, 463, 465, 467, 478, 485, 487, 488, 502, 513, 529, 575], "propos": [378, 380, 382, 383, 384, 385, 387, 395, 403, 404, 406, 419, 422, 423, 425, 426, 437, 443], "protect": 445, "proto": [16, 84, 90, 104, 124], "proton": [277, 552], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 383, 389, 391, 394, 395, 396, 398, 434, 436, 437, 444, 505], "proven": 394, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 85, 87, 88, 90, 91, 101, 102, 104, 105, 109, 110, 114, 124, 130, 133, 134, 136, 143, 150, 151, 169, 183, 184, 189, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 274, 287, 302, 305, 371, 378, 379, 388, 389, 391, 393, 394, 395, 398, 399, 402, 404, 405, 406, 407, 408, 409, 413, 415, 419, 422, 423, 424, 426, 429, 431, 440, 443, 445, 448, 453, 455, 456, 457, 466, 469, 476, 478, 479, 480, 481, 483, 484, 485, 487, 488, 492, 493, 494, 496, 501, 502, 504, 506, 511, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 526, 527, 528, 529, 530, 537, 540, 552, 561, 573, 574, 575, 576, 578, 581], "proxi": 388, "prune": 381, "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 381, "psf": [16, 82, 87, 88, 96, 102, 103, 105, 108, 109, 110, 112, 113, 114, 152, 154, 159, 160, 161, 162, 163, 164, 166, 173, 180, 189, 204, 224, 246, 262, 303, 304, 378, 384, 388, 389, 390, 391, 394, 417, 419, 423, 424, 425, 426, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 448, 450, 453, 454, 455, 457, 458, 459, 461, 463, 465, 466, 469, 470, 479, 483, 485, 488, 491, 493, 494, 500, 501, 512, 514, 516, 521, 524, 529, 575], "psf3d": [88, 154, 159, 162, 164, 189, 419, 437, 522], "psf68": 448, "psf_": 512, "psf_3gauss": [87, 154, 491, 522], "psf_assym": 482, "psf_kernel": [163, 492], "psf_kernel_map": [161, 492], "psf_king": [87, 162, 522], "psf_map": [103, 108, 163, 166], "psf_map_reco": [166, 493], "psf_mean": 492, "psf_new": 482, "psf_out": [163, 166], "psf_r95": 485, "psf_tabl": [82, 87, 160, 482, 494], "psf_theta": 378, "psf_updat": [103, 108], "psf_valu": [154, 162, 164], "psfkernel": [105, 163, 166, 194, 206, 390, 399, 438, 522], "psfking": [159, 431, 522], "psfmap": [102, 103, 105, 108, 109, 110, 151, 152, 158, 159, 161, 166, 173, 180, 189, 390, 391, 399, 419, 422, 423, 425, 426, 438, 444, 445, 457, 479, 492, 516, 522], "psfnd": 482, "psr": [473, 478, 502], "public": [6, 368, 369, 381, 383, 392, 397, 400, 403, 408, 433, 450, 462, 470, 471, 475, 574, 581], "publicli": [491, 493, 494], "publish": [11, 395, 408, 453, 492], "pull": [379, 382, 383, 386, 387, 388, 389, 390, 391, 392, 398, 403, 404, 408, 416], "puls": 237, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 60, 64, 77, 83, 388, 398, 419, 421, 440, 443, 445, 447, 459, 464, 474, 487, 496, 506, 507, 516], "pulsar_analysi": [398, 447, 473, 474], "pulsar_phas": 516, "pulsar_phase_comput": 516, "pulsarastronomi": 516, "pulsat": 261, "pulse_stat": 473, "punch": [442, 444], "pure": [378, 395, 397, 398, 525], "purpl": 529, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 329, 353, 382, 384, 390, 393, 397, 401, 403, 404, 437, 457, 479, 486, 487, 520], "push": [378, 381, 407, 440], "put": [198, 378, 379, 381, 383, 385, 386, 389, 398, 407, 408, 414, 420, 456, 465, 485, 492, 516, 576], "pwbpl": 401, "pwd": [381, 410, 412], "pwl": [19, 20, 26, 125, 215, 217, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 278, 389, 401, 406, 449, 451, 465, 480, 487, 489, 514, 532, 533, 534, 535, 537, 538, 539, 540, 542, 544], "pwl2": 487, "pwl_decai": 465, "pwl_norm": [401, 487, 556], "pwn": [43, 478, 502, 509], "pwne": 464, "py": [16, 84, 90, 104, 124, 378, 379, 385, 392, 395, 397, 399, 407, 408, 414, 419, 421, 422, 430, 435, 439, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 500, 501, 502, 503, 516, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 576], "py310": 381, "py35": 436, "pycharm": 420, "pydant": [16, 84, 90, 104, 124, 377, 423, 442, 444], "pydantic_cor": [16, 84, 90, 104, 124], "pydanticserializationerror": [16, 84, 90, 104, 124], "pydanticundefin": [16, 84, 90, 104, 124], "pydata": 431, "pydocstyl": 379, "pyfact": [417, 435], "pyflak": 431, "pyirf": 444, "pyjok": 377, "pymc": 396, "pymotw": 576, "pypi": [395, 405, 407, 408, 410, 411], "pyplot": [19, 20, 26, 66, 67, 83, 129, 154, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 366, 371, 414, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 508, 509, 510, 516, 518, 519, 520, 522, 525, 533, 535, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569], "pyproject": 426, "pyregion": 392, "pytest": [378, 379, 381, 408, 437], "python": [11, 16, 84, 90, 104, 124, 141, 305, 346, 377, 381, 382, 383, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 404, 405, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 421, 422, 429, 431, 434, 435, 436, 437, 438, 439, 440, 443, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 504, 515, 516, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 576], "python3": [342, 411, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 540, 548, 564], "python_execut": [448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "python_vers": [448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "pytorch": 396, "pyx": [381, 408], "pyyaml": [377, 395, 418, 422], "q": [26, 83, 87, 91, 373, 477], "q58nr3na": 480, "qezkcw0a": 487, "qgzzq_uc": 475, "qol": 445, "qtabl": [87, 91, 393, 475], "quadrat": [484, 494, 502, 579], "qualiti": [202, 398, 437, 438, 443, 488, 501, 516, 574, 581], "quantifi": [444, 464, 475, 476, 489], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 168, 177, 178, 179, 181, 185, 186, 187, 188, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 214, 216, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 280, 286, 287, 288, 291, 292, 293, 294, 296, 301, 304, 305, 307, 309, 311, 312, 317, 335, 337, 338, 349, 353, 378, 379, 384, 387, 389, 392, 393, 394, 396, 401, 402, 405, 406, 420, 422, 426, 429, 430, 438, 439, 440, 448, 455, 457, 465, 466, 467, 471, 475, 476, 478, 479, 482, 483, 484, 485, 487, 491, 493, 494, 502, 508, 509, 510, 512, 516, 529, 555, 564, 566, 575, 578, 580], "quantity_support": [482, 533], "quasar": 137, "quentin": [396, 400, 401, 421, 422, 423, 424, 425, 426, 429, 431, 432, 440, 441, 442, 443, 444, 445], "queri": [394, 434, 478], "question": [345, 381, 383, 385, 386, 387, 389, 390, 391, 392, 395, 397, 402, 413, 418, 419, 437, 438, 439, 463, 502, 516, 517, 576], "questionnair": [385, 437], "quetin": 423, "quick": [83, 88, 102, 105, 109, 110, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 378, 381, 398, 408, 457, 458, 461, 463, 465, 472, 479, 482, 486, 491, 493, 494, 496, 502, 504, 513], "quickest": 379, "quickli": [378, 379, 381, 383, 394, 395, 398, 404, 408, 410, 436, 453, 461, 476, 493, 520, 576], "quicklook": 83, "quickplot": 194, "quicksort": [87, 91], "quickstart": 415, "quiescent": 542, "quit": [87, 91, 378, 406, 465], "quival": 389, "quot": [74, 278, 378, 379, 477], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 155, 190, 203, 306, 378, 379, 403, 408, 454, 462, 466, 481, 483, 491, 500, 506, 521, 525, 533, 534, 535, 539, 542], "r3": 483, "r68": [83, 112, 113, 154, 163, 166], "r70": [67, 478], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 259, 260, 477, 535, 538, 539], "r_0": [30, 33, 38, 48, 225, 236, 259, 486, 533, 535, 539], "r_1": [39, 48], "r_eval": 236, "r_exp": [36, 48], "r_in": [44, 168, 178, 259, 459, 526], "r_m": 535, "r_out": 44, "r_out_max": 168, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 141, 142, 176, 378, 379, 391, 394, 448, 453, 455, 457, 459, 463, 466, 470, 471, 473, 475, 478, 483, 485, 491, 492, 493, 494, 501, 502, 504, 516, 520, 580], "ra_pnt": 494, "ra_tru": [378, 391], "rad": [33, 83, 88, 102, 105, 109, 110, 112, 113, 114, 154, 160, 162, 163, 164, 165, 166, 176, 189, 261, 394, 431, 443, 455, 479, 482, 483, 492, 521, 522, 525, 569], "rad_axi": [102, 105, 109, 110, 114, 163, 166, 479, 482, 483, 516], "rad_di": [45, 506], "rad_index": 160, "rad_max": [82, 83, 87, 88, 159, 165, 182, 431, 440, 442, 443, 455], "rad_max_2d": [87, 165, 175, 180, 182, 455], "radec": [83, 94, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 378, 379, 482, 484, 502], "radecsi": 540, "radesysa": 540, "radi": [247, 552], "radial": [28, 30, 35, 36, 39, 40, 45, 129, 190, 194, 331, 378, 389, 397, 402, 419, 434, 436, 444, 465, 467, 483, 491, 504, 506, 522, 525], "radian": [17, 18, 21, 22, 24, 25, 27, 199, 220, 221, 225, 233, 236, 248, 250, 259, 260, 262, 264, 270, 274], "radiat": [226, 516, 538, 539, 552], "radiative_model": [247, 552], "radii": [27, 477, 492, 534], "radio": [137, 392, 484], "radiobutton": [461, 469, 484, 500, 501], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 102, 105, 109, 110, 122, 127, 128, 154, 160, 162, 163, 164, 166, 168, 176, 178, 194, 204, 206, 207, 224, 225, 233, 236, 246, 248, 250, 259, 260, 262, 264, 270, 272, 274, 303, 304, 337, 379, 392, 394, 401, 402, 419, 428, 429, 433, 443, 448, 450, 453, 454, 456, 457, 458, 459, 461, 463, 465, 466, 470, 471, 473, 475, 477, 479, 482, 483, 485, 486, 487, 488, 491, 500, 501, 502, 509, 510, 523, 525, 526, 529, 533, 534, 535, 538, 539], "radius_inn": [52, 53], "radius_max": [337, 467], "radius_min": 337, "radius_reverse_shock": [50, 53, 509], "radmax": [431, 432, 443, 444], "radmax2d": [83, 88, 159, 182, 429, 445, 455], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 63, 66, 83, 93, 122, 126, 127, 130, 132, 133, 137, 169, 226, 277, 278, 293, 294, 325, 326, 378, 384, 389, 390, 392, 396, 408, 410, 414, 415, 420, 436, 438, 443, 444, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 504, 506, 507, 511, 512, 513, 516, 519, 521, 523, 525, 526, 542, 573, 574, 575, 576, 577, 578, 581], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 104, 124, 195, 200, 224, 226, 246, 270, 271, 272, 274, 305, 356, 378, 392, 401, 402, 405, 406, 423, 440, 443, 444, 445, 466], "raise_error": [16, 84, 90, 104, 124], "raj2000": [478, 502], "ran": 491, "random": [6, 33, 42, 45, 46, 47, 87, 91, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 287, 327, 328, 329, 330, 331, 332, 333, 334, 335, 381, 390, 391, 394, 421, 433, 437, 465, 487, 516, 577, 578, 580], "random_se": 390, "random_st": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 287, 327, 328, 329, 332, 333, 334, 335, 378, 391, 456, 465, 466], "randomli": [46, 378], "randomnumb": 332, "randomst": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 287, 327, 329, 332, 333, 334, 335, 378], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 80, 83, 87, 91, 92, 100, 101, 102, 105, 109, 110, 126, 133, 150, 163, 165, 166, 179, 191, 192, 195, 197, 198, 201, 202, 204, 214, 216, 218, 219, 222, 223, 225, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 246, 247, 249, 251, 252, 253, 254, 258, 261, 263, 265, 266, 267, 268, 271, 272, 273, 275, 276, 280, 318, 330, 332, 333, 334, 371, 378, 384, 390, 391, 393, 402, 420, 425, 426, 429, 437, 438, 440, 450, 453, 455, 456, 458, 461, 462, 464, 466, 471, 472, 473, 476, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 492, 493, 500, 501, 502, 512, 514, 516, 535, 545, 574, 578], "rangl": 19, "rapid": [137, 293, 384, 387, 402, 403], "rare": [377, 378, 397, 484], "raster": [95, 194], "rate": [44, 45, 83, 88, 147, 148, 179, 186, 287, 335, 391, 414, 438, 453, 455, 473, 483, 491, 492, 494, 506, 519, 575], "rather": [118, 122, 126, 130, 133, 383, 396, 399, 437, 440, 442, 444, 445, 450, 481, 484, 502, 512, 534, 578], "ratio": [105, 110, 168, 192, 193, 194, 288, 302, 402, 448, 473, 491, 526, 575, 577, 578, 579, 581], "ravel": [192, 465], "raw": [123, 179, 502], "rbol5u": 475, "rc": [193, 194, 196, 202, 205, 206, 375, 484], "rc1": 407, "rc_context": [193, 194, 196, 202, 205, 206, 484], "rc_param": [193, 194, 196, 202, 205, 206, 484], "rcparam": 375, "rdbu": 500, "rdbu_r": [102, 105, 109, 110], "re": [87, 91, 96, 125, 126, 131, 170, 193, 194, 196, 202, 205, 206, 211, 303, 304, 371, 378, 379, 381, 383, 385, 386, 392, 393, 394, 396, 399, 400, 401, 402, 410, 412, 413, 417, 429, 431, 438, 451, 453, 454, 459, 461, 462, 463, 472, 481, 482, 486, 488, 492, 500, 502, 514, 516, 537, 576], "reach": [53, 132, 207, 383, 388, 391, 487], "reactiv": 440, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 105, 106, 109, 110, 115, 117, 118, 122, 123, 125, 127, 129, 131, 133, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 175, 193, 194, 196, 200, 201, 202, 205, 206, 211, 224, 226, 238, 246, 273, 274, 275, 279, 281, 283, 284, 341, 344, 364, 366, 371, 373, 378, 379, 381, 383, 388, 389, 390, 391, 394, 398, 400, 402, 404, 405, 406, 410, 412, 423, 426, 429, 437, 438, 440, 443, 444, 449, 453, 454, 455, 459, 461, 464, 465, 476, 479, 480, 481, 482, 487, 489, 491, 492, 493, 496, 500, 502, 513, 514, 516, 518, 519, 520, 522, 540, 570, 571, 576, 579], "read_arf": 106, "read_bkg": 106, "read_builtin": [226, 449, 542], "read_covari": [224, 246], "read_dataset": 15, "read_lazi": 431, "read_model": 15, "read_pha": 106, "read_rmf": 106, "read_xspec_model": 275, "readabl": [359, 389, 431, 454, 500], "reader": [405, 448, 456, 458, 461, 463, 466, 469, 472, 491], "readi": [388, 405, 413, 575], "readili": 398, "readm": [381, 404], "readthedoc": [13, 126, 186, 201, 211, 275, 381, 398, 420, 435, 481, 482, 491, 513, 516, 527, 529], "real": [51, 378, 381, 408, 456, 457, 459, 466, 481, 485, 512], "realis": [383, 392, 404], "realist": 406, "realiti": 449, "realiz": [384, 575], "realli": [378, 385, 392, 395, 456, 469, 481], "rearrang": 398, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 378, 383, 384, 385, 386, 389, 390, 391, 393, 395, 397, 399, 404, 437, 449, 465, 481, 489, 493, 512, 576], "reassign": [19, 20, 26, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276], "rebas": [378, 392], "rebin": [125, 145, 393, 431, 444, 471, 476, 479], "rebuild": [16, 84, 90, 104, 124, 462], "recarrai": [87, 91, 154, 164], "receiv": [396, 398, 399, 401, 403], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 388, 392, 393, 394, 395, 398, 411, 418, 432, 438, 462, 491, 493], "recip": [380, 394, 415, 429, 473, 516, 517, 575, 578], "reco": [102, 105, 109, 110, 150, 183, 378, 384, 393, 402, 439, 440, 448, 479, 483, 493, 575], "reco_exposur": [122, 445], "reco_psf": [102, 105, 109, 110, 114, 483, 493], "recogn": [448, 456, 458, 461, 463, 465, 469, 472, 491], "recognis": [389, 576], "recognit": 404, "recommend": [92, 100, 101, 180, 224, 246, 285, 317, 318, 377, 378, 379, 381, 385, 387, 395, 404, 408, 409, 411, 414, 421, 438, 453, 454, 455, 464, 479, 481, 483, 487, 492, 500, 516, 523, 528, 529, 576, 577, 580], "recomput": [125, 402, 459], "recompute_ul": 125, "recon_vers": [492, 502], "reconstruct": [83, 102, 103, 105, 108, 109, 110, 112, 113, 114, 122, 132, 133, 140, 147, 148, 150, 151, 152, 155, 165, 166, 179, 186, 378, 384, 389, 391, 426, 441, 448, 450, 453, 456, 458, 459, 461, 465, 469, 472, 479, 483, 485, 489, 493, 512, 514, 520, 521, 522, 529, 575], "recopsfmap": [159, 440, 443], "record": [83, 88, 378, 383, 384, 404, 491], "recov": 394, "rectangl": [221, 225, 233, 236, 248, 259, 260, 264, 270, 274, 338, 392, 467, 525], "rectangleskyregion": [204, 220, 221, 274, 337, 338, 392, 450, 477, 485, 525, 529], "rectangular": [467, 525, 529], "recurr": 393, "recurs": [345, 405], "red": [101, 287, 293, 368, 448, 449, 453, 456, 459, 461, 464, 477, 488, 489, 533, 534], "redesign": 387, "redistribut": 520, "redo": 473, "redshift": [19, 20, 226, 401, 502, 542], "redshift_scan": 449, "reduc": [6, 11, 15, 100, 102, 105, 109, 110, 161, 163, 166, 171, 181, 193, 194, 196, 198, 202, 205, 206, 384, 385, 387, 389, 390, 394, 397, 399, 404, 405, 410, 417, 422, 429, 438, 444, 447, 449, 450, 451, 454, 455, 456, 461, 462, 465, 469, 470, 471, 472, 475, 485, 488, 490, 493, 496, 512, 516, 526, 529, 534, 535, 574, 575, 576], "reduce_data": 394, "reduce_over_ax": [193, 194, 196, 202, 205, 206, 458, 483, 493], "reduct": [6, 11, 169, 384, 390, 391, 394, 398, 399, 400, 405, 410, 423, 425, 443, 447, 459, 463, 464, 467, 473, 479, 482, 485, 486, 488, 490, 496, 513, 516, 523, 525, 526, 574, 575], "ref": [83, 94, 102, 109, 122, 127, 133, 192, 201, 204, 224, 246, 379, 402, 457, 463, 467, 471, 478, 479, 480, 482, 484, 492, 502, 529, 564, 565, 566, 567, 568, 569, 575, 576], "ref_templ": [16, 84, 90, 104, 124], "refactor": [378, 390, 392, 393, 394, 401, 419, 420, 421, 423, 424, 425, 426, 429, 431, 433, 435, 437], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 101, 102, 104, 105, 106, 109, 110, 112, 113, 114, 123, 124, 125, 126, 128, 133, 134, 136, 137, 143, 155, 169, 170, 173, 176, 177, 180, 181, 182, 185, 186, 188, 203, 204, 205, 206, 211, 218, 219, 222, 223, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 247, 249, 251, 252, 253, 254, 258, 261, 263, 265, 266, 267, 268, 271, 273, 275, 276, 278, 287, 289, 293, 294, 295, 296, 301, 302, 332, 333, 359, 360, 361, 362, 378, 379, 384, 386, 389, 390, 392, 394, 396, 401, 402, 403, 404, 405, 408, 415, 429, 436, 437, 445, 449, 450, 451, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 483, 484, 486, 487, 489, 491, 492, 493, 500, 501, 502, 505, 512, 514, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 544, 546, 547, 548, 550, 551, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 578, 580], "referenc": [378, 575], "reference_flux": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "reference_map": 484, "reference_model": [123, 125, 134, 143, 448, 449, 457, 462, 480], "reference_model_default": [123, 125], "reference_spectral_model": [123, 125], "reference_tim": [86, 88, 102, 105, 109, 110, 197, 203, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 442, 443, 466, 472, 476, 483, 484, 571], "refit": 480, "reflect": [171, 175, 176, 177, 181, 190, 387, 392, 394, 397, 399, 410, 422, 429, 431, 434, 435, 438, 449, 450, 453, 454, 455, 463, 471, 475, 485, 524, 575], "reflected_bkg_mak": 483, "reflectedbgestim": 394, "reflectedregion": 449, "reflectedregionsbackgroundmak": [171, 176, 423, 445, 450, 453, 455, 463, 471, 475, 483], "reflectedregionsfind": [175, 181, 421, 525], "refpix": [204, 205, 206], "refresh": [87, 91], "refus": 378, "reg": [102, 105, 109, 110, 485, 487], "reg_dataset": 479, "regard": [402, 405, 453], "regardless": [87, 91], "regeard": [441, 442, 443, 444, 445], "regi": [384, 389, 390, 394], "region": [6, 27, 83, 91, 100, 102, 105, 107, 109, 110, 115, 117, 122, 123, 125, 127, 129, 132, 137, 151, 152, 158, 163, 166, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 190, 192, 193, 194, 196, 201, 202, 204, 205, 206, 208, 211, 220, 221, 224, 225, 233, 236, 246, 248, 250, 259, 260, 262, 264, 270, 272, 274, 275, 277, 288, 302, 336, 337, 338, 339, 340, 374, 375, 377, 379, 382, 384, 385, 393, 394, 395, 397, 400, 402, 410, 421, 422, 423, 425, 429, 431, 432, 434, 435, 437, 438, 440, 442, 443, 445, 449, 454, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 484, 487, 489, 491, 492, 493, 494, 500, 501, 502, 511, 512, 513, 514, 516, 523, 524, 526, 527, 528, 533, 534, 552, 574, 575, 577, 578, 579], "region_coord": 201, "region_ev": 473, "region_find": [175, 455], "region_io": 201, "region_map": [202, 206, 529], "region_map_1": 529, "region_map_2": 529, "region_mask": [83, 192, 204, 392, 453, 459, 463, 479, 483, 485, 501, 523, 525, 526], "region_nd_map": 202, "region_new": 339, "region_pix": 487, "region_weight": 204, "regionfind": [176, 177, 181], "regiongeom": [102, 105, 109, 110, 123, 127, 173, 180, 182, 183, 184, 186, 187, 202, 221, 225, 233, 236, 248, 259, 260, 262, 264, 270, 274, 392, 393, 400, 410, 425, 426, 429, 448, 450, 453, 455, 456, 463, 467, 471, 472, 473, 475, 478, 479, 480, 483, 492, 502, 512, 525, 528], "regionndmap": [26, 106, 109, 110, 132, 174, 175, 180, 182, 193, 194, 196, 201, 205, 206, 221, 225, 233, 236, 238, 248, 259, 260, 264, 270, 271, 274, 375, 392, 410, 425, 426, 429, 432, 440, 443, 466, 480, 492, 512, 528, 571], "regions_ds9": 485, "regionsfind": [175, 176, 181, 431], "regist": 487, "registri": [55, 98, 119, 159, 171, 242, 244, 256, 257, 269, 399, 406, 422, 425, 426, 429, 438, 478, 487], "regress": 381, "regul": 404, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 192, 200, 204, 387, 406, 431, 443, 469, 484, 485, 493], "regulargridinterpol": [317, 378], "regularis": 406, "regularli": [406, 494], "reichardt": 433, "reimplement": 389, "rej_sampl": 391, "reject": [382, 383, 391], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 105, 106, 110, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 203, 204, 205, 206, 259, 278, 292, 335, 393, 404, 429, 472, 476, 493, 539, 578], "rel_reduction_of_f_": 481, "relat": [11, 13, 67, 83, 85, 209, 293, 384, 386, 389, 391, 392, 395, 397, 398, 399, 404, 408, 425, 426, 438, 444, 465, 479, 487, 491, 506, 573, 578], "relative_variability_amplitud": 476, "relative_variability_error": 476, "relative_variability_signific": 476, "relativist": 552, "releas": [11, 51, 65, 95, 380, 382, 383, 385, 386, 392, 395, 396, 405, 409, 411, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 450, 453, 454, 462, 470, 471, 475, 491, 493, 494, 500, 501, 504, 516, 518, 519, 520, 522], "relev": [123, 286, 288, 361, 378, 384, 393, 398, 402, 407, 453, 454, 457, 470, 471, 472, 475, 486, 488, 491, 493, 494, 500, 501, 512, 513, 580], "reli": [123, 378, 383, 384, 388, 389, 393, 397, 402, 403, 421, 426, 429, 440, 451, 461, 485, 504, 578], "reliabl": [381, 411, 459, 481, 485, 577], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 383, 384, 385, 386, 391, 395, 404, 419, 438, 455, 486, 522], "remaind": 493, "remark": 455, "rememb": [378, 392, 481, 496, 576], "remi": [400, 401, 421, 422, 423, 424, 425, 426, 429, 440, 441, 442, 443, 444, 445], "remind": [198, 404, 457, 463, 480], "remnant": [28, 52, 450, 464, 487, 507], "remot": 381, "remov": [13, 87, 91, 92, 96, 100, 163, 166, 178, 191, 192, 197, 200, 201, 204, 206, 246, 304, 381, 385, 386, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 409, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 453, 459, 467, 473, 479, 485, 488, 491, 492, 505, 516, 525], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 381, 388, 389, 397, 398, 401, 417, 420, 422, 423, 424, 425, 429, 439, 440, 443, 576], "rename_ax": [191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 440], "rename_column": [87, 91, 125], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 356, 378, 379, 386, 437], "renorm": [459, 523], "renormalis": 178, "reoptim": [126, 130, 131, 211, 419, 449, 467, 470, 480, 481, 489, 500], "reorder": 445, "reorder_ax": [193, 194, 196, 202, 205, 206, 443], "reorgan": 429, "reorganis": 398, "repeat": [379, 461, 493], "repl": 378, "replac": [15, 16, 84, 87, 90, 91, 100, 102, 104, 105, 109, 110, 124, 151, 152, 158, 163, 191, 192, 194, 197, 201, 202, 204, 206, 272, 284, 378, 388, 389, 392, 396, 399, 405, 411, 420, 421, 423, 425, 426, 443, 444, 445, 465, 473], "replace_axi": [191, 192, 201, 204], "replace_column": [87, 91], "repo": [379, 386, 407, 408, 417, 430], "report": [87, 381, 394, 407, 408, 417, 431, 432, 437], "repositori": [87, 91, 378, 381, 383, 386, 388, 404, 407, 429, 438, 465, 494], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 87, 90, 91, 102, 104, 105, 109, 110, 124, 192, 194, 196, 198, 199, 201, 203, 262, 305, 313, 323, 378, 389, 390, 391, 392, 396, 399, 400, 401, 402, 419, 443, 449, 466, 467, 478, 480, 481, 483, 484, 485, 487, 492, 502, 511, 512, 514, 518, 519, 520, 522, 528, 573, 574, 575, 580], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 104, 124, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 378, 392, 405, 419, 421, 443, 451, 478, 484, 487, 528], "reprocess": 384, "reproduc": [94, 101, 125, 379, 394, 395, 396, 398, 404, 405, 409, 411, 438, 483], "reproject": [179, 193, 194, 196, 202, 205, 206, 374, 378, 384, 392, 395, 402, 423, 430, 438, 440, 444, 484, 485], "reproject_by_imag": [193, 194, 196, 202, 205, 206, 444], "reproject_to_geom": [193, 194, 196, 202, 205, 206, 440], "request": [85, 123, 125, 379, 382, 383, 385, 386, 387, 388, 389, 390, 392, 398, 402, 403, 404, 406, 408, 416, 465, 480, 485, 514], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 83, 84, 85, 87, 88, 90, 91, 95, 102, 104, 105, 109, 110, 111, 116, 124, 125, 128, 133, 147, 148, 150, 153, 154, 155, 160, 162, 165, 170, 193, 194, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 305, 353, 357, 358, 376, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 400, 401, 402, 403, 404, 406, 407, 409, 411, 417, 422, 423, 424, 425, 430, 431, 433, 434, 435, 436, 439, 440, 441, 449, 450, 455, 459, 462, 471, 472, 473, 475, 476, 479, 482, 484, 485, 487, 491, 501, 514, 516, 529], "require_ev": 82, "required_ax": [147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 482], "required_hdu": 432, "required_irf": [16, 82, 454, 455, 458, 459, 461, 500], "required_nam": [195, 197, 198, 203], "required_paramet": [154, 162, 164], "rerun": [393, 475], "resampl": [102, 105, 109, 110, 125, 145, 146, 151, 191, 192, 193, 194, 195, 196, 197, 201, 202, 204, 205, 206, 373, 429, 431, 476, 516], "resample_axi": [125, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 373, 426, 471, 476], "resample_energy_axi": [102, 105, 109, 110, 151, 426, 431, 479], "resample_energy_edg": [453, 516], "resampled_energy_edg": 146, "resampled_map": [193, 194, 196, 202, 205, 206], "rescal": 483, "research": [394, 404], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 232, 272, 379, 426], "reset_data_cach": [102, 105, 109, 110], "reset_to_default": 232, "reshap": [193, 194, 196, 202, 205, 206, 448, 466, 482, 484], "resid": [400, 487], "residu": [72, 101, 102, 105, 109, 110, 170, 389, 390, 394, 421, 426, 432, 439, 445, 459, 479, 481, 492, 512, 525, 575], "resolut": [52, 150, 151, 155, 192, 204, 387, 389, 391, 392, 437, 443, 445, 478, 492], "resolv": [16, 84, 90, 104, 124, 379, 381, 388, 392, 393, 400, 401, 413, 419, 438, 445, 447, 471, 474, 496, 525], "resort": 458, "resourc": [437, 496], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 90, 91, 104, 106, 124, 125, 137, 192, 194, 204, 206, 285, 378, 388, 393, 404, 406, 426, 445, 457, 459, 472, 480, 484, 485, 493, 514, 529, 579], "respond": 404, "respons": [6, 108, 150, 151, 152, 155, 157, 158, 176, 378, 384, 385, 387, 389, 390, 391, 393, 394, 402, 404, 410, 436, 437, 438, 439, 450, 453, 454, 455, 456, 469, 472, 482, 483, 486, 491, 493, 494, 496, 500, 501, 512, 513, 518, 520, 522, 574, 575], "rest": [26, 381, 395, 397, 478, 511], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 486], "restore_statu": [215, 217, 224, 246, 489], "restore_valu": [215, 217, 224, 246], "restrict": [87, 91, 392, 461, 479, 485], "restructur": [379, 393, 394, 395, 397, 399, 405, 408, 423, 429, 430, 431, 432, 434, 443], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 101, 102, 104, 105, 109, 110, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 141, 143, 144, 155, 161, 163, 166, 179, 183, 184, 189, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 210, 211, 212, 213, 224, 246, 274, 284, 287, 305, 371, 377, 378, 379, 381, 383, 385, 387, 388, 389, 390, 391, 394, 396, 397, 400, 404, 406, 411, 414, 421, 429, 431, 432, 437, 439, 443, 444, 445, 449, 451, 453, 455, 456, 461, 463, 465, 466, 469, 471, 472, 473, 476, 478, 479, 481, 484, 485, 488, 489, 492, 493, 494, 500, 501, 511, 514, 516, 529, 564, 575, 577, 578], "result1": 449, "result2": 486, "result_ecpl": 451, "result_joint": [450, 453, 461], "result_list": 371, "result_log_parabola": 451, "result_minuit": 481, "result_pwl": 451, "result_scipi": 481, "result_stack": 453, "results_joint": 462, "results_prior": 489, "results_simplex": 481, "results_t": 464, "retain": [478, 529], "retriev": [87, 91, 402, 404, 450, 451, 453, 484, 487, 488, 493, 501, 513, 528, 529], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 301, 302, 303, 304, 305, 307, 309, 311, 312, 316, 318, 323, 327, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 348, 349, 350, 359, 360, 361, 362, 363, 366, 368, 369, 371, 373, 374, 384, 388, 389, 390, 391, 392, 393, 401, 402, 405, 406, 422, 423, 426, 429, 432, 438, 440, 445, 453, 455, 459, 463, 467, 471, 472, 475, 478, 479, 480, 481, 483, 484, 485, 487, 489, 502, 506, 528, 529, 561, 578], "return_delta": 335, "return_diff": 335, "return_typ": 90, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [394, 426, 444], "reval": 535, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 197, 246, 484, 509], "reverse_lon_radec": 156, "review": [381, 386, 387, 388, 391, 392, 394, 395, 397, 398, 399, 401, 402, 404, 406, 439, 440, 528], "revis": 398, "revisit": 226, "rework": 424, "rewrit": [384, 387, 394, 424, 434, 435, 437, 438, 439, 576], "rewritten": [436, 439], "rf": 477, "rgb": [373, 375, 443, 448, 453], "rglob": [82, 465, 491], "rhe": 182, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [378, 394], "rid": 384, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 102, 109, 123, 125, 133, 153, 230, 234, 253, 266, 289, 295, 366, 378, 392, 401, 404, 457, 463, 465, 470, 472, 491, 533, 534, 535, 542, 543, 546, 547, 549, 550, 554, 557, 558, 559, 560, 564, 565, 566, 568, 576, 577, 578, 579], "rightarrow": [539, 579], "rigid": 383, "ring": [105, 122, 168, 171, 178, 192, 193, 194, 384, 387, 394, 397, 410, 419, 423, 425, 435, 436, 437, 438, 447, 460, 464, 485, 496, 515, 524, 527, 575], "ring2dkernel": [168, 178], "ring_background": [447, 459, 460], "ring_bkg_mak": 526, "ring_mak": 459, "ringbackgroundestim": [384, 437], "ringbackgroundmak": [168, 171, 423, 459, 483, 526], "rint": 445, "rise": [137, 237, 476, 566], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381, 404], "rm": [150, 151, 155, 401, 455, 481, 518, 520, 521, 522, 535, 564, 565, 566, 567, 568, 569], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [106, 107, 110, 150, 151, 152, 435, 453], "rmf_ob": 106, "rmffile": 106, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 287, 327, 329, 332, 333, 334, 335, 378], "roadmap": [382, 385, 394, 403, 418, 439], "roberta": [437, 438], "robust": [378, 438], "roellinghoff": 445, "roi": [67, 394, 478, 494, 575], "roi_max": 394, "role": [437, 483], "rolf": 417, "rolk": 575, "rolke2005": [575, 578], "roll": 492, "room": 388, "root": [19, 20, 26, 123, 124, 133, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 297, 300, 378, 396, 429, 457, 504, 514, 576, 578], "rosillo": 440, "rotang": 466, "rotat": [51, 54, 176, 177, 181, 186, 225, 233, 236, 466, 525, 533, 534], "rough": [72, 394], "roughli": [118, 381, 386, 392, 394, 397, 398, 436, 459], "round": [87, 91, 193, 194, 196, 198, 202, 205, 206, 453, 528], "round_to_edg": [191, 192, 201, 204], "round_trip": [16, 84, 90, 104, 124], "routin": 417, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 141, 150, 313, 349, 372, 393, 402, 405, 440, 443, 453, 456, 466, 467, 475, 478, 481, 484, 491, 493, 494, 502, 511], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 478], "row_label": 372, "row_specifi": [83, 87, 91], "royalblu": 473, "rpovid": 393, "rspec": [67, 478], "rst": [381, 383, 398, 404, 407, 408, 424, 429], "rtbvc13a": 461, "rtd": 438, "rtol": [133, 353, 378], "rtol_ax": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206], "rtol_wc": 204, "ruben": 437, "rub\u00e9n": 437, "ruiz": [386, 394, 398, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 437, 438, 439], "rule": [87, 91, 262, 280, 316, 404, 484, 528], "run": [16, 82, 83, 84, 88, 90, 93, 101, 103, 104, 108, 118, 120, 121, 122, 124, 126, 127, 129, 130, 131, 132, 133, 141, 142, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 201, 204, 211, 325, 326, 352, 371, 377, 378, 379, 385, 386, 388, 391, 393, 394, 395, 398, 400, 402, 406, 407, 408, 409, 414, 420, 421, 424, 425, 436, 438, 439, 443, 445, 448, 449, 450, 451, 456, 457, 458, 459, 461, 462, 463, 465, 469, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 501, 502, 512, 513, 514, 516, 521, 523, 525, 526, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "run_fit": [15, 454, 458, 500], "run_id": [492, 502], "run_multiprocess": 516, "runner": [16, 342, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 540, 542, 548, 564, 570, 571], "runtim": [387, 405], "runtimewarn": [455, 459, 465, 475, 494, 564], "rwzpqtzh": 475, "rx": 450, "rxj": 450, "rxj1713_2016_250gev": 540, "r\u00e9gi": [384, 387, 388, 392, 393, 395, 397, 399, 400, 401, 402, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "r\u00e9my": [396, 429, 431, 432, 440], "s0167947313003204": [135, 144], "s180": 293, "s2": 273, "s3": 273, "s_0": 516, "s_1": 516, "safari": [87, 91], "safe": [99, 101, 102, 105, 109, 110, 151, 152, 158, 163, 166, 171, 179, 378, 390, 392, 404, 423, 425, 426, 440, 441, 442, 443, 445, 450, 453, 479, 485, 501, 512, 574], "safe_mask": [16, 102, 109, 454, 458, 459, 461, 500], "safe_mask_mak": [169, 450, 453, 473, 483, 493, 523, 525, 526], "safe_mask_mask": [455, 463, 471, 475, 483], "safemaskconfig": 16, "safemaskmak": [169, 171, 399, 423, 424, 429, 431, 432, 444, 450, 453, 455, 463, 469, 471, 473, 475, 483, 485, 493, 500, 501, 523, 524, 525, 526], "safeti": 404, "sagittariu": [33, 38], "saha": 437, "sai": [74, 383, 397, 576], "said": [378, 383, 385, 493, 494, 576], "sake": [465, 481], "saldana": [226, 227, 443, 449, 542], "saldana21": 542, "samantha": 445, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 95, 100, 102, 105, 106, 109, 110, 122, 133, 134, 135, 141, 142, 143, 144, 154, 155, 161, 162, 163, 164, 166, 167, 169, 190, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 278, 287, 293, 371, 378, 381, 386, 388, 390, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 410, 411, 421, 422, 426, 429, 443, 451, 454, 455, 456, 461, 462, 465, 469, 470, 471, 473, 478, 479, 484, 485, 486, 487, 488, 489, 492, 493, 496, 500, 512, 513, 514, 520, 528, 529, 576], "sampl": [47, 93, 103, 108, 133, 136, 152, 154, 160, 162, 163, 164, 166, 193, 194, 196, 202, 204, 205, 206, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 285, 287, 296, 318, 327, 332, 333, 334, 335, 382, 390, 392, 393, 396, 398, 410, 417, 419, 421, 422, 425, 431, 438, 440, 443, 444, 445, 447, 455, 468, 476, 479, 481, 496, 516], "sample_axi": 327, "sample_background": [103, 108, 423], "sample_coord": [152, 163, 166, 193, 194, 196, 202, 205, 206, 423, 425, 440], "sample_edisp": [103, 108], "sample_powerlaw": 397, "sample_psf": [103, 108], "sample_sourc": [103, 108], "sample_spher": [433, 580], "sample_tim": [223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 429, 440, 445], "sampler": [103, 327, 387, 391, 425, 429, 445, 465], "sampler_kwarg": 93, "saniti": 437, "santiago": 445, "satisfi": [146, 170, 192, 193, 194, 305, 486, 516], "save": [15, 19, 20, 26, 100, 133, 208, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 378, 386, 394, 402, 406, 449, 461, 462, 465, 481, 485, 486, 493, 513], "savefig": [356, 414], "savez": 208, "saw": 415, "sbpl": [263, 401, 487], "sc": [87, 91], "scalar": [87, 91, 161, 192, 193, 194, 196, 202, 205, 206, 305, 397, 431, 442, 444, 484, 528], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 104, 105, 110, 118, 124, 126, 127, 130, 154, 170, 198, 202, 203, 204, 206, 214, 216, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 273, 274, 275, 282, 285, 304, 317, 318, 319, 335, 359, 360, 361, 371, 379, 387, 392, 393, 396, 401, 424, 429, 430, 438, 441, 442, 443, 445, 454, 457, 466, 467, 470, 471, 472, 476, 477, 478, 480, 482, 483, 484, 487, 488, 489, 491, 500, 502, 504, 542, 563, 564, 565, 566, 567, 568, 569, 570, 571], "scale10": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 406, 552], "scale_method": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 406, 552], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 477], "scaled_featur": 304, "scaled_features_irf": [303, 304, 488], "scaledregulargridinterpol": [68, 226, 275, 424, 439], "scalespectralmodel": [126, 127, 130, 257, 401, 487], "scan": [19, 20, 95, 123, 125, 126, 127, 130, 131, 211, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 393, 402, 429, 467, 471, 480, 489, 514, 516], "scan_max": [19, 20, 126, 130, 133, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 449, 471, 480, 481], "scan_min": [19, 20, 126, 130, 133, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 449, 480, 481], "scan_n_sigma": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 481], "scan_n_valu": [19, 20, 126, 130, 131, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 449, 481, 489], "scan_prior": 489, "scan_valu": [19, 20, 211, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 467, 481], "scargl": [393, 437, 476], "scatter": [224, 246, 399, 457, 463, 475, 533, 534], "scenario": [87, 91, 383, 390, 400, 410, 480, 484, 487, 505, 577], "scengin": [87, 91], "schedul": 387, "schema": [15, 16, 84, 90, 104, 124, 394, 397], "schema_gener": [16, 84, 90, 104, 124], "schema_json": [16, 84, 90, 104, 124], "scheme": [16, 84, 90, 101, 104, 106, 107, 124, 192, 193, 194, 203, 238, 378, 384, 388, 390, 393, 400, 401, 402, 403, 405, 422, 429, 440, 444, 466, 482, 484, 487, 516, 521, 527, 528, 530], "schiavo": 445, "school": 404, "scienc": [135, 144, 193, 194, 196, 205, 206, 385, 387, 391, 394, 395, 398, 404, 415, 437, 438, 456, 462, 472, 484, 487, 488, 491, 492, 496, 504, 516, 550, 575, 576], "sciencedirect": [135, 144], "scientif": [379, 385, 401, 404, 411], "scientist": 491, "scikit": [141, 378, 392, 395, 398, 438, 485], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 206, 211, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 273, 275, 303, 317, 358, 371, 377, 378, 381, 387, 392, 395, 396, 398, 404, 415, 419, 420, 421, 422, 434, 435, 436, 439, 441, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 573, 578], "scipy_mvn": 209, "scipy_opt": 481, "scitool": 555, "scope": [391, 392, 393, 394, 397, 405, 505], "scratch": [153, 378, 388, 392, 408, 461, 485], "screen": [87, 91, 484, 502], "script": [6, 87, 91, 125, 341, 342, 343, 344, 345, 346, 347, 379, 384, 385, 387, 389, 392, 394, 397, 398, 404, 407, 408, 418, 419, 420, 421, 429, 430, 434, 437, 438, 439, 440, 444, 447, 453, 457, 459, 461, 462, 463, 464, 465, 467, 469, 471, 472, 475, 477, 478, 479, 480, 481, 483, 486, 489, 492, 497, 500, 515, 516, 576], "scriptabl": 405, "scutum": [33, 38], "sdc": 491, "sdist": 408, "seaborn": 516, "search": [87, 91, 286, 288, 342, 378, 379, 414, 437, 438, 454, 457, 463, 464, 477, 478, 488, 500, 501, 502, 504, 516, 576], "season": 398, "sebastian": 429, "sec": [54, 83, 94, 100, 130, 335], "second": [42, 58, 83, 86, 87, 88, 91, 136, 150, 273, 296, 335, 338, 355, 359, 362, 367, 379, 386, 388, 390, 392, 396, 402, 404, 408, 423, 442, 453, 454, 457, 459, 461, 463, 464, 465, 466, 467, 469, 471, 472, 475, 477, 479, 481, 483, 484, 486, 489, 491, 496, 500, 511, 577, 580], "secpl": [266, 267, 268, 401, 487], "section": [19, 87, 91, 287, 289, 295, 378, 379, 381, 383, 392, 394, 395, 397, 401, 404, 408, 426, 439, 456, 461, 465, 466, 469, 472, 478, 480, 481, 485, 486, 487, 502, 505, 516, 529, 574, 576, 580], "secur": 485, "sed": [119, 122, 123, 124, 125, 127, 133, 202, 226, 377, 394, 396, 402, 410, 417, 436, 451, 457, 467, 471, 478, 479, 480, 500, 502, 575], "sed_fit": [447, 451, 452], "sed_fitting_gammacat_fermi": 398, "sed_typ": [19, 20, 26, 123, 124, 125, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 429, 448, 449, 451, 453, 454, 455, 462, 463, 467, 470, 471, 472, 478, 480, 502, 514, 516, 552, 575], "sed_type_init": [71, 74, 75, 78, 123, 124, 125], "sed_type_plot_default": [123, 125], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 510], "sedov_taylor_end": [52, 53, 510], "seds_20230803": 64, "sedtypeenum": 124, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 105, 109, 110, 118, 120, 122, 125, 126, 127, 130, 132, 133, 135, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 169, 176, 178, 179, 186, 191, 192, 194, 196, 198, 199, 201, 204, 206, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 271, 272, 273, 274, 275, 279, 289, 295, 298, 299, 302, 305, 313, 329, 345, 368, 369, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 434, 435, 436, 437, 438, 439, 440, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 496, 500, 501, 502, 504, 512, 513, 516, 526, 527, 529, 555, 559, 560, 573, 575, 576, 577, 578, 580], "seed": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 235, 237, 238, 239, 247, 254, 261, 273, 276, 287, 327, 328, 329, 332, 333, 334, 335, 378, 437, 465, 552], "seed_photon_field": [247, 552], "seem": [378, 385, 386, 389, 395, 399, 504], "seen": [378, 392, 399, 450, 457, 462, 471, 484, 487, 492], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 102, 105, 109, 110, 122, 173, 180, 193, 194, 195, 196, 198, 203, 205, 206, 215, 217, 224, 246, 262, 272, 284, 374, 375, 388, 390, 391, 392, 393, 394, 398, 400, 402, 405, 410, 412, 418, 421, 429, 433, 448, 453, 455, 456, 458, 459, 461, 462, 464, 465, 466, 469, 472, 473, 479, 480, 481, 483, 484, 485, 488, 491, 493, 494, 496, 502, 514, 516, 520, 521, 525, 574, 576], "select_energi": [83, 513], "select_from_geom": [224, 246], "select_map_mask": 419, "select_mask": [83, 224, 246, 429, 486], "select_nested_model": [443, 445], "select_obs_id": [91, 463], "select_observ": [91, 96, 394, 471, 475, 488, 501, 516], "select_offset": [83, 465, 494, 513], "select_paramet": [83, 89, 473, 513], "select_phas": 388, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 224, 246, 392, 421, 429, 465, 466, 473, 486, 502, 513], "select_row_subset": 83, "select_sky_box": 392, "select_sky_circl": [91, 392], "select_tim": [83, 86, 88, 92, 100, 388, 402, 423, 466, 471, 475, 513], "select_time_rang": 91, "selected_energi": 513, "selected_ev": 83, "selected_id": 513, "selected_obs_t": [91, 488, 501], "selected_offset": 513, "selected_region": 513, "selected_tim": 513, "selection_al": [118, 133], "selection_mask": [224, 246, 486], "selection_opt": [16, 118, 120, 121, 122, 126, 127, 129, 130, 131, 132, 133, 429, 445, 449, 453, 454, 457, 458, 459, 461, 462, 463, 467, 470, 471, 472, 473, 480, 485, 493, 500], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [461, 469, 484, 500, 501], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 104, 123, 124, 125, 201, 202, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 262, 263, 265, 266, 267, 268, 271, 275, 378, 379, 389, 390, 392, 395, 401, 402, 405, 406, 425, 459, 484, 487], "semant": [392, 403], "semi": 225, "semiaxi": [225, 233, 236, 533, 534, 535], "semilogi": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 448, 466], "semimajor": 478, "semiminor": 478, "semver": 403, "send": 407, "sens": [378, 385, 388, 392, 394, 397, 398, 399, 459], "sensibl": 488, "sensit": [119, 122, 123, 124, 125, 132, 278, 391, 398, 424, 426, 436, 437, 443, 444, 447, 452, 469, 491, 496, 504, 521], "sensitivity_estim": 448, "sensitivity_t": 448, "sensitivityestim": [119, 418, 424, 448], "sent": 383, "sentenc": [383, 398, 404], "sep": [201, 387, 395, 401, 416, 487], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 192, 201, 204, 301, 367, 378, 379, 384, 385, 386, 387, 390, 391, 392, 393, 394, 397, 398, 399, 400, 425, 429, 435, 437, 438, 442, 443, 456, 459, 461, 463, 469, 472, 478, 486, 487, 488, 505, 513, 521, 522, 533, 534, 538, 539, 552, 575], "septemb": [387, 395, 397, 398, 403], "sequenc": [87, 91, 92, 100, 102, 109, 147, 148, 149, 150, 152, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 215, 224, 246, 305, 408], "sequenti": [384, 453, 501], "seri": [87, 91, 125, 287, 292, 335, 387, 392, 393, 429, 445, 476], "serial": [16, 84, 87, 90, 91, 99, 100, 101, 102, 104, 105, 109, 110, 124, 384, 389, 393, 394, 399, 402, 422, 425, 429, 431, 438, 440, 441, 442, 443, 444, 484, 487, 489, 504], "serialis": [20, 102, 105, 109, 110, 218, 219, 222, 224, 226, 228, 229, 230, 232, 234, 238, 240, 241, 243, 245, 246, 247, 249, 251, 252, 253, 255, 258, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 390, 392, 394, 397, 399, 400, 401, 421, 423, 425, 429, 434, 437, 439, 440, 442, 443, 444, 489, 500, 516, 529, 571], "serializ": [16, 84, 90, 104, 124], "serialize_as_ani": [16, 84, 90, 104, 124], "serialize_method": [87, 91], "serializiaton": 390, "serilis": [26, 220, 221, 223, 225, 231, 233, 235, 236, 237, 239, 248, 250, 254, 259, 260, 261, 262, 264, 271, 274, 276], "sersic": 401, "sersic2d": 401, "sersicspatialmodel": 401, "serv": [87, 91, 378, 383, 390, 394, 402, 408, 431, 477, 520], "server": [400, 410, 412, 496], "servic": 437, "session": [394, 404, 515], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 120, 122, 123, 124, 125, 126, 127, 129, 130, 133, 135, 144, 150, 152, 163, 166, 169, 170, 173, 179, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 211, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 273, 274, 275, 284, 296, 325, 327, 378, 379, 384, 387, 388, 390, 391, 393, 394, 395, 396, 398, 402, 403, 404, 405, 406, 408, 410, 412, 425, 431, 433, 435, 437, 440, 443, 444, 445, 448, 449, 450, 453, 455, 456, 457, 458, 461, 463, 464, 465, 466, 467, 470, 471, 473, 478, 479, 480, 481, 483, 485, 487, 488, 489, 491, 493, 494, 496, 501, 504, 512, 513, 516, 525, 527, 528, 529, 552, 573, 576, 579, 580], "set_by_coord": [193, 194, 196, 202, 205, 206, 484, 528], "set_by_idx": [193, 194, 196, 202, 205, 206, 484, 528], "set_by_pix": [193, 194, 196, 202, 205, 206, 528], "set_label": 475, "set_log": 16, "set_model": [15, 400, 454, 458, 470, 500], "set_models_paramet": 400, "set_parameter_factor": [215, 217], "set_parameters_bound": [224, 246], "set_prior": [246, 406], "set_prop_cycl": 448, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 209, "set_titl": [449, 450, 453, 457, 459, 463, 473, 477, 481, 482, 483, 486, 525, 535, 539, 542], "set_unit": [451, 480, 516], "set_xlabel": [448, 449, 450, 453, 456, 473, 475, 481, 488, 489], "set_xlim": [451, 453, 454, 462, 473, 518, 542], "set_xscal": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "set_xtick": [535, 539], "set_ylabel": [448, 449, 450, 453, 467, 473, 475, 477, 481, 488, 542], "set_ylim": [448, 451, 453, 454, 455, 470, 473, 518, 542], "set_yscal": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 467, 477, 518], "set_ytick": [535, 539], "setdefault": 200, "seterr": 378, "setlevel": 463, "setter": [379, 406, 423, 429, 479], "settl": 404, "setup": [13, 380, 381, 382, 385, 390, 391, 395, 398, 406, 435, 439, 496, 576], "setuptool": [430, 576], "sever": [87, 91, 175, 383, 384, 385, 392, 393, 394, 397, 402, 405, 423, 424, 425, 429, 432, 441, 442, 443, 456, 462, 478, 491, 492, 493, 516, 576, 578], "seyfert": 293, "sf": [301, 578], "sgr": 502, "shade": [194, 202, 206, 481, 574], "shall": 381, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 101, 102, 105, 109, 110, 111, 116, 122, 123, 127, 128, 133, 140, 141, 142, 148, 150, 153, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 209, 236, 285, 305, 318, 334, 389, 392, 396, 427, 442, 445, 451, 453, 455, 457, 458, 463, 466, 467, 471, 475, 476, 478, 479, 480, 482, 483, 484, 485, 487, 491, 492, 502, 514, 528, 529, 530, 535, 539], "shape_ax": [192, 204], "share": [193, 194, 196, 200, 202, 205, 206, 378, 383, 390, 393, 397, 400, 411, 429, 431, 443, 461, 462, 485, 486, 491, 516, 576], "sharepoint": 491, "sharp": [237, 368, 369, 533], "she": [388, 393], "shear": 392, "sheet": [413, 516], "shell": [52, 53, 80, 259, 260, 389, 394, 401, 410, 412, 447, 487, 530, 539, 541, 576], "shell2": [259, 447, 487, 530, 541], "shell2d": 52, "shell2spatialmodel": [256, 260, 487, 539], "shellspatialmodel": [80, 256, 259, 401, 429, 487, 538], "sherpa": [107, 110, 150, 197, 198, 201, 202, 211, 289, 295, 377, 378, 387, 395, 396, 398, 399, 409, 410, 412, 419, 433, 434, 435, 436, 438, 445, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 529, 550, 577], "sherpa_opt": 481, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 274, 414, 445], "shim": 385, "shini": 363, "ship": [385, 386, 395, 418, 436, 456, 469, 473, 487, 516], "shock": [50, 52, 53, 509], "short": [378, 379, 382, 383, 387, 392, 395, 398, 401, 404, 426, 471, 476, 492, 516, 517, 575, 578, 581], "short_observ": [471, 475], "shortcut": [82, 414, 431], "shorten": 429, "shorter": [293, 378, 379, 392, 398, 403, 426, 456, 471, 487, 576], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 102, 104, 105, 108, 109, 110, 113, 115, 117, 123, 124, 125, 126, 130, 133, 136, 137, 138, 139, 145, 151, 152, 155, 161, 163, 166, 178, 183, 184, 189, 191, 192, 193, 194, 196, 198, 200, 201, 202, 204, 205, 206, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 305, 353, 367, 368, 369, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 403, 404, 405, 407, 408, 410, 412, 413, 414, 419, 421, 443, 455, 461, 464, 465, 466, 472, 473, 479, 481, 482, 483, 484, 485, 486, 487, 489, 491, 493, 512, 514, 516, 521, 523, 528, 576, 577, 579, 580], "shoulder": 277, "shouldn": [83, 378, 381], "show": [11, 82, 87, 91, 127, 128, 129, 154, 173, 238, 375, 378, 379, 381, 390, 392, 393, 397, 398, 406, 408, 418, 419, 423, 431, 436, 437, 438, 443, 444, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 496, 500, 501, 502, 508, 509, 510, 516, 518, 519, 520, 522, 523, 525, 527, 533, 542, 561, 574, 576, 578, 581], "show_dtyp": [87, 91], "show_in_brows": [87, 91, 463], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 516, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 489, "shower": [433, 491, 521], "shown": [19, 20, 26, 83, 161, 201, 202, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 373, 378, 385, 395, 396, 397, 405, 406, 408, 423, 425, 450, 453, 457, 461, 463, 464, 465, 466, 471, 472, 473, 476, 483, 486, 487, 488, 489, 491, 501, 513], "showwarn": 378, "si": [83, 192, 201, 204, 224, 246, 277, 529], "side": [204, 206, 286, 288, 378, 392], "sider": 580, "sidereal_tim": 379, "siejkowski": 438, "sig": [371, 577, 578, 579], "sight": 504, "sigma": [19, 20, 30, 32, 48, 49, 122, 123, 124, 125, 126, 130, 131, 133, 141, 142, 150, 151, 155, 161, 162, 163, 166, 209, 211, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 284, 286, 288, 294, 401, 406, 449, 457, 463, 464, 469, 470, 476, 480, 481, 485, 487, 489, 500, 514, 520, 534, 549, 565, 578], "sigma1": 31, "sigma2": 31, "sigma_": [209, 534], "sigma_1": [31, 49, 154, 482], "sigma_10tev": [401, 487], "sigma_1tev": [401, 487], "sigma_2": [31, 49, 154, 482], "sigma_3": [154, 482], "sigma_err": 464, "sigma_gauss": 236, "sigma_laplac": 236, "sigma_m": 534, "sigma_nod": 487, "sigma_to_t": 578, "sigmav": 504, "sign": [214, 216, 286, 288, 381, 404, 425, 440, 514, 578], "signal": [83, 102, 105, 108, 109, 110, 178, 206, 261, 286, 288, 302, 402, 448, 453, 454, 459, 462, 470, 485, 500, 504, 519, 523, 525, 575, 577, 578, 579], "signif_avg": 502, "signific": [77, 118, 122, 123, 124, 125, 132, 133, 135, 144, 145, 284, 286, 288, 292, 368, 369, 376, 383, 384, 385, 386, 393, 394, 398, 399, 402, 404, 425, 426, 434, 437, 438, 443, 444, 445, 447, 448, 453, 454, 460, 461, 462, 463, 464, 470, 473, 475, 476, 478, 480, 481, 493, 496, 500, 502, 514, 516, 574, 575, 576], "significance_lima": 425, "significance_map": [459, 461], "significance_map_off": 459, "significance_mask": 485, "significance_mask_inv": 485, "significancemapestim": 425, "significantli": [429, 449, 465, 491], "signoff": 381, "silent": [440, 445], "silicon": [410, 412], "silvia": 421, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 369, 378, 381, 390, 391, 392, 393, 394, 397, 398, 399, 402, 429, 443, 455, 476, 480, 484, 488, 489, 502, 512, 520, 576], "similarli": [384, 386, 402, 405, 429, 478, 481, 482, 484, 485, 487, 529], "simlat": 287, "simon": [442, 443, 444], "simpifi": 387, "simpl": [50, 52, 141, 221, 225, 233, 236, 248, 259, 260, 264, 270, 274, 277, 378, 379, 390, 391, 392, 393, 394, 397, 402, 405, 406, 419, 429, 433, 437, 438, 443, 448, 450, 451, 453, 454, 455, 456, 458, 461, 473, 475, 476, 480, 481, 484, 485, 488, 494, 500, 501, 502, 506, 516, 574, 575, 576], "simple_norm": 206, "simple_rebin_lc": 393, "simplefilt": 516, "simpler": [181, 386, 391, 392, 400], "simplest": [448, 453, 476], "simplex": [211, 481], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 170, 211, 215, 217, 378, 392, 393, 402, 410, 411, 412, 440, 443, 448, 449, 450, 463, 479, 485, 486, 487, 502, 529, 576, 578], "simplic": [462, 465, 481, 487, 489, 492], "simplif": [389, 401, 440], "simplifi": [133, 200, 385, 387, 389, 396, 402, 419, 422, 423, 424, 426, 429, 433, 440, 449, 451, 457, 521, 579], "simu": [469, 472, 489], "simul": [45, 83, 88, 93, 102, 105, 108, 109, 110, 113, 152, 163, 166, 287, 335, 388, 391, 394, 398, 405, 406, 410, 417, 421, 423, 425, 431, 434, 436, 437, 438, 443, 444, 445, 447, 452, 458, 461, 463, 468, 473, 474, 486, 489, 491, 496, 506, 521, 574], "simulate_3d": [398, 438, 447, 468, 469], "simulate_dataset": [419, 423, 424], "simulate_observ": 93, "simulated_d": 455, "simulated_data": 93, "simulated_model": 455, "simultan": [406, 472, 479, 487, 489, 512], "sin": [533, 534, 535, 569], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 87, 91, 194, 204, 353, 378, 379, 384, 388, 392, 394, 395, 396, 397, 398, 402, 404, 405, 406, 408, 429, 439, 440, 441, 442, 443, 444, 445, 449, 455, 459, 461, 471, 472, 475, 479, 486, 487, 489, 491, 493, 548, 577, 580], "sine": [261, 389, 447, 530, 572], "sine_model": 569, "sinetemporalmodel": [269, 487, 569], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 122, 126, 127, 130, 133, 151, 152, 163, 165, 166, 169, 173, 175, 180, 183, 184, 189, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 224, 246, 378, 384, 385, 388, 390, 391, 392, 393, 394, 395, 399, 400, 405, 406, 410, 417, 419, 424, 425, 437, 443, 444, 448, 453, 455, 457, 458, 459, 470, 472, 478, 479, 483, 484, 486, 489, 493, 494, 500, 502, 512, 514, 526, 528, 529, 573, 575], "singleobscubemak": 384, "singleobsimagemak": 384, "singleton": 329, "sinha": [390, 393, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 437, 438, 439, 440, 441, 442, 443, 444, 445], "sink": 395, "sinu": [261, 487], "sinusoid": [261, 569], "sipocz": [395, 419, 421, 423, 425, 434, 435, 436, 437, 438, 439], "sip\u0151cz": [440, 445], "sit": 381, "site": [342, 408, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 540, 548, 564, 576], "situat": [392, 393, 395, 521], "six": [397, 403], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 102, 103, 105, 108, 109, 110, 112, 113, 114, 115, 117, 128, 133, 136, 147, 148, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 166, 168, 169, 175, 176, 177, 180, 181, 182, 190, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 209, 218, 219, 221, 222, 225, 226, 228, 229, 230, 233, 234, 236, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 296, 327, 328, 332, 333, 334, 335, 366, 378, 386, 389, 391, 392, 410, 412, 442, 444, 448, 455, 459, 461, 465, 471, 473, 478, 483, 484, 485, 487, 491, 492, 493, 494, 502, 512, 527, 533, 534, 580], "skeleton": 394, "sketch": 394, "skill": [381, 414], "skimag": 438, "skip": [82, 161, 366, 379, 381, 390, 392, 398, 436, 475, 486], "skip_miss": [82, 437], "sklearn": 378, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 102, 105, 108, 109, 110, 118, 141, 151, 152, 163, 166, 186, 192, 193, 194, 196, 201, 202, 204, 205, 206, 224, 246, 262, 274, 277, 279, 307, 311, 312, 336, 338, 340, 365, 377, 378, 379, 391, 397, 410, 419, 421, 435, 436, 438, 449, 453, 454, 456, 457, 459, 469, 472, 473, 478, 484, 487, 491, 492, 496, 498, 500, 501, 502, 504, 511, 512, 513, 516, 521, 522, 525, 527, 529, 533, 534, 538, 539, 540, 574, 575], "sky_circl": [91, 96, 471, 475, 488, 501], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 115, 117, 393, 449, 470, 471, 475, 478, 486, 487, 501, 544], "sky_model_pntpwl": 465, "sky_reg": 477, "sky_reg_rec": 477, "sky_region": 89, "skycood": 389, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 102, 105, 109, 110, 112, 113, 123, 125, 127, 129, 151, 152, 158, 163, 166, 176, 177, 179, 181, 183, 184, 186, 187, 189, 190, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 207, 220, 221, 224, 225, 233, 236, 246, 248, 250, 259, 260, 262, 264, 270, 272, 274, 303, 304, 337, 338, 354, 374, 379, 389, 392, 402, 405, 448, 450, 453, 455, 456, 459, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 501, 502, 516, 520, 525, 527, 529, 537], "skycoord_from_t": 392, "skycoord_to_pixel_scale_angl": 392, "skycoordconfig": 16, "skycub": [384, 397, 435, 436, 437, 438], "skydiffusecub": [389, 401, 420, 425, 426, 438], "skydiffusemap": [389, 420], "skydir": [16, 83, 102, 105, 109, 110, 111, 116, 152, 163, 173, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 453, 454, 455, 458, 459, 461, 463, 464, 465, 466, 469, 470, 473, 477, 479, 482, 483, 484, 485, 487, 492, 493, 500, 501, 523, 525, 526, 527, 529, 534, 535, 536, 537], "skydirfunct": 504, "skydisk": 420, "skydiskelong": 389, "skyellips": [419, 420, 421, 422], "skygaussian": 419, "skygaussianelong": 389, "skyimag": [384, 397, 435, 436, 437, 438], "skyimagelist": 435, "skymap": [193, 194, 196, 202, 205, 206, 392, 434, 435, 466], "skymap_band": [466, 571], "skymap_region": 466, "skymask": 436, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 101, 102, 105, 109, 110, 115, 117, 123, 125, 131, 133, 134, 143, 170, 211, 224, 242, 246, 279, 284, 389, 390, 391, 393, 399, 401, 402, 419, 423, 424, 425, 429, 438, 444, 449, 450, 451, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 475, 478, 479, 480, 481, 486, 489, 492, 500, 501, 511, 512, 514, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573], "skypointsourc": 422, "skyregion": [100, 102, 105, 109, 110, 127, 151, 152, 158, 163, 166, 176, 177, 181, 196, 201, 202, 206, 224, 246, 336, 339, 392, 450, 465, 467, 485, 487, 520, 525, 529], "skyspatialmodel": [389, 438], "slack": [380, 381, 385, 401, 407, 413, 418, 419, 576], "slew": 95, "slice": [83, 87, 91, 100, 102, 105, 109, 110, 120, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 272, 274, 297, 384, 426, 464, 467, 471, 479, 480, 491, 528], "slice_by_coord": [123, 125, 444], "slice_by_energi": [100, 102, 105, 109, 110, 123, 125, 272, 426, 479], "slice_by_idx": [102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 426, 438, 440, 467, 471, 480, 484, 492], "slice_by_tim": [123, 125], "sliced_ax": 197, "sliced_geom": [191, 192, 201, 204], "sliced_lc": 471, "slide": [387, 457, 478], "slider": 484, "sliderstyl": [461, 469, 484, 500, 501], "slightli": [118, 198], "slope": [27, 420], "slow": [87, 91, 211, 385, 394, 454, 481, 500, 501], "slower": [87, 91, 194, 378, 386, 396], "slowest": 408, "small": [369, 378, 384, 386, 392, 394, 395, 398, 400, 405, 408, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 470, 471, 484, 489, 491, 492, 493, 494, 534, 538, 539, 575, 576], "smaller": [27, 152, 163, 166, 181, 192, 193, 194, 196, 202, 205, 206, 371, 381, 419, 438, 465, 471, 476, 481, 484, 489, 534], "smallest": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 258, 263, 265, 266, 267, 268, 271, 275, 457], "smooth": [102, 105, 109, 110, 118, 128, 129, 141, 194, 206, 225, 263, 370, 373, 429, 434, 435, 436, 438, 439, 447, 459, 461, 463, 467, 469, 473, 479, 483, 484, 486, 492, 500, 501, 502, 530, 533, 562], "smooth_kernel": [102, 105], "smooth_radiu": [102, 105], "smoothbrokenpowerlawspectralmodel": [218, 257, 401, 424, 425, 487, 557], "sn": [45, 50, 52, 53], "sn_rate": [45, 506], "snippet": [379, 398, 516], "snr": [44, 50, 53, 67, 492, 509, 510], "snr_model": 510, "snrcat": [433, 478], "snrtruelovemcke": [50, 509, 510], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 101, 105, 110, 122, 126, 128, 130, 131, 133, 134, 143, 146, 151, 152, 158, 163, 166, 190, 193, 194, 196, 198, 202, 205, 206, 211, 214, 216, 236, 274, 284, 353, 361, 368, 369, 378, 379, 381, 383, 384, 385, 386, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 409, 410, 412, 414, 419, 421, 429, 439, 441, 442, 445, 450, 453, 455, 457, 458, 463, 464, 465, 469, 470, 477, 478, 480, 481, 484, 485, 487, 489, 491, 492, 493, 496, 501, 516, 523, 525, 529, 535, 539, 576, 577, 578, 579], "social": 404, "soft": 293, "softwar": [193, 194, 196, 205, 206, 392, 393, 395, 404, 405, 408, 484, 516], "solar": 52, "sole": [388, 404], "solid": [191, 192, 201, 204, 221, 225, 233, 236, 248, 259, 260, 264, 270, 274, 277, 394, 417, 419, 420, 421, 438, 459, 483, 484, 491, 519, 525, 575], "solid_angl": [191, 192, 201, 204, 484, 529], "solut": [19, 20, 26, 52, 134, 143, 150, 218, 219, 222, 226, 228, 229, 230, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 273, 275, 379, 381, 383, 385, 386, 391, 392, 394, 395, 396, 398, 400, 402, 406, 411, 480, 512, 514, 516, 579], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381, 386, 388, 389, 390, 391, 431, 516], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 104, 124, 179, 200, 305, 313, 381, 383, 384, 385, 386, 387, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 408, 410, 411, 412, 413, 414, 415, 417, 419, 421, 429, 430, 432, 434, 436, 437, 438, 443, 448, 450, 451, 453, 455, 457, 458, 459, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 483, 484, 486, 487, 489, 491, 492, 501, 502, 504, 505, 512, 513, 516, 521, 526, 528, 576, 577, 578, 580], "some_class": 378, "some_map": 161, "some_map_convolv": 161, "somehow": [386, 392, 397], "someon": [381, 383, 398], "someth": [87, 91, 378, 379, 380, 381, 383, 386, 392, 395, 396, 398, 408, 410, 412, 456, 478, 529, 576], "sometim": [19, 20, 83, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 356, 378, 381, 385, 392, 398, 408, 410, 481, 516, 575, 580], "somewhat": [395, 491], "somewher": [381, 395, 408], "soon": [381, 392, 408], "sort": [82, 83, 87, 91, 101, 141, 341, 346, 347, 378, 395, 420, 445, 502], "sort_kei": [341, 346, 347], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 383, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 408, 410, 415, 417, 419, 423, 424, 429, 430, 435, 436, 437, 438, 443, 444, 445, 447, 449, 451, 452, 454, 455, 456, 458, 459, 460, 461, 462, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 492, 493, 494, 496, 498, 500, 501, 504, 505, 510, 512, 514, 516, 521, 524, 525, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 577, 578], "source1": 487, "source2": 487, "source_1": [389, 394], "source_2": 389, "source_42": 394, "source_fermi_3fgl": 451, "source_fermi_3fhl": 451, "source_gammacat": 451, "source_irf_model": 389, "source_librari": 491, "source_model": 555, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 478, 502], "source_name_alia": 56, "source_name_kei": 56, "source_po": [459, 463, 483], "source_population_model": [398, 423], "source_posit": [448, 464, 488], "sourcebackground": 389, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 392, 429, 478, 485, 502, 511], "sourcecatalog1lhaaso": [55, 70, 478], "sourcecatalog2fhl": [55, 71, 478, 511], "sourcecatalog2hwc": [55, 72, 478, 511], "sourcecatalog2pc": [55, 478], "sourcecatalog3fgl": [55, 74, 451, 478, 511], "sourcecatalog3fhl": [55, 75, 451, 478, 486, 502, 511], "sourcecatalog3hwc": [55, 76, 478, 511], "sourcecatalog3pc": [55, 478], "sourcecatalog4fgl": [55, 78, 431, 449, 478, 511], "sourcecataloggammacat": [55, 79, 451, 478, 511], "sourcecataloghgp": [55, 80, 81, 478, 511], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 478, 511], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 418, 478], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 389, "sources_flux_map": 457, "sourcetempl": 389, "south": [465, 466, 491], "south_z20_50h": [82, 148, 152, 153, 154, 163, 448, 456, 469, 472, 482, 491], "south_z40_50h": 491, "southaz": 491, "southern": 491, "space": [87, 91, 102, 105, 109, 110, 203, 206, 270, 271, 287, 316, 334, 377, 378, 388, 394, 400, 473, 479, 481, 484, 528, 552, 561], "span": 488, "spars": [192, 193, 194, 196, 201, 204, 205, 206, 420, 429, 437, 466, 484], "sparsif": 402, "sparsifi": [193, 194, 196, 205, 206], "spatail": 133, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 102, 105, 109, 110, 112, 113, 123, 125, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 175, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 215, 217, 220, 221, 224, 225, 232, 233, 236, 246, 248, 250, 256, 259, 260, 262, 264, 270, 272, 274, 284, 371, 373, 378, 384, 387, 390, 391, 392, 394, 396, 397, 402, 410, 418, 419, 421, 422, 423, 424, 426, 429, 437, 438, 440, 443, 444, 445, 447, 449, 451, 454, 456, 457, 458, 461, 462, 464, 465, 466, 467, 469, 471, 472, 473, 475, 478, 479, 480, 483, 486, 490, 492, 496, 500, 504, 505, 512, 514, 516, 517, 527, 528, 541, 573, 574, 575], "spatial_bin_s": [112, 113], "spatial_bin_size_min": [112, 113], "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 117, 133, 225, 232, 262, 272, 284, 393, 423, 449, 457, 461, 463, 464, 465, 466, 469, 470, 471, 475, 478, 479, 486, 487, 492, 501, 532, 533, 534, 535, 536, 537, 538, 539, 540], "spatial_model_point": 465, "spatial_model_registri": 487, "spatial_par": 401, "spatial_typ": 401, "spatial_width": [112, 113], "spatial_width_max": [112, 113], "spatialbackground": 389, "spatialcircleconfig": 16, "spatialconst": 389, "spatialgaussian": 389, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 220, 221, 225, 232, 233, 236, 248, 250, 259, 260, 262, 270, 272, 274, 389, 401, 423, 438, 442, 478, 487, 501, 504, 511, 530, 573], "spatialtempl": 389, "spatiamodel": 161, "speak": 481, "spec": [80, 110, 378, 392, 434, 461, 466, 478, 491, 501], "spec_model_tru": 473, "special": [87, 91, 236, 378, 388, 390, 392, 393, 401, 404, 405, 418, 445, 458, 465, 478, 479, 480, 486, 487], "specialis": [392, 398], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 91, 94, 102, 105, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 169, 183, 184, 189, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 211, 238, 272, 284, 367, 377, 378, 379, 381, 383, 388, 390, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 405, 408, 410, 411, 423, 426, 429, 431, 440, 441, 443, 449, 450, 453, 455, 456, 459, 461, 462, 467, 469, 472, 473, 479, 481, 482, 484, 485, 488, 489, 494, 496, 502, 512, 513, 514, 516, 518, 519, 520, 522, 527, 528, 529, 580], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 90, 91, 92, 96, 101, 102, 104, 105, 109, 110, 118, 120, 123, 124, 125, 126, 128, 130, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 168, 179, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 224, 238, 246, 284, 305, 307, 311, 316, 365, 388, 395, 400, 403, 411, 422, 425, 429, 445, 449, 455, 458, 459, 461, 464, 465, 467, 469, 479, 480, 481, 482, 483, 484, 486, 487, 491, 501, 512, 514, 527], "spectra": [26, 109, 110, 126, 131, 146, 211, 257, 277, 284, 384, 387, 389, 391, 393, 397, 401, 417, 421, 434, 438, 449, 450, 455, 456, 462, 466, 470, 472, 473, 479, 480, 481, 483, 487, 489, 504, 512, 514, 516, 575], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 101, 102, 105, 109, 110, 118, 122, 123, 125, 126, 127, 130, 132, 133, 140, 161, 163, 166, 170, 215, 217, 218, 219, 222, 224, 226, 228, 229, 230, 232, 234, 238, 240, 241, 243, 244, 246, 247, 249, 251, 252, 253, 257, 258, 262, 263, 265, 266, 267, 268, 271, 272, 273, 275, 277, 278, 293, 332, 384, 387, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 402, 410, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 452, 456, 457, 458, 461, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 478, 479, 480, 481, 483, 485, 486, 489, 490, 491, 492, 500, 501, 504, 505, 511, 512, 514, 515, 516, 517, 523, 524, 525, 532, 533, 534, 535, 536, 537, 538, 539, 540, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 577], "spectral_analysi": [447, 452, 453], "spectral_analysis_hli": [447, 452, 454], "spectral_analysis_rad_max": [447, 452, 455], "spectral_cub": 430, "spectral_index": [19, 20, 26, 52, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275], "spectral_index_error": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 443], "spectral_irf_model": 389, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 101, 109, 110, 115, 117, 118, 122, 127, 131, 132, 133, 140, 161, 163, 166, 170, 211, 224, 232, 244, 246, 262, 272, 284, 393, 396, 400, 401, 402, 406, 426, 448, 449, 450, 451, 453, 455, 456, 457, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 478, 479, 480, 481, 486, 487, 489, 492, 501, 502, 514, 523, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "spectral_model1": 472, "spectral_model2": 472, "spectral_model_pwl": 465, "spectral_model_registri": 487, "spectral_par": 401, "spectral_point": 394, "spectral_typ": 401, "spectralbackground": 389, "spectralbackgroundmodel": 390, "spectralcompoundmodel": 389, "spectralconst": 389, "spectralevalu": 389, "spectralexponentialcutoffpowerlaw3fgl": 397, "spectralgaussian": [389, 421], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 101, 118, 122, 123, 125, 127, 132, 140, 161, 163, 166, 170, 218, 219, 222, 224, 226, 228, 229, 230, 232, 234, 240, 241, 243, 246, 247, 249, 251, 252, 253, 258, 262, 263, 266, 267, 268, 271, 272, 275, 277, 389, 390, 393, 396, 402, 426, 429, 436, 443, 445, 478, 487, 501, 502, 511, 530, 573], "spectralregion": 392, "spectraltempl": 389, "spectroscopi": [445, 447, 471, 474, 496, 525], "spectrum": [19, 20, 26, 72, 76, 98, 100, 101, 102, 105, 106, 109, 110, 123, 125, 130, 132, 137, 163, 166, 171, 175, 179, 180, 193, 194, 196, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 277, 278, 287, 293, 375, 384, 389, 390, 393, 394, 397, 398, 399, 410, 420, 421, 422, 423, 425, 429, 431, 434, 435, 436, 437, 438, 440, 442, 445, 447, 450, 451, 452, 454, 461, 462, 465, 466, 467, 472, 477, 478, 479, 485, 487, 491, 492, 496, 500, 502, 504, 512, 516, 521, 529, 543, 546, 547, 549, 550, 554, 555, 557, 558, 559, 560, 576], "spectrum_analysi": 453, "spectrum_dataset": [146, 390, 473, 479], "spectrum_dataset_1": 390, "spectrum_dataset_2": 390, "spectrum_dataset_empti": [473, 483], "spectrum_dataset_mak": [473, 483], "spectrum_dataset_on_off": 473, "spectrum_fitting_with_sherpa": 398, "spectrum_mak": 448, "spectrum_simul": [398, 447, 452, 456], "spectrumanalysisiact": [394, 422, 436], "spectrumdataset": [98, 99, 100, 102, 105, 110, 130, 132, 146, 174, 175, 179, 180, 232, 399, 420, 421, 422, 423, 424, 425, 426, 429, 432, 448, 450, 453, 455, 456, 463, 471, 472, 473, 475, 481, 483, 489, 525, 577], "spectrumdatasetmak": [171, 423, 429, 448, 450, 453, 455, 456, 463, 471, 472, 473, 475, 483, 525], "spectrumdatasetonoff": [98, 105, 106, 107, 109, 131, 132, 146, 174, 175, 211, 284, 375, 393, 420, 421, 422, 424, 425, 441, 442, 443, 448, 449, 450, 453, 454, 456, 462, 463, 470, 473, 475, 479, 480, 481, 483, 489, 512, 514, 577], "spectrumdatasetonoffstack": 422, "spectrumdatasetsonoff": 390, "spectrumenergygroup": 437, "spectrumevalu": 425, "spectrumextract": [393, 420, 423, 436], "spectrumfit": [420, 436, 437, 438], "spectrumobserv": [390, 420, 436], "spectrumobservationlist": [420, 435], "spectrumobservationstack": 435, "spectrumonoffdataset": 393, "spectrumresult": 420, "spectrumsimul": [421, 435, 438], "spectrumstack": 437, "spectrumstat": 421, "specutil": 392, "speed": [133, 305, 381, 411, 421, 423, 431, 437, 438, 445, 481], "spell": [383, 516], "spend": [391, 398], "spent": [385, 483], "sphere": [47, 333, 417, 419, 528, 533, 534, 537], "spherepointpick": 333, "spheric": [47, 378, 419, 528, 574], "sphericalcircleskyregion": [397, 473, 502], "sphinx": [381, 385, 398, 408, 420, 424, 431, 437, 438, 440, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "sphinx_gallery_conf": 408, "sphinx_gallery_thumbnail_numb": [379, 449, 453, 455, 457, 459, 464, 467, 482, 542], "sphinxext": 379, "spill": 483, "spin": [50, 51, 54, 421, 508], "spir": [419, 438], "spiral": [33, 34, 38, 45, 433], "spiralarm": [33, 38, 45, 437, 506], "spiralarm_index": [33, 34, 38], "spirit": 404, "split": [19, 20, 87, 91, 92, 115, 117, 123, 125, 193, 194, 196, 202, 205, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 384, 386, 388, 390, 392, 393, 397, 399, 401, 410, 426, 444, 471, 487, 505, 581], "split_by_axi": [193, 194, 196, 202, 205, 206], "split_template_model": [115, 117], "sporad": 405, "spot": 378, "spread": [82, 88, 154, 163, 166, 378, 400, 426, 448, 457, 482, 521, 575], "spring": [388, 439], "sprint": [386, 387, 391, 394, 395, 396, 397, 399], "spuriou": 141, "sqrt": [19, 20, 30, 31, 32, 67, 101, 102, 105, 109, 110, 118, 123, 125, 128, 133, 193, 194, 196, 198, 202, 205, 206, 209, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 285, 294, 317, 318, 319, 390, 450, 453, 457, 459, 461, 467, 469, 473, 476, 478, 481, 483, 484, 486, 492, 500, 501, 502, 514, 534, 535, 538, 539, 549, 578], "sqrt_space": [397, 423], "sqrt_t": [118, 122, 123, 125, 133, 141, 142, 146, 286, 288, 371, 402, 414, 426, 450, 453, 454, 457, 459, 461, 463, 473, 478, 479, 480, 485, 493, 500, 502, 514, 576, 578], "sqrt_ts_min": [146, 453], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 122, 123, 124, 125, 127, 133, 457, 467, 470, 471, 478, 479, 480, 500, 502], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 102, 105, 123, 124, 150, 151, 152, 158, 163, 166, 169, 190, 204, 206, 272, 291, 393, 396, 426, 485, 489, 504, 514, 528, 576, 577, 578, 579], "squash": [152, 191, 192, 195, 197, 198, 201, 203, 204, 443, 448, 459, 479, 484], "squeez": [448, 482], "sr": [147, 148, 149, 160, 191, 192, 201, 204, 221, 274, 277, 448, 456, 458, 461, 463, 469, 472, 478, 479, 482, 484, 487, 491, 492, 521, 532, 540], "src": [391, 449, 464, 512], "src_above_bkg": 464, "src_event": [465, 466], "src_posit": [465, 466], "srcmap": [192, 193, 194, 196, 205, 206, 484], "ssc": [58, 60, 61, 62, 64, 65, 247, 398, 555], "ssc_model": 247, "ssxlmrxp": 483, "st": [53, 481, 492], "stabil": [19, 20, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 403, 469], "stabl": [11, 87, 91, 201, 211, 305, 385, 386, 387, 394, 395, 398, 403, 407, 408, 409, 411, 423, 424, 425, 431, 436, 438, 440, 481, 513], "stack": [16, 83, 86, 92, 100, 101, 102, 104, 105, 109, 110, 122, 123, 125, 134, 143, 151, 152, 158, 163, 166, 169, 193, 194, 195, 196, 201, 202, 205, 206, 209, 215, 217, 272, 348, 378, 390, 393, 394, 400, 405, 419, 422, 423, 426, 429, 434, 435, 440, 441, 443, 445, 449, 450, 454, 458, 462, 463, 470, 473, 479, 481, 483, 488, 489, 500, 501, 513, 514, 523, 526], "stack_dataset": [169, 473, 483], "stack_reduc": [100, 146, 211, 422, 450, 453, 455, 461, 462, 463, 473, 479, 481, 514], "stacked_dataset": [463, 464], "stacked_fit": 453, "stacked_on_off": 459, "stackedobscubemak": 384, "stackedobsimagemak": 384, "stackoverflow": 345, "stage": [381, 394, 459, 461, 472, 479, 512, 575], "stahanna": 445, "stai": 390, "stand": 383, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 194, 206, 211, 278, 287, 304, 360, 361, 378, 379, 381, 383, 387, 389, 390, 391, 394, 396, 402, 404, 405, 414, 421, 422, 438, 444, 448, 449, 454, 456, 459, 462, 464, 466, 469, 471, 472, 475, 477, 481, 484, 487, 488, 489, 491, 494, 496, 500, 512, 515, 520, 528, 574, 575, 576], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 303, 488], "standardis": [350, 351, 363, 437], "standardise_unit": [350, 364], "standpoint": 378, "stapel": [444, 445], "star": [36, 40, 226], "starmap": [321, 325, 326], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 130, 141, 203, 223, 224, 231, 235, 237, 238, 239, 246, 254, 261, 273, 276, 378, 379, 381, 383, 385, 386, 387, 388, 391, 392, 394, 395, 403, 404, 406, 407, 408, 412, 413, 414, 415, 417, 422, 431, 434, 435, 436, 437, 438, 443, 445, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 461, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 476, 477, 478, 480, 484, 487, 491, 492, 493, 496, 500, 502, 503, 516, 520, 574], "start_po": [127, 338, 467], "startswith": 378, "stat": [6, 100, 101, 105, 110, 123, 125, 126, 127, 130, 131, 133, 211, 212, 214, 216, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 371, 378, 390, 398, 406, 408, 414, 421, 423, 424, 425, 426, 429, 435, 438, 439, 440, 444, 445, 450, 451, 453, 454, 455, 457, 459, 461, 462, 463, 464, 467, 471, 473, 475, 476, 480, 481, 489, 492, 500, 501, 514, 576, 577, 578], "stat_arrai": [99, 101, 102, 105, 109, 110, 406, 445], "stat_contour": 211, "stat_kwarg": 101, "stat_max": [286, 288], "stat_nul": [123, 125, 126, 127, 130, 131, 133, 286, 288, 444, 457, 467, 471, 480, 514], "stat_per_bin": 390, "stat_profil": [211, 449, 481, 489, 516], "stat_scan": [101, 123, 125, 126, 127, 130, 131, 133, 134, 143, 211, 285, 445, 449, 453, 471, 480, 481, 489, 514], "stat_sum": [99, 100, 101, 102, 105, 109, 110, 406, 442, 443, 461, 472, 479, 486, 516], "stat_surfac": [211, 426, 516], "stat_typ": [101, 102, 105, 109, 110, 424, 453, 461, 472, 479, 486], "state": [16, 45, 47, 203, 211, 378, 384, 388, 390, 394, 398, 400, 402, 449, 454, 500, 521, 542], "stateless": 405, "statement": [378, 381, 385, 442, 444, 505], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 108, 118, 122, 123, 125, 126, 127, 130, 131, 133, 154, 162, 173, 179, 180, 192, 193, 194, 196, 202, 203, 205, 206, 218, 220, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 251, 252, 253, 254, 259, 260, 261, 263, 266, 267, 268, 273, 275, 276, 375, 386, 389, 408, 420, 437], "staticmethod": [389, 401, 406, 487, 489], "statist": [6, 19, 20, 26, 79, 99, 100, 101, 102, 105, 109, 110, 122, 123, 125, 126, 127, 130, 131, 133, 142, 146, 173, 211, 213, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 258, 263, 265, 266, 267, 268, 271, 275, 284, 285, 286, 288, 289, 290, 295, 302, 390, 393, 396, 397, 398, 400, 406, 420, 424, 425, 426, 429, 431, 443, 444, 448, 449, 454, 456, 457, 458, 459, 461, 463, 467, 469, 470, 472, 473, 476, 479, 481, 483, 489, 500, 501, 512, 514, 516, 523, 526, 574, 575], "statu": [19, 20, 26, 123, 125, 210, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 378, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 406, 439, 444, 486, 487], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 287, 304, 456, 476, 492], "stddev": 68, "stderr": 378, "stdout": [313, 378], "steadi": 449, "steep": 456, "stefan": [433, 444, 445], "step": [19, 20, 26, 122, 126, 130, 131, 133, 211, 212, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 378, 381, 384, 385, 388, 389, 390, 392, 393, 394, 396, 399, 403, 406, 407, 408, 414, 431, 438, 439, 443, 448, 453, 455, 458, 461, 463, 464, 465, 466, 471, 472, 479, 480, 481, 483, 487, 489, 500, 501, 502, 516, 524, 529], "stepprior": 406, "stepsiz": 168, "steradian": 201, "stewart": [133, 297, 457, 575], "stewart2009": [133, 575, 578], "stick": [381, 401, 419, 438, 481, 575], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 385, 386, 388, 391, 392, 395, 397, 398, 399, 402, 403, 405, 407, 408, 436, 437, 438, 487, 489, 502, 514, 538, 539, 576], "stipul": 404, "stone": [378, 398], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 130, 133, 203, 223, 224, 231, 235, 237, 238, 239, 246, 254, 261, 273, 276, 388, 414, 443, 454, 458, 459, 461, 471, 473, 475, 481, 492, 500], "storag": [82, 516], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 82, 83, 85, 86, 87, 91, 123, 124, 125, 128, 130, 161, 174, 175, 193, 194, 196, 202, 205, 206, 211, 212, 214, 216, 224, 246, 361, 378, 379, 381, 384, 386, 387, 388, 390, 391, 394, 396, 400, 402, 404, 405, 408, 426, 429, 430, 445, 450, 455, 456, 465, 466, 473, 475, 476, 479, 480, 481, 482, 483, 484, 485, 488, 491, 492, 493, 494, 502, 512, 513, 516, 521, 522, 523, 528, 529, 552, 573, 574, 576, 580], "store_per_ob": 394, "store_trac": [211, 481], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 120, 122, 123, 124, 125, 126, 128, 130, 131, 133, 134, 136, 137, 138, 139, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 170, 173, 174, 179, 180, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 305, 317, 326, 341, 342, 343, 347, 360, 361, 363, 367, 371, 372, 374, 392, 405, 453, 455, 475, 483, 487], "str3": [87, 91], "straight": [379, 410, 516], "straightforward": [408, 579], "strang": 378, "strategi": [378, 385, 392, 443, 481, 579], "stream": 378, "streil": [406, 442, 443, 444], "strength": [51, 54, 406, 552], "stretch": [193, 194, 196, 202, 205, 206, 368, 369, 373, 457, 461, 467, 469, 483, 484, 486, 492, 500, 501, 502], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 104, 105, 124, 151, 152, 158, 163, 166, 169, 198, 204, 206, 272, 445], "strict_bound": 198, "strictli": [16, 84, 90, 104, 124, 198], "strike": 512, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 104, 123, 124, 125, 126, 127, 130, 133, 154, 160, 162, 164, 169, 192, 193, 194, 196, 198, 199, 201, 202, 204, 205, 206, 214, 216, 224, 246, 305, 323, 367, 378, 391, 392, 395, 397, 404, 405, 417, 421, 429, 431, 454, 478, 485, 487, 500, 528, 529], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 391, 398, 453], "stronger": 489, "strongli": [293, 393, 395, 404, 429, 458, 481, 489], "structur": [87, 91, 204, 301, 382, 383, 384, 387, 389, 391, 394, 398, 401, 404, 405, 416, 422, 423, 425, 429, 432, 444, 445, 447, 467, 479, 480, 483, 484, 485, 487, 496, 503, 504, 513, 517, 528, 529, 576], "stuck": 576, "student": 381, "studi": [46, 277, 301, 391, 394, 402, 411, 438, 445, 450, 451, 462, 463, 464, 467, 469, 471, 472, 475, 481, 484, 487, 491, 506, 516, 525, 577], "stuff": [379, 408, 516], "stuff1": 378, "stuff2": 378, "style": [87, 91, 101, 193, 194, 196, 202, 205, 206, 375, 381, 387, 404, 433, 435, 461, 469, 482, 484, 500, 501, 516, 529], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 115, 117, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 193, 194, 195, 196, 198, 202, 203, 205, 206, 209, 378, 381, 385, 387, 388, 392, 397, 398, 399, 400, 405, 408, 417, 419, 423, 425, 426, 434, 436, 437, 463, 465, 480, 483, 485, 487, 493, 494, 512, 515, 516, 524, 574, 576, 580], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 124, 305, 392, 435, 438, 487, 489], "subcompon": [67, 80], "subfold": [386, 429], "submit": [383, 404], "submodul": [386, 419, 420, 425, 484, 502, 514], "subok": 305, "subpackag": [399, 405, 422, 429, 433], "subplot": [66, 67, 193, 194, 196, 202, 205, 206, 448, 450, 451, 453, 454, 455, 456, 457, 459, 461, 462, 463, 467, 470, 472, 473, 475, 477, 480, 481, 482, 484, 485, 486, 488, 489, 516, 518, 525, 535, 539, 542], "subplot_kw": [457, 459, 463, 473, 485, 525], "subplots_adjust": [471, 476, 477, 478], "subsect": [398, 484], "subsequ": [292, 387], "subset": [82, 83, 87, 91, 126, 130, 133, 247, 405, 433, 434, 463, 473, 486, 491, 493, 515, 574], "subspac": 392, "substanti": [87, 91], "substitut": 577, "substr": [224, 246], "subtract": 455, "succed": 407, "succeed": 123, "success": [16, 84, 90, 101, 104, 123, 124, 125, 126, 127, 130, 131, 133, 210, 211, 212, 213, 406, 429, 450, 451, 453, 454, 455, 457, 461, 462, 463, 467, 470, 471, 473, 475, 480, 481, 486, 492, 500, 501, 540], "successfulli": [101, 450, 451, 453, 454, 455, 461, 462, 463, 472, 473, 475, 480, 481, 492, 500, 501], "sudo": 411, "suffer": [395, 473], "suffic": 472, "suffici": [381, 384, 391, 404, 443, 516], "suffix": [101, 123, 379, 389, 401, 407, 487, 528, 530], "suggest": [381, 383, 385, 388, 392, 398, 400, 402, 406, 457, 465, 466, 516, 576], "suit": [194, 378, 529], "suitabl": 194, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 102, 105, 109, 110, 125, 126, 127, 129, 130, 131, 133, 134, 135, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 193, 194, 196, 202, 205, 206, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 277, 286, 288, 290, 374, 378, 388, 389, 391, 400, 402, 406, 420, 444, 457, 461, 465, 473, 477, 479, 489, 492, 500, 501, 502, 512, 522, 575, 577], "sum_": 512, "sum_band": [193, 194], "sum_i": 128, "sum_j": 512, "sum_k": 512, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [193, 194, 196, 202, 205, 206, 366, 438, 459, 461, 467, 473, 479, 483, 485, 486, 492, 501], "sum_over_energy_group": [122, 126, 133, 457, 463, 467], "summar": [387, 504], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 286, 288, 313, 317, 327, 352, 365, 379, 381, 398, 416, 450, 454, 471, 472, 479, 491, 500, 516], "summaris": [378, 383, 385, 398], "summat": [286, 288, 384], "summer": 386, "sun": 41, "sunpi": [395, 398, 399], "super": [192, 194, 266, 267, 268, 447, 455, 465, 494, 530, 562, 564], "superexpcutoffpowerlaw3fglspectralmodel": [257, 401, 487, 558], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 257, 487, 559], "superexpcutoffpowerlaw4fglspectralmodel": [257, 401, 487, 560], "superflu": [388, 473], "supernova": [28, 52, 450, 464, 487, 506, 507], "superpixel": 192, "supersed": [192, 193, 194, 204, 205, 206], "supervisor": 394, "suppli": [19, 20, 26, 87, 91, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 449, 471, 472], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 102, 105, 109, 110, 114, 125, 145, 156, 161, 192, 193, 194, 195, 196, 198, 203, 204, 205, 206, 211, 224, 246, 377, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 405, 411, 415, 418, 419, 421, 422, 423, 424, 425, 426, 429, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 454, 456, 458, 461, 463, 469, 472, 477, 478, 479, 484, 489, 491, 492, 493, 494, 500, 515, 521, 528, 529, 571, 573, 574, 576], "suppos": [238, 273, 383, 390, 575, 577], "suppress": [150, 151, 155, 516], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 378, 381, 383, 394, 407, 453, 470, 484, 516, 576], "surfac": [28, 30, 35, 36, 39, 40, 45, 211, 262, 277, 331, 397, 426, 481, 487, 506], "surface_brightness_err": 478, "surprisingli": 392, "surround": [52, 323, 378], "survei": [63, 67, 126, 226, 385, 388, 398, 414, 447, 491, 496, 497, 506, 511, 516, 575], "survey_map": [447, 497, 498], "suspect": 578, "suss": [387, 404], "svg": 378, "swap": 192, "swept": 52, "swh": 404, "swhid": 404, "switch": [103, 108, 284, 378, 385, 388, 431, 435], "switcher": 407, "sy": [378, 413], "syllabl": 516, "symbol": 485, "symmetr": [102, 105, 109, 110, 122, 131, 133, 181, 190, 194, 233, 378, 389, 419, 431, 434, 451, 472, 483, 489, 491, 504, 514, 522, 533, 534, 578], "symmetri": [194, 419], "sync": 438, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 404, "synchrotron": [247, 425, 552], "syntact": [87, 91], "syntax": [16, 87, 91, 379, 394, 397, 423, 440, 576], "synthesi": [506, 507], "synthet": 417, "system": [11, 83, 87, 91, 112, 113, 148, 156, 157, 192, 193, 194, 196, 199, 201, 204, 205, 206, 224, 246, 378, 384, 389, 391, 395, 398, 399, 403, 404, 406, 411, 419, 437, 443, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 527, 528, 574, 576, 580], "systemat": [389, 402, 404, 405, 426, 453, 470, 483, 514, 575, 577], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 104, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 142, 143, 144, 145, 150, 190, 203, 224, 238, 246, 284, 286, 287, 288, 303, 350, 354, 377, 378, 379, 381, 383, 385, 386, 388, 390, 392, 394, 395, 396, 397, 398, 401, 402, 403, 405, 408, 409, 410, 412, 414, 426, 430, 433, 434, 435, 438, 443, 445, 448, 449, 450, 453, 458, 461, 463, 464, 467, 469, 470, 471, 473, 475, 476, 477, 478, 480, 481, 483, 484, 485, 487, 488, 489, 491, 492, 504, 508, 509, 510, 512, 514, 516, 525, 563, 564, 565, 566, 567, 568, 569, 574, 576, 579, 580], "t0": [231, 254, 465, 471, 472, 475, 564, 568], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 292, 521, 564, 565, 566, 567, 568, 569, 577], "t_0": 568, "t_b": 577, "t_decai": [237, 566], "t_delta": [103, 108, 203, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276], "t_i": 292, "t_j": 512, "t_live": [83, 88], "t_max": [223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 391, 402, 475], "t_min": [223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 391, 402, 475], "t_observ": [83, 88], "t_r": 238, "t_ref": [231, 235, 237, 238, 239, 254, 261, 273, 442, 443, 465, 466, 472, 487, 564, 565, 566, 567, 568, 569, 570, 571], "t_rise": [237, 566], "t_start": [86, 513], "t_stop": [52, 86, 513], "ta": 287, "ta2": 287, "ta3": 287, "tab": [150, 383, 461, 467, 470, 480, 489, 525], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 464, "table_class": [87, 91], "table_compon": [67, 478], "table_filenam": 26, "table_format": 125, "table_from_row_data": 443, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 478], "table_model": [275, 401], "table_oth": 348, "tableau": 516, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [389, 439], "tablepsf": [399, 417, 419], "tablepsfcheck": 435, "tabul": 504, "tabular": [487, 561], "tackl": 387, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 178, 179, 180, 193, 194, 196, 202, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 403, 406, 407, 426, 440, 482, 487, 489, 535, 539], "tail": [491, 576], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 105, 109, 110, 122, 148, 168, 170, 202, 204, 209, 211, 224, 246, 262, 353, 376, 378, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 402, 408, 424, 425, 426, 429, 431, 439, 440, 442, 443, 444, 448, 450, 453, 455, 456, 465, 466, 467, 472, 473, 475, 480, 481, 483, 484, 485, 487, 488, 489, 491, 501, 502, 513, 516, 529, 545, 577, 578, 579], "taken": [15, 27, 87, 91, 102, 105, 109, 110, 123, 125, 153, 161, 180, 186, 188, 202, 203, 206, 211, 295, 379, 383, 387, 391, 442, 449, 453, 461, 462, 473, 475, 480, 482, 485, 486, 491, 502, 512, 514, 525, 526, 578], "talk": [381, 383, 385, 395, 404], "tan": [194, 201, 392, 421, 453, 484, 492, 525], "tandem": 504, "tangent": [176, 221, 225, 233, 236, 248, 259, 260, 264, 270, 274], "tangenti": [192, 529], "tar": [408, 491], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 102, 105, 109, 110, 114, 118, 122, 124, 133, 151, 152, 163, 166, 183, 184, 188, 189, 193, 194, 196, 198, 202, 205, 206, 379, 384, 385, 391, 404, 407, 435, 450, 455, 463, 471, 483, 485, 501], "target_nam": 525, "target_posit": [176, 450, 453, 455, 463, 470, 471, 475, 501], "target_radec": 88, "targetmetadata": [90, 124], "task": [326, 398, 402, 404, 405, 407, 408, 439, 454, 457, 483, 484, 492, 496, 500, 516, 524, 574, 576, 580], "task_nam": 326, "tast": 576, "tau": [26, 51, 54, 136, 296, 406, 477, 542], "tau_0": 51, "taul": [26, 477], "taur": [26, 477], "taylor": [52, 53], "tb00058": [135, 144], "tbl": [87, 91], "tctypn": 465, "tcunin": 465, "tdelta_precis": 301, "team": [383, 387, 395, 398, 400, 404, 416, 437], "technic": [380, 381, 383, 391, 398, 400, 402, 404, 408, 458], "techniqu": [384, 393, 394, 396, 450, 453, 461, 464, 483, 485, 493, 523, 526, 574], "tediou": 478, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 104, 153, 391, 392, 405, 410, 414, 415, 465, 470, 473, 488, 491, 492, 494], "tell": 455, "temp": [433, 466], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 104, 105, 110, 115, 117, 124, 170, 178, 192, 193, 194, 196, 197, 198, 204, 205, 206, 212, 224, 238, 246, 270, 271, 272, 273, 274, 275, 281, 283, 297, 300, 383, 389, 390, 394, 401, 426, 440, 443, 444, 447, 456, 457, 459, 466, 484, 485, 486, 487, 504, 525, 530, 541, 548, 551, 556, 562, 570], "template_diffus": [486, 492], "template_extrapol": 561, "template_model": 465, "template_noextrapol": 561, "templatelightcurvetemporalmodel": 440, "templatend": [270, 271, 487], "templatendspatialmodel": [256, 487], "templatendspectralmodel": [26, 257, 431, 442, 487], "templatenpredmodel": [242, 429], "templatephasecurvetemporalmodel": [269, 440, 445, 487, 570], "templatespatialmodel": [67, 256, 400, 401, 426, 440, 441, 443, 444, 445, 465, 486, 487, 492, 540], "templatespectralmodel": [224, 246, 257, 279, 401, 487, 492, 512, 548, 551, 556, 561], "templatetemporalmodel": 440, "tempo2": [473, 516], "tempor": [215, 217, 223, 224, 231, 235, 237, 238, 239, 246, 254, 261, 262, 269, 273, 276, 292, 389, 391, 401, 402, 422, 424, 425, 426, 431, 440, 442, 443, 444, 445, 447, 449, 451, 454, 456, 457, 461, 462, 463, 465, 468, 469, 475, 476, 478, 479, 480, 486, 492, 496, 500, 516, 517, 572, 573, 575], "temporal_model": [262, 391, 465, 466, 472, 487, 563, 564, 565, 566, 567, 568, 569, 570, 571], "temporal_model1": 472, "temporal_model2": 472, "temporal_model_map": 466, "temporal_model_registri": 487, "temporal_typ": 401, "temporalbackground": 389, "temporalmodel": [223, 231, 235, 237, 238, 239, 254, 261, 262, 273, 389, 402, 425, 440, 442, 443, 445, 530], "temporari": 496, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 389], "ten": [384, 398], "tend": [378, 535], "tension": 476, "tensorflow": [396, 398], "tent": 407, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 239, 298, 302, 381, 383, 385, 387, 388, 392, 395, 398, 403, 405, 427, 431, 440, 449, 457, 481, 482, 576, 578, 579], "termin": [87, 91, 101, 394, 409, 410, 411, 412, 413, 450, 451, 453, 454, 455, 461, 462, 463, 473, 475, 480, 481, 492, 500, 501, 576], "terrier": [384, 387, 388, 389, 390, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "test": [6, 94, 101, 115, 117, 120, 122, 123, 125, 126, 127, 130, 131, 133, 142, 161, 163, 166, 193, 194, 196, 202, 205, 206, 238, 284, 285, 286, 288, 291, 335, 352, 353, 354, 355, 356, 357, 358, 379, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 403, 406, 407, 408, 418, 420, 421, 423, 425, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 443, 445, 450, 456, 457, 466, 469, 470, 471, 472, 475, 479, 480, 482, 514, 516, 520, 526, 570, 571, 575, 578], "test2": 472, "test_aeff3d": 482, "test_edisp": 482, "test_events_with_gti": 513, "test_gti": 513, "test_person_txt": 378, "test_plot": 378, "test_psf": 482, "test_someth": 378, "test_using_data_fil": 357, "test_using_scipi": 358, "testcod": 379, "testoutput": 379, "testpar": 406, "teststatisticnest": [443, 445], "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 101, 102, 105, 109, 110, 111, 116, 118, 123, 125, 126, 141, 142, 147, 148, 150, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 173, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 262, 263, 265, 266, 267, 268, 271, 275, 277, 278, 303, 304, 325, 373, 379, 389, 401, 402, 405, 406, 414, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 510, 513, 514, 520, 521, 523, 525, 526, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574], "tevcat": [430, 478], "tevcat_nam": 71, "tevpi": 417, "tevtevtev1": 463, "tex": 379, "texliv": 379, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 105, 110, 123, 125, 133, 259, 260, 304, 341, 347, 367, 379, 386, 394, 404, 408, 454, 473, 482, 491, 500, 502, 533, 534, 535, 538, 539, 543, 559, 566, 576, 578], "textcolor": 367, "textkw": 367, "th": 198, "th47obfj": 483, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 132, 151, 152, 154, 155, 158, 162, 163, 164, 166, 170, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 284, 293, 356, 371, 378, 379, 381, 383, 384, 385, 388, 391, 392, 393, 396, 397, 402, 404, 405, 408, 437, 440, 441, 442, 444, 448, 450, 461, 462, 465, 470, 471, 476, 481, 483, 485, 488, 489, 512, 529, 534, 535, 576, 578], "thank": [402, 423, 424, 429, 431, 483, 516], "thaw": 486, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 104, 108, 112, 113, 124, 130, 137, 167, 273, 292, 325, 378, 379, 381, 383, 384, 385, 386, 387, 389, 392, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 408, 415, 426, 429, 431, 443, 444, 450, 451, 455, 477, 479, 481, 485, 486, 487, 488, 489, 491, 494, 504, 513, 514, 516, 521, 528, 529, 574, 575, 576, 577, 578, 580], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 104, 124, 215, 217, 224, 246, 305, 378, 379, 381, 383, 385, 386, 392, 394, 397, 404, 405, 407, 408, 414, 421, 437, 450, 451, 453, 456, 458, 461, 462, 464, 466, 470, 478, 479, 480, 481, 484, 485, 487, 489, 491, 493, 496, 501, 513, 516, 525, 576, 578], "theme": [431, 438], "themselv": [87, 91, 394, 483, 485, 523], "theorem": [284, 514, 578], "theoret": 489, "therefor": [105, 384, 388, 391, 392, 393, 397, 399, 401, 411, 429, 450, 470, 473, 481, 484, 485, 488, 489, 493, 502, 514, 578, 579], "thereof": 389, "thermal": [19, 552, 575], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 154, 160, 162, 164, 168, 176, 190, 199, 306, 309, 378, 426, 455, 492, 502, 533, 534, 538, 539], "theta2": [180, 190, 376, 437], "theta2_axi": 494, "theta2_max": 376, "theta2_min": 376, "theta2_t": 494, "theta_0": [33, 38], "theta_squared_axi": [190, 494], "thew": 478, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 102, 103, 104, 105, 108, 109, 110, 114, 118, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 137, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 173, 175, 176, 177, 179, 181, 183, 184, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 214, 216, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 277, 284, 286, 288, 294, 305, 313, 323, 326, 329, 334, 335, 353, 356, 363, 365, 367, 368, 369, 373, 375, 377, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 504, 505, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580], "thick": 375, "thin": [56, 317], "thing": [378, 381, 383, 386, 392, 393, 394, 395, 398, 402, 408, 417, 436, 455, 458, 472, 473, 485, 492], "think": [383, 395, 396, 398], "third": [62, 63, 87, 91, 379, 429, 478, 481, 484, 496, 502, 511], "thoma": [404, 437], "thorough": [484, 504], "those": [15, 83, 179, 193, 194, 196, 202, 205, 206, 211, 215, 217, 224, 246, 313, 367, 378, 381, 383, 385, 387, 392, 394, 397, 398, 399, 400, 401, 403, 408, 409, 410, 412, 413, 423, 426, 470, 475, 481, 484, 485, 486, 488, 496, 502, 514, 516, 525, 580], "though": [15, 381, 386, 392, 393, 394, 396, 398, 454, 487, 500], "thought": [383, 392], "three": [87, 91, 161, 287, 378, 387, 390, 392, 404, 445, 463, 465, 470, 476, 484, 489, 496, 521, 528, 575], "threshold": [67, 102, 109, 118, 123, 124, 125, 133, 141, 142, 150, 151, 155, 168, 179, 203, 284, 367, 368, 369, 392, 419, 425, 426, 448, 453, 455, 457, 463, 467, 470, 478, 479, 481, 483, 485, 491, 500, 512, 514], "threshold_alpha": 168, "through": [41, 87, 91, 304, 305, 375, 381, 383, 391, 392, 398, 402, 403, 411, 415, 429, 440, 449, 457, 466, 476, 481, 483, 484, 485, 486, 492, 493, 516, 521, 528, 575, 578], "throughout": [13, 385, 387, 388, 392, 394, 436, 478], "throught": 467, "thrown": 487, "thu": [378, 385, 392, 395, 396, 398, 433, 448, 449, 458, 459, 463, 465, 480, 573, 579], "thumbnail": 429, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 387, 472], "tibaldo": 434, "tick": [442, 443], "tick_param": 448, "ticker": 367, "tight_layout": [471, 481, 489, 535, 539], "tightli": 397, "tikonov": 406, "tild": [192, 204], "tile": [192, 194], "tilt": [252, 272, 389, 400, 401, 406, 418, 424, 458, 461, 462, 465, 466, 469, 479, 487, 492, 500, 501, 523, 529, 536, 556, 561], "tilt_prior": 406, "tim": 444, "time": [6, 19, 20, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 123, 124, 125, 130, 133, 136, 137, 145, 169, 175, 186, 188, 193, 194, 195, 196, 197, 202, 203, 205, 206, 211, 214, 216, 223, 226, 231, 235, 237, 238, 239, 254, 261, 262, 273, 276, 287, 292, 296, 301, 335, 355, 359, 360, 361, 362, 378, 379, 381, 383, 384, 385, 386, 388, 391, 392, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 407, 408, 410, 414, 418, 419, 422, 423, 424, 426, 429, 433, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 449, 453, 455, 456, 457, 459, 461, 463, 464, 466, 467, 469, 470, 473, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 500, 501, 502, 508, 509, 510, 512, 513, 514, 516, 521, 525, 529, 534, 535, 542, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 576, 577, 578, 579], "time1": 296, "time2": 296, "time_axi": [193, 194, 196, 197, 202, 205, 206, 287, 466, 475, 484, 529], "time_bin": 393, "time_bin_end": 393, "time_bin_s": 393, "time_bin_start": 393, "time_bound": 203, "time_box": 91, "time_column": 402, "time_delta": [86, 203, 359, 362], "time_edg": [203, 476, 484], "time_filt": 89, "time_format": [125, 203, 443, 472], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 130, 454, 458, 459, 461, 466, 470, 471, 475, 500], "time_map_axi": [203, 484], "time_map_axis_contigu": 484, "time_max": [100, 123, 125, 203, 392, 393, 394, 466, 470, 475, 478, 484], "time_mid": [203, 476], "time_min": [100, 123, 125, 203, 392, 393, 394, 466, 470, 475, 478, 484], "time_rang": [91, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 466, 563, 564, 565, 566, 567, 568, 569, 570, 571], "time_ref": [83, 85, 86, 91, 94, 197], "time_ref_default": 86, "time_ref_from_dict": 580, "time_relative_to_ref": 580, "time_resolved_spectroscopi": [447, 474, 475], "time_seri": 287, "time_start": [85, 86, 91, 393], "time_step": 393, "time_stop": [85, 86, 91, 393], "time_sum": [86, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276], "timedelta": [87, 91, 94, 203, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 335, 359, 362, 580], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [383, 385, 437], "timemapaxi": [125, 145, 195, 197, 429, 444, 445, 471, 472, 475, 476], "timerangeconfig": 16, "timeref": 465, "timescal": [137, 231, 293, 403, 476], "timeseri": 393, "timesi": [94, 441, 443, 465], "timestamp": 378, "timeunit": 465, "timmer": [287, 445], "timmer1995": 287, "tini": [463, 491], "tip": 516, "titl": [383, 467, 477], "tiziani": 435, "tjnt5jhg": 475, "tke": 492, "tm": [87, 91], "tmax": 393, "tmid": [88, 443, 463, 483, 488, 501], "tmin": 393, "to_2d": [148, 494], "to_3d": [147, 442, 444], "to_bands_hdu": [191, 192, 201, 204], "to_binsz": [192, 201, 204, 429], "to_binsz_wc": 201, "to_contigu": [203, 484], "to_counts_hdulist": 107, "to_cub": [191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 426, 459, 529], "to_dict": [19, 20, 26, 99, 101, 102, 105, 109, 110, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 405, 489], "to_edisp_kernel": [155, 445, 520], "to_edisp_kernel_map": [152, 429, 520], "to_energy_dependent_table_psf": 437, "to_even_npix": 204, "to_fits_head": 85, "to_fram": 199, "to_gti": [203, 444], "to_hdu": [193, 194, 205, 206], "to_hdulist": [102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 193, 194, 200, 201, 202, 205, 206, 484], "to_head": [84, 90, 104, 124, 192, 195, 197, 198, 203, 204, 405], "to_html": 378, "to_imag": [102, 105, 109, 110, 150, 151, 161, 163, 166, 191, 192, 201, 204, 400, 423, 424, 448, 459, 463, 479, 492, 526, 529], "to_json": [16, 84, 90, 104, 124], "to_map": [123, 125], "to_map_dataset": [105, 110], "to_mask": [102, 105, 109, 110, 477], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 429, 478], "to_node_typ": 198, "to_nsid": [192, 194], "to_odd_npix": 204, "to_panda": [87, 91], "to_parameters_t": [224, 246, 449, 450, 453, 454, 455, 458, 461, 471, 481, 489, 501], "to_pixel": [392, 453, 463, 477, 483, 487, 525, 533, 534, 535], "to_polygon": 392, "to_psf3d": [154, 162, 164], "to_python": [16, 84, 90, 104, 124], "to_region": [220, 221, 224, 225, 233, 236, 246, 250, 259, 260, 274, 392, 423, 487, 533, 534, 535], "to_region_map_dataset": [102, 105, 109, 110, 479], "to_region_nd_map": [151, 152, 158, 163, 166, 194, 202, 206, 426, 429, 492], "to_region_nd_map_histogram": [206, 443], "to_sed_typ": 402, "to_sherpa": [423, 437, 438], "to_spectrum": 429, "to_spectrum_dataset": [100, 102, 105, 109, 110, 400, 422, 424, 473, 479, 489], "to_st": 443, "to_str": [443, 448], "to_swap": [192, 193, 194], "to_tabl": [101, 125, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 197, 198, 202, 203, 215, 217, 238, 429, 445, 449, 451, 453, 454, 463, 467, 469, 470, 472, 478, 480, 487, 502, 514], "to_table_hdu": [83, 86, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 197, 198, 484], "to_table_psf": 435, "to_template_sky_model": [224, 246], "to_template_spectral_model": [224, 246, 401], "to_unit": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206], "to_wc": [193, 194], "to_wcs_geom": [192, 201, 529], "to_wcs_til": [192, 194], "to_yaml": [16, 84, 90, 104, 124, 224, 246, 389, 405, 487, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "tob": 454, "todai": 404, "todo": [13, 79, 87, 91, 99, 161, 275, 379, 402, 420, 491, 506, 507, 580], "tof": 160, "togeth": [100, 102, 105, 109, 110, 126, 130, 224, 246, 375, 378, 391, 395, 398, 409, 421, 449, 459, 461, 462, 467, 471, 479, 481, 483, 486, 487, 488, 489, 494, 501, 512, 513, 576], "tol": 481, "toler": [86, 100, 130, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 355, 481], "tolist": 481, "tomato": 449, "toml": 426, "ton": [293, 491], "too": [378, 383, 384, 428, 429, 442, 443, 444, 481, 485], "took": 403, "tool": [6, 13, 193, 194, 196, 205, 206, 377, 381, 385, 387, 389, 391, 394, 395, 398, 404, 415, 423, 434, 437, 438, 464, 467, 472, 479, 481, 484, 488, 491, 492, 494, 504, 516, 550, 574, 575], "toolbox": [394, 434], "top": [109, 110, 365, 374, 378, 383, 394, 398, 400, 411, 437, 455, 457, 463, 467, 470, 472, 476, 478, 483, 502, 516, 529, 574, 576, 580], "top_five_ts_3fhl": 502, "tophat2dkernel": 122, "topic": [383, 387, 398, 406, 502], "total": [51, 67, 99, 101, 102, 105, 109, 110, 126, 127, 130, 131, 140, 173, 188, 192, 212, 223, 231, 235, 237, 238, 239, 254, 261, 273, 276, 302, 386, 402, 406, 410, 412, 444, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 489, 490, 492, 495, 497, 499, 500, 501, 502, 503, 506, 512, 516, 521, 531, 541, 552, 562, 572, 575], "total_jfact": 477, "total_jfact_decai": 477, "total_model": 389, "total_obstim": 483, "total_stat": [212, 213, 449, 475, 481, 577], "touch": [86, 418], "tour": 496, "toward": [323, 385, 392, 398, 439], "tox": [342, 379, 381, 440, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 540, 548, 564], "tqdm": 516, "trace": [211, 212, 213, 426, 481], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 378], "track": [85, 94, 378, 387, 393, 404, 431, 486], "tracker": [381, 392, 445], "tradition": [487, 577], "train": 403, "traitlet": [394, 405], "traittyp": 405, "transfer": 405, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 161, 195, 197, 198, 203, 204, 224, 246, 307, 311, 334, 339, 378, 392, 394, 402, 406, 417, 419, 435, 438, 457, 463, 483, 489, 528, 533, 534, 580], "transit": [27, 368, 369, 385, 418, 419, 437, 493], "transit_map": 493, "transit_numb": 493, "transitsmap_crab": 493, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 394, 514], "transpar": 393, "transport": 484, "transpos": 438, "trapezoid": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 280, 316], "trapz": 316, "trapz_loglog": 424, "trash": 420, "travi": [423, 425, 429], "treat": [95, 410, 442, 443, 453, 465, 579], "treatment": [429, 453, 461, 575], "trend": 465, "tri": [77, 386, 392], "tributor": 404, "tricki": 392, "trigger": [356, 378, 407, 493], "trim": [102, 105, 151, 152, 158, 163, 166, 169, 204, 206, 272], "tripl": 154, "trivial": 385, "troubl": 576, "troubleshoot": [410, 411, 412], "trough": 476, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 122, 123, 124, 125, 126, 130, 131, 133, 134, 140, 143, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 173, 179, 180, 183, 184, 186, 187, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 211, 212, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 302, 305, 313, 314, 317, 335, 347, 349, 366, 371, 375, 378, 384, 391, 392, 393, 394, 401, 402, 405, 420, 424, 425, 436, 438, 439, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 492, 493, 498, 500, 501, 502, 506, 512, 514, 516, 521, 526, 528, 529, 532, 533, 534, 537, 538, 540, 561, 575, 578], "truelov": 53, "truncat": [133, 323, 429], "truncation_valu": [289, 295], "trust": [16, 84, 90, 104, 124], "trustworthi": 406, "truth": 489, "try": [16, 77, 84, 90, 104, 124, 193, 194, 196, 202, 205, 206, 378, 379, 388, 392, 398, 407, 408, 414, 419, 451, 453, 455, 465, 466, 470, 478, 481, 484, 502, 576], "ts2": 287, "ts3": 287, "ts_image_estim": 463, "ts_scan": [123, 125], "ts_threshold": [145, 284], "ts_threshold_ul": [473, 514], "ts_to_sigma": [464, 578], "tsimageestim": 437, "tsmap": 445, "tsmap_est": 371, "tsmapestim": [119, 143, 144, 371, 399, 402, 424, 425, 427, 429, 443, 445, 457, 463, 516], "tstart": [88, 91, 391, 393, 456, 465, 469, 471, 472, 475, 491], "tstop": [88, 391, 393, 456, 465, 469, 471, 475, 491], "tt": [86, 94, 360, 361, 404, 466, 471, 475, 580], "tth_sec3": 198, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 101, 102, 104, 105, 109, 110, 124, 128, 133, 147, 148, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 166, 169, 174, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 209, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 272, 275, 286, 288, 291, 317, 327, 334, 378, 484, 528], "turn": [83, 88, 379, 381, 392, 491, 573], "tutori": [82, 99, 120, 130, 132, 178, 378, 381, 382, 387, 390, 391, 392, 393, 394, 395, 396, 399, 408, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 497, 499, 500, 501, 502, 503, 516, 517, 519, 528, 573, 576], "tutorials_jupyt": [407, 496], "tutorials_python": 496, "tweak": [394, 429, 445, 484], "twice": [122, 528, 579], "twinx": 448, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 101, 102, 105, 109, 110, 136, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 169, 174, 176, 192, 193, 194, 195, 196, 198, 201, 202, 204, 205, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 335, 345, 367, 372, 375, 377, 378, 379, 381, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 406, 407, 408, 410, 431, 437, 439, 443, 445, 454, 455, 461, 462, 464, 467, 472, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 491, 493, 500, 501, 506, 512, 513, 514, 516, 525, 528, 529, 544, 578, 579], "txt": [125, 403, 405, 486, 492], "tyler": 431, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 101, 102, 104, 114, 122, 123, 124, 125, 127, 133, 167, 173, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 305, 335, 384, 387, 388, 389, 390, 392, 393, 394, 397, 401, 402, 404, 406, 408, 409, 414, 422, 429, 435, 436, 437, 443, 445, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 500, 501, 502, 504, 516, 528, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 576], "typeerror": [16, 84, 90, 104, 124, 305, 392, 402, 406], "typic": [123, 384, 387, 389, 396, 400, 401, 402, 403, 405, 410, 411, 450, 455, 459, 467, 469, 470, 471, 478, 479, 480, 482, 485, 487, 488, 504, 511, 512, 513, 521, 525, 574, 575], "typing_extens": [16, 84, 90, 104, 124], "typo": [378, 415, 441, 442, 445], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 102, 105, 109, 110, 115, 117, 118, 123, 125, 127, 129, 133, 141, 142, 150, 152, 161, 191, 192, 193, 194, 196, 197, 201, 202, 203, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 234, 238, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 277, 278, 287, 303, 304, 305, 325, 373, 378, 381, 385, 386, 387, 393, 394, 395, 396, 401, 402, 405, 406, 418, 419, 420, 437, 438, 439, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 506, 513, 514, 516, 518, 523, 525, 526, 529, 533, 535, 536, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570], "u03c3": 464, "u18": [33, 38], "uc": [87, 91], "ufunc": [193, 194, 196, 202, 205, 206, 455, 475], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 118, 136, 153, 243, 277, 278, 287, 294, 296], "ul": [67, 122, 123, 125, 126, 127, 130, 131, 133, 285, 462, 467, 472, 478], "ultim": 378, "un": [390, 404, 426, 486], "unambigu": 487, "unbehaun": 444, "unbin": [390, 391, 438], "unboundlocalerror": 378, "uncertaint": 396, "uncertainti": [52, 102, 105, 109, 110, 286, 288, 382, 395, 436, 451, 453, 473, 481, 489, 501, 574, 575, 577], "unchang": [102, 105, 109, 110, 115, 117, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 437], "unclear": [378, 388, 389, 395, 405], "uncom": [394, 491], "undefin": 579, "under": [72, 91, 134, 135, 143, 144, 378, 382, 387, 395, 404, 438, 439, 449, 454, 496, 500, 512, 578, 579], "underestim": 514, "underflow": 203, "underli": [87, 91, 201, 391, 451, 478, 484, 489, 502, 504, 513, 525, 528], "underscor": 378, "understand": [394, 415, 423, 424, 450, 453, 454, 455, 458, 465, 466, 471, 472, 476, 484, 485, 486, 491, 500, 501, 576], "undertak": 398, "unevenli": [136, 296], "unexpect": 493, "unfold": 575, "unfreez": [19, 20, 26, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 552], "unfreeze_al": [215, 217, 486], "unfrozen": 523, "unheard": 576, "uni": [406, 407], "uni_prior_stat_sum": 489, "unicod": [87, 91, 378], "unid": 67, "unidimension": 197, "unif": 423, "unifi": [87, 91, 382, 387, 392, 418, 421, 423, 424, 425, 426, 429, 438, 439, 575], "uniform": [161, 211, 334, 378, 387, 389, 390, 400, 402, 406, 420, 421, 425, 429, 445, 450, 484, 489, 574], "uniform_filt": [128, 206], "uniformli": [391, 514], "uniformprior": [406, 445, 489], "uninstal": 377, "union": [84, 86, 89, 90, 102, 104, 105, 124, 201, 340, 392, 393, 404, 405, 421, 512], "uniqu": [87, 91, 100, 150, 192, 193, 194, 195, 196, 202, 204, 205, 206, 215, 217, 224, 232, 246, 262, 272, 371, 388, 389, 390, 391, 401, 404, 424, 445, 454, 479, 487, 493, 529, 573], "unique_id": 487, "unique_paramet": [215, 217], "uniquifi": [87, 91], "unit": [6, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 101, 102, 105, 107, 109, 110, 111, 115, 116, 117, 118, 123, 125, 127, 129, 133, 141, 142, 147, 148, 149, 150, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 173, 176, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 214, 216, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 271, 272, 273, 274, 275, 277, 278, 287, 296, 303, 304, 305, 335, 349, 350, 351, 353, 362, 363, 364, 367, 368, 369, 373, 379, 387, 389, 392, 394, 396, 401, 402, 406, 418, 419, 421, 429, 431, 437, 438, 440, 441, 442, 443, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 506, 508, 509, 510, 513, 514, 516, 518, 520, 521, 523, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575], "unit_string_format": [443, 448], "unitbas": 305, "uniti": [128, 195, 274, 441, 535], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 232, 272], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [448, 456, 458, 461, 463, 469, 472, 491], "univers": [193, 194, 196, 202, 205, 206, 575], "univsers": 20, "unknown": [101, 288, 457, 481, 577, 578], "unless": [90, 93, 95, 126, 127, 130, 133, 169, 305, 377, 384, 403, 405, 482], "unlik": [87, 91, 284, 385, 396], "unmaintain": 419, "unmask": [87, 91], "unnam": [87, 91, 199], "unnecessari": [429, 440, 461], "unneed": 443, "unphys": 579, "unrealist": 378, "unrel": 580, "unreli": 491, "unsaf": 378, "unstabl": [378, 491], "unsupport": 395, "untar": 491, "until": [378, 381, 385, 392, 403, 436], "unus": [394, 421, 423], "unusu": 383, "unweight": [105, 110], "unzip": 491, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 101, 127, 129, 133, 154, 160, 162, 164, 201, 305, 378, 379, 382, 383, 385, 386, 387, 390, 392, 394, 395, 396, 398, 400, 404, 406, 408, 409, 410, 412, 414, 417, 419, 420, 421, 422, 423, 424, 425, 426, 429, 433, 435, 436, 437, 438, 439, 445, 453, 454, 461, 464, 465, 489, 491, 492, 529, 576], "upcast": 305, "upcom": [386, 387], "updat": [15, 16, 84, 87, 90, 91, 103, 104, 108, 124, 200, 214, 216, 224, 246, 274, 284, 325, 345, 378, 381, 383, 384, 385, 386, 387, 390, 395, 400, 402, 404, 405, 407, 408, 410, 411, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 435, 436, 437, 438, 440, 443, 444, 445, 484, 487, 527, 528], "update_config": 15, "update_forward_ref": [16, 84, 90, 104, 124], "update_from_dict": [214, 216], "update_link_label": [224, 246], "update_parameters_from_t": [224, 246], "upgrad": [192, 377, 403, 411], "upload": [395, 407], "upon": [102, 105, 109, 110, 387, 458, 486, 491, 512], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 101, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 143, 150, 198, 203, 211, 218, 219, 222, 223, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 247, 249, 251, 252, 253, 254, 258, 261, 263, 265, 266, 267, 268, 271, 273, 275, 276, 285, 286, 288, 405, 414, 425, 429, 436, 437, 438, 444, 453, 457, 467, 470, 479, 480, 483, 500, 512, 514, 516], "upper_error": 125, "upsampl": [163, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 420, 440], "upsample_geom": 163, "upstream": [378, 381], "upward": [286, 288], "url": 386, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 280, 285, 287, 289, 301, 303, 305, 313, 316, 317, 318, 325, 326, 329, 334, 335, 342, 345, 361, 362, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 461, 462, 463, 466, 467, 469, 471, 472, 473, 475, 476, 477, 478, 480, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 502, 505, 506, 516, 518, 519, 520, 522, 526, 527, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 580, 581], "usabl": 378, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 104, 120, 124, 130, 132, 178, 191, 192, 201, 204, 329, 384, 388, 389, 391, 393, 397, 402, 422, 443, 444, 478, 483, 485, 486, 576], "use_cach": 247, "use_center_as_plot_label": 198, "use_enum_valu": [16, 84, 90, 104, 124], "use_evaluation_region": [224, 246], "use_fft": 206, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [173, 180, 183, 184, 186, 187, 429, 450], "useless": 491, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 378, 379, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 415, 422, 429, 430, 436, 437, 438, 440, 454, 457, 464, 465, 466, 479, 480, 482, 484, 485, 486, 487, 488, 496, 500, 513, 514, 515, 516, 521, 525, 528, 531, 537, 541, 562, 572, 573, 576], "userdataset": 390, "usernam": 381, "userwarn": [453, 455, 462, 463, 467, 492], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 576, "usual": [29, 82, 83, 123, 141, 147, 148, 149, 161, 202, 313, 378, 379, 381, 383, 384, 385, 386, 392, 393, 398, 404, 408, 443, 448, 449, 450, 451, 453, 455, 456, 458, 459, 463, 465, 466, 469, 470, 471, 472, 475, 476, 477, 479, 485, 488, 493, 501, 504, 512, 516, 518, 519, 520, 522, 525, 529, 534, 573, 575, 576, 577], "ut1": 580, "utc": [86, 88, 104, 124, 359, 465, 470, 471, 475, 484, 487, 563, 564, 565, 566, 567, 568, 569, 570, 571, 580], "utf": [87, 91], "utf8": [16, 84, 90, 104, 124], "util": [6, 96, 104, 111, 115, 116, 117, 124, 125, 127, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 182, 183, 184, 185, 186, 187, 188, 189, 190, 283, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 378, 387, 389, 390, 391, 392, 402, 417, 420, 421, 422, 423, 430, 431, 434, 435, 436, 437, 438, 439, 443, 444, 445, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 504, 505, 516, 575], "utilis": [142, 379, 410, 412, 448, 453, 457, 464, 476, 480, 484, 488, 493, 501, 513, 516, 523], "v": [26, 31, 32, 37, 87, 91, 154, 160, 162, 163, 164, 166, 175, 182, 200, 273, 284, 309, 381, 386, 393, 394, 405, 406, 407, 408, 431, 448, 470, 477, 488, 500], "v0": [95, 385, 386, 389, 390, 392, 395, 397, 398, 403, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 438, 439, 440, 465, 466, 482, 486, 491], "v1": [13, 16, 84, 90, 104, 124, 378, 385, 387, 389, 394, 395, 396, 397, 403, 404, 407, 410, 412, 423, 424, 425, 431, 436, 440, 441, 442, 443, 444, 445, 467, 492, 548], "v15": 445, "v1secfmx": 475, "v2": [404, 405, 429, 437, 444], "v3": 421, "v_0": [37, 49], "v_glat": 312, "v_glon": 312, "va": 533, "vagu": 383, "vain": 381, "val": [87, 91, 193, 194, 196, 202, 205, 206, 215, 217, 484, 528], "valfmt": 367, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 106, 123, 124, 127, 135, 144, 165, 179, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 305, 323, 377, 378, 387, 391, 394, 395, 404, 423, 431, 440, 450, 453, 475, 481, 483, 484, 487, 492, 514, 516, 521, 575], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "valid_interv": 475, "valid_tim": 475, "validate_al": 405, "validate_assign": [16, 84, 90, 104, 124, 405], "validate_default": [16, 84, 90, 104, 124], "validate_earth_loc": 90, "validate_loc": 405, "validate_scalar": 90, "validate_zenith_angl": 405, "validationerror": [16, 84, 90, 104, 124, 405], "valle": 38, "valleespir": 506, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 104, 105, 109, 110, 112, 113, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 169, 173, 179, 180, 182, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 284, 285, 286, 288, 289, 291, 292, 293, 296, 305, 309, 317, 318, 332, 335, 345, 349, 364, 367, 368, 369, 379, 381, 384, 389, 390, 392, 394, 396, 398, 401, 402, 405, 420, 423, 429, 440, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 491, 492, 493, 494, 500, 501, 502, 504, 508, 509, 510, 514, 516, 520, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 576, 577, 578, 579], "value_rang": 91, "value_scan": 285, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 224, 246, 378, 392, 405], "values_equ": [87, 91], "values_err": 473, "values_scal": [147, 148, 149, 202, 206, 238, 270, 274, 275, 317, 441, 443, 466, 482], "vanilla": [87, 91], "var": [294, 410, 412], "vari": [68, 103, 108, 130, 161, 211, 317, 345, 390, 392, 393, 403, 423, 426, 447, 449, 458, 463, 464, 466, 474, 475, 483, 487, 489, 492, 496], "variability_amplitud": 476, "variability_amplitude_100": 476, "variability_amplitude_error": 476, "variability_amplitude_signific": 476, "variability_estim": [447, 471, 474, 476], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 104, 124, 136, 137, 206, 286, 288, 291, 292, 293, 294, 296, 301, 316, 343, 378, 379, 381, 391, 393, 394, 408, 410, 412, 418, 419, 435, 436, 437, 443, 444, 445, 447, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 496, 500, 501, 502, 521, 576, 577, 578], "varianc": [96, 138, 139, 293, 294, 304, 393, 444, 488, 523], "variant": 408, "variat": [137, 239, 293, 384, 394, 448, 476, 482, 483, 526, 578], "varieti": [389, 574], "variou": [120, 126, 127, 130, 131, 133, 142, 378, 384, 388, 390, 393, 402, 405, 408, 410, 429, 430, 444, 449, 451, 454, 457, 462, 464, 470, 480, 481, 500, 512, 516, 574, 580], "vasco": 445, "vast": [395, 431], "vaughan": [294, 476], "vaughan2003": 294, "ve": [378, 379, 381, 576], "vector": [191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 484, 520, 528], "vega": 438, "vel": 473, "vel_di": [45, 506], "vela": [66, 417, 451, 473, 502], "veloc": [31, 32, 37, 45, 49, 309, 312], "ver": 484, "verbos": [11, 82, 379, 401, 576, 578], "veri": [63, 87, 91, 141, 211, 368, 377, 378, 379, 380, 383, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 405, 408, 439, 448, 449, 456, 476, 478, 480, 481, 484, 489, 492, 502, 512, 516, 529, 538, 539, 573, 575, 576, 577], "verif": [100, 224, 246, 341, 344, 462, 492], "verifi": [215, 217, 236, 284, 378, 391, 478, 516], "verifywarn": 516, "verita": [97, 410, 415, 492], "versa": 192, "version": [11, 78, 85, 87, 91, 125, 181, 377, 379, 381, 382, 385, 386, 387, 388, 392, 395, 398, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 422, 423, 428, 430, 431, 433, 436, 437, 438, 440, 441, 443, 444, 445, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 514, 576], "versu": [147, 153, 284, 286, 288, 491, 510], "vert": 253, "vertex": 392, "vhe": [450, 504], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 103, 108, 194, 199, 209, 377, 379, 381, 386, 390, 392, 393, 394, 395, 396, 397, 399, 401, 404, 405, 406, 407, 408, 410, 411, 418, 426, 434, 436, 437, 438, 442, 443, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 498, 500, 501, 502, 516, 520, 525, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 576, 580], "viabil": 405, "vice": 192, "victor": 433, "view": [83, 87, 91, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 170, 193, 194, 196, 200, 202, 205, 206, 232, 307, 311, 365, 378, 392, 419, 424, 429, 431, 438, 439, 453, 455, 459, 461, 465, 475, 479, 482, 483, 485, 491, 492, 516, 518, 519, 520, 521, 522, 523, 525, 575], "vika": 429, "vila": 445, "vin\u00edciu": 436, "viridi": [455, 477], "virtual": [381, 408, 410, 411, 412, 576], "visibl": [87, 91, 368, 369, 386, 429, 448, 465, 493, 501, 502, 575], "vision": 383, "visit": 466, "visual": [6, 194, 206, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 392, 424, 425, 443, 444, 445, 453, 455, 459, 461, 463, 466, 481, 482, 488, 494, 501, 502, 516, 525, 530, 533, 574], "visualis": [375, 390, 392, 399, 425, 440, 455, 482, 487, 489, 491, 516], "vline": [510, 533, 534], "vmax": [102, 105, 109, 110, 368, 369, 458, 461, 463, 469, 479, 484, 485, 492, 493, 500, 501, 525], "vmin": [102, 105, 109, 110, 368, 369, 457, 461, 469, 479, 484, 485, 492, 493, 500, 501, 525], "volum": [27, 197, 201, 204], "vorokh": [434, 435], "voruganti": [436, 437], "vstack": [83, 86, 391], "vuillaum": [404, 437], "vx": [309, 312, 403], "vy": [309, 312], "vz": [309, 312], "w": [26, 31, 49, 86, 190, 203, 302, 379, 403, 457, 459, 467, 477, 483, 487, 489, 525, 577, 579], "w0xgszul": 475, "w3npda5u": 461, "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 102, 104, 118, 124, 126, 127, 130, 133, 169, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 371, 378, 381, 383, 384, 385, 386, 387, 388, 391, 392, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 418, 421, 422, 423, 424, 425, 426, 433, 437, 438, 439, 440, 441, 442, 443, 449, 451, 453, 459, 461, 463, 467, 483, 489, 491, 492, 493, 494, 502, 576], "wagner": 476, "wai": [33, 38, 83, 87, 91, 198, 287, 329, 335, 377, 378, 379, 381, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 398, 399, 402, 404, 410, 411, 412, 414, 417, 421, 437, 438, 451, 453, 455, 458, 461, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 491, 492, 493, 494, 496, 506, 513, 515, 516, 520, 529, 574, 576, 578], "wait": [378, 407, 408], "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 104, 107, 124, 150, 176, 201, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 378, 380, 381, 383, 384, 385, 388, 392, 393, 394, 396, 397, 398, 408, 409, 410, 411, 412, 414, 415, 418, 438, 450, 453, 454, 455, 456, 458, 465, 466, 469, 470, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 500, 501, 502, 520, 573, 576, 577, 578, 579, 580], "ward": 303, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 104, 124, 194, 214, 215, 216, 217, 270, 271, 272, 274, 364, 403, 408, 420, 437, 442, 443, 444, 445, 448, 456, 457, 458, 461, 462, 463, 465, 466, 469, 472, 473, 491, 492, 516, 540, 548, 576], "warn_miss": 87, "warn_with_traceback": 378, "wasn": [385, 438], "watch": [492, 580], "water": [410, 493], "watson": 419, "wavelength": 397, "wavelet": [417, 435], "wc": [13, 16, 83, 102, 105, 109, 127, 168, 176, 177, 181, 192, 193, 194, 196, 201, 202, 204, 205, 206, 221, 224, 225, 233, 236, 246, 248, 259, 260, 264, 270, 274, 338, 373, 378, 384, 392, 397, 419, 420, 421, 423, 429, 437, 438, 442, 444, 453, 454, 457, 458, 459, 461, 463, 467, 470, 473, 477, 479, 482, 483, 485, 486, 487, 492, 500, 501, 502, 525, 528, 533, 534, 535, 540], "wcda": [57, 70], "wcs_geom": [201, 224, 246, 484, 529], "wcs_geom_3d": 484, "wcs_geom_cel": 484, "wcs_map": [205, 206, 371], "wcs_tile": [192, 194], "wcsax": [102, 105, 109, 110, 194, 201, 202, 206, 224, 246, 373, 375, 461, 484, 502, 532, 536, 537, 538], "wcsconfig": 16, "wcsgeom": [23, 83, 102, 105, 109, 110, 111, 114, 116, 122, 123, 133, 152, 161, 163, 173, 186, 187, 191, 192, 201, 205, 206, 220, 221, 225, 233, 236, 248, 250, 259, 260, 264, 270, 274, 379, 384, 392, 419, 422, 423, 424, 429, 442, 444, 445, 453, 457, 458, 463, 465, 466, 467, 469, 473, 477, 479, 480, 482, 483, 484, 485, 487, 492, 493, 501, 502, 512, 514, 523, 525, 526, 529, 532, 534, 535, 536, 537], "wcslib": 378, "wcsmap": [193, 194, 196, 206, 440], "wcsndmap": [102, 105, 111, 116, 118, 133, 141, 161, 163, 166, 168, 170, 175, 176, 177, 178, 181, 186, 187, 192, 193, 194, 196, 202, 204, 205, 207, 208, 224, 246, 262, 270, 365, 371, 373, 384, 422, 423, 424, 426, 429, 431, 438, 440, 443, 444, 457, 458, 467, 477, 479, 483, 484, 492, 502, 512, 514, 522, 525], "wcsprm": 540, "wcsshape": 484, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 101, 133, 175, 201, 204, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 278, 353, 378, 379, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 404, 405, 407, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 425, 429, 431, 436, 437, 438, 439, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 498, 500, 501, 502, 513, 520, 521, 523, 525, 528, 539, 542, 552, 573, 576, 577, 578, 579, 580], "weak": [397, 480, 489], "weaker": 284, "weakli": 485, "web": [87, 91, 386, 404, 407, 408, 414, 415, 429, 437, 445, 478, 491], "webpag": [380, 386, 398, 404, 407, 437, 440], "websit": 445, "wedg": 392, "week": [381, 386, 396, 398, 403, 407], "weekli": [384, 387, 391, 392, 470], "wegen": [437, 438], "weigh": [163, 166, 489], "weight": [67, 105, 110, 151, 152, 158, 161, 163, 166, 192, 193, 194, 196, 201, 202, 204, 205, 206, 255, 272, 406, 439, 443, 464, 489, 512, 528], "weighted_chi2_paramet": 464, "weighted_kernel": 161, "welcom": [383, 392, 492], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 105, 110, 115, 117, 122, 123, 131, 192, 196, 198, 202, 204, 214, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 368, 369, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 414, 415, 418, 420, 421, 422, 423, 424, 425, 426, 429, 431, 432, 437, 438, 439, 443, 444, 449, 450, 456, 459, 464, 466, 470, 472, 475, 479, 480, 481, 482, 483, 484, 485, 487, 491, 492, 496, 500, 501, 502, 512, 513, 514, 525, 528, 529, 573, 574, 576, 578], "went": 418, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 137, 292, 378, 383, 384, 385, 386, 391, 393, 394, 395, 396, 397, 398, 399, 401, 403, 406, 408, 418, 421, 422, 423, 424, 425, 426, 429, 432, 437, 438, 441, 462, 473, 475, 485, 489, 491, 579], "wg": 407, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 278, 335, 379, 384, 392, 395, 397, 398, 405, 408, 416, 467, 477, 478, 480, 481, 491, 492, 496, 501, 504, 512, 529, 561, 576, 577, 580], "whatev": [392, 394, 395, 576], "whatsnew": 407, "wheel": [395, 445], "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 122, 123, 124, 125, 140, 151, 152, 158, 163, 165, 166, 176, 179, 193, 194, 196, 198, 200, 202, 205, 206, 211, 212, 218, 219, 222, 224, 226, 228, 229, 230, 234, 238, 240, 241, 243, 246, 247, 249, 251, 252, 253, 255, 258, 263, 265, 266, 267, 268, 271, 274, 275, 317, 377, 378, 379, 381, 383, 384, 385, 388, 390, 392, 393, 395, 398, 403, 404, 405, 406, 410, 411, 412, 423, 431, 432, 437, 439, 442, 443, 444, 449, 455, 459, 463, 466, 467, 470, 471, 473, 478, 481, 483, 484, 487, 488, 491, 492, 512, 514, 516, 521, 523, 527, 528, 575, 577, 578, 579, 580], "when_us": 90, "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 104, 123, 124, 125, 128, 133, 150, 151, 152, 158, 163, 166, 168, 179, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 207, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 289, 292, 295, 297, 305, 342, 379, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 410, 412, 414, 420, 432, 438, 448, 453, 458, 465, 466, 478, 483, 484, 485, 487, 489, 491, 492, 493, 502, 504, 512, 513, 516, 521, 528, 533, 534, 535, 538, 539, 542, 575, 576, 577, 578, 579, 580], "wherea": [384, 392, 395, 576], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 102, 104, 105, 107, 109, 110, 123, 124, 125, 126, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 179, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 218, 219, 222, 224, 226, 228, 229, 230, 234, 238, 240, 241, 243, 246, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 272, 274, 275, 287, 305, 314, 341, 344, 346, 347, 375, 383, 385, 392, 395, 397, 398, 405, 443, 456, 469, 480, 483, 484, 502, 528, 577, 578], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 104, 105, 107, 109, 110, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 141, 142, 143, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 168, 169, 173, 174, 179, 180, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 209, 211, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 233, 234, 236, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 278, 284, 286, 287, 288, 292, 293, 294, 296, 301, 303, 317, 327, 337, 338, 356, 365, 367, 372, 374, 377, 379, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 412, 413, 415, 419, 420, 421, 423, 424, 425, 426, 429, 432, 438, 440, 443, 448, 449, 450, 453, 456, 457, 458, 459, 461, 464, 465, 466, 467, 470, 472, 473, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 500, 501, 502, 506, 507, 512, 513, 514, 516, 518, 519, 520, 522, 523, 525, 527, 528, 529, 530, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578, 579], "whichev": [192, 193, 194], "while": [87, 91, 105, 193, 194, 196, 198, 202, 205, 206, 378, 381, 383, 384, 385, 387, 390, 391, 393, 397, 399, 400, 402, 403, 404, 407, 408, 410, 448, 453, 455, 458, 466, 472, 473, 479, 480, 482, 483, 484, 486, 487, 512, 514, 516, 527, 529, 576], "whilst": [379, 488, 496], "whippl": 97, "whirlwind": 496, "white": [293, 367, 368, 463, 473, 481, 486, 504, 529], "whitespac": 323, "who": [404, 477, 504], "whole": [95, 118, 170, 173, 180, 183, 184, 186, 187, 192, 193, 194, 196, 205, 206, 247, 277, 286, 288, 378, 384, 390, 393, 404, 450, 453, 461, 466, 470, 473, 479, 487, 492, 494, 573], "whose": [404, 408, 466, 522, 534], "why": [378, 379, 383, 385, 392, 481, 529], "wide": [385, 404, 405, 419, 438, 451, 462, 575], "wider": [471, 485, 523], "widget": [193, 194, 196, 202, 205, 206, 461, 469, 484, 500, 501], "width": [16, 27, 68, 83, 87, 91, 102, 105, 109, 110, 111, 112, 113, 115, 116, 117, 118, 128, 133, 150, 151, 152, 155, 158, 161, 163, 166, 168, 173, 178, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 221, 224, 225, 233, 235, 236, 246, 248, 259, 260, 262, 264, 270, 272, 274, 368, 369, 394, 401, 439, 454, 455, 457, 458, 459, 461, 463, 464, 465, 466, 467, 469, 470, 473, 477, 478, 479, 482, 483, 484, 485, 487, 492, 493, 500, 501, 502, 523, 525, 526, 527, 528, 529, 533, 534, 535, 537, 538, 539], "width_err": 478, "width_error": 68, "width_min": 201, "width_pix": [192, 193, 194], "widthconfig": 16, "wiki": [34, 83, 88, 429, 491, 494], "wikipedia": [34, 83, 88, 334, 392, 396], "wilei": [135, 144], "wilk": [284, 514, 578], "willing": 381, "wind": [50, 459, 464, 487, 507], "window": [112, 113, 377, 378, 385, 395, 408, 409, 410, 412, 418, 434, 438, 457, 478, 575, 576, 578], "wise": [19, 20, 26, 87, 91, 141, 142, 194, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 406, 431, 459, 461, 512], "wish": [201, 381, 396, 464, 481], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [388, 389, 390, 393, 400, 402], "withdrawn": [382, 383, 388, 389, 390, 393, 400, 402], "within": [126, 129, 141, 192, 206, 223, 224, 225, 231, 235, 236, 237, 238, 239, 246, 254, 259, 261, 262, 273, 276, 377, 378, 379, 383, 387, 392, 394, 395, 396, 397, 398, 401, 403, 404, 406, 408, 409, 410, 412, 432, 435, 437, 441, 443, 445, 454, 455, 461, 464, 470, 471, 472, 475, 478, 480, 482, 483, 484, 487, 488, 492, 496, 502, 512, 515, 516, 575], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 130, 153, 191, 192, 197, 201, 204, 375, 378, 381, 383, 386, 388, 392, 393, 394, 395, 397, 402, 408, 419, 420, 424, 445, 454, 457, 461, 462, 475, 477, 483, 484, 485, 500, 516, 527, 528, 529, 571, 576, 578], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 477], "wo": 473, "wobbl": [95, 472, 491], "wobbleregionfind": 431, "wobbleregionsfind": 455, "wolfram": [332, 333], "women": 434, "won": [87, 91, 118, 122, 126, 130, 133, 350, 403, 461, 484, 491, 579], "wong": [421, 445], "wood": [385, 435, 437, 438], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 516], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 125, 203, 342, 377, 378, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 403, 404, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 430, 433, 434, 435, 436, 437, 438, 439, 440, 445, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502, 512, 516, 526, 528, 540, 542, 548, 564, 570, 571, 576], "workaround": 395, "workflow": [381, 386, 387, 394, 399, 403, 408, 423, 445, 454, 459, 496, 500, 501, 517], "workshop": 387, "workspac": 381, "world": [83, 204, 224, 246, 378, 384, 463, 502, 528], "worst": 381, "worth": [378, 504], "would": [16, 84, 87, 90, 91, 95, 104, 124, 193, 194, 196, 202, 205, 206, 378, 381, 384, 385, 386, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 402, 404, 405, 420, 429, 451, 453, 456, 457, 469, 481, 484, 485, 487, 489, 492, 529], "wouldn": 392, "wqsdmwhv": 475, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 198, 258, 313, 392, 422, 445], "wrap_at": 389, "wrap_coord": 198, "wrapper": [56, 247, 258, 317, 392, 393, 420, 423, 504, 516], "write": [11, 15, 16, 26, 82, 86, 87, 88, 91, 100, 101, 102, 105, 107, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 193, 194, 196, 200, 202, 205, 206, 212, 224, 238, 246, 270, 271, 272, 273, 274, 347, 356, 379, 381, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 408, 414, 417, 423, 426, 431, 433, 436, 437, 438, 439, 444, 445, 448, 453, 461, 462, 465, 467, 482, 486, 487, 491, 492, 498, 500, 501, 516, 521, 577, 579], "write_arf": 107, "write_bkg": 107, "write_covari": [15, 100, 212, 224, 246], "write_dataset": 15, "write_ds9": 487, "write_model": 15, "write_pha": 107, "write_rmf": 107, "writeabl": 406, "writer": [87, 91, 398, 405], "writeto": [86, 147, 148, 149, 153, 154, 155, 157, 160, 162, 164, 165, 465], "written": [88, 100, 101, 102, 105, 107, 109, 110, 123, 125, 151, 152, 158, 163, 166, 193, 194, 196, 200, 202, 205, 206, 208, 378, 379, 381, 383, 387, 388, 398, 404, 406, 441, 448, 466, 486, 489, 504, 512, 513, 516, 529, 575], "wrong": [378, 427, 441, 442, 443], "wrote": 404, "wrt": [83, 163, 166, 378, 396, 472, 571], "wstat": [105, 110, 298, 299, 390, 417, 435, 436, 449, 453, 454, 456, 459, 463, 473, 479, 489, 512, 575], "wstatcountsstatist": [473, 578], "wt": [26, 477], "wun": 421, "www": [26, 67, 87, 91, 135, 144, 398, 491, 516], "wyatt": [417, 575], "wzol0cog": 475, "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 102, 109, 128, 135, 141, 142, 144, 148, 198, 202, 203, 211, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 258, 259, 260, 261, 263, 266, 267, 268, 273, 274, 287, 293, 294, 297, 308, 309, 310, 312, 316, 318, 323, 332, 367, 370, 371, 378, 379, 383, 385, 386, 387, 392, 403, 407, 451, 456, 457, 463, 466, 473, 475, 476, 478, 481, 482, 484, 489, 492, 502, 510, 516, 533, 534, 576, 578], "x27": [480, 482], "x86_64": [448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "x_": 128, "x_0": [193, 194, 196, 202, 205, 206], "x_1": 317, "x_2": 317, "x_3": 317, "x_bkg": 473, "x_edg": 129, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [193, 194, 196, 202, 205, 206], "x_j": 128, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [128, 330, 332, 467], "x_min": [128, 330, 332, 467], "x_n": [193, 194, 196, 202, 205, 206], "x_r_0": 236, "x_ref": [128, 467], "x_sigma": 233, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [211, 481], "xarg": 378, "xaxi": [480, 516], "xerr": [448, 475, 489], "xf": 491, "xfail": 378, "xlabel": [379, 443, 459, 472, 475, 489, 492, 508, 509, 510, 533, 570], "xlim": [365, 461, 489, 492, 510], "xmax": [17, 18, 21, 22, 24, 25, 27, 202, 406], "xmin": [17, 18, 21, 22, 24, 25, 27, 202, 406], "xml": [387, 388, 389, 422, 436, 438, 491, 504], "xmltodict": [430, 491], "xref": 128, "xrxsyr2d": 475, "xspec": [226, 275, 302, 436, 449, 577], "xunit": [455, 542], "xviii": 398, "xx": [389, 404, 416], "xxx": [87, 91, 383, 404], "xxx_by_coord": 484, "xxxx": 516, "xy": [453, 463, 467, 533], "xy_posit": [33, 34, 38], "xytext": 533, "xyz": 407, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 141, 142, 148, 198, 211, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 308, 309, 310, 312, 316, 318, 370, 378, 392, 403, 443, 448, 457, 463, 466, 475, 481, 489, 510, 516], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [211, 481], "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 101, 102, 104, 105, 109, 110, 123, 124, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 284, 341, 344, 346, 347, 377, 386, 387, 389, 390, 391, 394, 395, 400, 405, 406, 408, 409, 421, 422, 423, 426, 431, 440, 444, 448, 450, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 501, 502, 515, 573, 574, 575, 576], "yaml_str": [224, 246, 454], "yaxi": [451, 480, 516], "ye": 408, "year": [45, 61, 65, 78, 378, 383, 385, 386, 388, 395, 398, 399, 403, 405, 408, 435, 437, 438, 462, 464, 478, 491, 508, 509, 510, 511], "yearli": [411, 436], "yellow": 368, "yerr": [473, 475], "yet": [89, 377, 378, 381, 383, 385, 392, 395, 398, 399, 445, 446, 451, 454, 500, 580], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 193, 194, 196, 202, 205, 206, 342, 385, 391, 392, 397, 399, 401, 406, 485, 577, 578, 579], "yk04": [45, 48], "yk04b": 48, "ylabel": [379, 472, 475, 489, 492, 508, 509, 510, 533, 570], "ylim": [365, 449, 459, 489, 492, 508, 510, 549, 558, 559, 560], "ymax": [533, 534], "ymin": [533, 534], "yml": [381, 395, 407, 408, 409, 410, 412, 437], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 101, 104, 107, 124, 125, 141, 148, 150, 153, 176, 193, 194, 196, 202, 205, 206, 211, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 277, 284, 377, 378, 379, 380, 381, 383, 385, 388, 392, 395, 396, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 429, 437, 438, 439, 449, 450, 451, 453, 454, 455, 456, 458, 459, 461, 463, 465, 466, 469, 471, 472, 473, 475, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 496, 500, 501, 502, 512, 513, 516, 519, 523, 527, 550, 573, 576, 577, 578, 579, 580], "your": [16, 19, 20, 26, 84, 90, 99, 104, 124, 218, 219, 222, 226, 228, 229, 230, 234, 240, 241, 243, 247, 249, 251, 252, 253, 258, 263, 265, 266, 267, 268, 271, 275, 377, 378, 379, 381, 383, 385, 408, 409, 410, 411, 412, 414, 415, 418, 419, 420, 423, 424, 429, 438, 439, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 511, 516, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 578], "yourself": [576, 577], "yr": [45, 52, 53, 506, 508, 509, 510], "yscale": [459, 568], "yt": 378, "yu": [421, 445], "yunit": [453, 455, 477, 478, 492, 553], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 437, "yy": 404, "yyyi": 404, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 308, 309, 312, 403, 404, 477, 506, 542], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 433, "zanin": [437, 438], "zd": 83, "ze0c24dp": 475, "zen": 488, "zen_pnt": 488, "zenith": [448, 462, 488, 491, 492, 493, 521], "zenith_angl": [83, 405, 492, 502], "zenodo": [404, 431, 491], "zero": [52, 53, 67, 87, 91, 100, 102, 105, 109, 110, 133, 141, 150, 151, 152, 155, 158, 163, 179, 193, 194, 196, 202, 205, 206, 250, 272, 274, 317, 323, 335, 378, 422, 425, 440, 445, 478, 483, 484, 489, 579], "zg7oljgx": 483, "zhao": [27, 444], "zhen": [135, 144], "zip": [393, 406, 407, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 500, 501, 502, 510, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "zl": [26, 477], "zone": 473, "zsh": 379, "zt": [26, 477], "zuh0lvsh": 475, "z\u00e9": 436, "\u00e0": 435, "\u0261\u00e6m\u0259pa\u026a": 516, "\u03b3": [137, 504, 575], "\u03c3": 464}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_empty_map_dataset_from_irfs", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "combine_flux_maps", "combine_significance_maps", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_flux_maps", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (October xx, 2024)", "2.0 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 454, 466, 494, 500], "0": [387, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446], "1": [383, 387, 406, 416, 417, 424, 425, 427, 432, 440, 441, 442, 443, 444, 445, 489], "10": [392, 416, 418], "10th": 440, "11": [393, 416, 419], "12": [394, 416, 420], "12th": 431, "13": [395, 416, 421, 430, 433], "13th": 443, "14": [396, 416, 422], "14th": 441, "15": [416, 423], "16": [397, 416, 424], "16th": 432, "17": [416, 425], "18": [398, 416, 426, 427, 428], "19": [399, 416, 429], "19th": 428, "1d": [454, 456, 462, 470, 471, 496], "1dc": 491, "2": [384, 385, 406, 416, 428, 430, 442, 444, 446, 489, 555], "20": [400, 416, 431, 432, 434], "2014": 417, "2015": [430, 433], "2016": [434, 435], "2017": 436, "2018": [437, 438, 439], "2019": [418, 419, 420, 421, 422, 423], "2020": [424, 425, 426, 427, 428], "2021": 429, "2022": [431, 432, 440], "2023": [441, 442, 443], "2024": [444, 445], "21": 401, "2155": 480, "22": [402, 435], "22nd": 429, "23": [403, 438], "24": 404, "25": [405, 417], "26": [406, 421], "28": [418, 436, 437], "29": [419, 439], "29th": 444, "2d": [458, 496], "3": [385, 406, 416, 423, 433, 445], "30": [420, 422], "304": 480, "32": 378, "3955": 406, "3d": [461, 462, 469, 470, 496], "3fgl": [547, 558], "3fhl": 462, "4": [386, 416, 434], "4122": 406, "4fgl": [559, 560], "4th": 426, "5": [387, 416, 435], "6": [388, 416, 436], "64": 378, "6th": [427, 442], "7": [385, 389, 416, 437], "8": [390, 416, 438], "9": [391, 416, 439], "A": [453, 480], "As": 522, "In": 379, "ON": [450, 455, 462], "On": 456, "The": [384, 408, 462, 464, 480, 481, 489, 513, 525], "To": [378, 379, 398, 516], "about": 489, "abov": 464, "absolute_tim": 359, "absorpt": [401, 449, 542], "abstract": [383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "accept": 381, "access": [457, 479, 480, 484, 493, 513], "accessor": 528, "account": 449, "action": [378, 398], "ad": 484, "adapt": 457, "adaptiveringbackgroundmak": 168, "add": [389, 486], "add_colorbar": 366, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [401, 406, 522, 574], "aeff_2d": 518, "against": 455, "aim": 486, "algorithm": 475, "alia": 401, "all": 471, "along": 405, "altern": [386, 389, 391, 392, 393, 394, 395, 396, 398, 399, 402, 405], "amplitud": [406, 489], "an": [378, 448, 465, 466, 479, 485], "anaconda": 411, "analysi": [0, 11, 15, 384, 387, 448, 450, 453, 454, 455, 456, 461, 462, 463, 470, 473, 496, 500, 512, 515, 574], "analysisconfig": 16, "angl": [518, 519, 520, 522], "angular": 529, "annihil": 477, "annotate_heatmap": 367, "api": [6, 378, 379, 400, 402, 405, 406, 440, 443, 444, 445, 480, 496, 501], "apply_edisp": [111, 116], "approach": [393, 450, 451, 454, 456, 457, 458, 459, 462, 465, 466, 467, 469, 470, 471, 472, 475, 476, 481, 485, 486, 488, 500, 501], "apr": [425, 430, 434, 436], "arbitrari": 405, "area": [482, 491, 518], "argument": [378, 392], "arm": 506, "asmoothmapestim": 118, "assert": 378, "assert_quantity_allclos": 353, "assert_skycoord_allclos": 354, "assert_time_allclos": 355, "assess": [461, 481], "assign": [471, 486], "astro": [1, 504, 507], "astronomi": 393, "astrophys": [1, 505, 506, 507], "astropi": [378, 403], "asymmetr": 482, "attribut": [378, 379, 389], "aug": [417, 433], "author": 404, "authorship": 404, "avail": 478, "ax": [484, 529], "axi": [378, 521], "backend_default": 320, "background": [389, 393, 397, 400, 406, 459, 464, 465, 483, 486, 491, 492, 500, 519, 523, 524, 525, 526, 577], "background2d": 147, "background3d": 148, "backgroundirf": 149, "backgroundirfmodel": 389, "backgroundmodel": 389, "backport": 378, "base": [402, 405, 527], "basic": [463, 484], "bayesian": 476, "between": 400, "bin": [393, 448, 464, 529], "binder": 408, "bit": 378, "bkg_2d": 519, "bkg_3d": 519, "block": 476, "boundari": 485, "branch": 407, "break": 378, "broken": [379, 543, 557], "brokenpowerlawspectralmodel": 218, "bsd": 378, "bug": [431, 440, 443, 444, 445], "bugfix": 407, "build": [379, 381, 408, 470, 471], "built": 573, "bullet": 379, "bundl": 378, "burkertprofil": 17, "butterfli": 501, "call": 389, "candid": [407, 457], "caplog": 378, "cartesian": 306, "case": [384, 388, 406, 579], "casebattacharya1998": 28, "cash": [289, 577, 578], "cash_sum_cython": 290, "cashcountsstatist": 286, "catalog": [2, 478, 485, 486, 502, 511], "catalog_registri": 55, "caveat": 577, "cell": 378, "certif": 381, "cff": 404, "chain": [453, 455], "chang": [378, 399, 440, 443, 444, 445], "changelog": 398, "character": 476, "check": [11, 378, 379, 413, 448, 450, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "checker": 352, "chi": 464, "choos": 379, "citat": 404, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 378, 379, 388, 389, 402, 405, 501, 522, 578], "clean": 397, "cli": 576, "click": 378, "clobber": 378, "clumpi": 504, "cluster": [13, 488], "code": [378, 379, 384, 387, 408], "codemeta": 404, "collect": 404, "colormap": 581, "colormap_hess": 368, "colormap_milagro": 369, "combin": [486, 513], "combine_flux_map": 134, "combine_significance_map": 135, "command": [11, 378, 576], "common": 480, "compar": [455, 470], "compound": [487, 544], "compound_region_to_region": 336, "compoundspectralmodel": 219, "comput": [447, 448, 452, 453, 454, 459, 460, 463, 468, 474, 481, 490, 495, 497, 499, 501, 503, 531, 541, 562, 572], "compute_chisq": 291, "compute_flux_doubl": 292, "compute_fpp": 293, "compute_fvar": 294, "compute_lightcurve_discrete_correl": 136, "compute_lightcurve_doublingtim": 137, "compute_lightcurve_fpp": 138, "compute_lightcurve_fvar": 139, "conda": 409, "confer": 404, "confid": 481, "config": [11, 458, 459, 576], "configur": [454, 461, 467, 470, 480, 500, 574], "constant": [532, 545, 563], "constantfluxspatialmodel": 220, "constantspatialmodel": 221, "constantspectralmodel": 222, "constanttemporalmodel": 223, "contain": 405, "containment_radiu": 207, "containment_region": 208, "content": [479, 529], "context": [450, 451, 453, 454, 455, 456, 457, 458, 459, 462, 464, 465, 467, 469, 470, 471, 472, 475, 476, 485, 488, 489, 500, 501], "contigu": 484, "continu": 408, "contour": 481, "contribut": [381, 404, 486], "contributor": [404, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "conveni": 390, "convent": 378, "convers": [378, 480], "convert": 378, "coordin": [13, 378, 389, 519, 529], "correct": 379, "correl": 459, "count": [480, 486, 492, 512, 578], "covari": [209, 481], "covarianceresult": 210, "creat": [450, 453, 458, 459, 466, 479, 480, 482, 484, 485, 501, 529], "create_cosmic_ray_spectral_model": 277, "create_crab_spectral_model": 278, "create_empty_map_dataset_from_irf": 112, "create_fermi_isotropic_diffuse_model": 279, "create_map_dataset_from_observ": 113, "create_map_dataset_geom": 114, "creation": [450, 454, 471], "cstat": 295, "cta": [388, 491], "ctao": 491, "cube": [384, 484, 496], "cumul": 450, "current": 403, "curv": [393, 470, 471, 472, 480, 570, 571], "custom": [487, 489, 573], "cut": [451, 455], "cutoff": [546, 547, 548, 558, 559, 560], "cutout": 484, "cycl": 403, "cython": [403, 408], "d_sun_to_galactic_cent": 305, "dark": [477, 504], "darkmatt": [1, 504], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 378, 384, 386, 387, 393, 405, 408, 449, 450, 453, 454, 455, 461, 462, 464, 467, 470, 471, 473, 475, 479, 483, 484, 493, 496, 500, 501, 502, 513, 524, 576, 577], "dataflow": 405, "dataset": [4, 11, 99, 100, 378, 387, 390, 399, 400, 405, 448, 450, 454, 455, 458, 459, 461, 462, 466, 470, 471, 472, 479, 480, 481, 483, 485, 486, 489, 493, 500, 501, 512], "dataset_registri": 98, "datasetmodel": 224, "datasetsmak": 169, "datastor": [82, 491, 501], "dco": [381, 404], "deal": 379, "dec": 423, "decai": 477, "decemb": 442, "decis": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "default": 389, "defin": [448, 450, 453, 455, 463, 465, 466, 470, 471, 485, 501, 529], "definit": [404, 470, 524], "depend": [377, 395, 401, 431, 455, 464, 466, 487], "deprec": [378, 403], "deriv": 579, "detail": [385, 461], "detect": [399, 457, 463, 521], "detector": 519, "develop": [378, 380, 381, 385], "diagram": 388, "differ": [462, 484, 580], "diffus": 492, "dilat": 485, "direct": 455, "discrete_correl": 296, "discuss": 393, "disk": [454, 466, 500, 501, 533], "diskspatialmodel": 225, "dispers": [482, 491, 492, 520], "dissolv": 397, "distribut": [395, 494, 506], "dl3": [3, 462, 494, 513, 521, 524], "dl4": [482, 512, 514, 524, 528, 573], "dl5": [514, 573], "dl6": 514, "dmprofil": 18, "do": 378, "doc": 408, "docstr": 379, "document": [379, 381, 387, 398, 444, 445], "doubl": 476, "download": [11, 408], "downsampl": 529, "dr1": [494, 560], "dr2": 560, "dr3": 559, "draw": 328, "driven": 576, "drop": 385, "due": 449, "durat": 483, "e": 494, "each": 464, "earli": 381, "earth_location_from_dict": 315, "ebl": [449, 542], "ebl_data_builtin": 227, "eblabsorptionnormspectralmodel": 226, "edg": 514, "edisp": 482, "edisp_2d": 520, "edispkernel": 150, "edispkernelmap": 151, "edispmap": 152, "effect": [482, 483, 491, 518], "effectiveareatable2d": 153, "einastoprofil": 21, "elaps": 580, "empti": 479, "encourag": 489, "end": 378, "energi": [401, 448, 455, 464, 466, 482, 485, 487, 491, 492, 514, 518, 519, 520, 522], "energydependentmorphologyestim": 120, "energydependentmultigausspsf": 154, "energydispersion2d": 155, "environ": 409, "eros": 485, "error": [481, 578], "estim": [5, 121, 396, 399, 402, 405, 454, 457, 464, 467, 470, 475, 476, 480, 483, 514, 524, 525, 578], "estimate_exposure_reco_energi": 140, "estimator_registri": 119, "evalu": [389, 390, 391], "event": [387, 391, 465, 466, 473, 484, 491, 492, 494, 502, 513, 521], "eventlist": 83, "eventlistmetadata": 84, "evolut": 466, "exampl": [408, 489, 512, 514, 515, 523, 524, 525, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 577], "excess": [402, 450, 459, 476, 578], "excessmapestim": 122, "exclus": [453, 454, 459, 485, 500], "execut": 576, "exemplari": 406, "exercis": [448, 451, 453, 456, 461, 463, 465, 466, 472, 475, 491, 492, 493, 494, 502], "exist": 384, "expcutoffpowerlaw3fglspectralmodel": 228, "expcutoffpowerlawnormspectralmodel": 229, "expcutoffpowerlawspectralmodel": 230, "expdecai": 564, "expdecaytemporalmodel": 231, "expect": 521, "explor": [450, 454, 463, 496], "exponenti": [29, 451, 546, 547, 548, 558, 559, 560], "expos": 389, "exposur": [482, 492], "extend": [450, 465], "extens": [379, 449], "extern": 378, "extra": 408, "extract": [459, 470, 471, 472], "extrapol": [378, 561], "f_cash_root_cython": 297, "factor": 477, "factori": 484, "factoris": 521, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 406, "featur": [14, 403, 407, 440, 443, 444, 445, 480], "feb": [424, 437], "februari": 444, "fermi": [462, 492], "fermist": 504, "file": [379, 404, 454, 458, 459, 462, 491, 500, 513, 529], "fill": [484, 529], "filter": 471, "final": [383, 407, 454, 579], "find_peak": 141, "find_peaks_in_flux_map": 142, "finder": 525, "first": [407, 454], "fit": [10, 13, 211, 387, 393, 449, 450, 451, 453, 454, 455, 458, 461, 462, 463, 469, 472, 481, 485, 489, 492, 500, 501, 529, 573, 577, 578, 579], "fitresult": 212, "fix": [378, 431, 440, 443, 444, 445], "fixedpointinginfo": 85, "fixtur": 378, "flare": 471, "float": 378, "flux": [402, 406, 448, 449, 451, 453, 454, 462, 467, 477, 478, 480, 500, 501, 502, 514], "fluxestim": 402, "fluxmap": [123, 402, 480], "fluxmetadata": 124, "fluxpoint": [125, 480], "fluxpointscollect": 402, "fluxpointsdataset": [101, 390, 479], "fluxpointsestim": [126, 514], "fluxprofileestim": 127, "fold": 389, "folder": 408, "follow": 399, "format": [378, 379, 580], "formula": 579, "forward": 389, "found": 576, "fov": [483, 523], "fov_to_ski": 307, "fovalign": 156, "fovbackgroundmak": [170, 523], "fovbackgroundmodel": 232, "fraction": 476, "freez": [403, 407, 486], "from": [378, 471, 484, 485, 486, 529], "from_yaml": 341, "fulli": 480, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 378, 379, 491, 518, 519, 520, 521, 522, 578, 580], "further": [393, 449, 577], "galact": [308, 492], "galactocentr": 506, "galleri": [378, 379, 530], "gamlik": 504, "gamma": [393, 477], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 378, 381, 384, 387, 395, 397, 398, 399, 403, 404, 405, 407, 408, 414, 415, 482, 491, 492, 493, 494, 504, 507, 511, 512, 513, 514, 515, 521, 523, 524, 525, 528, 573, 574, 580], "gaussian": [534, 535, 549, 565, 566], "gaussianspatialmodel": 233, "gaussianspectralmodel": 234, "gaussiantemporalmodel": 235, "gener": [378, 384, 388, 393, 404, 405, 514, 535, 566], "generalist": 402, "generalizedgaussianspatialmodel": 236, "generalizedgaussiantemporalmodel": 237, "geom": 191, "geometri": [450, 463, 470, 471, 484, 485, 500, 501, 527, 529], "get": [381, 398, 410, 449, 458, 459, 484, 505, 506, 507, 513, 528], "get_combined_flux_map": 143, "get_combined_significance_map": 144, "get_images_path": 342, "get_irfs_featur": 96, "get_random_st": 329, "get_rebinned_axi": 145, "get_wstat_gof_term": 298, "get_wstat_mu_bkg": 299, "github": 378, "given": 486, "global": 400, "glossari": 575, "good": 579, "gpl": 378, "group": 488, "gti": [86, 513], "guid": [380, 517], "guidelin": [379, 383, 384, 398], "h": 494, "halv": 476, "handl": [378, 387, 388, 389, 400, 404, 483, 580], "have": [386, 388, 393, 394, 402], "hawc": [462, 493], "hduindext": 87, "hduloc": 313, "healpix": 527, "help": 413, "helper": 390, "hess": 462, "hgp": 478, "hierarch": 488, "hierarchi": 405, "hierarchical_clust": 303, "high": [0, 5, 387, 394, 500, 515], "hli": 454, "how": [378, 379, 381, 398, 407, 484, 516], "hpxgeom": 192, "hpxmap": 193, "hpxndmap": 194, "hstack_column": 348, "i": [378, 381, 383, 467], "idea": 388, "imag": [379, 384, 392, 397, 457, 463, 484, 496], "imageprofil": 128, "imageprofileestim": 129, "implement": [388, 389, 398, 404, 406, 487, 489], "import": [378, 469], "improv": [389, 401, 431, 440, 443, 444, 445], "inbuilt": 482, "includ": [379, 489], "index": [484, 489, 513], "info": [11, 378], "inform": [404, 478, 489, 520], "infrastructur": 445, "input": [378, 405, 457], "inspect": 501, "instal": [398, 410, 411, 413], "instrument": [7, 462, 521], "integr": [13, 408, 448], "integrate_spectrum": 280, "interact": 400, "interest": 464, "interfac": [0, 387, 389, 394, 500, 515, 528], "intern": 480, "interpol": [13, 378, 484], "interpolate_profil": 318, "interpolation_scal": 319, "interv": 471, "intrins": 449, "introduc": [389, 397, 399, 401, 402, 467], "introduct": [389, 392, 393, 395, 396, 398, 402, 404, 405, 448, 453, 455, 463, 473, 477, 478, 479, 483, 484, 491, 492, 493, 494, 496, 502, 504, 506, 507, 577], "inversecdfsampl": 327, "ipython": 414, "irf": [7, 157, 387, 405, 448, 479, 482, 491, 521], "irf_registri": 159, "irfmap": 158, "isothermalprofil": 22, "isotrop": 492, "issu": 413, "iter": 484, "j": 477, "jan": 418, "jfactori": 23, "joint": [461, 462, 512], "json": 404, "jul": 421, "june": [432, 443], "jupyt": [378, 410, 412, 414], "kei": 480, "kernel": 482, "labelmapaxi": [195, 484], "lat": [462, 492], "latest": 491, "law": [451, 543, 546, 547, 548, 554, 555, 556, 557, 558, 559, 560], "lazi": 390, "lazyfitsdata": 314, "lc": 470, "let": 466, "level": [0, 5, 384, 387, 394, 500, 501, 515], "li": 473, "licens": 378, "light": [393, 470, 471, 472, 480, 571], "lightcurv": [393, 465, 472, 476, 478], "lightcurveestim": [130, 514], "lightcurvetemplatetemporalmodel": 238, "like": [465, 480], "likelihood": 579, "limit": 388, "line": [11, 378, 576], "linear": 567, "lineartemporalmodel": 239, "link": 379, "list": [379, 389, 390, 391, 392, 393, 394, 395, 465, 471, 478, 484, 485, 486, 487, 502, 513], "literatur": 455, "livetim": 483, "load": [390, 448, 449, 451, 453, 455, 478, 480, 486, 493], "load_irf_dict_from_fil": 167, "locat": 378, "log": [11, 378, 451, 550, 551], "logparabolanormspectralmodel": 240, "logparabolaspectralmodel": 241, "logspir": 34, "long": 404, "loop": [450, 483, 501], "lorimer2006": 35, "low": [384, 501], "lt": 403, "ma": 473, "mai": [420, 431], "maintain": [385, 404], "mainten": 387, "major": 407, "make": [378, 381, 407, 463, 466, 473, 501], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 337, "make_counts_rad_max": 182, "make_edisp_kernel_map": 183, "make_edisp_map": 184, "make_effective_livetime_map": 185, "make_map_background_irf": 186, "make_map_exposure_true_energi": 187, "make_observation_time_map": 188, "make_orthogonal_rectangle_sky_region": 338, "make_path": 343, "make_psf_map": 189, "make_theta_squared_t": 190, "maker": [8, 172, 399, 405, 450, 471, 483, 500, 501, 523, 524, 525], "maker_registri": 171, "mamba": 411, "manag": [387, 411], "manual": [485, 488], "map": [9, 196, 200, 384, 387, 388, 457, 458, 459, 462, 463, 469, 473, 477, 482, 484, 485, 486, 498, 502, 514, 527, 528, 529], "mapax": 197, "mapaxi": 198, "mapcoord": [199, 528], "mapdataset": [102, 390, 461, 465, 479, 493, 512], "mapdataseteventsampl": [103, 391], "mapdatasetmak": [173, 524], "mapdatasetmetadata": 104, "mapdatasetonoff": [105, 390], "mappanelplott": 365, "mar": 419, "march": 441, "mask": [392, 453, 454, 459, 479, 485, 500], "materi": 404, "matter": [477, 504], "measur": 577, "meet": 387, "messag": 378, "met": 580, "metadata": [404, 405], "method": [379, 390, 391, 406, 476, 484, 514, 528], "method_default": 321, "method_kwargs_default": 322, "meyercrabspectralmodel": 243, "miniconda": 411, "minor": 399, "mission": 580, "model": [10, 244, 246, 387, 389, 397, 400, 401, 405, 406, 449, 450, 453, 454, 455, 458, 461, 462, 463, 465, 466, 470, 471, 472, 475, 477, 478, 479, 481, 486, 487, 489, 491, 500, 501, 502, 506, 507, 508, 509, 510, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 577], "model_registri": 242, "modelbas": 245, "modif": 485, "modifi": [378, 484, 487], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 464, "morphologi": 487, "motion_since_birth": 309, "motiv": 406, "mpl_plot_check": 356, "multi": 462, "multipl": [465, 486, 489, 512], "multiprocessing_manag": 325, "n_jobs_default": 323, "naima": 552, "naimaspectralmodel": 247, "name": [378, 389, 521], "nebula": 509, "new": [378, 389, 393, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 471], "next": [451, 453, 454, 457, 463, 470, 491, 493, 494, 500, 502], "nfwprofil": 25, "night": 470, "non": [378, 484, 529], "norm": [401, 487, 536, 548, 551, 553, 556], "norm_bounds_cython": 300, "normal": [330, 500], "notat": 578, "note": [378, 416, 453, 480, 577], "notebook": [11, 378, 386, 414], "nov": [426, 427, 428, 429, 435, 439], "novemb": 440, "now": 393, "nuisanc": 406, "number": [378, 403, 521], "numpi": 403, "o": 467, "object": [378, 379, 388, 400, 458, 459, 465, 466, 478, 480, 488], "observ": [3, 88, 92, 387, 388, 449, 453, 454, 463, 465, 466, 470, 471, 483, 488, 500, 501], "observationeventsampl": 108, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [448, 464, 472, 488], "octob": 445, "off": [451, 453, 456, 462], "offset": [518, 519, 520, 522], "ogipdatasetread": 106, "ogipdatasetwrit": 107, "old": 408, "one": 480, "onto": 484, "open": 473, "oper": [484, 485], "optimizeresult": 213, "option": [377, 395, 481], "org": 408, "organ": [384, 393], "origin": [378, 381], "other": [378, 379, 388, 408, 411, 504], "outlin": 406, "outlook": [390, 391, 392, 394, 395, 397, 398, 399, 402], "output": 378, "over": 473, "overview": [398, 410, 464, 491, 493, 523, 525, 526], "overwrit": 378, "own": 576, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 397, 399, 408, 411, 431, 496, 504, 505, 574], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 581, "paper": 387, "parabola": [451, 550, 551], "parallel": [13, 390], "paramet": [214, 215, 389, 401, 406, 454, 464, 481, 486, 487, 500], "parameterestim": 131, "parametr": 389, "parametricpsf": 164, "pdf": 331, "perform": [391, 450, 491, 501], "person": 404, "perspect": 385, "phase": [473, 570], "phasebackgroundmak": 174, "phasogram": 473, "piecewis": [536, 553], "piecewisenormspatialmodel": 248, "piecewisenormspectralmodel": 249, "pig": [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "pip": 411, "pixel": [378, 392, 485], "pk": 480, "plan": 385, "plot": [14, 378, 449, 453, 454, 463, 464, 467, 484, 486, 501, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 581], "plot_contour_lin": 370, "plot_distribut": 371, "plot_heatmap": 372, "plot_map_rgb": 373, "plot_npred_sign": 374, "plot_spectrum_datasets_off_region": 375, "plot_theta_squared_t": 376, "png": 379, "point": [379, 406, 448, 449, 451, 453, 454, 462, 463, 465, 476, 478, 480, 491, 500, 501, 502, 514, 522, 537], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 250, "poisson": 577, "polar": 310, "polici": 404, "pool_kwargs_default": 324, "popul": [1, 506], "posit": [406, 489, 520], "possibl": 404, "post": 407, "power": [451, 543, 546, 547, 548, 554, 555, 556, 557, 558, 559, 560], "powerlaw": [451, 568], "powerlaw2spectralmodel": 251, "powerlawnormspectralmodel": 252, "powerlawspectralmodel": 253, "powerlawtemporalmodel": 254, "precis": 391, "predict": 512, "prepar": [393, 403, 448, 450, 466, 501], "prerequisit": [450, 451, 453, 454, 455, 456, 458, 462, 464, 465, 466, 467, 469, 470, 471, 472, 476, 481, 485, 486, 489, 500, 501], "pretti": 478, "primaryflux": 26, "print": 478, "prior": [255, 406, 489], "priorparamet": [216, 217], "produc": 493, "product": [477, 482], "profil": [449, 467, 477, 579], "project": [387, 408], "propag": 405, "propos": [386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 405, 450, 451, 454, 456, 457, 458, 459, 462, 465, 466, 467, 469, 470, 471, 472, 475, 476, 481, 485, 486, 488, 500, 501], "psf": [482, 492, 522], "psf3d": 160, "psf_tabl": 522, "psfkernel": 161, "psfking": 162, "psfmap": [163, 482], "public": 404, "pull": [378, 381, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "pulsar": [51, 473, 508, 509], "purpos": 383, "pwn": 50, "pydant": 405, "python": [378, 379, 385, 403, 414], "qualiti": [387, 408, 453, 455, 461, 481], "quantiti": [480, 488, 514], "radial": 519, "radial_distribut": 48, "radmax2d": 165, "rai": [393, 477], "random": [13, 378], "rang": [483, 524], "read": [457, 462, 466, 467, 484, 485, 486, 529], "read_hermes_cub": [281, 283], "read_yaml": 344, "recommend": [410, 412], "reconstruct": 519, "recopsfmap": 166, "recursive_merge_dict": 345, "redshift": 449, "reduc": [4, 458, 459, 479, 500, 501], "reduct": [8, 387, 393, 450, 453, 454, 455, 461, 470, 471, 475, 483, 493, 500, 501, 524, 576], "refer": [6, 398, 575, 576, 577], "reflect": [483, 525], "reflectedregionsbackgroundmak": [175, 525], "reflectedregionsfind": 176, "region": [13, 389, 392, 448, 450, 453, 455, 483, 485, 486, 525, 529], "region_to_fram": 339, "regiongeom": [201, 529], "regionndmap": [202, 529], "regions_to_compound_region": 340, "regionsfind": 177, "relat": 529, "releas": [378, 387, 403, 404, 407, 408, 416], "remark": 383, "remnant": 510, "remov": [378, 486], "renam": 378, "repositori": 408, "repr": 378, "represent": [401, 480, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "request": [378, 381, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "requir": [377, 378, 395, 405], "requires_data": 357, "requires_depend": 358, "resampl": 479, "resample_energy_edg": 146, "residu": [453, 455, 461, 501], "resolv": [399, 473, 475], "respons": [7, 521], "restructur": 398, "result": [393, 402, 448, 450, 454, 457, 464, 467, 470, 475, 480, 579], "return": [378, 379], "review": 383, "ring": [459, 483, 526], "ringbackgroundmak": 178, "rmf": 520, "road": 388, "roadmap": 387, "rotat": 392, "rst": 379, "run": [11, 381, 453, 454, 455, 464, 466, 467, 470, 500, 576], "run_multiprocess": 326, "safe": [483, 524], "safemaskmak": 179, "sampl": [391, 465, 466], "sample_powerlaw": 332, "sample_spher": 333, "sample_sphere_dist": 334, "sample_tim": 335, "sampler": 466, "save": [454, 500, 501], "scale": 580, "scale_plot_flux": 282, "scaledregulargridinterpol": 317, "scalespectralmodel": 258, "scenario": 388, "schedul": 403, "scheme": [389, 404], "script": [11, 13, 378, 414, 496, 498], "section": 398, "sed": 514, "select": [450, 454, 463, 470, 471, 475, 478, 486, 500, 501, 513], "select_nested_model": 284, "sensit": 448, "sensitivityestim": 132, "sep": [422, 438], "serial": [390, 405, 462], "serialis": [406, 454, 467, 482, 486, 487, 492, 512], "seril": 389, "set": [381, 454, 484, 500], "setup": [386, 408, 410, 412, 413, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 500, 501, 502], "sever": 378, "share": 487, "shell": 538, "shell2": 539, "shell2spatialmodel": 259, "shellspatialmodel": 260, "shorter": 401, "should": 378, "show": [463, 464, 488], "signal": 464, "signific": [450, 457, 459, 485, 578], "simplepulsar": 54, "simplifi": 401, "simul": [387, 390, 455, 456, 465, 466, 469, 472], "sine": 569, "sinetemporalmodel": 261, "singl": [379, 456], "size": 529, "skip": 378, "sky": [9, 389, 392, 463, 465, 485, 520, 528], "sky_to_fov": 311, "skycoord": 528, "skymodel": [262, 487], "slice": 484, "small": 381, "smooth": [457, 557], "smoothbrokenpowerlawspectralmodel": 263, "snr": 52, "snrtruelovemcke": 53, "solut": 405, "some": [378, 388, 485], "sourc": [1, 2, 448, 450, 453, 457, 463, 464, 465, 466, 472, 478, 485, 489, 491, 502, 506, 507, 508, 509, 511], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 389, "sourcemodel": 389, "spatial": [389, 401, 463, 477, 484, 487, 506, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540], "spatial_model_registri": 256, "spatialirfmodel": 389, "spatialmodel": 264, "special": 579, "specif": [389, 398, 478, 480], "spectra": 477, "spectral": [401, 406, 449, 450, 451, 453, 454, 455, 462, 463, 477, 487, 496, 502, 530, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 561], "spectral_model_registri": 257, "spectralirfmodel": 389, "spectralmodel": 265, "spectroscopi": 475, "spectrum": [449, 453, 455, 456, 463, 473, 483, 501], "spectrumdataset": [109, 390, 479, 512], "spectrumdatasetmak": [180, 524], "spectrumdatasetonoff": [110, 390], "sphinx": [378, 379], "spiral": 506, "split_dataset": [115, 117], "spread": [491, 522], "squar": [464, 494], "stack": [453, 459, 461, 512], "standard_scal": 304, "standardise_unit": 363, "start": [398, 410, 505, 506, 507, 513, 528], "stat": [12, 449], "stat_contour": 481, "stat_profile_ul_scipi": 285, "stat_surfac": 481, "statist": [12, 453, 485, 577, 578], "statu": [383, 388, 397, 403], "step": [454, 491, 493, 494, 574], "store": [393, 454, 520], "str": 378, "structur": [397, 399, 431, 502, 574], "structure_funct": 301, "studi": 393, "style": 384, "sub": [484, 505], "subclass": 406, "subpackag": 384, "subset": 478, "suggest": 404, "summari": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 461, 492], "super": [558, 559, 560], "superexpcutoffpowerlaw3fglspectralmodel": 266, "superexpcutoffpowerlaw4fgldr3spectralmodel": 267, "superexpcutoffpowerlaw4fglspectralmodel": 268, "supernova": 510, "support": [378, 385, 403, 404, 406, 482, 512], "survei": [498, 581], "symmetr": 519, "systemat": 406, "t": [457, 578], "tabl": [13, 464, 478, 480, 493, 513], "table_row_to_dict": 349, "table_standardise_units_copi": 350, "table_standardise_units_inplac": 351, "tag": 401, "target": 453, "task": [389, 390, 391, 392, 393, 394, 395], "templat": [465, 540, 561], "templatendspatialmodel": 270, "templatendspectralmodel": 271, "templatenpredmodel": 272, "templatephasecurvetemporalmodel": 273, "templatespatialmodel": 274, "templatespectralmodel": 275, "tempor": [466, 472, 487, 530, 563, 564, 565, 566, 567, 568, 569, 570, 571], "temporal_model_registri": 269, "temporalmodel": 276, "term": 404, "terminologi": 388, "test": [13, 378, 381, 464, 473], "text": 378, "theta": 494, "thi": 381, "through": 480, "thumbnail": 379, "time": [13, 387, 393, 447, 452, 460, 465, 468, 471, 472, 474, 475, 476, 490, 495, 496, 497, 499, 503, 531, 541, 562, 572, 580], "time_ref_from_dict": 360, "time_ref_to_dict": 361, "time_relative_to_ref": 362, "timemapaxi": [203, 484], "timmerkonig_lightcurve_simul": 287, "to_yaml": 346, "tool": [11, 378, 576], "tooltip": 379, "touch": 381, "trapz_loglog": 316, "troubleshoot": [413, 576], "true": [518, 520, 522], "tsmapestim": 133, "tutori": [379, 386, 398, 410, 464, 491, 493, 496], "two": 486, "type": [378, 405, 512, 514], "uncertainti": 396, "underli": [471, 529], "unfold": 406, "unfreez": 486, "unif": 402, "unifi": [389, 402], "unit": [13, 378], "unit_from_fits_image_hdu": 364, "unix": 378, "unreleas": 446, "up": [381, 397, 399], "upsampl": 529, "us": [378, 388, 406, 411, 414, 454, 464, 465, 470, 479, 481, 482, 484, 500, 501, 504, 507, 511, 512, 513, 514, 515, 521, 523, 524, 525, 528, 547, 558, 559, 560, 573], "user": [385, 517], "util": [4, 5, 8, 10, 13, 397, 574, 578, 580], "valid": 405, "valleespir": 38, "valu": [378, 406, 464, 484, 489], "vari": 472, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 465, 476], "varianc": 476, "variou": 488, "veloc": 506, "velocity_distribut": 49, "velocity_glon_glat": 312, "venv": 409, "version": [378, 403, 407, 416, 469], "virtual": 409, "visual": [14, 399, 484, 529, 581], "visualis": [457, 475, 480], "volum": 529, "warn": 378, "wc": [484, 529], "wcsgeom": 204, "wcsmap": 205, "wcsndmap": 206, "we": [386, 393, 394, 402, 493], "webpag": 408, "what": [378, 381, 383, 386, 388, 393, 394, 402, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 451, 453, 454, 457, 463, 470, 500, 502], "where": 378, "which": 378, "wind": 509, "wise": 470, "without": 489, "wobbleregionsfind": 181, "work": 513, "workflow": 574, "write": [378, 383, 454, 466, 484, 485, 513, 529, 576], "write_yaml": 347, "wstat": [302, 577, 578, 579], "wstatcountsstatist": 288, "xx": 445, "yaml": [401, 454, 500, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571], "your": [413, 454, 576], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})