Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[433, null]], "0.10 (Jan 28, 2019)": [[434, null]], "0.11 (Mar 29, 2019)": [[435, null]], "0.12 (May 30, 2019)": [[436, null]], "0.13 (Jul 26, 2019)": [[437, null]], "0.14 (Sep 30, 2019)": [[438, null]], "0.15 (Dec 3, 2019)": [[439, null]], "0.16 (Feb 1, 2020)": [[440, null]], "0.17 (Apr 1, 2020)": [[441, null]], "0.18 (Nov 4th, 2020)": [[442, null]], "0.18.1 (Nov 6th, 2020)": [[443, null]], "0.18.2 (Nov 19th, 2020)": [[444, null]], "0.19 (Nov 22nd, 2021)": [[445, null]], "0.2 (Apr 13, 2015)": [[446, null]], "0.20 (May 12th, 2022)": [[447, null]], "0.20.1 (June 16th, 2022)": [[448, null]], "0.3 (Aug 13, 2015)": [[449, null]], "0.4 (Apr 20, 2016)": [[450, null]], "0.5 (Nov 22, 2016)": [[451, null]], "0.6 (Apr 28, 2017)": [[452, null]], "0.7 (Feb 28, 2018)": [[453, null]], "0.8 (Sep 23, 2018)": [[454, null]], "0.9 (Nov 29, 2018)": [[455, null]], "1. Bayesian analysis": [[509, "bayesian-analysis"]], "1.0 (November 10th, 2022)": [[456, null]], "1.0.1 (March 14th, 2023)": [[457, null]], "1.0.2 (December 6th, 2023)": [[458, null]], "1.1 (June 13th 2023)": [[459, null]], "1.2 (February 29th 2024)": [[460, null]], "1.3 (November 26th, 2024)": [[461, null]], "1D Spectral": [[467, "d-spectral"], [520, "d-spectral"]], "1D spectrum simulation": [[473, null]], "2. Limitations of the Markov Chain Monte Carlo approach": [[509, "limitations-of-the-markov-chain-monte-carlo-approach"]], "2.0 (unreleased)": [[462, null]], "2D Image": [[475, null], [520, "d-image"]], "2D map fitting": [[476, null]], "3. Nested sampling approach": [[509, "nested-sampling-approach"]], "3D Cube": [[486, null], [520, "d-cube"]], "3D detailed analysis": [[479, null]], "3D map simulation": [[488, null]], "A fully configured Flux Points Estimation": [[500, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[470, "a-note-on-statistics"]], "A note on the internal representation": [[500, "a-note-on-the-internal-representation"]], "API Links": [[393, "api-links"]], "API changes": [[456, "api-changes"], [459, "api-changes"], [460, "api-changes"], [461, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[120, null]], "Abstract": [[397, "abstract"], [398, "abstract"], [399, "abstract"], [400, "abstract"], [401, "abstract"], [402, "abstract"], [404, "abstract"], [405, "abstract"], [406, "abstract"], [407, "abstract"], [408, "abstract"], [409, "abstract"], [410, "abstract"], [411, "abstract"], [412, "abstract"], [413, "abstract"], [414, "abstract"], [415, "abstract"], [416, "abstract"], [417, "abstract"], [418, "abstract"], [419, "abstract"], [420, "abstract"], [421, "abstract"], [422, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[395, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[505, "accessing-data"]], "Accessing and visualising results": [[474, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[500, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[499, "accessing-contents-of-a-dataset"]], "Accessor methods": [[554, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[465, null]], "Adaptive smoothing": [[474, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[171, null]], "Add a model on multiple datasets": [[507, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[403, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[505, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[505, "adding-non-contiguous-axes"]], "Additional Models": [[416, "additional-models"]], "Additional PSF classes": [[548, "additional-psf-classes"]], "Additional utilities": [[603, "additional-utilities"]], "Aim": [[507, "aim"]], "Alternative": [[417, "alternative"]], "Alternatives": [[400, "alternatives"], [403, "alternatives"], [406, "alternatives"], [408, "alternatives"], [409, "alternatives"], [410, "alternatives"], [412, "alternatives"], [413, "alternatives"], [414, "alternatives"], [420, "alternatives"]], "Alternatives / Outlook": [[405, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[471, "analysis-configuration"], [479, "analysis-configuration"], [490, "analysis-configuration"], [525, "analysis-configuration"]], "Analysis steps": [[603, "analysis-steps"]], "Analysis workflow": [[603, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (EDISP_2D)": [[546, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "As a function of of true energy and offset angle (PSF_TABLE)": [[548, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "As a function of reconstructed energy and detector coordinates (BKG_3D)": [[545, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "As a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[545, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "As a function of true energy (RMF)": [[546, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "As a function of true energy and offset angle (AEFF_2D)": [[544, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "Assert convention": [[392, "assert-convention"]], "Assign to model to all datasets": [[491, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[507, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[533, null]], "Astrophysical source population models": [[532, null]], "Astrophysics": [[531, null]], "Authorship policy": [[419, "authorship-policy"]], "BACKEND_DEFAULT": [[333, null]], "BSD or GPL license?": [[392, "bsd-or-gpl-license"]], "Background": [[514, "background"], [545, null]], "Background / What we have now": [[407, "background-what-we-have-now"]], "Background Model Handling": [[415, "background-model-handling"]], "Background estimation": [[504, "background-estimation"], [550, "background-estimation"]], "Background2D": [[150, null]], "Background3D": [[151, null]], "BackgroundIRF": [[152, null]], "BackgroundIRFModel": [[403, "backgroundirfmodel"]], "BackgroundModel": [[403, "backgroundmodel"]], "Basic image exploration and fitting": [[481, null]], "Basic operators": [[505, "basic-operators"]], "Bayesian analysis with nested sampling": [[509, null]], "Bayesian blocks": [[496, "bayesian-blocks"]], "Bin volume and angular size": [[555, "bin-volume-and-angular-size"]], "Boundary mask": [[506, "boundary-mask"]], "Broken power law spectral model": [[571, null]], "BrokenPowerLawSpectralModel": [[223, null]], "Bug fixes and improvements": [[447, "bug-fixes-and-improvements"], [456, "bug-fixes-and-improvements"], [459, "bug-fixes-and-improvements"], [460, "bug-fixes-and-improvements"], [461, "bug-fixes-and-improvements"]], "Build": [[424, "build"]], "Building 1D datasets from the new observations": [[491, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[490, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[490, "building-the-3d-analysis-configuration"]], "Built-in models": [[602, "built-in-models"]], "Bundled gammapy.extern code": [[392, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[419, "citation-cff"]], "CLUMPY": [[530, "clumpy"]], "CTA 1DC": [[514, "cta-1dc"]], "CTAO with Gammapy": [[514, null]], "Caplog fixture": [[392, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[421, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 1: Estimate the posterior distribution with a tuning-parameter free approach": [[422, "case-1-estimate-the-posterior-distribution-with-a-tuning-parameter-free-approach"]], "Case 2: Favoring positive values for flux amplitudes": [[421, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 2: Minuit convergence issues": [[422, "case-2-minuit-convergence-issues"]], "Case 3: Model comparison using the Bayesian evidence (aka marginal evidence)": [[422, "case-3-model-comparison-using-the-bayesian-evidence-aka-marginal-evidence"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[421, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "Case 4: Parallelization of the \u201cfitting\u201d": [[422, "case-4-parallelization-of-the-fitting"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[606, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[607, "cash-counts-statistic"]], "CashCountsStatistic": [[294, null]], "Catalog table": [[498, "catalog-table"]], "Caveat": [[606, "caveat"]], "Changelog": [[413, "changelog"]], "Check Python code": [[393, "check-python-code"]], "Check broken links": [[393, "check-broken-links"]], "Check setup": [[464, "check-setup"], [466, "check-setup"], [470, "check-setup"], [471, "check-setup"], [472, "check-setup"], [473, "check-setup"], [474, "check-setup"], [476, "check-setup"], [477, "check-setup"], [479, "check-setup"], [480, "check-setup"], [481, "check-setup"], [482, "check-setup"], [483, "check-setup"], [484, "check-setup"], [485, "check-setup"], [490, "check-setup"], [491, "check-setup"], [492, "check-setup"], [493, "check-setup"], [497, "check-setup"], [498, "check-setup"], [499, "check-setup"], [501, "check-setup"], [504, "check-setup"], [505, "check-setup"], [506, "check-setup"], [507, "check-setup"], [508, "check-setup"], [511, "check-setup"], [513, "check-setup"], [514, "check-setup"], [515, "check-setup"], [516, "check-setup"], [517, "check-setup"], [525, "check-setup"], [526, "check-setup"], [528, "check-setup"]], "Check the dataset we produced": [[516, "check-the-dataset-we-produced"]], "Check your setup": [[429, "check-your-setup"]], "Checker": [[365, null]], "Chi2AsymmetricErrorFitStatistic": [[295, null]], "Chi2FitStatistic": [[296, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[393, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[419, "citation-scheme"]], "Class attributes": [[393, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[411, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[392, "clobber-or-overwrite"]], "Code in RST files": [[393, "code-in-rst-files"]], "Code in docstrings in Python files": [[393, "code-in-docstrings-in-python-files"]], "Code quality": [[424, "code-quality"]], "Collection of the personal information of authors": [[419, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[610, "colormaps"]], "Combining event lists and GTIs": [[539, "combining-event-lists-and-gtis"]], "Combining two Models": [[507, "combining-two-models"]], "Command line tools": [[605, null]], "Command not found": [[605, "command-not-found"]], "Common API": [[500, "common-api"]], "Compare against the literature": [[472, "compare-against-the-literature"]], "Compare results": [[490, "compare-results"]], "Comparing the posterior distribution of all runs": [[509, "comparing-the-posterior-distribution-of-all-runs"]], "Compound Spectral Model": [[508, "compound-spectral-model"]], "Compound spectral model": [[572, null]], "CompoundSpectralModel": [[224, null]], "Computation times": [[463, null], [469, null], [478, null], [487, null], [494, null], [512, null], [519, null], [522, null], [524, null], [529, null], [557, null], [568, null], [590, null], [601, null]], "Compute Flux Points": [[470, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[477, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[481, "compute-images"]], "Compute sensitivity": [[464, "compute-sensitivity"]], "Computing contours using stat_contour": [[501, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[501, "computing-contours-using-stat-surface"]], "Computing flux points": [[526, "computing-flux-points"]], "Conda Environments": [[425, "conda-environments"]], "Confidence contours": [[501, "confidence-contours"]], "Configurable analysis": [[603, "configurable-analysis"]], "Configuration": [[485, "configuration"]], "Configuration for stacked and joint analysis": [[479, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[471, "configuration-of-the-analysis"]], "Constant spatial model": [[559, null]], "Constant spectral model": [[573, null]], "Constant temporal model": [[592, null]], "ConstantFluxSpatialModel": [[225, null]], "ConstantSpatialModel": [[226, null]], "ConstantSpectralModel": [[227, null]], "ConstantTemporalModel": [[228, null]], "Context": [[466, "context"], [468, "context"], [470, "context"], [471, "context"], [472, "context"], [473, "context"], [474, "context"], [476, "context"], [477, "context"], [480, "context"], [482, "context"], [483, "context"], [485, "context"], [488, "context"], [490, "context"], [491, "context"], [492, "context"], [495, "context"], [496, "context"], [506, "context"], [509, "context"], [510, "context"], [511, "context"], [525, "context"], [526, "context"]], "Continuous integration": [[424, "continuous-integration"]], "Contribution in conferences": [[419, "contribution-in-conferences"]], "Contributors": [[433, "contributors"], [434, "contributors"], [435, "contributors"], [436, "contributors"], [437, "contributors"], [438, "contributors"], [439, "contributors"], [440, "contributors"], [441, "contributors"], [442, "contributors"], [445, "contributors"], [446, "contributors"], [447, "contributors"], [448, "contributors"], [449, "contributors"], [450, "contributors"], [451, "contributors"], [452, "contributors"], [453, "contributors"], [454, "contributors"], [455, "contributors"], [456, "contributors"], [457, "contributors"], [458, "contributors"], [459, "contributors"], [460, "contributors"], [461, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[392, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[392, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[555, "coordinates-defined-by-the-regiongeom"]], "Corner plot comparison": [[509, "corner-plot-comparison"]], "Correct format for bullet point list": [[393, "correct-format-for-bullet-point-list"]], "Counts": [[515, "counts"]], "Counts and fit statistics": [[607, "counts-and-fit-statistics"]], "Counts statistics classes": [[607, "counts-statistics-classes"]], "Covariance": [[212, null]], "Covariance and parameters errors": [[501, "covariance-and-parameters-errors"]], "CovarianceResult": [[213, null]], "Create DL4 product - PSFMap": [[503, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[500, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[506, "create-a-mask-in-energy"]], "Create a stacked dataset": [[477, "create-a-stacked-dataset"]], "Create edisp kernel map (DL4 product) - EDispKernelMap": [[503, "create-edisp-kernel-map-dl4-product-edispkernelmap"]], "Create exclusion mask": [[470, "create-exclusion-mask"], [477, "create-exclusion-mask"]], "Create exposure map (DL4 product)": [[503, "create-exposure-map-dl4-product"]], "Create the energy-dependent temporal model": [[484, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[526, "create-the-maker-classes-to-be-used"]], "Create the makers": [[466, "create-the-makers"]], "Create the mask from a catalog of sources": [[506, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[506, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[506, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[506, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[484, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[505, "creating-wcs-maps"]], "Creating a RegionGeom": [[555, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[555, "creating-a-regionndmap"]], "Creating a mask for fitting": [[506, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[506, "creating-a-mask-manually"]], "Creating an empty dataset": [[499, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[506, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[505, "creating-from-a-map-geometry"]], "Creating the config file": [[476, "creating-the-config-file"], [477, "creating-the-config-file"]], "Creation of the Flux points": [[471, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[491, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[491, "creation-of-the-datasets"]], "Creation of the model": [[471, "creation-of-the-model"]], "Creation of the theta2 plot": [[513, "creation-of-the-theta2-plot"]], "Cube plotting": [[505, "cube-plotting"]], "Cumulative excess and significance": [[466, "cumulative-excess-and-significance"]], "Current status": [[418, "current-status"]], "Custom models": [[602, "custom-models"]], "Cutouts": [[505, "cutouts"]], "Cython": [[424, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[419, "dco-implementation"]], "DL3 DR1": [[517, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[318, null]], "Dark matter": [[530, null]], "Dark matter spatial and spectral models": [[497, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[407, "data-fitting"]], "Data access and selection (DL3)": [[539, null]], "Data analysis": [[467, null], [520, "data-analysis"]], "Data analysis subpackages in gammapy": [[398, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[401, "data-and-observation-handling"]], "Data and models files": [[480, "data-and-models-files"]], "Data exploration": [[518, "data-exploration"], [520, "data-exploration"]], "Data reduction": [[407, "data-reduction"], [479, "data-reduction"], [479, "id1"], [495, "data-reduction"], [525, "data-reduction"], [526, "data-reduction"]], "Data reduction (DL3 to DL4)": [[550, null]], "Data reduction into a MapDataset": [[516, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[504, "data-reduction-loop"]], "Data selection": [[495, "data-selection"]], "Data structures": [[528, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [404, "dataset"], [504, "dataset"]], "Dataset helper / convenience methods": [[404, "dataset-helper-convenience-methods"]], "Dataset serialization": [[404, "dataset-serialization"]], "Dataset simulations": [[472, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[500, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[229, null]], "Datasets": [[100, null], [401, "datasets"], [404, "datasets"], [420, "datasets"], [499, "datasets"]], "Datasets (DL4)": [[538, null]], "Datasets - Reduced data, IRFs, models": [[499, null]], "Datasets serialization": [[480, "datasets-serialization"]], "DatasetsMaker": [[172, null]], "Datastore": [[514, "datastore"]], "Dealing with links": [[393, "dealing-with-links"]], "Decision": [[397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"], [401, "decision"], [402, "decision"], [403, "decision"], [404, "decision"], [405, "decision"], [406, "decision"], [407, "decision"], [408, "decision"], [409, "decision"], [410, "decision"], [411, "decision"], [412, "decision"], [413, "decision"], [414, "decision"], [415, "decision"], [416, "decision"], [417, "decision"], [418, "decision"], [419, "decision"], [420, "decision"], [421, "decision"], [422, "decision"]], "Define Target Region": [[470, "define-target-region"]], "Define a test position": [[513, "define-a-test-position"]], "Define an Observation": [[483, "define-an-observation"]], "Define an observation and make a dataset": [[484, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[464, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[481, "define-map-geometry"]], "Define the MapDataset": [[483, "define-the-mapdataset"]], "Define the ON region": [[472, "define-the-on-region"]], "Define the Sky model: a point-like source": [[483, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[466, "define-the-geometries"]], "Define the geometry": [[506, "define-the-geometry"]], "Define the model": [[526, "define-the-model"]], "Define the model to be used": [[490, "define-the-model-to-be-used"], [490, "id3"]], "Define the simulation source model": [[484, "define-the-simulation-source-model"]], "Define time intervals": [[491, "define-time-intervals"]], "Define underlying model": [[491, "define-underlying-model"]], "Defining the datastore and selecting observations": [[526, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[491, "defining-the-geometry"]], "Defining the sampler and options": [[509, "defining-the-sampler-and-options"]], "Definition of a Contributor": [[419, "definition-of-a-contributor"]], "Definition of the Maintainer": [[419, "definition-of-the-maintainer"]], "Definition of the data selection": [[490, "definition-of-the-data-selection"], [490, "id1"]], "Definition of the dataset geometry": [[490, "definition-of-the-dataset-geometry"], [490, "id2"]], "Dependencies": [[391, null], [409, "dependencies"]], "Deprecating a function or a class": [[392, "deprecating-a-function-or-a-class"]], "Deprecation": [[418, "deprecation"]], "Derivation of the WStat formula": [[608, null]], "Detailed plan": [[399, "detailed-plan"]], "Developer How To": [[392, null]], "Developer guide": [[394, null]], "Discussion / Alternatives": [[407, "discussion-alternatives"]], "Disk spatial model": [[560, null]], "DiskSpatialModel": [[230, null]], "Dissolve gammapy.background": [[411, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[411, "dissolve-gammapy-image"]], "Distributions": [[409, "distributions"], [409, "id1"]], "Docstring formatting": [[393, "docstring-formatting"]], "Documentation": [[401, "documentation"], [460, "documentation"]], "Documentation How To": [[393, null]], "Documentation building": [[393, "documentation-building"]], "Documentation guidelines": [[393, "documentation-guidelines"]], "Documentation improvements": [[461, "documentation-improvements"]], "Download": [[424, "download"]], "EBL absorption spectral model": [[570, null]], "EBLAbsorptionNormSpectralModel": [[231, null]], "EBL_DATA_BUILTIN": [[232, null]], "EDispKernel": [[153, null]], "EDispKernelMap": [[154, null]], "EDispMap": [[155, null]], "ESTIMATOR_REGISTRY": [[121, null]], "Effective Area": [[503, "effective-area"]], "Effective area": [[514, "effective-area"], [544, null]], "EffectiveAreaTable2D": [[156, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[416, "energy-dependent-spatial-models"]], "Energy Dispersion": [[503, "energy-dispersion"], [515, "energy-dispersion"], [546, null]], "Energy dispersion": [[514, "energy-dispersion"]], "Energy edges": [[540, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[122, null]], "EnergyDependentMultiGaussPSF": [[157, null]], "EnergyDispersion2D": [[158, null]], "Estimating TS": [[607, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[496, null]], "Estimator": [[123, null]], "Estimators": [[420, "estimators"], [500, null]], "Estimators (DL4 to DL5, and DL6)": [[540, null]], "Event Simulation": [[401, "event-simulation"]], "Event lists": [[528, "event-lists"]], "Event sampling": [[483, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[514, "events"], [515, "events"]], "Example": [[606, "example"], [606, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[511, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[511, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[589, "example-of-extrapolation"]], "Example plot": [[559, "example-plot"], [560, "example-plot"], [561, "example-plot"], [562, "example-plot"], [563, "example-plot"], [564, "example-plot"], [565, "example-plot"], [566, "example-plot"], [567, "example-plot"], [570, "example-plot"], [571, "example-plot"], [572, "example-plot"], [573, "example-plot"], [574, "example-plot"], [575, "example-plot"], [576, "example-plot"], [577, "example-plot"], [578, "example-plot"], [579, "example-plot"], [580, "example-plot"], [581, "example-plot"], [582, "example-plot"], [583, "example-plot"], [584, "example-plot"], [585, "example-plot"], [586, "example-plot"], [587, "example-plot"], [588, "example-plot"], [589, "example-plot"], [592, "example-plot"], [593, "example-plot"], [594, "example-plot"], [595, "example-plot"], [596, "example-plot"], [597, "example-plot"], [598, "example-plot"]], "Examples using Analysis": [[541, "examples-using-analysis"]], "Examples using FluxPointsEstimator": [[540, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[540, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[538, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[550, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[538, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[550, "examples-using-spectrumdatasetmaker"]], "Examples using catalog": [[537, "examples-using-catalog"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[549, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[551, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[607, "excess-and-significance"], [607, "id2"]], "Excess errors": [[607, "excess-errors"], [607, "id4"]], "Excess estimators": [[417, "excess-estimators"]], "ExcessMapEstimator": [[124, null]], "Exclusion masks": [[506, "exclusion-masks"]], "Execution": [[605, "execution"]], "Exemplary additional prior subclasses:": [[421, "exemplary-additional-prior-subclasses"]], "Exercises": [[464, "exercises"], [468, "exercises"], [470, "exercises"], [473, "exercises"], [479, "exercises"], [481, "exercises"], [483, "exercises"], [484, "exercises"], [492, "exercises"], [495, "exercises"], [514, "exercises"], [515, "exercises"], [516, "exercises"], [517, "exercises"], [528, "exercises"], [528, "id1"], [528, "id2"], [528, "id3"]], "Existing code": [[398, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[233, null]], "ExpCutoffPowerLawNormSpectralModel": [[234, null]], "ExpCutoffPowerLawSpectralModel": [[235, null]], "ExpDecay temporal model": [[593, null]], "ExpDecayTemporalModel": [[236, null]], "Expected number of detected events": [[547, "expected-number-of-detected-events"]], "Exploration of the fit results": [[471, "exploration-of-the-fit-results"]], "Explore the fit results": [[466, "explore-the-fit-results"]], "Explore the results": [[466, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[468, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[576, null]], "Exponential cutoff power law spectral model": [[574, null]], "Exponential cutoff power law spectral model used for 3FGL": [[575, null]], "Expose model parameters as attributes": [[403, "expose-model-parameters-as-attributes"]], "Exposure": [[515, "exposure"]], "Extended source using a template": [[483, "extended-source-using-a-template"]], "Extract the light curve": [[491, "extract-the-light-curve"]], "Extract the lightcurve": [[492, "extract-the-lightcurve"]], "Extracting the light curve": [[490, "extracting-the-light-curve"]], "Extracting the ring background": [[477, "extracting-the-ring-background"]], "Factorisation of the gamma-ray IRFs": [[547, "factorisation-of-the-gamma-ray-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[423, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[480, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[515, null]], "FermiST": [[530, "fermist"]], "FermipyDatasetsReader": [[101, null]], "Files": [[514, "files"]], "Filling a RegionNDMap": [[555, "filling-a-regionndmap"]], "Filling maps from event lists": [[505, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[505, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[491, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[397, "final-remarks"]], "Final result": [[608, "final-result"]], "Fit": [[214, null], [488, "fit"], [515, "fit"]], "Fit quality and model residuals": [[470, "fit-quality-and-model-residuals"], [472, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[501, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[479, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[479, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[470, "fit-spectrum"], [472, "fit-spectrum"]], "Fit statistics": [[606, null]], "Fit the datasets": [[492, "fit-the-datasets"]], "Fit the model": [[526, "fit-the-model"]], "FitResult": [[215, null]], "Fitting": [[401, "fitting"], [501, null]], "Fitting Multiple Datasets with and without the Prior": [[511, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[511, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[501, "fitting-options"]], "Fitting temporal models": [[492, "fitting-temporal-models"]], "Fitting the obtained light curve": [[492, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[392, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[392, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[500, "flux-points-estimation"]], "Flux Profile Estimation": [[485, null]], "Flux maps": [[540, "flux-maps"]], "Flux maps for annihilation": [[497, "flux-maps-for-annihilation"]], "Flux maps for decay": [[497, "flux-maps-for-decay"]], "Flux point fitting": [[468, null]], "Flux points": [[498, "flux-points"], [525, "flux-points"], [540, "flux-points"]], "Flux quantities": [[540, "flux-quantities"]], "FluxMaps": [[125, null]], "FluxMetaData": [[126, null]], "FluxPoints": [[127, null]], "FluxPointsDataset": [[102, null], [404, "fluxpointsdataset"], [499, "fluxpointsdataset"]], "FluxPointsEstimator": [[128, null]], "FluxProfileEstimator": [[129, null]], "FoV background": [[504, "fov-background"], [549, null]], "FoVAlignment": [[159, null]], "FoVBackgroundMaker": [[173, null]], "FoVBackgroundModel": [[237, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[496, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[507, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[393, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[392, "functions-returning-several-values"]], "Fundamental Concepts: Gammapy analysis workflow and package structure": [[603, null]], "Further extensions": [[465, "further-extensions"]], "Further references": [[606, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[515, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[532, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[497, "gamma-ray-spectra-at-production"]], "Gammapy": [[431, null]], "Gammapy Binder": [[424, "id1"]], "Gammapy overview": [[413, "gammapy-overview"]], "Gammapy repository": [[424, "gammapy-repository"]], "Gammapy webpages": [[424, "gammapy-webpages"]], "Gaussian spatial model": [[561, null]], "Gaussian spectral model": [[577, null]], "Gaussian temporal model": [[594, null]], "GaussianPrior": [[238, null]], "GaussianSpatialModel": [[239, null]], "GaussianSpectralModel": [[240, null]], "GaussianTemporalModel": [[241, null]], "General Gammapy publications": [[419, "general-gammapy-publications"]], "General code style guidelines": [[398, "general-code-style-guidelines"]], "General conventions": [[392, "general-conventions"]], "General idea and class diagram": [[402, "general-idea-and-class-diagram"]], "General method": [[540, "general-method"]], "General organization of the new approach": [[407, "general-organization-of-the-new-approach"]], "Generalist estimators": [[417, "generalist-estimators"]], "Generalized Gaussian temporal model": [[595, null]], "Generalized gaussian spatial model": [[562, null]], "GeneralizedGaussianSpatialModel": [[242, null]], "GeneralizedGaussianTemporalModel": [[243, null]], "Generating log messages": [[392, "generating-log-messages"]], "Geom": [[194, null]], "Get a fit stat profile for the redshift": [[465, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[395, "get-in-touch-early"]], "Get set up": [[395, "get-set-up"]], "Get some data": [[513, "get-some-data"]], "Get the flux points": [[465, "get-the-flux-points"]], "Getting started": [[413, "getting-started"], [426, null], [531, "getting-started"], [532, "getting-started"], [533, "getting-started"]], "Getting started section restructuring": [[413, "getting-started-section-restructuring"]], "Getting started with data": [[539, "getting-started-with-data"]], "Getting started with maps": [[554, "getting-started-with-maps"]], "Getting the reduced dataset": [[476, "getting-the-reduced-dataset"], [477, "getting-the-reduced-dataset"]], "Global Model Handling": [[415, "global-model-handling"]], "Glossary": [[604, "glossary"]], "Glossary and references": [[604, null]], "Goodness of fit": [[608, "goodness-of-fit"]], "Guidelines and specific actions": [[413, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[517, null]], "HAWC data access and reduction": [[516, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[516, null]], "HAWC: 1D dataset for flux point fitting": [[480, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[326, null]], "HEALPix geometry": [[553, "healpix-geometry"]], "HEALPix-based maps": [[553, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[480, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[419, "handling-of-conference-material"]], "Help!?": [[429, "help"]], "Hierarchical clustering of observations": [[510, "hierarchical-clustering-of-observations"]], "Hierarchy": [[420, "hierarchy"]], "High Level Analysis Interface": [[541, null]], "High level interface": [[401, "high-level-interface"], [525, null]], "How To": [[413, "how-to"], [542, null]], "How to capture a deprecation": [[392, "how-to-capture-a-deprecation"]], "How to contribute to Gammapy": [[395, null]], "How to get data values": [[505, "how-to-get-data-values"]], "How to handle API breaking changes?": [[392, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[423, null]], "How to make a pull request": [[392, "how-to-make-a-pull-request"]], "How to set data values": [[505, "how-to-set-data-values"]], "How to use logging": [[392, "how-to-use-logging"]], "How to use random numbers": [[392, "how-to-use-random-numbers"]], "How to write code": [[392, "how-to-write-code"]], "How to write tests": [[392, "how-to-write-tests"]], "HpxGeom": [[195, null]], "HpxMap": [[196, null]], "HpxNDMap": [[197, null]], "IPython": [[430, "id3"]], "IRF": [[160, null], [420, "irf"]], "IRF axis naming": [[547, "irf-axis-naming"]], "IRFMap": [[161, null]], "IRF_REGISTRY": [[162, null]], "IRFs": [[401, "irfs"], [514, "irfs"]], "Image Plotting": [[505, "image-plotting"]], "ImageProfile": [[130, null]], "ImageProfileEstimator": [[131, null]], "Images and masks": [[406, "images-and-masks"]], "Implement default parameters": [[403, "implement-default-parameters"]], "Implement evaluation region specifications": [[403, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[403, "implement-sky-coordinate-handling"]], "Implementation": [[413, "implementation"], [421, "implementation"]], "Implementation Outline": [[421, "implementation-outline"]], "Implementation impact": [[422, "implementation-impact"]], "Implementation road map": [[402, "implementation-road-map"]], "Implementing a custom model": [[508, "implementing-a-custom-model"]], "Implementing a custom prior": [[511, "implementing-a-custom-prior"]], "Imports and versions": [[488, "imports-and-versions"]], "Improve SourceModels class": [[403, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[403, "improve-and-implement-model-serilization"]], "Improve spatial models": [[403, "improve-spatial-models"]], "In the RST files": [[393, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[503, "inbuilt-gammapy-irfs"]], "Include png files as images": [[393, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[505, "indexing-and-slicing-sub-maps"]], "Individual run analysis": [[509, "individual-run-analysis"]], "Infrastructure": [[461, "infrastructure"]], "Inspect the reduced dataset": [[526, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[526, "inspecting-residuals"]], "Install issues": [[429, "install-issues"]], "Installation": [[413, "installation"], [426, "installation"], [427, null]], "Instrument Response Functions (DL3)": [[547, null]], "Interaction Between Models and Dataset Objects": [[415, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[554, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[505, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[392, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[416, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[417, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[417, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[417, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[414, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[414, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[414, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[411, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[414, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[403, "introduce-naming-scheme-for-models"]], "Introduction": [[403, "introduction"], [406, "introduction"], [407, "introduction"], [409, "introduction"], [410, "introduction"], [413, "introduction"], [417, "introduction"], [419, "introduction"], [420, "introduction"], [464, "introduction"], [470, "introduction"], [472, "introduction"], [481, "introduction"], [493, "introduction"], [497, "introduction"], [498, "introduction"], [499, "introduction"], [504, "introduction"], [505, "introduction"], [514, "introduction"], [515, "introduction"], [516, "introduction"], [517, "introduction"], [520, "introduction"], [527, null], [528, "introduction"], [530, "introduction"], [532, "introduction"], [533, "introduction"], [606, "introduction"]], "Introduction of background models": [[403, "introduction-of-background-models"]], "Introduction of model name attributes": [[403, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[403, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[340, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[515, "isotropic-diffuse-background"]], "Iterating by image": [[505, "iterating-by-image"]], "J Factors": [[497, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[538, "joint-analysis"]], "Joint analysis": [[479, "joint-analysis"], [480, "joint-analysis"]], "Jupyter": [[426, "id2"], [428, "jupyter"]], "Jupyter notebooks": [[430, "jupyter-notebooks"]], "Key Features": [[500, "key-features"]], "Known issues": [[461, "known-issues"]], "LabelMapAxis": [[198, null], [505, "labelmapaxis"]], "Latest CTAO performance files": [[514, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[404, "lazy-loading-of-datasets"]], "LazyFitsData": [[327, null]], "Let\u2019s simulate the model": [[484, "let-s-simulate-the-model"]], "Light Curve Fitting": [[407, "light-curve-fitting"]], "Light Curve estimation by observation": [[490, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[600, null]], "Light curves": [[490, null]], "Light curves for flares": [[491, null]], "LightCurveEstimator": [[132, null]], "LightCurveTemplateTemporalModel": [[244, null]], "Lightcurve": [[407, "lightcurve"]], "Lightcurves": [[498, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[407, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[402, "limitations"]], "Linear temporal model": [[596, null]], "LinearTemporalModel": [[245, null]], "Links to documentation": [[393, "links-to-documentation"]], "Links to other tutorials": [[393, "links-to-other-tutorials"]], "List available catalogs": [[498, "list-available-catalogs"]], "Load Data": [[470, "load-data"]], "Load IRFs and prepare dataset": [[464, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[498, "load-catalogs"]], "Load data": [[472, "load-data"]], "Load spectral points": [[468, "load-spectral-points"]], "Load the data": [[465, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[500, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[516, "load-the-tables"]], "Loading models from a catalog": [[507, "loading-models-from-a-catalog"]], "Loading the spectral datasets": [[509, "loading-the-spectral-datasets"]], "Locate origin of warnings": [[392, "locate-origin-of-warnings"]], "Log parabola spectral model": [[578, null]], "Log parabola spectral norm model": [[579, null]], "Log-Parabola Fit": [[468, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[246, null]], "LogParabolaSpectralModel": [[247, null]], "LogSpiral": [[34, null]], "LogUniformPrior": [[248, null]], "Long Term Support releases": [[419, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[526, null]], "Low level map and cube analysis": [[398, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[174, null]], "METHOD_DEFAULT": [[334, null]], "METHOD_KWARGS_DEFAULT": [[335, null]], "MODEL_REGISTRY": [[249, null]], "Maintainer and developer perspective": [[399, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[401, "maintenance-and-code-quality"]], "Make a Bugfix release": [[423, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[493, "make-a-li-ma-test-over-the-events"]], "Make a theta-square plot": [[513, null]], "Make sky images": [[481, "make-sky-images"]], "Make small pull requests": [[395, "make-small-pull-requests"]], "Maker": [[175, null]], "Makers": [[420, "makers"]], "Makers - Data reduction": [[504, null]], "Making a butterfly plot": [[526, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[392, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[392, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[392, "making-a-pull-request-with-new-or-modified-datasets"]], "Making a theta2 plot for a given energy range": [[513, "making-a-theta2-plot-for-a-given-energy-range"]], "Manual grouping of observations": [[510, "manual-grouping-of-observations"]], "Map": [[199, null]], "Map Analysis / Data Reduction": [[401, "map-analysis-data-reduction"]], "MapAxes": [[200, null]], "MapAxis": [[201, null]], "MapCoord": [[202, null], [554, "mapcoord"]], "MapDataset": [[103, null], [404, "mapdataset"], [499, "mapdataset"]], "MapDatasetEventSampler": [[104, null], [405, "mapdataseteventsampler"]], "MapDatasetMaker": [[176, null]], "MapDatasetMetaData": [[105, null]], "MapDatasetOnOff": [[106, null], [404, "mapdatasetonoff"]], "MapPanelPlotter": [[379, null]], "Maps": [[203, null], [401, "maps"], [505, null], [528, "maps"]], "Maps operations": [[505, "maps-operations"]], "Mask dilation and erosion": [[506, "mask-dilation-and-erosion"]], "Mask maps": [[506, null]], "Mask modifications": [[506, "mask-modifications"]], "Mask some sky regions": [[506, "mask-some-sky-regions"]], "Masks for fitting": [[506, "masks-for-fitting"]], "Masks operations": [[506, "masks-operations"]], "Meetings": [[401, "meetings"]], "Metadata API": [[420, "metadata-api"]], "Metadata files": [[419, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[420, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[496, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[250, null]], "Minor changes": [[414, "minor-changes"]], "Mission elapsed times (MET)": [[609, "mission-elapsed-times-met"]], "Model": [[251, null]], "Model Gallery": [[518, null], [520, "model-gallery"]], "Model and dataset": [[501, "model-and-dataset"], [511, "model-and-dataset"]], "Model definition": [[509, "model-definition"]], "Model fit": [[481, "model-fit"]], "Model fitting": [[471, "model-fitting"], [525, "model-fitting"]], "Model gallery": [[556, null]], "Model lists and serialisation": [[508, "model-lists-and-serialisation"]], "Model the observed spectrum": [[465, "model-the-observed-spectrum"]], "ModelBase": [[252, null]], "Modeling": [[401, "modeling"], [420, "modeling"], [495, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[602, null]], "Modeling and fitting": [[479, "modeling-and-fitting"]], "Modelling": [[476, "modelling"], [507, null]], "Models": [[253, null], [508, null]], "Models with energy dependent morphology": [[508, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[508, "models-with-shared-parameter"]], "Modifying Data": [[505, "modifying-data"]], "Modifying model parameters": [[508, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[482, null]], "Motivation": [[421, "motivation"], [422, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[480, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[336, null]], "Naima spectral model": [[580, null]], "NaimaSpectralModel": [[254, null]], "Need of four individual responses": [[547, "need-of-four-individual-responses"]], "New features": [[456, "new-features"], [459, "new-features"], [460, "new-features"], [461, "new-features"]], "Next steps": [[514, "next-steps"], [516, "next-steps"], [517, "next-steps"]], "Night-wise LC estimation": [[490, "night-wise-lc-estimation"]], "Norm Spectral Models": [[508, "norm-spectral-models"]], "Notations": [[607, "notations"]], "Note": [[501, "note"]], "Notes": [[606, "notes"]], "OGIPDatasetReader": [[107, null]], "OGIPDatasetWriter": [[108, null]], "Object text repr, str and info": [[392, "object-text-repr-str-and-info"]], "Objective": [[476, "objective"], [477, "objective"], [483, "objective"], [484, "objective"], [510, "objective"]], "Objectives": [[402, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[504, "observation-duration-and-effective-livetime"]], "Observation selection": [[471, "observation-selection"], [525, "observation-selection"]], "ObservationEventSampler": [[109, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[510, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[482, "obtain-the-data-to-use"]], "Obtain the observations": [[510, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[464, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[424, "old-example-data"]], "On-Off analysis": [[473, "on-off-analysis"]], "Opening the data": [[493, "opening-the-data"]], "OptimizeResult": [[216, null]], "Optional dependencies": [[391, "optional-dependencies"], [409, "optional-dependencies"]], "Other folders": [[424, "other-folders"]], "Other packages": [[530, "other-packages"]], "Other repositories": [[424, "other-repositories"]], "Other types of maps": [[554, "other-types-of-maps"]], "Others": [[392, "others"], [424, "others"]], "Outlook": [[404, "outlook"], [406, "outlook"], [408, "outlook"], [409, "outlook"], [411, "outlook"], [412, "outlook"], [413, "outlook"], [414, "outlook"], [417, "outlook"]], "Output in Jupyter notebook cells": [[392, "output-in-jupyter-notebook-cells"]], "Outputs from the Nested Sampling": [[422, "outputs-from-the-nested-sampling"]], "Overview": [[549, "overview"], [551, "overview"], [552, "overview"]], "PIG 1 - PIG purpose and guidelines": [[397, null]], "PIG 10 - Regions": [[406, null]], "PIG 11 - Light curves": [[407, null]], "PIG 12 - High level interface": [[408, null]], "PIG 13 - Gammapy dependencies and distribution": [[409, null]], "PIG 14 - Uncertainty estimation": [[410, null]], "PIG 16 - Gammapy package structure": [[411, null]], "PIG 17 - Provenance capture": [[412, null]], "PIG 18 - Documentation": [[413, null]], "PIG 19 - Gammapy package structure follow up": [[414, null]], "PIG 2 - Organization of low level analysis code": [[398, null]], "PIG 20 - Global Model API": [[415, null]], "PIG 21 - Models improvements": [[416, null]], "PIG 22 - Unified flux estimators API": [[417, null]], "PIG 23 - Gammapy release cycle and version numbering": [[418, null]], "PIG 24 - Authorship policy": [[419, null]], "PIG 25 - Metadata container for Gammapy": [[420, null]], "PIG 26 - Model Priors API": [[421, null]], "PIG 27 - Bayesian Inference using Nested Sampling": [[422, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[399, null]], "PIG 4 - Setup for tutorial notebooks and data": [[400, null]], "PIG 5 - Gammapy 1.0 roadmap": [[401, null]], "PIG 6 - CTA observation handling": [[402, null]], "PIG 7 - Models": [[403, null]], "PIG 8 - Datasets": [[404, null]], "PIG 9 - Event sampling": [[405, null]], "PIG review": [[397, "pig-review"]], "PIG status": [[397, "pig-status"]], "PIGs": [[396, null]], "POOL_KWARGS_DEFAULT": [[337, null]], "PSF": [[503, "psf"], [515, "psf"]], "PSF3D": [[163, null]], "PSFKernel": [[164, null]], "PSFKing": [[165, null]], "PSFMap": [[166, null]], "PWN": [[50, null]], "Package / API": [[502, null], [520, "package-api"]], "Package and docs": [[424, "package-and-docs"]], "Package structure and dependencies": [[447, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[401, "papers"]], "Parallel evaluation of datasets": [[404, "parallel-evaluation-of-datasets"]], "Parameter": [[217, null]], "ParameterEstimator": [[133, null]], "ParameterSensitivityEstimator": [[134, null]], "Parameters": [[218, null]], "ParametricPSF": [[167, null]], "Perform spectral model fitting": [[466, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[526, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[466, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[405, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[599, null]], "Phase-resolved map": [[493, "phase-resolved-map"]], "Phase-resolved spectrum": [[493, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[177, null]], "Phasogram": [[493, "phasogram"]], "Piecewise  norm spectral model": [[581, null]], "Piecewise norm spatial model": [[563, null]], "PiecewiseNormSpatialModel": [[255, null]], "PiecewiseNormSpectralModel": [[256, null]], "Pixel coordinate convention": [[392, "pixel-coordinate-convention"]], "Plot": [[481, "plot"]], "Plot off regions": [[470, "plot-off-regions"]], "Plot the fitted spectrum": [[526, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[465, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[485, "plotting-results"]], "Plotting a RegionGeom": [[555, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[507, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[471, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[555, "plotting-the-map-content"]], "Plotting the results": [[482, "plotting-the-results"]], "Plotting the underlying region": [[555, "plotting-the-underlying-region"]], "Point Spread Function": [[548, null]], "Point source sensitivity": [[464, null]], "Point spatial model": [[564, null]], "Point spread function": [[514, "point-spread-function"]], "PointSpatialModel": [[257, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[419, "possible-implementations"]], "Post release": [[423, "post-release"]], "Power Law Fit": [[468, "power-law-fit"]], "Power law 2 spectral model": [[583, null]], "Power law norm spectral model": [[584, null]], "Power law spectral model": [[582, null]], "PowerLaw temporal model": [[597, null]], "PowerLaw2SpectralModel": [[258, null]], "PowerLawNormSpectralModel": [[259, null]], "PowerLawSpectralModel": [[260, null]], "PowerLawTemporalModel": [[261, null]], "Predicted counts": [[538, "predicted-counts"]], "Prepare and run the event sampler": [[484, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[466, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[526, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[466, "prerequisites"], [468, "prerequisites"], [470, "prerequisites"], [471, "prerequisites"], [472, "prerequisites"], [473, "prerequisites"], [476, "prerequisites"], [480, "prerequisites"], [482, "prerequisites"], [483, "prerequisites"], [484, "prerequisites"], [485, "prerequisites"], [488, "prerequisites"], [490, "prerequisites"], [491, "prerequisites"], [492, "prerequisites"], [496, "prerequisites"], [501, "prerequisites"], [506, "prerequisites"], [507, "prerequisites"], [511, "prerequisites"], [525, "prerequisites"], [526, "prerequisites"]], "Pretty-print source information": [[498, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[262, null]], "PriorParameter": [[219, null]], "PriorParameters": [[220, null]], "Priors": [[511, null]], "Profile Estimation": [[485, "profile-estimation"]], "Profile Likelihood": [[608, "profile-likelihood"]], "Profiles": [[497, "profiles"]], "Project Management": [[401, "project-management"]], "Project setup": [[424, null]], "Projects": [[401, "projects"]], "Proposal": [[400, "proposal"], [402, "proposal"], [403, "proposal"], [404, "proposal"], [405, "proposal"], [406, "proposal"], [407, "proposal"], [408, "proposal"], [410, "proposal"], [411, "proposal"], [412, "proposal"], [413, "proposal"], [414, "proposal"], [415, "proposal"], [416, "proposal"], [422, "proposal"]], "Proposal of API for flux estimate results": [[417, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[485, "proposed-approach"]], "Proposed approach": [[466, "proposed-approach"], [468, "proposed-approach"], [471, "proposed-approach"], [473, "proposed-approach"], [474, "proposed-approach"], [476, "proposed-approach"], [477, "proposed-approach"], [480, "proposed-approach"], [483, "proposed-approach"], [484, "proposed-approach"], [488, "proposed-approach"], [490, "proposed-approach"], [491, "proposed-approach"], [492, "proposed-approach"], [495, "proposed-approach"], [496, "proposed-approach"], [501, "proposed-approach"], [506, "proposed-approach"], [507, "proposed-approach"], [509, "proposed-approach"], [510, "proposed-approach"], [525, "proposed-approach"], [526, "proposed-approach"]], "Proposed class diagram": [[402, "proposed-class-diagram"]], "Proposed metadata classes": [[420, "proposed-metadata-classes"]], "Proposed solution": [[420, "proposed-solution"]], "Pull Requests": [[447, "pull-requests"], [448, "pull-requests"], [456, "pull-requests"], [457, "pull-requests"], [458, "pull-requests"], [459, "pull-requests"], [460, "pull-requests"], [461, "pull-requests"]], "Pull requests": [[433, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"], [436, "pull-requests"], [437, "pull-requests"], [438, "pull-requests"], [439, "pull-requests"], [440, "pull-requests"], [441, "pull-requests"], [442, "pull-requests"], [443, "pull-requests"], [444, "pull-requests"], [445, "pull-requests"], [446, "pull-requests"], [449, "pull-requests"], [450, "pull-requests"], [451, "pull-requests"], [452, "pull-requests"], [453, "pull-requests"], [454, "pull-requests"], [455, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[534, null]], "Pulsar Wind Nebula Source Models": [[535, null]], "Pulsar analysis": [[493, null]], "Python": [[430, "id2"]], "Python scripts": [[430, "python-scripts"]], "Python version support": [[392, "python-version-support"]], "RadMax2D": [[168, null]], "Read and Introduce Data": [[485, "read-and-introduce-data"]], "Read in input images": [[474, "read-in-input-images"]], "Read the datasets": [[507, "read-the-datasets"]], "Read the energy-dependent model": [[484, "read-the-energy-dependent-model"]], "Reading Maps": [[505, "reading-maps"]], "Reading and Writing": [[505, "reading-and-writing"]], "Reading and writing masks": [[506, "reading-and-writing-masks"]], "Reading different datasets": [[480, "reading-different-datasets"]], "RecoPSFMap": [[169, null]], "Recommended Setup": [[426, "recommended-setup"], [428, null]], "Reference": [[413, "reference"], [605, "reference"]], "References": [[604, "publications"], [607, "references"]], "Reflected regions background": [[504, "reflected-regions-background"], [551, null]], "ReflectedRegionsBackgroundMaker": [[178, null]], "ReflectedRegionsFinder": [[179, null]], "Region arguments": [[406, "region-arguments"]], "RegionGeom": [[204, null], [555, "regiongeom"]], "RegionGeom and RegionNDMap": [[555, null]], "RegionGeom and coordinates": [[555, "regiongeom-and-coordinates"]], "RegionNDMap": [[205, null], [555, "regionndmap"]], "RegionsFinder": [[180, null]], "Relation to WCS geometries": [[555, "relation-to-wcs-geometries"]], "Release notes": [[392, "release-notes"], [432, null]], "Release preparation, feature freeze": [[418, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[418, "release-scheduling-and-lts"]], "Releases": [[401, "releases"], [419, "releases"], [424, "releases"]], "Releasing the final version of the major release": [[423, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[423, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[507, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[392, "removing-an-attribute"]], "Renaming an argument": [[392, "renaming-an-argument"]], "Required dependencies": [[391, "required-dependencies"], [409, "required-dependencies"]], "Requirements": [[420, "requirements"]], "Resampling datasets": [[499, "resampling-datasets"]], "Residual instrumental background rate": [[547, "residual-instrumental-background-rate"]], "Resolve gammapy.detect": [[414, "resolve-gammapy-detect"]], "Results": [[464, "results"], [509, "results"]], "Results exploration": [[471, "results-exploration"]], "Ring background": [[504, "ring-background"], [552, null]], "Ring background map": [[477, null]], "RingBackgroundMaker": [[181, null]], "Rotated regions": [[406, "rotated-regions"]], "Run Estimation": [[485, "run-estimation"]], "Run Estimator": [[482, "run-estimator"]], "Run data reduction chain": [[470, "run-data-reduction-chain"], [472, "run-data-reduction-chain"]], "Run the 1D data reduction": [[490, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[490, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[605, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[395, "running-tests-building-documentation"]], "Running the Data Reduction": [[471, "running-the-data-reduction"]], "Running the analysis": [[525, "running-the-analysis"]], "Running the estimation": [[471, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[471, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[471, "running-the-fit"]], "Running the light curve extraction in 1D": [[490, "running-the-light-curve-extraction-in-1d"]], "SED types": [[540, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[263, null]], "SPECTRAL_MODEL_REGISTRY": [[264, null]], "Safe data range definition": [[550, "safe-data-range-definition"]], "Safe data range handling": [[504, "safe-data-range-handling"]], "SafeMaskMaker": [[182, null]], "Sample a source with energy-dependent temporal evolution": [[484, null]], "Sampler": [[221, null]], "SamplerResult": [[222, null]], "Sampling methods": [[405, "sampling-methods"]], "Sampling the source and background events": [[483, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[471, "save-dataset-to-disk"], [525, "save-dataset-to-disk"], [526, "save-dataset-to-disk"]], "ScaleSpectralModel": [[265, null]], "ScaledRegularGridInterpolator": [[330, null]], "Scripts": [[520, "scripts"], [521, null]], "Select a catalog subset": [[498, "select-a-catalog-subset"]], "Select a source": [[498, "select-a-source"]], "Select observations": [[481, "select-observations"]], "Select the ON region": [[466, "select-the-on-region"]], "Select the data": [[466, "select-the-data"], [491, "select-the-data"]], "Selecting models contributing to a given region": [[507, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[507, "selecting-models-from-a-list"]], "SensitivityEstimator": [[135, null]], "Serialisation": [[421, "serialisation"], [503, "serialisation"], [503, "id1"], [503, "id2"], [515, "serialisation"]], "Serialisation and I/O": [[485, "serialisation-and-i-o"]], "Serialisation of datasets": [[538, "serialisation-of-datasets"]], "Serialisation of the fit result": [[471, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[471, "serialisation-of-the-results"]], "Serialisation of the samples": [[422, "serialisation-of-the-samples"]], "Serialising models": [[507, "serialising-models"]], "Serialization": [[420, "serialization"]], "Setting fitting parameters": [[471, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[525, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[525, "setting-the-background-normalization-maker"]], "Setting the data to use": [[525, "setting-the-data-to-use"]], "Setting the exclusion mask": [[471, "setting-the-exclusion-mask"], [525, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[525, "setting-the-reduced-datasets-geometry"]], "Setup": [[464, "setup"], [465, "setup"], [466, "setup"], [468, "setup"], [470, "setup"], [471, "setup"], [472, "setup"], [473, "setup"], [474, "setup"], [476, "setup"], [477, "setup"], [481, "setup"], [482, "setup"], [483, "setup"], [484, "setup"], [485, "setup"], [490, "setup"], [491, "setup"], [492, "setup"], [495, "setup"], [496, "setup"], [497, "setup"], [499, "setup"], [504, "setup"], [505, "setup"], [506, "setup"], [507, "setup"], [508, "setup"], [509, "setup"], [513, "setup"], [514, "setup"], [515, "setup"], [525, "setup"], [526, "setup"], [528, "setup"]], "Shell spatial model": [[565, null]], "Shell2 spatial model": [[566, null]], "Shell2SpatialModel": [[266, null]], "ShellSpatialModel": [[267, null]], "Show images": [[481, "show-images"]], "Show the results tables": [[482, "show-the-results-tables"]], "Show various observation quantities": [[510, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[416, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[416, "simplify-yaml-representation"]], "Simulate multiple event lists": [[483, "simulate-multiple-event-lists"]], "Simulating a light curve": [[492, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[492, null]], "Simulation": [[488, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[404, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[473, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[598, null]], "SineTemporalModel": [[268, null]], "Skip unit tests for some Astropy versions": [[392, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[406, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[554, null]], "SkyModel": [[269, null], [508, "skymodel"]], "Smooth broken power law spectral model": [[585, null]], "SmoothBrokenPowerLawSpectralModel": [[270, null]], "Some terminology": [[402, "some-terminology"]], "Source Detection": [[481, "source-detection"]], "Source candidates": [[474, "source-candidates"]], "Source catalogs": [[498, null], [528, "source-catalogs"], [537, null]], "Source detection and significance maps": [[474, null]], "Source information": [[498, "source-information"]], "Source models": [[498, "source-models"], [514, "source-models"]], "Source object": [[498, "source-object"]], "Source statistic": [[470, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[403, "sourceirfmodel"]], "Spatial analysis": [[481, "spatial-analysis"]], "Spatial models": [[508, "spatial-models"], [556, "spatial-models"], [558, null]], "SpatialIRFModel": [[403, "spatialirfmodel"]], "SpatialModel": [[271, null]], "Special cases": [[608, "special-cases"]], "Specificities of the HGPS catalog": [[498, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[416, "spectral-absorption-model"]], "Spectral Norm Models": [[416, "spectral-norm-models"]], "Spectral analysis": [[470, null]], "Spectral analysis of extended sources": [[466, null]], "Spectral analysis with energy-dependent directional cuts": [[472, null]], "Spectral analysis with the HLI": [[471, null]], "Spectral models": [[508, "spectral-models"], [556, "spectral-models"], [569, null]], "Spectral models and flux points": [[528, "spectral-models-and-flux-points"]], "Spectral points": [[481, "spectral-points"]], "SpectralIRFModel": [[403, "spectralirfmodel"]], "SpectralModel": [[272, null]], "Spectrum": [[481, "spectrum"]], "Spectrum dataset": [[504, "spectrum-dataset"]], "SpectrumDataset": [[110, null], [404, "spectrumdataset"], [499, "spectrumdataset"]], "SpectrumDatasetMaker": [[183, null]], "SpectrumDatasetOnOff": [[111, null], [404, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[393, "sphinx-gallery-extension"]], "Spiral arm models": [[532, "spiral-arm-models"]], "Stack observations": [[470, "stack-observations"]], "Stacked analysis": [[479, "stacked-analysis"]], "Stacking Multiple Datasets": [[538, "stacking-multiple-datasets"]], "Statistical significance of a detection": [[513, "statistical-significance-of-a-detection"]], "Statistical utility functions": [[607, "statistical-utility-functions"]], "Statistics in Gammapy": [[607, null]], "Status": [[402, "status"], [411, "status"], [412, "status"]], "Storing the energy dispersion information as a function of sky position": [[546, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[407, "storing-the-results-and-further-studies"]], "Sub-packages": [[531, "sub-packages"]], "Suggestions": [[419, "suggestions"]], "Summary": [[433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [441, "summary"], [442, "summary"], [443, "summary"], [444, "summary"], [445, "summary"], [446, "summary"], [447, "summary"], [448, "summary"], [449, "summary"], [450, "summary"], [451, "summary"], [452, "summary"], [453, "summary"], [454, "summary"], [455, "summary"], [456, "summary"], [457, "summary"], [458, "summary"], [459, "summary"], [460, "summary"], [461, "summary"], [479, "summary"], [515, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[588, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[587, null]], "Super exponential cutoff power law model used for 3FGL": [[586, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[273, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[274, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[275, null]], "Supernova Remnant Models": [[536, null]], "Support for Asymmetric IRFs": [[503, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[418, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[523, null]], "Survey panel plots": [[610, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[276, null]], "TS map estimation": [[474, "ts-map-estimation"]], "TSMapEstimator": [[136, null]], "Table conversion": [[500, "table-conversion"]], "Task List": [[404, "task-list"]], "Task list": [[403, "task-list"], [405, "task-list"], [406, "task-list"], [407, "task-list"], [408, "task-list"], [409, "task-list"], [412, "task-list"], [422, "task-list"]], "Template spatial model": [[567, null]], "Template spectral model": [[589, null]], "TemplateNDSpatialModel": [[277, null]], "TemplateNDSpectralModel": [[278, null]], "TemplateNPredModel": [[279, null]], "TemplatePhaseCurveTemporalModel": [[280, null]], "TemplateSpatialModel": [[281, null]], "TemplateSpectralModel": [[282, null]], "Temporal models": [[508, "temporal-models"], [556, "temporal-models"], [591, null]], "TemporalModel": [[283, null]], "Testing of plotting functions": [[392, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[398, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[482, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[424, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[424, "the-gammapy-extra-repository"]], "The index tables": [[539, "the-index-tables"]], "The reflected region finder": [[551, "the-reflected-region-finder"]], "The results for testing energy dependence": [[482, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[482, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[480, "the-setup"], [500, "the-setup"], [501, "the-setup"], [511, "the-setup"]], "Time": [[489, null], [520, "time"]], "Time bin preparation": [[407, "time-bin-preparation"]], "Time bins": [[407, "time-bins"]], "Time differences": [[609, "time-differences"]], "Time format and scale": [[609, "time-format-and-scale"]], "Time handling in Gammapy": [[609, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[495, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[495, null]], "Time variable source using a lightcurve": [[483, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[206, null], [505, "timemapaxis"]], "Timing Analysis": [[401, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[297, null]], "Troubleshooting": [[429, null], [605, "troubleshooting"]], "Tutorial overview": [[482, "tutorial-overview"], [514, "tutorial-overview"], [516, "tutorial-overview"]], "Tutorials": [[413, "tutorials"], [520, null]], "Tutorials Overview": [[426, "tutorials-overview"]], "Type validation": [[420, "type-validation"]], "Types of supported datasets": [[538, "types-of-supported-datasets"]], "Understanding the outputs": [[509, "understanding-the-outputs"]], "Unification of flux estimators?": [[417, "unification-of-flux-estimators"]], "UniformPrior": [[284, null]], "Unify calling interface for models": [[403, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[555, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[421, "use-cases"], [422, "use-cases"]], "Use cases / scenarios": [[402, "use-cases-scenarios"]], "User guide": [[543, null]], "User perspective": [[399, "user-perspective"]], "User testing of the API": [[422, "user-testing-of-the-api"]], "Using Anaconda / Miniconda": [[427, "using-anaconda-miniconda"]], "Using Factory Methods": [[505, "using-factory-methods"]], "Using Gammapy": [[430, null]], "Using Gammapy IRFs": [[503, null]], "Using Mamba": [[427, "using-mamba"]], "Using YAML configuration files": [[525, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[471, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[471, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[541, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[530, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[533, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[537, "using-gammapy-catalog"]], "Using gammapy.data": [[539, "using-gammapy-data"]], "Using gammapy.datasets": [[538, "using-gammapy-datasets"]], "Using gammapy.estimators": [[540, "using-gammapy-estimators"]], "Using gammapy.irf": [[547, "using-gammapy-irf"]], "Using gammapy.makers": [[550, "using-gammapy-makers"]], "Using gammapy.maps": [[554, "using-gammapy-maps"]], "Using gammapy.modeling": [[602, "using-gammapy-modeling"]], "Using masks": [[499, "using-masks"]], "Using other package managers": [[427, "using-other-package-managers"]], "Using pip": [[427, "using-pip"]], "Using regions": [[551, "using-regions"]], "Using the reflected background estimator": [[551, "using-the-reflected-background-estimator"]], "Utility functions": [[609, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[532, "velocity-distributions"]], "Venv Environments": [[425, "venv-environments"]], "Version 0.1": [[432, "version-0-1"]], "Version 0.10": [[432, "version-0-10"]], "Version 0.11": [[432, "version-0-11"]], "Version 0.12": [[432, "version-0-12"]], "Version 0.13": [[432, "version-0-13"]], "Version 0.14": [[432, "version-0-14"]], "Version 0.15": [[432, "version-0-15"]], "Version 0.16": [[432, "version-0-16"]], "Version 0.17": [[432, "version-0-17"]], "Version 0.18": [[432, "version-0-18"]], "Version 0.19": [[432, "version-0-19"]], "Version 0.2": [[432, "version-0-2"]], "Version 0.20": [[432, "version-0-20"]], "Version 0.20.1": [[432, "version-0-20-1"]], "Version 0.3": [[432, "version-0-3"]], "Version 0.4": [[432, "version-0-4"]], "Version 0.5": [[432, "version-0-5"]], "Version 0.6": [[432, "version-0-6"]], "Version 0.7": [[432, "version-0-7"]], "Version 0.8": [[432, "version-0-8"]], "Version 0.9": [[432, "version-0-9"]], "Version 1.0": [[432, "version-1-0"]], "Version 1.0.1": [[432, "version-1-0-1"]], "Version 1.0.2": [[432, "version-1-0-2"]], "Version 1.1": [[432, "version-1-1"]], "Version 1.2": [[432, "version-1-2"]], "Version 1.3": [[432, "version-1-3"]], "Version numbering": [[418, "version-numbering"]], "Virtual Environments": [[425, null]], "Visualing a RegionNDMap": [[555, "visualing-a-regionndmap"]], "Visualising the results": [[495, "visualising-the-results"]], "Visualization": [[610, null]], "Visualizing and Plotting": [[505, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[606, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[607, "wstat-counts-statistic"]], "WStatCountsStatistic": [[298, null]], "WcsGeom": [[207, null]], "WcsMap": [[208, null]], "WcsNDMap": [[209, null]], "What checks and conversions should I do for inputs?": [[392, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[397, "what-is-a-pig"]], "What is this?": [[395, "what-is-this"]], "What next?": [[468, "what-next"], [470, "what-next"], [474, "what-next"], [481, "what-next"], [490, "what-next"], [528, "what-next"]], "What others have": [[402, "what-others-have"]], "What we have": [[400, "what-we-have"], [408, "what-we-have"], [417, "what-we-have"]], "What\u2019s new?": [[434, "what-s-new"], [435, "what-s-new"], [436, "what-s-new"], [437, "what-s-new"], [438, "what-s-new"], [439, "what-s-new"], [440, "what-s-new"], [441, "what-s-new"], [442, "what-s-new"], [443, "what-s-new"], [444, "what-s-new"], [445, "what-s-new"], [447, "what-s-new"], [448, "what-s-new"], [450, "what-s-new"], [451, "what-s-new"], [452, "what-s-new"], [453, "what-s-new"], [454, "what-s-new"], [455, "what-s-new"]], "What\u2019s next": [[525, "whats-next"]], "What\u2019s next?": [[471, "whats-next"]], "Where should I import from?": [[392, "where-should-i-import-from"]], "WobbleRegionsFinder": [[184, null]], "Working with event lists": [[539, "working-with-event-lists"]], "Write your own CLI": [[605, "write-your-own-cli"]], "Writing Maps": [[505, "writing-maps"]], "Writing a PIG": [[397, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[555, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[539, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[559, "yaml-representation"], [560, "yaml-representation"], [561, "yaml-representation"], [562, "yaml-representation"], [563, "yaml-representation"], [564, "yaml-representation"], [565, "yaml-representation"], [566, "yaml-representation"], [567, "yaml-representation"], [570, "yaml-representation"], [571, "yaml-representation"], [572, "yaml-representation"], [573, "yaml-representation"], [574, "yaml-representation"], [575, "yaml-representation"], [576, "yaml-representation"], [577, "yaml-representation"], [578, "yaml-representation"], [579, "yaml-representation"], [580, "yaml-representation"], [581, "yaml-representation"], [582, "yaml-representation"], [583, "yaml-representation"], [584, "yaml-representation"], [585, "yaml-representation"], [586, "yaml-representation"], [587, "yaml-representation"], [588, "yaml-representation"], [589, "yaml-representation"], [592, "yaml-representation"], [593, "yaml-representation"], [594, "yaml-representation"], [595, "yaml-representation"], [596, "yaml-representation"], [597, "yaml-representation"], [598, "yaml-representation"], [599, "yaml-representation"], [600, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[372, null]], "add_colorbar": [[380, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[381, null]], "apply_edisp": [[112, null], [117, null]], "arbitrary type input and validation": [[420, "arbitrary-type-input-and-validation"]], "assert_quantity_allclose": [[366, null]], "assert_skycoord_allclose": [[367, null]], "assert_time_allclose": [[368, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[319, null]], "cash": [[299, null]], "cash_sum_cython": [[300, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[419, "codemeta-json"]], "colormap_hess": [[382, null]], "colormap_milagro": [[383, null]], "combine_flux_maps": [[137, null]], "combine_significance_maps": [[138, null]], "compound_region_to_regions": [[349, null]], "compute_chisq": [[301, null]], "compute_flux_doubling": [[302, null]], "compute_fpp": [[303, null]], "compute_fvar": [[304, null]], "compute_lightcurve_discrete_correlation": [[139, null]], "compute_lightcurve_doublingtime": [[140, null]], "compute_lightcurve_fpp": [[141, null]], "compute_lightcurve_fvar": [[142, null]], "config": [[11, "gammapy-analysis-config"], [11, "gammapy-workflow-config"]], "containment_radius": [[210, null]], "containment_region": [[211, null]], "create_cosmic_ray_spectral_model": [[285, null]], "create_crab_spectral_model": [[286, null]], "create_empty_map_dataset_from_irfs": [[113, null]], "create_fermi_isotropic_diffuse_model": [[287, null]], "create_map_dataset_from_dl4": [[118, null]], "create_map_dataset_from_observation": [[114, null]], "create_map_dataset_geoms": [[115, null]], "cstat": [[305, null]], "data": [[420, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[306, null]], "docs.gammapy.org": [[424, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[341, null]], "earth_location_from_dict": [[328, null]], "estimate_exposure_reco_energy": [[143, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[307, null]], "find_peaks": [[144, null]], "find_peaks_in_flux_map": [[145, null]], "fov_to_sky": [[320, null]], "from_yaml": [[354, null]], "galactic": [[321, null]], "gamLike": [[530, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[424, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_flux_maps": [[146, null]], "get_combined_significance_maps": [[147, null]], "get_images_paths": [[355, null]], "get_irfs_features": [[96, null]], "get_random_state": [[342, null]], "get_rebinned_axis": [[148, null]], "get_wstat_gof_terms": [[308, null]], "get_wstat_mu_bkg": [[309, null]], "hierarchical_clustering": [[316, null]], "hstack_columns": [[361, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[288, null]], "interpolate_profile": [[331, null]], "interpolation_scale": [[332, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[170, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[350, null]], "make_counts_rad_max": [[185, null]], "make_edisp_kernel_map": [[186, null]], "make_edisp_map": [[187, null]], "make_effective_livetime_map": [[188, null]], "make_map_background_irf": [[189, null]], "make_map_exposure_true_energy": [[190, null]], "make_observation_time_map": [[191, null]], "make_orthogonal_rectangle_sky_regions": [[351, null]], "make_path": [[356, null]], "make_psf_map": [[192, null]], "make_theta_squared_table": [[193, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[322, null]], "mpl_plot_check": [[369, null]], "multiprocessing_manager": [[338, null]], "norm_bounds_cython": [[310, null]], "normalize": [[343, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[344, null]], "plot_contour_line": [[384, null]], "plot_distribution": [[385, null]], "plot_heatmap": [[386, null]], "plot_map_rgb": [[387, null]], "plot_npred_signal": [[388, null]], "plot_spectrum_datasets_off_regions": [[389, null]], "plot_theta_squared_table": [[390, null]], "polar": [[323, null]], "pydantic": [[420, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[289, null], [291, null]], "read_yaml": [[357, null]], "recursive_merge_dicts": [[358, null]], "region_to_frame": [[352, null]], "regions_to_compound_region": [[353, null]], "requires_data": [[370, null]], "requires_dependency": [[371, null]], "resample_energy_edges": [[149, null]], "run": [[11, "gammapy-analysis-run"], [11, "gammapy-workflow-run"]], "run_multiprocessing": [[339, null]], "sample_powerlaw": [[345, null]], "sample_sphere": [[346, null]], "sample_sphere_distance": [[347, null]], "sample_times": [[348, null]], "scale_plot_flux": [[290, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[292, null]], "sigma_to_ts": [[311, null]], "sky_to_fov": [[324, null]], "split_dataset": [[116, null], [119, null]], "standard_scaler": [[317, null]], "standardise_unit": [[376, null]], "stat_profile_ul_scipy": [[293, null]], "stats - Statistics": [[12, null]], "structure_function": [[312, null]], "table_row_to_dict": [[362, null]], "table_standardise_units_copy": [[363, null]], "table_standardise_units_inplace": [[364, null]], "the base class": [[420, "the-base-class"]], "time_ref_from_dict": [[373, null]], "time_ref_to_dict": [[374, null]], "time_relative_to_ref": [[375, null]], "to_yaml": [[359, null]], "trapz_loglog": [[329, null]], "ts_to_sigma": [[313, null]], "unit_from_fits_image_hdu": [[377, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[325, null]], "visualization - Plotting features": [[14, null]], "weighted_cash_sum_cython": [[314, null]], "workflow": [[11, "gammapy-workflow"]], "wrap_at": [[378, null]], "write_yaml": [[360, null]], "wstat": [[315, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FermipyDatasetsReader", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_empty_map_dataset_from_irfs", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.create_map_dataset_from_dl4", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.ParameterSensitivityEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.combine_flux_maps", "api/gammapy.estimators.utils.combine_significance_maps", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_flux_maps", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.Sampler", "api/gammapy.modeling.SamplerResult", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianPrior", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.LogUniformPrior", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.UniformPrior", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.Chi2AsymmetricErrorFitStatistic", "api/gammapy.stats.Chi2FitStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.sigma_to_ts", "api/gammapy.stats.structure_function", "api/gammapy.stats.ts_to_sigma", "api/gammapy.stats.weighted_cash_sum_cython", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.utils.units.wrap_at", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-017", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/pigs/pig-027", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "release-notes/v2.0", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/index", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/index", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/index", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/index", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/index", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/nested_sampling_Crab", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/api/theta_square_plot", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/index", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/index", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/index", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/index", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/index", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FermipyDatasetsReader.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_empty_map_dataset_from_irfs.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.create_map_dataset_from_dl4.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.ParameterSensitivityEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.combine_flux_maps.rst", "api/gammapy.estimators.utils.combine_significance_maps.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_flux_maps.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.Sampler.rst", "api/gammapy.modeling.SamplerResult.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianPrior.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.LogUniformPrior.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.UniformPrior.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.Chi2AsymmetricErrorFitStatistic.rst", "api/gammapy.stats.Chi2FitStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.sigma_to_ts.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.ts_to_sigma.rst", "api/gammapy.stats.weighted_cash_sum_cython.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.utils.units.wrap_at.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-017.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/pigs/pig-027.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "release-notes/v2.0.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/index.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/index.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/index.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/index.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/index.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/nested_sampling_Crab.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/api/theta_square_plot.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/index.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/index.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/index.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/index.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/index.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[604, "term-1D-Analysis", true]], "3d analysis": [[604, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[330, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[372, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[380, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[604, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[125, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[127, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[381, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[112, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[117, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[366, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[367, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[368, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[182, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[176, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[183, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[333, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[150, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[151, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "background_models (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.background_models", false]], "background_models (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.background_models", false]], "backgroundirf (class in gammapy.irf)": [[152, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[604, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[319, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[604, "term-Cash", true]], "cash() (in module gammapy.stats)": [[299, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[300, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[294, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[365, "gammapy.utils.testing.Checker", false]], "chi2asymmetricerrorfitstatistic (class in gammapy.stats)": [[295, "gammapy.stats.Chi2AsymmetricErrorFitStatistic", false]], "chi2fitstatistic (class in gammapy.stats)": [[296, "gammapy.stats.Chi2FitStatistic", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[382, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[383, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "combine_flux_maps() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.combine_flux_maps", false]], "combine_significance_maps() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.combine_significance_maps", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[349, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[301, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[302, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[303, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[304, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[210, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[211, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[123, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[131, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[252, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.copy", false]], "copy() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[212, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[252, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[213, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[202, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[251, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[269, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[285, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[286, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_dataset() (gammapy.datasets.fermipydatasetsreader static method)": [[101, "gammapy.datasets.FermipyDatasetsReader.create_dataset", false]], "create_empty_map_dataset_from_irfs() (in module gammapy.datasets)": [[113, "gammapy.datasets.create_empty_map_dataset_from_irfs", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[287, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_dl4() (in module gammapy.datasets.utils)": [[118, "gammapy.datasets.utils.create_map_dataset_from_dl4", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[114, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[115, "gammapy.datasets.create_map_dataset_geoms", false]], "create_mask() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.create_mask", false]], "create_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.create_mask", false]], "create_mask() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.create_mask", false]], "create_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.create_mask", false]], "crop() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[305, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[318, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[164, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[604, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[172, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.dict", false]], "discrete_correlation() (in module gammapy.stats)": [[306, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[604, "term-DL3", true]], "dl4": [[604, "term-DL4", true]], "dl5": [[604, "term-DL5", true]], "dl6": [[604, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[341, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[328, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[232, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[604, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[153, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[154, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[155, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[156, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[158, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[143, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_sensitivity() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_sensitivity", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[604, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[123, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[121, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[230, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianprior static method)": [[238, "gammapy.modeling.models.GaussianPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[245, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.loguniformprior static method)": [[248, "gammapy.modeling.models.LogUniformPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[267, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[268, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.uniformprior static method)": [[284, "gammapy.modeling.models.UniformPrior.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[165, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[165, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[109, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[109, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[124, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[307, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "fermipydatasetsreader (class in gammapy.datasets)": [[101, "gammapy.datasets.FermipyDatasetsReader", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[144, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[145, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[214, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[215, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[127, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[128, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[604, "term-FoV", true]], "fov background": [[604, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[320, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[159, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[173, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[252, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[229, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[230, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianprior class method)": [[238, "gammapy.modeling.models.GaussianPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[245, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.loguniformprior class method)": [[248, "gammapy.modeling.models.LogUniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[251, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[252, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[253, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[257, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[262, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[267, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[268, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[269, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[271, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[272, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[279, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[283, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.uniformprior class method)": [[284, "gammapy.modeling.models.UniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[218, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[220, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[212, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[196, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[197, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[205, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[208, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[209, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[161, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[194, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[230, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianprior class method)": [[238, "gammapy.modeling.models.GaussianPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[245, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.loguniformprior class method)": [[248, "gammapy.modeling.models.LogUniformPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[252, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[257, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[262, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[267, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[268, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[269, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[271, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[272, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[279, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[283, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.uniformprior class method)": [[284, "gammapy.modeling.models.UniformPrior.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[230, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[257, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[267, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[271, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[230, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[198, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[199, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[212, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[218, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[220, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[198, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_ultranest() (gammapy.modeling.samplerresult class method)": [[222, "gammapy.modeling.SamplerResult.from_ultranest", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[229, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[253, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[354, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[252, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[604, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[321, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy-workflow-config command line option": [[11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "gammapy-workflow-run command line option": [[11, "cmdoption-gammapy-workflow-run-filename", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianprior (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.GaussianPrior", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[194, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[203, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_flux_maps() (in module gammapy.estimators.utils)": [[146, "gammapy.estimators.utils.get_combined_flux_maps", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[147, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[108, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[326, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[355, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[195, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[342, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[148, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[120, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[308, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[309, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[604, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[326, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[316, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[604, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[195, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[196, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[197, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[361, "gammapy.utils.table.hstack_columns", false]], "iact": [[604, "term-IACT", true]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[130, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[326, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[288, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[331, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[332, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inverse_transform() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.inverse_transform", false]], "inverse_transform() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.inverse_transform", false]], "inversecdfsampler (class in gammapy.utils.random)": [[340, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[604, "term-IRF", true]], "irf (class in gammapy.irf)": [[160, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[162, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[161, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[604, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[198, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[327, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[326, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[170, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "loglikelihood_dataset() (gammapy.stats.chi2asymmetricerrorfitstatistic class method)": [[295, "gammapy.stats.Chi2AsymmetricErrorFitStatistic.loglikelihood_dataset", false]], "loglikelihood_dataset() (gammapy.stats.chi2fitstatistic class method)": [[296, "gammapy.stats.Chi2FitStatistic.loglikelihood_dataset", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "loguniformprior (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.LogUniformPrior", false]], "lon (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[350, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[185, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[187, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[188, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[189, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[190, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[191, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[351, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[356, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[192, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[193, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[604, "term-Maker", true]], "maker (class in gammapy.makers)": [[175, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[174, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[199, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[200, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[201, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[202, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[176, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[106, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[379, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[203, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.max", false]], "max (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.max", false]], "max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[604, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.message", false]], "met": [[604, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[334, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[335, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.min", false]], "min (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.min", false]], "min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[249, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[322, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[369, "gammapy.utils.testing.mpl_plot_check", false]], "mu (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.mu", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[338, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[336, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[310, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[343, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[109, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[107, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[108, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[216, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[217, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameter_matching_significance() (gammapy.estimators.parametersensitivityestimator method)": [[134, "gammapy.estimators.ParameterSensitivityEstimator.parameter_matching_significance", false]], "parameterestimator (class in gammapy.estimators)": [[133, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[218, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[252, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[252, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.parameters_unique_names", false]], "parametersensitivityestimator (class in gammapy.estimators)": [[134, "gammapy.estimators.ParameterSensitivityEstimator", false]], "parametricpsf (class in gammapy.irf)": [[167, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[326, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[344, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[177, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[206, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[379, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[384, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[385, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[386, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[387, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[388, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[379, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[389, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[390, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[323, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[337, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[219, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[220, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.projection", false]], "psf": [[604, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[163, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[164, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[164, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[165, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[166, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pulse_profile_best_fit (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profile_best_fit", false]], "pulse_profile_radio (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profile_radio", false]], "pulse_profiles (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profiles", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[168, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fermipydatasetsreader method)": [[101, "gammapy.datasets.FermipyDatasetsReader.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[161, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[196, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[197, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[208, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[209, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[229, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[253, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[289, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[291, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[357, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[252, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.reassign", false]], "reco energy": [[604, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[169, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[358, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[604, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[179, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[352, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[204, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[205, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[353, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[180, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[370, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[371, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[149, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_autoscale() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.reset_autoscale", false]], "reset_autoscale() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.reset_autoscale", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.reverse", false]], "reverse_lon_radec (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.REVERSE_LON_RADEC", false]], "ring background": [[604, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[181, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[604, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[123, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[131, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.parametersensitivityestimator method)": [[134, "gammapy.estimators.ParameterSensitivityEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[175, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[179, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[180, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[184, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.run", false]], "run() (gammapy.modeling.sampler method)": [[221, "gammapy.modeling.Sampler.run", false]], "run() (gammapy.utils.testing.checker method)": [[365, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[339, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[182, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[340, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[340, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[345, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[346, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[347, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[348, "gammapy.utils.random.sample_times", false]], "sampler (class in gammapy.modeling)": [[221, "gammapy.modeling.Sampler", false]], "sampler_ultranest() (gammapy.modeling.sampler method)": [[221, "gammapy.modeling.Sampler.sampler_ultranest", false]], "samplerresult (class in gammapy.modeling)": [[222, "gammapy.modeling.SamplerResult", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[290, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scale_transform (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scale_transform", false]], "scale_transform (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scale_transform", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[330, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[604, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[292, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[135, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_lim() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.set_lim", false]], "set_lim() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.set_lim", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "sigma_to_ts() (in module gammapy.stats)": [[311, "gammapy.stats.sigma_to_ts", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[324, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[263, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[264, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[110, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[183, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[111, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[116, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[119, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[604, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[317, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[376, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_array_dataset() (gammapy.stats.chi2asymmetricerrorfitstatistic class method)": [[295, "gammapy.stats.Chi2AsymmetricErrorFitStatistic.stat_array_dataset", false]], "stat_array_dataset() (gammapy.stats.chi2fitstatistic class method)": [[296, "gammapy.stats.Chi2FitStatistic.stat_array_dataset", false]], "stat_contour() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[293, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_sum_dataset() (gammapy.stats.chi2asymmetricerrorfitstatistic class method)": [[295, "gammapy.stats.Chi2AsymmetricErrorFitStatistic.stat_sum_dataset", false]], "stat_sum_dataset() (gammapy.stats.chi2fitstatistic class method)": [[296, "gammapy.stats.Chi2FitStatistic.stat_sum_dataset", false]], "stat_surface() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.stat_type", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[312, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[362, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[363, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[364, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fermipydatasetsreader attribute)": [[101, "gammapy.datasets.FermipyDatasetsReader.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[107, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[108, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.parametersensitivityestimator attribute)": [[134, "gammapy.estimators.ParameterSensitivityEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[175, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[176, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[177, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[181, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[182, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[183, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "tag (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[279, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[281, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[282, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[276, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[283, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[373, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[374, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[375, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[245, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[268, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[283, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[206, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[297, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[213, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[252, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[216, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[359, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.trace", false]], "transform() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.transform", false]], "transform() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.transform", false]], "transit": [[604, "term-Transit", true]], "trapz_loglog() (in module gammapy.utils.integrate)": [[329, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[604, "term-True-Energy", true]], "ts": [[604, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.ts_scan", false]], "ts_to_sigma() (in module gammapy.stats)": [[313, "gammapy.stats.ts_to_sigma", false]], "tsmapestimator (class in gammapy.estimators)": [[136, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[252, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.type", false]], "type (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[252, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "uniformprior (class in gammapy.modeling.models)": [[284, "gammapy.modeling.models.UniformPrior", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[377, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "update_scale() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.update_scale", false]], "update_scale() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.update_scale", false]], "upsample() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[325, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcd": [[604, "term-WCD", true]], "wcs (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[207, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[208, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[209, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.weight", false]], "weight (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.weight", false]], "weight (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.weight", false]], "weight (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.weight", false]], "weighted_cash_sum_cython() (in module gammapy.stats)": [[314, "gammapy.stats.weighted_cash_sum_cython", false]], "width (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[184, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_at() (in module gammapy.utils.units)": [[378, "gammapy.utils.units.wrap_at", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[215, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[360, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[604, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[315, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[298, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy-workflow-config": [[11, 6, 1, "cmdoption-gammapy-workflow-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-workflow-config-overwrite", "--overwrite"]], "gammapy-workflow-run": [[11, 6, 1, "cmdoption-gammapy-workflow-run-filename", "--filename"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "pulse_profile_best_fit"], [77, 2, 1, "", "pulse_profile_radio"], [77, 2, 1, "", "pulse_profiles"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FermipyDatasetsReader"], [102, 1, 1, "", "FluxPointsDataset"], [103, 1, 1, "", "MapDataset"], [104, 1, 1, "", "MapDatasetEventSampler"], [105, 1, 1, "", "MapDatasetMetaData"], [106, 1, 1, "", "MapDatasetOnOff"], [107, 1, 1, "", "OGIPDatasetReader"], [108, 1, 1, "", "OGIPDatasetWriter"], [109, 1, 1, "", "ObservationEventSampler"], [110, 1, 1, "", "SpectrumDataset"], [111, 1, 1, "", "SpectrumDatasetOnOff"], [112, 4, 1, "", "apply_edisp"], [113, 4, 1, "", "create_empty_map_dataset_from_irfs"], [114, 4, 1, "", "create_map_dataset_from_observation"], [115, 4, 1, "", "create_map_dataset_geoms"], [116, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "stat_type"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FermipyDatasetsReader": [[101, 3, 1, "", "create_dataset"], [101, 3, 1, "", "read"], [101, 2, 1, "", "tag"]], "gammapy.datasets.FluxPointsDataset": [[102, 2, 1, "", "available_stat_type"], [102, 3, 1, "", "copy"], [102, 3, 1, "", "data_shape"], [102, 3, 1, "", "flux_pred"], [102, 3, 1, "", "from_dict"], [102, 2, 1, "", "gti"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_valid"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "plot_fit"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_spectrum"], [102, 3, 1, "", "read"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[103, 2, 1, "", "background"], [103, 2, 1, "", "background_model"], [103, 3, 1, "", "copy"], [103, 2, 1, "", "counts"], [103, 3, 1, "", "create"], [103, 3, 1, "", "cutout"], [103, 2, 1, "", "data_shape"], [103, 3, 1, "", "downsample"], [103, 2, 1, "", "edisp"], [103, 2, 1, "", "energy_range"], [103, 2, 1, "", "energy_range_fit"], [103, 2, 1, "", "energy_range_safe"], [103, 2, 1, "", "energy_range_total"], [103, 2, 1, "", "evaluators"], [103, 2, 1, "", "excess"], [103, 2, 1, "", "exposure"], [103, 3, 1, "", "fake"], [103, 3, 1, "", "from_dict"], [103, 3, 1, "", "from_geoms"], [103, 3, 1, "", "from_hdulist"], [103, 2, 1, "", "geoms"], [103, 2, 1, "", "gti"], [103, 3, 1, "", "info_dict"], [103, 2, 1, "", "mask"], [103, 2, 1, "", "mask_fit"], [103, 2, 1, "", "mask_fit_image"], [103, 2, 1, "", "mask_image"], [103, 2, 1, "", "mask_safe"], [103, 2, 1, "", "mask_safe_edisp"], [103, 2, 1, "", "mask_safe_image"], [103, 2, 1, "", "mask_safe_psf"], [103, 2, 1, "", "meta"], [103, 2, 1, "", "meta_table"], [103, 2, 1, "", "models"], [103, 2, 1, "", "name"], [103, 3, 1, "", "npred"], [103, 3, 1, "", "npred_background"], [103, 3, 1, "", "npred_signal"], [103, 3, 1, "", "pad"], [103, 3, 1, "", "peek"], [103, 3, 1, "", "plot_residuals"], [103, 3, 1, "", "plot_residuals_spatial"], [103, 3, 1, "", "plot_residuals_spectral"], [103, 2, 1, "", "psf"], [103, 3, 1, "", "read"], [103, 3, 1, "", "resample_energy_axis"], [103, 3, 1, "", "reset_data_cache"], [103, 3, 1, "", "residuals"], [103, 3, 1, "", "slice_by_energy"], [103, 3, 1, "", "slice_by_idx"], [103, 3, 1, "", "stack"], [103, 3, 1, "", "stat_array"], [103, 3, 1, "", "stat_sum"], [103, 2, 1, "", "stat_type"], [103, 2, 1, "", "tag"], [103, 3, 1, "", "to_dict"], [103, 3, 1, "", "to_hdulist"], [103, 3, 1, "", "to_image"], [103, 3, 1, "", "to_masked"], [103, 3, 1, "", "to_region_map_dataset"], [103, 3, 1, "", "to_spectrum_dataset"], [103, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[104, 3, 1, "", "event_det_coords"], [104, 3, 1, "", "event_list_meta"], [104, 3, 1, "", "run"], [104, 3, 1, "", "sample_background"], [104, 3, 1, "", "sample_edisp"], [104, 3, 1, "", "sample_psf"], [104, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[105, 3, 1, "", "construct"], [105, 3, 1, "", "copy"], [105, 3, 1, "", "dict"], [105, 3, 1, "", "from_header"], [105, 3, 1, "", "from_orm"], [105, 3, 1, "", "json"], [105, 2, 1, "", "model_computed_fields"], [105, 2, 1, "", "model_config"], [105, 3, 1, "", "model_construct"], [105, 3, 1, "", "model_copy"], [105, 3, 1, "", "model_dump"], [105, 3, 1, "", "model_dump_json"], [105, 2, 1, "", "model_extra"], [105, 2, 1, "", "model_fields"], [105, 2, 1, "", "model_fields_set"], [105, 3, 1, "", "model_json_schema"], [105, 3, 1, "", "model_parametrized_name"], [105, 3, 1, "", "model_post_init"], [105, 3, 1, "", "model_rebuild"], [105, 3, 1, "", "model_validate"], [105, 3, 1, "", "model_validate_json"], [105, 3, 1, "", "model_validate_strings"], [105, 3, 1, "", "parse_file"], [105, 3, 1, "", "parse_obj"], [105, 3, 1, "", "parse_raw"], [105, 3, 1, "", "schema"], [105, 3, 1, "", "schema_json"], [105, 3, 1, "", "stack"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_header"], [105, 3, 1, "", "to_yaml"], [105, 3, 1, "", "update_forward_refs"], [105, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[106, 2, 1, "", "alpha"], [106, 2, 1, "", "background"], [106, 2, 1, "", "background_model"], [106, 3, 1, "", "copy"], [106, 2, 1, "", "counts"], [106, 3, 1, "", "create"], [106, 3, 1, "", "cutout"], [106, 2, 1, "", "data_shape"], [106, 3, 1, "", "downsample"], [106, 2, 1, "", "edisp"], [106, 2, 1, "", "energy_range"], [106, 2, 1, "", "energy_range_fit"], [106, 2, 1, "", "energy_range_safe"], [106, 2, 1, "", "energy_range_total"], [106, 2, 1, "", "evaluators"], [106, 2, 1, "", "excess"], [106, 2, 1, "", "exposure"], [106, 3, 1, "", "fake"], [106, 3, 1, "", "from_dict"], [106, 3, 1, "", "from_geoms"], [106, 3, 1, "", "from_hdulist"], [106, 3, 1, "", "from_map_dataset"], [106, 2, 1, "", "geoms"], [106, 2, 1, "", "gti"], [106, 3, 1, "", "info_dict"], [106, 2, 1, "", "mask"], [106, 2, 1, "", "mask_fit"], [106, 2, 1, "", "mask_fit_image"], [106, 2, 1, "", "mask_image"], [106, 2, 1, "", "mask_safe"], [106, 2, 1, "", "mask_safe_edisp"], [106, 2, 1, "", "mask_safe_image"], [106, 2, 1, "", "mask_safe_psf"], [106, 2, 1, "", "meta"], [106, 2, 1, "", "meta_table"], [106, 2, 1, "", "models"], [106, 2, 1, "", "name"], [106, 3, 1, "", "npred"], [106, 3, 1, "", "npred_background"], [106, 3, 1, "", "npred_off"], [106, 3, 1, "", "npred_signal"], [106, 3, 1, "", "pad"], [106, 3, 1, "", "peek"], [106, 3, 1, "", "plot_residuals"], [106, 3, 1, "", "plot_residuals_spatial"], [106, 3, 1, "", "plot_residuals_spectral"], [106, 2, 1, "", "psf"], [106, 3, 1, "", "read"], [106, 3, 1, "", "resample_energy_axis"], [106, 3, 1, "", "reset_data_cache"], [106, 3, 1, "", "residuals"], [106, 3, 1, "", "slice_by_energy"], [106, 3, 1, "", "slice_by_idx"], [106, 3, 1, "", "stack"], [106, 3, 1, "", "stat_array"], [106, 3, 1, "", "stat_sum"], [106, 2, 1, "", "stat_type"], [106, 2, 1, "", "tag"], [106, 3, 1, "", "to_dict"], [106, 3, 1, "", "to_hdulist"], [106, 3, 1, "", "to_image"], [106, 3, 1, "", "to_map_dataset"], [106, 3, 1, "", "to_masked"], [106, 3, 1, "", "to_region_map_dataset"], [106, 3, 1, "", "to_spectrum_dataset"], [106, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[107, 3, 1, "", "get_filenames"], [107, 3, 1, "", "get_valid_path"], [107, 3, 1, "", "read"], [107, 3, 1, "", "read_arf"], [107, 3, 1, "", "read_bkg"], [107, 3, 1, "", "read_pha"], [107, 3, 1, "", "read_rmf"], [107, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[108, 3, 1, "", "get_filenames"], [108, 3, 1, "", "get_ogip_meta"], [108, 2, 1, "", "tag"], [108, 3, 1, "", "to_counts_hdulist"], [108, 3, 1, "", "write"], [108, 3, 1, "", "write_arf"], [108, 3, 1, "", "write_bkg"], [108, 3, 1, "", "write_pha"], [108, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[109, 3, 1, "", "event_det_coords"], [109, 3, 1, "", "event_list_meta"], [109, 3, 1, "", "run"], [109, 3, 1, "", "sample_background"], [109, 3, 1, "", "sample_edisp"], [109, 3, 1, "", "sample_psf"], [109, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[110, 2, 1, "", "background"], [110, 2, 1, "", "background_model"], [110, 3, 1, "", "copy"], [110, 2, 1, "", "counts"], [110, 3, 1, "", "create"], [110, 3, 1, "", "cutout"], [110, 2, 1, "", "data_shape"], [110, 3, 1, "", "downsample"], [110, 2, 1, "", "edisp"], [110, 2, 1, "", "energy_range"], [110, 2, 1, "", "energy_range_fit"], [110, 2, 1, "", "energy_range_safe"], [110, 2, 1, "", "energy_range_total"], [110, 2, 1, "", "evaluators"], [110, 2, 1, "", "excess"], [110, 2, 1, "", "exposure"], [110, 3, 1, "", "fake"], [110, 3, 1, "", "from_dict"], [110, 3, 1, "", "from_geoms"], [110, 3, 1, "", "from_hdulist"], [110, 2, 1, "", "geoms"], [110, 2, 1, "", "gti"], [110, 3, 1, "", "info_dict"], [110, 2, 1, "", "mask"], [110, 2, 1, "", "mask_fit"], [110, 2, 1, "", "mask_fit_image"], [110, 2, 1, "", "mask_image"], [110, 2, 1, "", "mask_safe"], [110, 2, 1, "", "mask_safe_edisp"], [110, 2, 1, "", "mask_safe_image"], [110, 2, 1, "", "mask_safe_psf"], [110, 2, 1, "", "meta"], [110, 2, 1, "", "meta_table"], [110, 2, 1, "", "models"], [110, 2, 1, "", "name"], [110, 3, 1, "", "npred"], [110, 3, 1, "", "npred_background"], [110, 3, 1, "", "npred_signal"], [110, 3, 1, "", "pad"], [110, 3, 1, "", "peek"], [110, 3, 1, "", "plot_counts"], [110, 3, 1, "", "plot_excess"], [110, 3, 1, "", "plot_fit"], [110, 3, 1, "", "plot_masks"], [110, 3, 1, "", "plot_residuals"], [110, 3, 1, "", "plot_residuals_spatial"], [110, 3, 1, "", "plot_residuals_spectral"], [110, 2, 1, "", "psf"], [110, 3, 1, "", "read"], [110, 3, 1, "", "resample_energy_axis"], [110, 3, 1, "", "reset_data_cache"], [110, 3, 1, "", "residuals"], [110, 3, 1, "", "slice_by_energy"], [110, 3, 1, "", "slice_by_idx"], [110, 3, 1, "", "stack"], [110, 3, 1, "", "stat_array"], [110, 3, 1, "", "stat_sum"], [110, 2, 1, "", "stat_type"], [110, 2, 1, "", "tag"], [110, 3, 1, "", "to_dict"], [110, 3, 1, "", "to_hdulist"], [110, 3, 1, "", "to_image"], [110, 3, 1, "", "to_masked"], [110, 3, 1, "", "to_region_map_dataset"], [110, 3, 1, "", "to_spectrum_dataset"], [110, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[111, 2, 1, "", "alpha"], [111, 2, 1, "", "background"], [111, 2, 1, "", "background_model"], [111, 3, 1, "", "copy"], [111, 2, 1, "", "counts"], [111, 3, 1, "", "create"], [111, 3, 1, "", "cutout"], [111, 2, 1, "", "data_shape"], [111, 3, 1, "", "downsample"], [111, 2, 1, "", "edisp"], [111, 2, 1, "", "energy_range"], [111, 2, 1, "", "energy_range_fit"], [111, 2, 1, "", "energy_range_safe"], [111, 2, 1, "", "energy_range_total"], [111, 2, 1, "", "evaluators"], [111, 2, 1, "", "excess"], [111, 2, 1, "", "exposure"], [111, 3, 1, "", "fake"], [111, 3, 1, "", "from_dict"], [111, 3, 1, "", "from_geoms"], [111, 3, 1, "", "from_hdulist"], [111, 3, 1, "", "from_map_dataset"], [111, 3, 1, "", "from_spectrum_dataset"], [111, 2, 1, "", "geoms"], [111, 2, 1, "", "gti"], [111, 3, 1, "", "info_dict"], [111, 2, 1, "", "mask"], [111, 2, 1, "", "mask_fit"], [111, 2, 1, "", "mask_fit_image"], [111, 2, 1, "", "mask_image"], [111, 2, 1, "", "mask_safe"], [111, 2, 1, "", "mask_safe_edisp"], [111, 2, 1, "", "mask_safe_image"], [111, 2, 1, "", "mask_safe_psf"], [111, 2, 1, "", "meta"], [111, 2, 1, "", "meta_table"], [111, 2, 1, "", "models"], [111, 2, 1, "", "name"], [111, 3, 1, "", "npred"], [111, 3, 1, "", "npred_background"], [111, 3, 1, "", "npred_off"], [111, 3, 1, "", "npred_signal"], [111, 3, 1, "", "pad"], [111, 3, 1, "", "peek"], [111, 3, 1, "", "plot_counts"], [111, 3, 1, "", "plot_excess"], [111, 3, 1, "", "plot_fit"], [111, 3, 1, "", "plot_masks"], [111, 3, 1, "", "plot_residuals"], [111, 3, 1, "", "plot_residuals_spatial"], [111, 3, 1, "", "plot_residuals_spectral"], [111, 2, 1, "", "psf"], [111, 3, 1, "", "read"], [111, 3, 1, "", "resample_energy_axis"], [111, 3, 1, "", "reset_data_cache"], [111, 3, 1, "", "residuals"], [111, 3, 1, "", "slice_by_energy"], [111, 3, 1, "", "slice_by_idx"], [111, 3, 1, "", "stack"], [111, 3, 1, "", "stat_array"], [111, 3, 1, "", "stat_sum"], [111, 2, 1, "", "stat_type"], [111, 2, 1, "", "tag"], [111, 3, 1, "", "to_dict"], [111, 3, 1, "", "to_hdulist"], [111, 3, 1, "", "to_image"], [111, 3, 1, "", "to_map_dataset"], [111, 3, 1, "", "to_masked"], [111, 3, 1, "", "to_region_map_dataset"], [111, 3, 1, "", "to_spectrum_dataset"], [111, 3, 1, "", "write"]], "gammapy.datasets.utils": [[117, 4, 1, "", "apply_edisp"], [118, 4, 1, "", "create_map_dataset_from_dl4"], [119, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[120, 1, 1, "", "ASmoothMapEstimator"], [121, 5, 1, "", "ESTIMATOR_REGISTRY"], [122, 1, 1, "", "EnergyDependentMorphologyEstimator"], [123, 1, 1, "", "Estimator"], [124, 1, 1, "", "ExcessMapEstimator"], [125, 1, 1, "", "FluxMaps"], [126, 1, 1, "", "FluxMetaData"], [127, 1, 1, "", "FluxPoints"], [128, 1, 1, "", "FluxPointsEstimator"], [129, 1, 1, "", "FluxProfileEstimator"], [130, 1, 1, "", "ImageProfile"], [131, 1, 1, "", "ImageProfileEstimator"], [132, 1, 1, "", "LightCurveEstimator"], [133, 1, 1, "", "ParameterEstimator"], [134, 1, 1, "", "ParameterSensitivityEstimator"], [135, 1, 1, "", "SensitivityEstimator"], [136, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "estimate_maps"], [120, 3, 1, "", "get_kernels"], [120, 3, 1, "", "get_scales"], [120, 3, 1, "", "run"], [120, 3, 1, "", "selection_all"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[122, 2, 1, "", "config_parameters"], [122, 3, 1, "", "copy"], [122, 3, 1, "", "estimate_energy_dependence"], [122, 3, 1, "", "run"], [122, 2, 1, "", "selection_optional"], [122, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 2, 1, "", "correlation_radius"], [124, 3, 1, "", "estimate_excess_map"], [124, 3, 1, "", "estimate_exposure_reco_energy"], [124, 3, 1, "", "estimate_kernel"], [124, 3, 1, "", "estimate_mask_default"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[125, 2, 1, "", "acceptance_off"], [125, 2, 1, "", "acceptance_on"], [125, 3, 1, "", "all_quantities"], [125, 2, 1, "", "alpha"], [125, 2, 1, "", "available_quantities"], [125, 3, 1, "", "copy"], [125, 2, 1, "", "counts"], [125, 2, 1, "", "dnde"], [125, 2, 1, "", "dnde_err"], [125, 2, 1, "", "dnde_errn"], [125, 2, 1, "", "dnde_errp"], [125, 2, 1, "", "dnde_ref"], [125, 2, 1, "", "dnde_scan_values"], [125, 2, 1, "", "dnde_ul"], [125, 2, 1, "", "e2dnde"], [125, 2, 1, "", "e2dnde_err"], [125, 2, 1, "", "e2dnde_errn"], [125, 2, 1, "", "e2dnde_errp"], [125, 2, 1, "", "e2dnde_ref"], [125, 2, 1, "", "e2dnde_ul"], [125, 2, 1, "", "eflux"], [125, 2, 1, "", "eflux_err"], [125, 2, 1, "", "eflux_errn"], [125, 2, 1, "", "eflux_errp"], [125, 2, 1, "", "eflux_ref"], [125, 2, 1, "", "eflux_ul"], [125, 2, 1, "", "energy_axis"], [125, 2, 1, "", "energy_max"], [125, 2, 1, "", "energy_min"], [125, 2, 1, "", "energy_ref"], [125, 2, 1, "", "filter_success_nan"], [125, 2, 1, "", "flux"], [125, 2, 1, "", "flux_err"], [125, 2, 1, "", "flux_errn"], [125, 2, 1, "", "flux_errp"], [125, 2, 1, "", "flux_ref"], [125, 2, 1, "", "flux_sensitivity"], [125, 2, 1, "", "flux_ul"], [125, 3, 1, "", "from_hdulist"], [125, 3, 1, "", "from_maps"], [125, 3, 1, "", "from_stack"], [125, 2, 1, "", "geom"], [125, 3, 1, "", "get_flux_points"], [125, 2, 1, "", "has_any_ts"], [125, 2, 1, "", "has_stat_profiles"], [125, 2, 1, "", "has_success"], [125, 2, 1, "", "has_ul"], [125, 2, 1, "", "is_convertible_to_flux_sed_type"], [125, 2, 1, "", "is_ul"], [125, 3, 1, "", "iter_by_axis"], [125, 2, 1, "", "n_dof"], [125, 2, 1, "", "n_sigma"], [125, 2, 1, "", "n_sigma_ul"], [125, 2, 1, "", "niter"], [125, 2, 1, "", "norm"], [125, 2, 1, "", "norm_err"], [125, 2, 1, "", "norm_errn"], [125, 2, 1, "", "norm_errp"], [125, 2, 1, "", "norm_sensitivity"], [125, 2, 1, "", "norm_ul"], [125, 2, 1, "", "npred"], [125, 2, 1, "", "npred_background"], [125, 2, 1, "", "npred_excess"], [125, 2, 1, "", "npred_excess_err"], [125, 2, 1, "", "npred_excess_errn"], [125, 2, 1, "", "npred_excess_errp"], [125, 2, 1, "", "npred_excess_ref"], [125, 2, 1, "", "npred_excess_ul"], [125, 3, 1, "", "read"], [125, 2, 1, "", "reference_model"], [125, 2, 1, "", "reference_model_default"], [125, 2, 1, "", "reference_spectral_model"], [125, 2, 1, "", "sed_type_init"], [125, 2, 1, "", "sed_type_plot_default"], [125, 3, 1, "", "slice_by_coord"], [125, 3, 1, "", "slice_by_energy"], [125, 3, 1, "", "slice_by_idx"], [125, 3, 1, "", "slice_by_time"], [125, 2, 1, "", "sqrt_ts"], [125, 2, 1, "", "sqrt_ts_threshold_ul"], [125, 2, 1, "", "stat"], [125, 2, 1, "", "stat_null"], [125, 2, 1, "", "stat_scan"], [125, 2, 1, "", "success"], [125, 3, 1, "", "to_hdulist"], [125, 3, 1, "", "to_maps"], [125, 2, 1, "", "ts"], [125, 2, 1, "", "ts_scan"], [125, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[126, 3, 1, "", "construct"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "dict"], [126, 3, 1, "", "from_header"], [126, 3, 1, "", "from_orm"], [126, 3, 1, "", "json"], [126, 2, 1, "", "model_computed_fields"], [126, 2, 1, "", "model_config"], [126, 3, 1, "", "model_construct"], [126, 3, 1, "", "model_copy"], [126, 3, 1, "", "model_dump"], [126, 3, 1, "", "model_dump_json"], [126, 2, 1, "", "model_extra"], [126, 2, 1, "", "model_fields"], [126, 2, 1, "", "model_fields_set"], [126, 3, 1, "", "model_json_schema"], [126, 3, 1, "", "model_parametrized_name"], [126, 3, 1, "", "model_post_init"], [126, 3, 1, "", "model_rebuild"], [126, 3, 1, "", "model_validate"], [126, 3, 1, "", "model_validate_json"], [126, 3, 1, "", "model_validate_strings"], [126, 3, 1, "", "parse_file"], [126, 3, 1, "", "parse_obj"], [126, 3, 1, "", "parse_raw"], [126, 3, 1, "", "schema"], [126, 3, 1, "", "schema_json"], [126, 2, 1, "", "tag"], [126, 3, 1, "", "to_header"], [126, 3, 1, "", "to_yaml"], [126, 3, 1, "", "update_forward_refs"], [126, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[127, 2, 1, "", "acceptance_off"], [127, 2, 1, "", "acceptance_on"], [127, 3, 1, "", "all_quantities"], [127, 2, 1, "", "alpha"], [127, 2, 1, "", "available_quantities"], [127, 3, 1, "", "copy"], [127, 2, 1, "", "counts"], [127, 2, 1, "", "dnde"], [127, 2, 1, "", "dnde_err"], [127, 2, 1, "", "dnde_errn"], [127, 2, 1, "", "dnde_errp"], [127, 2, 1, "", "dnde_ref"], [127, 2, 1, "", "dnde_scan_values"], [127, 2, 1, "", "dnde_ul"], [127, 2, 1, "", "e2dnde"], [127, 2, 1, "", "e2dnde_err"], [127, 2, 1, "", "e2dnde_errn"], [127, 2, 1, "", "e2dnde_errp"], [127, 2, 1, "", "e2dnde_ref"], [127, 2, 1, "", "e2dnde_ul"], [127, 2, 1, "", "eflux"], [127, 2, 1, "", "eflux_err"], [127, 2, 1, "", "eflux_errn"], [127, 2, 1, "", "eflux_errp"], [127, 2, 1, "", "eflux_ref"], [127, 2, 1, "", "eflux_ul"], [127, 2, 1, "", "energy_axis"], [127, 2, 1, "", "energy_max"], [127, 2, 1, "", "energy_min"], [127, 2, 1, "", "energy_ref"], [127, 2, 1, "", "filter_success_nan"], [127, 2, 1, "", "flux"], [127, 2, 1, "", "flux_err"], [127, 2, 1, "", "flux_errn"], [127, 2, 1, "", "flux_errp"], [127, 2, 1, "", "flux_ref"], [127, 2, 1, "", "flux_sensitivity"], [127, 2, 1, "", "flux_ul"], [127, 3, 1, "", "from_hdulist"], [127, 3, 1, "", "from_maps"], [127, 3, 1, "", "from_stack"], [127, 3, 1, "", "from_table"], [127, 2, 1, "", "geom"], [127, 3, 1, "", "get_flux_points"], [127, 2, 1, "", "has_any_ts"], [127, 2, 1, "", "has_stat_profiles"], [127, 2, 1, "", "has_success"], [127, 2, 1, "", "has_ul"], [127, 2, 1, "", "is_convertible_to_flux_sed_type"], [127, 2, 1, "", "is_ul"], [127, 3, 1, "", "iter_by_axis"], [127, 2, 1, "", "n_dof"], [127, 2, 1, "", "n_sigma"], [127, 2, 1, "", "n_sigma_ul"], [127, 2, 1, "", "niter"], [127, 2, 1, "", "norm"], [127, 2, 1, "", "norm_err"], [127, 2, 1, "", "norm_errn"], [127, 2, 1, "", "norm_errp"], [127, 2, 1, "", "norm_sensitivity"], [127, 2, 1, "", "norm_ul"], [127, 2, 1, "", "npred"], [127, 2, 1, "", "npred_background"], [127, 2, 1, "", "npred_excess"], [127, 2, 1, "", "npred_excess_err"], [127, 2, 1, "", "npred_excess_errn"], [127, 2, 1, "", "npred_excess_errp"], [127, 2, 1, "", "npred_excess_ref"], [127, 2, 1, "", "npred_excess_ul"], [127, 3, 1, "", "plot"], [127, 3, 1, "", "plot_ts_profiles"], [127, 3, 1, "", "read"], [127, 3, 1, "", "recompute_ul"], [127, 2, 1, "", "reference_model"], [127, 2, 1, "", "reference_model_default"], [127, 2, 1, "", "reference_spectral_model"], [127, 3, 1, "", "resample_axis"], [127, 2, 1, "", "sed_type_init"], [127, 2, 1, "", "sed_type_plot_default"], [127, 3, 1, "", "slice_by_coord"], [127, 3, 1, "", "slice_by_energy"], [127, 3, 1, "", "slice_by_idx"], [127, 3, 1, "", "slice_by_time"], [127, 2, 1, "", "sqrt_ts"], [127, 2, 1, "", "sqrt_ts_threshold_ul"], [127, 2, 1, "", "stat"], [127, 2, 1, "", "stat_null"], [127, 2, 1, "", "stat_scan"], [127, 2, 1, "", "success"], [127, 3, 1, "", "to_hdulist"], [127, 3, 1, "", "to_maps"], [127, 3, 1, "", "to_table"], [127, 2, 1, "", "ts"], [127, 2, 1, "", "ts_scan"], [127, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[128, 2, 1, "", "config_parameters"], [128, 3, 1, "", "copy"], [128, 3, 1, "", "estimate_best_fit"], [128, 3, 1, "", "estimate_counts"], [128, 3, 1, "", "estimate_errn_errp"], [128, 3, 1, "", "estimate_flux_point"], [128, 3, 1, "", "estimate_npred"], [128, 3, 1, "", "estimate_npred_excess"], [128, 3, 1, "", "estimate_scan"], [128, 3, 1, "", "estimate_sensitivity"], [128, 3, 1, "", "estimate_ts"], [128, 3, 1, "", "estimate_ul"], [128, 3, 1, "", "get_scale_model"], [128, 2, 1, "", "n_jobs"], [128, 2, 1, "", "parallel_backend"], [128, 3, 1, "", "run"], [128, 2, 1, "", "selection_optional"], [128, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_flux_point"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_npred_excess"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_sensitivity"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "get_scale_model"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "parallel_backend"], [129, 2, 1, "", "projected_distance_axis"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[130, 3, 1, "", "normalize"], [130, 3, 1, "", "peek"], [130, 3, 1, "", "plot"], [130, 3, 1, "", "plot_err"], [130, 2, 1, "", "profile"], [130, 2, 1, "", "profile_err"], [130, 3, 1, "", "smooth"], [130, 2, 1, "", "x_max"], [130, 2, 1, "", "x_min"], [130, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "estimate_best_fit"], [132, 3, 1, "", "estimate_counts"], [132, 3, 1, "", "estimate_errn_errp"], [132, 3, 1, "", "estimate_flux_point"], [132, 3, 1, "", "estimate_npred"], [132, 3, 1, "", "estimate_npred_excess"], [132, 3, 1, "", "estimate_scan"], [132, 3, 1, "", "estimate_sensitivity"], [132, 3, 1, "", "estimate_time_bin_flux"], [132, 3, 1, "", "estimate_ts"], [132, 3, 1, "", "estimate_ul"], [132, 3, 1, "", "expand_map"], [132, 3, 1, "", "get_scale_model"], [132, 2, 1, "", "n_jobs"], [132, 2, 1, "", "parallel_backend"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[133, 2, 1, "", "config_parameters"], [133, 3, 1, "", "copy"], [133, 3, 1, "", "estimate_best_fit"], [133, 3, 1, "", "estimate_counts"], [133, 3, 1, "", "estimate_errn_errp"], [133, 3, 1, "", "estimate_npred"], [133, 3, 1, "", "estimate_scan"], [133, 3, 1, "", "estimate_sensitivity"], [133, 3, 1, "", "estimate_ts"], [133, 3, 1, "", "estimate_ul"], [133, 3, 1, "", "run"], [133, 2, 1, "", "selection_optional"], [133, 2, 1, "", "tag"]], "gammapy.estimators.ParameterSensitivityEstimator": [[134, 3, 1, "", "parameter_matching_significance"], [134, 3, 1, "", "run"], [134, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[135, 2, 1, "", "config_parameters"], [135, 3, 1, "", "copy"], [135, 3, 1, "", "estimate_min_e2dnde"], [135, 3, 1, "", "estimate_min_excess"], [135, 3, 1, "", "run"], [135, 2, 1, "", "selection_optional"], [135, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[136, 2, 1, "", "config_parameters"], [136, 3, 1, "", "copy"], [136, 3, 1, "", "estimate_fit_input_maps"], [136, 3, 1, "", "estimate_flux_default"], [136, 3, 1, "", "estimate_flux_map"], [136, 3, 1, "", "estimate_kernel"], [136, 3, 1, "", "estimate_mask_default"], [136, 3, 1, "", "estimate_pad_width"], [136, 2, 1, "", "n_jobs"], [136, 2, 1, "", "parallel_backend"], [136, 3, 1, "", "run"], [136, 2, 1, "", "selection_all"], [136, 2, 1, "", "selection_optional"], [136, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[137, 4, 1, "", "combine_flux_maps"], [138, 4, 1, "", "combine_significance_maps"], [139, 4, 1, "", "compute_lightcurve_discrete_correlation"], [140, 4, 1, "", "compute_lightcurve_doublingtime"], [141, 4, 1, "", "compute_lightcurve_fpp"], [142, 4, 1, "", "compute_lightcurve_fvar"], [143, 4, 1, "", "estimate_exposure_reco_energy"], [144, 4, 1, "", "find_peaks"], [145, 4, 1, "", "find_peaks_in_flux_map"], [146, 4, 1, "", "get_combined_flux_maps"], [147, 4, 1, "", "get_combined_significance_maps"], [148, 4, 1, "", "get_rebinned_axis"], [149, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[150, 1, 1, "", "Background2D"], [151, 1, 1, "", "Background3D"], [152, 1, 1, "", "BackgroundIRF"], [153, 1, 1, "", "EDispKernel"], [154, 1, 1, "", "EDispKernelMap"], [155, 1, 1, "", "EDispMap"], [156, 1, 1, "", "EffectiveAreaTable2D"], [157, 1, 1, "", "EnergyDependentMultiGaussPSF"], [158, 1, 1, "", "EnergyDispersion2D"], [159, 1, 1, "", "FoVAlignment"], [160, 1, 1, "", "IRF"], [161, 1, 1, "", "IRFMap"], [162, 5, 1, "", "IRF_REGISTRY"], [163, 1, 1, "", "PSF3D"], [164, 1, 1, "", "PSFKernel"], [165, 1, 1, "", "PSFKing"], [166, 1, 1, "", "PSFMap"], [167, 1, 1, "", "ParametricPSF"], [168, 1, 1, "", "RadMax2D"], [169, 1, 1, "", "RecoPSFMap"], [170, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 2, 1, "", "default_unit"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot"], [150, 3, 1, "", "plot_at_energy"], [150, 3, 1, "", "plot_energy_dependence"], [150, 3, 1, "", "plot_offset_dependence"], [150, 3, 1, "", "plot_spectrum"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_3d"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[151, 2, 1, "", "axes"], [151, 3, 1, "", "cumsum"], [151, 2, 1, "", "data"], [151, 2, 1, "", "default_interp_kwargs"], [151, 2, 1, "", "default_unit"], [151, 3, 1, "", "evaluate"], [151, 2, 1, "", "fov_alignment"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "from_table"], [151, 2, 1, "", "has_offset_axis"], [151, 3, 1, "", "integral"], [151, 3, 1, "", "integrate_log_log"], [151, 3, 1, "", "interp_missing_data"], [151, 3, 1, "", "is_allclose"], [151, 2, 1, "", "is_pointlike"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "pad"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "plot_at_energy"], [151, 2, 1, "", "quantity"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "slice_by_idx"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_2d"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_table"], [151, 3, 1, "", "to_table_hdu"], [151, 3, 1, "", "to_unit"], [151, 2, 1, "", "unit"], [151, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 3, 1, "", "evaluate"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[153, 2, 1, "", "axes"], [153, 3, 1, "", "cumsum"], [153, 2, 1, "", "data"], [153, 2, 1, "", "default_interp_kwargs"], [153, 3, 1, "", "evaluate"], [153, 2, 1, "", "fov_alignment"], [153, 3, 1, "", "from_diagonal_response"], [153, 3, 1, "", "from_gauss"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "from_table"], [153, 3, 1, "", "get_bias"], [153, 3, 1, "", "get_bias_energy"], [153, 3, 1, "", "get_mean"], [153, 3, 1, "", "get_resolution"], [153, 2, 1, "", "has_offset_axis"], [153, 3, 1, "", "integral"], [153, 3, 1, "", "integrate_log_log"], [153, 3, 1, "", "interp_missing_data"], [153, 3, 1, "", "is_allclose"], [153, 2, 1, "", "is_pointlike"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "pad"], [153, 3, 1, "", "pdf_in_safe_range"], [153, 2, 1, "", "pdf_matrix"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot_bias"], [153, 3, 1, "", "plot_matrix"], [153, 2, 1, "", "quantity"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "slice_by_idx"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_image"], [153, 3, 1, "", "to_table"], [153, 3, 1, "", "to_table_hdu"], [153, 3, 1, "", "to_unit"], [153, 2, 1, "", "unit"], [153, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[154, 3, 1, "", "copy"], [154, 3, 1, "", "cutout"], [154, 3, 1, "", "downsample"], [154, 2, 1, "", "edisp_map"], [154, 3, 1, "", "from_diagonal_response"], [154, 3, 1, "", "from_edisp_kernel"], [154, 3, 1, "", "from_gauss"], [154, 3, 1, "", "from_geom"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "get_edisp_kernel"], [154, 2, 1, "", "has_single_spatial_bin"], [154, 2, 1, "", "mask_safe_image"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "resample_energy_axis"], [154, 3, 1, "", "slice_by_idx"], [154, 3, 1, "", "stack"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_image"], [154, 3, 1, "", "to_region_nd_map"], [154, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[155, 3, 1, "", "copy"], [155, 3, 1, "", "cutout"], [155, 3, 1, "", "downsample"], [155, 2, 1, "", "edisp_map"], [155, 3, 1, "", "from_diagonal_response"], [155, 3, 1, "", "from_geom"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "get_edisp_kernel"], [155, 2, 1, "", "has_single_spatial_bin"], [155, 2, 1, "", "mask_safe_image"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "sample_coord"], [155, 3, 1, "", "slice_by_idx"], [155, 3, 1, "", "stack"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_edisp_kernel_map"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_region_nd_map"], [155, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[156, 2, 1, "", "axes"], [156, 3, 1, "", "cumsum"], [156, 2, 1, "", "data"], [156, 2, 1, "", "default_interp_kwargs"], [156, 2, 1, "", "default_unit"], [156, 3, 1, "", "evaluate"], [156, 2, 1, "", "fov_alignment"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "from_parametrization"], [156, 3, 1, "", "from_table"], [156, 2, 1, "", "has_offset_axis"], [156, 3, 1, "", "integral"], [156, 3, 1, "", "integrate_log_log"], [156, 3, 1, "", "interp_missing_data"], [156, 3, 1, "", "is_allclose"], [156, 2, 1, "", "is_pointlike"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "pad"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot"], [156, 3, 1, "", "plot_energy_dependence"], [156, 3, 1, "", "plot_offset_dependence"], [156, 2, 1, "", "quantity"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "slice_by_idx"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_table"], [156, 3, 1, "", "to_table_hdu"], [156, 3, 1, "", "to_unit"], [156, 2, 1, "", "unit"], [156, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "containment"], [157, 3, 1, "", "containment_radius"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 3, 1, "", "evaluate"], [157, 3, 1, "", "evaluate_containment"], [157, 3, 1, "", "evaluate_direct"], [157, 3, 1, "", "evaluate_parameters"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "info"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot_containment_radius"], [157, 3, 1, "", "plot_containment_radius_vs_energy"], [157, 3, 1, "", "plot_psf_vs_rad"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 2, 1, "", "required_parameters"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_psf3d"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[158, 2, 1, "", "axes"], [158, 3, 1, "", "cumsum"], [158, 2, 1, "", "data"], [158, 2, 1, "", "default_interp_kwargs"], [158, 2, 1, "", "default_unit"], [158, 3, 1, "", "evaluate"], [158, 2, 1, "", "fov_alignment"], [158, 3, 1, "", "from_gauss"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "from_table"], [158, 2, 1, "", "has_offset_axis"], [158, 3, 1, "", "integral"], [158, 3, 1, "", "integrate_log_log"], [158, 3, 1, "", "interp_missing_data"], [158, 3, 1, "", "is_allclose"], [158, 2, 1, "", "is_pointlike"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "pad"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_bias"], [158, 3, 1, "", "plot_migration"], [158, 2, 1, "", "quantity"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 3, 1, "", "slice_by_idx"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_edisp_kernel"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_table"], [158, 3, 1, "", "to_table_hdu"], [158, 3, 1, "", "to_unit"], [158, 2, 1, "", "unit"], [158, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[159, 2, 1, "", "ALTAZ"], [159, 2, 1, "", "RADEC"], [159, 2, 1, "", "REVERSE_LON_RADEC"]], "gammapy.irf.IRF": [[160, 2, 1, "", "axes"], [160, 3, 1, "", "cumsum"], [160, 2, 1, "", "data"], [160, 2, 1, "", "default_interp_kwargs"], [160, 3, 1, "", "evaluate"], [160, 2, 1, "", "fov_alignment"], [160, 3, 1, "", "from_hdulist"], [160, 3, 1, "", "from_table"], [160, 2, 1, "", "has_offset_axis"], [160, 3, 1, "", "integral"], [160, 3, 1, "", "integrate_log_log"], [160, 3, 1, "", "interp_missing_data"], [160, 3, 1, "", "is_allclose"], [160, 2, 1, "", "is_pointlike"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "pad"], [160, 2, 1, "", "quantity"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 3, 1, "", "slice_by_idx"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_table"], [160, 3, 1, "", "to_table_hdu"], [160, 3, 1, "", "to_unit"], [160, 2, 1, "", "unit"], [160, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[161, 3, 1, "", "copy"], [161, 3, 1, "", "cutout"], [161, 3, 1, "", "downsample"], [161, 3, 1, "", "from_hdulist"], [161, 2, 1, "", "has_single_spatial_bin"], [161, 2, 1, "", "mask_safe_image"], [161, 3, 1, "", "read"], [161, 2, 1, "", "required_axes"], [161, 3, 1, "", "slice_by_idx"], [161, 3, 1, "", "stack"], [161, 2, 1, "", "tag"], [161, 3, 1, "", "to_hdulist"], [161, 3, 1, "", "to_region_nd_map"], [161, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[163, 2, 1, "", "axes"], [163, 3, 1, "", "containment"], [163, 3, 1, "", "containment_radius"], [163, 3, 1, "", "cumsum"], [163, 2, 1, "", "data"], [163, 2, 1, "", "default_interp_kwargs"], [163, 2, 1, "", "default_unit"], [163, 3, 1, "", "evaluate"], [163, 2, 1, "", "fov_alignment"], [163, 3, 1, "", "from_hdulist"], [163, 3, 1, "", "from_table"], [163, 2, 1, "", "has_offset_axis"], [163, 3, 1, "", "info"], [163, 3, 1, "", "integral"], [163, 3, 1, "", "integrate_log_log"], [163, 3, 1, "", "interp_missing_data"], [163, 3, 1, "", "is_allclose"], [163, 2, 1, "", "is_pointlike"], [163, 3, 1, "", "normalize"], [163, 3, 1, "", "pad"], [163, 3, 1, "", "peek"], [163, 3, 1, "", "plot_containment_radius"], [163, 3, 1, "", "plot_containment_radius_vs_energy"], [163, 3, 1, "", "plot_psf_vs_rad"], [163, 2, 1, "", "quantity"], [163, 3, 1, "", "read"], [163, 2, 1, "", "required_axes"], [163, 3, 1, "", "slice_by_idx"], [163, 2, 1, "", "tag"], [163, 3, 1, "", "to_hdulist"], [163, 3, 1, "", "to_table"], [163, 3, 1, "", "to_table_hdu"], [163, 3, 1, "", "to_unit"], [163, 2, 1, "", "unit"], [163, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[164, 2, 1, "", "data"], [164, 3, 1, "", "from_gauss"], [164, 3, 1, "", "from_spatial_model"], [164, 3, 1, "", "normalize"], [164, 3, 1, "", "peek"], [164, 3, 1, "", "plot_kernel"], [164, 2, 1, "", "psf_kernel_map"], [164, 3, 1, "", "read"], [164, 3, 1, "", "slice_by_idx"], [164, 3, 1, "", "to_image"], [164, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[165, 2, 1, "", "axes"], [165, 3, 1, "", "containment"], [165, 3, 1, "", "containment_radius"], [165, 3, 1, "", "cumsum"], [165, 2, 1, "", "data"], [165, 2, 1, "", "default_interp_kwargs"], [165, 3, 1, "", "evaluate"], [165, 3, 1, "", "evaluate_containment"], [165, 3, 1, "", "evaluate_direct"], [165, 3, 1, "", "evaluate_parameters"], [165, 2, 1, "", "fov_alignment"], [165, 3, 1, "", "from_hdulist"], [165, 3, 1, "", "from_table"], [165, 2, 1, "", "has_offset_axis"], [165, 3, 1, "", "info"], [165, 3, 1, "", "integral"], [165, 3, 1, "", "integrate_log_log"], [165, 3, 1, "", "interp_missing_data"], [165, 3, 1, "", "is_allclose"], [165, 2, 1, "", "is_pointlike"], [165, 3, 1, "", "normalize"], [165, 3, 1, "", "pad"], [165, 3, 1, "", "peek"], [165, 3, 1, "", "plot_containment_radius"], [165, 3, 1, "", "plot_containment_radius_vs_energy"], [165, 3, 1, "", "plot_psf_vs_rad"], [165, 2, 1, "", "quantity"], [165, 3, 1, "", "read"], [165, 2, 1, "", "required_axes"], [165, 2, 1, "", "required_parameters"], [165, 3, 1, "", "slice_by_idx"], [165, 2, 1, "", "tag"], [165, 3, 1, "", "to_hdulist"], [165, 3, 1, "", "to_psf3d"], [165, 3, 1, "", "to_table"], [165, 3, 1, "", "to_table_hdu"], [165, 3, 1, "", "to_unit"], [165, 2, 1, "", "unit"], [165, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[166, 3, 1, "", "containment"], [166, 3, 1, "", "containment_radius"], [166, 3, 1, "", "containment_radius_map"], [166, 3, 1, "", "copy"], [166, 3, 1, "", "cutout"], [166, 3, 1, "", "downsample"], [166, 2, 1, "", "energy_name"], [166, 3, 1, "", "from_gauss"], [166, 3, 1, "", "from_geom"], [166, 3, 1, "", "from_hdulist"], [166, 3, 1, "", "get_psf_kernel"], [166, 2, 1, "", "has_single_spatial_bin"], [166, 2, 1, "", "mask_safe_image"], [166, 3, 1, "", "normalize"], [166, 3, 1, "", "peek"], [166, 3, 1, "", "plot_containment_radius_vs_energy"], [166, 3, 1, "", "plot_psf_vs_rad"], [166, 2, 1, "", "psf_map"], [166, 3, 1, "", "read"], [166, 2, 1, "", "required_axes"], [166, 3, 1, "", "sample_coord"], [166, 3, 1, "", "slice_by_idx"], [166, 3, 1, "", "stack"], [166, 2, 1, "", "tag"], [166, 3, 1, "", "to_hdulist"], [166, 3, 1, "", "to_image"], [166, 3, 1, "", "to_region_nd_map"], [166, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[167, 2, 1, "", "axes"], [167, 3, 1, "", "containment"], [167, 3, 1, "", "containment_radius"], [167, 3, 1, "", "cumsum"], [167, 2, 1, "", "data"], [167, 2, 1, "", "default_interp_kwargs"], [167, 3, 1, "", "evaluate"], [167, 3, 1, "", "evaluate_containment"], [167, 3, 1, "", "evaluate_direct"], [167, 3, 1, "", "evaluate_parameters"], [167, 2, 1, "", "fov_alignment"], [167, 3, 1, "", "from_hdulist"], [167, 3, 1, "", "from_table"], [167, 2, 1, "", "has_offset_axis"], [167, 3, 1, "", "info"], [167, 3, 1, "", "integral"], [167, 3, 1, "", "integrate_log_log"], [167, 3, 1, "", "interp_missing_data"], [167, 3, 1, "", "is_allclose"], [167, 2, 1, "", "is_pointlike"], [167, 3, 1, "", "normalize"], [167, 3, 1, "", "pad"], [167, 3, 1, "", "peek"], [167, 3, 1, "", "plot_containment_radius"], [167, 3, 1, "", "plot_containment_radius_vs_energy"], [167, 3, 1, "", "plot_psf_vs_rad"], [167, 2, 1, "", "quantity"], [167, 3, 1, "", "read"], [167, 2, 1, "", "required_axes"], [167, 2, 1, "", "required_parameters"], [167, 3, 1, "", "slice_by_idx"], [167, 2, 1, "", "tag"], [167, 3, 1, "", "to_hdulist"], [167, 3, 1, "", "to_psf3d"], [167, 3, 1, "", "to_table"], [167, 3, 1, "", "to_table_hdu"], [167, 3, 1, "", "to_unit"], [167, 2, 1, "", "unit"], [167, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[168, 2, 1, "", "axes"], [168, 3, 1, "", "cumsum"], [168, 2, 1, "", "data"], [168, 2, 1, "", "default_interp_kwargs"], [168, 2, 1, "", "default_unit"], [168, 3, 1, "", "evaluate"], [168, 2, 1, "", "fov_alignment"], [168, 3, 1, "", "from_hdulist"], [168, 3, 1, "", "from_irf"], [168, 3, 1, "", "from_table"], [168, 2, 1, "", "has_offset_axis"], [168, 3, 1, "", "integral"], [168, 3, 1, "", "integrate_log_log"], [168, 3, 1, "", "interp_missing_data"], [168, 3, 1, "", "is_allclose"], [168, 2, 1, "", "is_fixed_rad_max"], [168, 2, 1, "", "is_pointlike"], [168, 3, 1, "", "normalize"], [168, 3, 1, "", "pad"], [168, 3, 1, "", "plot_rad_max_vs_energy"], [168, 2, 1, "", "quantity"], [168, 3, 1, "", "read"], [168, 2, 1, "", "required_axes"], [168, 3, 1, "", "slice_by_idx"], [168, 2, 1, "", "tag"], [168, 3, 1, "", "to_hdulist"], [168, 3, 1, "", "to_table"], [168, 3, 1, "", "to_table_hdu"], [168, 3, 1, "", "to_unit"], [168, 2, 1, "", "unit"], [168, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[169, 3, 1, "", "containment"], [169, 3, 1, "", "containment_radius"], [169, 3, 1, "", "containment_radius_map"], [169, 3, 1, "", "copy"], [169, 3, 1, "", "cutout"], [169, 3, 1, "", "downsample"], [169, 2, 1, "", "energy_name"], [169, 3, 1, "", "from_gauss"], [169, 3, 1, "", "from_geom"], [169, 3, 1, "", "from_hdulist"], [169, 3, 1, "", "get_psf_kernel"], [169, 2, 1, "", "has_single_spatial_bin"], [169, 2, 1, "", "mask_safe_image"], [169, 3, 1, "", "normalize"], [169, 3, 1, "", "peek"], [169, 3, 1, "", "plot_containment_radius_vs_energy"], [169, 3, 1, "", "plot_psf_vs_rad"], [169, 2, 1, "", "psf_map"], [169, 3, 1, "", "read"], [169, 2, 1, "", "required_axes"], [169, 3, 1, "", "sample_coord"], [169, 3, 1, "", "slice_by_idx"], [169, 3, 1, "", "stack"], [169, 2, 1, "", "tag"], [169, 3, 1, "", "to_hdulist"], [169, 3, 1, "", "to_image"], [169, 3, 1, "", "to_region_nd_map"], [169, 3, 1, "", "write"]], "gammapy.makers": [[171, 1, 1, "", "AdaptiveRingBackgroundMaker"], [172, 1, 1, "", "DatasetsMaker"], [173, 1, 1, "", "FoVBackgroundMaker"], [174, 5, 1, "", "MAKER_REGISTRY"], [175, 1, 1, "", "Maker"], [176, 1, 1, "", "MapDatasetMaker"], [177, 1, 1, "", "PhaseBackgroundMaker"], [178, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [179, 1, 1, "", "ReflectedRegionsFinder"], [180, 1, 1, "", "RegionsFinder"], [181, 1, 1, "", "RingBackgroundMaker"], [182, 1, 1, "", "SafeMaskMaker"], [183, 1, 1, "", "SpectrumDatasetMaker"], [184, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[171, 3, 1, "", "kernels"], [171, 3, 1, "", "make_cubes"], [171, 3, 1, "", "run"], [171, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[172, 3, 1, "", "callback"], [172, 3, 1, "", "error_callback"], [172, 3, 1, "", "make_dataset"], [172, 2, 1, "", "n_jobs"], [172, 2, 1, "", "offset_max"], [172, 2, 1, "", "parallel_backend"], [172, 3, 1, "", "run"], [172, 2, 1, "", "safe_mask_maker"], [172, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[173, 2, 1, "", "available_methods"], [173, 3, 1, "", "make_background_fit"], [173, 3, 1, "", "make_background_scale"], [173, 3, 1, "", "make_default_fov_background_model"], [173, 3, 1, "", "make_exclusion_mask"], [173, 2, 1, "", "method"], [173, 3, 1, "", "run"], [173, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[175, 3, 1, "", "run"], [175, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[176, 2, 1, "", "available_selection"], [176, 3, 1, "", "make_background"], [176, 3, 1, "", "make_counts"], [176, 3, 1, "", "make_edisp"], [176, 3, 1, "", "make_edisp_kernel"], [176, 3, 1, "", "make_exposure"], [176, 3, 1, "", "make_exposure_irf"], [176, 3, 1, "", "make_meta_table"], [176, 3, 1, "", "make_psf"], [176, 3, 1, "", "run"], [176, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[177, 3, 1, "", "make_counts"], [177, 3, 1, "", "make_counts_off"], [177, 3, 1, "", "run"], [177, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[178, 3, 1, "", "make_counts_off"], [178, 3, 1, "", "run"], [178, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[179, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[180, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[181, 3, 1, "", "kernel"], [181, 3, 1, "", "make_maps_off"], [181, 3, 1, "", "run"], [181, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[182, 2, 1, "", "available_methods"], [182, 3, 1, "", "make_mask_bkg_invalid"], [182, 3, 1, "", "make_mask_energy_aeff_default"], [182, 3, 1, "", "make_mask_energy_aeff_max"], [182, 3, 1, "", "make_mask_energy_bkg_peak"], [182, 3, 1, "", "make_mask_energy_edisp_bias"], [182, 3, 1, "", "make_mask_offset_max"], [182, 3, 1, "", "run"], [182, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[183, 2, 1, "", "available_selection"], [183, 3, 1, "", "make_background"], [183, 3, 1, "", "make_counts"], [183, 3, 1, "", "make_edisp"], [183, 3, 1, "", "make_edisp_kernel"], [183, 3, 1, "", "make_exposure"], [183, 3, 1, "", "make_exposure_irf"], [183, 3, 1, "", "make_meta_table"], [183, 3, 1, "", "make_psf"], [183, 3, 1, "", "run"], [183, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[184, 3, 1, "", "run"]], "gammapy.makers.utils": [[185, 4, 1, "", "make_counts_rad_max"], [186, 4, 1, "", "make_edisp_kernel_map"], [187, 4, 1, "", "make_edisp_map"], [188, 4, 1, "", "make_effective_livetime_map"], [189, 4, 1, "", "make_map_background_irf"], [190, 4, 1, "", "make_map_exposure_true_energy"], [191, 4, 1, "", "make_observation_time_map"], [192, 4, 1, "", "make_psf_map"], [193, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[194, 1, 1, "", "Geom"], [195, 1, 1, "", "HpxGeom"], [196, 1, 1, "", "HpxMap"], [197, 1, 1, "", "HpxNDMap"], [198, 1, 1, "", "LabelMapAxis"], [199, 1, 1, "", "Map"], [200, 1, 1, "", "MapAxes"], [201, 1, 1, "", "MapAxis"], [202, 1, 1, "", "MapCoord"], [203, 1, 1, "", "Maps"], [204, 1, 1, "", "RegionGeom"], [205, 1, 1, "", "RegionNDMap"], [206, 1, 1, "", "TimeMapAxis"], [207, 1, 1, "", "WcsGeom"], [208, 1, 1, "", "WcsMap"], [209, 1, 1, "", "WcsNDMap"], [210, 4, 1, "", "containment_radius"], [211, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[194, 2, 1, "", "as_energy_true"], [194, 2, 1, "", "center_coord"], [194, 2, 1, "", "center_pix"], [194, 2, 1, "", "center_skydir"], [194, 3, 1, "", "contains"], [194, 3, 1, "", "contains_pix"], [194, 3, 1, "", "coord_to_idx"], [194, 3, 1, "", "coord_to_pix"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create_mask"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "data_nbytes"], [194, 2, 1, "", "data_shape"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "drop"], [194, 3, 1, "", "energy_mask"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "get_coord"], [194, 3, 1, "", "get_idx"], [194, 2, 1, "", "has_energy_axis"], [194, 2, 1, "", "is_allsky"], [194, 2, 1, "", "is_flat"], [194, 2, 1, "", "is_image"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "pix_to_coord"], [194, 3, 1, "", "pix_to_idx"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "replace_axis"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "solid_angle"], [194, 3, 1, "", "squash"], [194, 3, 1, "", "to_bands_hdu"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_image"], [194, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[195, 2, 1, "", "as_energy_true"], [195, 2, 1, "", "axes"], [195, 2, 1, "", "axes_names"], [195, 2, 1, "", "center_coord"], [195, 2, 1, "", "center_pix"], [195, 2, 1, "", "center_skydir"], [195, 3, 1, "", "contains"], [195, 3, 1, "", "contains_pix"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "create_mask"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "cutout"], [195, 3, 1, "", "data_nbytes"], [195, 2, 1, "", "data_shape"], [195, 2, 1, "", "data_shape_axes"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "drop"], [195, 3, 1, "", "energy_mask"], [195, 2, 1, "", "frame"], [195, 3, 1, "", "from_hdu"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_header"], [195, 3, 1, "", "get_coord"], [195, 3, 1, "", "get_idx"], [195, 3, 1, "", "get_index_list"], [195, 3, 1, "", "global_to_local"], [195, 2, 1, "", "has_energy_axis"], [195, 3, 1, "", "interp_weights"], [195, 2, 1, "", "ipix"], [195, 3, 1, "", "is_aligned"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_allsky"], [195, 2, 1, "", "is_flat"], [195, 2, 1, "", "is_hpx"], [195, 2, 1, "", "is_image"], [195, 2, 1, "", "is_region"], [195, 2, 1, "", "is_regular"], [195, 3, 1, "", "local_to_global"], [195, 2, 1, "", "ndim"], [195, 2, 1, "", "nest"], [195, 2, 1, "", "npix"], [195, 2, 1, "", "npix_max"], [195, 2, 1, "", "nside"], [195, 2, 1, "", "order"], [195, 2, 1, "", "ordering"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 2, 1, "", "pixel_scales"], [195, 2, 1, "", "projection"], [195, 2, 1, "", "region"], [195, 3, 1, "", "region_mask"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "replace_axis"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "separation"], [195, 2, 1, "", "shape_axes"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "solid_angle"], [195, 3, 1, "", "squash"], [195, 3, 1, "", "to_bands_hdu"], [195, 3, 1, "", "to_binsz"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_header"], [195, 3, 1, "", "to_image"], [195, 3, 1, "", "to_nside"], [195, 3, 1, "", "to_swapped"], [195, 3, 1, "", "to_wcs_geom"], [195, 3, 1, "", "to_wcs_tiles"], [195, 3, 1, "", "upsample"], [195, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[196, 3, 1, "", "coadd"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_interactive"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdu"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_swapped"], [196, 3, 1, "", "to_unit"], [196, 3, 1, "", "to_wcs"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[197, 3, 1, "", "coadd"], [197, 3, 1, "", "convolve"], [197, 3, 1, "", "convolve_full"], [197, 3, 1, "", "convolve_wcs"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "create"], [197, 3, 1, "", "crop"], [197, 3, 1, "", "cumsum"], [197, 3, 1, "", "cutout"], [197, 2, 1, "", "data"], [197, 3, 1, "", "dot"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "fill_by_coord"], [197, 3, 1, "", "fill_by_idx"], [197, 3, 1, "", "fill_by_pix"], [197, 3, 1, "", "fill_events"], [197, 3, 1, "", "from_geom"], [197, 3, 1, "", "from_hdu"], [197, 3, 1, "", "from_hdulist"], [197, 3, 1, "", "from_stack"], [197, 3, 1, "", "from_wcs_tiles"], [197, 2, 1, "", "geom"], [197, 3, 1, "", "get_by_coord"], [197, 3, 1, "", "get_by_idx"], [197, 3, 1, "", "get_by_pix"], [197, 3, 1, "", "get_image_by_coord"], [197, 3, 1, "", "get_image_by_idx"], [197, 3, 1, "", "get_image_by_pix"], [197, 3, 1, "", "get_spectrum"], [197, 3, 1, "", "integral"], [197, 3, 1, "", "interp_by_coord"], [197, 3, 1, "", "interp_by_pix"], [197, 3, 1, "", "interp_to_geom"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_mask"], [197, 3, 1, "", "iter_by_axis"], [197, 3, 1, "", "iter_by_image"], [197, 3, 1, "", "iter_by_image_data"], [197, 3, 1, "", "iter_by_image_index"], [197, 3, 1, "", "mask_nearest_position"], [197, 2, 1, "", "meta"], [197, 3, 1, "", "normalize"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "plot"], [197, 3, 1, "", "plot_grid"], [197, 3, 1, "", "plot_interactive"], [197, 3, 1, "", "plot_mask"], [197, 2, 1, "", "quantity"], [197, 3, 1, "", "read"], [197, 3, 1, "", "reduce"], [197, 3, 1, "", "reduce_over_axes"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "reorder_axes"], [197, 3, 1, "", "reproject_by_image"], [197, 3, 1, "", "reproject_to_geom"], [197, 3, 1, "", "resample"], [197, 3, 1, "", "resample_axis"], [197, 3, 1, "", "sample_coord"], [197, 3, 1, "", "set_by_coord"], [197, 3, 1, "", "set_by_idx"], [197, 3, 1, "", "set_by_pix"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "smooth"], [197, 3, 1, "", "split_by_axis"], [197, 3, 1, "", "stack"], [197, 3, 1, "", "sum_over_axes"], [197, 2, 1, "", "tag"], [197, 3, 1, "", "to_cube"], [197, 3, 1, "", "to_hdu"], [197, 3, 1, "", "to_hdulist"], [197, 3, 1, "", "to_nside"], [197, 3, 1, "", "to_region_nd_map"], [197, 3, 1, "", "to_swapped"], [197, 3, 1, "", "to_unit"], [197, 3, 1, "", "to_wcs"], [197, 3, 1, "", "to_wcs_tiles"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"], [197, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[198, 2, 1, "", "as_plot_center"], [198, 2, 1, "", "as_plot_edges"], [198, 2, 1, "", "as_plot_labels"], [198, 2, 1, "", "as_plot_xerr"], [198, 3, 1, "", "assert_name"], [198, 2, 1, "", "bin_width"], [198, 2, 1, "", "center"], [198, 3, 1, "", "concatenate"], [198, 3, 1, "", "coord_to_idx"], [198, 3, 1, "", "coord_to_pix"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "downsample"], [198, 2, 1, "", "edges"], [198, 2, 1, "", "edges_max"], [198, 2, 1, "", "edges_min"], [198, 3, 1, "", "format_plot_xaxis"], [198, 3, 1, "", "from_stack"], [198, 3, 1, "", "from_table"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "name"], [198, 2, 1, "", "nbin"], [198, 2, 1, "", "node_type"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "pix_to_coord"], [198, 3, 1, "", "pix_to_idx"], [198, 3, 1, "", "resample"], [198, 3, 1, "", "slice"], [198, 3, 1, "", "squash"], [198, 3, 1, "", "to_header"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[199, 3, 1, "", "coadd"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "create"], [199, 3, 1, "", "crop"], [199, 3, 1, "", "cumsum"], [199, 2, 1, "", "data"], [199, 3, 1, "", "dot"], [199, 3, 1, "", "downsample"], [199, 3, 1, "", "fill_by_coord"], [199, 3, 1, "", "fill_by_idx"], [199, 3, 1, "", "fill_by_pix"], [199, 3, 1, "", "fill_events"], [199, 3, 1, "", "from_geom"], [199, 3, 1, "", "from_hdulist"], [199, 3, 1, "", "from_stack"], [199, 2, 1, "", "geom"], [199, 3, 1, "", "get_by_coord"], [199, 3, 1, "", "get_by_idx"], [199, 3, 1, "", "get_by_pix"], [199, 3, 1, "", "get_image_by_coord"], [199, 3, 1, "", "get_image_by_idx"], [199, 3, 1, "", "get_image_by_pix"], [199, 3, 1, "", "get_spectrum"], [199, 3, 1, "", "integral"], [199, 3, 1, "", "interp_by_coord"], [199, 3, 1, "", "interp_by_pix"], [199, 3, 1, "", "interp_to_geom"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "is_mask"], [199, 3, 1, "", "iter_by_axis"], [199, 3, 1, "", "iter_by_image"], [199, 3, 1, "", "iter_by_image_data"], [199, 3, 1, "", "iter_by_image_index"], [199, 3, 1, "", "mask_nearest_position"], [199, 2, 1, "", "meta"], [199, 3, 1, "", "normalize"], [199, 3, 1, "", "pad"], [199, 3, 1, "", "plot_grid"], [199, 3, 1, "", "plot_interactive"], [199, 2, 1, "", "quantity"], [199, 3, 1, "", "read"], [199, 3, 1, "", "reduce"], [199, 3, 1, "", "reduce_over_axes"], [199, 3, 1, "", "rename_axes"], [199, 3, 1, "", "reorder_axes"], [199, 3, 1, "", "reproject_by_image"], [199, 3, 1, "", "reproject_to_geom"], [199, 3, 1, "", "resample"], [199, 3, 1, "", "resample_axis"], [199, 3, 1, "", "sample_coord"], [199, 3, 1, "", "set_by_coord"], [199, 3, 1, "", "set_by_idx"], [199, 3, 1, "", "set_by_pix"], [199, 3, 1, "", "slice_by_idx"], [199, 3, 1, "", "split_by_axis"], [199, 3, 1, "", "sum_over_axes"], [199, 2, 1, "", "tag"], [199, 3, 1, "", "to_cube"], [199, 3, 1, "", "to_unit"], [199, 2, 1, "", "unit"], [199, 3, 1, "", "upsample"], [199, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[200, 3, 1, "", "assert_names"], [200, 3, 1, "", "bin_volume"], [200, 2, 1, "", "center_coord"], [200, 3, 1, "", "coord_to_idx"], [200, 3, 1, "", "coord_to_pix"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "count"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "drop"], [200, 3, 1, "", "from_default"], [200, 3, 1, "", "from_table"], [200, 3, 1, "", "from_table_hdu"], [200, 3, 1, "", "get_coord"], [200, 3, 1, "", "index"], [200, 3, 1, "", "index_data"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_flat"], [200, 2, 1, "", "is_unidimensional"], [200, 2, 1, "", "iter_with_reshape"], [200, 2, 1, "", "names"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "pix_to_coord"], [200, 3, 1, "", "pix_to_idx"], [200, 2, 1, "", "primary_axis"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "replace"], [200, 3, 1, "", "resample"], [200, 2, 1, "", "reverse"], [200, 2, 1, "", "shape"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "squash"], [200, 3, 1, "", "to_header"], [200, 3, 1, "", "to_table"], [200, 3, 1, "", "to_table_hdu"], [200, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[201, 2, 1, "", "as_plot_center"], [201, 2, 1, "", "as_plot_edges"], [201, 2, 1, "", "as_plot_labels"], [201, 2, 1, "", "as_plot_scale"], [201, 2, 1, "", "as_plot_xerr"], [201, 3, 1, "", "assert_name"], [201, 2, 1, "", "bin_width"], [201, 2, 1, "", "bounds"], [201, 2, 1, "", "center"], [201, 3, 1, "", "concatenate"], [201, 3, 1, "", "coord_to_idx"], [201, 3, 1, "", "coord_to_pix"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "downsample"], [201, 2, 1, "", "edges"], [201, 2, 1, "", "edges_max"], [201, 2, 1, "", "edges_min"], [201, 3, 1, "", "format_plot_xaxis"], [201, 3, 1, "", "format_plot_yaxis"], [201, 3, 1, "", "from_bounds"], [201, 3, 1, "", "from_edges"], [201, 3, 1, "", "from_energy_bounds"], [201, 3, 1, "", "from_energy_edges"], [201, 3, 1, "", "from_nodes"], [201, 3, 1, "", "from_stack"], [201, 3, 1, "", "from_table"], [201, 3, 1, "", "from_table_hdu"], [201, 3, 1, "", "group_table"], [201, 2, 1, "", "interp"], [201, 3, 1, "", "is_aligned"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_energy_axis"], [201, 2, 1, "", "iter_by_edges"], [201, 2, 1, "", "name"], [201, 2, 1, "", "nbin"], [201, 2, 1, "", "nbin_per_decade"], [201, 2, 1, "", "node_type"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "pix_to_coord"], [201, 3, 1, "", "pix_to_idx"], [201, 3, 1, "", "rename"], [201, 3, 1, "", "round"], [201, 3, 1, "", "slice"], [201, 3, 1, "", "squash"], [201, 3, 1, "", "to_header"], [201, 3, 1, "", "to_node_type"], [201, 3, 1, "", "to_table"], [201, 3, 1, "", "to_table_hdu"], [201, 2, 1, "", "unit"], [201, 3, 1, "", "upsample"], [201, 2, 1, "", "use_center_as_plot_labels"], [201, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[202, 3, 1, "", "apply_mask"], [202, 2, 1, "", "axis_names"], [202, 2, 1, "", "broadcasted"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "create"], [202, 2, 1, "", "flat"], [202, 2, 1, "", "frame"], [202, 2, 1, "", "lat"], [202, 2, 1, "", "lon"], [202, 2, 1, "", "match_by_name"], [202, 2, 1, "", "ndim"], [202, 2, 1, "", "phi"], [202, 2, 1, "", "shape"], [202, 2, 1, "", "size"], [202, 2, 1, "", "skycoord"], [202, 2, 1, "", "theta"], [202, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[203, 3, 1, "", "clear"], [203, 3, 1, "", "from_geom"], [203, 3, 1, "", "from_hdulist"], [203, 2, 1, "", "geom"], [203, 3, 1, "", "get"], [203, 3, 1, "", "items"], [203, 3, 1, "", "keys"], [203, 3, 1, "", "pop"], [203, 3, 1, "", "popitem"], [203, 3, 1, "", "read"], [203, 3, 1, "", "setdefault"], [203, 3, 1, "", "to_hdulist"], [203, 3, 1, "", "update"], [203, 3, 1, "", "values"], [203, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[204, 2, 1, "", "as_energy_true"], [204, 2, 1, "", "axes"], [204, 2, 1, "", "axes_names"], [204, 3, 1, "", "bin_volume"], [204, 2, 1, "", "binsz_wcs"], [204, 2, 1, "", "center_coord"], [204, 2, 1, "", "center_pix"], [204, 2, 1, "", "center_skydir"], [204, 3, 1, "", "contains"], [204, 3, 1, "", "contains_pix"], [204, 3, 1, "", "contains_wcs_pix"], [204, 3, 1, "", "coord_to_idx"], [204, 3, 1, "", "coord_to_pix"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "create"], [204, 3, 1, "", "create_mask"], [204, 3, 1, "", "crop"], [204, 3, 1, "", "data_nbytes"], [204, 2, 1, "", "data_shape"], [204, 2, 1, "", "data_shape_axes"], [204, 3, 1, "", "downsample"], [204, 3, 1, "", "drop"], [204, 3, 1, "", "energy_mask"], [204, 2, 1, "", "frame"], [204, 3, 1, "", "from_hdulist"], [204, 3, 1, "", "from_regions"], [204, 3, 1, "", "get_coord"], [204, 3, 1, "", "get_idx"], [204, 3, 1, "", "get_wcs_coord_and_weights"], [204, 2, 1, "", "has_energy_axis"], [204, 2, 1, "", "is_all_point_sky_regions"], [204, 3, 1, "", "is_allclose"], [204, 2, 1, "", "is_allsky"], [204, 2, 1, "", "is_flat"], [204, 2, 1, "", "is_hpx"], [204, 2, 1, "", "is_image"], [204, 2, 1, "", "is_region"], [204, 2, 1, "", "is_regular"], [204, 2, 1, "", "npix"], [204, 3, 1, "", "pad"], [204, 3, 1, "", "pix_to_coord"], [204, 3, 1, "", "pix_to_idx"], [204, 3, 1, "", "plot_region"], [204, 2, 1, "", "projection"], [204, 2, 1, "", "region"], [204, 3, 1, "", "rename_axes"], [204, 3, 1, "", "replace_axis"], [204, 3, 1, "", "resample_axis"], [204, 3, 1, "", "separation"], [204, 3, 1, "", "slice_by_idx"], [204, 3, 1, "", "solid_angle"], [204, 3, 1, "", "squash"], [204, 3, 1, "", "to_bands_hdu"], [204, 3, 1, "", "to_binsz"], [204, 3, 1, "", "to_binsz_wcs"], [204, 3, 1, "", "to_cube"], [204, 3, 1, "", "to_hdulist"], [204, 3, 1, "", "to_image"], [204, 3, 1, "", "to_wcs_geom"], [204, 3, 1, "", "union"], [204, 3, 1, "", "upsample"], [204, 2, 1, "", "wcs"], [204, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[205, 3, 1, "", "coadd"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "create"], [205, 3, 1, "", "crop"], [205, 3, 1, "", "cumsum"], [205, 3, 1, "", "cutout"], [205, 2, 1, "", "data"], [205, 3, 1, "", "dot"], [205, 3, 1, "", "downsample"], [205, 3, 1, "", "fill_by_coord"], [205, 3, 1, "", "fill_by_idx"], [205, 3, 1, "", "fill_by_pix"], [205, 3, 1, "", "fill_events"], [205, 3, 1, "", "from_geom"], [205, 3, 1, "", "from_hdulist"], [205, 3, 1, "", "from_stack"], [205, 3, 1, "", "from_table"], [205, 2, 1, "", "geom"], [205, 3, 1, "", "get_by_coord"], [205, 3, 1, "", "get_by_idx"], [205, 3, 1, "", "get_by_pix"], [205, 3, 1, "", "get_image_by_coord"], [205, 3, 1, "", "get_image_by_idx"], [205, 3, 1, "", "get_image_by_pix"], [205, 3, 1, "", "get_spectrum"], [205, 3, 1, "", "integral"], [205, 3, 1, "", "interp_by_coord"], [205, 3, 1, "", "interp_by_pix"], [205, 3, 1, "", "interp_to_geom"], [205, 3, 1, "", "is_allclose"], [205, 2, 1, "", "is_mask"], [205, 3, 1, "", "iter_by_axis"], [205, 3, 1, "", "iter_by_axis_data"], [205, 3, 1, "", "iter_by_image"], [205, 3, 1, "", "iter_by_image_data"], [205, 3, 1, "", "iter_by_image_index"], [205, 3, 1, "", "mask_nearest_position"], [205, 2, 1, "", "meta"], [205, 3, 1, "", "normalize"], [205, 3, 1, "", "pad"], [205, 3, 1, "", "plot"], [205, 3, 1, "", "plot_grid"], [205, 3, 1, "", "plot_hist"], [205, 3, 1, "", "plot_interactive"], [205, 3, 1, "", "plot_mask"], [205, 3, 1, "", "plot_region"], [205, 2, 1, "", "quantity"], [205, 3, 1, "", "read"], [205, 3, 1, "", "reduce"], [205, 3, 1, "", "reduce_over_axes"], [205, 3, 1, "", "rename_axes"], [205, 3, 1, "", "reorder_axes"], [205, 3, 1, "", "reproject_by_image"], [205, 3, 1, "", "reproject_to_geom"], [205, 3, 1, "", "resample"], [205, 3, 1, "", "resample_axis"], [205, 3, 1, "", "sample_coord"], [205, 3, 1, "", "set_by_coord"], [205, 3, 1, "", "set_by_idx"], [205, 3, 1, "", "set_by_pix"], [205, 3, 1, "", "slice_by_idx"], [205, 3, 1, "", "split_by_axis"], [205, 3, 1, "", "stack"], [205, 3, 1, "", "sum_over_axes"], [205, 2, 1, "", "tag"], [205, 3, 1, "", "to_cube"], [205, 3, 1, "", "to_hdulist"], [205, 3, 1, "", "to_region_nd_map"], [205, 3, 1, "", "to_table"], [205, 3, 1, "", "to_unit"], [205, 2, 1, "", "unit"], [205, 3, 1, "", "upsample"], [205, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[206, 2, 1, "", "as_plot_center"], [206, 2, 1, "", "as_plot_edges"], [206, 2, 1, "", "as_plot_labels"], [206, 2, 1, "", "as_plot_xerr"], [206, 3, 1, "", "assert_name"], [206, 2, 1, "", "bin_width"], [206, 2, 1, "", "bounds"], [206, 2, 1, "", "center"], [206, 3, 1, "", "coord_to_idx"], [206, 3, 1, "", "coord_to_pix"], [206, 3, 1, "", "copy"], [206, 3, 1, "", "downsample"], [206, 2, 1, "", "edges"], [206, 2, 1, "", "edges_max"], [206, 2, 1, "", "edges_min"], [206, 3, 1, "", "format_plot_xaxis"], [206, 3, 1, "", "from_gti"], [206, 3, 1, "", "from_gti_bounds"], [206, 3, 1, "", "from_table"], [206, 3, 1, "", "from_time_bounds"], [206, 3, 1, "", "from_time_edges"], [206, 3, 1, "", "group_table"], [206, 2, 1, "", "interp"], [206, 3, 1, "", "is_aligned"], [206, 3, 1, "", "is_allclose"], [206, 2, 1, "", "is_contiguous"], [206, 2, 1, "", "iter_by_edges"], [206, 2, 1, "", "name"], [206, 2, 1, "", "nbin"], [206, 2, 1, "", "node_type"], [206, 3, 1, "", "pix_to_coord"], [206, 3, 1, "", "pix_to_idx"], [206, 2, 1, "", "reference_time"], [206, 3, 1, "", "slice"], [206, 3, 1, "", "squash"], [206, 2, 1, "", "time_bounds"], [206, 2, 1, "", "time_delta"], [206, 2, 1, "", "time_edges"], [206, 2, 1, "", "time_format"], [206, 2, 1, "", "time_max"], [206, 2, 1, "", "time_mid"], [206, 2, 1, "", "time_min"], [206, 3, 1, "", "to_contiguous"], [206, 3, 1, "", "to_gti"], [206, 3, 1, "", "to_header"], [206, 3, 1, "", "to_table"], [206, 2, 1, "", "unit"], [206, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[207, 2, 1, "", "as_energy_true"], [207, 2, 1, "", "axes"], [207, 2, 1, "", "axes_names"], [207, 3, 1, "", "bin_volume"], [207, 3, 1, "", "binary_structure"], [207, 3, 1, "", "boundary_mask"], [207, 2, 1, "", "center_coord"], [207, 2, 1, "", "center_pix"], [207, 2, 1, "", "center_skydir"], [207, 3, 1, "", "contains"], [207, 3, 1, "", "contains_pix"], [207, 3, 1, "", "coord_to_idx"], [207, 3, 1, "", "coord_to_pix"], [207, 3, 1, "", "copy"], [207, 3, 1, "", "create"], [207, 3, 1, "", "create_mask"], [207, 3, 1, "", "crop"], [207, 3, 1, "", "cutout"], [207, 3, 1, "", "cutout_slices"], [207, 3, 1, "", "data_nbytes"], [207, 2, 1, "", "data_shape"], [207, 2, 1, "", "data_shape_axes"], [207, 2, 1, "", "data_shape_image"], [207, 3, 1, "", "downsample"], [207, 3, 1, "", "drop"], [207, 3, 1, "", "energy_mask"], [207, 2, 1, "", "footprint"], [207, 2, 1, "", "footprint_rectangle_sky_region"], [207, 2, 1, "", "frame"], [207, 3, 1, "", "from_aligned"], [207, 3, 1, "", "from_hdulist"], [207, 3, 1, "", "from_header"], [207, 3, 1, "", "get_coord"], [207, 3, 1, "", "get_idx"], [207, 3, 1, "", "get_pix"], [207, 2, 1, "", "has_energy_axis"], [207, 3, 1, "", "is_aligned"], [207, 3, 1, "", "is_allclose"], [207, 2, 1, "", "is_allsky"], [207, 2, 1, "", "is_flat"], [207, 2, 1, "", "is_hpx"], [207, 2, 1, "", "is_image"], [207, 2, 1, "", "is_region"], [207, 2, 1, "", "is_regular"], [207, 2, 1, "", "ndim"], [207, 2, 1, "", "npix"], [207, 3, 1, "", "pad"], [207, 3, 1, "", "pix_to_coord"], [207, 3, 1, "", "pix_to_idx"], [207, 2, 1, "", "pixel_area"], [207, 2, 1, "", "pixel_scales"], [207, 2, 1, "", "projection"], [207, 3, 1, "", "region_mask"], [207, 3, 1, "", "region_weights"], [207, 3, 1, "", "rename_axes"], [207, 3, 1, "", "replace_axis"], [207, 3, 1, "", "resample_axis"], [207, 3, 1, "", "separation"], [207, 2, 1, "", "shape_axes"], [207, 3, 1, "", "slice_by_idx"], [207, 3, 1, "", "solid_angle"], [207, 3, 1, "", "squash"], [207, 3, 1, "", "to_bands_hdu"], [207, 3, 1, "", "to_binsz"], [207, 3, 1, "", "to_cube"], [207, 3, 1, "", "to_even_npix"], [207, 3, 1, "", "to_header"], [207, 3, 1, "", "to_image"], [207, 3, 1, "", "to_odd_npix"], [207, 3, 1, "", "upsample"], [207, 2, 1, "", "wcs"], [207, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[208, 3, 1, "", "coadd"], [208, 3, 1, "", "copy"], [208, 3, 1, "", "create"], [208, 3, 1, "", "crop"], [208, 3, 1, "", "cumsum"], [208, 2, 1, "", "data"], [208, 3, 1, "", "dot"], [208, 3, 1, "", "downsample"], [208, 3, 1, "", "fill_by_coord"], [208, 3, 1, "", "fill_by_idx"], [208, 3, 1, "", "fill_by_pix"], [208, 3, 1, "", "fill_events"], [208, 3, 1, "", "from_geom"], [208, 3, 1, "", "from_hdulist"], [208, 3, 1, "", "from_stack"], [208, 2, 1, "", "geom"], [208, 3, 1, "", "get_by_coord"], [208, 3, 1, "", "get_by_idx"], [208, 3, 1, "", "get_by_pix"], [208, 3, 1, "", "get_image_by_coord"], [208, 3, 1, "", "get_image_by_idx"], [208, 3, 1, "", "get_image_by_pix"], [208, 3, 1, "", "get_spectrum"], [208, 3, 1, "", "integral"], [208, 3, 1, "", "interp_by_coord"], [208, 3, 1, "", "interp_by_pix"], [208, 3, 1, "", "interp_to_geom"], [208, 3, 1, "", "is_allclose"], [208, 2, 1, "", "is_mask"], [208, 3, 1, "", "iter_by_axis"], [208, 3, 1, "", "iter_by_image"], [208, 3, 1, "", "iter_by_image_data"], [208, 3, 1, "", "iter_by_image_index"], [208, 3, 1, "", "mask_nearest_position"], [208, 2, 1, "", "meta"], [208, 3, 1, "", "normalize"], [208, 3, 1, "", "pad"], [208, 3, 1, "", "plot_grid"], [208, 3, 1, "", "plot_interactive"], [208, 2, 1, "", "quantity"], [208, 3, 1, "", "read"], [208, 3, 1, "", "reduce"], [208, 3, 1, "", "reduce_over_axes"], [208, 3, 1, "", "rename_axes"], [208, 3, 1, "", "reorder_axes"], [208, 3, 1, "", "reproject_by_image"], [208, 3, 1, "", "reproject_to_geom"], [208, 3, 1, "", "resample"], [208, 3, 1, "", "resample_axis"], [208, 3, 1, "", "sample_coord"], [208, 3, 1, "", "set_by_coord"], [208, 3, 1, "", "set_by_idx"], [208, 3, 1, "", "set_by_pix"], [208, 3, 1, "", "slice_by_idx"], [208, 3, 1, "", "split_by_axis"], [208, 3, 1, "", "sum_over_axes"], [208, 2, 1, "", "tag"], [208, 3, 1, "", "to_cube"], [208, 3, 1, "", "to_hdu"], [208, 3, 1, "", "to_hdulist"], [208, 3, 1, "", "to_unit"], [208, 2, 1, "", "unit"], [208, 3, 1, "", "upsample"], [208, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[209, 3, 1, "", "binary_dilate"], [209, 3, 1, "", "binary_erode"], [209, 3, 1, "", "coadd"], [209, 3, 1, "", "convolve"], [209, 3, 1, "", "copy"], [209, 3, 1, "", "create"], [209, 3, 1, "", "crop"], [209, 3, 1, "", "cumsum"], [209, 3, 1, "", "cutout"], [209, 3, 1, "", "cutout_and_mask_region"], [209, 2, 1, "", "data"], [209, 3, 1, "", "dot"], [209, 3, 1, "", "downsample"], [209, 3, 1, "", "fill_by_coord"], [209, 3, 1, "", "fill_by_idx"], [209, 3, 1, "", "fill_by_pix"], [209, 3, 1, "", "fill_events"], [209, 3, 1, "", "from_geom"], [209, 3, 1, "", "from_hdu"], [209, 3, 1, "", "from_hdulist"], [209, 3, 1, "", "from_stack"], [209, 2, 1, "", "geom"], [209, 3, 1, "", "get_by_coord"], [209, 3, 1, "", "get_by_idx"], [209, 3, 1, "", "get_by_pix"], [209, 3, 1, "", "get_image_by_coord"], [209, 3, 1, "", "get_image_by_idx"], [209, 3, 1, "", "get_image_by_pix"], [209, 3, 1, "", "get_spectrum"], [209, 3, 1, "", "integral"], [209, 3, 1, "", "interp_by_coord"], [209, 3, 1, "", "interp_by_pix"], [209, 3, 1, "", "interp_to_geom"], [209, 3, 1, "", "is_allclose"], [209, 2, 1, "", "is_mask"], [209, 3, 1, "", "iter_by_axis"], [209, 3, 1, "", "iter_by_image"], [209, 3, 1, "", "iter_by_image_data"], [209, 3, 1, "", "iter_by_image_index"], [209, 3, 1, "", "mask_contains_region"], [209, 3, 1, "", "mask_nearest_position"], [209, 2, 1, "", "meta"], [209, 3, 1, "", "normalize"], [209, 3, 1, "", "pad"], [209, 3, 1, "", "plot"], [209, 3, 1, "", "plot_grid"], [209, 3, 1, "", "plot_interactive"], [209, 3, 1, "", "plot_mask"], [209, 2, 1, "", "quantity"], [209, 3, 1, "", "read"], [209, 3, 1, "", "reduce"], [209, 3, 1, "", "reduce_over_axes"], [209, 3, 1, "", "rename_axes"], [209, 3, 1, "", "reorder_axes"], [209, 3, 1, "", "reproject_by_image"], [209, 3, 1, "", "reproject_to_geom"], [209, 3, 1, "", "resample"], [209, 3, 1, "", "resample_axis"], [209, 3, 1, "", "sample_coord"], [209, 3, 1, "", "set_by_coord"], [209, 3, 1, "", "set_by_idx"], [209, 3, 1, "", "set_by_pix"], [209, 3, 1, "", "slice_by_idx"], [209, 3, 1, "", "smooth"], [209, 3, 1, "", "split_by_axis"], [209, 3, 1, "", "stack"], [209, 3, 1, "", "sum_over_axes"], [209, 2, 1, "", "tag"], [209, 3, 1, "", "to_cube"], [209, 3, 1, "", "to_hdu"], [209, 3, 1, "", "to_hdulist"], [209, 3, 1, "", "to_region_nd_map"], [209, 3, 1, "", "to_region_nd_map_histogram"], [209, 3, 1, "", "to_unit"], [209, 2, 1, "", "unit"], [209, 3, 1, "", "upsample"], [209, 3, 1, "", "write"]], "gammapy.modeling": [[212, 1, 1, "", "Covariance"], [213, 1, 1, "", "CovarianceResult"], [214, 1, 1, "", "Fit"], [215, 1, 1, "", "FitResult"], [216, 1, 1, "", "OptimizeResult"], [217, 1, 1, "", "Parameter"], [218, 1, 1, "", "Parameters"], [219, 1, 1, "", "PriorParameter"], [220, 1, 1, "", "PriorParameters"], [221, 1, 1, "", "Sampler"], [222, 1, 1, "", "SamplerResult"], [10, 0, 0, "-", "models"], [292, 4, 1, "", "select_nested_models"], [293, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[212, 2, 1, "", "correlation"], [212, 2, 1, "", "data"], [212, 3, 1, "", "from_factor_matrix"], [212, 3, 1, "", "from_stack"], [212, 3, 1, "", "get_subcovariance"], [212, 3, 1, "", "plot_correlation"], [212, 2, 1, "", "scipy_mvn"], [212, 3, 1, "", "set_subcovariance"], [212, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[213, 2, 1, "", "backend"], [213, 2, 1, "", "matrix"], [213, 2, 1, "", "message"], [213, 2, 1, "", "method"], [213, 2, 1, "", "success"], [213, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[214, 3, 1, "", "confidence"], [214, 3, 1, "", "covariance"], [214, 3, 1, "", "optimize"], [214, 3, 1, "", "run"], [214, 3, 1, "", "stat_contour"], [214, 3, 1, "", "stat_profile"], [214, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[215, 2, 1, "", "backend"], [215, 2, 1, "", "covariance_result"], [215, 2, 1, "", "message"], [215, 2, 1, "", "method"], [215, 2, 1, "", "minuit"], [215, 2, 1, "", "models"], [215, 2, 1, "", "nfev"], [215, 2, 1, "", "optimize_result"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "success"], [215, 2, 1, "", "total_stat"], [215, 2, 1, "", "trace"], [215, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[216, 2, 1, "", "backend"], [216, 2, 1, "", "message"], [216, 2, 1, "", "method"], [216, 2, 1, "", "minuit"], [216, 2, 1, "", "models"], [216, 2, 1, "", "nfev"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "success"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "total_stat"], [216, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[217, 3, 1, "", "autoscale"], [217, 3, 1, "", "check_limits"], [217, 2, 1, "", "conf_max"], [217, 2, 1, "", "conf_min"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "error"], [217, 2, 1, "", "factor"], [217, 2, 1, "", "factor_max"], [217, 2, 1, "", "factor_min"], [217, 2, 1, "", "frozen"], [217, 3, 1, "", "inverse_transform"], [217, 2, 1, "", "max"], [217, 2, 1, "", "min"], [217, 2, 1, "", "name"], [217, 2, 1, "", "prior"], [217, 3, 1, "", "prior_stat_sum"], [217, 2, 1, "", "quantity"], [217, 3, 1, "", "reset_autoscale"], [217, 2, 1, "", "scale"], [217, 2, 1, "", "scale_method"], [217, 2, 1, "", "scale_transform"], [217, 2, 1, "", "scan_max"], [217, 2, 1, "", "scan_min"], [217, 2, 1, "", "scan_n_sigma"], [217, 2, 1, "", "scan_values"], [217, 3, 1, "", "set_lim"], [217, 3, 1, "", "to_dict"], [217, 3, 1, "", "transform"], [217, 2, 1, "", "type"], [217, 2, 1, "", "unit"], [217, 3, 1, "", "update_from_dict"], [217, 3, 1, "", "update_scale"], [217, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[218, 3, 1, "", "autoscale"], [218, 3, 1, "", "check_limits"], [218, 3, 1, "", "copy"], [218, 3, 1, "", "count"], [218, 2, 1, "", "free_parameters"], [218, 3, 1, "", "freeze_all"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_stack"], [218, 3, 1, "", "index"], [218, 2, 1, "", "max"], [218, 2, 1, "", "min"], [218, 2, 1, "", "names"], [218, 2, 1, "", "prior"], [218, 3, 1, "", "prior_stat_sum"], [218, 3, 1, "", "restore_status"], [218, 3, 1, "", "select"], [218, 3, 1, "", "set_parameter_factors"], [218, 3, 1, "", "to_dict"], [218, 3, 1, "", "to_table"], [218, 2, 1, "", "types"], [218, 3, 1, "", "unfreeze_all"], [218, 2, 1, "", "unique_parameters"], [218, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[219, 3, 1, "", "autoscale"], [219, 3, 1, "", "check_limits"], [219, 2, 1, "", "conf_max"], [219, 2, 1, "", "conf_min"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "error"], [219, 2, 1, "", "factor"], [219, 2, 1, "", "factor_max"], [219, 2, 1, "", "factor_min"], [219, 2, 1, "", "frozen"], [219, 3, 1, "", "inverse_transform"], [219, 2, 1, "", "max"], [219, 2, 1, "", "min"], [219, 2, 1, "", "name"], [219, 2, 1, "", "prior"], [219, 3, 1, "", "prior_stat_sum"], [219, 2, 1, "", "quantity"], [219, 3, 1, "", "reset_autoscale"], [219, 2, 1, "", "scale"], [219, 2, 1, "", "scale_method"], [219, 2, 1, "", "scale_transform"], [219, 2, 1, "", "scan_max"], [219, 2, 1, "", "scan_min"], [219, 2, 1, "", "scan_n_sigma"], [219, 2, 1, "", "scan_values"], [219, 3, 1, "", "set_lim"], [219, 3, 1, "", "to_dict"], [219, 3, 1, "", "transform"], [219, 2, 1, "", "type"], [219, 2, 1, "", "unit"], [219, 3, 1, "", "update_from_dict"], [219, 3, 1, "", "update_scale"], [219, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[220, 3, 1, "", "autoscale"], [220, 3, 1, "", "check_limits"], [220, 3, 1, "", "copy"], [220, 3, 1, "", "count"], [220, 2, 1, "", "free_parameters"], [220, 3, 1, "", "freeze_all"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_stack"], [220, 3, 1, "", "index"], [220, 2, 1, "", "max"], [220, 2, 1, "", "min"], [220, 2, 1, "", "names"], [220, 2, 1, "", "prior"], [220, 3, 1, "", "prior_stat_sum"], [220, 3, 1, "", "restore_status"], [220, 3, 1, "", "select"], [220, 3, 1, "", "set_parameter_factors"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_table"], [220, 2, 1, "", "types"], [220, 3, 1, "", "unfreeze_all"], [220, 2, 1, "", "unique_parameters"], [220, 2, 1, "", "value"]], "gammapy.modeling.Sampler": [[221, 3, 1, "", "run"], [221, 3, 1, "", "sampler_ultranest"]], "gammapy.modeling.SamplerResult": [[222, 3, 1, "", "from_ultranest"]], "gammapy.modeling.models": [[223, 1, 1, "", "BrokenPowerLawSpectralModel"], [224, 1, 1, "", "CompoundSpectralModel"], [225, 1, 1, "", "ConstantFluxSpatialModel"], [226, 1, 1, "", "ConstantSpatialModel"], [227, 1, 1, "", "ConstantSpectralModel"], [228, 1, 1, "", "ConstantTemporalModel"], [229, 1, 1, "", "DatasetModels"], [230, 1, 1, "", "DiskSpatialModel"], [231, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [232, 5, 1, "", "EBL_DATA_BUILTIN"], [233, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [234, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [235, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [236, 1, 1, "", "ExpDecayTemporalModel"], [237, 1, 1, "", "FoVBackgroundModel"], [238, 1, 1, "", "GaussianPrior"], [239, 1, 1, "", "GaussianSpatialModel"], [240, 1, 1, "", "GaussianSpectralModel"], [241, 1, 1, "", "GaussianTemporalModel"], [242, 1, 1, "", "GeneralizedGaussianSpatialModel"], [243, 1, 1, "", "GeneralizedGaussianTemporalModel"], [244, 1, 1, "", "LightCurveTemplateTemporalModel"], [245, 1, 1, "", "LinearTemporalModel"], [246, 1, 1, "", "LogParabolaNormSpectralModel"], [247, 1, 1, "", "LogParabolaSpectralModel"], [248, 1, 1, "", "LogUniformPrior"], [249, 5, 1, "", "MODEL_REGISTRY"], [250, 1, 1, "", "MeyerCrabSpectralModel"], [251, 1, 1, "", "Model"], [252, 1, 1, "", "ModelBase"], [253, 1, 1, "", "Models"], [254, 1, 1, "", "NaimaSpectralModel"], [255, 1, 1, "", "PiecewiseNormSpatialModel"], [256, 1, 1, "", "PiecewiseNormSpectralModel"], [257, 1, 1, "", "PointSpatialModel"], [258, 1, 1, "", "PowerLaw2SpectralModel"], [259, 1, 1, "", "PowerLawNormSpectralModel"], [260, 1, 1, "", "PowerLawSpectralModel"], [261, 1, 1, "", "PowerLawTemporalModel"], [262, 1, 1, "", "Prior"], [263, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [264, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [265, 1, 1, "", "ScaleSpectralModel"], [266, 1, 1, "", "Shell2SpatialModel"], [267, 1, 1, "", "ShellSpatialModel"], [268, 1, 1, "", "SineTemporalModel"], [269, 1, 1, "", "SkyModel"], [270, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [271, 1, 1, "", "SpatialModel"], [272, 1, 1, "", "SpectralModel"], [273, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [274, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [275, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [276, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [277, 1, 1, "", "TemplateNDSpatialModel"], [278, 1, 1, "", "TemplateNDSpectralModel"], [279, 1, 1, "", "TemplateNPredModel"], [280, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [281, 1, 1, "", "TemplateSpatialModel"], [282, 1, 1, "", "TemplateSpectralModel"], [283, 1, 1, "", "TemporalModel"], [284, 1, 1, "", "UniformPrior"], [285, 4, 1, "", "create_cosmic_ray_spectral_model"], [286, 4, 1, "", "create_crab_spectral_model"], [287, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [288, 4, 1, "", "integrate_spectrum"], [289, 4, 1, "", "read_hermes_cube"], [290, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[223, 3, 1, "", "__call__"], [223, 2, 1, "", "amplitude"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 2, 1, "", "ebreak"], [223, 3, 1, "", "energy_flux"], [223, 3, 1, "", "energy_flux_error"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_error"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 2, 1, "", "frozen"], [223, 2, 1, "", "index1"], [223, 2, 1, "", "index2"], [223, 3, 1, "", "integral"], [223, 3, 1, "", "integral_error"], [223, 3, 1, "", "inverse"], [223, 3, 1, "", "inverse_all"], [223, 2, 1, "", "is_norm_spectral_model"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 2, 1, "", "pivot_energy"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "reassign"], [223, 3, 1, "", "reference_fluxes"], [223, 3, 1, "", "spectral_index"], [223, 3, 1, "", "spectral_index_error"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[224, 3, 1, "", "__call__"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 3, 1, "", "energy_flux"], [224, 3, 1, "", "energy_flux_error"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_error"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "integral"], [224, 3, 1, "", "integral_error"], [224, 3, 1, "", "inverse"], [224, 3, 1, "", "inverse_all"], [224, 2, 1, "", "is_norm_spectral_model"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "pivot_energy"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "reassign"], [224, 3, 1, "", "reference_fluxes"], [224, 3, 1, "", "spectral_index"], [224, 3, 1, "", "spectral_index_error"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_geom"], [225, 2, 1, "", "evaluation_bin_size_min"], [225, 2, 1, "", "evaluation_radius"], [225, 2, 1, "", "evaluation_region"], [225, 2, 1, "", "frame"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 3, 1, "", "from_position"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integrate_geom"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "phi_0"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "plot_grid"], [225, 3, 1, "", "plot_interactive"], [225, 3, 1, "", "plot_position_error"], [225, 2, 1, "", "position"], [225, 2, 1, "", "position_error"], [225, 2, 1, "", "position_lonlat"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 3, 1, "", "to_region"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[226, 3, 1, "", "__call__"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_geom"], [226, 2, 1, "", "evaluation_bin_size_min"], [226, 2, 1, "", "evaluation_radius"], [226, 2, 1, "", "evaluation_region"], [226, 2, 1, "", "frame"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 3, 1, "", "from_position"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integrate_geom"], [226, 2, 1, "", "is_energy_dependent"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 2, 1, "", "phi_0"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "plot_error"], [226, 3, 1, "", "plot_grid"], [226, 3, 1, "", "plot_interactive"], [226, 3, 1, "", "plot_position_error"], [226, 2, 1, "", "position"], [226, 2, 1, "", "position_error"], [226, 2, 1, "", "position_lonlat"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 3, 1, "", "to_region"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"], [226, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[227, 3, 1, "", "__call__"], [227, 2, 1, "", "const"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 3, 1, "", "energy_flux"], [227, 3, 1, "", "energy_flux_error"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "evaluate_error"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integral"], [227, 3, 1, "", "integral_error"], [227, 3, 1, "", "inverse"], [227, 3, 1, "", "inverse_all"], [227, 2, 1, "", "is_norm_spectral_model"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 2, 1, "", "pivot_energy"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "plot_error"], [227, 3, 1, "", "reassign"], [227, 3, 1, "", "reference_fluxes"], [227, 3, 1, "", "spectral_index"], [227, 3, 1, "", "spectral_index_error"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "to_dict"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[228, 3, 1, "", "__call__"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integral"], [228, 2, 1, "", "is_energy_dependent"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "reference_time"], [228, 3, 1, "", "sample_time"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "time_sum"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[229, 2, 1, "", "background_models"], [229, 3, 1, "", "copy"], [229, 3, 1, "", "count"], [229, 2, 1, "", "covariance"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_yaml"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "index"], [229, 2, 1, "", "names"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 3, 1, "", "plot_positions"], [229, 3, 1, "", "plot_regions"], [229, 2, 1, "", "positions"], [229, 3, 1, "", "read"], [229, 3, 1, "", "read_covariance"], [229, 3, 1, "", "reassign"], [229, 3, 1, "", "restore_status"], [229, 3, 1, "", "select"], [229, 3, 1, "", "select_from_geom"], [229, 3, 1, "", "select_mask"], [229, 3, 1, "", "select_region"], [229, 3, 1, "", "selection_mask"], [229, 3, 1, "", "set_parameters_bounds"], [229, 3, 1, "", "to_dict"], [229, 3, 1, "", "to_parameters_table"], [229, 3, 1, "", "to_regions"], [229, 3, 1, "", "to_template_sky_model"], [229, 3, 1, "", "to_template_spectral_model"], [229, 3, 1, "", "to_yaml"], [229, 3, 1, "", "unfreeze"], [229, 3, 1, "", "update_link_label"], [229, 3, 1, "", "update_parameters_from_table"], [229, 2, 1, "", "wcs_geom"], [229, 3, 1, "", "write"], [229, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[230, 3, 1, "", "__call__"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 2, 1, "", "e"], [230, 2, 1, "", "edge_width"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_geom"], [230, 2, 1, "", "evaluation_bin_size_min"], [230, 2, 1, "", "evaluation_radius"], [230, 2, 1, "", "evaluation_region"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 3, 1, "", "from_position"], [230, 3, 1, "", "from_region"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integrate_geom"], [230, 2, 1, "", "is_energy_dependent"], [230, 2, 1, "", "lat_0"], [230, 2, 1, "", "lon_0"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 2, 1, "", "phi"], [230, 2, 1, "", "phi_0"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "plot_grid"], [230, 3, 1, "", "plot_interactive"], [230, 3, 1, "", "plot_position_error"], [230, 2, 1, "", "position"], [230, 2, 1, "", "position_error"], [230, 2, 1, "", "position_lonlat"], [230, 2, 1, "", "r_0"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "to_dict"], [230, 3, 1, "", "to_region"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[231, 3, 1, "", "__call__"], [231, 2, 1, "", "alpha_norm"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 3, 1, "", "energy_flux"], [231, 3, 1, "", "energy_flux_error"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "evaluate_error"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integral"], [231, 3, 1, "", "integral_error"], [231, 3, 1, "", "inverse"], [231, 3, 1, "", "inverse_all"], [231, 2, 1, "", "is_norm_spectral_model"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 2, 1, "", "pivot_energy"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "plot_error"], [231, 3, 1, "", "read"], [231, 3, 1, "", "read_builtin"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "redshift"], [231, 3, 1, "", "reference_fluxes"], [231, 3, 1, "", "spectral_index"], [231, 3, 1, "", "spectral_index_error"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[233, 3, 1, "", "__call__"], [233, 2, 1, "", "amplitude"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 2, 1, "", "ecut"], [233, 3, 1, "", "energy_flux"], [233, 3, 1, "", "energy_flux_error"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "evaluate_error"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 2, 1, "", "index"], [233, 3, 1, "", "integral"], [233, 3, 1, "", "integral_error"], [233, 3, 1, "", "inverse"], [233, 3, 1, "", "inverse_all"], [233, 2, 1, "", "is_norm_spectral_model"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 2, 1, "", "pivot_energy"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "plot_error"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference"], [233, 3, 1, "", "reference_fluxes"], [233, 3, 1, "", "spectral_index"], [233, 3, 1, "", "spectral_index_error"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[234, 3, 1, "", "__call__"], [234, 2, 1, "", "alpha"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "energy_flux"], [234, 3, 1, "", "energy_flux_error"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_error"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 2, 1, "", "index"], [234, 3, 1, "", "integral"], [234, 3, 1, "", "integral_error"], [234, 3, 1, "", "inverse"], [234, 3, 1, "", "inverse_all"], [234, 2, 1, "", "is_norm_spectral_model"], [234, 2, 1, "", "lambda_"], [234, 2, 1, "", "norm"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 2, 1, "", "pivot_energy"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "plot_error"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference"], [234, 3, 1, "", "reference_fluxes"], [234, 3, 1, "", "spectral_index"], [234, 3, 1, "", "spectral_index_error"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "alpha"], [235, 2, 1, "", "amplitude"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 2, 1, "", "e_peak"], [235, 3, 1, "", "energy_flux"], [235, 3, 1, "", "energy_flux_error"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_error"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 2, 1, "", "index"], [235, 3, 1, "", "integral"], [235, 3, 1, "", "integral_error"], [235, 3, 1, "", "inverse"], [235, 3, 1, "", "inverse_all"], [235, 2, 1, "", "is_norm_spectral_model"], [235, 2, 1, "", "lambda_"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 2, 1, "", "pivot_energy"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "reference"], [235, 3, 1, "", "reference_fluxes"], [235, 3, 1, "", "spectral_index"], [235, 3, 1, "", "spectral_index_error"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[236, 3, 1, "", "__call__"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "integral"], [236, 2, 1, "", "is_energy_dependent"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "reference_time"], [236, 3, 1, "", "sample_time"], [236, 2, 1, "", "t0"], [236, 2, 1, "", "t_ref"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "time_sum"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[237, 3, 1, "", "contributes"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "evaluate_geom"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 2, 1, "", "name"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 3, 1, "", "reassign"], [237, 3, 1, "", "reset_to_default"], [237, 2, 1, "", "spatial_model"], [237, 2, 1, "", "spectral_model"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianPrior": [[238, 3, 1, "", "__call__"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 2, 1, "", "mu"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 3, 1, "", "reassign"], [238, 2, 1, "", "sigma"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"], [238, 2, 1, "", "weight"]], "gammapy.modeling.models.GaussianSpatialModel": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 2, 1, "", "e"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "evaluate_geom"], [239, 2, 1, "", "evaluation_bin_size_min"], [239, 2, 1, "", "evaluation_radius"], [239, 2, 1, "", "evaluation_region"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 3, 1, "", "from_position"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integrate_geom"], [239, 2, 1, "", "is_energy_dependent"], [239, 2, 1, "", "lat_0"], [239, 2, 1, "", "lon_0"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 2, 1, "", "phi"], [239, 2, 1, "", "phi_0"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "plot_error"], [239, 3, 1, "", "plot_grid"], [239, 3, 1, "", "plot_interactive"], [239, 3, 1, "", "plot_position_error"], [239, 2, 1, "", "position"], [239, 2, 1, "", "position_error"], [239, 2, 1, "", "position_lonlat"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "sigma"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "to_dict"], [239, 3, 1, "", "to_region"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[240, 3, 1, "", "__call__"], [240, 2, 1, "", "amplitude"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 3, 1, "", "energy_flux"], [240, 3, 1, "", "energy_flux_error"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "evaluate_error"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integral"], [240, 3, 1, "", "integral_error"], [240, 3, 1, "", "inverse"], [240, 3, 1, "", "inverse_all"], [240, 2, 1, "", "is_norm_spectral_model"], [240, 2, 1, "", "mean"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 2, 1, "", "pivot_energy"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "reassign"], [240, 3, 1, "", "reference_fluxes"], [240, 2, 1, "", "sigma"], [240, 3, 1, "", "spectral_index"], [240, 3, 1, "", "spectral_index_error"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[241, 3, 1, "", "__call__"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 2, 1, "", "is_energy_dependent"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "reassign"], [241, 2, 1, "", "reference_time"], [241, 3, 1, "", "sample_time"], [241, 2, 1, "", "sigma"], [241, 2, 1, "", "t_ref"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "time_sum"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[242, 3, 1, "", "__call__"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 2, 1, "", "e"], [242, 2, 1, "", "eta"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "evaluate_geom"], [242, 2, 1, "", "evaluation_bin_size_min"], [242, 2, 1, "", "evaluation_radius"], [242, 2, 1, "", "evaluation_region"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 3, 1, "", "from_position"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integrate_geom"], [242, 2, 1, "", "is_energy_dependent"], [242, 2, 1, "", "lat_0"], [242, 2, 1, "", "lon_0"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 2, 1, "", "phi"], [242, 2, 1, "", "phi_0"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "plot_error"], [242, 3, 1, "", "plot_grid"], [242, 3, 1, "", "plot_interactive"], [242, 3, 1, "", "plot_position_error"], [242, 2, 1, "", "position"], [242, 2, 1, "", "position_error"], [242, 2, 1, "", "position_lonlat"], [242, 2, 1, "", "r_0"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "to_dict"], [242, 3, 1, "", "to_region"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[243, 3, 1, "", "__call__"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 2, 1, "", "eta"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integral"], [243, 2, 1, "", "is_energy_dependent"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "reassign"], [243, 2, 1, "", "reference_time"], [243, 3, 1, "", "sample_time"], [243, 2, 1, "", "t_decay"], [243, 2, 1, "", "t_ref"], [243, 2, 1, "", "t_rise"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "time_sum"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[244, 3, 1, "", "__call__"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 3, 1, "", "from_table"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 2, 1, "", "is_energy_dependent"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "read"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "reference_time"], [244, 3, 1, "", "sample_time"], [244, 2, 1, "", "t_ref"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "time_sum"], [244, 3, 1, "", "to_dict"], [244, 3, 1, "", "to_table"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"], [244, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[245, 3, 1, "", "__call__"], [245, 2, 1, "", "alpha"], [245, 2, 1, "", "beta"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integral"], [245, 2, 1, "", "is_energy_dependent"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "reference_time"], [245, 3, 1, "", "sample_time"], [245, 2, 1, "", "t_ref"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "time_sum"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[246, 3, 1, "", "__call__"], [246, 2, 1, "", "alpha"], [246, 2, 1, "", "beta"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "energy_flux"], [246, 3, 1, "", "energy_flux_error"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "evaluate_error"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_log10"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "integral"], [246, 3, 1, "", "integral_error"], [246, 3, 1, "", "inverse"], [246, 3, 1, "", "inverse_all"], [246, 2, 1, "", "is_norm_spectral_model"], [246, 2, 1, "", "norm"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 2, 1, "", "pivot_energy"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "plot_error"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "reference"], [246, 3, 1, "", "reference_fluxes"], [246, 3, 1, "", "spectral_index"], [246, 3, 1, "", "spectral_index_error"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[247, 3, 1, "", "__call__"], [247, 2, 1, "", "alpha"], [247, 2, 1, "", "amplitude"], [247, 2, 1, "", "beta"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 2, 1, "", "e_peak"], [247, 3, 1, "", "energy_flux"], [247, 3, 1, "", "energy_flux_error"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_error"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_log10"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 3, 1, "", "integral"], [247, 3, 1, "", "integral_error"], [247, 3, 1, "", "inverse"], [247, 3, 1, "", "inverse_all"], [247, 2, 1, "", "is_norm_spectral_model"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 2, 1, "", "pivot_energy"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "reassign"], [247, 2, 1, "", "reference"], [247, 3, 1, "", "reference_fluxes"], [247, 3, 1, "", "spectral_index"], [247, 3, 1, "", "spectral_index_error"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogUniformPrior": [[248, 3, 1, "", "__call__"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 2, 1, "", "max"], [248, 2, 1, "", "min"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "tag"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"], [248, 2, 1, "", "weight"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[250, 3, 1, "", "__call__"], [250, 2, 1, "", "coefficients"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 3, 1, "", "energy_flux"], [250, 3, 1, "", "energy_flux_error"], [250, 3, 1, "", "evaluate"], [250, 3, 1, "", "evaluate_error"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 2, 1, "", "frozen"], [250, 3, 1, "", "integral"], [250, 3, 1, "", "integral_error"], [250, 3, 1, "", "inverse"], [250, 3, 1, "", "inverse_all"], [250, 2, 1, "", "is_norm_spectral_model"], [250, 2, 1, "", "norm"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "parameters_unique_names"], [250, 2, 1, "", "pivot_energy"], [250, 3, 1, "", "plot"], [250, 3, 1, "", "plot_error"], [250, 3, 1, "", "reassign"], [250, 3, 1, "", "reference_fluxes"], [250, 3, 1, "", "spectral_index"], [250, 3, 1, "", "spectral_index_error"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[251, 3, 1, "", "create"], [251, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 2, 1, "", "frozen"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 3, 1, "", "reassign"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[253, 3, 1, "", "append"], [253, 2, 1, "", "background_models"], [253, 3, 1, "", "clear"], [253, 3, 1, "", "copy"], [253, 3, 1, "", "count"], [253, 2, 1, "", "covariance"], [253, 3, 1, "", "extend"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_yaml"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "index"], [253, 3, 1, "", "insert"], [253, 2, 1, "", "names"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 3, 1, "", "plot_positions"], [253, 3, 1, "", "plot_regions"], [253, 3, 1, "", "pop"], [253, 2, 1, "", "positions"], [253, 3, 1, "", "read"], [253, 3, 1, "", "read_covariance"], [253, 3, 1, "", "reassign"], [253, 3, 1, "", "remove"], [253, 3, 1, "", "restore_status"], [253, 3, 1, "", "reverse"], [253, 3, 1, "", "select"], [253, 3, 1, "", "select_from_geom"], [253, 3, 1, "", "select_mask"], [253, 3, 1, "", "select_region"], [253, 3, 1, "", "selection_mask"], [253, 3, 1, "", "set_parameters_bounds"], [253, 3, 1, "", "set_prior"], [253, 3, 1, "", "to_dict"], [253, 3, 1, "", "to_parameters_table"], [253, 3, 1, "", "to_regions"], [253, 3, 1, "", "to_template_sky_model"], [253, 3, 1, "", "to_template_spectral_model"], [253, 3, 1, "", "to_yaml"], [253, 3, 1, "", "unfreeze"], [253, 3, 1, "", "update_link_label"], [253, 3, 1, "", "update_parameters_from_table"], [253, 2, 1, "", "wcs_geom"], [253, 3, 1, "", "write"], [253, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[254, 3, 1, "", "__call__"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "energy_flux"], [254, 3, 1, "", "energy_flux_error"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_error"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 2, 1, "", "include_ssc"], [254, 3, 1, "", "integral"], [254, 3, 1, "", "integral_error"], [254, 3, 1, "", "inverse"], [254, 3, 1, "", "inverse_all"], [254, 2, 1, "", "is_norm_spectral_model"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 2, 1, "", "particle_distribution"], [254, 2, 1, "", "pivot_energy"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "reassign"], [254, 3, 1, "", "reference_fluxes"], [254, 3, 1, "", "spectral_index"], [254, 3, 1, "", "spectral_index_error"], [254, 2, 1, "", "ssc_model"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[255, 3, 1, "", "__call__"], [255, 2, 1, "", "coords"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_geom"], [255, 2, 1, "", "evaluation_bin_size_min"], [255, 2, 1, "", "evaluation_radius"], [255, 2, 1, "", "evaluation_region"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 3, 1, "", "from_position"], [255, 2, 1, "", "frozen"], [255, 3, 1, "", "integrate_geom"], [255, 2, 1, "", "is_energy_dependent"], [255, 2, 1, "", "norms"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "phi_0"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "plot_grid"], [255, 3, 1, "", "plot_interactive"], [255, 3, 1, "", "plot_position_error"], [255, 2, 1, "", "position"], [255, 2, 1, "", "position_error"], [255, 2, 1, "", "position_lonlat"], [255, 3, 1, "", "reassign"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[256, 3, 1, "", "__call__"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 2, 1, "", "energy"], [256, 3, 1, "", "energy_flux"], [256, 3, 1, "", "energy_flux_error"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_error"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integral"], [256, 3, 1, "", "integral_error"], [256, 3, 1, "", "inverse"], [256, 3, 1, "", "inverse_all"], [256, 2, 1, "", "is_norm_spectral_model"], [256, 2, 1, "", "norms"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 2, 1, "", "pivot_energy"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "reassign"], [256, 3, 1, "", "reference_fluxes"], [256, 3, 1, "", "spectral_index"], [256, 3, 1, "", "spectral_index_error"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "evaluate_geom"], [257, 2, 1, "", "evaluation_bin_size_min"], [257, 2, 1, "", "evaluation_radius"], [257, 2, 1, "", "evaluation_region"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 3, 1, "", "from_position"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integrate_geom"], [257, 2, 1, "", "is_energy_dependent"], [257, 2, 1, "", "lat_0"], [257, 2, 1, "", "lon_0"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "phi_0"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "plot_grid"], [257, 3, 1, "", "plot_interactive"], [257, 3, 1, "", "plot_position_error"], [257, 2, 1, "", "position"], [257, 2, 1, "", "position_error"], [257, 2, 1, "", "position_lonlat"], [257, 3, 1, "", "reassign"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "to_dict"], [257, 3, 1, "", "to_region"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[258, 3, 1, "", "__call__"], [258, 2, 1, "", "amplitude"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 2, 1, "", "emax"], [258, 2, 1, "", "emin"], [258, 3, 1, "", "energy_flux"], [258, 3, 1, "", "energy_flux_error"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "evaluate_error"], [258, 3, 1, "", "evaluate_integral"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 2, 1, "", "index"], [258, 3, 1, "", "integral"], [258, 3, 1, "", "integral_error"], [258, 3, 1, "", "inverse"], [258, 3, 1, "", "inverse_all"], [258, 2, 1, "", "is_norm_spectral_model"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "pivot_energy"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "reassign"], [258, 3, 1, "", "reference_fluxes"], [258, 3, 1, "", "spectral_index"], [258, 3, 1, "", "spectral_index_error"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[259, 3, 1, "", "__call__"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "energy_flux"], [259, 3, 1, "", "energy_flux_error"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_energy_flux"], [259, 3, 1, "", "evaluate_error"], [259, 3, 1, "", "evaluate_integral"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 3, 1, "", "integral"], [259, 3, 1, "", "integral_error"], [259, 3, 1, "", "inverse"], [259, 3, 1, "", "inverse_all"], [259, 2, 1, "", "is_norm_spectral_model"], [259, 2, 1, "", "norm"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 2, 1, "", "pivot_energy"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference"], [259, 3, 1, "", "reference_fluxes"], [259, 3, 1, "", "spectral_index"], [259, 3, 1, "", "spectral_index_error"], [259, 2, 1, "", "tag"], [259, 2, 1, "", "tilt"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[260, 3, 1, "", "__call__"], [260, 2, 1, "", "amplitude"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "energy_flux"], [260, 3, 1, "", "energy_flux_error"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "evaluate_energy_flux"], [260, 3, 1, "", "evaluate_error"], [260, 3, 1, "", "evaluate_integral"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 2, 1, "", "index"], [260, 3, 1, "", "integral"], [260, 3, 1, "", "integral_error"], [260, 3, 1, "", "inverse"], [260, 3, 1, "", "inverse_all"], [260, 2, 1, "", "is_norm_spectral_model"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 2, 1, "", "pivot_energy"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "reassign"], [260, 2, 1, "", "reference"], [260, 3, 1, "", "reference_fluxes"], [260, 3, 1, "", "spectral_index"], [260, 3, 1, "", "spectral_index_error"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[261, 3, 1, "", "__call__"], [261, 2, 1, "", "alpha"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 3, 1, "", "integral"], [261, 2, 1, "", "is_energy_dependent"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "reassign"], [261, 2, 1, "", "reference_time"], [261, 3, 1, "", "sample_time"], [261, 2, 1, "", "t0"], [261, 2, 1, "", "t_ref"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "time_sum"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[262, 3, 1, "", "__call__"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "parameters_unique_names"], [262, 3, 1, "", "reassign"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"], [262, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[265, 3, 1, "", "__call__"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 3, 1, "", "energy_flux"], [265, 3, 1, "", "energy_flux_error"], [265, 3, 1, "", "evaluate"], [265, 3, 1, "", "evaluate_error"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 2, 1, "", "frozen"], [265, 3, 1, "", "integral"], [265, 3, 1, "", "integral_error"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "inverse_all"], [265, 2, 1, "", "is_norm_spectral_model"], [265, 2, 1, "", "norm"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "pivot_energy"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "plot_error"], [265, 3, 1, "", "reassign"], [265, 3, 1, "", "reference_fluxes"], [265, 3, 1, "", "spectral_index"], [265, 3, 1, "", "spectral_index_error"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 2, 1, "", "eta"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "evaluate_geom"], [266, 2, 1, "", "evaluation_bin_size_min"], [266, 2, 1, "", "evaluation_radius"], [266, 2, 1, "", "evaluation_region"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 3, 1, "", "from_position"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integrate_geom"], [266, 2, 1, "", "is_energy_dependent"], [266, 2, 1, "", "lat_0"], [266, 2, 1, "", "lon_0"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "phi_0"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_error"], [266, 3, 1, "", "plot_grid"], [266, 3, 1, "", "plot_interactive"], [266, 3, 1, "", "plot_position_error"], [266, 2, 1, "", "position"], [266, 2, 1, "", "position_error"], [266, 2, 1, "", "position_lonlat"], [266, 2, 1, "", "r_0"], [266, 2, 1, "", "r_in"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "to_dict"], [266, 3, 1, "", "to_region"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[267, 3, 1, "", "__call__"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_geom"], [267, 2, 1, "", "evaluation_bin_size_min"], [267, 2, 1, "", "evaluation_radius"], [267, 2, 1, "", "evaluation_region"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 3, 1, "", "from_position"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integrate_geom"], [267, 2, 1, "", "is_energy_dependent"], [267, 2, 1, "", "lat_0"], [267, 2, 1, "", "lon_0"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "phi_0"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "plot_error"], [267, 3, 1, "", "plot_grid"], [267, 3, 1, "", "plot_interactive"], [267, 3, 1, "", "plot_position_error"], [267, 2, 1, "", "position"], [267, 2, 1, "", "position_error"], [267, 2, 1, "", "position_lonlat"], [267, 2, 1, "", "radius"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "to_dict"], [267, 3, 1, "", "to_region"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"], [267, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[268, 3, 1, "", "__call__"], [268, 2, 1, "", "amp"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 3, 1, "", "evaluate"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 2, 1, "", "frozen"], [268, 3, 1, "", "integral"], [268, 2, 1, "", "is_energy_dependent"], [268, 2, 1, "", "omega"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "reassign"], [268, 2, 1, "", "reference_time"], [268, 3, 1, "", "sample_time"], [268, 2, 1, "", "t_ref"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "time_sum"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[269, 3, 1, "", "__call__"], [269, 3, 1, "", "contributes"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 3, 1, "", "create"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "evaluate"], [269, 3, 1, "", "evaluate_geom"], [269, 2, 1, "", "evaluation_bin_size_min"], [269, 2, 1, "", "evaluation_radius"], [269, 2, 1, "", "evaluation_region"], [269, 2, 1, "", "frame"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integrate_geom"], [269, 2, 1, "", "name"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 2, 1, "", "position"], [269, 2, 1, "", "position_lonlat"], [269, 3, 1, "", "reassign"], [269, 2, 1, "", "spatial_model"], [269, 2, 1, "", "spectral_model"], [269, 2, 1, "", "tag"], [269, 2, 1, "", "temporal_model"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[270, 3, 1, "", "__call__"], [270, 2, 1, "", "amplitude"], [270, 2, 1, "", "beta"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 2, 1, "", "ebreak"], [270, 3, 1, "", "energy_flux"], [270, 3, 1, "", "energy_flux_error"], [270, 3, 1, "", "evaluate"], [270, 3, 1, "", "evaluate_error"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 2, 1, "", "frozen"], [270, 2, 1, "", "index1"], [270, 2, 1, "", "index2"], [270, 3, 1, "", "integral"], [270, 3, 1, "", "integral_error"], [270, 3, 1, "", "inverse"], [270, 3, 1, "", "inverse_all"], [270, 2, 1, "", "is_norm_spectral_model"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "pivot_energy"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "reassign"], [270, 2, 1, "", "reference"], [270, 3, 1, "", "reference_fluxes"], [270, 3, 1, "", "spectral_index"], [270, 3, 1, "", "spectral_index_error"], [270, 2, 1, "", "tag"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[271, 3, 1, "", "__call__"], [271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 2, 1, "", "default_parameters"], [271, 3, 1, "", "evaluate_geom"], [271, 2, 1, "", "evaluation_bin_size_min"], [271, 2, 1, "", "evaluation_radius"], [271, 2, 1, "", "evaluation_region"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 3, 1, "", "from_position"], [271, 2, 1, "", "frozen"], [271, 3, 1, "", "integrate_geom"], [271, 2, 1, "", "is_energy_dependent"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 2, 1, "", "phi_0"], [271, 3, 1, "", "plot"], [271, 3, 1, "", "plot_error"], [271, 3, 1, "", "plot_grid"], [271, 3, 1, "", "plot_interactive"], [271, 3, 1, "", "plot_position_error"], [271, 2, 1, "", "position"], [271, 2, 1, "", "position_error"], [271, 2, 1, "", "position_lonlat"], [271, 3, 1, "", "reassign"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[272, 3, 1, "", "__call__"], [272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 2, 1, "", "default_parameters"], [272, 3, 1, "", "energy_flux"], [272, 3, 1, "", "energy_flux_error"], [272, 3, 1, "", "evaluate_error"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 2, 1, "", "frozen"], [272, 3, 1, "", "integral"], [272, 3, 1, "", "integral_error"], [272, 3, 1, "", "inverse"], [272, 3, 1, "", "inverse_all"], [272, 2, 1, "", "is_norm_spectral_model"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 2, 1, "", "pivot_energy"], [272, 3, 1, "", "plot"], [272, 3, 1, "", "plot_error"], [272, 3, 1, "", "reassign"], [272, 3, 1, "", "reference_fluxes"], [272, 3, 1, "", "spectral_index"], [272, 3, 1, "", "spectral_index_error"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[273, 3, 1, "", "__call__"], [273, 2, 1, "", "amplitude"], [273, 3, 1, "", "copy"], [273, 2, 1, "", "covariance"], [273, 2, 1, "", "default_parameters"], [273, 2, 1, "", "ecut"], [273, 3, 1, "", "energy_flux"], [273, 3, 1, "", "energy_flux_error"], [273, 3, 1, "", "evaluate"], [273, 3, 1, "", "evaluate_error"], [273, 3, 1, "", "freeze"], [273, 3, 1, "", "from_dict"], [273, 3, 1, "", "from_parameters"], [273, 2, 1, "", "frozen"], [273, 2, 1, "", "index_1"], [273, 2, 1, "", "index_2"], [273, 3, 1, "", "integral"], [273, 3, 1, "", "integral_error"], [273, 3, 1, "", "inverse"], [273, 3, 1, "", "inverse_all"], [273, 2, 1, "", "is_norm_spectral_model"], [273, 2, 1, "", "parameters"], [273, 2, 1, "", "parameters_unique_names"], [273, 2, 1, "", "pivot_energy"], [273, 3, 1, "", "plot"], [273, 3, 1, "", "plot_error"], [273, 3, 1, "", "reassign"], [273, 2, 1, "", "reference"], [273, 3, 1, "", "reference_fluxes"], [273, 3, 1, "", "spectral_index"], [273, 3, 1, "", "spectral_index_error"], [273, 2, 1, "", "tag"], [273, 3, 1, "", "to_dict"], [273, 2, 1, "", "type"], [273, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[274, 3, 1, "", "__call__"], [274, 2, 1, "", "amplitude"], [274, 3, 1, "", "copy"], [274, 2, 1, "", "covariance"], [274, 2, 1, "", "default_parameters"], [274, 2, 1, "", "e_peak"], [274, 3, 1, "", "energy_flux"], [274, 3, 1, "", "energy_flux_error"], [274, 3, 1, "", "evaluate"], [274, 3, 1, "", "evaluate_error"], [274, 2, 1, "", "expfactor"], [274, 3, 1, "", "freeze"], [274, 3, 1, "", "from_dict"], [274, 3, 1, "", "from_parameters"], [274, 2, 1, "", "frozen"], [274, 2, 1, "", "index_1"], [274, 2, 1, "", "index_2"], [274, 3, 1, "", "integral"], [274, 3, 1, "", "integral_error"], [274, 3, 1, "", "inverse"], [274, 3, 1, "", "inverse_all"], [274, 2, 1, "", "is_norm_spectral_model"], [274, 2, 1, "", "parameters"], [274, 2, 1, "", "parameters_unique_names"], [274, 2, 1, "", "pivot_energy"], [274, 3, 1, "", "plot"], [274, 3, 1, "", "plot_error"], [274, 3, 1, "", "reassign"], [274, 2, 1, "", "reference"], [274, 3, 1, "", "reference_fluxes"], [274, 3, 1, "", "spectral_index"], [274, 3, 1, "", "spectral_index_error"], [274, 2, 1, "", "tag"], [274, 3, 1, "", "to_dict"], [274, 2, 1, "", "type"], [274, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[275, 3, 1, "", "__call__"], [275, 2, 1, "", "amplitude"], [275, 3, 1, "", "copy"], [275, 2, 1, "", "covariance"], [275, 2, 1, "", "default_parameters"], [275, 3, 1, "", "energy_flux"], [275, 3, 1, "", "energy_flux_error"], [275, 3, 1, "", "evaluate"], [275, 3, 1, "", "evaluate_error"], [275, 2, 1, "", "expfactor"], [275, 3, 1, "", "freeze"], [275, 3, 1, "", "from_dict"], [275, 3, 1, "", "from_parameters"], [275, 2, 1, "", "frozen"], [275, 2, 1, "", "index_1"], [275, 2, 1, "", "index_2"], [275, 3, 1, "", "integral"], [275, 3, 1, "", "integral_error"], [275, 3, 1, "", "inverse"], [275, 3, 1, "", "inverse_all"], [275, 2, 1, "", "is_norm_spectral_model"], [275, 2, 1, "", "parameters"], [275, 2, 1, "", "parameters_unique_names"], [275, 2, 1, "", "pivot_energy"], [275, 3, 1, "", "plot"], [275, 3, 1, "", "plot_error"], [275, 3, 1, "", "reassign"], [275, 2, 1, "", "reference"], [275, 3, 1, "", "reference_fluxes"], [275, 3, 1, "", "spectral_index"], [275, 3, 1, "", "spectral_index_error"], [275, 2, 1, "", "tag"], [275, 3, 1, "", "to_dict"], [275, 2, 1, "", "type"], [275, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[277, 3, 1, "", "__call__"], [277, 3, 1, "", "copy"], [277, 2, 1, "", "covariance"], [277, 2, 1, "", "default_parameters"], [277, 3, 1, "", "evaluate"], [277, 3, 1, "", "evaluate_geom"], [277, 2, 1, "", "evaluation_bin_size_min"], [277, 2, 1, "", "evaluation_radius"], [277, 2, 1, "", "evaluation_region"], [277, 3, 1, "", "freeze"], [277, 3, 1, "", "from_dict"], [277, 3, 1, "", "from_parameters"], [277, 3, 1, "", "from_position"], [277, 2, 1, "", "frozen"], [277, 3, 1, "", "integrate_geom"], [277, 2, 1, "", "is_energy_dependent"], [277, 2, 1, "", "map"], [277, 2, 1, "", "parameters"], [277, 2, 1, "", "parameters_unique_names"], [277, 2, 1, "", "phi_0"], [277, 3, 1, "", "plot"], [277, 3, 1, "", "plot_error"], [277, 3, 1, "", "plot_grid"], [277, 3, 1, "", "plot_interactive"], [277, 3, 1, "", "plot_position_error"], [277, 2, 1, "", "position"], [277, 2, 1, "", "position_error"], [277, 2, 1, "", "position_lonlat"], [277, 3, 1, "", "reassign"], [277, 2, 1, "", "tag"], [277, 3, 1, "", "to_dict"], [277, 2, 1, "", "type"], [277, 3, 1, "", "unfreeze"], [277, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[278, 3, 1, "", "__call__"], [278, 3, 1, "", "copy"], [278, 2, 1, "", "covariance"], [278, 2, 1, "", "default_parameters"], [278, 3, 1, "", "energy_flux"], [278, 3, 1, "", "energy_flux_error"], [278, 3, 1, "", "evaluate"], [278, 3, 1, "", "evaluate_error"], [278, 3, 1, "", "freeze"], [278, 3, 1, "", "from_dict"], [278, 3, 1, "", "from_parameters"], [278, 2, 1, "", "frozen"], [278, 3, 1, "", "integral"], [278, 3, 1, "", "integral_error"], [278, 3, 1, "", "inverse"], [278, 3, 1, "", "inverse_all"], [278, 2, 1, "", "is_norm_spectral_model"], [278, 2, 1, "", "map"], [278, 2, 1, "", "parameters"], [278, 2, 1, "", "parameters_unique_names"], [278, 2, 1, "", "pivot_energy"], [278, 3, 1, "", "plot"], [278, 3, 1, "", "plot_error"], [278, 3, 1, "", "reassign"], [278, 3, 1, "", "reference_fluxes"], [278, 3, 1, "", "spectral_index"], [278, 3, 1, "", "spectral_index_error"], [278, 2, 1, "", "tag"], [278, 3, 1, "", "to_dict"], [278, 2, 1, "", "type"], [278, 3, 1, "", "unfreeze"], [278, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[279, 3, 1, "", "copy"], [279, 2, 1, "", "covariance"], [279, 3, 1, "", "cutout"], [279, 2, 1, "", "default_parameters"], [279, 2, 1, "", "energy_center"], [279, 3, 1, "", "evaluate"], [279, 2, 1, "", "evaluation_radius"], [279, 3, 1, "", "freeze"], [279, 3, 1, "", "from_dict"], [279, 3, 1, "", "from_parameters"], [279, 2, 1, "", "frozen"], [279, 2, 1, "", "map"], [279, 2, 1, "", "name"], [279, 2, 1, "", "parameters"], [279, 2, 1, "", "parameters_unique_names"], [279, 2, 1, "", "position"], [279, 3, 1, "", "reassign"], [279, 3, 1, "", "slice_by_energy"], [279, 2, 1, "", "spectral_model"], [279, 3, 1, "", "stack"], [279, 2, 1, "", "tag"], [279, 3, 1, "", "to_dict"], [279, 2, 1, "", "type"], [279, 3, 1, "", "unfreeze"], [279, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[280, 3, 1, "", "__call__"], [280, 3, 1, "", "copy"], [280, 2, 1, "", "covariance"], [280, 2, 1, "", "default_parameters"], [280, 3, 1, "", "evaluate"], [280, 2, 1, "", "f0"], [280, 2, 1, "", "f1"], [280, 2, 1, "", "f2"], [280, 3, 1, "", "freeze"], [280, 3, 1, "", "from_dict"], [280, 3, 1, "", "from_parameters"], [280, 2, 1, "", "frozen"], [280, 3, 1, "", "integral"], [280, 2, 1, "", "is_energy_dependent"], [280, 2, 1, "", "parameters"], [280, 2, 1, "", "parameters_unique_names"], [280, 2, 1, "", "phi_ref"], [280, 3, 1, "", "plot"], [280, 3, 1, "", "plot_phasogram"], [280, 3, 1, "", "read"], [280, 3, 1, "", "reassign"], [280, 2, 1, "", "reference_time"], [280, 3, 1, "", "sample_time"], [280, 2, 1, "", "t_ref"], [280, 2, 1, "", "tag"], [280, 3, 1, "", "time_sum"], [280, 3, 1, "", "to_dict"], [280, 2, 1, "", "type"], [280, 3, 1, "", "unfreeze"], [280, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[281, 3, 1, "", "__call__"], [281, 3, 1, "", "copy"], [281, 2, 1, "", "covariance"], [281, 2, 1, "", "default_parameters"], [281, 3, 1, "", "evaluate"], [281, 3, 1, "", "evaluate_geom"], [281, 2, 1, "", "evaluation_bin_size_min"], [281, 2, 1, "", "evaluation_radius"], [281, 2, 1, "", "evaluation_region"], [281, 3, 1, "", "freeze"], [281, 3, 1, "", "from_dict"], [281, 3, 1, "", "from_parameters"], [281, 3, 1, "", "from_position"], [281, 2, 1, "", "frozen"], [281, 3, 1, "", "integrate_geom"], [281, 2, 1, "", "is_energy_dependent"], [281, 2, 1, "", "lat_0"], [281, 2, 1, "", "lon_0"], [281, 2, 1, "", "map"], [281, 2, 1, "", "map_center"], [281, 2, 1, "", "parameters"], [281, 2, 1, "", "parameters_unique_names"], [281, 2, 1, "", "phi_0"], [281, 3, 1, "", "plot"], [281, 3, 1, "", "plot_error"], [281, 3, 1, "", "plot_grid"], [281, 3, 1, "", "plot_interactive"], [281, 3, 1, "", "plot_position_error"], [281, 2, 1, "", "position"], [281, 2, 1, "", "position_error"], [281, 2, 1, "", "position_lonlat"], [281, 3, 1, "", "read"], [281, 3, 1, "", "reassign"], [281, 2, 1, "", "tag"], [281, 3, 1, "", "to_dict"], [281, 3, 1, "", "to_region"], [281, 2, 1, "", "type"], [281, 3, 1, "", "unfreeze"], [281, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[282, 3, 1, "", "__call__"], [282, 3, 1, "", "copy"], [282, 2, 1, "", "covariance"], [282, 2, 1, "", "default_parameters"], [282, 3, 1, "", "energy_flux"], [282, 3, 1, "", "energy_flux_error"], [282, 3, 1, "", "evaluate"], [282, 3, 1, "", "evaluate_error"], [282, 3, 1, "", "freeze"], [282, 3, 1, "", "from_dict"], [282, 3, 1, "", "from_parameters"], [282, 3, 1, "", "from_region_map"], [282, 2, 1, "", "frozen"], [282, 3, 1, "", "integral"], [282, 3, 1, "", "integral_error"], [282, 3, 1, "", "inverse"], [282, 3, 1, "", "inverse_all"], [282, 2, 1, "", "is_norm_spectral_model"], [282, 2, 1, "", "parameters"], [282, 2, 1, "", "parameters_unique_names"], [282, 2, 1, "", "pivot_energy"], [282, 3, 1, "", "plot"], [282, 3, 1, "", "plot_error"], [282, 3, 1, "", "read_xspec_model"], [282, 3, 1, "", "reassign"], [282, 3, 1, "", "reference_fluxes"], [282, 3, 1, "", "spectral_index"], [282, 3, 1, "", "spectral_index_error"], [282, 2, 1, "", "tag"], [282, 3, 1, "", "to_dict"], [282, 2, 1, "", "type"], [282, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[283, 3, 1, "", "__call__"], [283, 3, 1, "", "copy"], [283, 2, 1, "", "covariance"], [283, 2, 1, "", "default_parameters"], [283, 3, 1, "", "freeze"], [283, 3, 1, "", "from_dict"], [283, 3, 1, "", "from_parameters"], [283, 2, 1, "", "frozen"], [283, 3, 1, "", "integral"], [283, 2, 1, "", "is_energy_dependent"], [283, 2, 1, "", "parameters"], [283, 2, 1, "", "parameters_unique_names"], [283, 3, 1, "", "plot"], [283, 3, 1, "", "reassign"], [283, 2, 1, "", "reference_time"], [283, 3, 1, "", "sample_time"], [283, 3, 1, "", "time_sum"], [283, 3, 1, "", "to_dict"], [283, 2, 1, "", "type"], [283, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.UniformPrior": [[284, 3, 1, "", "__call__"], [284, 3, 1, "", "copy"], [284, 2, 1, "", "covariance"], [284, 2, 1, "", "default_parameters"], [284, 3, 1, "", "evaluate"], [284, 3, 1, "", "freeze"], [284, 3, 1, "", "from_dict"], [284, 3, 1, "", "from_parameters"], [284, 2, 1, "", "frozen"], [284, 2, 1, "", "max"], [284, 2, 1, "", "min"], [284, 2, 1, "", "parameters"], [284, 2, 1, "", "parameters_unique_names"], [284, 3, 1, "", "reassign"], [284, 2, 1, "", "tag"], [284, 3, 1, "", "to_dict"], [284, 2, 1, "", "type"], [284, 3, 1, "", "unfreeze"], [284, 2, 1, "", "weight"]], "gammapy.modeling.models.utils": [[291, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[294, 1, 1, "", "CashCountsStatistic"], [295, 1, 1, "", "Chi2AsymmetricErrorFitStatistic"], [296, 1, 1, "", "Chi2FitStatistic"], [297, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [298, 1, 1, "", "WStatCountsStatistic"], [299, 4, 1, "", "cash"], [300, 4, 1, "", "cash_sum_cython"], [301, 4, 1, "", "compute_chisq"], [302, 4, 1, "", "compute_flux_doubling"], [303, 4, 1, "", "compute_fpp"], [304, 4, 1, "", "compute_fvar"], [305, 4, 1, "", "cstat"], [306, 4, 1, "", "discrete_correlation"], [307, 4, 1, "", "f_cash_root_cython"], [308, 4, 1, "", "get_wstat_gof_terms"], [309, 4, 1, "", "get_wstat_mu_bkg"], [310, 4, 1, "", "norm_bounds_cython"], [311, 4, 1, "", "sigma_to_ts"], [312, 4, 1, "", "structure_function"], [313, 4, 1, "", "ts_to_sigma"], [314, 4, 1, "", "weighted_cash_sum_cython"], [315, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[294, 3, 1, "", "compute_errn"], [294, 3, 1, "", "compute_errp"], [294, 3, 1, "", "compute_upper_limit"], [294, 2, 1, "", "error"], [294, 3, 1, "", "info_dict"], [294, 2, 1, "", "n_bkg"], [294, 2, 1, "", "n_sig"], [294, 3, 1, "", "n_sig_matching_significance"], [294, 2, 1, "", "p_value"], [294, 2, 1, "", "sqrt_ts"], [294, 2, 1, "", "stat_max"], [294, 2, 1, "", "stat_null"], [294, 3, 1, "", "sum"], [294, 2, 1, "", "ts"]], "gammapy.stats.Chi2AsymmetricErrorFitStatistic": [[295, 3, 1, "", "loglikelihood_dataset"], [295, 3, 1, "", "stat_array_dataset"], [295, 3, 1, "", "stat_sum_dataset"]], "gammapy.stats.Chi2FitStatistic": [[296, 3, 1, "", "loglikelihood_dataset"], [296, 3, 1, "", "stat_array_dataset"], [296, 3, 1, "", "stat_sum_dataset"]], "gammapy.stats.WStatCountsStatistic": [[298, 3, 1, "", "compute_errn"], [298, 3, 1, "", "compute_errp"], [298, 3, 1, "", "compute_upper_limit"], [298, 2, 1, "", "error"], [298, 3, 1, "", "info_dict"], [298, 2, 1, "", "n_bkg"], [298, 2, 1, "", "n_sig"], [298, 3, 1, "", "n_sig_matching_significance"], [298, 2, 1, "", "p_value"], [298, 2, 1, "", "sqrt_ts"], [298, 2, 1, "", "stat_max"], [298, 2, 1, "", "stat_null"], [298, 3, 1, "", "sum"], [298, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[316, 4, 1, "", "hierarchical_clustering"], [317, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[318, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [319, 4, 1, "", "cartesian"], [320, 4, 1, "", "fov_to_sky"], [321, 4, 1, "", "galactic"], [322, 4, 1, "", "motion_since_birth"], [323, 4, 1, "", "polar"], [324, 4, 1, "", "sky_to_fov"], [325, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[326, 1, 1, "", "HDULocation"], [327, 1, 1, "", "LazyFitsData"], [328, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[326, 3, 1, "", "get_hdu"], [326, 3, 1, "", "info"], [326, 3, 1, "", "load"], [326, 3, 1, "", "path"]], "gammapy.utils.integrate": [[329, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[330, 1, 1, "", "ScaledRegularGridInterpolator"], [331, 4, 1, "", "interpolate_profile"], [332, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[330, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[333, 5, 1, "", "BACKEND_DEFAULT"], [334, 5, 1, "", "METHOD_DEFAULT"], [335, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [336, 5, 1, "", "N_JOBS_DEFAULT"], [337, 5, 1, "", "POOL_KWARGS_DEFAULT"], [338, 1, 1, "", "multiprocessing_manager"], [339, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[340, 1, 1, "", "InverseCDFSampler"], [341, 4, 1, "", "draw"], [342, 4, 1, "", "get_random_state"], [343, 4, 1, "", "normalize"], [344, 4, 1, "", "pdf"], [345, 4, 1, "", "sample_powerlaw"], [346, 4, 1, "", "sample_sphere"], [347, 4, 1, "", "sample_sphere_distance"], [348, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[340, 3, 1, "", "sample"], [340, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[349, 4, 1, "", "compound_region_to_regions"], [350, 4, 1, "", "make_concentric_annulus_sky_regions"], [351, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [352, 4, 1, "", "region_to_frame"], [353, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[354, 4, 1, "", "from_yaml"], [355, 4, 1, "", "get_images_paths"], [356, 4, 1, "", "make_path"], [357, 4, 1, "", "read_yaml"], [358, 4, 1, "", "recursive_merge_dicts"], [359, 4, 1, "", "to_yaml"], [360, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[361, 4, 1, "", "hstack_columns"], [362, 4, 1, "", "table_row_to_dict"], [363, 4, 1, "", "table_standardise_units_copy"], [364, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[365, 1, 1, "", "Checker"], [366, 4, 1, "", "assert_quantity_allclose"], [367, 4, 1, "", "assert_skycoord_allclose"], [368, 4, 1, "", "assert_time_allclose"], [369, 4, 1, "", "mpl_plot_check"], [370, 4, 1, "", "requires_data"], [371, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[365, 3, 1, "", "run"]], "gammapy.utils.time": [[372, 4, 1, "", "absolute_time"], [373, 4, 1, "", "time_ref_from_dict"], [374, 4, 1, "", "time_ref_to_dict"], [375, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[376, 4, 1, "", "standardise_unit"], [377, 4, 1, "", "unit_from_fits_image_hdu"], [378, 4, 1, "", "wrap_at"]], "gammapy.visualization": [[379, 1, 1, "", "MapPanelPlotter"], [380, 4, 1, "", "add_colorbar"], [381, 4, 1, "", "annotate_heatmap"], [382, 4, 1, "", "colormap_hess"], [383, 4, 1, "", "colormap_milagro"], [384, 4, 1, "", "plot_contour_line"], [385, 4, 1, "", "plot_distribution"], [386, 4, 1, "", "plot_heatmap"], [387, 4, 1, "", "plot_map_rgb"], [388, 4, 1, "", "plot_npred_signal"], [389, 4, 1, "", "plot_spectrum_datasets_off_regions"], [390, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[379, 3, 1, "", "plot"], [379, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 102, 103, 104, 105, 106, 109, 110, 111, 126, 127, 128, 132, 136, 144, 150, 151, 152, 156, 176, 182, 203, 209, 223, 227, 228, 233, 235, 236, 240, 241, 243, 244, 245, 247, 251, 253, 254, 258, 260, 261, 268, 269, 270, 273, 274, 275, 280, 283, 285, 286, 292, 304, 326, 376, 381, 382, 389, 392, 393, 395, 397, 402, 403, 404, 406, 408, 409, 410, 411, 413, 416, 419, 423, 424, 426, 427, 429, 430, 431, 432, 460, 461, 463, 464, 465, 466, 468, 470, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 523, 526, 528, 534, 535, 536, 537, 540, 542, 547, 559, 560, 561, 562, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 604, 605, 606, 607, 609], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 77, 83, 85, 87, 88, 89, 90, 91, 94, 96, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 144, 145, 147, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 179, 180, 184, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 290, 292, 294, 297, 298, 299, 302, 303, 304, 305, 306, 311, 313, 316, 317, 336, 340, 347, 348, 368, 380, 382, 383, 387, 389, 392, 393, 396, 399, 403, 404, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 430, 431, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 522, 524, 525, 526, 528, 529, 530, 534, 536, 540, 544, 546, 549, 551, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 605, 606, 607, 608, 610], "00": [67, 87, 88, 89, 91, 102, 200, 393, 407, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 483, 484, 487, 488, 491, 492, 494, 495, 498, 499, 500, 501, 503, 504, 505, 507, 508, 509, 511, 512, 514, 515, 516, 519, 522, 524, 525, 526, 528, 529, 557, 568, 589, 590, 601, 609], "000": [67, 87, 88, 91, 127, 407, 465, 468, 470, 471, 473, 474, 479, 480, 481, 483, 484, 488, 491, 492, 495, 498, 499, 500, 505, 507, 508, 509, 515, 524, 525, 528, 557, 610], "0000": [419, 509], "000000": 498, "000000000000002": 505, "00000000000001": 473, "00000000000003": 493, "00000000000004": 498, "0000000000016": 86, "0000000000018": 94, "000000000002": 483, "0000000000030": 509, "0000000000038": 509, "0000000000059": 509, "0000000000064": 483, "000000000007": 498, "0000000000076": 509, "00000000001": 498, "0000000000203": 509, "0000000000264": 509, "0000000000315": 509, "0000000000341": 509, "0000000000358": 509, "0000000000443": 509, "0000000000494": 509, "0000000000529": 509, "0000000000549": 509, "0000000000561": 509, "0000000000792": 509, "0000000000897": 509, "00000000e": [501, 503], "00000001": 86, "0000000e": 503, "00000143": [393, 609], "0000e": [102, 465, 466, 470, 471, 472, 473, 476, 479, 488, 491, 492, 501, 508, 511, 526, 589], "0001": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 383, 481], "00010298": 499, "00015": 500, "000150": 468, "0002": [468, 528], "00020": 468, "0002000": 468, "0003": 481, "00050": 468, "000500": 468, "0006": 468, "00074287037": [94, 484], "000742870370370241": 94, "0008": 498, "0009": 468, "000e": [465, 470, 473, 476, 479, 480, 488, 492, 498, 501, 508, 511, 526, 528, 589], "000true": 468, "001": [50, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 368, 483, 501, 566], "0016288e": 503, "001e": 67, "002018": 515, "0021": 509, "0022": 509, "0025508e": 503, "0028272e": 503, "0029": 418, "002924909437196891": 525, "002e": [67, 471], "003": [493, 507, 515], "003026327991562108": 480, "003105928246293051": 525, "0033": 607, "0033685231218731e": 495, "0034": 509, "0035e": 492, "0036925550396303": 473, "00375698": 244, "0039": 509, "004": 67, "0040": 509, "0042": 509, "00422666667": 496, "00449161": 250, "00472179200096": 422, "00490": 481, "00490483": 481, "0049409": 514, "005": 498, "00511624e": 500, "00521472221220211": 480, "005911103564621735": 482, "006": [463, 512], "0060": 509, "0064": 509, "0064830e": 503, "00688029": 244, "007": 498, "0070": 509, "0076540e": 503, "008": [498, 606], "008166963876141447": 482, "0087": 509, "0088": 509, "00889194478934663": 482, "00894": 528, "009": [495, 498], "0092": 509, "00931e": 464, "0094": 509, "009428253484623464": 482, "00e": [83, 464, 471, 474, 483, 488, 492, 493, 495, 499, 503, 504, 509, 515, 525], "01": [39, 52, 75, 83, 87, 88, 91, 94, 103, 106, 110, 111, 113, 114, 129, 134, 136, 179, 180, 184, 194, 195, 200, 204, 207, 230, 236, 241, 243, 245, 261, 268, 393, 422, 430, 463, 464, 465, 470, 472, 473, 474, 476, 479, 480, 483, 488, 492, 493, 494, 497, 498, 499, 501, 503, 504, 505, 506, 507, 508, 509, 511, 512, 515, 516, 525, 526, 528, 534, 539, 549, 551, 552, 555, 560, 562, 564, 577, 587, 593, 594, 595, 601, 606, 609], "010": 507, "010066705375548107": 422, "010e": 67, "011": [311, 313, 507], "0115": 509, "011872336272724": 525, "012": 507, "0122385e": 503, "0123": 509, "01235137e": 503, "012733796525585": 510, "0130": 509, "0131": 509, "0135": 509, "0139252e": 503, "014": [85, 103, 106, 110, 111, 176, 463, 471, 479, 498, 504, 512, 525, 526, 551], "0142": 509, "0143724": 244, "0143764": 514, "01449": 83, "0145": 506, "01450": [490, 526], "0148": 509, "0148015517529894": 422, "014811633859834": 422, "0149044e": 503, "015": 498, "01551196351647377": 244, "0163": 481, "01648855015875024": 605, "0166": 509, "01700709977114979": 496, "0172": 509, "0173": 509, "0174": 513, "0174215387372243e": 509, "017442925431194484": 496, "0177": 509, "018": 67, "018182745349064267": 480, "0183519e": 503, "0188e": 488, "019672": 500, "0198": 509, "019899368286133": 480, "01e": [176, 430, 464, 498], "01t00": [87, 91, 94, 200, 393, 474, 483, 609], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 103, 106, 110, 111, 112, 117, 164, 171, 176, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 430, 463, 464, 465, 468, 469, 470, 471, 476, 477, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493, 494, 498, 501, 503, 504, 505, 506, 507, 508, 509, 512, 515, 522, 525, 526, 528, 529, 549, 551, 552, 560, 561, 562, 568], "020": [480, 498, 500], "0204081632653064": 485, "020420144596410953": 510, "0209": 509, "021": [67, 498], "0212": 509, "0216e": 488, "022": 488, "0220": 509, "0225e": 498, "02288737": 244, "023": 498, "0231": 509, "023472813526874605": 525, "024": 498, "02432": 498, "02471554675416": 525, "024897178551308": 422, "024e": 528, "025": [498, 515], "025119120535663": 481, "0255": 509, "026": [53, 67, 498], "0262": 509, "02653": [474, 481], "026891": 498, "026914": 498, "027": 67, "0279": 509, "028549898215494e": 422, "028854": 506, "029": [463, 497, 512], "0290": 509, "0294": 509, "029e": [465, 498], "02e": [83, 495], "02t23": 86, "03": [67, 87, 89, 91, 206, 405, 421, 463, 464, 465, 468, 480, 481, 483, 492, 498, 503, 505, 507, 509, 510, 511, 512, 517, 519, 526, 563], "03034567e": 500, "032": 498, "0322": [67, 509], "0322775e": 503, "032451": 576, "033": [67, 498, 509], "033176650892097": 96, "03383": 514, "034": 606, "0344": 67, "03447394e": 500, "0347": 509, "03493": 500, "034e": 468, "035": 500, "0354": 509, "0354700e": 503, "0356": 464, "0356551": 464, "036": 67, "036e": 498, "037": 507, "0370": 509, "03745318352059925": 599, "0375512e": 503, "0376213e": 503, "0384": 509, "03893": 500, "039": [479, 480, 500], "0391": 509, "03921700077803329": 480, "0395135e": 503, "03978226e": 508, "04": [30, 67, 94, 105, 126, 431, 463, 469, 471, 473, 474, 477, 480, 483, 492, 493, 494, 498, 503, 505, 508, 509, 512, 515], "040": 470, "0400": 509, "0404": 509, "0408": 509, "040e": 474, "041": 515, "041158": 563, "0414": 474, "0415": 528, "041882": 498, "042": 498, "0421": 509, "0422": 509, "0423": 509, "0423761": 464, "0426": 509, "042e": 498, "043": 67, "0430": 509, "04346506818449": 492, "043487": 477, "04357249662280083": 470, "0436": 509, "044": 509, "04454": 515, "0450": 509, "0454": 509, "0454683": 514, "046": 67, "0462798e": 503, "0467": 509, "047": 67, "0473174": 250, "0474750e": 503, "047e": 492, "048": [479, 515], "0480": 509, "0482342e": 503, "04897634344908595": 96, "048e": 67, "049": [468, 479], "04939e": 464, "0496": 509, "049676": 498, "04d": 483, "04e": 504, "04t12": [471, 476, 477, 479, 508, 525, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 77, 87, 91, 124, 125, 127, 135, 207, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 350, 421, 463, 464, 465, 466, 468, 469, 470, 474, 479, 480, 481, 484, 488, 491, 497, 498, 499, 501, 503, 504, 507, 509, 511, 514, 516, 519, 525, 526, 554, 560], "050": 507, "0503641": 464, "0505949e": 503, "0507": 509, "05075": 503, "0508075688763": 498, "05088486522436142": 470, "0509": 509, "050e": 474, "051": 507, "0519": 509, "052": 498, "0520119e": 503, "0521468441366": 482, "0522": 509, "05227": 498, "052278": 589, "053": [479, 509], "0530": 509, "0531": 509, "053212009682775": 510, "0539": 509, "0548": 509, "054833602905273e": 480, "0548e": 480, "054e": 67, "055": 498, "0552": 509, "0556": 509, "055e": 468, "0560": [509, 528], "056130": 498, "05628243": 528, "05637e": 464, "0567": 509, "05673": 528, "057": 498, "05762513693893088": 480, "058": 67, "058201": 498, "05853": 474, "059": 67, "05901956e": 503, "0597": 509, "0598579": 464, "05deg": 207, "06": [105, 126, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 463, 471, 476, 477, 478, 479, 480, 481, 498, 499, 501, 503, 504, 505, 508, 509, 515, 519, 525, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600], "061": 528, "061224489795904": 485, "0616": 509, "062": [483, 507, 508, 515], "0622": 509, "0625": 508, "0628": 528, "063": 67, "0630": 509, "0631757e": 503, "06334488877417636": 510, "0639": 509, "0640": 509, "0641": 509, "064108e": 498, "0642": 509, "06430": 481, "0643032": 481, "0645": 509, "0648e": 488, "0650": 509, "065071": 498, "065119": 528, "0652": 509, "066": 470, "06622": 509, "066442": 498, "0665": 509, "0666": 509, "067": 474, "0680": 509, "068245": 498, "0689": 501, "068e": 468, "069": 67, "07": [103, 176, 366, 407, 430, 463, 468, 469, 471, 477, 479, 481, 491, 493, 495, 498, 499, 503, 505, 507, 509, 515], "070483": 498, "0711412": 464, "072": 67, "0726": 509, "0728": 509, "073": 67, "0739282e": 503, "074": [498, 515], "07454639": 481, "07455": 481, "0746": 528, "0748": [498, 528], "075": [67, 601], "0750": 509, "07512322002655547": 480, "0756": 509, "0756e": 464, "076": [463, 500, 512, 528], "0766": 509, "077": 464, "078": 468, "07871368968": 499, "0790": 509, "0793": 509, "07943648658692837": 510, "07944657408": 498, "079464e": 528, "0799109224230051": 510, "07e": 493, "08": [86, 387, 430, 463, 469, 472, 473, 476, 477, 479, 480, 488, 498, 499, 501, 504, 509, 515, 519, 525, 526, 570], "0800": 509, "0800792e": 503, "08075": 503, "08081469527497996": 473, "08088": 182, "080e": 474, "0811": 509, "0811551760882139": 510, "08142": 497, "0815": 509, "081632653061217": 485, "08177838060845842": 509, "08191603310406206": 510, "08192": 481, "08192101": 481, "082": [498, 509], "08235": 509, "0824": 509, "082691868487906": 496, "08269984": 528, "082e": 127, "083": [67, 498], "08328557573258877": 510, "0833333358168602": 470, "0833333432674408": 470, "0838": 509, "08388624433428049": 510, "084": [67, 463, 481, 487], "0841": 509, "08447355125099419": 510, "0845515": 464, "0848": 509, "085": 498, "08529426": 97, "0853": 509, "0854": 509, "0855013383552432": 510, "0859123667444601e": 495, "086": [463, 519], "08675": 499, "086e": 498, "087": 528, "0870": 509, "0873": 509, "08795162606984375": 510, "087e": 498, "0880": 509, "088742": 498, "08880368117243051": 510, "08894569035619496": 510, "089": 140, "0891": 509, "0894640e": 503, "0897868126630783": 510, "089881": 498, "0899": 509, "08e": [488, 507], "09": [33, 127, 176, 463, 465, 471, 474, 477, 479, 487, 498, 499, 503, 504, 509, 512, 525, 526, 528, 607], "0902437e": 503, "0907128e": 503, "090e": 470, "0910": [259, 260, 509], "0914": [52, 53], "091919": 597, "0923": 509, "0929": 509, "093": 509, "093477": 481, "09348": 481, "09375": 495, "09426693227142095": 510, "094834": 498, "095232": 498, "0955": 509, "09562941": 528, "095707": 528, "096": [463, 469, 471], "0960": 528, "09607": 528, "09610314778983592": 510, "09623312838375568": 510, "0963": 509, "09740295372903346": 510, "097e": 67, "098": [463, 601], "0984": 509, "0988": 509, "098903": 498, "09907043184188653": 510, "0993": 509, "0997": 509, "09e": 504, "0b100": 336, "0d": [129, 485, 499, 564, 610], "0e": [416, 471, 473, 474, 476, 480, 483, 488, 492, 495, 499, 500, 503, 505, 507, 508, 509, 515, 525, 559, 560, 561, 562, 564, 565, 566, 567, 571, 572, 574, 578, 580, 581, 582, 583, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "0f": [501, 515, 528], "0noiuho9": 495, "0rc": 423, "0rc1": 423, "0true": 481, "0x105fd0cf8": 392, "0x105fe3b70": 392, "0x129602550": 392, "0x7fa1a35350d0": 510, "0x7fa1a3d4dc10": 510, "0x7fa1a3e9f070": 499, "0x7fa1a3e9f670": 499, "0x7fa1a3e9fbe0": 499, "0x7fa1a3f049d0": 511, "0x7fa1b2889f10": 499, "0x7fa1b29875b0": 485, "0x7fa1b2a0dfa0": 485, "0x7fa1b2a118e0": 514, "0x7fa1b2a15580": 514, "0x7fa1b2aee280": 510, "0x7fa1b2d6a280": 510, "0x7fa1b2e18820": 514, "0x7fa1b2e25790": 514, "0x7fa1b2f009d0": 496, "0x7fa1b3b9c8e0": 508, "0x7fa1bf262b20": 589, "0youbrav": 500, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 77, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 103, 106, 110, 111, 112, 116, 117, 119, 120, 124, 127, 128, 129, 130, 132, 133, 136, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 171, 176, 179, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 217, 219, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 253, 254, 256, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 292, 294, 297, 298, 302, 303, 311, 313, 316, 317, 329, 330, 336, 337, 338, 347, 348, 350, 351, 376, 379, 382, 383, 387, 389, 392, 393, 395, 396, 399, 400, 402, 403, 404, 406, 407, 409, 413, 415, 416, 417, 418, 419, 420, 423, 424, 427, 430, 434, 435, 437, 438, 442, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 513, 514, 515, 516, 517, 522, 525, 526, 528, 530, 534, 535, 536, 539, 540, 542, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604, 606, 607, 608, 610], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 77, 86, 87, 88, 89, 91, 101, 103, 104, 105, 106, 109, 110, 111, 112, 117, 120, 124, 125, 126, 127, 128, 129, 133, 135, 136, 138, 144, 145, 150, 151, 153, 155, 157, 158, 163, 164, 165, 166, 167, 169, 176, 182, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 214, 217, 219, 221, 230, 233, 246, 247, 248, 250, 251, 273, 274, 286, 297, 311, 313, 336, 338, 348, 380, 385, 387, 389, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 408, 409, 415, 416, 417, 421, 422, 424, 430, 435, 437, 448, 450, 453, 457, 459, 463, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 525, 526, 528, 530, 536, 540, 546, 549, 551, 552, 553, 554, 565, 566, 570, 572, 575, 576, 578, 579, 580, 581, 583, 584, 586, 587, 588, 589, 593, 594, 595, 605, 606, 609, 610], "100": [19, 20, 26, 46, 47, 74, 77, 94, 127, 134, 136, 155, 156, 166, 207, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 286, 288, 348, 392, 393, 395, 400, 411, 422, 433, 463, 464, 466, 470, 473, 479, 480, 481, 483, 484, 485, 488, 493, 496, 497, 498, 499, 500, 503, 504, 505, 508, 509, 511, 514, 515, 516, 528, 529, 532, 534, 535, 536, 540, 551, 554, 555, 559, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 606], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 197, 202, 221, 392, 395, 468, 498, 499, 503, 511, 515, 528, 554], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 104, 109, 155, 166, 169, 179, 498, 515], "100000": [74, 498, 525], "1000000": [51, 52, 54, 498, 589], "10000000": 589, "100000000000": 500, "10000_100000_wtct": 77, "1000_3000_wtct": 77, "1000e": 511, "1001": [452, 483, 484], "1002": [452, 509], "1004": 509, "10045": [65, 275, 588], "10049": 464, "1005": 509, "1006": [452, 509], "1008": 509, "1009": 509, "100_300_wtct": 77, "101": [438, 479, 493, 498, 509], "1012": 497, "1013": [453, 509], "1014": 453, "101430": 493, "1016": 509, "10172": 508, "102": [176, 471, 474, 509, 606, 607], "1020": 509, "102040816326531": 485, "1021": 453, "1021e": 492, "1023": 509, "1025": 453, "1026": [453, 509], "10262943822890519": [96, 510], "1027": 453, "1028": 509, "102877228833871": 510, "1029": [453, 509], "10295505": 528, "102e": 498, "103": [433, 456, 509], "103000133": 516, "1031": [453, 509], "1032": 453, "10325325433327517": 525, "1034": 528, "1035": 453, "10350020170706745": 471, "1036": [474, 509], "1038": [453, 509], "104": [463, 479, 481, 509, 601], "1040": 453, "10409": 481, "10409446": 481, "1041": 509, "10416667": 495, "1043": [453, 509], "104317": [103, 499, 507], "1044": 474, "1045": 453, "1046": 410, "1047": 509, "10470702368766069": 510, "10477": 528, "1048": 509, "105": [82, 463, 509, 517, 601], "1050": 509, "1051": 453, "1052": [498, 509], "1053": 453, "1054": 453, "1057": 453, "10592": 609, "105953": 528, "105e": 474, "106": [463, 488, 509, 601], "1061": 509, "1061971e": 503, "106217": 83, "1062535e": 503, "1064": [498, 509], "1065": [453, 509], "1067": [453, 509], "1068": 509, "1069": 453, "107": [463, 464, 505, 509, 601], "1070": [453, 509, 528], "1071": 509, "1072": 509, "1072542e": 503, "1073": 453, "1075": 509, "10752883769757363": 510, "1076": 453, "1078": 453, "107e": [474, 498], "108": [450, 509], "1080": 509, "108034597491956e": 508, "108043": 479, "1082": [453, 509], "1083": [453, 509], "1084": 453, "1085": 453, "1085000": 479, "1087": 453, "1088": [453, 509], "1089": 453, "109": [433, 463, 465, 505, 509, 601], "1090": 453, "1092": [453, 474], "1093": [453, 474], "1095": 509, "1098": 453, "1099306e": 503, "109e": 481, "10e": [176, 498, 503], "10k": 197, "10th": [420, 432], "11": [19, 20, 67, 87, 91, 94, 127, 128, 132, 133, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 350, 396, 399, 401, 409, 417, 421, 433, 434, 455, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 483, 484, 485, 488, 490, 491, 492, 493, 495, 498, 499, 500, 501, 504, 506, 507, 509, 511, 513, 515, 525, 526, 528, 529, 551, 553, 607], "110": [498, 509, 515], "1100": [453, 470], "110000": [499, 504], "1102": [453, 509], "1102e": 466, "1103": [453, 509], "110380": [83, 408, 476, 479, 481, 514], "1104": [453, 509], "1105": 453, "1106": 509, "1107": [453, 509], "1108": 453, "111": [380, 399, 453, 479, 498, 509], "1110": [453, 509], "1111": [138, 498, 509, 528], "111140": [408, 476, 479, 481], "111159": [408, 476, 479, 481, 514], "11132": 64, "1115": 453, "111507416": 493, "111630": [89, 493, 514], "111797": 498, "1118": 509, "11184": [65, 274, 587], "112": [464, 470, 509], "1120": 509, "11208": 65, "1121": 509, "1122": 509, "11220184543": 500, "1123": 509, "1125": 509, "1127": 453, "11291820875721864": 510, "113": [509, 528], "1130": 509, "1131": [400, 477], "1133": 453, "1134": [453, 509], "1136": [453, 509], "1139": 509, "114": 509, "1140": [311, 313, 509], "1142": 492, "114416978060044": 492, "1145388630957243": 509, "1146": 509, "115": [67, 509], "1150": 453, "11517": 528, "1152": 509, "1153": 509, "11553325504064559": [96, 510], "1156": 509, "1157": 509, "11587179071752986": 96, "116": [433, 465, 466], "1160": [498, 509], "1161": 509, "11610": 528, "1162": [453, 509], "1162290849837497e": 490, "1166": [453, 509], "1167": [399, 406, 509], "1169": 453, "116e": 67, "117": [433, 509, 570], "1170": [453, 509], "1172": 406, "1173": 509, "1173775": 498, "1176": [453, 509], "117877e": 498, "1179": 453, "118": [479, 509], "1182": 509, "1183": 453, "118355": 498, "1184": 509, "1189": 509, "119": [465, 474, 479, 509], "1190": 453, "1192": 509, "1193": 509, "1194": 509, "119432": 464, "1195": [453, 509], "119e": 470, "11af4c": 433, "11e": 498, "12": [17, 38, 42, 67, 86, 87, 91, 105, 113, 114, 126, 127, 166, 169, 195, 196, 197, 199, 205, 208, 209, 223, 227, 233, 235, 240, 247, 258, 260, 270, 273, 274, 275, 286, 396, 398, 399, 400, 401, 403, 404, 409, 412, 413, 416, 422, 433, 437, 438, 439, 451, 456, 463, 464, 465, 468, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 487, 488, 490, 491, 492, 495, 496, 498, 499, 500, 501, 505, 507, 508, 509, 511, 515, 525, 528, 540, 551, 554, 555, 559, 560, 561, 562, 564, 565, 566, 567, 570, 571, 572, 574, 578, 581, 582, 583, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 610], "120": [53, 407, 472, 509, 515, 563], "1200": 509, "120000": 476, "120154": 498, "1204": 453, "1205": 509, "1206": 509, "1207": [453, 509], "1208": 509, "120e": [67, 528], "121": [67, 463, 481, 507, 509, 601, 610], "1210": 453, "1211": [453, 498], "121241": 479, "12148": 474, "1215": 453, "1216": [466, 509], "12186": 528, "1219": [498, 509], "122": [67, 433, 468, 507, 509, 610], "1220": 453, "1222": 509, "1224": 509, "1224489795918373": 485, "1226": 453, "1227": [453, 509], "12276676166802643": 510, "122e": 480, "123": [87, 91, 404, 474, 509], "1230": 509, "1231": 454, "1233": 509, "1234": 88, "123456789": [200, 393, 609], "1235": 453, "1237": [400, 509], "1238": 453, "123890826": 86, "123892513": 86, "1239": 397, "123944": 83, "123e": 474, "124": [404, 474, 498, 507, 509], "1240": [453, 509], "1242": 509, "12423250e": 503, "1243": [509, 528], "1244969200533408": 317, "1246": [453, 509], "12493874": 503, "124e": 67, "125": [67, 127, 470, 481, 505, 509, 515, 528, 606], "1250": 509, "1251": 509, "12518": 480, "12525306": 496, "1253": 509, "12546": 65, "1258925411": 500, "1259": 509, "126": [67, 468, 498, 501, 509], "1260": 509, "1264500e": 503, "1265": 509, "126585": 464, "1266": 453, "1268": [453, 509], "12688": 83, "1269263e": 503, "12697": 480, "127": [474, 509], "1271": 509, "1272": 509, "1273": 509, "12751": 464, "1277": 398, "1278": [399, 509], "12794487": 508, "128": [433, 463, 493, 509, 530, 601], "12809": [103, 499, 507], "1281": [453, 509], "12816": 528, "1285": 509, "12856": 515, "1286": 509, "1287": [453, 509], "1289": [453, 509], "128e": 468, "129": [459, 509, 526], "1290": [453, 509], "1291": [453, 509], "1294": 453, "1295": 509, "1296": 509, "1299": [498, 509], "12nan5": 468, "12r_": 53, "12th": [418, 432], "13": [67, 102, 103, 106, 127, 206, 316, 396, 397, 401, 406, 411, 421, 438, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 536, 607], "130": [509, 551], "1300": 453, "1301": 509, "1301v": 38, "13030": 528, "1304": 509, "1305": [453, 509], "13061": 508, "1307": 509, "131": [468, 509], "1310": 528, "1311": 509, "1312": 453, "13133": 528, "1315": 509, "13152": 481, "1316": 453, "1317": [454, 509], "1318": [453, 509], "1319": [94, 453], "13197": 479, "132": [474, 509], "1320": 509, "1322": 509, "13226": 528, "1323e": 480, "1324": 509, "132472": 481, "1325": 509, "1326": 509, "1328": 509, "132e": 470, "133": 509, "1331": 454, "1332": 509, "1334": [454, 509], "1337": 454, "1338": 509, "1339": 454, "133e": 468, "134": [471, 474, 481, 509], "1340": 509, "1341": [454, 509], "1342": 509, "1342a": 156, "1343": [454, 509], "1344": [498, 509], "1345": 454, "1346": 454, "1347": [454, 509], "1348": 509, "13499879586502125": 482, "135": [38, 102, 468, 498, 501, 509], "1350": 509, "13500212963": 498, "1351e": 498, "1354": 454, "135498046875": 470, "1355": 509, "1356": 509, "1357": 454, "1359316": 528, "135e": 127, "136": [498, 509], "1360": 454, "1361": [498, 509], "1362": 454, "1363": 509, "1364": 509, "1367": [454, 509], "1368": 509, "136822859087304e": 509, "1369": [400, 454], "137": [474, 482], "1372": [454, 509], "1373": 454, "1374": 454, "137443": 579, "1375": 509, "13752123871171e": 525, "1376": 454, "1376407467165896e": 490, "1377": [454, 509], "1378": 454, "1379190199428797": 317, "137990": 498, "138": [433, 468, 483, 509, 528], "1380": 509, "1381": 454, "1383": 509, "1384": 509, "138462": 595, "1386": 454, "1387": 454, "138e": 481, "139": [470, 474, 509, 515], "1390": 509, "1391": 509, "13911": 528, "1393": 509, "139388186431198e": 495, "13944023e": 500, "1395": [454, 509], "1396": [392, 471], "13960": 528, "1397": 454, "1397412321592923": 510, "1398": 509, "13e": 499, "13nan6": 468, "13th": 432, "14": [28, 65, 67, 86, 248, 275, 393, 396, 401, 404, 409, 411, 412, 413, 422, 452, 463, 464, 468, 470, 471, 474, 479, 485, 493, 495, 498, 499, 500, 501, 504, 506, 507, 508, 509, 512, 526, 528, 588, 606], "140": [509, 516], "1401": [454, 509], "1402": 509, "1403": 509, "1404": 509, "1406": 454, "1407": 509, "1408": [454, 509, 528], "141": [315, 481, 498, 509], "1410": 509, "1411180": 479, "1412": 454, "14121": 481, "1412536400000000": 528, "14149953611195087": [96, 510], "14150": 481, "1419": [400, 455], "141945": 464, "142": [35, 67, 433, 468, 498, 509, 528], "1421": [454, 509], "14210": 468, "1422": 509, "1424": 509, "1425": 509, "1426": [454, 509], "142857142857132": 485, "142e": 498, "143": 509, "1430e": 511, "1431": 509, "1432": 454, "1433": [454, 509], "1435": [454, 509], "1437": 509, "1438": [179, 509], "1438465e": 503, "1439": 509, "1439110308062257": 510, "144": [468, 507, 528], "1440": 509, "14419991": 97, "1442": 509, "1442739329466746e": 508, "1443": [454, 509], "1444": 454, "144410": 471, "1445": 406, "14457": 528, "1446": [454, 509], "1447": [454, 509], "145": [498, 509], "1451": 407, "1453": 492, "1453105388336073": 481, "1454": 509, "1456": [454, 509], "1456479e": 503, "1457": 509, "1458": 509, "146": [509, 528], "14610": 609, "1462": 509, "1464": 509, "146472": 498, "1465": 509, "1467": [138, 509], "1468": 509, "1469": 509, "147": [452, 498, 505, 509], "1470": [454, 509, 528], "1474": [454, 509], "1475": [454, 509], "1476": [454, 509], "14773": 515, "147e": 498, "148": [474, 509], "1482": 498, "1483": 509, "1484": 509, "1485314": 97, "1486415e": 503, "1489": [454, 481], "149": [470, 504, 507, 509], "1490": 509, "1492": 454, "1494": 481, "1495": 454, "1496": 509, "1499472780781963": 317, "149e": 498, "14e": [476, 497], "14msts37sst": [483, 484, 514], "14nan3": 468, "14nan5": 468, "14th": [417, 420, 432], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 153, 154, 155, 156, 157, 158, 163, 164, 165, 167, 206, 221, 382, 383, 387, 401, 409, 412, 433, 437, 442, 447, 450, 451, 452, 454, 463, 464, 468, 469, 470, 474, 477, 479, 480, 481, 483, 484, 485, 488, 492, 493, 495, 496, 498, 499, 500, 501, 504, 505, 507, 508, 509, 512, 515, 528, 551, 560, 610], "150": [133, 433, 468, 470, 483, 484, 505, 509, 528], "1500": 509, "1502": 509, "1505": 454, "15076259": 97, "151": [433, 507, 509], "1510": [140, 509], "1510240e": 503, "1513": 509, "15140": 474, "1515": [454, 509], "15154854": 97, "1517": 454, "1519": 509, "151955134028793": 482, "152": [474, 481, 509], "1521": [481, 509], "1522": 509, "1523": 483, "15246": 483, "152477": 515, "1526": 509, "1527": [454, 509], "1529": 509, "153": [492, 498, 509], "1530": [499, 509], "1531": 509, "15319": 483, "1534": 509, "1535": 509, "153600": 499, "1538": [274, 509], "154": [433, 464, 498, 509], "1541": 509, "1542": 509, "1543": 454, "1544": 509, "1545": 509, "1546": 509, "154e": 481, "155": [433, 463, 568], "1551": 509, "15518": 528, "1552": [477, 509], "1553": [498, 528], "1554": [311, 313, 454], "1554106e": 503, "1555": 509, "1556": [454, 498, 509, 528], "1556008e": 503, "1558": 454, "156": [433, 470, 471, 474, 481, 500, 507, 509], "1560": 509, "1562": 454, "15621": 528, "1563": 509, "1564": 454, "156525": 498, "1567629e": 503, "1568": 454, "157": [433, 509, 528], "1572": 509, "1573": 454, "1574": 509, "1576": 454, "1579": 509, "158": [464, 471, 479, 509], "1582": 454, "1583": 509, "1584": 509, "15848931924": 500, "1586": [94, 509], "1588": 509, "15899": 474, "159": 509, "1590": 509, "1592": 509, "1594": [454, 509], "1597317": 97, "159t": 52, "15e": 477, "15h14m00": 498, "15nan8": 468, "16": [16, 24, 53, 67, 94, 110, 111, 195, 396, 400, 409, 413, 414, 422, 438, 453, 458, 460, 461, 463, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 553, 598, 606, 607], "160": [31, 127, 433, 442, 485, 507], "1600": 484, "1600e": 465, "1602": 509, "1603": 509, "1605": 454, "16056": 474, "1606": 454, "1607": [497, 509], "1608": 509, "160e": 67, "161": [400, 470, 481, 498, 509], "1610": 509, "1610e": [465, 498], "1611": 509, "161250": 488, "1613279491744304": 510, "1616": [454, 509], "1617": 509, "1618850e": 503, "1619e": 102, "162": [67, 509], "1620": 509, "16227766": 505, "1622776601683795": [504, 505, 525], "16240": 526, "1625e": 476, "1626": 509, "1627": 509, "16287": 528, "1629219e": 503, "163": 606, "1630": [454, 528], "16303": 481, "16303044": 481, "163265306122433": 485, "1633": 509, "1634": [454, 509], "1637": 509, "1638": 509, "1639": 509, "164": [498, 509], "1640": 509, "1642": [464, 509], "1643": 509, "1644": 509, "1645": 509, "1646": 509, "1647": 509, "165": [507, 509], "1650": [509, 528], "16506": 464, "16511": 481, "16511148": 481, "1653": 509, "1656": 509, "1658": 454, "165e": 474, "166": [433, 481, 498, 509], "1660": [454, 509], "166015625": 466, "1661": 509, "1661919226690951e": 495, "1662": 509, "1665478": 97, "166776": 582, "166871893872855e": 495, "167": [433, 481, 488, 509], "1670": 509, "1671": 509, "167219": 498, "1674": 509, "1675": [454, 509], "1678": 509, "168": [498, 499, 509, 528], "1680": 509, "1681": 454, "1683": 509, "1684": 509, "1685": 454, "1686": 498, "1687": [86, 509], "168702": 464, "169": 481, "1691": 464, "1692": 509, "1694": 509, "1695": [454, 509], "1696": 454, "1697": 454, "1698": 470, "169871": 488, "1699": 509, "16th": 432, "17": [20, 21, 40, 67, 86, 396, 403, 406, 409, 442, 459, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 495, 497, 498, 499, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 607], "170": [466, 509], "1701": 509, "17016467e": 501, "1702": 454, "17020": 474, "170298": 488, "1703": 509, "1705": 509, "1706": 509, "1707": 509, "1708": 509, "171": 509, "1710": [455, 509], "1711": 454, "1712": 509, "1713": [466, 509], "1714": 509, "1715": 406, "1717": 528, "171749": 528, "1719": 509, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 285, "172": [492, 509], "17229679": 97, "1724": 509, "1725": 509, "1729": 509, "173": 498, "1731": [454, 507, 509], "1732": 498, "17320": 498, "1733": 509, "1734": 509, "1736": [474, 509], "1737": 509, "1737799900000000": 528, "174": [463, 470, 509, 568], "1740": 509, "1742": [67, 509], "174220": 575, "1743": 509, "17445": 528, "1745": 509, "1746": [454, 528], "1747": 509, "1748": [454, 507], "175": 509, "1750": 454, "1751": 454, "1753": [509, 528], "1755": [454, 509], "175565": 583, "1756": [471, 509], "1758": 509, "1759": [454, 509], "175e": 498, "176": [433, 487, 493, 498, 509], "1760": [454, 509], "1761": [454, 509], "1762": 530, "1763": [455, 498], "1764": [454, 481], "1765": 509, "1766": [455, 509], "1767": 509, "1768896e": 503, "1769": 509, "177": [433, 509, 515, 516], "1770": 509, "1771": 509, "1772": 509, "1773": 509, "1775": 509, "17776": 464, "1778279410": 500, "1779": 509, "177e": 498, "178": [453, 590], "1784": 509, "178442": 67, "1785": [454, 464], "1788": 509, "179": [463, 568], "1791": [454, 509], "1791483440634": 492, "1794": 509, "179475": 250, "1795": 509, "1796": 509, "1799": 454, "17a": [60, 498], "17e": 507, "17g": 50, "17th": 448, "18": [11, 87, 91, 206, 396, 411, 418, 439, 445, 463, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 559, 561, 565], "180": [230, 239, 242, 406, 426, 428, 433, 498, 505, 509, 610], "1800": [454, 484, 505, 509, 514], "180000": [483, 484, 514], "1801": 509, "1802": 509, "1804": 498, "180458": 479, "18046952655570045": 317, "1805": 406, "1807": 455, "1808": [454, 498, 528], "1809": 509, "181": [463, 474, 509, 568], "1810": 509, "1811": 473, "1812": [454, 509], "1813": [498, 509], "1817": 509, "1818": [454, 509], "182": 509, "182012": 559, "1821": [454, 509], "1822": [454, 509], "1823": 509, "1824": 509, "1825": 498, "18257": 474, "1827": 509, "1829": 492, "183": [470, 509], "1830": 509, "1830e": 470, "183139597": 86, "1833": 509, "1834": 466, "1835": 94, "1836": [455, 509], "1836544903987521": 510, "18367346938775508": 485, "1837": 455, "18385658": 481, "18386": 481, "18392464": 542, "184": [86, 94, 447, 451, 463, 474, 479, 483, 487, 491, 495, 506, 507], "18400002": 491, "1841": 401, "1843": 509, "1844": 509, "1845": 455, "1846": [455, 509], "18465": 528, "1849": 455, "184989894219835": 496, "185": [506, 509], "1850": 509, "1852": 509, "1854": [455, 498, 509], "1855": [455, 509], "1856": 509, "1857": 455, "1858": 509, "1859": 455, "186": [446, 481, 498, 509], "1860": 509, "1861": [455, 509], "1862": 455, "1864": 509, "186484131475074": 348, "1866": 504, "186643": 528, "187": [439, 446, 481], "1871": 455, "1872": 509, "1873": 509, "1875": 509, "1876": 509, "1877": 402, "188": [446, 463, 464, 498, 509, 526, 529], "1880": 509, "1882": 509, "1883": [455, 492], "1884": 455, "18842984749180410": 481, "1887": 509, "1888": 455, "188e": 468, "189": [470, 503, 509], "1890": [455, 509], "1891": [455, 509], "18921591": 503, "1893": 455, "1893e": [465, 498], "1894": 455, "1895": [455, 509], "1896e": 465, "1897": 509, "1898": [455, 509], "18988": 528, "1899": 509, "1899070e": 503, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 206, 396, 408, 410, 413, 433, 441, 442, 444, 456, 463, 469, 471, 473, 474, 481, 482, 487, 493, 495, 496, 498, 499, 500, 505, 507, 509, 512, 562, 563, 564, 566], "190": [498, 509], "1902": [65, 275, 588], "1903": 455, "1904": 455, "1905": 480, "1906": 509, "1907": 509, "1908": 455, "1909": 455, "190e": 470, "191": 446, "1910": 182, "1912": [455, 509], "1913": 509, "1914": 509, "1916": 509, "1917": 528, "1918": 455, "1919": [455, 509], "192": 509, "1920": [509, 528], "1921": 455, "19214093": 97, "1922": 455, "1926": 455, "1926520e": 503, "1927": 455, "1928": [498, 509], "1929": 455, "193": [463, 474, 483, 487, 509], "1930": 455, "1931": 509, "1933": [455, 509], "1934": [455, 509], "19354": 481, "1936925": 97, "1937": [455, 498, 509], "193e": 471, "194": [446, 474], "1942": 509, "1943": [311, 313, 509], "1943186": 97, "1947565": 97, "1949": 455, "195": [244, 463, 470, 509, 601], "1950": 509, "1950rspsa": 52, "1951": 434, "1953": 422, "1953830": 97, "1955810e": 503, "1958e": 501, "196": [67, 464, 507], "1960": 509, "1961": [138, 147, 509], "1962": 434, "1963": [498, 509], "19644": 515, "1965": [21, 509], "1966": 434, "1967": 509, "1969": 434, "196991563774588": 286, "197": [67, 481, 509, 515], "1970": 509, "1971": 403, "1973": 509, "19736017641361556": 482, "1975": 434, "1976": 509, "1976572e": 503, "1978": [498, 509], "1979": [299, 305, 434, 509, 604], "1979892": 481, "198": 509, "1980": [498, 509], "1981": 509, "1982": [37, 509], "1983": [509, 604], "1986": 404, "1986027": 528, "1987": 481, "19879005": 179, "1988": [139, 306, 434], "1989": 434, "199": [481, 507, 509], "1990": [36, 37, 434], "1991": [22, 434, 509], "1992": 509, "1993": 509, "19932878": 503, "1994": [434, 604], "1994a": [52, 53], "1995": [17, 297, 433, 434], "1996": [27, 474, 496, 604], "1997": [25, 509, 525], "1998": [28, 87, 91, 434, 604], "1999": [53, 200, 393, 509, 609], "19991": 525, "199999809265137": 498, "19999999999999998": 473, "1999apj": 53, "19e": 504, "19th": 432, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 110, 111, 129, 154, 155, 164, 178, 195, 197, 343, 385, 398, 402, 403, 405, 406, 407, 408, 411, 413, 414, 426, 436, 438, 439, 440, 441, 445, 447, 450, 454, 456, 457, 460, 463, 464, 466, 468, 469, 470, 472, 474, 479, 486, 487, 492, 495, 499, 501, 504, 506, 508, 509, 510, 511, 514, 515, 525, 538, 540, 542, 547, 555, 604], "1dc": [82, 83, 89, 103, 106, 110, 111, 116, 119, 120, 124, 144, 145, 151, 155, 156, 157, 166, 380, 385, 387, 400, 402, 408, 413, 435, 464, 473, 476, 479, 481, 488, 492, 493, 499, 500, 503, 507, 540], "1deg": 207, "1e": [19, 20, 26, 86, 100, 132, 133, 136, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 221, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 248, 250, 251, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 286, 299, 305, 350, 366, 368, 392, 403, 465, 468, 470, 472, 474, 477, 479, 481, 483, 484, 488, 490, 491, 492, 493, 498, 501, 508, 509, 511, 515, 516, 536, 540, 544, 570, 571, 572, 574, 577, 578, 582, 583, 585, 586, 587, 588], "1e0": 534, "1e10": [51, 156], "1e12": [534, 544], "1e2": [468, 534, 536], "1e3": [515, 544], "1e30": 580, "1e4": [501, 515, 516], "1e40": 535, "1e5": [472, 515, 536, 554, 555], "1e51": 52, "1e6": [45, 515, 532, 589], "1e7": [129, 589], "1f": 471, "1fhl": [439, 452], "1fhl_name": 71, "1h": 166, "1hicdggx": 495, "1k": [103, 110], "1kpc": 536, "1lhaaso": [57, 70, 460, 498], "1lhaaso_catalog": 57, "1rc1": 423, "1tev": [52, 53, 133, 484], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 101, 102, 103, 105, 106, 110, 111, 115, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 143, 147, 148, 149, 153, 154, 155, 156, 158, 164, 166, 169, 176, 179, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 209, 214, 217, 218, 220, 221, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 280, 281, 285, 286, 292, 294, 295, 296, 297, 298, 299, 304, 305, 311, 313, 316, 336, 338, 376, 380, 385, 387, 389, 392, 393, 396, 397, 401, 403, 404, 406, 407, 408, 409, 413, 416, 417, 418, 419, 420, 423, 430, 431, 433, 434, 435, 436, 437, 438, 445, 450, 451, 452, 453, 454, 455, 461, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 513, 514, 515, 516, 517, 525, 526, 528, 536, 539, 540, 542, 547, 548, 549, 551, 552, 554, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 604, 605, 606, 607, 608], "20": [16, 38, 83, 87, 89, 91, 103, 106, 110, 111, 157, 158, 163, 165, 167, 176, 196, 197, 199, 205, 208, 209, 214, 297, 316, 393, 396, 397, 398, 400, 405, 407, 410, 413, 418, 456, 463, 464, 465, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 490, 491, 492, 493, 495, 496, 497, 498, 501, 504, 505, 507, 508, 509, 511, 513, 514, 525, 526, 528, 530, 549, 551, 552, 553, 560, 561, 562, 565, 566, 567, 576, 579, 584, 589, 590, 606], "200": [52, 87, 91, 136, 207, 230, 417, 446, 470, 471, 474, 481, 485, 488, 498, 505, 508, 528, 606], "2000": [88, 103, 106, 110, 111, 129, 236, 241, 243, 245, 261, 268, 434, 483, 484, 485, 504, 509, 515, 528, 604], "2000000": 479, "20000000000000004": 473, "20009124": 503, "2000apj": 286, "2000e": 508, "2001": [94, 434, 474, 604], "20016392130233e": 495, "2002": [87, 91, 303, 496], "2003": [304, 496], "2004": [24, 39, 40, 86, 94, 422, 496, 509, 517], "2004aph": [83, 88], "2005": [65, 604], "200503": 464, "2005a": 498, "2006": [30, 31, 32, 33, 35, 120, 407, 474, 482, 491, 495], "200638": 528, "2006a": 286, "2006apj": 33, "2006ara": 50, "2007": [410, 604], "20072608": 503, "2008": [38, 86, 231, 282, 465, 509, 515, 530, 570], "2008aj": 38, "2009": [136, 307, 435, 474, 604], "20097159": 503, "2009851": 503, "20099855": 503, "201": [52, 492, 505, 509], "2010": [129, 156, 231, 250, 312, 393, 461, 509, 570, 604, 609], "2010a": [250, 286], "2010mnra": 156, "2011": [17, 19, 20, 21, 22, 24, 25, 26, 27, 134, 231, 311, 313, 465, 530, 570], "2012": [91, 435, 604], "2013": [102, 140, 413, 419, 424, 433, 496], "20136": [82, 317, 517], "20137": [317, 517], "2013aph": 285, "2013apj": 60, "2014": [138, 147, 432, 509, 530], "2015": [52, 86, 406, 409, 432, 515], "20151": 317, "2015apj": 61, "2015jheap": 286, "2016": [26, 406, 409, 432, 435, 496, 504, 509, 514], "2016apj": 58, "2017": [59, 231, 397, 399, 409, 413, 430, 432, 435, 481, 509, 514, 570], "2017apj": 62, "2017icrc": 514, "2018": [52, 397, 398, 399, 400, 401, 402, 403, 407, 409, 411, 413, 432, 459, 509, 514, 517, 604], "2019": [399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 432, 454, 455, 482, 604], "202": [481, 488, 509], "2020": [206, 401, 413, 414, 415, 416, 417, 432, 482, 483, 492, 505, 593, 594, 595], "2021": [63, 89, 231, 415, 417, 432, 459, 508, 509, 514, 570], "2021345e": 503, "2022": [393, 418, 419, 422, 432, 435, 509, 516], "2023": [57, 393, 404, 420, 421, 422, 432, 435, 509], "2024": [422, 432, 514], "2024e": 526, "2025": [105, 126, 412, 422, 431, 471, 476, 477, 479, 508, 525, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "2026": [404, 435], "2027": 509, "2028": 435, "203": 509, "2030": [404, 435], "2031": [435, 509], "20326": [316, 466], "20327": [316, 466], "2033": 435, "20339": 316, "2034": 435, "20343": 316, "20344": 316, "20345": 316, "20346": 316, "20349": 466, "2035": [125, 127, 435], "20350": 466, "2036": [125, 127, 509], "2037": 435, "20372": 514, "2038": 435, "2039": 435, "20396": 466, "20397": 466, "204": [463, 590], "2040": 509, "2040469e": 503, "204081632653062": 485, "2041222e": 503, "20421": 466, "20422": 466, "2045": [404, 509], "2046": 435, "2049": [435, 498, 528], "205": [446, 481, 505], "2050": 435, "20508075688775": 498, "2051": 435, "20517": 466, "20518": 466, "20519": 466, "205192": 498, "20521": 466, "2053315944536949e": 514, "205357": 498, "2054": 435, "2055": 509, "20559": 528, "2056": 509, "2057": 509, "2058705e": 503, "206": [463, 498, 509, 590], "2061": [498, 509], "2062580e": 503, "2064": [435, 509], "2064335": 97, "2065": 435, "2066": 435, "2067": 509, "2068682e": 503, "2069": [435, 509], "207": [481, 485, 507], "2070": 509, "2071": [404, 435], "2075": [421, 509], "207520865": 491, "207521165": 495, "207521465": 491, "207521627": 495, "2076": 435, "2077": [435, 509], "2079930e": 503, "207e": 474, "208": [60, 509], "2084": 509, "2085": 435, "2086": 509, "2089": [406, 437, 509], "20898": 466, "20899": 466, "209": 481, "20900": 466, "2092": 509, "2093": [435, 509], "2095": 481, "2097": 435, "2097e": 470, "2098": 435, "20deg": [483, 484], "20e": 503, "20th": 419, "20xelizl": 504, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 129, 151, 274, 395, 396, 442, 448, 457, 463, 464, 465, 474, 481, 491, 492, 494, 495, 497, 498, 503, 505, 509, 528, 555, 574, 575, 585, 606], "210": [446, 463, 498, 509, 512], "2100": 509, "2101": 509, "2103": 498, "2104": [436, 509], "2104353e": 503, "2106": 436, "2108": 436, "211": [498, 499], "2111": 436, "2112": [436, 526], "21134890398": 500, "2114": [436, 509], "2115": 436, "2116": 509, "211770556360534": 493, "2118": 436, "2119": [436, 509], "211e": 498, "212": [67, 446, 461, 463, 470, 478, 498, 509], "2120": 509, "2121": 436, "2121164e": 503, "2123": [436, 492], "21236e": 464, "2124": 436, "2126": [436, 464, 473, 476, 479, 481, 488, 492, 509, 514], "2128": 436, "2129": [406, 437], "213": 472, "2130": [436, 509], "2131": [436, 498], "2132": 436, "21325": 515, "2133": 436, "2135": 509, "2136": [405, 438], "2137": 509, "2139": 436, "214": [468, 474, 509], "2140": 436, "2141": 436, "2142": [436, 509], "2144": 509, "2145": [436, 509], "2146": [436, 509], "21464892": 528, "2149": 509, "214e": 470, "215": [67, 446, 460, 498], "21500000000003": 563, "2151": 436, "2152": 436, "21525839967018867": 482, "2153": [436, 498, 509], "2154": [436, 498], "2155": [440, 465, 491, 492, 495, 496, 498, 509, 510, 528, 570], "2157": [436, 509], "2158": 509, "2159e": 102, "215e": 498, "216": [244, 470, 492, 505, 507, 509, 600], "2160": [436, 509], "2161": 509, "2162670e": 503, "216273": 577, "2163": 436, "2164425e": 503, "2166": [436, 509], "2169": [436, 509], "217": [470, 498], "2171": 436, "21731921e": 505, "21733761e": 505, "21735587e": 505, "2174": 509, "2176": 509, "2177": 509, "218": [61, 509], "2180": 509, "2185": 509, "2188": 509, "219": [463, 568], "2190": [410, 509], "2192": 437, "2194": 509, "2197": [481, 509], "2198": 509, "2199": 509, "219e": 492, "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 103, 106, 110, 111, 136, 171, 176, 179, 194, 195, 204, 207, 396, 432, 445, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 539, 546, 549, 551, 552, 555, 577, 580], "220": [463, 498, 507, 509, 590, 606, 607], "2200": 437, "2201": [65, 274, 498, 528, 587], "2202e": 528, "2204": [437, 509], "2206": 437, "2208": 509, "2209": 509, "220e": 498, "221": [406, 446], "2210": 509, "2211": 509, "2212": 509, "2213": 509, "22149": 474, "2215": 509, "2216": 412, "2217": [437, 509], "2217412e": 503, "2218": [409, 438, 509], "2219": [408, 438, 509], "222": [58, 463, 479, 498, 507, 509, 590], "2220": 509, "2221": 498, "22245374e": 127, "2225": 509, "2226": 509, "2227134679628": 492, "22271346796282": 492, "222713467962826": 492, "2229": [405, 437], "223": [463, 507, 509, 590], "2230": [437, 509], "2231": 498, "2232": 509, "2235": 437, "2236": 509, "2237": [437, 509, 528], "2238": 437, "2239": 437, "224": [463, 590], "2240": 437, "2243": 437, "2244": 437, "224436": 528, "2246": 509, "225": [96, 316, 317, 417, 446, 477, 498], "2250": [437, 509], "22500": 477, "2254": 437, "2255": [410, 509, 510], "225575051666": 498, "2255890": [491, 495, 510], "2256": 509, "2257": 437, "2258": 509, "2259": 437, "226": [477, 481, 509, 515], "2260": 509, "22608": 499, "2262": 437, "2263": 509, "22635141851205703": 501, "2264": [404, 437], "22646134620907912": 501, "2264827221149211": 501, "22648882813333465": 501, "22651631005759018": 501, "2266": 509, "22662623775461227": 501, "2269": 509, "227": [463, 590], "2270": 409, "2271": 509, "2272": 437, "2273": 509, "2274": [411, 438, 464], "2275": 509, "2276": [437, 509], "2277": 437, "2278": 437, "22788666362099286": 501, "2279": [409, 438, 509], "227e": 498, "228": [299, 305, 400, 406, 463, 471, 477, 498, 504, 517, 568], "2280": 509, "2281": 509, "2287": 437, "2289": 437, "229": [67, 498, 509], "2290": 411, "2292": [438, 509], "2294": 437, "2295": 509, "2296": [437, 509], "2297": 437, "22974080e": 515, "2298": 437, "22e": 504, "22nd": 432, "23": [77, 94, 179, 392, 396, 419, 432, 456, 463, 466, 470, 471, 472, 474, 480, 483, 487, 492, 495, 498, 501, 505, 507, 509, 510, 519, 528, 551, 579, 584], "230": [446, 474], "2300": 437, "2304": 410, "2305": 437, "230542e": 498, "2307": [64, 65, 509], "2308": [438, 509], "2309": 509, "231": [446, 509], "2310": 437, "2311": 509, "2312": 509, "2313": 438, "2314": 438, "2315": 509, "2319": 509, "232": [62, 509], "2320": [438, 498, 499], "2321": 438, "2322": 509, "2323": 438, "2326": 438, "2327": [498, 507], "23273": 515, "2328": 509, "233": 471, "2330": 438, "23306": 474, "2332": 507, "2333": 509, "2334": [438, 509], "2335": 438, "2338": 438, "2339": [466, 498, 528], "234": [446, 493, 509], "2341": 509, "234132519034915": 505, "23413252": 505, "2342": [438, 509], "2343": 438, "234359264373779": 504, "2343e": 507, "2344": 438, "2345": [438, 509], "2346": [438, 509], "2347": [438, 509], "235": [446, 463, 494, 495, 509], "2350": 439, "2351": 438, "2352": 509, "23523": [149, 176, 214, 430, 470, 471, 480, 490, 499, 501, 504, 513, 517, 525, 526, 539, 542, 605], "23526": [149, 214, 470, 471, 480, 490, 499, 501, 504, 509, 513, 525, 526, 605], "2353": 509, "2354": 438, "23559": [470, 471, 490, 499, 504, 509, 525, 526, 549, 551, 552, 605], "2356": 438, "2357": 507, "2358": [438, 509], "2359": [438, 509], "23592": [470, 471, 490, 499, 504, 509, 525, 526, 549, 551, 552, 605], "236": [446, 498, 509], "2360": 438, "2362": 509, "2362506e": 503, "23628": 515, "2364": 509, "2365": 438, "2366": 438, "2367": 438, "2368": 438, "237": [464, 509], "2371": 509, "2372": 509, "23734": 528, "2374": 509, "2375": 438, "2377": 438, "2378": [438, 509], "2379": 438, "238": 509, "2380": 509, "2381": 438, "238298": 464, "2383": 509, "2384": 464, "2385": 438, "2386": 509, "2389": 509, "239": [67, 463, 481, 590], "23905561": 503, "2392": 509, "2394": 509, "239439": 528, "239557414": 83, "239557417": 86, "239559565": 83, "2399": 498, "239e": 498, "23a": 61, "23rd": 412, "24": [25, 27, 52, 53, 86, 87, 91, 94, 395, 396, 409, 414, 449, 454, 464, 471, 474, 492, 495, 498, 499, 505, 507, 509, 514, 515, 525, 551, 570, 573, 577, 586, 587, 588], "240": [103, 106, 110, 111, 124, 498, 499, 500, 509, 540], "2400": 438, "2401": 438, "2404": 438, "2405": 439, "2407": 509, "240e": 470, "241": [498, 509], "2411": 509, "2412": [438, 509], "2413": 509, "2414": 498, "2417": 509, "2419": [464, 509], "2426": 509, "2428255": 500, "242835": 67, "2429": 509, "243": [463, 470, 500, 512], "2430": 509, "2431": 498, "2432": 474, "2433": 439, "2435": 439, "243745080459877e": 495, "2439": 509, "244": [67, 446, 470], "2440": 498, "2441": 439, "244140625": 507, "2443672e": 503, "2444": 439, "2446": [439, 507, 509], "2447": 412, "2448": [439, 509], "244897959183646": 485, "2449": 439, "245": 446, "2450": [439, 507, 509], "245152": 481, "2452": [412, 509], "2454": 439, "2455": [439, 509], "24579": 500, "2458": 412, "2459": [439, 509], "246": [446, 500], "2461": [439, 509], "24611324074": 498, "2463": [413, 439], "2464": 439, "2465055e": 503, "2467": 509, "2468": [439, 509], "24685677e": 503, "247": [67, 446, 509], "2470": [439, 509], "2471": 509, "2471938975366008": 316, "2472": 439, "2473": 509, "2475": 439, "2476": 439, "2477": 439, "2478": 439, "2479": [439, 526], "248": 446, "2481": 439, "248122": 498, "2483": 439, "2484": 509, "2485": 525, "2486": 439, "2487": 509, "249": 446, "2490": [439, 509], "2491": [439, 509], "2492": 439, "2493": 439, "2496": 439, "24968": 464, "2497": 439, "2498": [439, 509], "2499": [439, 509], "249965667724609": 504, "24e": [498, 507], "25": [33, 52, 87, 91, 102, 144, 155, 166, 179, 299, 305, 396, 409, 417, 432, 453, 460, 461, 463, 464, 465, 469, 470, 471, 474, 479, 481, 492, 493, 495, 498, 503, 505, 507, 508, 509, 512, 528, 561, 566, 572, 583, 588], "250": [463, 505, 511, 512, 604], "2500": 509, "2501": 439, "250185": 504, "2502": [439, 481], "2503": 509, "2505": 439, "2505121": 97, "2505703": 493, "2508": 509, "2509": [498, 509], "251": [474, 479], "2510": 439, "251185": 528, "2511884200000000": 528, "2511886431": 500, "2513": 509, "2514": 509, "25162e": 464, "2518": [498, 509], "251932": 498, "252": [446, 481, 498], "2520": 439, "2521": 439, "2523": [439, 509], "2524": 509, "2525": [439, 509], "2528": 439, "2529": 509, "253": [473, 507], "2535": 439, "2536": [439, 507, 509], "2537": 507, "2538": 439, "254": 446, "2540": [439, 509], "2544": 509, "2546": 439, "2549": 509, "25496": 528, "255": 509, "2551": 439, "2552": [439, 498], "2553": 439, "2555": 414, "2557": 439, "255750516626": 498, "2558": 439, "2559": 439, "256": [67, 449, 509], "2560": 509, "2560538e": 503, "2561": [439, 509], "2562": 439, "2563": 439, "2564": 439, "2565": 509, "2566": 509, "2567": [439, 509], "2568710837134529": 482, "257": [463, 473, 509, 568], "2573": 509, "2574": 439, "25743552e": 501, "25763": 474, "257642": 498, "2579999": 514, "258": [473, 509, 567], "2580": 439, "2581": 509, "2582": 509, "25823909e": 500, "2583": 509, "2585": 439, "2587": 439, "2589254117941673": 525, "259": [473, 528], "2591e": [465, 498], "2594": [439, 509], "2595": [439, 509], "2595e": 479, "2598": 509, "259e": 474, "25e": 507, "25t_": 53, "25th": 419, "26": [19, 87, 91, 396, 432, 460, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 530, 578, 580, 581, 599], "260": [449, 528], "2600": 509, "2601": 509, "2602": 509, "2604": 439, "2606": 509, "2607": 509, "2609": 507, "261": [449, 509, 528], "2613": 509, "2614": 509, "2616": [439, 509], "26173": 474, "2618": 509, "2619": [439, 509], "262": [449, 474, 507, 509, 528], "2620": 439, "2623": 509, "2625": 509, "26255414786544": 525, "26258181596485647": 501, "2626": 509, "2627": [439, 509], "262728": 514, "26272868097919794": 510, "2628": 509, "2628525e": 503, "263": [474, 507, 509], "2633e": 480, "2635": 439, "2635108e": 503, "2637": 439, "2639554729438709": 510, "264": [449, 481], "2640": 509, "2641": 509, "2643": 509, "2644": 509, "2645": 439, "2646": 509, "26475": 477, "2648150": 97, "2649e": 501, "265": [32, 406, 464, 474, 481, 507, 509, 528], "2651": [439, 509], "265306122448973": 485, "2654": [439, 509], "2655": 509, "2657": 509, "266": [406, 463, 473, 474, 481, 483, 488, 490, 494, 505, 507, 525, 528], "2660": [439, 509], "2661": 509, "266192": 464, "2663": 509, "2664": 509, "2666": 509, "26665050077722524": 510, "266673": 581, "2667": 440, "267": [67, 473, 474, 481, 485, 507, 509, 514], "267153": 479, "2672": 440, "2673": 440, "26739753": 97, "2674": 440, "2676": 509, "2678": 509, "268": [419, 474, 481, 498, 507, 509, 528], "2681": 440, "2683": 509, "2684": [440, 509], "2685": 440, "2686": 509, "268663733018811": 510, "2687": 440, "2688": 509, "26883694": 528, "26887783978974283": 510, "2689": 481, "269": 528, "2692": [440, 509], "2693": 509, "269385": 498, "2694": 509, "269627": 514, "2697": [440, 509], "2699878e": 503, "26a": [50, 52, 53, 250, 286, 498], "26e": [498, 507], "26th": [415, 432], "27": [396, 398, 460, 463, 470, 471, 474, 481, 495, 499, 501, 509, 512, 528, 571, 576, 606], "270": [466, 474, 498, 507, 509, 528], "2702": 509, "2703": 440, "2704": 509, "2705": 440, "27057337686547633": 510, "2706": 509, "2707": 440, "2708": [250, 509], "2709": 440, "27093776e": 503, "270d": 610, "271": [470, 473, 474, 479, 528], "2711": 440, "2712": [440, 509], "2713": 440, "2715": 440, "271777777777796": 466, "27177778": 94, "2718": 440, "2719": [440, 509], "272": [473, 474, 498, 507], "2720": [414, 441], "27209": 528, "2722": 509, "2723": [440, 509], "2724": 509, "2725": 440, "2726": 440, "2726e": 528, "2727": [440, 509], "2727693": 514, "2727e": 470, "2728": 440, "2729": [440, 509], "273": [83, 449, 463, 468, 474, 528, 590], "2730": 440, "2731": 440, "2733": 440, "2734": 127, "2735": 440, "2736": 509, "2737": [440, 509], "2738": 440, "2739": [440, 509], "274": 505, "27409496735322464": 510, "2741": 440, "2742": 440, "2743": [440, 509], "2745": 509, "2746": 440, "2747": 440, "27473": 481, "2748": 509, "2749": 509, "275": [473, 498, 599], "2750": 440, "2751": 440, "2752": 440, "275203": 479, "2753": 440, "2754": 509, "2755": 440, "2756": 440, "2759": 441, "276": [449, 509], "2761": 441, "2762": 441, "2764": 441, "2765": [441, 509], "2766": 509, "2767": [441, 509], "2768": 441, "277": [473, 509], "2771": 441, "2772": [441, 509], "27727": 507, "2775": 441, "277522361013748": 482, "2776": 441, "2777": 441, "2777074437073429": 510, "2778": 441, "2779": [441, 509], "278": [449, 473, 488, 498, 507, 509], "2780": 509, "2781": 441, "2782": 441, "2783": 441, "2784": 441, "2785": [441, 509], "2785e": 470, "2786": 509, "2787": [441, 509], "2788": [441, 509], "2789": 441, "278e": 474, "279": 449, "2790": [441, 509], "2791": 441, "2792": [441, 509], "2793": 441, "2794": 441, "2796": 441, "2797": 441, "2798": [441, 509], "2799": 441, "27_theorem": [311, 313], "27e": 498, "27t20": 89, "28": [21, 24, 67, 94, 401, 432, 463, 468, 470, 472, 473, 474, 481, 483, 485, 487, 488, 495, 497, 498, 504, 505, 507, 509, 512, 514, 525, 528, 529, 586, 587, 589], "280": [67, 449, 463, 470, 473, 505], "2800": [483, 507, 528], "2801": 441, "2802": 441, "2803": 441, "2804": 441, "2805": 441, "2807": 509, "2808": [441, 509], "2809": [441, 509], "281": [473, 498], "2810": 441, "2811": 441, "28118133544922": 498, "2812": 441, "28120079": 498, "2815": [441, 509], "2816": [441, 507, 509], "2817": 441, "2818": [441, 509], "2818047723094509": 510, "28183829312": 500, "282": 509, "2820": 441, "2822": [441, 507], "2823": 441, "2825456e": 503, "2827": 441, "28275990e": 500, "2827988e": 503, "2828": 441, "2829": 441, "282952714500289e": 495, "282e": 498, "283": [449, 473], "2831": 509, "2832": 441, "283218": 464, "283487": 498, "2837": 441, "28382603": 503, "2838398": 514, "28385358839966657": 510, "2839": 441, "284": [473, 498, 509, 609], "2841": [441, 509], "2842": [441, 509], "28429": 481, "2843": 509, "2845": 441, "2846": [441, 481], "2849": 509, "285": [449, 473], "2851": 509, "2852": 507, "285714285714286": 485, "2859229": 500, "285f": [83, 88], "286": [449, 463, 473, 500, 590], "2861432787940619": 510, "2868": 509, "286e": [474, 498], "287": [52, 53], "2870": 509, "2872": [442, 509], "28720322": 97, "2874": [442, 528], "28755283551095173": 510, "2877": 509, "2878662980210884": 317, "288": 127, "2880470e": 503, "2885": 442, "2887": 509, "2889": 509, "288e": 468, "289": [449, 473], "28905": 515, "2891": 442, "2892": 509, "28958": 474, "2896": 442, "2897": 442, "289e": 492, "28e": [103, 468, 479, 481, 499, 515], "29": [67, 280, 407, 418, 422, 432, 460, 463, 464, 468, 471, 473, 474, 481, 488, 491, 492, 494, 495, 498, 500, 505, 507, 508, 509, 512, 514, 528, 582, 596, 598, 599], "290": [450, 473, 482, 492, 500], "2900": 507, "290098": 500, "2901": 509, "2902": 509, "2903": [442, 507], "2903e": 472, "2907": 442, "291": [449, 485, 509], "2910": 509, "2911": 509, "2912": 442, "29170324": 499, "291e": 528, "292": 509, "2922477": 97, "2923273215208544e": 495, "2924": 442, "2924e": 511, "2927": 442, "2928": 509, "2929": 442, "293": [473, 488], "2930": 498, "2931": 442, "2932": 442, "29355238360800506": 510, "2938": 442, "2939": 442, "294": 509, "2942": 415, "2943": 442, "2944": [416, 442], "2945": [442, 509], "2946": 509, "2947": 442, "2948": [442, 509], "2949": 509, "295": [449, 509], "2950": 442, "2951": 442, "2952": 509, "2953": 481, "2956": 442, "29585273e": 515, "2959": 507, "295e": 498, "296": 449, "2962": 509, "2965": 442, "2966": [442, 509], "2967": 442, "297": [464, 509], "2971e": 498, "2972": 509, "2973": 509, "2974": 442, "2976": 442, "2978e": 465, "2979": 509, "298": [463, 473, 481, 492, 498, 507, 512], "2981": 442, "2982": 509, "2984": [442, 509], "29882214027996945": 510, "299": [449, 473, 498], "2990": 442, "2991": 442, "2992": [442, 509], "2993": [442, 509], "2995484265169": 496, "2996": 528, "2998": 442, "2999": [442, 498], "299940468335294": 481, "299995937905366": 481, "299e": 498, "299t": 53, "29t20": [491, 495], "29t21": 495, "29t22": 495, "29t23": 495, "29th": 432, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 144, 145, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 176, 186, 187, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 239, 385, 398, 403, 408, 411, 413, 414, 426, 434, 440, 453, 454, 455, 463, 474, 477, 478, 481, 505, 506, 528, 538, 541, 552, 553, 554, 567], "2degx2deg": 483, "2e": [201, 464, 466, 468, 483, 484, 488, 495, 498, 501, 507, 509], "2e3": [201, 505], "2e6": 515, "2eivxtnm": 495, "2f": [381, 464, 471, 510, 526, 607], "2fhl": [58, 71, 439, 451, 452, 498, 528, 537], "2hwc": [59, 72, 439, 445, 453, 498, 537], "2k": [103, 110], "2m": [250, 286], "2nd": [60, 418], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 461, 498], "2pc_catalog_v04": 60, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 77, 80, 83, 85, 86, 87, 91, 94, 96, 101, 103, 106, 110, 111, 112, 117, 120, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 179, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 218, 220, 239, 242, 251, 274, 280, 282, 285, 286, 294, 297, 298, 303, 311, 313, 316, 317, 338, 347, 368, 380, 385, 387, 389, 392, 393, 395, 396, 398, 403, 404, 406, 407, 408, 409, 411, 417, 418, 419, 423, 425, 430, 433, 434, 435, 437, 438, 443, 445, 447, 450, 451, 452, 453, 454, 455, 456, 458, 459, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 517, 525, 526, 528, 529, 530, 532, 535, 536, 539, 540, 544, 546, 548, 549, 551, 552, 555, 560, 562, 563, 565, 566, 570, 575, 576, 578, 579, 580, 581, 583, 584, 587, 589, 594, 595, 599, 603, 604, 606, 607, 610], "30": [24, 52, 67, 83, 96, 103, 113, 114, 156, 195, 316, 317, 399, 400, 405, 413, 420, 432, 434, 464, 465, 466, 470, 471, 474, 476, 481, 484, 488, 491, 492, 493, 494, 495, 498, 499, 501, 505, 507, 508, 509, 510, 511, 514, 515, 528, 540, 546, 551, 552, 560, 561, 576, 579, 580, 581, 584, 589, 592, 593, 594, 595], "300": [74, 87, 91, 473, 476, 480, 483, 484, 488, 492, 498, 509, 515], "3000": [402, 498, 554], "30000": 498, "3000000": 589, "30000000": 589, "3000020211954284": 481, "3000_100000_wtct": 77, "3000e": 465, "3001": 442, "30015e": 464, "3002": 442, "3003": 507, "3004625872247901": 480, "3005": 442, "3006": 528, "3006942": 97, "3007": 442, "300_1000_wtct": 77, "301": [449, 473, 509], "3010": 509, "3011061699260256": 510, "3012": 442, "3013": 498, "3014": 509, "301668796295": 498, "302": [473, 509], "3020791585772495": 316, "3025": 509, "3026": 509, "30287": 474, "3028e": 507, "302e": 498, "303": [470, 473, 498], "3030": [442, 509], "3032": 442, "3034": 498, "3035": 442, "3036": 509, "3037": 442, "3037632e": 503, "3038": [442, 528], "3039": [442, 509], "304": [465, 491, 492, 495, 496, 498, 510, 528, 570], "3041": 442, "3042": 442, "3043": [507, 509], "3045": 442, "3046875": [499, 507], "3049664466089965": 317, "304_steadi": 465, "305": [67, 473, 492], "3051": 442, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 442, "3053": 442, "30535345877453707": 510, "3054": 442, "3055487448271073": 482, "3058": 442, "3058422e": 503, "305e": 498, "306": [449, 509, 606], "3060": 442, "3061": 509, "3061224489795924": 485, "306196370000000": 528, "3063": 442, "3069": 442, "306e": 498, "307": 473, "3070": 442, "3071": 498, "3072": 442, "3073": 509, "3074": [442, 509], "3075": 417, "3076": 442, "3077": 509, "307e": 498, "308": [473, 481, 492, 509, 563], "3080": 442, "3081": 442, "3083": 442, "3085": 442, "3086": [442, 509], "3088": 442, "3089": 442, "309": [463, 519], "3091": [442, 509], "3092": 442, "30997": 528, "30a": 286, "30d00m00": 420, "30e": [465, 503, 507], "30t00": 495, "30t01": 495, "30t02": 495, "30th": 404, "31": [401, 402, 416, 417, 430, 457, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 597, 600], "3100": [442, 509], "3106": 442, "31067517": 498, "3107": [498, 528], "311": [485, 563, 607], "3110": 443, "3111": 443, "3112": 443, "3113": 443, "31139055e": 501, "3114": [443, 509], "311489174710791e": 528, "3116": 443, "3117": 509, "3117988e": 503, "3118": 509, "31186857659616535": 510, "3119611261122878": 510, "312": 449, "3122": 444, "3123": 444, "3124": 444, "3125": 444, "3126": 444, "3127": 444, "3129": 444, "313": [473, 480, 509], "3130": 444, "3131": [445, 507], "3134": 509, "3135914081482271": 510, "3136": 445, "3137": 509, "313714614138": 499, "3138": 445, "314": 454, "3140": 445, "3141": 445, "3145": 445, "3147": 509, "3148": 445, "315": [412, 498, 509], "3152": 445, "3153": 445, "3154": 509, "3155": [445, 509], "3157": 509, "315767532000283": 525, "3158": 445, "316": [473, 509, 515, 516], "3162": 445, "316227": 498, "316227766016838": 504, "3165": 445, "3166": 509, "3168": [445, 509], "3169": [445, 509], "317": [449, 473], "3173": [445, 509], "3177": 509, "3178": 445, "317a": 286, "317e": [465, 498], "318": [412, 449], "3180": [445, 509], "3182": 445, "3184": 509, "3185": 445, "3189697265625": 470, "319": [450, 485, 509, 515], "3191": 445, "319398": 600, "3195": [509, 528], "3197": 445, "319725": 514, "3198": 509, "3199": 445, "32": [83, 195, 470, 474, 477, 495, 504, 505, 509, 528], "320": [103, 106, 110, 111, 124, 412, 498, 499, 500, 507, 509, 540], "3202": 445, "3203": 509, "3207": 445, "3208": 445, "3209": 509, "32095": 528, "321": 485, "3210": 509, "3211": 445, "3214": 509, "3215": 509, "3216": 445, "3217": 445, "3219": 445, "322": [473, 485], "3222": 445, "3225": 509, "3228": [445, 509], "3229": [481, 509], "323": [463, 473, 492, 590], "3230": 445, "3232": 509, "3232943": 358, "3233356": 358, "3237": 509, "32377509405904137": 96, "3237948931463171": 510, "3238": [445, 509], "3241": 445, "3243": 445, "3246": [445, 509], "32465247": 508, "325": 509, "3254": 445, "3257": 445, "3258": [445, 509], "3259": 509, "325e": 471, "326": [449, 463, 590], "3262": 445, "3265": 509, "326530612244888": 485, "32684": 528, "32684833": 514, "327": [481, 509], "3272": 445, "3273": 509, "3276": [445, 509], "3277": 445, "3278": [445, 509], "3279": [445, 509], "3279955e": 503, "328": [463, 481, 485, 509, 590], "3281": 445, "3283": 445, "3284": 445, "32843": 528, "32847": 464, "3285": 445, "329": [96, 316, 317, 463, 482, 487, 491, 495, 498, 510, 542, 568], "3290": 509, "3291": 509, "3293": 445, "3299": 498, "329e": [470, 498], "33": [495, 496, 497, 501, 505, 509, 525, 528, 542], "330": [450, 473, 507, 509], "3301": 445, "33013e": 464, "3302": [445, 509], "3302565e": 503, "3303": 445, "330376": 67, "3304": 445, "3305": 445, "330505": 514, "33055e": 464, "3306": 445, "3307": 445, "3308": 445, "3309": [445, 509], "3310": 445, "3312": 509, "3314": 445, "33164865722698683": 510, "3319": 445, "3319831545301117": 316, "332": [67, 450], "3320": 445, "3323": [445, 499], "332525": 498, "3328": [445, 509], "332e": [474, 481], "332f": 33, "333": [492, 509], "3330487": 97, "3331": 528, "3331761": 97, "3332": 509, "3333": [445, 509], "33333333": 392, "3335": 445, "33368e": 464, "3337": 445, "3338": 445, "334": [127, 509, 515], "3342": 445, "3343": 445, "3346": 445, "3347": 445, "33484": 464, "3349": 445, "3349654391": 500, "334e": 498, "335": [450, 509], "3353": 445, "3357": 445, "3358": 445, "335e": 468, "336": [498, 509], "3363": 445, "3364": 509, "3364130e": 503, "336444e": 498, "336606": 464, "3367": 509, "3368855e": 503, "3369": 445, "337": [450, 473, 509], "3373": 509, "3374": 445, "3377": 445, "33787": [96, 510], "33788": [96, 510], "33789": [96, 510], "3379": 445, "33790": 510, "33791": 510, "33792": 510, "33793": 510, "33794": 510, "33795": 510, "33796": 510, "33797": 510, "33798": 510, "33799": 510, "338": [450, 498], "33800": 510, "33800122": 97, "33801": 510, "3380311e": 503, "3381": 445, "3383": 509, "3388": 509, "339": [450, 470], "3390": 445, "3391": 509, "3392": [445, 509], "3393": 445, "3395": [445, 509], "3397": 445, "339835555384604": 510, "3398360": 503, "33983991887701287": 96, "3399": 445, "33e": [477, 493], "34": [52, 53, 67, 433, 463, 464, 481, 491, 495, 499, 505, 507, 509, 528], "34005": 464, "3402": 445, "3403": 445, "340391": 528, "3404": 445, "34047": 464, "3406": 445, "3409": [94, 445], "341": 464, "3413": 445, "3414": 509, "3416": 445, "3418": 445, "342": 450, "3420": 445, "3423": 445, "3425": 509, "3426": 445, "3428": 445, "3434": 445, "3438": 445, "3439": 445, "343e": 468, "344": [485, 498, 509], "344238": 528, "3443842": 514, "3445": 445, "3446": 445, "3447": 445, "3449": 445, "344e": 67, "345": [463, 464, 485, 487, 507, 590], "3453": 445, "3454": 445, "345692": 528, "3457": 509, "3458": 445, "346": [412, 507], "34613054105945": 482, "346488e": 498, "3466": 445, "3468": 445, "34693877551019": 485, "347": [450, 466], "3471": 445, "3474": 445, "348": [450, 470, 509], "3480": 445, "3481e": 479, "3486": 509, "3488": 445, "3489": 509, "348e": [67, 498], "3490": 509, "3491": [445, 474], "349530550364513": 501, "349530725238324": 501, "349530739434762": 501, "34953075814257": 501, "349530774637106": 501, "349530793294022": 501, "349530807499818": 501, "349535814771492": 501, "349536722980144": 501, "34953715852974": 501, "349537804335895": 501, "34953807800248": 501, "349538946234787": 501, "349539326364486": 501, "349541972204694": 501, "349559366767238": 501, "349655": 500, "349711555166778": 501, "349724385715966": 501, "3499075e": 503, "349e": 474, "34e": [498, 507], "35": [67, 409, 417, 430, 470, 491, 495, 498, 501, 509, 511, 514], "350": [485, 493, 500], "3500": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "350105": 481, "3502": 498, "350292033852874": 501, "3503706026275275": 510, "3504": 528, "35050396342807": 501, "35053891085894": 501, "351": [450, 498, 528], "351173": 592, "3514e": 526, "3515": 445, "351d": 485, "352": [450, 498], "3521": 466, "3523": 445, "352354": 567, "3529": 445, "353": [450, 528], "3532": 509, "3533": 509, "3535": 447, "3535924566679284e": 525, "3536": 464, "353e": 481, "354": 509, "3541": 509, "3544": 445, "355": 509, "35569283": 503, "355804": 528, "3559": [445, 509], "356": [463, 493, 494, 528], "3561": 445, "3568": 445, "357": [485, 498, 528], "35722435185": 498, "3576e": 466, "3578": 509, "3579": 509, "358": [481, 498, 528], "3582": 509, "3583": 481, "3584": 445, "359": [450, 481, 498, 528], "3590188e": 503, "3592": [445, 509], "3599": 483, "359e": 528, "36": [67, 86, 151, 336, 466, 481, 483, 487, 498, 499, 503, 509, 528], "360": [406, 505, 509, 530], "3600": [473, 483, 484, 505], "36014": 479, "36073833513766157": 510, "361": [67, 450, 485, 509], "3614": 509, "3618": 509, "3619e": 526, "3620": 509, "3621": 509, "36228879": 528, "36273": 528, "3629": 509, "363472509034498": 510, "3636": 509, "3639946": 493, "364": 450, "3645": 509, "3647": 509, "365": 509, "3652": 509, "3655": 509, "3656": 509, "3659": 509, "3659253e": 503, "366": [500, 509, 526], "3663": 509, "366486": 500, "36669663417038234": 510, "3669": 447, "367": [450, 507, 509], "36734693877551017": 485, "36747222e": 500, "3674884": 498, "3678": 509, "368": [485, 509], "36834038301420274": 510, "368346217294295": 96, "3684": [447, 509], "3689322e": 503, "369": 450, "3690": [509, 528], "3699": 447, "36e": [497, 498], "37": [464, 465, 471, 473, 477, 500, 501, 509, 515, 607], "370": [498, 507], "3700": 509, "3701": 509, "370579": 562, "371": [450, 509], "3710784e": 503, "3712": 447, "3713": 447, "3715810e": 503, "3718745": 97, "372": [127, 528], "3720": 447, "3722": 447, "3728": 447, "373": 481, "3733": 447, "3734": 509, "3735": 509, "3736": 509, "373907718050568e": 495, "3739292e": 503, "374": [485, 509], "3740": 447, "37455141": 528, "3746": 509, "3748": 447, "3749": 509, "375": [450, 505], "3750": 481, "37506": 528, "37517": 474, "3752": 447, "375398869283": 492, "3755": 509, "3759377929871826": 510, "376": [67, 463, 469, 509], "3760": 447, "3761": 447, "3765": [464, 509], "3768": 509, "377": 509, "3771": 509, "3772": 509, "3777": 447, "37773": 474, "3778": 509, "3779": 528, "3783": 447, "3786": 509, "379": [450, 470], "3792": 507, "3796": 447, "3797": 447, "38": [22, 67, 83, 464, 466, 473, 478, 498, 505, 507, 509, 528, 589], "380": 509, "3800": 509, "3802": 447, "3804": 447, "3806": 447, "381": 507, "3810": [447, 509], "3812": [498, 528], "3812120e": 503, "3812160e": 503, "3814": 509, "38143003": 97, "3817": [447, 509], "3829": 528, "382e": 470, "383": [67, 450, 498, 505], "3830": 509, "3833": 447, "3837": 447, "383e": 67, "384": 500, "3840": 509, "3841385": 500, "3842": 447, "3846": 447, "3847": [274, 509], "3848": 509, "3848912826152664e": 528, "385": [485, 509], "3851": 509, "3856": 447, "385e": 492, "386": [485, 509], "3860": 447, "3862": 456, "387": [450, 509, 528], "3872": 498, "3873": [447, 509], "3874": 447, "3876": 447, "387755102040817": 485, "387834": 528, "388": [509, 567], "3881": 509, "388405": 528, "3885947175689592": 510, "3886270e": 503, "3887": 447, "389": 397, "3892": 447, "3895": 447, "3898": 447, "389e": 528, "39": [17, 18, 21, 22, 24, 25, 27, 59, 497, 498, 505, 509, 515, 567, 589], "390": [445, 485, 509], "3903": 509, "3904": 447, "39042": 86, "3905": 447, "3906": 447, "391": 498, "3915": 447, "3918": 447, "392": [450, 471, 509], "39224": 474, "3924": 509, "3925": 456, "3927": 509, "393": [210, 211, 509], "3931": 509, "3933": 447, "3934": 509, "3935": 466, "3936": 447, "3937": 509, "394": [450, 509], "3941": 447, "3945": [466, 498], "3947637541758": 492, "394767169890468": 525, "3948": 448, "395": 450, "3950": [418, 456], "395004": 528, "3956": 456, "3959": 448, "396": 450, "3962942e": 503, "3966": 448, "39666267e": 495, "397": [470, 509], "3970": 419, "3970355304768176e": 495, "39728": 528, "3975": 448, "3979": [448, 605], "397918129147546": [430, 605], "39791813": [430, 605], "398": [450, 477, 479, 509], "3981": 528, "39810717055": 500, "3981075200000000": 528, "3983": 448, "3986": 448, "3987": 448, "3988": 448, "398e": 498, "399": [463, 480, 487], "3990": 448, "399776": 570, "39e": 498, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 151, 157, 164, 165, 167, 176, 189, 289, 291, 398, 401, 402, 403, 407, 408, 411, 413, 414, 426, 434, 435, 436, 438, 439, 440, 441, 452, 453, 454, 461, 463, 464, 465, 468, 470, 471, 474, 476, 477, 481, 482, 483, 484, 485, 487, 491, 492, 495, 499, 501, 503, 504, 505, 506, 507, 508, 510, 514, 515, 516, 525, 526, 538, 540, 541, 542, 547, 549, 554, 602, 604], "3d33m15": 67, "3dataset": 480, "3e": [20, 127, 133, 481, 484, 490, 493, 495, 498, 507, 509], "3e4": 515, "3e5": 515, "3e6": 589, "3e7": 589, "3f": [127, 482, 606, 607], "3fgl": [61, 67, 74, 233, 273, 416, 446, 449, 451, 452, 453, 463, 468, 498, 508, 528, 537, 556, 569, 590], "3fgl_name": 71, "3fhl": [62, 75, 86, 129, 131, 136, 229, 253, 292, 413, 452, 453, 468, 474, 483, 485, 498, 505, 506, 507, 508, 515, 528, 537, 539], "3fhl_data_fermi": 480, "3fhl_dataset": [292, 480, 506], "3fhl_model": [292, 480, 507], "3g": [497, 498], "3hwc": [63, 76, 445, 456, 498, 537], "3ml": [410, 515], "3pc": [64, 69, 77, 461, 498], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 102, 103, 106, 110, 111, 116, 119, 130, 136, 148, 153, 156, 164, 176, 179, 195, 196, 197, 198, 199, 200, 205, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 244, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 285, 292, 293, 336, 379, 392, 393, 395, 396, 404, 406, 409, 413, 417, 418, 430, 433, 442, 444, 445, 446, 449, 451, 452, 455, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 519, 525, 526, 528, 530, 535, 536, 537, 551, 554, 555, 560, 561, 564, 570, 575, 588, 589, 598, 604, 605, 606, 607, 608], "40": [59, 105, 110, 111, 126, 399, 446, 466, 468, 470, 471, 479, 481, 491, 492, 495, 505, 508, 509, 514, 525, 528, 551, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 606], "400": [136, 221, 474, 476, 481, 485, 498, 505, 509, 528, 599], "4000": 456, "40000": [176, 526], "400056": 464, "40050506591797": 498, "40051035": 498, "400640": 586, "40071076": 97, "400x200": 485, "401": 471, "40112": 528, "4012": 509, "4013": 456, "4014": [456, 509], "4015": 456, "4016": 509, "4017": 456, "4018": 456, "4019": 509, "401e": 474, "402": [156, 509], "4022": [456, 509], "4023": 509, "40235": 479, "4024": 456, "4025": [456, 509], "4026": 456, "4027": 509, "402712": 498, "403": [450, 481, 507, 509], "4031": 509, "4032": 509, "4035": 528, "4037": 456, "404": 509, "4043": 456, "4044": 456, "40481": 479, "405": [400, 485], "4050": 509, "4051": 456, "40525": 479, "4054": 456, "4058": 456, "406": [509, 528], "40611": 528, "4067": 456, "40671": 477, "40672": 477, "407": 498, "4071": [456, 509], "4073": 456, "4073799600000000": 528, "4074": 509, "4075": 456, "4076": [456, 509], "4077": 509, "4079": 456, "408": [470, 505], "4080": 456, "4080942e": 503, "40822469e": 508, "4083": 456, "4084": 456, "4087": 509, "4088": 456, "4089": 456, "409": 509, "40919": 474, "4093": 456, "409416": 528, "4095": 456, "4098": 456, "409e": 492, "40deg": 514, "41": [67, 86, 94, 406, 463, 479, 487, 492, 498, 499, 505, 509, 515, 528, 529], "410": 509, "4100": 509, "41009347393684": 499, "4103": 456, "4105": 456, "4106": 456, "4107": 456, "4108": 456, "411": [509, 528], "4110e": 498, "4112": [127, 456], "4113": 456, "4115": 456, "4119": 456, "411e": 468, "4120719e": 503, "412165": 481, "412779907405": 498, "4129": 509, "413": 481, "4134": 509, "4138": 509, "414": 450, "414054187946": 482, "4141": 509, "41415047": 97, "4142135623730951": 120, "41449": 474, "414e": 474, "415": [450, 580], "4151e": 479, "4155": [498, 528], "41584196": 496, "416": [67, 479, 498, 504, 509], "4161e": 479, "417": 498, "4177": 509, "418007850646973": 430, "41803": 477, "41866": 515, "419": 507, "4190": 509, "4191": 459, "4198250e": 503, "4199": 509, "41995": 474, "419e": 498, "41e19": [19, 20], "42": [19, 20, 25, 26, 27, 94, 156, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 358, 406, 473, 481, 498, 503, 504, 505, 509, 510, 514, 555, 559], "420": 509, "4205": 509, "42050348": 499, "4208": 459, "4209": [459, 474], "421": [450, 528, 604], "4210": 459, "4212": 459, "4212028e": 503, "4213": 459, "42130982e": 495, "4215": 459, "4216": 459, "4217": 460, "4219": 459, "4220": 479, "4221": 457, "4225498e": 503, "4225631e": 503, "42267": 481, "4226731": 481, "423": [470, 509], "4231": [457, 459], "4234": 509, "42361": 474, "42399798": 481, "423e": 127, "42400": 481, "4241": 509, "4242": 459, "4243": 459, "4245": 459, "42463": 515, "424650": 499, "42474": 528, "424924928726423e": 509, "425": [463, 469, 470, 528], "4252": 459, "426": [498, 509], "4264": 459, "4268": 457, "427": 471, "42721474e": 500, "4275": [457, 459], "4277": 459, "4280": 459, "4281": 498, "4281202841": 596, "42812283336": 598, "42813539544": 597, "4282": 459, "428571428571404": 485, "4286": 509, "4288": 459, "4289": 509, "429": 470, "4294": 459, "42e": [501, 507], "43": [285, 358, 406, 463, 469, 470, 471, 481, 492, 499, 505, 509, 525, 528, 555], "430": 498, "43000": [52, 53], "4301": [457, 459], "4303606e": 503, "4305": 459, "431": [400, 499, 509], "431024101062279e": 525, "4311": 509, "43113": 464, "4313847458879893": 510, "431802721007389e": 509, "4319": 528, "43197": 474, "432": [463, 491, 494, 509], "4324": [457, 459], "4326": 459, "432878": 498, "432e": 498, "433": 474, "4331": 509, "4336": [457, 459], "43366": 599, "4338e": 465, "434": [463, 498, 525, 529], "43416595": 493, "4342": 509, "4344": 457, "4346": 459, "4349": 509, "435": [450, 494, 509], "4350": 459, "4351": 509, "4351637481047363": 510, "4352": 459, "4357": 274, "4359": [457, 459], "435e": 470, "435l": 498, "436": [450, 509], "4360750e": 503, "4361": 509, "4369": 459, "437": [498, 507], "4370": 459, "4373240195300975": 510, "438": [507, 509], "4380": [458, 459], "4381": [421, 460], "4382": 458, "4386": 509, "4387": 509, "439": [470, 509], "4393": [458, 459], "4394": 458, "4395": 459, "4396": 509, "4397": [458, 459], "439e": 498, "43e": [507, 509], "44": [21, 50, 86, 358, 465, 471, 473, 491, 493, 505, 509], "4402": 459, "4405": 509, "44055555555555603": 94, "4406": 459, "4408": 460, "4409": 459, "441": [463, 504, 509, 512, 590], "4412": [458, 459], "4417": 459, "4418": 459, "4420": 509, "4420073e": 503, "4420222e": 503, "4428": 459, "4428634e": 503, "443": 470, "4430": 459, "44319": 499, "4432": 460, "4433": 461, "4435": [458, 459], "444": 509, "4441": 509, "4444": [459, 509], "444e": 480, "445": [474, 509], "4450": 528, "44528685": 528, "4453": [458, 459], "44573": 94, "4458": 459, "4459": 459, "446": [507, 607], "4463": 509, "4466": [459, 479], "4466832000000000": 528, "4466835921": 500, "447": 450, "44742": 528, "44749e": 464, "44755": 477, "447552": 464, "447614": 525, "447e": [481, 498], "448": 509, "4480056e": 503, "44802852": 528, "4481": 498, "4485": 460, "4486": [458, 459], "44897959183673": 485, "4491": [420, 460], "4495": 459, "4497": 499, "44e": 430, "45": [51, 54, 473, 480, 493, 495, 499, 505, 506, 508, 509, 530, 555, 561, 562], "450": [507, 509], "4500": [458, 459], "4501": 460, "4504": 459, "4505": 509, "4506": 459, "4508": 459, "451": [463, 590], "4510": [459, 479, 509, 528], "4515": 497, "4517490659800822": 490, "4518": 509, "4520": 458, "4521": [459, 509], "4524": 458, "453": [465, 507, 509], "4533": 509, "454": [470, 509], "4540": 460, "4542": 509, "4545": [459, 509], "4546": 460, "455": [450, 468], "45515263080596924": 466, "45517415e": 500, "4553": 509, "4556": 509, "455870": 481, "455e": 67, "456": 450, "4561": 460, "45646095": 493, "4567": 460, "457": [286, 450, 507], "4570": 509, "457251": 528, "4574": [458, 460], "4575": 94, "4576": 509, "4578": [458, 509], "4579e": 464, "458": [498, 509], "4581": 509, "4584": 460, "4584784441132": 492, "45856": 528, "4586649826004114": 316, "4587": 509, "459": [450, 499, 507], "4593": 458, "45935": 528, "4595": 460, "4596": 509, "4599": 460, "459941302": 83, "45\u00ba": 516, "46": [53, 67, 110, 111, 406, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528], "460249999": 86, "4608": 460, "461": [450, 495], "4613": 509, "4615": 460, "46186956763267517": 466, "4619": 458, "462": [450, 470], "4620": [421, 460], "4620e": 498, "46225": 474, "4626": 509, "4628": 460, "463": 528, "4631": 458, "4635": 460, "4636": 509, "4638": 460, "4639e": 476, "464": [488, 509], "4642048e": 503, "4647544e": 503, "465": [470, 498, 507], "4653": 458, "4655": 509, "4657": [458, 460], "465784": 528, "4659": 509, "4660": 460, "4664": 460, "4668": 460, "4669": [460, 509], "467": 509, "4671": 460, "46711": 474, "4672": 509, "467315": 565, "4675e": 491, "4677": [458, 460], "468": [493, 498], "4681": 458, "4684": 466, "468805426856864e": 52, "468e": 67, "469": [463, 478, 492, 494, 509], "469387755102041": 485, "4697": 460, "4698": 509, "46e": [83, 476, 481], "47": [67, 492, 495, 498, 505, 509, 528], "470": 509, "4701": 509, "4702": 509, "4703": 460, "4711": 528, "4712": 474, "4714": 460, "4721": 458, "4722": 509, "4726": [460, 509], "4728": 458, "4729": 460, "473": [450, 463, 470, 522], "4736": 509, "4737": 509, "4738": 460, "474": [450, 509], "4740": 460, "4741": 460, "4749": 509, "474e": 498, "475": [450, 507], "4750": 460, "4753": [458, 460], "475468": 464, "4755": 458, "4759": 460, "476": 509, "476190": 599, "4762": 509, "477": 509, "4770": 460, "4772": 458, "4775": 509, "47797": 474, "477e": 498, "478": [450, 509], "47802": 510, "47803": 510, "47804": 510, "4782": 509, "47827": 510, "47828": 510, "47829": [82, 510, 517], "4783": 460, "4785": 460, "4787": 509, "4793": 509, "47e": 498, "48": [33, 176, 433, 463, 479, 480, 505, 507, 509, 512, 515], "480": [466, 498, 507, 509], "4802": [460, 509], "4805": 460, "480554966161": 479, "48068": 474, "4808": 460, "480e": 498, "481": [397, 450], "4810": 460, "4812": 509, "4814": [460, 528], "4817": 460, "48180953439317e": 525, "4819444e": 503, "482": [464, 509], "4820": 509, "48215685": 97, "4822": 460, "48248": 498, "4825": [498, 528], "4828": 460, "4829": 460, "4831": 509, "4834": 460, "4834488e": 503, "4835": 460, "4837": 460, "484": [450, 485], "4840": 509, "4841": 509, "48442": 280, "4845": 460, "4847": 460, "4848653": 498, "4849": [460, 498, 528], "485": 450, "4850": 460, "4851": 460, "4854": 460, "485536": 571, "4864": 509, "487": [450, 485, 525], "4873": 509, "4875723e": 503, "4876": 458, "4878": 509, "4879": 460, "4881": [259, 260], "4886": 460, "48871": 464, "4894": 509, "4897": 509, "4897959183673475": 485, "489e": 498, "48e": [498, 507, 526], "49": [53, 474, 479, 485, 498, 507, 509, 515, 525, 554], "4902": 460, "4904": 460, "4904078e": 503, "49078e": 464, "4913": 458, "4915": 509, "49152": 515, "4917": 460, "4923": 509, "4924": 509, "4930435940405": 479, "4933657e": 503, "4936": [458, 460], "4937": [458, 460, 509], "494": 509, "4940": [460, 509], "49417615": 86, "4942": 460, "494e": 470, "4958277": 97, "496": 509, "496021": 514, "4962": 509, "4963": 528, "4966": 528, "4967": 509, "4968236e": 503, "4970": 460, "4971": 460, "49716789e": 500, "4971704e": 503, "4973": 460, "4975": 460, "4978": [460, 509], "498": 528, "4983": 461, "498784": 498, "4989": 460, "498e": [498, 528], "499": [67, 498], "49919925926": [244, 600], "4992": 460, "4994": 460, "4996": 461, "49972277488662115": 510, "4999833830074": 481, "4d": 411, "4e": [493, 498, 507, 509, 589], "4f": [605, 606, 607], "4fgl": [65, 78, 274, 275, 416, 437, 439, 445, 447, 460, 463, 465, 480, 498, 506, 508, 537, 556, 569, 590], "4th": [404, 432], "4yr_catalog": 61, "4yvnatxu": 495, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 103, 104, 106, 109, 110, 111, 120, 124, 127, 128, 130, 132, 133, 134, 135, 136, 144, 145, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 176, 179, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 223, 224, 227, 229, 230, 231, 233, 234, 235, 239, 240, 242, 244, 246, 247, 250, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 286, 312, 318, 350, 382, 383, 387, 389, 392, 393, 396, 397, 399, 403, 404, 406, 407, 408, 409, 411, 416, 417, 418, 422, 425, 430, 433, 435, 437, 438, 445, 447, 449, 450, 452, 453, 454, 458, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 525, 526, 528, 530, 535, 536, 539, 546, 549, 551, 552, 553, 554, 555, 560, 561, 562, 563, 565, 570, 571, 578, 579, 580, 584, 585, 589, 593, 594, 595, 596, 598, 604, 606, 607, 610], "50": [87, 91, 94, 112, 117, 134, 358, 399, 420, 464, 471, 472, 477, 479, 488, 491, 492, 493, 498, 499, 503, 505, 507, 508, 509, 510, 514, 515, 517, 525, 526, 528, 551, 554, 563, 607], "500": [196, 197, 199, 205, 208, 209, 474, 481, 483, 484, 505, 509, 514, 515, 528, 554, 560], "5000": [19, 20, 87, 91, 530, 554], "5000056568267741": 481, "5000e": 473, "50022222": 94, "500249": 498, "5004": 481, "5015": 460, "502": 450, "502164": 588, "5029747": 472, "503": [450, 509], "5030": 528, "5037": 509, "504": [463, 568], "5040": 460, "5042": 509, "5044": [460, 509], "5049": 528, "505": [67, 498, 499, 509], "505523195912": 479, "5057": 461, "5058": 461, "506": [450, 509], "5060": 509, "5066": [498, 509], "507": 450, "5070": 509, "5074834": 97, "5078": 509, "5078068": 97, "5079": 509, "508": 509, "50807568877": 498, "5084": 509, "509": [463, 469, 509], "509587": 500, "509632": 500, "509e": 498, "50_100_wtct": 77, "50e": [473, 507], "51": [52, 53, 67, 477, 479, 509, 525], "510": [450, 500, 509], "510204081632645": 485, "5106": 528, "51095676": 493, "511": [67, 450, 509], "5110": 509, "5115": 461, "5116": 509, "51179": [393, 609], "5118": 461, "512": [470, 509], "5121": 509, "5122": 509, "5125": 461, "5126": 67, "5129": 461, "513": [430, 505], "51312": 481, "5135": 461, "5137": 509, "514": 509, "5144": [94, 464], "5145": [461, 509], "5148": 509, "514854": 514, "5149": 509, "5154": 509, "51544": [473, 483, 484, 488], "5155": 509, "5156": 461, "516": 509, "5160": 461, "5161": 461, "5162628e": 503, "5163273": 514, "5168": 509, "5169": 461, "517": 509, "5176": 461, "518": [450, 507], "5180": 461, "5184": 461, "5186": 461, "5188": 461, "5188338e": 503, "51910": 94, "5192": 509, "5192420e": 503, "5194769e": 503, "51948705e": 508, "51958055e": 500, "5199": 509, "52": [53, 127, 176, 464, 466, 474, 477, 479, 492, 498, 508, 509, 514, 517, 528], "5200": 461, "5205": [461, 515], "5206": [461, 509], "5207": 461, "52074074074": 83, "521": [451, 509], "5213": 509, "5222": 461, "523": [451, 505], "5230376e": 503, "52318414": 97, "5234": 509, "523681640625": 470, "5237647004325865": 510, "52389101852": 498, "523a": [250, 286], "523e": 471, "524": [451, 498, 507], "5247": 509, "5248": 528, "524807800000000": 528, "5254": 461, "5255": 461, "5258": 461, "52587": 474, "526": 451, "52607": 528, "5265": 509, "5269": 461, "527": [451, 509, 515], "5270": 461, "5271": 461, "5273": 509, "5274": 509, "5275": 461, "5279": [461, 509], "527e": 471, "528": [470, 507], "5280": [461, 509], "52826166": 498, "5283": [498, 528], "52839183495354": 492, "5285": 461, "5287": 509, "5288": 509, "5289": 461, "529": 451, "5292": 499, "5294": 509, "5297": 461, "5297030e": 503, "5298": 461, "529815": 584, "52e": [493, 525], "53": [28, 481, 495, 509, 511, 560, 570], "530": [451, 463, 501, 512], "5300": 461, "53025": 94, "5303": 461, "5304": 461, "530612244897945": 485, "531": 451, "5312": [461, 509], "5314": 461, "5316": [461, 509], "532": 509, "5320": 461, "5321": 509, "53213": 481, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": [498, 509], "53343": [430, 490], "53344": 490, "53345": 490, "53346": 490, "53347": 490, "53348": 490, "5340": 509, "53408941305565": 492, "5342": [461, 509], "5345275e": 503, "5346": 461, "53482e": 464, "535": [451, 498], "5350": 461, "535058216604496": 286, "5352": 509, "5353": 461, "5356": 461, "53566": 464, "536": 509, "53616": 250, "5364": 509, "5366": 461, "5369": 509, "537": 485, "5370": 461, "5378": 461, "5379": 509, "5380": 461, "5381": 461, "5382": 461, "538491845944134e": 495, "5385": [461, 509], "5386": 509, "5389": 461, "539": [286, 507, 509, 567], "5390": 461, "5390438": 97, "5392e": 491, "539397": 498, "53945": 491, "53946": [495, 496], "5398": 509, "539e": 498, "53e": [430, 473], "54": [67, 466, 470, 498, 503, 509], "540": 509, "5400": 499, "5405": [461, 509], "5407": 461, "5407363826067": 539, "5407363826070": 539, "5408": 461, "5409": 461, "541": [451, 509], "5411": 464, "542": 509, "5423": 461, "5424": 509, "5427": 461, "5427520e": 503, "54282": 474, "5433": 461, "5437": 461, "5438": 461, "5438860e": 503, "544": [451, 498, 515], "5445": 461, "5448": 461, "5449": 461, "545": 451, "5453": 461, "54566271": 606, "5457": 509, "546": [451, 509], "5461745": 97, "5462": [461, 509], "5466": 461, "54676809e": 501, "54682": [474, 498, 515, 528], "547": [451, 464, 498], "5472": 461, "54721e": 464, "5477": 498, "54772": 498, "5481": 509, "5484": 509, "5488": 509, "54892": 474, "548e": 498, "549": 451, "5490039491683206e": 525, "5491": 509, "5492": 509, "5499840": 514, "54e": 507, "55": [39, 42, 87, 91, 214, 492, 493, 501, 506, 509, 511], "550": 470, "5503": 509, "55045": 498, "551": [463, 498, 512], "5510204081632653": 485, "5517": 509, "55197": [393, 609], "552": [498, 509], "5522": 509, "5525": 461, "55275": 515, "553": [465, 498, 509], "5531e": 465, "553337": 528, "5536": 509, "5538": 528, "5538942e": 503, "553e": 474, "554": 67, "55410": 498, "5545": 461, "5545130e": 503, "55461982e": 500, "554e": 468, "5552": 509, "5556": 509, "556": [451, 470, 607], "5561760e": 503, "5569": 509, "557": [451, 507, 509], "55775": 498, "5578": 509, "558": 451, "5583371740851524": 525, "559": 451, "5594": 83, "56": [464, 471, 493, 505, 509, 516], "560": [37, 498], "5600": 509, "5606985": 493, "5607778e": 503, "56093766": 97, "561": 509, "56141": 498, "562": [498, 509], "5622482": 97, "56234132519": 500, "562751": 488, "56353481": 606, "5636": 509, "563e": [470, 481], "564": [303, 451, 470, 507], "5641": 509, "564139576922415": 482, "5644": 499, "564956": 105, "565": [451, 463, 474, 478], "56506": 498, "565095": 464, "566": 509, "566e": 470, "56711": 528, "5672": 509, "567895": 593, "56871": 498, "569": 451, "56922612": 606, "5692809e": 503, "56973": 528, "57": [33, 474, 481, 493, 505, 509], "570": 509, "57011": 481, "5707": 509, "571": 498, "5710": 509, "571428571428572": 485, "5715": 509, "57185": 539, "5719922e": 503, "571e": 498, "572": 471, "5721": 509, "57233": 528, "57236": [474, 498, 515, 528], "572e": [468, 474], "573": [67, 470, 528], "5730": 509, "57300957": 179, "574518": 578, "5750": 509, "5754970e": 503, "5758e": 472, "576": [507, 509], "5760": 528, "57602": 498, "5763635e": 503, "5768262e": 503, "576e": 474, "5773": 509, "577398": 515, "5777": 509, "5779092e": 503, "578": [498, 500, 606], "5782814": 500, "5784": 509, "5789": 509, "579": [498, 509], "5791754818483286e": 495, "5793": 509, "57944657408": 498, "57967": 498, "57e": 498, "58": [430, 433, 473, 479, 482, 498, 504, 505, 507, 509, 517, 525], "580": 607, "581": 471, "5817": 509, "5819e": 472, "582": 451, "5820": 509, "5821": 509, "5823": 509, "58332": 498, "5833e": 498, "5835918e": 503, "5839": 509, "583e": 474, "5842497e": 503, "585": 498, "58540702": 97, "586": 509, "5866": 509, "5867488e": 503, "58693695": 493, "58698": 498, "587": 509, "5880": 509, "588e": 498, "589": 509, "58909": 492, "5890e": 492, "58926": 474, "5892966e": 503, "5895": 466, "58999": 244, "58e": [488, 498, 500], "59": [83, 477, 488, 490, 498, 504, 509, 517, 528], "590": [470, 509], "59000": [244, 600], "59001": 244, "59063": 498, "5908": 498, "590835686434463": 510, "591": [451, 498, 509], "59100": [599, 600], "59123": [593, 594, 595], "5913": 509, "591478582014704": 509, "5915030546513255": 496, "5915e": 498, "59200": 599, "5923": 509, "59233": 508, "59235": [83, 514], "5924": 509, "59240": 508, "5924e": 526, "59250": 508, "59254e": 464, "59265": 464, "5928": 509, "593": [451, 509], "59300": 493, "5934": 509, "59344": 528, "59348": 528, "59365": 600, "5938": 509, "594": [451, 509], "59400008": 97, "59428": 498, "59451": 474, "595": 509, "5951631e": 503, "595166": 585, "5954": 509, "5956621435": 500, "595674": 126, "596": [507, 509], "5965": 509, "59696": 474, "596e": 498, "597195622266303e": 495, "5976": 509, "597774": 503, "59793": 498, "598": [509, 528], "5985": 528, "5987726": 97, "599": [451, 491, 507, 509], "5994": 509, "599625": 514, "5997": 509, "59976": 498, "599999904632568": 498, "59d09m41": 498, "59e": [498, 507, 515], "5a": 58, "5d": 610, "5e": [473, 484, 498, 500, 507, 509], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 103, 110, 112, 117, 127, 132, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 244, 286, 380, 383, 396, 399, 404, 408, 409, 413, 418, 427, 430, 443, 445, 447, 453, 454, 458, 460, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 534, 551, 555, 562, 566, 587, 604, 606, 610], "60": [67, 91, 158, 458, 471, 474, 498, 501, 509, 515], "600": [471, 474, 480, 509], "6000": 554, "6000000000000001": 508, "600661": 503, "60075": 503, "60090769e": 508, "600e": 470, "6013": 509, "601667": 471, "6018166e": 503, "601e": 498, "6024e": 526, "603": [507, 509, 528], "6031": 509, "6033": 464, "60350": 468, "603625": 503, "604": 470, "6046689e": 503, "60603928": 508, "6062": 509, "607": 485, "6082": 509, "60830": [596, 597, 598], "6099": 509, "60e": 498, "61": [67, 440, 479, 498, 507, 509, 515, 607], "610": 507, "61051": 515, "6105760e": 503, "611": [474, 500, 606], "611168": 500, "6116853": 498, "611e": 498, "612244897959162": 485, "6125": 517, "612e": 474, "613": 509, "613114": 496, "6133": 509, "6135": 509, "6138": 509, "61422433": 97, "61489": 503, "6153": 509, "615316": 528, "6162": 492, "617": 509, "6173": 509, "6178": 509, "617835": 503, "6180": 509, "6181862e": 503, "6184": 509, "61862": 244, "619": 498, "6194453e": 503, "6196": 509, "61975474351522": 525, "62": [498, 509, 516, 526], "620": 498, "620398": 503, "6204": 509, "6205": 528, "62111": 474, "621499": 528, "6218742e": 503, "6219": 468, "622": [451, 468, 509], "62258": 498, "6227766": 505, "62277660168379": 505, "6228e": 468, "623": [498, 528], "62320": 468, "623397": 503, "62341325": 505, "623413251903492": 505, "624": [507, 509], "624122": 481, "62503": 498, "62514628": 503, "6253652e": 503, "6258": 509, "6259962e": 503, "626": 509, "6266": 528, "6267247": 528, "626748": 471, "6269": 509, "627": 509, "6275": 509, "628": 451, "6283": 509, "62842028": 499, "6287": 509, "629": 509, "63": [194, 195, 204, 207, 464, 470, 472, 499, 504, 509, 516, 525, 526, 549, 551, 552, 555], "630": [82, 507, 509, 517, 525], "6304": 509, "6309576500000000": 528, "630e": 67, "631": [451, 479, 509], "631155605": 483, "631159205": 483, "631170005": 483, "631173605": 483, "631177205": 483, "631180805": 483, "6318811e": 503, "632": 509, "6324": 513, "632627": 528, "632653061224474": 485, "633": [85, 103, 106, 110, 111, 176, 471, 480, 504, 509, 525, 526, 551], "63307": 83, "63308": [490, 526], "633083": 506, "63310241699219": 480, "6332": 509, "63326": 474, "6333": 94, "6334": 509, "63342": 528, "633600": 507, "6339": 509, "634": 509, "635": 451, "63500212963": 498, "6354": 528, "63541": 514, "6357": 509, "63668832485633": 492, "6367": 509, "6368": 509, "6374": 509, "638": 507, "6382": 509, "639": 498, "6390": 464, "63902": 464, "6393": 509, "6394e": 476, "6397": 528, "63e": 499, "64": [39, 67, 83, 127, 195, 433, 488, 498, 509, 515], "640": [451, 509], "6402": 509, "6402822e": 503, "641": [451, 509, 528], "64103": 514, "6411": 509, "6413": 481, "6417": [481, 509], "6419578e": 503, "642": 528, "6424216679053606": 482, "6429005895278312": 510, "642e": 470, "643": [33, 509], "6430": 509, "64323": 474, "6435": 509, "6436": 509, "644": 509, "64438": 515, "6444": 464, "644527": 500, "645": [499, 500], "6451": 481, "6452": 509, "6453": 509, "6456": 509, "6460": 509, "6464": 464, "6467": 509, "647": 451, "6471115e": 503, "64794383e": 508, "648": 451, "6486": 509, "648e": 67, "649": 451, "64987376": 97, "64e": 471, "65": [63, 417, 433, 435, 499, 509], "650": 499, "650015": 566, "6509": 464, "651": [498, 509], "651058": 528, "6511": 509, "6514": 528, "6515": 509, "652": [480, 509], "6522806": 528, "652368617859867": 480, "653": [451, 466, 509], "6530612244897958": 485, "65357608e": 503, "654": [464, 498, 509], "65412": 481, "6542": 509, "654e": 498, "655": 474, "655283": 474, "6554088e": 503, "6556248e": 503, "6557": 474, "655e": [67, 471], "656": 606, "65603222222": 515, "65603794185": 498, "6561": 509, "6561e": 479, "6577182894355391": 510, "658": [463, 507, 512], "6586": 509, "658909145253801e": 528, "6589622747787678": 510, "659": [470, 474], "6591": 509, "6596": 509, "6599": 509, "66": [52, 53, 433, 436, 470, 473, 480, 499, 501, 507, 509, 511, 515, 525], "660": [451, 509], "6604475": 481, "660e": 528, "660fals": 468, "661": 451, "6610048102039": 482, "66104": 464, "6612": 509, "6619": 509, "662": [463, 498, 519], "6623": 509, "6625": 509, "6628": 509, "663": [470, 606], "66332237105432": 492, "663742400000000": 528, "6640": 509, "664502403": 514, "664502405": 514, "664502408": 514, "664502409": 514, "664502414": 514, "6647": 509, "664e": 474, "665": 509, "6652219e": 503, "6656873021399468": 482, "6657": 509, "66650390625": 466, "6666666666583865": 491, "6666666666666666": 595, "6667": 509, "667": 509, "6678": 474, "66813": 481, "6684": 509, "6685": 509, "6694": 509, "6697": 509, "66984341": 503, "6699": 509, "669e": 474, "66e": [479, 499], "67": [17, 433, 498, 509, 528], "670": [498, 509], "6702": 509, "6705024680435898": 316, "6706": 509, "671": [472, 483, 509, 517, 593], "6710": 509, "6713": 509, "6713322408263984": 509, "671616": 464, "672": 509, "6728": [498, 528], "673": [463, 499, 509, 512], "6730": 509, "67304": 97, "6730915639952455": 509, "6733": 509, "6735": 509, "67375": 464, "6738": 509, "6740": 509, "6741": 509, "6743": 509, "67457342435522e": 528, "675": [470, 509], "6757": 509, "676": [463, 494], "6767": 509, "6768369882203884": 471, "6768e": 471, "677": [451, 509], "6772235e": 503, "6773": 509, "67759236e": 503, "678": [86, 482], "67824": 499, "6784": 606, "67861": 503, "6786834721261165e": 471, "679": [451, 509], "679478008101006e": 471, "6795e": 471, "6796": 509, "67992517": 97, "67e21": 497, "68": [67, 83, 96, 157, 163, 165, 166, 167, 169, 239, 433, 464, 498, 501, 503, 505, 509, 514, 528, 607], "680": 507, "6803": 528, "6806": 509, "6807": 509, "681": 509, "6811": 509, "6812310184489": 492, "68125": 503, "6823": 464, "6835": 509, "683531458783184e": 495, "684": 176, "6842": 509, "6846": 509, "685": 509, "68542112": 97, "6855": 509, "685880899226832e": 495, "68628538586": 499, "6869": 509, "687": 507, "6872": 509, "687214": 504, "687500": 504, "687685": 498, "6878": 509, "6881": 509, "6890": 509, "6893": 509, "68e": [465, 479, 498], "69": [103, 460, 474, 488, 498, 499, 509], "690": [67, 509], "690557685186": 498, "6909290e": 503, "691": [463, 477, 478, 498], "69138": 474, "691492300600545": 482, "691680": [103, 499, 507], "692": 474, "6920": 509, "692e": 471, "693": 509, "69314486": 506, "693877551020403": 485, "693940": 479, "694818": 596, "6951": 509, "6953125": 499, "6954": 509, "69543812": 97, "695744748972": 492, "6959369197218669": 510, "695e": 474, "697317": 515, "69735": 503, "697e": 468, "697fals": 468, "6985": 466, "6988": 509, "6992": 481, "6999": 509, "6e": [468, 498, 507, 509], "6h": 516, "6i_6dceu": 508, "6th": 432, "7": [30, 31, 38, 52, 53, 67, 87, 91, 103, 106, 127, 133, 176, 179, 206, 212, 214, 242, 382, 383, 392, 396, 397, 404, 408, 409, 413, 430, 434, 435, 437, 438, 444, 445, 450, 451, 452, 454, 455, 464, 470, 471, 473, 474, 480, 482, 483, 490, 491, 492, 493, 495, 496, 498, 500, 501, 503, 504, 505, 507, 508, 509, 510, 511, 514, 515, 525, 528, 555, 560, 561, 599, 606, 607], "70": [67, 91, 103, 471, 481, 498, 499, 509, 606], "700": [400, 484, 500, 506], "70000000e": 508, "7000e": 508, "70016": 481, "7007": [481, 509], "7009": 509, "701": [509, 551], "702": [490, 498, 515, 526], "7020": 509, "7027": 509, "7029": 509, "702e": 474, "703": [430, 509], "7035": 509, "70358483e": 508, "704": 507, "70428": 528, "7043": 509, "70437": 503, "705": [509, 528], "70537542e": 500, "70546": 474, "7062": 509, "70634e": 464, "7067": 509, "7068": 509, "706e": [480, 498], "7072": 509, "7077": 509, "707945784": 500, "708": [470, 471, 509], "7082": 509, "7083": 509, "709": [451, 509], "7096": 509, "7096038563244247": 509, "7097381e": 503, "70e": 508, "71": [33, 311, 313, 471, 473, 507, 509, 607], "710": [451, 509], "7106": 509, "71067811865478": 498, "711": 509, "711541686998153e": 495, "7116851": 508, "7117": 509, "711e": 474, "712": 482, "7121": 509, "7122": 509, "71220672": 499, "7123895e": 503, "7126": 509, "712e": [490, 526], "713": [451, 498], "7132e": 528, "7139": 509, "714": [498, 509], "714285714285705": 485, "7145": 509, "715": [509, 528], "716": [96, 316, 317, 505, 509], "7160": 509, "716062": 514, "7161": 509, "7168": 509, "71693826": [491, 495, 510, 542], "717": 498, "7172": 509, "7175": 509, "71795506": 528, "718": 509, "7181": 509, "7183": 509, "7184": 528, "7187": 509, "719": [451, 507, 509], "7190994e": 503, "71944e": 464, "7195": 498, "7198": 509, "719e": 498, "72": [437, 466, 498, 504, 509, 528], "720": [484, 498, 509], "7200": 488, "7202": 509, "7212": 509, "722": [507, 529], "72217": 528, "722557505166": 498, "7228": 509, "7229": 509, "723": 474, "7230": 509, "723e": 498, "7240965e": 503, "7242055566732406e": 509, "7243": 509, "7244": 509, "725": [498, 509], "7263": 509, "7264": 509, "7267": 509, "727": 507, "7274": 509, "72775": 528, "7284447e": 503, "7297": 509, "729e": 474, "73": [464, 509, 528], "7300": 509, "7303": 528, "731": 451, "731586963481223e": 525, "731980": 587, "7327": 509, "732e": [67, 498], "733": [67, 451, 509], "7331": 509, "7339": 509, "734": 528, "7346938775510206": 485, "7347": 509, "7350250533013533": 510, "7350380e": 503, "7351418e": 503, "7354": 509, "735e": 498, "736": [470, 606, 607], "7363": 509, "737": [463, 465, 469, 470, 509], "738": [451, 498, 509], "7385727e": 503, "739": 451, "7393": 509, "7395744e": 503, "7397": 509, "739770898783367e": 422, "739e": 67, "73e": [498, 525], "74": [464, 509, 528], "740": 451, "7400": 509, "7407": 509, "7417": 509, "742": 507, "7421": 509, "743": 509, "7433": 509, "743e": [465, 498], "74427": 481, "7444": 509, "74465974e": 503, "74479": 474, "7451": 509, "74542e": 464, "7458": 509, "746": [451, 509], "7460": 509, "7465": 509, "7466": 509, "7467": 509, "7468": 509, "7471700e": 503, "7472": 509, "7479085e": 503, "748": 498, "748259": 479, "7486": 509, "7493": 509, "74989420933": 500, "75": [67, 385, 461, 465, 470, 473, 509, 528], "750": [509, 607], "750475": 573, "7508": 509, "751218": 580, "751647922374016": 525, "752": 509, "75267735": 528, "753": [451, 471], "7531": 509, "7537": 509, "7537086e": 503, "7538935238185362": 509, "754": [451, 509, 515], "75408483": 528, "7547": 509, "755102040816327": 485, "7555": 504, "7559": 528, "755962": 561, "756": [492, 498], "7562e": 472, "7567": 464, "7580410e": 503, "7586": 509, "7589": 509, "759": 451, "7594": 509, "7596682e": 503, "75e": [498, 526], "76": [482, 495, 505, 509], "7610": 509, "761185": 525, "7612": 509, "7613": 430, "762": 451, "7621": 509, "762199399999986": 567, "7628": 509, "7629": 509, "763": 451, "7637308880733709": 510, "7638": 474, "763e": 474, "76419591747674": 492, "7644": 509, "7647": 528, "76473": 474, "765": [463, 590], "7652512e": 503, "766": [451, 474, 509], "7660168382": 498, "766d": 514, "767": [451, 509], "7673": 509, "76739": 498, "7675": 509, "7679": 509, "768000": [103, 499], "768048": 97, "7681": 509, "7681656e": 503, "76837444": 493, "7684028": 528, "7692": 509, "7692170e": 503, "76e": 507, "77": 509, "770": [67, 509], "771667": 517, "7717": 509, "77174": 474, "7718272408581743": 316, "771e": 498, "772": [451, 464], "77206": 528, "77218": 474, "773": 498, "7733e": [465, 498], "7734": 509, "77351": 474, "774": [451, 488, 509], "7743835449219": 470, "7744": 509, "774e": 498, "775": [67, 507, 509], "7752246952377783": 481, "7755386e": 503, "776": [463, 479, 487, 509], "7760": [509, 528], "7762": 509, "7763307219821931": 316, "7765957e": 503, "77678": 464, "7769775": 514, "777": [451, 492, 509], "7771617763704126": 316, "77751797": 97, "7776": 509, "7778": 509, "777e": [67, 468], "778": [451, 470, 498], "77827941": 505, "778279410038923": 505, "7786": 509, "779": [471, 498, 509], "7794": 509, "7796942": 528, "7798": 509, "779e": 470, "77e": [473, 498], "78": [505, 506, 509, 516, 526], "780": [31, 127, 509], "7800e": 470, "7801": 509, "7804888e": 503, "780e": 127, "781": 509, "7812": 509, "78188": 474, "78188096": 97, "782": 515, "7827941": 505, "78279410038923": 505, "783": [451, 498, 528], "78332719": 481, "78333": 481, "783587001383003": 514, "7837": 509, "783852": 594, "783e": 481, "784": [452, 471], "7843": 509, "784385": 508, "78499999999997": 563, "785": 563, "7853981633974483": 598, "7855": 509, "787": [67, 176], "7871694602003052e": 490, "7875405607868806": 510, "7876233e": 503, "7879": 509, "788": [498, 509], "7887840e": 503, "788907": 525, "788e": 498, "789": [451, 509], "78910994": 97, "7893": 509, "7894": 481, "78952750835169": 492, "78e": 507, "79": [466, 498, 509], "790": 451, "791": [452, 509], "7913e": 470, "7919": 509, "792": 509, "7921": 509, "7922": 464, "793": [452, 474], "7934": 509, "794": [500, 509], "7941697": 500, "7942": 509, "79432823": 508, "7943282347": 500, "79469899": 481, "79470": 481, "794e": 474, "7956": 509, "79591836734692": 485, "796": [452, 507], "7961": 509, "797": 452, "7970": 509, "7971": 509, "7972": 504, "7979": 509, "798": 452, "798218": 464, "7985": 509, "799": 470, "7990194e": 503, "7997221e": 503, "7999": 509, "799999952316284": 498, "7a0hxw5": 495, "7c": 505, "7d": 498, "7e": [498, 507, 508, 509], "7e955f": 433, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 101, 103, 106, 110, 111, 112, 117, 130, 150, 151, 200, 207, 242, 244, 318, 392, 396, 399, 400, 409, 434, 435, 438, 440, 441, 445, 446, 447, 450, 451, 452, 455, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 535, 537, 546, 551, 555, 560, 570, 581, 589, 606], "80": [179, 472, 473, 474, 492, 499, 505, 509, 515, 551, 580, 589], "800750": 560, "800932": 498, "800e": [488, 508], "801": [528, 551], "801668796295": 498, "802": [507, 528], "8021": 509, "8024": 509, "803": [470, 509], "8031": 509, "8031431e": 503, "8032": 509, "8035": 509, "8037638e": 503, "8038": 509, "804": [507, 509], "8041": 509, "8042": 509, "804492": 488, "8049": 509, "8049e": 492, "806": 509, "8062607e": 503, "80683246": 503, "807": [463, 469, 471, 474, 509, 567], "8071": 474, "807201": 528, "8075": [498, 528], "8075185": 498, "8080": 509, "8081": 509, "8082": 509, "8084e": 479, "8085": 509, "808693108304212e": 501, "80871364": 97, "8088": 509, "8090": 509, "8090746": 514, "809505": 498, "8098": 509, "80982039": 503, "80e": 465, "81": [441, 465, 490, 509, 570], "810": [452, 498, 509], "810000": 488, "8100e": 465, "8101": 509, "8102": 509, "8103": 509, "8106": 509, "810e": 498, "811": 452, "811533729700176e": 501, "812": 452, "8120751984899354e": 501, "81221696315049e": 501, "8122425528751894e": 501, "8122e": 501, "8123": 509, "8123587278110435e": 501, "8127": 509, "81292578645326e": 501, "812951376050203e": 501, "813": 452, "8130": 509, "8133": 509, "814": 452, "8141": 509, "81482879e": 495, "8150": 528, "815791997446166e": 501, "816": 452, "8160964882165554": 316, "81632653061222": 485, "81699e": 464, "816e": 498, "8178": 509, "818": 509, "8183": 509, "818388e": 528, "81847286": 493, "8189": 509, "818e": 468, "819": 498, "8190": 509, "81e": 570, "82": [67, 433, 479, 498, 509, 526, 555], "820": [452, 509], "8204": 509, "8205513": 514, "820562952023891": 316, "82073484337354e": 495, "8218": 509, "8219": 509, "8222980e": 503, "8228": 509, "823": 470, "8234": 509, "8235": 509, "824": [452, 507, 509], "8241471833009617": 510, "8243": 509, "8248": 509, "825": [452, 464, 482, 498], "8250": 509, "8256": 528, "826": 452, "8263": 509, "826414166666": 94, "8267": 509, "827": 452, "8272": 530, "82739": 474, "827415490523": 492, "8278": 509, "8282": 509, "8283": 509, "8290458e": 503, "8293": [509, 528], "82946153": 528, "82e": 480, "83": [30, 67, 83, 85, 94, 103, 106, 110, 111, 176, 179, 194, 195, 204, 207, 470, 471, 472, 474, 480, 490, 499, 504, 505, 506, 509, 513, 516, 525, 526, 546, 549, 551, 552, 555], "830": 452, "8300": 528, "8303": 509, "8307": 509, "8308": 509, "831": 452, "832": 452, "8322": 509, "8324": 509, "83242471": 503, "8326": 509, "833": [452, 471, 474, 509], "8331": 509, "833333333336": 493, "834": [452, 509], "8341884287660133": 510, "8344": 509, "8345": 509, "8349780e": 503, "835": [452, 509], "8357": 509, "835e": [471, 481], "835fals": 468, "836": [452, 493, 498, 509], "8362": 509, "8367": 509, "836731": 498, "836734693877551": 485, "8369650e": 503, "837": [452, 507], "8377268e": 503, "838": [474, 509], "8383": 509, "8383396349722769": 316, "8387": 509, "8392": 509, "84": [24, 433, 470, 472, 481, 492, 498, 507, 509, 555], "840": [452, 474, 509], "841": 498, "8416": 509, "84196311": 97, "842": [452, 498], "8422": 509, "84233": 474, "842x": 138, "843": [464, 493], "843864549579762e": 525, "843e": 67, "844": 492, "8441040e": 503, "8442": 509, "844770648146": 94, "8449575657133206": 316, "845": 453, "84529": 498, "8455480e": 503, "845693": 464, "846": [474, 498, 606], "847": 452, "8470": 509, "8475576e": 503, "8475650e": 503, "8478": 509, "8481": 509, "8499": 509, "84e": 479, "85": [87, 91, 459, 481, 509, 560, 561], "850": 512, "8506": 509, "8508": 509, "8509": 509, "850e": 492, "851": [452, 509], "85157506": 528, "8515948e": 503, "85188496e": 503, "85202": 528, "8522": 509, "8523": 509, "85287": 515, "8529": 509, "852e": 498, "853": 509, "8531": 509, "8534": 509, "8538": 509, "854": [452, 509], "854166666664": 493, "85416667": 491, "854308585949": 492, "85469291": 97, "855": [452, 509], "8550": 509, "85527": 481, "85527359": 481, "8555500e": 503, "8559": 509, "85624": 476, "85625": 476, "8566": 509, "8568": 528, "856e": 498, "8570": 509, "8570719e": 503, "85722435185": 498, "858": 452, "8589": 509, "858e": 498, "859": [452, 470, 509], "85900": 481, "85900392": 481, "85925": 528, "8593054": 498, "859e": 474, "85e": 498, "86": [463, 468, 470, 471, 474, 505, 509, 528, 539], "860": 498, "8605": 509, "861": 528, "86111111": 491, "861150": 468, "8613613e": 503, "8618": 509, "8620": 488, "8621": 509, "8622": 509, "8623": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "8624": 509, "8629": 509, "863": 509, "8631": 509, "864": [452, 509, 528], "8642": 509, "864327": 476, "8647": 509, "865": [452, 463, 474, 487], "8660": 509, "8663": 509, "86676": 515, "8669": 464, "8670": 509, "8671": 509, "8672": 481, "86793518066406": 466, "868": [452, 498, 509], "86831929": 97, "8694": 509, "8696": 509, "8699": 464, "8699165e": 503, "87": [67, 481, 505, 509], "870": [67, 452, 509], "8704": 474, "871": [452, 509], "8710": 509, "871719011827246e": 495, "872": [452, 474], "8723": 509, "8725": 509, "873": [471, 509], "8733348": 514, "8735": 509, "8736082200157": 482, "873659477745188": 510, "8737": 509, "874": 466, "8746": 509, "875": [452, 509], "8755": 509, "8756": 509, "876": 507, "87621184": 477, "8769": 509, "8769240e": 503, "876e": 474, "87710186": 97, "8773": 509, "877551020408161": 485, "877563": 498, "878": [498, 507], "8782": 509, "87897": 481, "87897418": 481, "8794": 509, "8799800e": 503, "87t5t9": 495, "88": [433, 455, 472, 481, 482, 495, 498, 505, 509, 528], "8805": 509, "880e": 474, "881": [452, 464, 474], "8815212313941426": 510, "882": 67, "8824": 509, "8827": 509, "8828": 509, "883": [452, 463, 519], "8834862e": 503, "8837": 509, "8839": 509, "883e": 67, "884": [452, 509], "8843": 509, "88470839": 508, "885": [452, 463, 468, 469, 509], "886": 498, "8861": 509, "8865": [509, 528], "8871": 509, "88781": 474, "888": 452, "8885138e": 503, "8889": 509, "889": [463, 498, 512], "8893600e": 503, "8897": 509, "88e": [468, 498], "89": [33, 505, 509], "890": 509, "8907": 509, "8908866e": 503, "8909e": 492, "890e": 67, "891": 509, "892": 507, "8922": 509, "89243456": 528, "8926": [509, 528], "89287": 464, "893": 452, "894": [468, 509], "8943121e": 503, "89492101e": 501, "895": [493, 509], "8951": 509, "8953e": 488, "8954039e": 503, "8955": 509, "8959": 509, "89595846": 508, "8965": 509, "8968": 509, "89709472": 528, "89795918367346": 485, "898": [452, 509], "8985": 509, "8986348363207728": 510, "89873": 481, "8988": 509, "8989213": 481, "898e": [474, 498], "899": [67, 509], "8994": 509, "8996": 509, "8998": 509, "8999": 481, "899a": 286, "89e": 499, "8e": [468, 479, 482, 484, 507, 509, 515, 589], "9": [31, 33, 35, 67, 83, 87, 91, 200, 212, 242, 244, 348, 355, 389, 396, 397, 401, 409, 430, 436, 438, 449, 452, 454, 457, 459, 464, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 554, 562, 566, 567, 568, 593, 601, 606], "90": [57, 67, 416, 473, 477, 480, 481, 498, 505, 508, 509, 530], "900": [498, 509], "9002269877996247": 493, "900269": 503, "9003": 509, "9006": 509, "9008": 509, "9011": 509, "9014": 509, "901786": 574, "902": [463, 469], "9023670e": 503, "90242058e": 499, "9026": 509, "9030": 509, "9032163": 86, "904": 528, "9047": 488, "905": [498, 509], "9051": 509, "9053655e": 503, "9053906e": 503, "9057": 509, "906": [452, 498], "90605275e": 515, "9064": 509, "90677811e": 500, "90685": 474, "907": 498, "9070": 509, "9074812e": 503, "9077294": 514, "9080": 509, "9082": 509, "908e": 470, "909": 509, "9091": 509, "9098": 509, "90d": 610, "90e": [103, 471, 479, 488, 499], "91": [473, 505, 509, 511, 555], "9105": 509, "9107": 509, "9108": 509, "9109": 509, "911": 452, "9111": 509, "911552441438736e": 490, "912": [498, 509], "9121": 509, "9122": 509, "9125": 509, "912525e": 528, "912779907405": 498, "9131": 509, "913196574074": 490, "9134": 509, "9138": 509, "913e": 474, "914": [67, 509], "9143": 509, "915": 498, "91507": [103, 499], "916120": 598, "91612243652344": 466, "9162": 509, "9163195e": 503, "91719": 499, "9179": 509, "918": 67, "9180": 509, "918365": 498, "9183673469387759": 485, "9186": 509, "9187": 509, "919": 452, "919e": 498, "91e": 507, "92": [473, 474, 505, 509, 514], "920": 470, "92052435e": 500, "9205875e": 503, "921": 471, "9215375e": 503, "922": 509, "9221": 509, "92234009259": [430, 490], "923": 509, "9231": 509, "9234": 509, "9239": 509, "924": [471, 509], "9240e": 508, "9245": 509, "92490": 474, "925": 509, "925106": 481, "9254": 509, "9259": 509, "9264": 509, "9265": 509, "926745": 572, "9269494e": 503, "9273e": 488, "9277492e": 503, "928": [498, 509], "9280475e": 503, "929": [464, 471], "9290": 509, "929597172179024": 525, "93": [67, 125, 127, 473, 474, 505, 509, 514], "930": 509, "93026": 498, "9303": [498, 528], "9307": 509, "93128e": 464, "9313": 509, "9317": 509, "932": [452, 509], "9327": 509, "93271046296": 490, "933": 452, "9332549000000": 528, "9335": 509, "9342": 509, "9343": 464, "9345": 509, "9346": 509, "935826709880043": 496, "937": 509, "93702": 515, "9372": 509, "9378": 509, "938": 509, "9382336444241555": 510, "9383": 509, "9384": 509, "9387755102040822": 485, "938e": [481, 498], "939": [299, 305, 519], "9391360e": 503, "93988308": 97, "93e": 498, "94": [473, 498, 505, 509, 514, 525, 528], "9409": 509, "940e": 498, "940fals": 468, "94111838": 97, "94186555556": [430, 490], "943": 509, "9431": 509, "943282347242818": 525, "944060876": 500, "9441e": 476, "9448": 509, "9453950989269149": 510, "9462": 481, "946923": 280, "94722599": 481, "94723": 481, "947e": 474, "948683": 464, "9487": 509, "9489822e": 503, "949": 507, "9493": 509, "9499": 509, "9499210e": 503, "94e": [481, 498], "95": [33, 67, 157, 163, 165, 166, 167, 169, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 473, 474, 481, 488, 498, 499, 501, 505, 506, 509, 514, 560, 607], "950": [452, 509], "9500979841335693": 316, "95024536e": 501, "9506": 509, "9508": 509, "950e": 470, "952": [67, 509], "9523": 509, "9528": 509, "9529719e": 503, "953": [507, 509], "9535": 509, "9537056583888585e": 422, "9539": 509, "95421509259": 490, "9544": 509, "95451985e": 127, "9546285068162436": 510, "9550": 509, "9551": 509, "9552": 509, "95615": 464, "9565": 509, "957": 67, "9570": 509, "9580e": 472, "9584": 509, "9585": 509, "95883": 528, "9589": 509, "959": 509, "9590": 509, "959198": 498, "9592": 509, "9598": 509, "959d": [52, 53], "96": [433, 465, 473, 499, 505, 509, 570], "960": 509, "9600": 509, "9605": 509, "9606540e": 503, "9608912e": 503, "9613": 509, "9616": 509, "9619812963": 490, "9622": 509, "96374320": 477, "9645": 509, "9651": 509, "9657": 509, "966": 452, "96602": 476, "967506": 508, "967546": 474, "9677107409819438": 316, "968": [470, 481], "96814": 528, "96833546296": [498, 515], "969": 498, "9692e": 465, "96e": 468, "96r": 505, "97": [473, 498, 503, 509, 510, 526], "97003": 528, "97054": 474, "9707": 509, "970e": 498, "971": 509, "9710": 509, "97116": 481, "972": 509, "972194607053448e": 495, "9723e": 492, "9728": 509, "973": [498, 509], "9730e": 480, "97369425926": 490, "974e": 498, "975": [452, 509], "9754": 509, "97596": 474, "976": 452, "977": 509, "9774": 509, "977453302339917": 492, "97749": 481, "97749371": 481, "9776920e": 503, "9789": 509, "979": [67, 452, 505], "9792": 509, "97934": 474, "979591836734677": 485, "9796": 509, "97978": 83, "9799": 509, "97e": 498, "98": [83, 358, 466, 472, 473, 474, 479, 490, 492, 503, 509, 525], "980": 67, "9801": 509, "9804": 509, "98049": 474, "9806": 509, "981": [463, 509, 512], "98149518519": 490, "9816452e": 503, "982": 509, "982075849517389e": 508, "98258": 474, "9828": 509, "983": 509, "9830": 509, "9833": 509, "9833462074166": 498, "9834": 509, "9834338e": 503, "98359211280635647": 481, "9841": 509, "98429": 474, "9845": 464, "9847406e": 503, "984949": 564, "984e": 474, "985": [452, 468], "985502122122975": 510, "986": 509, "9862e": 472, "986616": 477, "9868439189392118": 525, "9876": 464, "9878": 509, "988": [452, 498, 507, 509], "9883": 509, "988409870698051e": 52, "988413141629203e": 422, "9885": 509, "9886": 509, "9889": 509, "989": 509, "9890": 528, "989779066475214e": 422, "98e": 498, "99": [358, 473, 474, 476, 488, 500, 509, 526, 528], "990": 509, "9902": 509, "991": 498, "9910": 509, "9910796e": 503, "9912648e": 503, "9912712e": 503, "9917": 509, "9919": 509, "992": 509, "9920": 509, "993": [466, 509], "9931": 528, "9932": 509, "994": 452, "9940e": 492, "994e": 498, "995": 507, "9952623149688797": 525, "9957": 509, "9969731e": 503, "997": 452, "9977859e": 503, "9978": 528, "998": 482, "99848e": 515, "99878762e": 500, "999": [50, 166, 169, 498], "99919925926": 244, "9993": 509, "99993896484375": 470, "9999912037958": 481, "999999": 498, "99999994": 86, "9999999995": 498, "9999999997835": 466, "99999999999545": 495, "999999999997": 483, "9999999999977": 498, "9999999999978": 491, "9999999999998": 498, "99999999999994": 498, "99999999999999": [473, 498], "99e": 498, "9d": 485, "9e": [465, 468, 498, 509, 589], "9ve6klz7": 504, "A": [16, 19, 20, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 109, 110, 111, 125, 126, 127, 136, 139, 144, 145, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 218, 219, 220, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 294, 298, 306, 307, 318, 327, 381, 382, 383, 385, 386, 392, 393, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 432, 434, 438, 439, 440, 441, 442, 445, 447, 448, 451, 452, 453, 454, 456, 458, 459, 460, 461, 464, 466, 472, 474, 479, 481, 482, 485, 490, 491, 492, 493, 496, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 520, 524, 526, 528, 530, 538, 539, 540, 542, 543, 551, 552, 554, 555, 557, 560, 599, 600, 603, 604, 607], "AND": [506, 507], "AS": 423, "And": [286, 392, 395, 410, 413, 419, 425, 466, 468, 470, 471, 479, 483, 485, 492, 499, 501, 505, 506, 508, 509, 514, 525, 526, 528], "As": [83, 318, 348, 392, 393, 395, 400, 404, 405, 406, 408, 410, 419, 420, 423, 430, 435, 454, 464, 465, 466, 470, 471, 472, 474, 476, 477, 481, 483, 484, 490, 491, 492, 495, 496, 497, 498, 499, 501, 504, 505, 508, 509, 511, 515, 525, 528, 542, 551, 607], "At": [269, 406, 409, 412, 419, 420, 422, 424, 438, 483, 505, 514, 603], "But": [392, 397, 400, 406, 411, 420, 424, 430, 454, 470, 471, 501, 511, 514, 525, 605], "By": [19, 20, 26, 50, 65, 87, 91, 102, 103, 106, 110, 111, 124, 128, 132, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 176, 183, 193, 195, 196, 197, 199, 205, 208, 209, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 239, 240, 242, 244, 246, 247, 250, 254, 255, 256, 258, 259, 260, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 389, 392, 419, 420, 421, 439, 440, 442, 483, 484, 491, 496, 501, 505, 509, 511, 526, 549, 553, 560, 561, 562, 608], "FOR": [139, 306], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 110, 111, 120, 122, 124, 125, 127, 128, 129, 132, 133, 135, 136, 153, 154, 155, 160, 161, 166, 169, 176, 181, 182, 183, 186, 187, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 268, 270, 271, 273, 274, 275, 277, 281, 282, 284, 297, 299, 303, 305, 315, 321, 336, 391, 392, 393, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 418, 419, 420, 421, 424, 425, 429, 430, 432, 435, 436, 437, 439, 440, 441, 442, 445, 452, 456, 459, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 483, 485, 488, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 520, 521, 525, 526, 528, 530, 537, 538, 540, 542, 547, 552, 554, 555, 561, 566, 600, 604, 605, 607, 608, 609], "IN": [92, 100, 253], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 139, 143, 144, 146, 148, 153, 154, 155, 161, 164, 166, 169, 170, 172, 173, 176, 178, 179, 182, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 214, 217, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 293, 315, 318, 330, 331, 336, 377, 381, 385, 386, 387, 388, 392, 393, 394, 395, 397, 399, 400, 405, 406, 408, 409, 410, 414, 415, 416, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 453, 454, 455, 464, 466, 468, 470, 472, 473, 476, 479, 481, 484, 488, 490, 491, 492, 493, 495, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 514, 515, 516, 528, 540, 542, 547, 553, 555, 562, 564, 578, 605, 606, 607, 608], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 87, 88, 91, 94, 102, 104, 109, 124, 127, 136, 153, 172, 195, 197, 200, 203, 209, 217, 219, 281, 293, 311, 313, 331, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 430, 435, 436, 437, 438, 439, 440, 441, 442, 445, 456, 459, 464, 465, 466, 468, 470, 471, 472, 473, 474, 477, 479, 480, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516, 520, 525, 526, 528, 538, 540, 542, 547, 550, 551, 552, 554, 555, 556, 560, 561, 566, 580, 600, 603, 604, 605, 606, 607, 608, 609], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 110, 111, 112, 115, 117, 125, 144, 153, 154, 155, 157, 161, 164, 165, 166, 167, 169, 179, 182, 186, 187, 192, 196, 197, 199, 201, 204, 205, 208, 209, 211, 223, 224, 227, 230, 231, 233, 234, 235, 240, 244, 246, 247, 250, 254, 256, 258, 265, 269, 270, 272, 273, 274, 275, 278, 282, 297, 301, 303, 304, 326, 340, 345, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 424, 425, 429, 431, 435, 436, 437, 438, 442, 445, 447, 448, 449, 454, 456, 458, 459, 460, 461, 464, 471, 477, 480, 482, 484, 488, 493, 496, 498, 499, 500, 501, 504, 505, 506, 508, 509, 511, 514, 515, 516, 517, 520, 525, 526, 528, 530, 531, 538, 539, 541, 542, 546, 547, 549, 551, 555, 571, 574, 575, 577, 578, 582, 583, 585, 586, 587, 588, 602, 603, 604, 605, 606, 607, 609], "Its": [28, 404, 419, 420, 445, 447, 485, 491, 511, 526, 544, 545, 546, 548], "NOT": 506, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 403, 414, 417, 418, 453, 455, 462, 485, 495, 498, 501, 504, 505, 509, 528], "Not": [106, 110, 111, 198, 204, 206, 400, 589], "ON": [103, 106, 135, 183, 184, 185, 193, 390, 398, 447, 461, 464, 465, 470, 473, 477, 481, 490, 491, 493, 501, 504, 511, 513, 542, 551, 604, 606, 608], "OR": [103, 110, 499, 506, 507], "Of": [392, 395, 430, 479, 499, 505, 509, 515, 605, 608], "On": [21, 147, 171, 177, 178, 181, 297, 304, 312, 392, 393, 398, 400, 407, 408, 423, 425, 426, 427, 428, 449, 479, 480, 501, 520, 607], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102, 103, 106, 110, 111, 229, 238, 253, 344, 392, 393, 398, 400, 401, 402, 403, 406, 408, 409, 410, 419, 422, 459, 466, 471, 477, 490, 501, 504, 505, 506, 509, 525, 528, 551, 555, 580, 605, 607], "Ones": 318, "Or": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 393, 411, 413, 471, 479, 495, 499, 500, 505, 514, 515, 540], "Such": [404, 546], "THE": [139, 306], "That": [16, 19, 20, 84, 90, 105, 126, 214, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 392, 393, 397, 406, 409, 413, 501, 528, 605], "The": [11, 15, 16, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 173, 177, 178, 182, 183, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 284, 285, 286, 292, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 312, 318, 330, 336, 338, 339, 342, 358, 374, 375, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 431, 434, 435, 437, 438, 439, 440, 441, 442, 445, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 479, 481, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 520, 521, 525, 526, 527, 528, 530, 531, 532, 533, 537, 538, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 560, 562, 564, 565, 566, 570, 578, 580, 589, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610], "Their": 506, "Then": [67, 103, 108, 110, 395, 397, 402, 405, 407, 408, 409, 410, 417, 427, 466, 470, 479, 480, 483, 488, 490, 501, 506, 508, 511, 526], "There": [87, 91, 144, 392, 393, 397, 398, 399, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 420, 422, 424, 426, 427, 453, 461, 481, 485, 496, 497, 498, 499, 501, 503, 504, 506, 507, 516, 530, 538, 539, 542, 555], "These": [77, 95, 201, 285, 392, 393, 397, 398, 403, 405, 406, 407, 408, 412, 413, 414, 419, 422, 437, 439, 440, 441, 445, 453, 459, 464, 480, 482, 483, 492, 496, 497, 499, 505, 508, 509, 510, 516, 518, 520, 530, 547, 552, 554, 555, 606, 607, 608], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 100, 105, 109, 124, 126, 128, 132, 195, 207, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 285, 297, 382, 383, 394, 395, 399, 400, 403, 404, 405, 407, 408, 414, 415, 416, 417, 418, 419, 422, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 440, 441, 445, 447, 453, 454, 456, 459, 464, 465, 466, 468, 470, 471, 472, 473, 476, 477, 479, 481, 482, 483, 484, 485, 488, 490, 491, 492, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 520, 525, 528, 538, 539, 540, 543, 547, 549, 551, 552, 560, 603, 605, 606, 607, 610], "With": [83, 101, 248, 392, 401, 402, 419, 441, 454, 511, 538, 607], "_": [103, 110, 130, 240, 260, 392, 393, 406, 417, 419, 470, 473, 477, 497, 498, 501, 507, 511, 538, 547, 551], "_0": [50, 51], "_1": [106, 111, 539], "_2": [106, 111], "__all__": 392, "__array__": 318, "__array_ufunc__": [472, 483, 517, 593], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 330, 398, 403, 421, 441], "__class__": [392, 417, 497, 536], "__dict__": [16, 84, 90, 105, 126, 392], "__enter__": 369, "__eq__": 447, "__exit__": 369, "__fields__": 420, "__getitem__": [402, 403, 404, 461], "__init__": [16, 84, 90, 105, 126, 204, 281, 392, 398, 404, 417, 422, 456], "__int__": 336, "__len__": 402, "__main__": [264, 392, 511, 523, 605], "__name__": [392, 477, 490, 491, 492, 495, 497, 523, 536, 605], "__neq__": 447, "__pydantic_extra__": [16, 84, 90, 105, 126], "__pydantic_fields_set__": [16, 84, 90, 105, 126], "__repr__": [392, 440, 454], "__str__": [392, 404, 420, 437], "__subclasses__": 497, "__version__": 429, "_build": [393, 424], "_check_interv": 459, "_compute_flux_spati": 445, "_covari": [229, 253], "_data": 417, "_dataset": 393, "_dom_class": [479, 488, 505, 525, 526], "_energy_t": 417, "_err": 495, "_errn": [128, 129, 132, 133], "_errp": [128, 129, 132, 133], "_evaluate_timevar_sourc": 459, "_f_cash_root_cython": 310, "_factr": 501, "_fields_set": [16, 84, 90, 105, 126], "_i": 130, "_k": [103, 110, 538], "_l": 538, "_lat": 392, "_lon": 392, "_map": 385, "_model": 125, "_new_attribut": 392, "_old_attribut": 392, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 105, 126], "_parse_dataset": 422, "_phi": 392, "_prior": 421, "_propagate_error": 444, "_reco": 392, "_repr_html_": 392, "_row_index": 69, "_sampl": 422, "_sample_coord_time_energi": 459, "_sampler": 422, "_scan": 501, "_time_group": 417, "_time_t": 417, "_true": 392, "_type": [421, 511], "_types_namespac": [16, 84, 90, 105, 126], "_update_model": 422, "_was_": [16, 84, 90, 105, 126], "_wc": 567, "_weight": 421, "a_": [106, 111, 156, 544, 547, 607], "a_off": 607, "a_on": 607, "a_scan": 511, "aa": [87, 91, 318, 419], "aaguasca": 456, "ab": [33, 38, 50, 52, 53, 58, 60, 61, 62, 64, 65, 83, 88, 138, 156, 209, 217, 219, 250, 285, 286, 497, 498], "abc": [18, 56, 99, 123, 175, 194, 199, 504], "abcmeta": 504, "abdalla2018": [551, 552, 604], "abeysekara": 59, "abil": [417, 422, 509, 511], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 402, 407, 410, 422, 466, 488, 490, 491, 509, 511, 518, 520, 605], "about": [11, 13, 84, 90, 105, 126, 151, 156, 219, 238, 239, 244, 248, 284, 348, 392, 395, 397, 401, 408, 409, 411, 412, 413, 414, 418, 419, 421, 423, 424, 429, 430, 449, 450, 454, 455, 456, 465, 468, 474, 476, 477, 479, 480, 481, 483, 498, 503, 505, 508, 509, 515, 526, 528, 538, 539, 605, 608], "abov": [29, 44, 52, 53, 83, 124, 126, 127, 130, 134, 135, 136, 144, 145, 171, 206, 381, 383, 392, 393, 395, 398, 401, 402, 404, 406, 408, 409, 410, 411, 413, 417, 422, 426, 427, 430, 464, 474, 481, 483, 484, 485, 490, 493, 495, 500, 501, 504, 505, 506, 508, 509, 510, 511, 514, 515, 516, 525, 536, 538, 539, 546, 549, 555, 604, 605, 606, 607, 608], "abramowski": 156, "abruptli": [392, 418], "abs_path": 326, "absenc": [407, 477, 504, 506, 551, 606], "absolut": [82, 91, 107, 150, 151, 152, 153, 156, 158, 160, 163, 168, 196, 197, 199, 201, 205, 208, 209, 322, 348, 368, 372, 540], "absolute_tim": 609, "absopt": 410, "absorb": [282, 402, 416, 452, 570], "absorbedspectralmodel": [439, 452], "absorbt": 416, "absorpt": [231, 410, 442, 452, 461, 463, 467, 469, 520, 556, 569, 590], "abstract": [16, 56, 59, 84, 90, 99, 105, 123, 126, 167, 175, 180, 194, 196, 199, 208, 262, 403, 441, 554], "abstractsetintstr": [16, 84, 90, 105, 126], "abthi_mi": 479, "ac": [311, 313], "acada": 419, "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 106, 107, 111, 124, 125, 127, 129, 171, 188, 193, 195, 196, 197, 199, 207, 208, 209, 229, 253, 298, 390, 396, 397, 398, 399, 400, 401, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 446, 450, 459, 461, 464, 465, 471, 472, 473, 477, 481, 484, 499, 504, 505, 509, 515, 538, 554, 561, 580, 606, 607], "acceptance_off": [106, 107, 111, 124, 125, 127, 171, 181, 404, 464, 466, 470, 473, 477, 538, 607], "acceptance_on": [124, 125, 127], "acceptang": 124, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 77, 82, 83, 87, 91, 103, 124, 136, 164, 194, 195, 204, 207, 304, 326, 392, 400, 401, 402, 403, 405, 408, 412, 417, 424, 426, 429, 434, 435, 442, 449, 450, 452, 453, 459, 460, 468, 470, 471, 472, 479, 495, 498, 501, 503, 507, 508, 509, 514, 517, 525, 526, 528, 537, 542, 553, 554, 555, 603], "accessor": 505, "accident": [515, 605], "accomplish": [412, 500], "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 83, 87, 91, 103, 106, 110, 111, 120, 125, 148, 154, 164, 171, 195, 201, 217, 219, 311, 313, 315, 381, 402, 403, 406, 407, 410, 412, 417, 419, 439, 448, 460, 467, 477, 490, 499, 504, 508, 510, 518, 520, 538, 539, 542], "accordingli": [209, 404, 412, 419, 436, 442, 506], "account": [103, 106, 110, 111, 124, 125, 139, 173, 189, 229, 253, 269, 294, 298, 304, 366, 400, 405, 408, 417, 419, 441, 458, 460, 463, 464, 466, 467, 469, 470, 472, 477, 479, 485, 492, 493, 500, 501, 504, 506, 520, 526, 538, 540, 606, 607], "accur": [137, 146, 221, 410, 412, 422, 455, 479, 501, 509, 549], "accuraci": [406, 501, 542], "acee67": 274, "aceptance_off": 404, "acero": [410, 422, 435, 437, 439, 442, 445, 447, 452, 454, 460, 461], "achiev": [16, 84, 90, 105, 120, 126, 171, 382, 383, 392, 401, 402, 403, 404, 405, 406, 408, 412, 416, 419, 442, 505, 508, 510, 552, 610], "acknowledg": [395, 419, 431], "acquir": 430, "acquisit": 604, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 120, 392, 401, 404, 424, 482, 492, 507, 515, 538, 554, 564, 604], "act": [91, 408, 507, 566], "action": [171, 397, 402, 408, 412, 419, 423, 424, 445, 492], "activ": [91, 304, 395, 409, 412, 425, 426, 428, 429, 430, 439, 456, 496, 542], "actual": [184, 366, 367, 368, 391, 392, 393, 397, 401, 403, 405, 407, 408, 412, 417, 418, 420, 423, 473, 484, 488, 491, 499, 500, 501, 504, 505, 506, 511, 515, 516, 526, 528, 549, 551, 604, 605, 607], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 82, 83, 84, 87, 90, 91, 103, 105, 106, 110, 111, 115, 116, 119, 126, 127, 196, 197, 199, 204, 205, 208, 209, 392, 393, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 413, 417, 419, 434, 435, 436, 438, 439, 440, 442, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 472, 477, 479, 480, 503, 504, 507, 508, 510, 511, 516, 538, 555, 608], "adapt": [120, 171, 214, 401, 402, 405, 406, 411, 412, 413, 415, 416, 419, 423, 430, 435, 436, 438, 439, 440, 442, 443, 445, 448, 451, 452, 454, 456, 458, 459, 460, 461, 499, 503, 505, 506, 549, 552], "adaptiveringbackgroundestim": [181, 398], "adaptiveringbackgroundmak": [174, 439, 552], "adass": 413, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 90, 91, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 125, 126, 127, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 173, 196, 197, 199, 203, 205, 208, 209, 215, 229, 253, 269, 315, 360, 380, 389, 391, 392, 393, 395, 397, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 421, 422, 423, 426, 428, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 473, 479, 480, 483, 488, 490, 493, 499, 503, 504, 505, 506, 508, 511, 514, 528, 532, 533, 542, 555, 572, 605, 608], "add_artist": [508, 560, 561], "add_cbar": [103, 106, 110, 111, 127, 150, 151, 153, 156, 157, 158, 163, 164, 165, 167, 196, 197, 199, 205, 208, 209, 229, 253, 380, 474, 476, 477, 479, 481, 488, 493, 497, 499, 503, 504, 505, 507, 508, 515, 516, 525, 526, 555, 559, 560, 561, 564, 565, 567, 610], "add_chain": 509, "add_column": [87, 91], "add_enabled_unit": [464, 473, 476, 479, 481, 488, 492, 514], "add_index": [87, 91], "add_loc": 392, "add_row": [87, 91], "add_subplot": [380, 610], "addit": [16, 19, 20, 26, 43, 84, 87, 90, 91, 103, 105, 106, 110, 111, 115, 124, 126, 128, 133, 168, 196, 197, 199, 202, 205, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 392, 395, 396, 397, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 417, 418, 419, 420, 422, 424, 425, 426, 427, 436, 437, 439, 441, 442, 445, 446, 453, 454, 456, 459, 460, 461, 468, 472, 485, 493, 498, 499, 500, 501, 505, 507, 508, 509, 511, 514, 515, 526, 528, 538, 540, 542, 549, 554, 555, 602, 608], "addition": [133, 404, 499, 501, 505, 507, 508], "address": [401, 404, 405, 406, 408, 412, 419, 511, 541], "adequ": 204, "adher": 395, "adjac": [148, 201, 445, 491, 505, 551], "adjust": [16, 67, 196, 197, 199, 205, 208, 209, 401, 403, 416, 461, 471, 496, 499, 500, 508, 510, 525, 542, 549, 604], "admit": 413, "adonath": 398, "adopt": [37, 405, 408, 414, 472, 483, 484, 497], "adress": 422, "adsab": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 250, 285, 286], "adult": 392, "advanc": [404, 408, 409, 413, 421, 426, 503, 505, 542, 604, 605], "advantag": [400, 406, 409, 412, 417, 422, 445, 505, 511, 580, 605], "advanteg": 404, "advertis": 423, "advic": [392, 419], "advis": [393, 419, 501, 511, 520], "advoc": 392, "aeff": [16, 82, 87, 88, 106, 111, 156, 182, 190, 402, 404, 405, 441, 442, 466, 470, 471, 472, 476, 477, 479, 481, 491, 495, 503, 504, 514, 516, 517, 525, 526, 544, 549, 551, 552, 604], "aeff2d": 155, "aeff_2d": [82, 87, 156, 514, 517], "aeff_3d": 503, "aeff_ev": 503, "aeff_new": 503, "aeff_perc": [182, 466, 470, 471, 481, 491, 495, 504, 516, 551], "aegi": 231, "af": 388, "affect": [139, 392, 400, 404, 406, 418, 436, 437, 448, 457, 465, 511], "affili": [406, 419, 456], "afmhot": [507, 528], "aforement": 419, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 103, 105, 106, 110, 126, 166, 169, 222, 304, 330, 348, 372, 375, 392, 395, 397, 400, 401, 403, 405, 406, 407, 408, 410, 411, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 430, 434, 441, 443, 444, 445, 447, 453, 455, 456, 457, 468, 477, 479, 491, 495, 496, 501, 505, 507, 509, 514, 516, 517, 542, 605, 609], "aftervalid": 90, "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 322, 392, 532], "again": [166, 395, 402, 404, 406, 408, 414, 420, 425, 440, 441, 444, 451, 456, 468, 470, 471, 479, 484, 485, 505, 508, 511, 515, 525, 528, 555, 605], "against": [16, 84, 90, 105, 126, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 393, 395, 409, 416, 424, 498, 500, 515, 525, 537, 540], "agent": 408, "agglom": 13, "aggreg": 420, "agil": 405, "agn": [140, 302, 406, 470, 490, 492, 496, 514], "agnost": 501, "ago": 399, "agre": [198, 201, 395, 397, 406, 412, 419], "agreement": [392, 395, 414, 493], "aguasca": [447, 456, 457, 458, 459, 461], "aharonian": 482, "ahead": [406, 434], "ahelp": 214, "aic": 422, "aim": [392, 401, 402, 419, 422, 479, 483, 497, 510, 530, 604], "air": 514, "ait": [195, 196, 197, 523], "aitoff": 406, "aka": 528, "akenwzbq": 495, "al": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 35, 39, 40, 57, 59, 63, 102, 120, 134, 139, 140, 156, 231, 303, 304, 306, 311, 312, 313, 393, 402, 422, 461, 474, 482, 496, 509, 530, 604], "alamo": 422, "albert": [63, 604], "albert2007": 604, "alexi": [442, 445], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 120, 134, 136, 171, 214, 297, 392, 398, 404, 405, 406, 411, 420, 422, 437, 442, 450, 451, 452, 461, 474, 496, 500, 501, 509, 516, 540, 554, 603, 607], "alia": [16, 56, 84, 90, 105, 126, 395, 528], "alias": [16, 56, 84, 90, 105, 126], "align": [87, 91, 100, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 176, 195, 196, 197, 199, 201, 205, 207, 208, 209, 392, 461, 503, 506, 508], "alisha": 447, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 103, 104, 105, 106, 108, 109, 110, 111, 124, 125, 126, 127, 128, 132, 133, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 170, 176, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 363, 364, 365, 366, 367, 368, 379, 388, 391, 392, 393, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 466, 470, 471, 472, 476, 477, 479, 481, 482, 483, 488, 490, 492, 493, 495, 498, 499, 500, 501, 503, 505, 506, 507, 508, 511, 514, 515, 516, 517, 518, 520, 523, 525, 526, 528, 532, 538, 540, 542, 547, 551, 553, 554, 555, 556, 580, 602, 605, 606, 607], "all_quant": [125, 127], "allclos": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 198, 199, 201, 205, 206, 208, 209, 366], "allianc": 412, "alloc": [197, 205, 209], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 105, 120, 125, 126, 127, 135, 136, 166, 169, 195, 200, 202, 341, 392, 393, 395, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 436, 438, 439, 440, 441, 442, 445, 447, 454, 455, 456, 459, 461, 464, 470, 482, 492, 499, 500, 501, 503, 504, 505, 506, 509, 526, 538, 540, 542, 549, 554, 555, 602, 603, 605, 610], "allow_extra": 200, "allow_pickl": [16, 84, 90, 105, 126], "allowed_channel": [26, 497], "allski": [83, 505], "alma": 411, "almeida": 442, "almost": [391, 393, 395, 406, 515, 528], "alogrithm": 422, "alon": 397, "along": [68, 102, 125, 127, 131, 148, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 167, 168, 196, 197, 199, 205, 207, 208, 209, 302, 303, 304, 306, 329, 330, 340, 350, 351, 401, 402, 417, 422, 456, 459, 461, 476, 485, 498, 499, 503, 504, 507, 508, 509, 539, 554, 555, 573, 604], "alpha": [21, 27, 28, 48, 103, 106, 110, 111, 124, 125, 127, 171, 193, 214, 234, 235, 245, 246, 247, 261, 298, 309, 315, 389, 390, 404, 416, 418, 445, 452, 461, 464, 465, 466, 468, 470, 472, 473, 477, 479, 480, 484, 493, 498, 501, 511, 514, 560, 570, 572, 574, 576, 578, 579, 580, 589, 596, 597, 606, 607, 608], "alpha_": [106, 111], "alpha_1": [106, 111], "alpha_2": [106, 111], "alpha_norm": [231, 416, 465, 570], "alphabet": [409, 419, 435, 436, 437, 438, 439, 440, 441, 442, 445], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 214, 277, 278, 279, 281, 392, 395, 398, 399, 400, 403, 404, 405, 406, 407, 409, 413, 414, 415, 417, 420, 422, 423, 424, 454, 465, 468, 472, 474, 477, 484, 493, 497, 498, 499, 505, 506, 507, 508, 509, 514, 515, 516, 528, 530, 555, 567], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 120, 124, 125, 127, 128, 137, 138, 144, 146, 147, 168, 173, 179, 194, 201, 203, 204, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 293, 318, 326, 331, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 445, 453, 454, 455, 459, 464, 465, 466, 470, 471, 472, 473, 474, 477, 479, 481, 482, 483, 484, 485, 493, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 525, 526, 530, 538, 539, 540, 541, 542, 547, 549, 551, 554, 555, 580, 583, 602, 604, 605, 606, 607, 609], "alt": [83, 85, 88, 94, 95, 392, 609], "alt_pnt": 91, "altaz": [83, 85, 94, 159, 176, 189, 392, 503, 609], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 87, 91, 292, 391, 392, 395, 397, 401, 427, 445, 465, 470, 472, 474, 482, 498, 501, 503, 505, 507, 514, 538, 539, 605], "although": [392, 405, 406, 407, 409, 413, 417, 501, 509, 514, 565, 566, 602, 609], "altitud": 466, "alwai": [77, 83, 87, 91, 153, 201, 204, 211, 217, 219, 237, 392, 393, 395, 398, 399, 400, 402, 403, 404, 406, 409, 412, 418, 419, 422, 427, 434, 441, 456, 457, 459, 473, 474, 479, 488, 497, 501, 504, 505, 507, 510, 511, 520, 540, 554, 555], "am": 401, "ambigu": [406, 453], "amend": 395, "among": [82, 87, 91, 103, 106, 110, 111, 137, 146, 408, 412, 413, 414, 416, 421, 442, 501, 604], "amount": [399, 406, 421, 542], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 268, 598], "ampl_2": [157, 503], "ampl_3": [157, 503], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 102, 128, 133, 136, 196, 197, 199, 208, 209, 214, 223, 230, 233, 235, 240, 247, 251, 258, 259, 260, 268, 270, 273, 274, 275, 286, 292, 307, 403, 404, 407, 416, 422, 465, 466, 468, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 488, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 507, 508, 509, 514, 515, 525, 526, 528, 540, 559, 560, 561, 562, 564, 565, 566, 567, 570, 571, 572, 574, 575, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 607], "amplitude_err": 495, "amplitude_maximum_signific": 496, "amplitude_maximum_vari": 496, "amplitude_ref": 493, "amybljkf": 495, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 109, 110, 111, 112, 115, 117, 118, 125, 126, 127, 128, 129, 130, 132, 133, 136, 143, 144, 145, 147, 151, 153, 154, 155, 156, 158, 161, 164, 166, 168, 169, 172, 176, 179, 181, 184, 186, 187, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 288, 297, 302, 304, 316, 318, 322, 336, 347, 351, 369, 375, 382, 383, 385, 388, 391, 393, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 430, 431, 434, 435, 438, 439, 440, 441, 442, 445, 447, 448, 449, 452, 453, 454, 456, 457, 459, 460, 461, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 485, 488, 490, 491, 492, 493, 495, 496, 498, 500, 501, 504, 505, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 523, 525, 526, 527, 528, 530, 532, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608], "anaconda": [409, 425, 426], "analog": [87, 91, 196, 197, 199, 205, 208, 209, 555], "analogi": 414, "analys": [82, 391, 392, 401, 402, 403, 404, 406, 410, 413, 415, 416, 421, 430, 431, 437, 438, 439, 441, 442, 452, 454, 457, 470, 471, 479, 491, 492, 497, 498, 506, 508, 509, 514, 515, 516, 525, 526, 530, 538, 605], "analysi": [6, 16, 35, 57, 67, 70, 72, 74, 83, 101, 103, 105, 106, 110, 111, 116, 119, 154, 155, 161, 166, 169, 178, 182, 221, 222, 391, 392, 393, 396, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 422, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 438, 439, 440, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 463, 465, 468, 469, 474, 476, 477, 478, 482, 483, 485, 486, 487, 488, 489, 492, 494, 495, 497, 498, 499, 501, 502, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 526, 527, 528, 530, 540, 542, 547, 549, 550, 551, 552, 555, 583, 602, 604, 605, 607], "analysis3d": 455, "analysis_1": [463, 525, 529], "analysis_1d": 490, "analysis_2": [393, 463, 526, 529], "analysis_3d": [454, 463, 479, 487, 490], "analysis_joint": 479, "analysis_mwl": [463, 480, 487], "analysis_stack": 479, "analysisconfig": [15, 393, 471, 476, 477, 479, 490, 525], "analyt": [19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 156, 157, 165, 167, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 405, 410, 460, 461, 500, 503, 508, 540, 562, 608], "analyz": [139, 306, 402, 604], "andrea": 405, "andrew": 454, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 103, 106, 116, 119, 120, 124, 131, 136, 150, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 172, 176, 179, 180, 182, 184, 194, 195, 197, 202, 204, 207, 209, 210, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 279, 281, 285, 346, 379, 392, 398, 406, 408, 416, 420, 433, 435, 436, 437, 454, 461, 464, 466, 470, 473, 480, 483, 484, 491, 495, 498, 505, 506, 508, 510, 514, 515, 542, 547, 551, 554, 555, 560, 561, 562, 565, 566, 604, 610], "angle_incr": 179, "angular": [23, 103, 106, 116, 119, 130, 154, 155, 161, 166, 169, 172, 197, 204, 207, 209, 230, 239, 242, 279, 322, 325, 392, 408, 458, 472, 484, 493, 513, 547, 548, 604], "angular_extens": 41, "angular_s": 555, "angular_separ": [416, 458, 460, 508], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 105, 122, 126, 132, 155, 178, 196, 197, 199, 204, 205, 207, 208, 209, 318, 341, 376, 391, 392, 393, 395, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 419, 420, 422, 423, 426, 427, 428, 429, 430, 434, 435, 453, 454, 455, 460, 471, 481, 482, 485, 490, 491, 493, 495, 499, 504, 505, 507, 508, 509, 511, 514, 515, 516, 517, 525, 526, 528, 530, 539, 540, 552, 554, 555, 572, 605, 609], "ann": [23, 453], "anna": 392, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 456, 508, 530], "annoi": [392, 605], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 381, 420, 560], "announc": [392, 397, 399, 406, 408, 411, 414, 416, 418, 419, 423, 424], "annuli": [485, 555], "annulu": [129, 350, 555], "anonym": 395, "anoth": [19, 20, 26, 83, 86, 87, 91, 103, 106, 110, 111, 154, 155, 156, 161, 166, 168, 169, 198, 201, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 392, 393, 406, 407, 408, 410, 412, 413, 414, 417, 420, 422, 425, 426, 428, 430, 439, 454, 493, 499, 505, 506, 508, 555, 605], "another_posit": 551, "answer": [412, 501, 542], "anti": [505, 506], "anticip": 401, "anymor": 456, "anyon": [397, 399, 514], "anyth": [16, 84, 90, 105, 126, 153, 408, 605], "anytim": [395, 436], "anywai": [395, 406], "anywher": [406, 409, 411, 538], "ap": [397, 409, 418], "apart": 407, "apertur": 604, "api": [237, 396, 398, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 418, 419, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 445, 449, 453, 454, 463, 466, 470, 471, 474, 481, 483, 491, 499, 505, 506, 507, 508, 512, 514, 515, 525, 527, 528, 529, 540, 541, 549, 602, 603, 604, 605], "apj": [299, 305], "aplpi": 454, "apologis": [434, 435, 454], "app": [87, 91, 424, 430, 453], "appar": 422, "appear": [87, 91, 392, 393, 400, 406, 420, 448, 459, 461, 498], "append": [87, 91, 92, 100, 149, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 253, 404, 405, 407, 440, 459, 466, 470, 472, 473, 479, 480, 481, 483, 491, 492, 493, 495, 499, 500, 501, 504, 507, 508, 509, 510, 511, 551], "append_ax": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 380], "appendix": [30, 136, 156, 250, 286, 307, 474, 509], "appl": 430, "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 104, 106, 110, 111, 112, 116, 117, 119, 120, 124, 127, 132, 136, 153, 154, 155, 161, 166, 168, 169, 173, 179, 182, 183, 196, 197, 199, 200, 204, 205, 207, 208, 209, 217, 219, 229, 237, 253, 269, 282, 293, 294, 297, 298, 311, 313, 330, 331, 376, 381, 389, 392, 398, 399, 402, 403, 405, 407, 410, 412, 417, 418, 419, 442, 447, 452, 453, 454, 455, 459, 461, 464, 470, 472, 483, 491, 492, 493, 495, 499, 500, 504, 505, 506, 507, 508, 509, 511, 514, 517, 526, 528, 540, 542, 549, 589, 603, 606], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 147, 392, 403, 419, 421, 441, 496, 501, 554, 604], "apply_async": [338, 339], "apply_edisp": 460, "apply_hysteresis_threshold": 506, "apply_irf": [269, 441], "apply_mask": 202, "apply_psf": [403, 438], "apply_standard_scal": 96, "apply_threshold_sensit": 124, "apply_union": 211, "approach": [87, 91, 136, 392, 398, 400, 404, 408, 412, 414, 417, 418, 420, 459, 464, 470, 504, 520, 527, 604, 607], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 195, 196, 197, 199, 208, 209, 318, 326, 393, 472, 477, 479, 495, 505, 605], "approv": [398, 399, 400], "approx": [52, 53], "approxim": [102, 136, 137, 146, 182, 183, 195, 196, 197, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 294, 298, 329, 403, 406, 422, 436, 461, 464, 470, 501, 509, 514, 540, 551, 561, 562, 565, 566, 604], "appveyor": 450, "apr": [415, 432], "april": [413, 420, 441], "apt": 427, "aqtig4ga": 504, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 105, 106, 109, 110, 111, 113, 114, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 139, 140, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 182, 183, 184, 189, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 213, 214, 216, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 297, 302, 306, 311, 312, 318, 330, 336, 338, 350, 351, 366, 381, 383, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 521, 525, 526, 528, 530, 531, 532, 533, 537, 538, 539, 540, 542, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 560, 561, 570, 580, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610], "arakelian": 303, "arang": [120, 407, 474, 491, 495, 554], "arb": 511, "arbitrari": [202, 204, 205, 403, 416, 440, 453, 483, 499, 505, 511, 554, 555], "arbitrary_types_allow": [16, 84, 90, 105, 126, 420], "arbitrarytypemetadata": 420, "archiv": [412, 419, 517, 526], "arcsec": 179, "arctan": 406, "area": [82, 88, 106, 108, 155, 156, 171, 182, 183, 190, 197, 205, 207, 209, 392, 393, 403, 449, 451, 464, 470, 483, 493, 504, 516, 517, 547, 554, 555, 604], "areasc": [452, 454], "aren": [367, 392, 406, 411, 413, 425, 426, 428], "arf": [107, 108, 111, 200, 201, 204, 205, 470, 555], "arf_ob": 107, "arffil": 107, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 105, 110, 111, 126, 150, 151, 152, 156, 157, 158, 160, 163, 164, 165, 167, 168, 197, 198, 205, 224, 237, 251, 258, 259, 260, 341, 605], "arg_in_kwarg": 392, "argmax": 496, "argmin": 496, "argpars": [397, 605], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 102, 103, 105, 106, 109, 110, 111, 126, 127, 128, 130, 132, 136, 149, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 172, 182, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 287, 293, 316, 318, 330, 336, 338, 339, 379, 380, 381, 385, 386, 387, 388, 389, 395, 398, 404, 407, 441, 442, 445, 447, 453, 459, 460, 461, 474, 479, 484, 501, 504, 505, 508, 510, 526, 540, 542, 553, 554, 555, 580, 605], "aris": [397, 408, 542], "arithmet": [224, 403, 455, 505, 506, 508, 572], "arjun": [452, 453], "arm": [33, 34, 38, 45, 449, 508], "armstrong": 453, "arnau": [447, 456, 457, 458, 459, 461], "around": [56, 144, 172, 195, 197, 207, 209, 330, 406, 407, 472, 493, 497, 501, 506, 509, 516, 528, 542, 551, 554, 555], "arpit": 452, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 102, 103, 106, 110, 111, 120, 125, 127, 128, 129, 132, 133, 136, 139, 144, 145, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 217, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 279, 280, 281, 282, 283, 293, 294, 298, 300, 306, 312, 314, 318, 329, 330, 331, 345, 346, 347, 351, 385, 386, 391, 392, 405, 406, 410, 412, 417, 420, 430, 440, 453, 456, 458, 460, 472, 473, 483, 484, 493, 495, 498, 499, 501, 503, 505, 507, 508, 511, 514, 516, 517, 528, 554, 555, 563, 589, 593, 606, 607], "array_lik": [103, 110, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 299, 305, 315], "array_shap": [458, 460], "arriba": [446, 449, 450], "arriv": [228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 397, 405, 439, 440, 441, 483, 604, 608], "arrow": 603, "arrowprop": 560, "arrowstyl": 560, "artefact": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "arthmet": 403, "articl": [138, 274, 397, 466, 491], "artifact": [124, 197], "artifici": 483, "artist": [204, 229, 253, 560, 561], "arxiv": [64, 65, 182, 259, 260, 274, 275, 480, 497, 498, 587, 588], "as_arrai": [87, 91], "as_artist": [204, 205, 508, 555, 560, 561], "as_energy_tru": [194, 195, 204, 207], "as_plot_cent": [198, 201, 206, 495], "as_plot_edg": [198, 201, 206], "as_plot_label": [198, 201, 206], "as_plot_scal": 201, "as_plot_xerr": [198, 201, 206], "asanyarrai": 392, "ascii": [87, 91, 127, 392], "ashton": [422, 509], "ashton2022": 422, "asid": 500, "asimov": [134, 311, 313, 511], "asinh": 474, "asinha": 82, "ask": [393, 395, 397, 399, 406, 408, 409, 413, 419, 429, 490, 528, 542, 543, 605], "asmooth": [120, 121, 392, 411, 440, 451, 454], "asmoothestim": 414, "asmoothmapestim": [121, 392, 414, 440, 442, 445, 474, 542], "aspect": [395, 419, 543, 605, 610], "assert": [198, 200, 201, 206, 366, 367, 368, 395, 403, 416, 505], "assert_allclos": 392, "assert_equ": 392, "assert_nam": [198, 200, 201, 206], "assert_quantity_allclos": [392, 449], "assess": [470, 472, 496], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 104, 109, 110, 195, 217, 219, 269, 279, 388, 392, 401, 404, 407, 420, 423, 466, 488, 490, 499, 501, 505, 508, 511, 526, 528, 554], "assist": 408, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 498, 528], "assoc2": [74, 75, 78, 528], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 498, "assoc_prob_lr": 498, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 87, 91, 100, 103, 106, 124, 125, 135, 136, 139, 140, 141, 142, 154, 155, 166, 169, 186, 187, 192, 205, 229, 253, 280, 306, 318, 392, 398, 408, 417, 418, 419, 420, 421, 459, 460, 465, 466, 468, 470, 474, 480, 498, 499, 500, 504, 505, 507, 508, 511, 516, 528, 539, 540, 542, 555, 607], "association_catalog": [67, 498], "association_nam": [67, 498], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 102, 124, 125, 127, 136, 137, 138, 143, 146, 147, 156, 168, 179, 193, 195, 196, 197, 199, 202, 206, 208, 209, 214, 275, 281, 285, 292, 295, 311, 313, 345, 348, 392, 395, 404, 405, 407, 416, 417, 421, 430, 431, 464, 465, 466, 470, 472, 473, 477, 483, 484, 485, 488, 497, 503, 505, 508, 511, 515, 532, 538, 540, 547, 602, 607], "assumpt": [72, 95, 103, 106, 110, 111, 120, 135, 138, 147, 311, 406, 417, 465, 509, 547, 551, 606], "astri": 97, "astrisim": 405, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 128, 189, 196, 197, 199, 208, 209, 264, 282, 392, 393, 404, 411, 413, 417, 437, 446, 450, 454, 456, 460, 472, 497, 503, 505, 514, 531, 532, 534, 535, 536, 539, 603, 604], "astro_dark_matt": [413, 463, 497, 512], "astromodel": 530, "astronom": [13, 406, 412, 414, 453, 604], "astronomi": [11, 286, 391, 402, 406, 410, 412, 422, 424, 431, 452, 466, 470, 477, 481, 504, 509, 514, 542, 551, 552, 602, 603, 604, 605, 606, 607, 609, 610], "astrophys": [6, 23, 322, 407, 412, 542, 603, 604], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 103, 106, 110, 111, 116, 119, 120, 125, 127, 129, 131, 132, 136, 144, 145, 153, 155, 164, 166, 179, 193, 194, 195, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 217, 219, 223, 224, 227, 231, 233, 234, 235, 240, 243, 244, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 269, 270, 272, 273, 274, 275, 278, 280, 282, 283, 286, 297, 306, 316, 317, 318, 348, 367, 368, 377, 382, 383, 387, 391, 393, 394, 395, 397, 398, 399, 403, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 419, 420, 421, 423, 430, 431, 433, 437, 438, 439, 440, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 517, 520, 525, 526, 528, 532, 534, 535, 536, 538, 539, 540, 542, 544, 546, 549, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 606, 609, 610], "astropy_healpix": 401, "astropy_help": [392, 435, 436, 437], "astropy_introduct": 436, "astropy_timeseri": 407, "astropy_vers": 392, "astyp": [87, 91], "asymetr": 102, "asymmetr": [124, 128, 129, 132, 133, 136, 137, 146, 295, 410, 435, 441, 460, 470, 511, 525, 540, 561], "asymmetri": 503, "asymptot": [134, 607, 608], "atmospher": [407, 426, 431, 509, 514, 547, 604], "atnf": 453, "atol": [86, 100, 132, 201, 206, 366, 368, 392], "atol_ax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209], "atom": 408, "atproduction_gamma": 26, "atreye": [404, 407, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 229, 237, 253, 269, 279, 403, 414, 422, 458, 492, 501, 507, 508, 605], "attempt": [16, 84, 90, 105, 126, 395, 406, 409], "attenu": 465, "attr": 392, "attract": 413, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 181, 182, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 298, 318, 402, 404, 415, 420, 421, 422, 435, 436, 439, 440, 441, 442, 445, 447, 449, 451, 453, 458, 459, 460, 468, 472, 501, 504, 505, 506, 508, 528, 538, 554, 555, 607], "attributeerror": 392, "attrribut": 505, "aug": [405, 408, 409, 411, 432], "august": [399, 405, 408, 411, 481], "authent": 395, "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423], "author2": 393, "authoris": 419, "authorship": 396, "auto": [77, 196, 197, 199, 208, 209, 393, 395, 403, 413, 440, 454, 501, 605], "autocorrel": 139, "autodiff": 410, "autogener": 413, "autograd": [403, 410], "autolog": 412, "autom": [11, 400, 408, 419, 422, 423, 424, 447, 501, 605], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 105, 113, 114, 126, 128, 132, 136, 226, 230, 237, 239, 242, 255, 266, 267, 271, 277, 281, 391, 392, 393, 395, 399, 400, 402, 403, 409, 412, 413, 415, 419, 423, 434, 435, 441, 472, 481, 501, 505, 509, 605, 609], "automatis": 541, "autopep8": 392, "autoscal": [217, 218, 219, 220], "auxiliari": 77, "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 102, 103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 136, 137, 146, 149, 170, 176, 182, 183, 201, 214, 217, 219, 221, 225, 226, 230, 231, 239, 242, 255, 257, 266, 267, 271, 277, 279, 281, 286, 342, 380, 392, 395, 398, 399, 400, 401, 403, 404, 405, 406, 409, 410, 413, 420, 424, 425, 426, 427, 428, 429, 435, 439, 440, 441, 445, 448, 452, 454, 456, 459, 461, 465, 470, 471, 474, 495, 500, 501, 504, 506, 508, 509, 514, 515, 520, 525, 528, 530, 532, 533, 539, 541, 542, 544, 545, 546, 548, 556, 570, 603, 605, 607], "available_hdu": 88, "available_irf": 88, "available_method": [173, 182], "available_quant": [124, 125, 127, 136, 474, 500], "available_select": [176, 183], "available_stat_typ": 102, "averag": [19, 103, 106, 110, 111, 176, 183, 186, 187, 189, 190, 209, 445, 465, 466, 470, 538, 604], "averageaz": [483, 484], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 124, 176, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 297, 392, 393, 398, 399, 400, 402, 406, 410, 411, 412, 415, 416, 418, 419, 421, 426, 428, 445, 447, 456, 458, 459, 461, 470, 477, 506, 511, 539, 542, 551, 605], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 294, 298], "awar": [392, 397, 404, 413, 419], "ax": [16, 19, 20, 26, 66, 67, 83, 102, 103, 106, 110, 111, 112, 113, 114, 115, 117, 124, 125, 127, 129, 130, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 183, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 294, 298, 379, 380, 384, 385, 386, 387, 388, 389, 392, 401, 411, 436, 440, 445, 451, 452, 453, 456, 459, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 506, 507, 508, 509, 510, 511, 514, 515, 516, 525, 526, 528, 538, 540, 542, 544, 549, 551, 552, 553, 554, 560, 561, 562, 566, 570, 599, 600, 604, 610], "ax1": [464, 474, 477, 481, 493, 506, 507], "ax2": [464, 474, 477, 481, 493, 506, 507], "ax3": [474, 481], "ax_crab_3fhl": 528, "ax_ebl": 570, "ax_excess": [466, 470], "ax_model": 570, "ax_residu": [102, 110, 111, 466, 470, 471, 472, 493, 525], "ax_s": [471, 525], "ax_spati": [103, 106, 110, 111], "ax_spectr": [103, 106, 110, 111], "ax_spectrum": [102, 110, 111, 466, 470, 471, 472, 493], "ax_sqrt_t": [466, 470], "axcols1": 505, "axcols2": 505, "axel": [401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "axes0": [196, 197, 199, 205, 208, 209], "axes_loc": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 380], "axes_nam": [195, 196, 197, 199, 204, 205, 207, 208, 209], "axesimag": [380, 381], "axesn": [196, 197, 199, 205, 208, 209], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 102, 103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 120, 124, 125, 127, 128, 129, 131, 132, 136, 137, 140, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 253, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 279, 280, 282, 283, 290, 294, 297, 298, 302, 303, 304, 306, 329, 330, 340, 380, 385, 386, 387, 388, 398, 401, 415, 417, 437, 440, 441, 442, 445, 447, 452, 454, 455, 456, 459, 464, 466, 470, 471, 472, 473, 476, 477, 479, 481, 483, 484, 485, 488, 491, 492, 495, 496, 498, 499, 503, 504, 505, 514, 515, 516, 525, 526, 528, 538, 540, 542, 546, 551, 554, 555, 600, 604], "axis0": 554, "axis1": 505, "axis2": 505, "axis_edg": 385, "axis_nam": [102, 103, 106, 110, 111, 125, 127, 140, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 485, 490, 491, 492, 499, 500], "axis_new": [127, 148, 491, 496], "axis_origin": 496, "axis_rgb": 387, "axis_tru": 481, "axisymmetr": 460, "axvlin": [473, 497, 509, 510, 511], "axvspan": [205, 493], "az": [83, 85, 88, 94, 95, 392, 609], "azimuth": 515, "azur": 441, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 105, 126, 156, 214, 358, 392, 393, 395, 406, 416, 419, 423, 470, 482, 497, 498, 501, 505, 506, 508, 509, 515, 528, 534, 538, 555], "b1509": 498, "b_0": [560, 561], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 197, 330, 395, 402, 403, 406, 412, 413, 422, 423, 470, 471, 473, 505, 508, 525, 605], "backend": [93, 102, 122, 128, 129, 132, 133, 136, 172, 213, 214, 215, 216, 221, 222, 292, 333, 338, 339, 391, 401, 403, 435, 454, 455, 459, 466, 468, 470, 471, 472, 479, 480, 481, 493, 495, 500, 501, 509, 515, 525, 526, 542, 602, 603], "backend_default": [128, 129, 132, 136], "background": [16, 67, 82, 83, 88, 93, 103, 104, 106, 107, 109, 110, 111, 114, 115, 120, 124, 125, 127, 135, 150, 151, 152, 162, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 189, 231, 237, 279, 287, 294, 298, 307, 308, 309, 310, 315, 388, 392, 398, 401, 404, 405, 406, 408, 413, 414, 417, 426, 431, 434, 435, 436, 438, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 459, 460, 461, 463, 464, 465, 466, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 484, 485, 488, 490, 491, 492, 493, 495, 498, 499, 501, 503, 505, 506, 511, 513, 516, 517, 520, 526, 538, 540, 541, 603, 604, 605, 607, 608], "background2d": [151, 152, 162, 441, 448, 456, 458, 460, 545], "background3d": [88, 150, 162, 189, 398, 441, 445, 453, 454, 455, 461, 503, 514, 545], "background_estim": 411, "background_interp_missing_data": 176, "background_map": [279, 403], "background_min": 149, "background_model": [103, 106, 110, 111, 136, 229, 253, 404, 405, 413, 415, 441, 476, 526], "background_oversampl": [176, 183, 504], "background_pad_offset": 176, "background_r": [411, 499], "backgroundconfig": 16, "backgroundestim": [407, 439], "backgroundevalu": 403, "backgroundirf": [150, 151], "backgroundirfmodel": 415, "backgroundmodel": [404, 415, 416, 438, 440, 441, 442, 445], "backgroundtempl": 403, "backport": [399, 418, 423], "backround": 401, "backscal": 205, "backward": [129, 397, 406, 416, 417, 418, 437, 500, 540], "bad": [86, 392, 406], "badli": 424, "balanc": 538, "band": [19, 20, 26, 68, 83, 89, 122, 125, 127, 130, 154, 155, 158, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 398, 410, 411, 416, 417, 426, 434, 468, 470, 471, 480, 481, 482, 493, 497, 498, 508, 515, 517, 537, 538, 540, 603], "bandshdu": 505, "banner": 424, "bar": [15, 82, 87, 91, 103, 106, 110, 111, 120, 132, 136, 150, 151, 209, 214, 240, 304, 339, 386, 409, 445, 448, 449, 455, 460, 493, 509, 511, 542, 577], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 298, 317, 326, 327, 330, 336, 338, 340, 365, 379, 387, 392, 393, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 416, 421, 422, 424, 426, 427, 434, 436, 437, 439, 441, 442, 445, 447, 450, 451, 452, 453, 454, 460, 461, 465, 470, 472, 473, 476, 479, 480, 481, 482, 483, 485, 493, 496, 498, 500, 503, 505, 506, 508, 509, 510, 511, 514, 515, 526, 528, 530, 539, 540, 542, 552, 554, 567, 578, 603, 604, 606, 607], "base_dir": [82, 87, 326, 514, 516, 517, 530], "baselin": [82, 83, 245, 514], "basement": 436, "basemodel": [16, 84, 90, 105, 126, 420, 479], "baseradi": 254, "bash": [426, 428, 605], "bash_profil": 395, "bashrc": 395, "basi": [397, 398, 408, 411, 423, 447, 449, 493, 497], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 106, 111, 127, 244, 395, 398, 402, 403, 404, 405, 406, 408, 412, 413, 417, 420, 430, 442, 452, 454, 463, 466, 470, 472, 486, 487, 490, 496, 497, 498, 506, 520, 527, 528, 530, 532, 533, 540, 551, 554, 604, 605], "basicconfig": [16, 481, 523], "bayesian": [221, 222, 396, 410, 463, 501, 502, 512, 520], "bayesian_block": 496, "bayesian_edg": 496, "bayesianfit": 422, "bayesianinfer": 422, "baysian": 401, "bb": [87, 91, 419], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [151, 155, 156, 157, 166, 464, 473, 488, 492, 503, 514], "becam": 399, "becaus": [16, 84, 90, 105, 126, 196, 197, 199, 203, 205, 208, 209, 392, 393, 395, 397, 399, 403, 404, 406, 407, 411, 416, 417, 420, 424, 445, 447, 461, 466, 468, 471, 485, 491, 493, 504, 505, 506, 507, 514, 515, 516, 525, 526, 528, 538, 542, 605, 608], "becom": [392, 400, 402, 403, 406, 411, 420, 422, 483, 491, 508, 509, 542, 605, 608], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 105, 124, 125, 126, 127, 168, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 318, 397, 398, 399, 400, 401, 403, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 425, 427, 441, 442, 445, 447, 448, 454, 455, 456, 457, 458, 459, 460, 461, 465, 471, 482, 491, 492, 493, 495, 500, 505, 508, 509, 510, 514, 516, 525, 539, 554, 589], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 105, 125, 126, 196, 197, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 330, 387, 392, 393, 395, 397, 399, 400, 401, 402, 406, 407, 408, 410, 411, 412, 418, 423, 424, 430, 448, 454, 465, 471, 473, 490, 491, 500, 501, 505, 508, 509, 516, 520, 525, 580, 605], "beforevalid": 90, "begeman": 22, "begin": [52, 87, 91, 103, 110, 125, 127, 136, 413, 416, 419, 470, 472, 505, 508, 560, 565, 566, 571, 587, 607], "behav": [392, 402, 459, 476, 608], "behavior": [16, 84, 87, 90, 91, 95, 105, 126, 417, 444, 448, 459, 461], "behaviour": [366, 392, 412, 415, 416, 442, 447, 453, 460, 491, 506, 515, 516, 538, 606], "behind": 495, "being": [124, 135, 197, 392, 397, 400, 406, 414, 417, 424, 472, 482, 496, 506, 531, 542, 555, 605], "belief": 511, "believ": [429, 511], "belong": [86, 417, 441], "below": [52, 53, 87, 91, 124, 136, 195, 199, 206, 207, 381, 382, 383, 387, 389, 393, 395, 396, 401, 402, 406, 408, 409, 413, 416, 417, 419, 420, 421, 422, 424, 425, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 470, 474, 493, 498, 501, 504, 506, 508, 510, 511, 514, 515, 539, 542, 561, 607], "benchmark": [408, 419, 424], "benefit": 409, "benn": 408, "berg": 604, "berge2007": [406, 551, 552, 604], "bernet": 460, "besancon": 532, "besid": [124, 136, 406, 407, 417, 422, 471, 472, 505, 509, 515, 525, 526, 555], "best": [67, 71, 74, 75, 77, 78, 80, 102, 125, 127, 128, 129, 132, 133, 144, 215, 216, 292, 294, 298, 385, 392, 395, 402, 405, 410, 419, 422, 426, 428, 465, 468, 470, 471, 472, 476, 479, 482, 493, 498, 500, 501, 509, 511, 520, 525, 540, 542, 544, 570, 576, 579, 580, 584, 607, 608, 609], "best_fit_model": 472, "best_fit_profil": 77, "beta": [27, 28, 48, 214, 245, 246, 247, 270, 416, 418, 441, 465, 468, 472, 480, 498, 501, 572, 578, 579, 580, 585, 596], "better": [392, 395, 397, 398, 399, 400, 401, 405, 406, 411, 413, 414, 417, 422, 435, 452, 453, 479, 480, 483, 493, 495, 501, 505, 506, 509, 515, 538], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 106, 111, 122, 124, 125, 127, 129, 130, 132, 134, 144, 145, 157, 163, 165, 166, 167, 169, 176, 179, 193, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 286, 292, 315, 348, 382, 383, 390, 392, 393, 395, 400, 402, 403, 404, 405, 406, 408, 409, 411, 413, 414, 417, 418, 420, 421, 422, 423, 432, 442, 445, 448, 459, 464, 472, 474, 480, 482, 485, 492, 493, 496, 500, 501, 504, 505, 506, 507, 509, 511, 515, 516, 528, 538, 540, 547, 548, 551, 561, 562, 604, 607, 609], "bewar": [280, 466, 491], "bexcub": 200, "bexpcub": [195, 196, 197, 199, 208, 209, 505], "beyond": [200, 406, 417, 420, 441, 504, 530, 547], "bfg": 501, "bgstat": 451, "bi": [452, 455], "bia": [96, 153, 154, 158, 182, 453, 459, 504, 511, 546], "bias": [472, 606], "bias_energi": 153, "bias_perc": 182, "bibliographi": 604, "bic": 422, "biederbeck": [421, 460], "big": [399, 402, 409, 423, 455, 515, 606, 608], "bigger": 197, "biggest": 411, "billion": 392, "bimod": 31, "bin": [19, 20, 26, 77, 83, 86, 88, 101, 103, 106, 109, 110, 111, 113, 114, 120, 122, 124, 125, 127, 128, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 147, 148, 149, 153, 154, 155, 156, 158, 161, 164, 166, 168, 169, 176, 178, 179, 180, 182, 184, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 288, 296, 299, 305, 306, 315, 385, 387, 390, 398, 403, 404, 405, 406, 408, 411, 413, 417, 425, 426, 436, 437, 439, 440, 442, 444, 445, 447, 450, 451, 452, 453, 454, 459, 460, 461, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 538, 540, 542, 546, 547, 549, 550, 603, 604, 605, 606, 608], "bin_cent": 493, "bin_edg": 493, "bin_volum": [200, 204, 207, 555], "bin_width": [198, 201, 206, 493], "binari": [207, 209, 400, 406, 409, 419, 424, 445], "binary_dil": [209, 506], "binary_erod": [209, 506], "binary_eros": [209, 445], "binary_structur": 207, "bincent": 306, "bind": [395, 412], "binder": [400, 423, 453, 456, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 523, 525, 526, 528, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "binlik": 127, "binned_likelihood": 128, "binneddataaxi": [436, 452], "binnedtimeseri": [127, 407], "bins_axi": 209, "binsiz": [16, 471, 476, 477, 479, 490, 525, 526], "binsize_irf": [16, 471, 476, 477, 479, 490, 525], "binsz": [103, 106, 110, 111, 112, 117, 155, 164, 166, 176, 179, 180, 184, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 408, 470, 481, 482, 483, 484, 488, 493, 497, 499, 503, 504, 505, 506, 508, 515, 516, 526, 549, 551, 552, 554, 555, 559, 561, 562, 563, 564], "binsz_irf": [103, 106, 110, 111, 115, 499, 504, 542], "binsz_irf_default": [103, 106, 110, 111, 504], "binsz_wc": [204, 205], "bintabl": [195, 196, 197, 199, 208, 209], "bintablehdu": [83, 86, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 200, 201, 207, 208, 209, 505, 538], "birth": [29, 30, 31, 32, 36, 50, 51, 52, 53], "bit": [83, 144, 393, 395, 399, 400, 406, 410, 411, 420, 461, 493, 505, 555], "bitbucket": 517, "bitpix": 505, "bkg": [16, 82, 87, 88, 103, 107, 108, 110, 111, 150, 151, 152, 182, 189, 237, 415, 440, 442, 447, 461, 464, 470, 471, 476, 477, 479, 480, 483, 484, 488, 493, 499, 503, 504, 507, 514, 516, 517, 525, 526, 538, 545, 547, 604, 606, 607, 608], "bkg_": [103, 110], "bkg_2d": [87, 150], "bkg_3d": [82, 87, 151, 514, 517], "bkg_err": 493, "bkg_maker": [415, 466, 470, 472, 481, 491, 495, 551], "bkg_model": [404, 415, 421, 479, 483, 484, 488, 507, 526, 563], "bkg_ob": 107, "bkg_sy": 135, "bkg_syst_fract": [135, 464], "bkg_syst_fraction_sensit": 124, "bkgfile": 107, "black": [110, 111, 381, 382, 389, 410, 454, 456, 464, 493, 497, 504, 510, 551, 589], "blanch": [453, 454], "blanklin": [244, 430, 540, 555], "blazar": [312, 465, 495], "blind": [456, 542, 610], "bll": 528, "blob": 433, "block": [393, 395, 398, 405, 413, 424, 433, 453], "block_reduc": 454, "blocker": 412, "blue": [102, 103, 106, 110, 111, 229, 253, 382, 465, 470, 477, 479, 482, 510, 551, 589], "blur": 33, "board": [401, 413], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 392, "boller": 496, "boni": [445, 448], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 119, 124, 125, 126, 127, 128, 132, 133, 136, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 277, 278, 279, 280, 281, 297, 315, 318, 327, 330, 331, 348, 354, 357, 359, 360, 362, 389, 392, 406, 481, 498, 504, 505], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 125, 128, 129, 132, 133, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 214, 229, 253, 269, 408, 442, 479, 498, 505, 506, 507], "boost": 483, "bootstrap": [87, 91, 422, 509], "border": 91, "bose": 436, "bot": 398, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 193, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 217, 219, 392, 395, 397, 398, 403, 404, 405, 406, 407, 412, 413, 418, 423, 435, 439, 441, 442, 445, 448, 470, 471, 472, 483, 488, 499, 500, 505, 506, 507, 510, 511, 539, 540, 542, 554, 555, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 607], "bother": 476, "bottom": [413, 415, 465, 483, 490, 491, 492, 496, 498], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 194, 195, 201, 204, 206, 207, 214, 223, 224, 227, 228, 229, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 253, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 279, 280, 282, 283, 310, 401, 505, 511], "boundari": [201, 207, 281, 311, 313, 421, 422, 450, 461, 501, 508, 509, 554], "boundary_mask": [207, 506], "boundary_typ": 201, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 392, 503], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 129, 130, 204, 207, 209, 350, 351, 401, 406, 410, 417, 422, 452, 506, 508, 555], "bpl": [223, 416, 508], "bpwl_norm": 416, "bracket": [153, 214, 457, 459], "brake": 51, "branch": [392, 395, 399, 406, 418, 424, 433], "branchnam": 392, "bratio": 530, "break": [223, 270, 398, 406, 408, 418, 439, 440, 441, 461, 571, 585], "brent": 474, "brentq": [19, 20, 26, 127, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 293], "breviti": [479, 542], "brief": 609, "briefli": [516, 517], "bright": [68, 129, 269, 285, 477, 490, 491, 506, 508, 536, 551], "brighter": 483, "brightest": 498, "brigitta": [409, 435, 437, 439, 441, 450, 451, 452, 453, 454, 455, 456, 461], "bring": 397, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 196, 197, 199, 202, 205, 208, 209, 269, 330, 461, 484, 503, 505, 554], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [223, 270, 419, 423, 463, 495, 556, 569, 590], "brokenpowerlaw": 416, "brokenpowerlawspectralmodel": [264, 270, 416, 442, 508, 571], "brought": 461, "brown": [140, 496], "brows": [87, 91, 393, 430, 528], "browser": [87, 91, 395, 424, 430, 450, 453, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 523, 525, 526, 528, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "bruno": [419, 422, 437, 439, 442, 445, 448, 452, 453, 454, 456, 457, 458, 459, 460, 461], "br\u00fcgge": [453, 454], "bsd": 419, "bst": [87, 91], "buchner": [422, 445, 509], "buchner2023": 422, "budget": [509, 542], "buffer": 369, "bug": [392, 395, 398, 399, 418, 419, 423, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 457, 458], "bugfix": [399, 401, 418, 452, 453], "build": [16, 84, 90, 105, 126, 195, 231, 392, 398, 399, 400, 405, 406, 408, 412, 413, 417, 418, 419, 420, 423, 441, 447, 456, 461, 474, 479, 493, 504, 506, 539, 542, 547, 605], "build_doc": [355, 393, 395, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 567, 593], "built": [10, 183, 231, 358, 375, 391, 392, 393, 403, 404, 406, 408, 409, 411, 412, 420, 424, 431, 454, 459, 498, 507, 515, 520, 538], "builtin": 528, "bullet": 397, "bump": [406, 452], "bunch": [104, 109, 393, 605], "bundl": [102, 103, 106, 110, 111, 401, 404, 424, 446, 454, 481, 499, 504, 538, 555, 603, 604], "bunit": [377, 454, 505], "buokoxsu": 473, "bureaucrat": 397, "burkert": [17, 530], "burn": 422, "burst": [36, 37, 496], "butterfli": [453, 501, 528], "button": [456, 505], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bxa": 509, "by_alia": [16, 84, 90, 105, 126], "by_nam": [16, 84, 90, 105, 126], "byte": [16, 84, 87, 90, 91, 105, 126, 336, 369, 392], "bytearrai": [16, 84, 90, 105, 126, 336], "bytestr": [87, 91], "b\u00fchler": 433, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 202, 212, 233, 273, 299, 305, 311, 313, 318, 358, 391, 392, 409, 426, 427, 429, 446, 453, 470, 477, 493, 495, 497, 501, 509, 511, 514, 515, 530, 554, 575, 586, 605, 606, 608], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 102, "c_": 212, "c_0": [194, 195, 204, 207], "c_i": [194, 195, 204, 207], "c_n": [194, 195, 204, 207], "cabot": 461, "cach": [16, 84, 87, 88, 90, 91, 100, 103, 105, 106, 110, 111, 126, 279, 326, 327, 401, 402, 404, 411, 415, 424, 438, 442, 445, 460], "cached_properti": [16, 84, 90, 105, 126], "cahil": 447, "cal_gen_92_002": [153, 201], "cal_gen_92_002_summari": 153, "calcul": [13, 15, 19, 20, 26, 96, 139, 140, 141, 142, 182, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 265, 270, 272, 273, 274, 275, 278, 281, 282, 295, 296, 301, 303, 304, 315, 317, 340, 373, 382, 383, 402, 405, 435, 441, 445, 446, 447, 453, 458, 460, 464, 493, 496, 497, 500, 511, 525, 526, 530, 542, 604, 608], "caldb": [82, 151, 153, 155, 156, 157, 166, 201, 447, 464, 473, 483, 484, 488, 492, 503, 514], "calendar": [418, 423], "calib_vers": [515, 528], "calibr": 509, "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 102, 103, 105, 106, 110, 111, 126, 139, 140, 141, 142, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 178, 194, 195, 204, 207, 214, 222, 223, 224, 225, 226, 227, 230, 231, 233, 234, 235, 238, 239, 240, 242, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 284, 330, 342, 363, 369, 377, 381, 389, 392, 393, 395, 397, 398, 401, 404, 405, 406, 407, 408, 410, 412, 413, 415, 417, 419, 421, 422, 424, 426, 430, 441, 445, 459, 470, 471, 481, 498, 499, 500, 501, 504, 505, 508, 515, 517, 525, 526, 528, 538, 542, 551, 552, 553, 554, 555, 605, 606, 607, 608], "callabl": [16, 45, 84, 90, 105, 126, 288, 422], "callback": [172, 605], "caller": [392, 403], "camera": [492, 503, 504], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 103, 105, 106, 109, 110, 111, 115, 120, 124, 125, 126, 127, 129, 132, 133, 134, 136, 137, 144, 146, 151, 156, 164, 166, 169, 173, 179, 182, 194, 195, 196, 197, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 214, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 238, 239, 240, 242, 244, 246, 247, 248, 250, 253, 254, 255, 256, 258, 259, 260, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 284, 293, 297, 302, 311, 313, 318, 330, 331, 336, 339, 348, 367, 369, 385, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 437, 439, 441, 442, 445, 447, 448, 452, 453, 454, 455, 456, 459, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 525, 526, 528, 530, 532, 533, 538, 539, 540, 542, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 578, 580, 589, 600, 602, 603, 604, 605, 606, 607, 608, 610], "candel": 231, "candid": [418, 447, 498, 547], "candl": [286, 604], "cannot": [16, 67, 84, 87, 90, 91, 95, 105, 113, 114, 125, 126, 127, 211, 305, 358, 389, 395, 405, 406, 459, 503, 507, 508, 540, 555], "cao": 57, "cap": [51, 54], "capabl": [402, 412, 515, 530], "capsiz": 511, "captur": [396, 408], "car": [103, 106, 110, 111, 176, 207, 208, 209, 229, 253, 406, 437, 481, 503, 504, 505, 526, 528], "card": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 505], "care": [125, 127, 318, 392, 401, 408, 418, 466, 472, 479, 505, 605], "carefulli": [419, 483, 484, 511], "carina": [33, 38], "carlo": [410, 422, 547, 604], "carri": [407, 416, 418, 420, 445, 468, 526], "carr\u00e9": 207, "cartesian": [41, 46, 197, 208, 209, 321, 323, 458, 528, 554], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 102, 153, 172, 184, 195, 197, 203, 204, 207, 209, 214, 217, 219, 242, 254, 277, 279, 281, 293, 305, 311, 313, 331, 348, 387, 392, 393, 395, 397, 400, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 419, 420, 423, 424, 426, 434, 435, 438, 441, 447, 448, 453, 459, 460, 464, 466, 467, 470, 471, 472, 473, 476, 477, 479, 483, 484, 488, 490, 492, 493, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 517, 520, 525, 527, 528, 537, 540, 541, 542, 552, 555, 560, 561, 562, 565, 566, 571, 580, 587, 603, 605, 607], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [103, 106, 110, 111, 176, 300, 305, 314, 392, 404, 445, 473, 476, 479, 488, 492, 499, 504, 507, 511, 525, 526, 538, 604], "cash1979": [604, 607], "cashcountsstatist": [430, 460, 605, 607], "cast": 91, "cat": [66, 67, 79, 400, 424, 452, 453, 468, 498, 508, 537, 604, 605], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 128, 229, 253, 406, 413, 433, 437, 439, 441, 445, 446, 447, 450, 451, 452, 453, 454, 456, 460, 461, 463, 465, 468, 474, 480, 499, 502, 508, 512, 515, 520, 527, 532, 567, 603, 604], "catalog_3fgl": 468, "catalog_3fhl": [468, 498], "catalog_3fhl_bright": 498, "catalog_4fgl": 498, "catalog_4fgl_roi": 498, "catalog_gammacat": [468, 498], "catalog_hgp": 498, "catalog_registri": [468, 498, 506], "catalogimageestim": 454, "catalogu": [78, 445, 452], "catch_warn": 542, "categori": [392, 403, 417, 445, 461, 506, 508, 556], "caus": [399, 406, 454, 457, 542], "cautious": 482, "caveat": [214, 312, 460, 561], "cax": 503, "cb98": 48, "cbar": 380, "cbar_kw": 386, "cbarlabel": 386, "cc": [401, 406, 408, 411, 414, 416, 419, 421], "ccdcahta": 504, "ccube": [195, 196, 197, 199, 200, 201, 207, 208, 209, 505], "cd": [392, 393, 395, 408, 412, 426, 427, 428], "cdelt": [207, 209], "cdelt1": 505, "cdelt2": 505, "cdf": [340, 405, 422, 483, 501], "cdot": [51, 52, 53, 54, 103, 110, 258, 273, 416, 508, 538, 560, 565, 566, 571, 574, 575, 582, 583, 585, 586, 587, 588, 594, 595, 596, 598, 606], "celesti": [505, 554, 560, 564, 609], "celfix": 567, "cell": [400, 430, 456, 480, 493, 505, 514, 515, 528], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 103, 106, 110, 111, 113, 114, 125, 127, 129, 130, 131, 136, 153, 154, 155, 156, 157, 158, 161, 165, 166, 167, 169, 176, 179, 180, 182, 183, 184, 186, 187, 189, 190, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 225, 226, 229, 230, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 279, 281, 320, 324, 350, 392, 393, 406, 408, 416, 417, 435, 436, 445, 447, 460, 464, 466, 470, 472, 473, 474, 476, 477, 479, 481, 483, 484, 485, 491, 492, 493, 495, 497, 503, 504, 505, 506, 507, 508, 514, 515, 526, 528, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 560, 561, 564], "center_coord": [194, 195, 200, 204, 207], "center_pix": [194, 195, 204, 207], "center_ski": 555, "center_skydir": [194, 195, 204, 207, 504, 505, 515, 516, 549, 551, 552], "centr": [497, 506, 530], "central": [134, 311, 313, 404, 414, 468, 528], "cern": 530, "certain": [50, 83, 87, 91, 214, 302, 391, 406, 408, 410, 417, 464, 497, 504, 505, 515, 537, 555], "certainli": 395, "certif": 419, "certifi": 419, "cfa": [214, 501], "cff": 423, "cg": 534, "ch": 53, "chain": [172, 405, 408, 422, 439, 504, 542, 552, 604], "chainconfig": 509, "chainconsum": 509, "chainer": 410, "chakraborti": [451, 452], "challeng": [399, 401, 405, 452, 477, 479, 481, 514], "chanc": 397, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 105, 125, 126, 127, 195, 204, 207, 223, 224, 227, 231, 233, 234, 235, 240, 244, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 366, 376, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 415, 417, 418, 419, 423, 424, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 451, 452, 453, 454, 455, 457, 462, 472, 473, 474, 481, 483, 484, 490, 495, 496, 499, 500, 501, 506, 508, 509, 511, 514, 525, 538, 542, 549, 551, 555, 567, 605], "changelog": [392, 423, 446, 454], "channel": [19, 20, 26, 391, 394, 395, 409, 453, 484, 497, 505, 517, 530], "channel0": 530, "channel1": 530, "channel_registri": [19, 20, 26], "chapter": 497, "charact": [87, 91, 392, 507], "character": [304, 417, 483], "characterist": [21, 25, 27, 51, 52, 53, 54, 140, 302, 403, 459, 496, 604], "charg": [419, 423, 547, 580], "chat": 431, "chatti": [392, 481], "cheat": 429, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 103, 106, 107, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 218, 220, 229, 253, 269, 312, 365, 367, 395, 408, 415, 419, 423, 424, 426, 427, 428, 431, 440, 445, 453, 461, 468, 488, 495, 503, 520, 530, 542, 546, 555, 602, 605, 606], "check_limit": [217, 218, 219, 220], "check_random_st": 392, "check_tutorials_setup": [464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528], "checker": [451, 454], "checklist": 424, "checkout": [392, 395, 423, 436, 479, 483, 508], "checksum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 215, 229, 253, 354, 357, 360, 460, 470, 480, 515], "chen": [147, 454], "cherenkov": [156, 405, 426, 431, 466, 470, 477, 490, 504, 514, 516, 551, 552, 604], "cherri": [392, 399, 406, 418], "chi": [301, 407, 606, 607, 608], "chi2": [102, 134, 138, 147, 295, 296, 311, 313, 404, 436, 470, 482, 492, 501, 538, 607], "chi2assym": 439, "chi2asymmetricerrorfitstatist": 606, "chi2fitstatist": 606, "child": 402, "children": [479, 488, 505, 525, 526], "chime": 395, "chisq": 301, "chisquar": 301, "chmod": 605, "choic": [139, 405, 409, 411, 412, 419, 422, 470, 471, 473, 476, 501, 509, 516, 525, 543, 602, 605], "choos": [45, 77, 194, 195, 198, 200, 201, 204, 207, 282, 332, 395, 404, 406, 408, 413, 422, 426, 428, 445, 468, 470, 474, 479, 481, 492, 499, 501, 504, 505, 507, 508, 510, 515, 526, 542, 605], "chose": [393, 483, 515, 516, 607, 609], "chosen": [26, 153, 166, 169, 195, 196, 197, 205, 208, 209, 229, 239, 253, 392, 407, 408, 411, 471, 491, 504, 505, 510, 511, 516, 525, 540, 550, 551, 555], "christoph": [397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 413, 433, 434, 435, 436, 437, 438, 439, 440, 446, 449, 450, 451, 452, 453, 454, 455], "chrome": [87, 91], "chromei": 447, "chunk": [155, 166, 169], "chunk_siz": [155, 166, 169], "ci": [392, 395, 399, 419, 424, 439, 445, 447, 450, 456], "circl": [83, 184, 389, 393, 406, 447, 470, 481, 492, 497, 504, 506, 510, 514, 526, 528, 539, 549, 551, 552, 555], "circle_area": 393, "circleannulusskyregion": [266, 267, 551], "circledast": 538, "circlepixelregion": 406, "circleskyregion": [103, 106, 110, 111, 178, 179, 183, 207, 230, 393, 406, 464, 466, 470, 472, 473, 477, 479, 481, 483, 484, 491, 495, 497, 499, 504, 506, 507, 526, 549, 551, 552, 555], "circular": [91, 103, 106, 183, 195, 197, 207, 403, 411, 414, 466, 472, 499, 510, 551, 555], "circumv": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "cirelli": [26, 530], "citat": [221, 423, 509], "cite": [221, 395, 419, 509], "cl": [16, 84, 90, 103, 105, 110, 126, 420], "clabel": 501, "claim": 422, "clang": 430, "clarif": 397, "clarifi": [417, 459], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 298, 326, 327, 330, 338, 340, 365, 379, 395, 398, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 421, 422, 426, 430, 433, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 464, 468, 470, 471, 472, 473, 474, 476, 477, 481, 483, 484, 488, 490, 493, 498, 499, 500, 501, 503, 504, 505, 508, 509, 511, 514, 515, 516, 520, 525, 528, 533, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 550, 552, 553, 554, 555, 556, 580, 589, 602, 603, 604, 605, 610], "class1": 498, "class2": 498, "classic": [401, 410, 422, 426, 435, 466, 470, 477, 481, 499, 504, 509, 540, 542, 551, 552, 604, 607], "classifi": [516, 547], "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 295, 296, 420], "classproperti": 445, "classvar": [16, 84, 90, 105, 126], "claudio": [458, 460, 461], "claus": [392, 419], "clean": [392, 393, 395, 400, 401, 406, 408, 410, 433, 435, 436, 437, 438, 439, 440, 441, 442, 445, 452, 453, 454, 455], "cleaner": 456, "cleanup": [399, 411, 424, 433, 438, 439, 444, 445, 446, 450, 451, 453, 461], "clear": [92, 100, 203, 253, 392, 397, 399, 403, 406, 407, 411, 413, 414, 453, 482, 609], "clearer": 438, "clearli": [140, 392, 397, 398, 406, 409, 418], "cli": [11, 408, 455, 603], "click": [391, 408, 409, 430, 438, 453, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 605], "clip": [19, 20, 26, 194, 195, 198, 200, 201, 204, 206, 207, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 281, 282, 330, 438, 439, 474], "clockwis": [230, 239, 242, 560], "clone": [395, 427, 454], "close": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 281, 366, 367, 368, 401, 406, 423, 448, 459, 460, 461, 501, 589], "closer": 528, "closest": [120, 124, 128, 132, 136, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 500, 506, 540], "cloud": [424, 520], "cluster": [24, 25, 96, 316, 317, 405, 422, 459, 460, 463, 502, 512, 520, 539, 542], "clutter": [479, 542], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 102, 127, 133, 136, 223, 227, 233, 235, 240, 247, 251, 258, 260, 269, 270, 273, 274, 275, 285, 376, 403, 416, 465, 466, 468, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 488, 491, 492, 493, 497, 498, 500, 501, 508, 511, 514, 515, 525, 528, 535, 536, 540, 542, 559, 560, 561, 562, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 604], "cm2": [51, 54, 67, 108, 127, 156, 209, 286, 376, 464, 465, 468, 470, 471, 473, 474, 479, 480, 481, 483, 484, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 505, 507, 508, 509, 511, 515, 525, 526, 528, 540, 555, 573, 576, 579, 584, 589], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 497], "cm5": 497, "cmap": [103, 106, 110, 111, 229, 253, 382, 383, 472, 479, 497, 505, 507, 509, 515, 516, 525, 526, 551, 610], "cmb": 580, "co": [53, 202, 418, 419, 464, 560, 561, 562], "coadd": [196, 197, 199, 205, 208, 209], "coars": 499, "coarser": [201, 206, 499], "codaci": 424, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 153, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 387, 395, 396, 397, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 427, 430, 433, 436, 437, 439, 440, 441, 442, 445, 447, 450, 451, 452, 453, 454, 456, 459, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 523, 525, 526, 528, 530, 542, 549, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 605], "codebas": [393, 409, 422, 433, 452, 454], "codemeta": 447, "codespel": 445, "codestyl": 395, "coeffici": [130, 245, 250, 570], "coerce_numbers_to_str": 105, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coher": 461, "coincid": 496, "col": [87, 91, 445], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 386, "collabor": [77, 382, 383, 397, 399, 401, 405, 447, 482, 515, 604], "colleagu": [395, 422, 605], "collect": [203, 253, 392, 394, 412, 420, 422, 424, 452, 453, 471, 499, 507, 509, 530, 539, 543, 547, 604, 609], "collis": 50, "colnam": [87, 91, 196, 197, 199, 205, 208, 209, 515, 528], "color": [102, 110, 111, 150, 151, 209, 229, 253, 381, 382, 383, 386, 389, 393, 412, 464, 465, 468, 470, 471, 472, 473, 474, 477, 479, 481, 482, 485, 490, 493, 497, 500, 501, 504, 507, 509, 510, 511, 542, 551, 555, 560, 561, 580, 589, 610], "colorbar": [127, 150, 151, 153, 156, 157, 158, 163, 164, 165, 167, 209, 380, 386, 495, 501, 505], "colorblind": 542, "colorblind10": 542, "colormap": [381, 382, 383, 433, 446, 528], "colormap_hess": [414, 610], "colormap_milagro": 610, "colour": 456, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 104, 109, 125, 127, 130, 144, 150, 151, 153, 177, 196, 197, 198, 199, 200, 201, 205, 206, 208, 209, 280, 304, 316, 361, 362, 363, 364, 385, 386, 389, 390, 392, 405, 407, 417, 456, 459, 460, 464, 484, 493, 498, 505, 508, 509, 514, 539, 542], "column_nam": 503, "column_prefix": 201, "columnclass": [87, 91], "columnspac": 389, "com": [138, 345, 346, 358, 395, 413, 423, 424, 427], "combin": [99, 102, 103, 106, 110, 111, 137, 146, 147, 148, 182, 190, 196, 197, 199, 204, 205, 208, 209, 224, 269, 392, 398, 402, 403, 404, 405, 406, 407, 413, 416, 426, 438, 453, 459, 461, 468, 473, 479, 480, 488, 492, 499, 501, 503, 504, 505, 506, 508, 516, 526, 528, 530, 532, 542, 549, 554, 572, 603, 604], "combine_flux_map": [146, 461], "combine_significance_map": 147, "combined_ev": 539, "combining_and_defin": [464, 473, 476, 479, 481, 488, 492, 514], "come": [69, 395, 398, 399, 400, 401, 402, 406, 407, 408, 409, 411, 412, 413, 418, 420, 423, 424, 441, 442, 445, 454, 455, 459, 470, 479, 488, 508, 509, 514, 525, 547, 605], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 498], "command": [6, 13, 94, 102, 127, 157, 163, 165, 167, 391, 392, 393, 395, 400, 401, 403, 408, 409, 412, 424, 425, 426, 427, 428, 429, 435, 439, 450, 453, 454, 456, 483, 541, 603], "commensur": 209, "comment": [127, 392, 393, 397, 401, 405, 406, 408, 409, 411, 414, 416, 418, 419, 422], "commit": [392, 395, 400, 406, 418, 419, 423, 432, 433, 456], "committe": [397, 399, 418, 419], "commod": 419, "common": [95, 391, 392, 393, 395, 397, 398, 406, 408, 412, 413, 414, 416, 417, 419, 427, 429, 430, 445, 447, 471, 472, 485, 498, 503, 506, 508, 525, 526, 530, 537, 540, 541, 555, 561, 605], "common_irf_head": 503, "commonli": [29, 83, 406, 410, 422, 454, 485, 530, 602, 603, 605, 607, 610], "commun": [392, 408, 412, 415, 419, 423, 425, 431, 517], "comp": 498, "compact": [16, 84, 87, 90, 91, 105, 126], "compar": [87, 91, 128, 129, 132, 133, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 292, 392, 406, 409, 413, 422, 442, 458, 459, 464, 465, 466, 470, 474, 479, 482, 485, 488, 491, 495, 498, 501, 504, 511, 515, 525, 537, 604, 606], "comparison": [86, 87, 91, 100, 132, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 348, 412, 450, 532], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 196, 197, 199, 208, 209, 237, 397, 399, 403, 406, 416, 418, 420, 421, 430, 433, 435, 437, 454, 460, 461, 505, 554], "compil": [395, 446], "complain": 395, "complaint": 410, "complement": 413, "complementari": [102, 137, 146, 295, 470], "complet": [13, 16, 84, 90, 105, 124, 126, 136, 222, 348, 392, 398, 402, 403, 404, 405, 406, 409, 410, 413, 417, 418, 419, 422, 423, 427, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 450, 451, 452, 453, 454, 455, 479, 484, 501, 509, 510, 520, 527, 542, 547], "complex": [221, 392, 393, 398, 402, 406, 407, 408, 415, 417, 422, 430, 461, 466, 470, 481, 484, 492, 496, 499, 505, 506, 508, 509, 510, 515, 547, 551], "complianc": [419, 456], "compliant": [196, 197, 199, 208, 209, 460, 604], "complic": [406, 555], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 103, 104, 106, 109, 110, 111, 132, 140, 168, 170, 204, 229, 253, 254, 269, 285, 403, 404, 405, 408, 415, 416, 435, 439, 441, 445, 453, 454, 465, 471, 472, 473, 476, 479, 480, 481, 482, 483, 484, 488, 490, 491, 492, 495, 498, 499, 500, 507, 508, 509, 514, 515, 525, 526, 530, 538, 540, 542, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604], "component_1": 403, "component_2": 403, "component_class": 498, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 398, 419], "composit": [21, 57, 70, 80, 329, 419, 452, 547], "compound": [204, 211, 224, 349, 353, 406, 416, 463, 465, 485, 556, 569, 590], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 447], "compoundpixelregion": 353, "compoundskymodel": 403, "compoundskyregion": [211, 349, 353], "compoundsourcemodel": 403, "compoundspectralmodel": [264, 416, 459, 465, 508, 515, 570, 572, 576, 579, 581, 584, 589], "compress": 400, "compris": 516, "compromis": [392, 397, 405, 511], "compton": [254, 441, 580], "compulsori": 508, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 102, 103, 105, 106, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 182, 183, 185, 188, 189, 190, 191, 193, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 210, 214, 221, 223, 224, 227, 229, 231, 233, 234, 235, 240, 244, 246, 247, 250, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 285, 286, 292, 293, 294, 298, 301, 302, 303, 304, 306, 310, 311, 312, 313, 317, 321, 322, 325, 392, 401, 402, 403, 404, 405, 406, 407, 410, 413, 414, 415, 416, 417, 421, 422, 424, 426, 427, 431, 433, 435, 436, 437, 438, 441, 442, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 466, 472, 474, 479, 480, 484, 485, 490, 491, 493, 496, 497, 499, 500, 504, 507, 508, 509, 510, 511, 513, 515, 516, 517, 525, 528, 530, 538, 540, 542, 551, 580, 603, 604, 605, 606, 607, 608, 609], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 214, 405, 406, 538], "compute_chisq": 452, "compute_differential_jfactor": 23, "compute_errn": [294, 298, 456, 607], "compute_errp": [294, 298, 607], "compute_flux_doubl": 140, "compute_fpp": 141, "compute_fvar": [142, 303], "compute_jfactor": [23, 497], "compute_lightcurve_doublingtim": 496, "compute_lightcurve_fpp": 496, "compute_lightcurve_fvar": 496, "compute_lima_map": 441, "compute_npr": 405, "compute_upper_limit": [294, 298], "con": [392, 408], "concaten": [83, 86, 92, 198, 201, 404, 408, 415, 459, 505], "concentr": 350, "concept": [16, 84, 90, 105, 126, 412, 413, 414, 420, 422, 426, 428, 431, 497, 505, 509, 520, 543], "conception": [405, 415], "conceptu": [412, 422], "concern": [395, 397, 406, 408, 409, 411, 414, 416, 419, 445, 455, 516, 607], "conclud": 401, "concret": [16, 84, 90, 105, 126, 409, 413, 509], "conda": [391, 395, 399, 400, 409, 413, 418, 423, 424, 426, 427, 428, 429, 430, 435, 437, 453, 454, 605], "condit": [52, 53, 149, 201, 218, 220, 229, 253, 417, 421, 442, 461, 464, 470, 473, 484, 498, 506, 507, 509, 510, 516, 538, 547], "conduct": [456, 492], "cone": [91, 406, 471, 510, 525, 526, 542], "conesearch": 408, "conf": [87, 91, 392, 393, 424, 436, 451], "conf_1d": 490, "conf_3d": 490, "conf_max": [217, 219], "conf_min": [217, 219], "confid": [124, 214, 217, 219, 294, 298, 403, 410, 436, 441, 455, 604, 607], "confidence_opt": [214, 500], "config": [15, 16, 84, 90, 105, 126, 391, 393, 395, 398, 400, 401, 408, 409, 413, 420, 426, 428, 438, 439, 440, 445, 453, 471, 479, 525, 602], "config_dict": 525, "config_joint": 479, "config_paramet": [120, 122, 123, 124, 128, 129, 131, 132, 133, 135, 136], "config_stack": 479, "config_str": 16, "configdict": [16, 84, 90, 105, 126], "configpars": 451, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 102, 105, 110, 111, 120, 122, 123, 124, 126, 128, 129, 131, 132, 133, 135, 136, 338, 392, 393, 395, 401, 403, 407, 408, 412, 413, 414, 420, 423, 424, 430, 438, 440, 441, 445, 447, 456, 459, 460, 470, 472, 474, 481, 483, 484, 495, 514, 520, 527, 541, 542, 547, 604, 605], "confirm": [395, 423], "conflict": [87, 91, 392, 395, 419], "confluenc": 517, "conform": [16, 84, 90, 105, 126, 505], "confus": [392, 393, 398, 411], "connect": [402, 431, 470, 485, 488, 506, 526, 602], "consant": [196, 197, 199, 205, 208, 209], "consciou": 397, "consecut": [179, 348, 392, 418], "consensu": [397, 419], "consent": 392, "consequ": [419, 484, 520, 555], "conserv": [538, 564], "consid": [19, 20, 59, 96, 128, 176, 183, 186, 187, 189, 190, 197, 209, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 292, 388, 392, 397, 398, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 419, 421, 466, 470, 472, 479, 483, 484, 496, 503, 506, 509, 539, 542, 547, 608], "consider": [408, 435, 445, 453, 479], "consist": [74, 91, 95, 125, 127, 154, 155, 166, 169, 194, 195, 196, 197, 199, 204, 207, 208, 209, 221, 239, 242, 392, 402, 403, 405, 406, 407, 413, 420, 438, 439, 440, 441, 442, 449, 453, 454, 456, 458, 459, 460, 471, 472, 473, 474, 482, 488, 492, 501, 504, 505, 508, 511, 513, 525, 578, 580, 606], "consol": [392, 605], "consortium": [420, 514], "const": [225, 226, 227, 228, 416, 484, 508, 573], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 416, "constant": [50, 51, 52, 53, 103, 110, 120, 156, 196, 197, 199, 205, 207, 208, 209, 225, 226, 227, 228, 230, 243, 245, 347, 405, 406, 411, 453, 463, 490, 515, 535, 538, 556, 558, 568, 569, 590, 591, 601, 604, 608], "constant_model": 592, "constantmodel": 455, "constantnormspectralmodel": 416, "constantspatialmodel": [263, 416, 508, 515, 559], "constantspectralmodel": [264, 416, 484, 508, 573], "constanttemporalmodel": [276, 416, 438, 508, 592], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": [499, 547], "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 419, 465, 476, 480, 504, 509, 511, 549], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 542], "construct": [16, 21, 84, 90, 105, 126, 201, 246, 247, 356, 555, 604], "constructor": [194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 459, 526, 553], "consult": 429, "consum": [422, 501, 509, 542], "contact": [394, 399, 401, 419, 429, 431, 434, 435, 436, 450, 453], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 77, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 102, 103, 105, 106, 109, 110, 111, 113, 114, 118, 124, 125, 126, 127, 136, 137, 138, 139, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 178, 181, 183, 188, 191, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 302, 316, 317, 385, 387, 389, 390, 392, 395, 396, 398, 400, 401, 402, 405, 406, 407, 408, 409, 411, 413, 414, 415, 417, 419, 422, 423, 424, 431, 435, 439, 440, 441, 442, 444, 445, 447, 448, 451, 452, 453, 454, 455, 459, 460, 461, 464, 468, 470, 471, 472, 476, 479, 480, 483, 484, 488, 490, 491, 493, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 525, 526, 528, 530, 531, 533, 538, 539, 540, 542, 546, 550, 551, 554, 555, 556, 602, 604, 606, 607, 608], "containment_correct": [16, 103, 106, 183, 464, 470, 471, 472, 476, 477, 479, 481, 490, 491, 493, 495, 499, 504, 525], "containment_fract": 96, "containment_radiu": [157, 163, 165, 166, 167, 169, 464, 499, 503, 506], "containment_radius_map": [166, 169], "contains_pix": [194, 195, 204, 207], "contains_wcs_pix": 204, "contamin": [67, 477, 498, 506, 551], "content": [84, 90, 105, 126, 127, 196, 197, 199, 205, 208, 209, 221, 354, 357, 392, 395, 397, 401, 407, 412, 413, 420, 424, 439, 448, 453, 466, 505, 506, 514, 516, 539, 542, 553, 554], "content_typ": [16, 84, 90, 105, 126], "context": [16, 84, 87, 90, 91, 105, 126, 218, 220, 229, 253, 338, 369, 392, 407, 412, 419, 424, 460, 505, 532], "contigu": [201, 206, 445], "continu": [201, 221, 399, 401, 402, 405, 406, 408, 409, 411, 413, 418, 430, 433, 434, 437, 445, 450, 451, 452, 454, 470, 484, 495, 506, 554, 604], "continuous_upd": [479, 488, 505, 525, 526], "contour": [211, 214, 384, 401, 422, 455, 509], "contour_": 501, "contourf": 209, "contract": 419, "contrari": [393, 400], "contrast": [413, 604], "contrera": 455, "contribut": [100, 116, 119, 229, 237, 253, 269, 388, 392, 394, 401, 406, 412, 415, 417, 424, 431, 434, 445, 447, 449, 504, 543, 580, 602, 605, 606], "contributes_to_stat": 100, "contributor": [392, 395, 413, 424, 432, 443, 444], "control": [83, 87, 91, 103, 106, 110, 111, 392, 405, 425, 427, 464, 497, 505, 511, 542, 607], "controversi": [392, 397, 398, 413], "conveni": [13, 125, 391, 392, 402, 406, 415, 417, 425, 435, 437, 442, 445, 447, 452, 481, 495, 497, 498, 499, 505, 506, 507, 508, 514, 516, 528, 537, 541, 603], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 153, 195, 196, 197, 199, 207, 208, 209, 393, 415, 417, 437, 438, 441, 442, 456, 461, 499, 504, 505, 508, 538, 540, 547, 554, 607], "converg": [24, 222, 421, 436, 457, 470, 472, 479, 495, 501, 509, 538, 542, 549, 560], "convers": [84, 87, 90, 91, 105, 125, 126, 127, 137, 146, 397, 417, 420, 426, 428, 445, 458, 459, 460, 464, 555], "conversion_typ": [515, 528], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 102, 103, 106, 108, 110, 111, 125, 127, 130, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 216, 217, 218, 219, 220, 229, 244, 253, 292, 311, 313, 315, 318, 319, 323, 336, 352, 372, 374, 375, 393, 398, 406, 407, 417, 420, 424, 446, 458, 459, 460, 461, 464, 474, 482, 491, 492, 495, 499, 500, 501, 506, 507, 514, 528, 540, 546, 551, 554, 607, 609], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 528, "convolut": [120, 124, 130, 136, 164, 197, 209, 391, 404, 410, 433, 440, 442, 451, 453, 454, 460, 461, 477, 505, 538, 555], "convolution_method": 197, "convolv": [106, 112, 117, 136, 164, 197, 209, 403, 433, 442, 445, 454, 473, 474, 477, 505, 548, 580], "convolve_ful": 197, "convolve_wc": 197, "cookbook": [17, 19, 20, 21, 22, 24, 25, 26, 27], "cookiecutt": 408, "coolwarm": [479, 515, 516, 526], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 255, 302, 403, 438, 484, 505, 506, 551, 554, 555, 563], "coord_to_idx": [194, 195, 198, 200, 201, 204, 206, 207, 505], "coord_to_pix": [194, 195, 198, 200, 201, 204, 206, 207, 505], "coordin": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 103, 104, 106, 109, 110, 111, 113, 114, 125, 127, 129, 130, 131, 140, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 179, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 229, 230, 239, 242, 244, 253, 255, 257, 266, 267, 269, 281, 302, 306, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 330, 340, 346, 350, 351, 367, 393, 397, 398, 399, 401, 405, 406, 411, 413, 416, 418, 419, 433, 435, 438, 440, 451, 453, 454, 456, 464, 466, 470, 472, 473, 477, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 499, 503, 504, 505, 506, 507, 508, 510, 513, 514, 515, 516, 526, 528, 538, 546, 551, 553, 554, 560, 561, 564, 603, 604, 609, 610], "coordsi": 440, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 154, 155, 158, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 318, 363, 392, 395, 397, 400, 402, 406, 408, 415, 422, 423, 424, 430, 445, 447, 454, 455, 456, 459, 461, 465, 466, 470, 472, 473, 479, 481, 488, 491, 492, 495, 498, 501, 504, 508, 511, 515, 542, 551, 555, 567, 605], "copy_data": [87, 91, 229, 237, 253, 269, 277, 279, 281], "copy_indic": [87, 91], "copy_ob": [82, 542], "copy_on_getitem": [87, 91], "copyright": 430, "core": [16, 53, 84, 90, 105, 126, 162, 391, 392, 399, 405, 406, 412, 414, 418, 419, 422, 423, 431, 434, 451, 455, 459, 464, 472, 473, 476, 479, 481, 483, 485, 488, 492, 495, 507, 514, 530, 540, 605], "corner": [222, 406, 409, 422, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528], "cornerplot": 509, "corr_coord": [166, 169], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 103, 104, 106, 155, 166, 169, 183, 188, 189, 202, 237, 255, 256, 281, 392, 404, 405, 418, 419, 420, 422, 423, 437, 440, 442, 443, 444, 445, 448, 451, 452, 454, 456, 457, 458, 459, 460, 461, 464, 465, 470, 471, 472, 473, 483, 488, 490, 498, 499, 501, 504, 506, 507, 508, 511, 516, 525, 528, 539, 540, 549, 563, 576, 579, 581, 584, 589], "correctli": [19, 20, 26, 77, 101, 154, 155, 161, 166, 169, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 392, 393, 395, 419, 420, 435, 437, 442, 447, 448, 457, 503, 504, 505, 506, 507, 511, 554, 561], "correl": [19, 20, 26, 124, 130, 139, 212, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 265, 270, 272, 273, 274, 275, 278, 282, 306, 410, 416, 417, 422, 445, 455, 461, 482, 485, 501, 506, 508, 509, 511, 525, 540, 602], "correlate_off": [124, 477], "correlation_radiu": [16, 124, 144, 145, 147, 471, 476, 477, 479, 493, 500, 516, 525, 540], "correspond": [19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 77, 87, 89, 91, 100, 101, 103, 106, 110, 111, 125, 127, 128, 129, 130, 132, 133, 136, 137, 146, 153, 154, 155, 161, 164, 166, 168, 169, 170, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 223, 224, 227, 231, 233, 234, 235, 239, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 295, 316, 385, 395, 402, 403, 404, 405, 413, 414, 417, 419, 421, 439, 442, 466, 468, 470, 471, 472, 479, 483, 484, 490, 498, 501, 504, 505, 508, 510, 511, 514, 515, 516, 525, 528, 538, 539, 540, 542, 554, 555, 566, 570, 603, 604, 609], "cosimo": [442, 445, 447, 453, 454, 456, 459], "cosmic": [52, 231, 285, 410, 514, 547], "cosmologi": [422, 509], "cost": [221, 604], "coto": 453, "could": [16, 84, 90, 105, 126, 393, 395, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 422, 424, 466, 470, 479, 481, 498, 500, 501, 509, 511, 514, 515, 525, 541], "count": [16, 77, 83, 92, 100, 101, 103, 106, 107, 108, 109, 110, 111, 115, 120, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 143, 171, 173, 176, 177, 178, 183, 185, 189, 193, 196, 197, 199, 200, 201, 205, 208, 209, 218, 220, 229, 253, 294, 298, 299, 300, 305, 307, 310, 311, 313, 314, 315, 340, 376, 379, 388, 390, 398, 400, 403, 404, 405, 407, 408, 413, 417, 436, 437, 440, 442, 445, 447, 448, 454, 455, 459, 460, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 481, 483, 485, 488, 490, 491, 492, 493, 495, 499, 501, 504, 505, 506, 511, 513, 516, 523, 525, 526, 528, 540, 542, 546, 547, 549, 550, 551, 552, 555, 604, 605, 606, 608, 610], "count_bkg": 493, "count_statist": 607, "counter": [230, 239, 242, 560], "counts_3d": 505, "counts_fil": 101, "counts_imag": [485, 499], "counts_min": 149, "counts_off": [103, 106, 107, 110, 111, 171, 177, 178, 181, 390, 404, 447, 458, 459, 465, 471, 472, 473, 477, 481, 493, 499, 538, 607], "counts_on": 436, "counts_rat": 499, "counts_statist": 477, "countspredictor": 403, "countsspectrum": [404, 407, 436, 437, 439, 441, 450], "countsstatist": [294, 298, 417, 441, 442, 445, 456], "coupl": [400, 406, 411, 412, 424, 442, 454, 505], "cours": [392, 395, 399, 402, 409, 430, 471, 479, 499, 505, 509, 515, 525, 604, 605, 608], "cousin": [436, 442, 450, 452, 604], "cousins2007": 604, "coutinho": [442, 445], "cov": [259, 260, 422, 424], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [212, 385, 455], "covar_list": 212, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 128, 129, 132, 133, 213, 214, 215, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 298, 385, 410, 421, 422, 441, 447, 455, 456, 459, 461, 471, 525, 607], "covariance_data": [229, 237, 253, 269, 279], "covariance_opt": 214, "covariance_result": 215, "covariance_typ": 421, "covariancegaussianprior": 421, "covariancemixin": [224, 229, 269, 461], "covarianceresult": [102, 214, 215, 466, 468, 470, 471, 472, 479, 480, 481, 493, 495, 501, 515, 525, 526], "cover": [280, 392, 394, 406, 407, 408, 417, 422, 466, 467, 490, 491, 499, 505, 520, 528, 543, 547], "coverag": [401, 407, 424, 433, 437, 445, 451, 454, 491, 501], "coveral": [424, 433], "cowan": [134, 311, 313], "cpu": [128, 129, 132, 136, 338, 339, 405, 422, 509], "cpython": 397, "crab": [67, 83, 110, 111, 133, 149, 214, 250, 286, 292, 400, 404, 413, 422, 433, 439, 451, 453, 470, 471, 472, 480, 481, 490, 498, 499, 500, 501, 506, 509, 511, 513, 515, 516, 517, 525, 526, 528, 540, 551, 555, 604], "crab_10gev_100tev_dataset": 480, "crab_3fhl": 528, "crab_3fhl_spec": 528, "crab_events_pass4": 516, "crab_fp": 471, "crab_fp_tabl": 471, "crab_hess_ecpl": 286, "crab_hess_fp": [125, 127, 148], "crab_magic_lp": 472, "crab_model": 501, "crab_posit": 551, "crab_spec": 480, "crab_spectrum": 501, "crabnebula": 490, "crabspectrum": 437, "crash": 509, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 103, 105, 106, 110, 111, 112, 113, 114, 115, 117, 118, 120, 125, 126, 127, 128, 129, 132, 133, 136, 137, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 178, 179, 180, 184, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 286, 292, 318, 328, 349, 353, 369, 379, 381, 386, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 437, 438, 439, 442, 445, 447, 453, 454, 456, 457, 458, 459, 460, 461, 464, 465, 468, 471, 472, 473, 479, 481, 482, 483, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 501, 504, 507, 508, 509, 510, 511, 514, 515, 516, 517, 523, 525, 528, 530, 537, 538, 539, 542, 546, 549, 551, 552, 553, 554, 559, 561, 562, 563, 564, 570, 580, 589, 602, 603, 605, 610], "create_chain": 509, "create_crab_spectral_model": [470, 472, 480], "create_dataset": 101, "create_fermi_isotropic_diffuse_model": [507, 515], "create_map_dataset_from_observ": [93, 109], "create_mask": [194, 195, 204, 207], "create_t": 495, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 129, 207, 401, 402, 406, 416, 419, 439, 445, 461, 496, 508, 517], "creator": [105, 126, 395, 420, 471, 476, 477, 479, 508, 525, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "creatormedadata": 420, "creatormetadata": [84, 90, 105, 126, 420], "credit": 430, "crimson": 472, "criteria": [15, 91, 422, 447, 504, 509, 510, 518, 520], "criterion": [91, 134, 136, 316, 464, 542], "critic": [422, 509, 511], "criticis": 383, "crop": [86, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209], "crop_width": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209], "cross": [19, 398, 413, 461, 530], "crowd": 498, "crpix": 207, "crpix1": 505, "crpix2": 505, "crucial": [420, 422, 483, 484, 499], "cruft": 424, "crux": [33, 38, 495], "crval1": 505, "crval2": 505, "cryptic": 403, "csh": 605, "csobsselect": 402, "css": [87, 91, 424, 461], "cstat": [404, 422, 439], "csv": 127, "ct": [376, 454], "cta": [82, 83, 89, 103, 106, 110, 111, 116, 119, 120, 124, 144, 145, 151, 155, 156, 157, 166, 231, 380, 385, 387, 396, 399, 400, 401, 405, 408, 411, 412, 413, 423, 434, 435, 445, 451, 452, 453, 454, 461, 463, 464, 473, 476, 479, 481, 483, 484, 488, 492, 493, 499, 500, 503, 507, 518, 519, 520, 525, 540, 604], "cta_data_analysi": [413, 463, 481, 487], "cta_dataset": 507, "cta_north": 97, "cta_sensist": 413, "cta_sensit": [463, 464, 469], "cta_simul": 434, "cta_south": 97, "cta_util": 454, "ctadata": 514, "ctao": [82, 155, 156, 160, 176, 285, 392, 395, 413, 419, 423, 426, 431, 461, 463, 464, 471, 473, 476, 481, 483, 484, 493, 510, 516, 517, 518, 519, 520, 530, 542, 544, 603, 604], "ctao_north": 97, "ctao_south": [97, 464, 473, 483, 484, 488, 492], "ctapip": [395, 399, 401, 408, 409, 411, 412, 413, 414], "ctaspectrumobserv": 454, "ctobssim": 405, "ctool": [402, 405, 408, 413, 578], "cts_sigma": 501, "ctselect": 402, "ctype1": 505, "ctype2": 505, "cube": [46, 103, 106, 136, 171, 189, 196, 197, 199, 205, 208, 209, 249, 269, 392, 403, 404, 405, 411, 413, 414, 416, 422, 426, 433, 437, 438, 441, 446, 449, 450, 451, 452, 453, 454, 467, 474, 476, 481, 485, 515, 528, 538, 547, 549, 554, 555, 604], "cubic": 505, "cumbersom": [402, 410], "cumsum": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209], "cumul": [100, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 340, 405, 422, 470, 483, 507, 542], "cunit1": 505, "cunit2": 505, "curat": [424, 434], "curl": [67, 409, 425, 426, 428, 514], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 102, 103, 106, 110, 111, 127, 128, 132, 159, 182, 194, 195, 196, 197, 199, 205, 206, 207, 208, 209, 214, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 296, 369, 386, 392, 393, 395, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 425, 426, 427, 428, 437, 455, 471, 497, 500, 503, 504, 505, 507, 514, 516, 517, 525, 526, 531, 538, 539, 540, 547, 555, 602, 604, 605, 606], "curv": [15, 19, 20, 22, 26, 73, 77, 83, 132, 140, 223, 224, 227, 231, 233, 234, 235, 240, 244, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 304, 384, 396, 403, 405, 408, 413, 417, 426, 435, 439, 441, 442, 446, 449, 450, 452, 454, 456, 459, 460, 463, 464, 467, 489, 494, 495, 496, 520, 540, 541, 551, 556, 591, 601, 603], "curve_fit": 385, "cuspi": 530, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 105, 126, 131, 401, 402, 403, 408, 410, 412, 416, 420, 425, 439, 440, 442, 454, 464, 473, 476, 479, 481, 488, 492, 499, 503, 505, 514, 542, 589], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 508, "customis": [413, 503], "customprior": 511, "cut": [91, 124, 168, 182, 183, 402, 412, 453, 459, 463, 464, 467, 469, 473, 493, 499, 504, 505, 509, 510, 514, 520, 526, 528, 550, 551], "cutoff": [233, 234, 235, 273, 274, 275, 292, 439, 459, 463, 473, 479, 556, 569, 590], "cutout": [103, 106, 110, 111, 116, 119, 154, 155, 161, 166, 169, 172, 195, 197, 205, 207, 209, 279, 398, 404, 435, 440, 445, 451, 454, 461, 476, 477, 479, 481, 485, 499, 504, 515, 526, 528, 538], "cutout2d": [103, 106, 154, 155, 161, 166, 169, 172, 207, 209, 279, 398], "cutout_and_mask_region": [209, 459], "cutout_info": 439, "cutout_mod": 172, "cutout_slic": 207, "cutout_template_model": 461, "cutout_width": 172, "cval": [196, 197, 199, 205, 208, 209], "cwd": 400, "cwt": [413, 439, 451, 454], "cxc": [214, 413, 501], "cxvti_0t": 504, "cyan": 389, "cycl": [389, 395, 396, 397, 409, 411, 427, 452, 456], "cycler": [389, 464], "cython": [395, 436, 446], "d": [19, 20, 23, 28, 87, 89, 91, 200, 203, 206, 244, 250, 261, 280, 286, 358, 395, 410, 413, 447, 456, 468, 477, 483, 484, 492, 495, 505, 508, 510, 547, 554, 560, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 608], "dai": [87, 91, 125, 127, 206, 236, 241, 243, 261, 268, 395, 406, 413, 423, 424, 505, 598, 604, 605], "daniel": [455, 458, 460, 461], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 413, 421, 454, 459, 460, 463, 502, 512, 520, 531, 603], "dark_matter_spectra": 26, "darkbit": 530, "darkblu": 511, "darkgreen": 511, "darkmatt": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 264, 393, 413, 454, 497, 531], "darkmatterannihilationspectralmodel": [20, 264, 456, 497, 508], "darkmatterdecayspectralmodel": [264, 460, 497, 508], "darkorang": [470, 471], "darksusi": 530, "darwin": 430, "dash": [493, 497, 511], "dashboard": 424, "dat": [26, 87, 91, 229, 253, 471, 525, 530], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 118, 120, 125, 126, 127, 128, 129, 130, 131, 139, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 182, 189, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 295, 299, 304, 305, 306, 308, 309, 315, 316, 317, 326, 327, 330, 348, 354, 357, 361, 362, 370, 380, 381, 382, 383, 385, 386, 391, 393, 395, 396, 399, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 426, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 463, 464, 468, 473, 474, 476, 477, 481, 483, 484, 488, 492, 497, 498, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 514, 515, 517, 519, 521, 523, 527, 529, 530, 537, 538, 540, 542, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 576, 579, 581, 583, 584, 589, 602, 603, 604, 607, 608, 609, 610], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [194, 195, 204, 207], "data_path": 516, "data_reduct": 408, "data_shap": [102, 103, 106, 110, 111, 194, 195, 204, 207, 499, 555], "data_shape_ax": [195, 204, 207], "data_shape_imag": 207, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 176, 316, 317, 408, 430, 472, 481, 483, 491, 493, 495, 504, 510, 513, 514, 516, 517, 523, 526, 539, 549, 551, 552], "data_storag": 539, "data_summari": 451, "dataaxi": 436, "databas": [398, 412, 542], "dataclass": 392, "datafram": [87, 91, 509], "dataset": [6, 15, 16, 19, 20, 26, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 138, 143, 144, 145, 146, 147, 149, 154, 155, 161, 166, 169, 171, 172, 173, 176, 177, 178, 181, 182, 183, 198, 203, 214, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 295, 296, 311, 313, 338, 385, 388, 389, 393, 395, 396, 398, 400, 405, 407, 408, 409, 411, 412, 413, 417, 421, 422, 423, 424, 426, 428, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 468, 470, 473, 474, 481, 482, 483, 485, 488, 493, 495, 497, 498, 502, 505, 508, 510, 512, 513, 514, 515, 517, 520, 523, 528, 539, 540, 542, 549, 550, 551, 552, 563, 567, 570, 599, 600, 602, 603, 604, 605, 606, 607], "dataset1": [511, 538], "dataset1_prior": 511, "dataset2": [511, 538], "dataset2_prior": 511, "dataset_1": 540, "dataset_2": 540, "dataset_3fgl": 468, "dataset_3fhl": 468, "dataset_cta": 499, "dataset_empti": [466, 470, 472, 473, 481, 491, 495, 499, 504, 516, 551], "dataset_energy_depend": 482, "dataset_fak": 473, "dataset_fp": 492, "dataset_gammacat": 468, "dataset_hawc": 480, "dataset_hess": [480, 501], "dataset_imag": [481, 499], "dataset_kwarg": [93, 109], "dataset_lc": 492, "dataset_mak": [470, 472, 481, 491, 495, 504, 551], "dataset_nam": [109, 113, 114, 132, 229, 237, 253, 415, 421, 461, 479, 483, 484, 488, 499, 507, 526, 563], "dataset_on_off": [171, 177, 178, 181, 464, 470, 472, 473, 477, 481, 491, 495, 504, 551, 552], "dataset_on_off1": 464, "dataset_onoff": 404, "dataset_simul": 472, "dataset_stack": [470, 479], "datasetmodel": [216, 253, 269, 415, 442, 483, 484, 488, 495, 509], "datasetread": [101, 107], "datasets1": 389, "datasets2": 389, "datasets3": 389, "datasets_fil": [16, 471, 476, 477, 479, 525], "datasets_hess": 480, "datasets_in_phase_bin_3": 417, "datasets_mak": 504, "datasets_nam": [19, 20, 26, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 287, 441, 480, 507, 525, 563], "datasets_read": [507, 515], "datasets_sl": 499, "datasets_to_fit": 495, "datasetsconfig": 16, "datasetsmak": [174, 447, 459, 470, 504, 510, 542], "datasetsmetadata": 420, "datasetwrit": 108, "datastor": [16, 89, 96, 176, 316, 317, 398, 402, 407, 426, 430, 436, 447, 448, 450, 451, 453, 459, 460, 466, 470, 471, 472, 476, 477, 479, 481, 483, 488, 491, 493, 495, 504, 510, 513, 516, 517, 523, 525, 539, 542, 549, 551, 552, 605], "datastorecheck": 454, "datastoreindex": 402, "datastoreinmemori": 402, "datastoremak": [436, 447], "datastoremetadata": 420, "datastoreobserv": [177, 398, 402, 440, 453], "datastorexml": 402, "datasum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209], "datat": [87, 91], "date": [87, 91, 105, 126, 372, 409, 418, 419, 420, 422, 423, 431, 453, 471, 474, 476, 477, 479, 508, 517, 525, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 609], "datefmt": [16, 471, 476, 477, 479, 525, 605], "dateref": 474, "datetim": [105, 126, 420], "datetime64": [87, 91], "datfix": 474, "daughter": 420, "david": [402, 407, 434, 454, 455], "dc": 479, "dc1": [401, 413, 455, 483, 493, 503, 507, 514], "dc2": 401, "ddgwmbj6": 495, "ddof": 496, "de": [19, 20, 26, 67, 100, 223, 224, 227, 231, 233, 234, 235, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 315, 419, 423, 442, 445, 448, 497, 604], "deabsorb": 465, "deactiv": 425, "dead": [83, 86, 88, 348, 402, 422, 509], "dead_tim": [83, 88, 348], "deadc": 402, "deadlin": [401, 405], "deadtim": [88, 90, 189, 473, 483, 488, 514], "deadtime_fract": [88, 90], "deal": [86, 392, 398, 407, 408, 473, 483, 491, 520, 527, 542], "debanjan": 436, "debian": [409, 427, 449], "debug": [11, 392, 398, 403, 408, 456, 470, 500, 505, 509, 542, 605], "dec": [67, 83, 85, 87, 88, 91, 94, 144, 179, 392, 393, 397, 401, 403, 405, 408, 409, 413, 432, 458, 464, 470, 472, 474, 477, 481, 484, 490, 491, 493, 495, 498, 504, 506, 513, 514, 515, 516, 526, 528, 530, 542, 546, 551, 609], "dec_pnt": 517, "dec_tru": 405, "decad": [17, 18, 21, 22, 24, 25, 27, 101, 113, 114, 201, 288, 460, 483], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 236, 243, 261, 416, 483, 492, 496, 508, 530, 595], "decemb": 432, "decid": [392, 398, 401, 402, 403, 404, 406, 407, 411, 415, 416, 417, 423, 471, 510, 525], "decim": [87, 91, 312], "decis": [392, 393], "declar": [15, 87, 91, 269, 370, 371, 399, 400, 403, 408, 409, 412, 416, 424, 441, 541], "decor": [370, 371, 392, 412, 420, 605], "decorrel": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "decoupl": 69, "dedic": [395, 406, 407, 417, 419, 420, 424, 440, 441, 442, 460, 470, 471, 472, 479, 493, 501, 525, 526, 539], "deduc": [417, 460], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 282, 283, 284, 479], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 277, 279, 281], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 297, 370, 371, 392, 393, 403, 404, 405, 406, 416, 417, 420, 421, 422, 470, 479, 495, 501, 508, 509, 511, 523, 551, 605, 607], "def_unit": [464, 473, 476, 479, 481, 488, 492, 514], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 297, 298, 299, 303, 304, 305, 306, 311, 312, 313, 315, 316, 318, 329, 330, 331, 336, 338, 339, 345, 346, 347, 348, 350, 351, 354, 357, 359, 360, 362, 368, 373, 374, 379, 381, 382, 383, 385, 386, 388, 389, 392, 393, 398, 404, 408, 409, 416, 419, 424, 430, 436, 438, 439, 440, 442, 445, 447, 453, 454, 456, 457, 458, 459, 460, 470, 471, 472, 474, 477, 479, 483, 484, 491, 492, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 515, 520, 525, 526, 528, 538, 540, 542, 549, 552, 553, 554, 555, 560, 561, 562, 570, 580, 605, 609], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 374, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 452], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 421], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [150, 151, 156, 158, 163, 168, 503], "defer": [106, 111], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 102, 103, 104, 105, 106, 109, 110, 111, 116, 119, 124, 125, 126, 127, 128, 129, 131, 132, 136, 153, 154, 155, 157, 161, 164, 165, 166, 167, 169, 172, 173, 177, 182, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 217, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 297, 299, 305, 307, 311, 313, 330, 340, 345, 346, 347, 348, 351, 382, 383, 385, 392, 393, 395, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 435, 436, 439, 442, 445, 448, 452, 453, 458, 459, 460, 465, 471, 473, 474, 476, 477, 479, 480, 482, 485, 488, 492, 493, 495, 496, 498, 499, 500, 501, 503, 504, 505, 507, 508, 510, 511, 514, 515, 516, 520, 525, 528, 538, 539, 540, 542, 544, 547, 551, 552, 554, 560, 562, 564, 565, 566, 570, 571, 574, 575, 577, 578, 580, 582, 583, 585, 586, 587, 588, 589, 600, 602, 603, 604, 605, 606, 607, 608], "definit": [83, 84, 86, 88, 90, 100, 103, 105, 106, 110, 111, 126, 173, 204, 222, 297, 315, 329, 392, 401, 402, 406, 414, 415, 416, 417, 420, 437, 441, 442, 458, 460, 461, 470, 472, 476, 485, 491, 503, 504, 525, 538, 540, 547, 548, 553, 555, 560, 561, 607], "deform": 555, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 103, 106, 110, 111, 113, 114, 115, 116, 119, 120, 124, 129, 130, 136, 144, 145, 147, 155, 157, 158, 163, 164, 165, 166, 167, 168, 169, 171, 176, 179, 180, 182, 184, 189, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 229, 230, 239, 242, 253, 257, 266, 267, 269, 316, 317, 350, 387, 392, 393, 403, 406, 408, 416, 417, 420, 430, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 510, 513, 514, 515, 516, 517, 525, 526, 528, 539, 540, 542, 544, 546, 549, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 565, 566, 567, 610], "deg2": 513, "degeneraci": 509, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 113, 114, 115, 122, 125, 127, 138, 147, 195, 196, 197, 199, 202, 207, 208, 209, 229, 253, 257, 269, 280, 311, 313, 460, 464, 466, 471, 477, 482, 491, 495, 498, 504, 505, 506, 514, 525, 540, 554, 555, 607, 608], "deil": [397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 413, 433, 434, 435, 436, 437, 438, 439, 440, 446, 449, 450, 451, 452, 453, 454, 455], "deiml": 453, "dej2000": [498, 528], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 403], "delai": [414, 418], "deleg": 408, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 392, 403, 424, 425, 426, 428, 460, 507], "delete_interv": 86, "delimit": 127, "deliv": [408, 412, 547], "delta": [19, 20, 23, 87, 91, 124, 125, 130, 133, 136, 158, 206, 259, 260, 293, 311, 312, 313, 459, 465, 474, 501, 511, 540, 547, 548, 561, 562, 564, 607], "delta_t": [122, 293, 482], "deltaaic": 509, "deltacstat": 422, "deltaloglik": 509, "deltalogz": 509, "demonstr": [408, 435, 438, 439, 440, 441, 442, 447, 459, 460, 490, 496, 502, 505, 507, 509, 520, 554], "denot": [103, 110, 417, 538], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 102, 127, 158, 209, 219, 238, 248, 284, 344, 347, 385, 405, 477, 479, 497, 498, 511, 530, 532, 536, 546, 547, 548, 604], "dep": 459, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 103, 104, 109, 110, 122, 125, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 183, 194, 195, 204, 207, 209, 222, 229, 244, 253, 269, 318, 371, 392, 394, 395, 396, 398, 403, 404, 405, 406, 407, 410, 411, 412, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 434, 438, 439, 442, 449, 451, 454, 455, 457, 459, 460, 461, 463, 464, 467, 469, 473, 476, 477, 486, 487, 491, 498, 501, 503, 504, 505, 506, 507, 509, 510, 511, 514, 515, 520, 538, 542, 546, 547, 550, 551, 554, 570], "deploy": 419, "deposit": 419, "deprec": [16, 19, 20, 26, 84, 85, 90, 105, 126, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 436, 445, 458, 459, 460, 461, 479, 567], "deprecated_argument_funct": 392, "deprecated_argument_function_kwarg": 392, "deprecated_attribut": 392, "deprecated_funct": 392, "deprecated_renamed_argu": 392, "deprecatedparseprotocol": [16, 84, 90, 105, 126], "deprecation_polici": 418, "depriv": 549, "depth": [16, 84, 90, 105, 126, 358, 426, 431, 465, 496, 570], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 118, 124, 132, 136, 137, 146, 280, 392, 404, 405, 410, 412, 414, 417, 474, 500, 514, 516, 540, 547, 554, 606, 607], "descent": [422, 509], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 127, 128, 130, 136, 165, 205, 214, 282, 307, 311, 313, 393, 395, 397, 398, 401, 402, 404, 405, 406, 408, 409, 411, 412, 413, 416, 417, 418, 419, 422, 431, 437, 445, 453, 454, 470, 471, 474, 483, 484, 496, 500, 501, 508, 509, 511, 514, 516, 517, 520, 525, 538, 542, 546, 555, 556, 604, 605, 606, 607], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 124, 129, 136, 214, 221, 222, 393, 397, 398, 406, 412, 413, 418, 419, 431, 456, 460, 479, 488, 498, 501, 505, 509, 514, 516, 525, 526, 542, 607], "description1": 393, "description2": 393, "description3": 393, "description_width": [479, 488, 505, 525, 526], "descriptionstyl": [479, 488, 505, 525, 526], "descriptor": [87, 88, 91, 103, 106, 110, 111, 279, 327, 393, 441], "design": [397, 398, 401, 402, 405, 406, 408, 412, 413, 415, 417, 418, 422, 433, 453, 460], "desir": [16, 84, 87, 90, 91, 105, 126, 164, 194, 195, 204, 207, 209, 297, 366, 367, 368, 412, 505, 528, 555], "desktop": 431, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 103, 106, 110, 111, 127, 128, 154, 155, 161, 166, 169, 172, 195, 207, 209, 214, 217, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 279, 280, 281, 392, 393, 395, 397, 400, 401, 402, 405, 406, 407, 411, 412, 413, 414, 418, 419, 422, 425, 429, 431, 432, 439, 443, 444, 463, 464, 465, 470, 472, 473, 474, 476, 481, 482, 483, 486, 487, 488, 492, 495, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 514, 516, 517, 520, 526, 528, 538, 539, 541, 547, 551, 552, 554, 602, 603, 604, 605, 607, 609], "detect": [17, 19, 20, 21, 22, 24, 25, 26, 27, 59, 144, 145, 292, 382, 383, 393, 408, 411, 413, 415, 433, 439, 440, 441, 451, 453, 454, 460, 463, 475, 478, 498, 514, 516, 520, 604, 607], "detect_t": 413, "detector": [83, 88, 104, 109, 158, 506, 516, 547, 604], "determin": [19, 20, 21, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 113, 114, 135, 157, 163, 165, 167, 179, 180, 182, 184, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 318, 340, 403, 407, 410, 419, 447, 459, 460, 464, 472, 476, 477, 482, 490, 504, 506, 532, 603], "determinist": 392, "deti": [83, 104, 109, 405, 514], "detx": [83, 104, 109, 405, 514], "dev": [11, 16, 82, 392, 394, 395, 408, 419, 422, 423, 424, 461, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 567, 570, 599, 600], "dev1305": [105, 126, 431, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "develop": [393, 397, 398, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419, 421, 423, 424, 427, 431, 433, 446, 453, 454, 455, 514], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 128, 197, 209, 214, 238, 297, 301, 501, 511], "devoid": [470, 545], "devop": 419, "devot": [467, 520], "dex": 318, "df": [87, 91, 122, 138, 147, 311, 313, 482, 501, 607], "diagnosi": 401, "diagnost": 408, "diagon": [153, 154, 155, 410, 421, 515], "diagram": 609, "dialog": [426, 428], "diamet": [195, 196, 197, 466], "diamond": 510, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 120, 122, 125, 126, 127, 128, 129, 130, 132, 133, 136, 138, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 287, 292, 293, 294, 297, 298, 302, 316, 330, 338, 339, 354, 357, 358, 359, 362, 372, 373, 374, 375, 379, 380, 381, 385, 386, 387, 388, 389, 392, 407, 409, 414, 417, 420, 438, 442, 445, 453, 471, 479, 490, 491, 495, 498, 501, 505, 510, 525, 526, 554, 560, 570], "dict_kei": [465, 509, 570], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 122, 125, 126, 127, 128, 129, 132, 133, 136, 138, 139, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 181, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 213, 214, 216, 217, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 294, 297, 298, 302, 328, 354, 357, 358, 359, 362, 372, 375, 386, 393, 409, 411, 412, 417, 420, 421, 470, 472, 479, 501, 503, 509, 510, 511, 600], "dictionnari": [229, 253, 385, 422, 509], "did": [77, 222, 399, 406, 411, 413, 414, 416, 419, 436, 464, 473, 476, 479, 481, 488, 492, 501, 511, 514], "didn": [83, 88, 399, 402, 406, 409, 530], "diemand": 24, "diff": [102, 103, 106, 110, 111, 392, 395, 400, 404, 479, 488, 526], "diff_flux": 497, "diff_flux_point": [102, 499], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 77, 80, 86, 87, 91, 94, 100, 102, 122, 124, 125, 127, 128, 129, 132, 133, 134, 136, 144, 150, 151, 152, 153, 156, 158, 160, 163, 168, 178, 196, 197, 199, 202, 203, 204, 205, 207, 208, 209, 219, 238, 248, 284, 292, 293, 294, 298, 348, 352, 366, 367, 383, 392, 393, 395, 397, 398, 400, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 424, 426, 428, 437, 440, 442, 452, 455, 456, 457, 459, 461, 464, 470, 471, 472, 474, 476, 479, 482, 483, 484, 485, 490, 492, 495, 496, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 511, 514, 515, 516, 518, 520, 525, 527, 528, 530, 538, 540, 542, 547, 554, 555, 561, 562, 603, 605, 606, 607], "different": 400, "differenti": [19, 20, 23, 26, 79, 125, 127, 135, 196, 197, 199, 201, 205, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 269, 270, 272, 273, 274, 275, 278, 282, 285, 286, 345, 398, 403, 410, 417, 452, 505, 508, 515, 528, 540, 604], "differential_flux": 127, "difficult": [403, 406, 424], "diffus": [68, 196, 197, 199, 205, 208, 209, 287, 392, 408, 411, 454, 455, 479, 483, 498, 505, 507, 508, 514, 602], "diffuse_cub": 508, "diffuse_galactic_fermi": 507, "diffuse_iem": [507, 515], "diffuse_iso": [507, 515], "diffuse_model": 287, "difrsp0": [515, 528], "difrsp1": [515, 528], "difrsp2": [515, 528], "difrsp3": [515, 528], "difrsp4": [515, 528], "digit": 392, "dilat": [209, 445], "dim": [163, 347, 450, 451, 481, 604], "dimens": [46, 53, 103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 221, 277, 278, 281, 318, 330, 385, 408, 422, 442, 453, 455, 459, 461, 501, 502, 503, 505, 508, 509, 520, 538, 554, 555, 561], "dimension": [31, 32, 37, 68, 87, 91, 120, 194, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 221, 238, 239, 242, 288, 331, 344, 398, 406, 421, 426, 451, 474, 500, 501, 503, 505, 508, 528, 546, 548, 554, 555, 603, 604], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 158, 274, 275, 317, 485, 508], "dimitri": [445, 447], "dipol": [51, 54, 547], "dirac": 19, "direct": [91, 105, 168, 186, 187, 190, 192, 201, 221, 230, 239, 242, 322, 325, 393, 398, 404, 406, 411, 414, 417, 420, 445, 463, 467, 469, 473, 504, 520, 539, 547, 548, 550, 551, 560, 603, 604], "directional_offset_bi": [464, 473], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 90, 91, 105, 126, 137, 143, 146, 147, 168, 183, 196, 197, 199, 205, 208, 209, 277, 279, 281, 392, 394, 395, 397, 399, 400, 403, 404, 405, 406, 410, 413, 420, 422, 426, 428, 429, 433, 435, 436, 437, 439, 453, 460, 468, 470, 471, 473, 479, 480, 481, 484, 485, 488, 491, 492, 496, 498, 499, 500, 501, 503, 505, 506, 507, 508, 510, 514, 515, 525, 526, 528, 530, 538, 542, 547, 551, 554, 580, 607], "directori": [11, 82, 87, 392, 408, 471, 482, 509, 517, 525, 528, 539, 542, 605], "dirk": [436, 450, 452], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 445], "disadvantag": 605, "disagr": 397, "disambigu": 397, "disc": [476, 477, 479, 484], "discard": [420, 495, 498], "discard_on_copi": [87, 91], "discarded_ind": 498, "discarded_spati": 498, "discarded_t": 498, "disccus": 401, "discourag": 392, "discov": [221, 509, 605], "discoveri": [35, 509], "discrep": 470, "discret": [91, 139, 306, 312, 405, 461, 501, 554], "discrete_correl": 139, "discrete_correlation_dict": 139, "discrete_correlation_err": [139, 306], "discuss": [13, 59, 282, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 431, 453, 509, 511, 517, 531, 609], "disjoint": 406, "disk": [82, 111, 155, 158, 197, 207, 209, 230, 242, 244, 369, 391, 392, 402, 403, 404, 408, 412, 416, 417, 422, 461, 463, 464, 470, 479, 480, 505, 506, 507, 508, 509, 553, 556, 558, 562, 566, 568], "disk_inc": 406, "diskspatialmodel": [72, 263, 416, 438, 459, 507, 508, 560], "dismiss": 100, "disp": [546, 547], "dispatch": 403, "dispers": [82, 88, 101, 103, 104, 106, 108, 109, 110, 111, 112, 115, 117, 153, 154, 155, 158, 176, 182, 183, 186, 187, 190, 392, 398, 403, 404, 405, 439, 441, 451, 452, 453, 455, 464, 466, 470, 471, 479, 483, 504, 516, 517, 525, 526, 538, 547, 550, 604], "displac": 322, "displai": [11, 15, 82, 87, 91, 120, 132, 136, 214, 302, 339, 385, 389, 392, 393, 412, 424, 426, 428, 445, 448, 459, 460, 464, 466, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 485, 488, 490, 492, 493, 498, 499, 500, 501, 505, 507, 508, 514, 515, 517, 542, 605], "display_length": [87, 91], "disrupt": [434, 435], "dissolv": 438, "dist": [341, 424], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 129, 144, 145, 204, 254, 281, 312, 321, 347, 406, 451, 458, 472, 474, 485, 497, 498, 501, 513, 536, 551, 580], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 497], "distance_max": [46, 47, 347, 498], "distance_min": [47, 347, 498], "distance_refer": 498, "distibut": [137, 146], "distinct": [407, 408, 414, 516, 608], "distinguish": [294, 298, 417, 420, 464, 505], "distort": [406, 437], "distrib": [102, 137, 146, 470], "distribut": [13, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 102, 109, 134, 137, 138, 146, 147, 158, 193, 219, 221, 223, 224, 227, 231, 233, 234, 235, 238, 240, 246, 247, 248, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 284, 294, 295, 298, 311, 313, 340, 341, 345, 385, 388, 390, 391, 392, 396, 397, 400, 405, 410, 411, 415, 418, 419, 423, 424, 427, 438, 447, 453, 459, 460, 464, 470, 472, 473, 477, 479, 483, 485, 488, 490, 501, 507, 511, 513, 514, 528, 530, 542, 546, 547, 549, 555, 564, 580, 603, 604, 606, 607], "divers": 417, "divid": [195, 201, 206, 414, 417, 472, 483, 510, 516, 517], "divis": 201, "djangoproject": 413, "djuvsland": 460, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 182, 200, 201, 316, 317, 393, 398, 400, 401, 403, 413, 420, 426, 430, 436, 439, 441, 447, 456, 460, 466, 470, 471, 472, 476, 477, 479, 490, 491, 495, 504, 506, 510, 513, 523, 525, 526, 538, 542, 544, 545, 546, 548, 549, 551, 552, 603, 604], "dl4": [99, 102, 103, 106, 110, 111, 118, 120, 124, 128, 132, 136, 146, 147, 161, 182, 393, 398, 420, 426, 441, 492, 499, 500, 501, 542, 603, 604], "dl5": [120, 124, 128, 132, 136, 420, 460, 492, 500, 501, 603, 604], "dl6": [120, 124, 128, 132, 136, 500, 603, 604], "dlogz": 509, "dm": [17, 19, 20, 21, 22, 24, 25, 26, 27, 412, 441, 456, 497, 508], "dm_exampl": 530, "dmfitfunct": 530, "dmpipe": 530, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 497, 530], "dmsky": 530, "dn": [235, 247, 274, 497, 604], "dnde": [19, 20, 26, 67, 125, 126, 127, 135, 137, 139, 140, 141, 142, 146, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 285, 417, 445, 468, 470, 471, 481, 485, 498, 499, 500, 508, 515, 525, 528, 540], "dnde_cu": 286, "dnde_err": [125, 127, 137, 146, 540], "dnde_errn": [19, 20, 26, 67, 125, 127, 137, 146, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 498], "dnde_errp": [19, 20, 26, 67, 125, 127, 137, 146, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 498], "dnde_ref": [125, 127, 417], "dnde_scan_axi": [137, 146], "dnde_scan_valu": [125, 127], "dnde_ul": [67, 125, 127, 137, 146, 498, 528], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 105, 126, 153, 164, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 342, 385, 393, 395, 397, 398, 399, 402, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 420, 422, 423, 424, 426, 428, 439, 465, 468, 470, 471, 473, 474, 476, 477, 479, 481, 482, 483, 488, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 514, 515, 525, 526, 528, 538, 542, 549, 554, 602, 605, 608, 609], "do_someth": 392, "doc": [11, 13, 16, 83, 87, 91, 153, 195, 201, 204, 207, 214, 221, 229, 253, 318, 355, 392, 393, 395, 397, 400, 406, 408, 409, 411, 413, 422, 423, 430, 431, 433, 439, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 555, 567, 570, 593, 599, 600, 604, 605, 609], "docker": [409, 424], "dockerfil": [400, 423, 424], "docstr": [392, 413, 419, 445, 446, 447, 449, 452, 458, 459, 460, 461, 479, 508], "doctest": [164, 380, 393], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 298, 326, 330, 340, 365, 379, 392, 394, 396, 397, 399, 400, 402, 406, 408, 409, 411, 412, 414, 416, 418, 419, 422, 424, 425, 430, 431, 432, 439, 441, 442, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 505, 507, 514, 516, 517, 542, 547, 553, 554, 555, 605], "doe": [16, 84, 87, 90, 91, 105, 126, 132, 139, 156, 166, 169, 203, 244, 280, 292, 392, 393, 399, 400, 402, 404, 406, 407, 409, 411, 412, 413, 416, 417, 419, 420, 422, 436, 445, 456, 464, 465, 470, 473, 476, 479, 481, 482, 498, 501, 503, 504, 505, 506, 516, 530, 542, 551, 605], "doesn": [69, 392, 393, 397, 399, 400, 406, 409, 410, 413, 461, 514, 515, 605], "dof": 607, "doi": [138, 311, 313, 419], "domain": [196, 197, 199, 205, 208, 209, 392, 406, 496], "domenico": 451, "dominguez": [231, 232, 416, 465, 570], "dominquez": 231, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 153, 391, 392, 395, 397, 399, 400, 409, 420, 424, 466, 470, 476, 481, 490, 506, 508, 509, 603, 605, 608, 609], "donath": [401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 128, 154, 155, 161, 166, 169, 385, 392, 393, 395, 397, 398, 399, 403, 405, 406, 407, 408, 410, 411, 412, 413, 416, 417, 419, 423, 426, 430, 454, 459, 466, 473, 479, 480, 484, 485, 488, 492, 493, 499, 500, 504, 505, 508, 509, 510, 538, 542, 550, 551, 555, 589, 607, 609], "door": 412, "dos2unix": 392, "dot": [50, 51, 54, 110, 111, 196, 197, 199, 205, 208, 209, 459], "doubl": [27, 124, 139, 140, 302, 419, 452, 460], "doubling_dict": 302, "down": [50, 51, 54, 136, 397, 399, 402, 406, 411, 423, 437, 499, 509, 515, 608], "downgrad": [195, 391], "download": [67, 94, 102, 127, 395, 400, 408, 409, 413, 420, 423, 425, 426, 428, 430, 434, 435, 437, 438, 445, 454, 455, 456, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 523, 525, 526, 528, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605], "downsampl": [103, 106, 110, 111, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 436, 442, 451, 461, 499, 500], "downsampled_energi": 499, "downsampling_factor": [136, 481], "downward": [294, 298], "dozen": 392, "dpp": 419, "dr": [17, 18, 21, 22, 24, 25, 27, 562], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 158, 176, 275, 316, 317, 393, 400, 413, 430, 463, 466, 470, 471, 477, 479, 491, 495, 504, 510, 513, 523, 525, 526, 539, 542, 544, 545, 546, 548, 549, 551, 552, 556, 569, 590], "dr2": [65, 275, 445, 463, 556, 569, 590], "dr3": [65, 274, 463, 508, 556, 569, 590], "dr4": [65, 460], "draft": [392, 396, 397, 421, 454], "drag": 395, "draw": [33, 197, 340, 405, 511], "drawback": [407, 411], "drawn": [340, 405, 422, 509], "drift": [85, 94, 95, 456, 604], "drive": 408, "driven": [11, 15, 398, 408, 410, 413, 453, 520, 527, 541], "drop": [52, 53, 103, 106, 110, 111, 125, 127, 132, 154, 155, 161, 166, 169, 173, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 230, 237, 279, 376, 396, 397, 408, 409, 415, 435, 438, 439, 442, 445, 452, 455, 505, 538], "ds9": [83, 195, 204, 207, 211, 229, 253, 392, 393, 406, 437, 506, 508, 555], "ds9parser": 406, "dss": 402, "dt": [87, 91], "dtime_t": 496, "dtype": [33, 38, 87, 91, 112, 117, 151, 153, 156, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 229, 253, 318, 392, 421, 472, 476, 485, 495, 498, 499, 500, 503, 504, 505, 514, 515, 528, 540], "duck": [16, 84, 90, 105, 126], "due": [59, 87, 91, 392, 412, 421, 422, 448, 463, 467, 469, 470, 505, 509, 511, 514, 520, 580, 605], "dummi": [110, 111, 406, 476, 542], "dump": [16, 84, 90, 105, 126, 408], "dumps_kwarg": [16, 84, 90, 105, 126], "duplic": [87, 91, 100, 154, 392, 393, 398, 413, 414, 417, 442, 445, 461], "durat": [83, 86, 88, 94, 473, 483, 488, 491, 495, 514, 539, 542], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 103, 105, 106, 110, 111, 126, 173, 176, 292, 392, 393, 400, 404, 408, 411, 412, 413, 415, 418, 419, 420, 421, 423, 424, 439, 442, 459, 460, 471, 472, 483, 490, 491, 495, 499, 504, 506, 509, 511, 526, 538, 539, 547, 604, 608], "dust": 231, "duti": 419, "dv38wp": 495, "dwarf": [17, 530], "dx": [33, 322], "dy": [33, 322], "dynam": [22, 389, 539], "dynesti": 422, "dz": 322, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 105, 115, 126, 127, 128, 134, 144, 153, 154, 155, 156, 158, 182, 189, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 214, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 294, 298, 302, 318, 320, 324, 350, 358, 369, 381, 382, 387, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 439, 445, 446, 447, 451, 453, 454, 455, 459, 461, 463, 465, 466, 468, 470, 471, 472, 473, 477, 480, 481, 482, 483, 484, 485, 488, 490, 491, 493, 495, 496, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 523, 525, 526, 528, 530, 537, 538, 539, 540, 542, 546, 547, 552, 553, 554, 560, 561, 562, 570, 571, 573, 574, 575, 577, 578, 582, 583, 585, 586, 587, 588, 599, 602, 604, 605, 606, 607, 608, 609, 610], "e2dnd": [19, 20, 26, 125, 126, 127, 135, 139, 140, 141, 142, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 417, 445, 452, 464, 465, 468, 470, 471, 472, 480, 498, 500, 526, 528, 540, 542, 580], "e2dnde_err": [125, 127], "e2dnde_errn": [125, 127, 498], "e2dnde_errp": [125, 127, 498], "e2dnde_ref": [125, 127], "e2dnde_ul": [125, 127, 498], "e501": [19, 20, 153, 189, 200, 201, 207, 389], "e_": [19, 20, 26, 50, 52, 53, 153, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 538, 544, 546, 547, 548, 571, 575, 583, 585, 586], "e_0": [233, 234, 235, 246, 247, 259, 260, 270, 273, 274, 275, 574, 575, 578, 580, 582, 585, 586, 587, 588], "e_b": 416, "e_cut": [67, 498], "e_cutoff": 580, "e_d": [259, 260], "e_edg": 442, "e_max": [67, 127, 417, 464, 470, 471, 472, 484, 490, 498, 499, 500, 501, 505, 511, 528, 540], "e_min": [67, 127, 417, 464, 470, 471, 472, 484, 490, 498, 499, 500, 501, 505, 511, 515, 528, 540], "e_peak": [235, 247, 274], "e_reco": [112, 117, 153, 158, 493, 604], "e_ref": [67, 127, 417, 464, 470, 471, 490, 498, 500, 525, 528, 540], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 468, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 481, "e_sn": [43, 44, 52], "e_tru": [112, 117, 158, 493, 515, 604], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 86, 87, 91, 92, 100, 103, 106, 109, 110, 111, 116, 119, 120, 122, 124, 125, 127, 128, 132, 135, 136, 138, 140, 141, 142, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 177, 178, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 214, 221, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 253, 254, 255, 256, 258, 259, 260, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 306, 316, 355, 381, 390, 392, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 412, 413, 414, 417, 419, 422, 424, 425, 432, 439, 442, 453, 456, 459, 461, 466, 473, 474, 477, 479, 480, 481, 483, 484, 490, 491, 492, 493, 495, 497, 498, 499, 501, 503, 504, 505, 507, 508, 510, 511, 516, 517, 520, 526, 531, 537, 538, 539, 542, 546, 547, 548, 554, 555, 563, 580, 581, 604, 605, 608, 609], "eager": 408, "earli": [406, 411, 413, 514], "earlier": [399, 419], "earth": [41, 88, 90, 285, 515], "earth_azimuth_angl": [515, 528], "earthloc": [83, 85, 88, 90, 94, 97, 328, 420], "easi": [392, 393, 398, 403, 406, 407, 408, 411, 413, 417, 420, 439, 445, 453, 505, 506, 515, 539, 602, 603, 605, 609], "easier": [392, 398, 403, 411, 417, 453, 456, 514], "easiest": 427, "easili": [87, 91, 127, 398, 403, 404, 408, 412, 420, 422, 426, 427, 490, 491, 501, 503, 505, 515, 528, 605], "ebel": [120, 474], "ebl": [231, 232, 282, 410, 416, 439, 442, 452, 459, 461, 463, 467, 469, 508, 520, 556, 569, 590], "ebl_data_builtin": [465, 570], "ebl_dominguez11": [232, 570], "ebl_franceschini": [232, 282], "ebl_franceschini_2017": 232, "ebl_saldana": 232, "eblabsorbtionnormspectralmodel": 416, "eblabsorptionnormspectralmodel": [264, 416, 442, 465, 508, 570], "ebltabl": 465, "ebound": [153, 201, 555], "ebreak": [223, 270, 571, 585], "ec": [493, 508, 555], "eccentr": [230, 239, 242, 560, 561, 562], "echo": 605, "eco": 419, "ecosystem": 420, "ecpl": [67, 80, 233, 234, 235, 292, 416, 451, 468, 498, 508], "ecpl_norm": 576, "ecsv": [59, 63, 127, 404], "ecut": [233, 273, 575, 586], "edelson": [139, 303, 306, 496], "edg": [103, 106, 110, 111, 120, 122, 124, 128, 131, 132, 136, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 176, 177, 182, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 230, 385, 406, 417, 436, 442, 445, 464, 465, 470, 480, 481, 482, 483, 484, 496, 500, 503, 504, 505, 506, 515, 516, 525, 549, 560], "edge_max": [194, 195, 204, 207, 560], "edge_min": [194, 195, 204, 207, 560], "edge_width": [230, 507, 560], "edgecolor": [389, 470, 472, 474, 481, 482, 485, 493, 497, 551, 560, 561, 562], "edges_max": [198, 200, 201, 206, 505], "edges_min": [198, 200, 201, 206, 505], "edisp": [16, 82, 87, 88, 96, 103, 106, 107, 110, 111, 112, 117, 153, 154, 155, 158, 162, 176, 182, 183, 186, 187, 269, 316, 317, 393, 402, 403, 404, 405, 408, 440, 442, 445, 451, 452, 453, 461, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 481, 483, 484, 488, 491, 492, 495, 499, 504, 510, 514, 515, 516, 517, 525, 538, 546, 604], "edisp2d": [155, 158, 393], "edisp2d_ax": 158, "edisp3d": 503, "edisp_": 538, "edisp_2d": [82, 87, 158, 514, 517], "edisp_3d": 503, "edisp_bin": 101, "edisp_ev": 503, "edisp_fil": 101, "edisp_kernel": [153, 499, 546], "edisp_kernel_map": [154, 516], "edisp_map": [104, 109, 154, 155, 503, 546], "edisp_new": 503, "edispkernel": [106, 112, 117, 154, 158, 186, 440, 546], "edispkernelmap": [103, 106, 107, 110, 111, 115, 155, 161, 162, 166, 169, 176, 183, 186, 441, 442, 474, 504, 515, 542, 546], "edispmap": [103, 104, 106, 109, 110, 111, 161, 162, 166, 169, 176, 183, 186, 187, 404, 405, 414, 435, 438, 439, 440, 442, 445, 503, 538, 546], "edit": [393, 395, 397, 399, 400, 401, 408, 413, 423, 424, 427, 525, 605], "editor": [393, 419, 471, 525, 605], "editori": 419, "edm": 501, "edu": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 195, 204, 207, 214, 229, 250, 253, 285, 286, 413, 501, 555], "eemin": 580, "eff": [156, 509, 544, 547, 561, 562], "eff_area": 503, "effarea": 503, "effect": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 84, 87, 88, 90, 91, 105, 106, 108, 126, 155, 156, 182, 183, 188, 190, 191, 204, 221, 229, 253, 382, 383, 392, 397, 402, 403, 405, 406, 417, 449, 451, 470, 483, 485, 490, 496, 509, 511, 516, 517, 520, 525, 547, 555, 561, 562, 604], "effective_area": [162, 405, 514], "effective_livetim": 504, "effective_times_src": 504, "effectivearea3d": 503, "effectiveareat": [404, 433, 445, 449], "effectiveareatable2d": [88, 155, 162, 168, 190, 398, 449, 503, 514, 544], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 111, 120, 221, 397, 403, 404, 405, 406, 407, 415, 468, 509, 510, 547, 552, 607], "effort": [399, 401, 408, 409, 411, 412, 413, 416, 436, 538, 547], "eflux": [19, 20, 26, 125, 126, 127, 139, 140, 141, 142, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 417, 445, 485, 508, 540], "eflux_err": [125, 127, 417], "eflux_errn": [125, 127], "eflux_errp": [125, 127], "eflux_ref": [125, 127], "eflux_ul": [125, 127], "eg": [392, 461, 465, 479, 488, 492, 495, 499, 503, 507, 508, 511], "egal": 514, "egg": 427, "einasto": [21, 530], "either": [67, 82, 83, 87, 88, 91, 95, 111, 125, 127, 158, 173, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 207, 208, 209, 244, 297, 318, 348, 381, 393, 395, 397, 399, 406, 408, 411, 415, 419, 426, 445, 459, 471, 479, 485, 492, 499, 501, 508, 511, 525, 538, 540, 542, 553, 555, 602, 605], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 497], "elabor": [412, 419, 474], "elaps": [83, 401, 604], "electron": [50, 285, 514, 547, 580], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 385, 410, 422, 459, 461, 498, 505, 509, 554], "elementtre": 514, "elev": 407, "elif": [392, 406, 420], "eliot": 412, "elli": [433, 446], "ellips": [230, 406, 555, 560], "ellipseannulusskyregion": [551, 555], "ellipseskyregion": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 466, 508, 551], "ellipsoid": 501, "ellipt": [555, 562], "elong": [435, 438, 439, 560, 561], "elpas": 459, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 125, 127, 136, 203, 392, 395, 406, 409, 417, 420, 421, 424, 426, 428, 510, 605, 607], "elsewher": [116, 119], "email": [393, 395, 419, 424], "emax": [101, 132, 258, 286, 476, 482, 583], "emax_fit": 493, "embryon": 408, "emce": [401, 409, 435, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528], "emerg": 402, "emeri": 454, "emin": [101, 132, 258, 286, 476, 482, 583], "emin_fit": 493, "emiss": [52, 68, 140, 398, 403, 407, 470, 477, 479, 480, 483, 507, 514, 515, 538, 547, 552, 580, 602], "emit": [82, 217, 218, 219, 220, 377, 392, 435, 453, 465, 547], "emitt": 470, "emmanoulopoulo": [312, 461], "emphas": 500, "emphasi": 501, "empir": 40, "emploi": 472, "empti": [92, 100, 103, 106, 110, 111, 144, 176, 196, 197, 199, 203, 205, 208, 209, 214, 253, 377, 400, 402, 436, 448, 479, 483, 484, 488, 492, 504, 505, 516, 531, 538, 551, 552, 555], "empty_dataset": 464, "empty_i": 492, "empty_map": [103, 106, 110, 111, 482, 504, 551], "emsembl": 93, "en": [34, 83, 87, 88, 91, 128, 189, 204, 214, 282, 311, 313, 318, 413, 464, 473, 476, 479, 481, 488, 492, 501, 503, 506, 514, 539, 553, 555], "enabl": [401, 404, 412, 427, 436, 445, 454, 464, 473, 476, 479, 481, 488, 492, 514, 549], "encapsul": [207, 417, 553], "enclos": [209, 393, 466, 472, 501, 506], "enclosur": [82, 160, 461, 472, 503], "encod": [16, 84, 87, 90, 91, 105, 126], "encompass": [195, 553, 555], "encount": [16, 84, 90, 105, 126, 170, 426, 427, 428, 429, 472, 477, 483, 492, 495, 517, 593, 605], "encourag": [392, 397, 419, 423, 453], "end": [52, 53, 86, 87, 91, 92, 94, 100, 103, 110, 125, 127, 136, 201, 244, 253, 397, 399, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 416, 422, 446, 456, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 523, 525, 526, 528, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 607], "end_po": [129, 351, 485], "endswith": 392, "energet": 483, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 77, 80, 82, 83, 88, 96, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 124, 125, 127, 128, 129, 132, 135, 136, 138, 140, 141, 142, 143, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 176, 178, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 288, 290, 387, 388, 392, 398, 401, 403, 404, 405, 406, 407, 408, 410, 411, 415, 417, 421, 426, 430, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 463, 465, 466, 467, 469, 470, 471, 473, 474, 476, 477, 479, 480, 481, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 498, 499, 500, 504, 505, 516, 517, 520, 525, 526, 528, 537, 538, 539, 542, 547, 549, 550, 551, 553, 554, 555, 563, 570, 576, 579, 581, 584, 589, 600, 603, 604, 606], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 103, 106, 110, 111, 112, 113, 114, 117, 125, 127, 153, 154, 155, 158, 166, 169, 176, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 417, 464, 466, 470, 472, 473, 474, 477, 481, 483, 484, 491, 492, 495, 499, 503, 504, 505, 508, 515, 516, 526, 546, 549, 551, 552, 554, 555], "energy_axis_new": 499, "energy_axis_tru": [103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 153, 154, 155, 156, 158, 164, 166, 176, 393, 439, 464, 466, 470, 472, 473, 474, 477, 481, 483, 484, 488, 491, 492, 493, 495, 499, 503, 504, 515, 516, 526, 546, 549, 551, 552], "energy_bin": 408, "energy_bin_per_decade_max": [113, 114], "energy_bound": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 406, 445, 465, 468, 470, 472, 479, 480, 493, 497, 498, 501, 508, 515, 526, 528, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 589], "energy_cent": 279, "energy_column": 417, "energy_depend": 482, "energy_dependent_estim": [463, 482, 487], "energy_edg": [16, 120, 122, 124, 128, 129, 132, 136, 144, 145, 149, 193, 201, 338, 417, 465, 470, 471, 474, 476, 477, 479, 480, 481, 482, 485, 490, 491, 492, 493, 500, 513, 516, 525, 526, 540], "energy_estim": 516, "energy_flux": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 508, 528], "energy_flux_errn": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "energy_flux_error": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "energy_flux_errp": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "energy_index": 163, "energy_integr": 51, "energy_logspac": 411, "energy_mask": [194, 195, 204, 207, 441, 472, 479, 493, 499, 501, 506, 511], "energy_max": [19, 20, 26, 83, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 153, 194, 195, 201, 204, 207, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 279, 282, 288, 406, 408, 479, 484, 493, 495, 497, 499, 504, 508, 528], "energy_min": [19, 20, 26, 52, 53, 83, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 153, 194, 195, 201, 204, 207, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 279, 282, 288, 406, 408, 479, 484, 493, 495, 497, 499, 504, 508, 528], "energy_nam": [166, 169], "energy_nod": [416, 508], "energy_pow": [19, 20, 26, 127, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 290, 470, 479, 493, 501, 528], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 103, 106, 110, 111, 445, 499, 506, 587, 588], "energy_range_fit": [103, 106, 110, 111, 499], "energy_range_saf": [103, 106, 110, 111, 499], "energy_range_tot": [103, 106, 110, 111, 506], "energy_reco": [392, 488], "energy_ref": [125, 127], "energy_resolut": 453, "energy_saf": 408, "energy_tru": [16, 96, 103, 106, 110, 111, 112, 117, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 176, 183, 186, 194, 195, 201, 204, 207, 316, 317, 392, 393, 405, 459, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 481, 483, 484, 488, 490, 491, 492, 493, 495, 499, 503, 504, 505, 506, 508, 510, 514, 515, 516, 525, 526, 546, 547, 549, 551, 552, 554, 555], "energy_true_axi": 153, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 437, "energydependentmorphologi": 482, "energydependentmorphologyestim": [460, 482], "energydependentmultigausspsf": [162, 433, 503, 514, 548], "energydependenttablepsf": [398, 414, 434, 445], "energydispers": [153, 154, 155, 158, 404, 440, 450, 453, 454], "energydispersion2d": [88, 153, 155, 162, 168, 186, 187, 393, 398, 445, 447, 452, 503, 514, 546], "energydispersion3d": 503, "energyoffsetarrai": 450, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 395, 420], "engin": [87, 91], "english": 542, "enhanc": [397, 401, 430], "enlarg": 552, "enough": [405, 407, 408, 422, 470, 473, 477, 488, 490, 506, 549], "enrico": 408, "enrico_config": 408, "enrico_xml": 408, "enriqu": [400, 408, 412, 413, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 453, 454, 455], "ensembl": [93, 422, 509], "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 182, 202, 292, 392, 398, 403, 404, 416, 420, 427, 447, 461, 464, 470, 491, 500, 506, 549, 554, 564], "enter": [218, 220, 229, 253, 430], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 103, 105, 106, 110, 111, 126, 183, 422, 466, 479, 482, 496, 509], "entiti": 412, "entri": [43, 44, 87, 91, 94, 122, 125, 128, 129, 132, 133, 136, 138, 139, 146, 147, 214, 215, 229, 253, 292, 358, 392, 393, 404, 413, 417, 420, 423, 445, 456, 461, 466, 471, 498, 501, 505, 508, 510, 542, 543, 555], "entry_point": 446, "enum": [95, 159, 333, 334], "enumer": [422, 470, 483, 498, 501, 507, 509, 511], "env": [395, 409, 423, 425, 426, 428, 429, 454, 605], "envelop": [405, 501, 526], "environ": [11, 82, 356, 391, 392, 395, 399, 400, 404, 409, 412, 413, 423, 424, 426, 427, 428, 429, 430, 434, 435, 437, 453, 454, 461, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 605], "envis": 401, "envvar": 11, "eosc": 419, "episod": 140, "epjc": [311, 313], "epoch": 374, "epsilon": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "epsilon_": [103, 110, 538], "epsilon_k": [103, 110, 538], "epsmch": 501, "eq": [102, 274], "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 416, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 120, 124, 128, 132, 136, 153, 201, 311, 313, 392, 402, 405, 455, 470, 490, 491, 506, 511, 538, 554, 608], "equat": [27, 274, 275, 303, 393, 565, 566, 571, 574, 575, 577, 578, 582, 583, 585, 586, 587, 588, 607, 608], "equatori": [95, 159, 195, 196, 197, 199, 202, 204, 207, 208, 209, 503], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 248, 385, 393, 404, 405, 406, 416, 417, 459, 460, 470, 498, 504, 505, 506, 508, 514, 525, 538, 540, 542, 553, 554, 555, 605, 606, 607], "er": [26, 497], "era": 231, "ereco": [153, 503], "erf": [240, 560], "erg": [52, 53, 67, 464, 470, 498, 528, 535, 542], "erlangen": 411, "erod": 209, "eros": [207, 209], "err": 501, "errat": 392, "errlo": [422, 509], "errn": [124, 128, 132, 133, 136, 214, 456, 607], "errn_2sigma": 607, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 102, 103, 105, 106, 110, 111, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 146, 172, 176, 189, 198, 201, 206, 217, 219, 223, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 294, 295, 296, 298, 302, 303, 304, 306, 312, 369, 392, 393, 406, 407, 408, 410, 416, 417, 420, 421, 422, 435, 439, 441, 443, 445, 446, 448, 452, 453, 456, 458, 459, 460, 461, 465, 466, 468, 470, 471, 473, 474, 476, 479, 480, 481, 482, 484, 488, 490, 492, 493, 495, 496, 498, 500, 508, 509, 510, 511, 514, 525, 526, 528, 530, 538, 540, 542, 561, 580, 589, 602, 605], "error_callback": 172, "errorbar": [83, 102, 103, 106, 110, 111, 201, 205, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 464, 495, 511], "errp": [124, 128, 132, 133, 136, 214, 456, 607], "errp_2sigma": 607, "errup": [422, 509], "escap": [392, 419, 422, 509], "especi": [87, 91, 140, 395, 399, 402, 406, 413, 414, 424, 445, 451, 466, 481, 491, 498, 505, 511, 514, 515], "ess": [422, 509], "essenti": [402, 404, 407, 439, 440, 441, 485, 505], "establish": [392, 405, 412], "estim": [6, 19, 20, 26, 50, 72, 102, 106, 111, 113, 114, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 171, 177, 178, 179, 185, 194, 195, 204, 207, 209, 214, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 292, 295, 301, 304, 309, 338, 385, 396, 398, 401, 405, 406, 407, 408, 411, 415, 421, 426, 435, 436, 439, 440, 441, 442, 445, 446, 447, 451, 452, 453, 454, 456, 459, 460, 461, 463, 464, 465, 470, 472, 477, 479, 480, 481, 484, 486, 487, 489, 491, 492, 493, 494, 499, 501, 502, 506, 509, 511, 512, 516, 520, 525, 526, 538, 542, 547, 552, 602, 603, 604, 606, 608], "estimate_best_fit": [128, 129, 132, 133], "estimate_count": [128, 129, 132, 133], "estimate_energy_depend": 122, "estimate_errn_errp": [128, 129, 132, 133], "estimate_excess_map": 124, "estimate_exposure_reco_energi": 124, "estimate_fit_input_map": 136, "estimate_flux_default": 136, "estimate_flux_map": 136, "estimate_flux_point": [128, 129, 132], "estimate_kernel": [124, 136], "estimate_map": 120, "estimate_mask_default": [124, 136], "estimate_min_e2dnd": 135, "estimate_min_excess": 135, "estimate_npr": [128, 129, 132, 133], "estimate_npred_excess": [128, 129, 132], "estimate_pad_width": 136, "estimate_scan": [128, 129, 132, 133], "estimate_sensit": [128, 129, 132, 133], "estimate_t": [128, 129, 132, 133], "estimate_time_bin_flux": 132, "estimate_ul": [128, 129, 132, 133], "estimator_result": [138, 146, 147, 493], "et": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 35, 39, 40, 57, 59, 63, 102, 120, 134, 139, 140, 156, 231, 303, 304, 306, 311, 312, 313, 393, 402, 422, 461, 474, 482, 496, 509, 530, 604], "eta": [242, 243, 266, 562, 566, 595], "eta_": 50, "eta_b": 50, "eta_rang": [562, 566], "etc": [106, 111, 125, 392, 397, 398, 402, 403, 404, 407, 408, 412, 413, 414, 417, 419, 420, 422, 442, 471, 473, 479, 488, 490, 492, 493, 495, 499, 505, 508, 509, 511, 515, 525, 538, 551, 604], "etru": 503, "eu": 413, "euclidean": 316, "europ": 419, "european": [311, 313], "ev": [500, 503, 542, 580], "ev2": 503, "eval": 509, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 103, 106, 109, 110, 111, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 183, 189, 193, 204, 215, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 331, 392, 397, 401, 407, 410, 411, 415, 416, 417, 421, 434, 435, 436, 438, 441, 445, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 483, 484, 493, 503, 508, 509, 511, 514, 515, 538, 561, 562, 570, 604, 607], "evaluate_contain": [157, 165, 167, 447], "evaluate_direct": [157, 165, 167], "evaluate_energy_flux": [259, 260], "evaluate_error": [19, 20, 26, 127, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 410], "evaluate_geom": [225, 226, 230, 237, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281, 460, 508, 562], "evaluate_integr": [258, 259, 260], "evaluate_paramet": [157, 165, 167], "evaluation_bin_size_min": [225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281], "evaluation_radiu": [225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 279, 281, 403, 404, 416, 508], "evaluation_region": [225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 137, 146, 207, 218, 220, 392, 395, 397, 399, 400, 406, 409, 410, 419, 420, 422, 437, 490, 493, 500, 501, 504, 505, 506, 507, 508, 525, 538, 540, 565, 566, 605], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 104, 105, 109, 115, 124, 135, 155, 166, 169, 170, 177, 185, 196, 197, 199, 205, 208, 209, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 348, 392, 393, 396, 398, 402, 404, 406, 407, 408, 420, 426, 430, 437, 438, 439, 441, 445, 446, 447, 452, 453, 454, 455, 456, 459, 460, 461, 463, 466, 470, 471, 472, 477, 479, 480, 486, 487, 492, 504, 513, 516, 517, 518, 520, 523, 525, 526, 527, 542, 550, 551, 552, 603, 604, 607, 610], "event_3fhl": 528, "event_class": [84, 515, 528], "event_det_coord": [104, 109], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [405, 514, 515, 528, 539], "event_list": [83, 392, 393, 405], "event_list_id": 83, "event_list_meta": [104, 109, 440], "event_list_zd": 83, "event_sampl": [463, 483, 487], "event_sampling_nrg_depend_model": [463, 484, 487], "event_typ": [105, 515, 528], "eventlist": [84, 88, 104, 109, 185, 196, 197, 199, 205, 208, 209, 392, 393, 398, 405, 406, 407, 420, 430, 435, 442, 447, 449, 450, 451, 453, 454, 483, 484, 493, 505, 514, 515, 528, 539, 542, 551, 610], "eventlistbas": 89, "eventlistdataset": 454, "eventlistmetadata": [83, 420], "events2": 83, "events_": 483, "events_0001": 483, "events_1": 539, "events_2": 539, "events_3fhl": 528, "events_bkg": 405, "events_gc_3fhl": 528, "events_list": 405, "events_path": [82, 483], "events_src": 405, "events_tot": 405, "events_vela": 493, "eventu": [392, 397, 408, 411, 413, 430, 508], "ever": [422, 509, 608], "everi": [195, 197, 209, 281, 392, 395, 400, 401, 402, 404, 408, 418, 420, 424, 466, 470, 505, 526, 605], "everyon": 397, "everyth": [392, 410, 411, 542], "everywher": [392, 406, 411, 413, 434], "evid": [140, 498, 509], "evolut": [30, 31, 32, 50, 52, 53, 231, 398, 413, 463, 486, 487, 520, 535, 536, 556], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 231, 409, 413, 420, 422, 484, 503, 509], "evt_sampl": 483, "ex": [11, 505, 507, 508], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 221, 410, 491, 505, 515], "exactli": [120, 124, 128, 132, 136, 201, 387, 422, 470, 472, 491, 493, 506, 511, 515, 538, 555], "exagger": 383, "examin": [419, 546], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 102, 103, 106, 110, 111, 112, 116, 117, 119, 120, 122, 124, 125, 127, 129, 131, 132, 133, 135, 136, 140, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 160, 164, 166, 169, 176, 179, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 219, 220, 221, 229, 238, 244, 248, 251, 253, 262, 282, 284, 286, 292, 297, 316, 317, 338, 342, 348, 358, 370, 371, 376, 380, 382, 383, 385, 387, 389, 392, 393, 395, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 419, 420, 421, 422, 426, 427, 428, 430, 434, 436, 439, 442, 445, 446, 447, 450, 452, 453, 454, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 532, 533, 539, 542, 544, 545, 546, 548, 553, 555, 556, 557, 568, 590, 599, 600, 601, 602, 605, 607, 609, 610], "example_cub": 505, "example_cube_fgst": 505, "exce": [113, 114], "except": [67, 69, 80, 87, 91, 103, 106, 110, 111, 172, 196, 197, 199, 205, 208, 209, 318, 389, 392, 403, 407, 411, 503, 507, 555], "excerpt": 517, "excess": [15, 67, 72, 103, 106, 110, 111, 121, 124, 125, 127, 128, 129, 132, 135, 136, 138, 141, 142, 146, 147, 176, 229, 253, 294, 298, 303, 304, 390, 404, 407, 441, 442, 448, 453, 460, 461, 464, 465, 470, 471, 473, 474, 476, 479, 481, 485, 488, 492, 493, 498, 499, 500, 504, 506, 507, 513, 516, 525, 526, 540, 542], "excess_estim": 516, "excess_estimator_integr": 516, "excess_integr": 516, "excess_map": [16, 471, 476, 477, 479, 525], "excess_map_estim": 493, "excess_matching_signific": [444, 454], "excess_min": 149, "excess_r": 499, "excessestim": 417, "excessmapconfig": 16, "excessmapestim": [121, 144, 145, 146, 147, 417, 441, 442, 443, 445, 448, 458, 460, 461, 477, 479, 493, 500, 506, 516, 540], "excesspointsestim": 417, "excessprofileestim": [417, 442], "exchang": 406, "exclud": [16, 84, 90, 102, 103, 105, 106, 110, 111, 126, 131, 177, 179, 218, 220, 229, 253, 398, 457, 479, 504, 506, 551, 552], "exclude_default": [16, 84, 90, 105, 126], "exclude_non": [16, 84, 90, 105, 126], "exclude_unset": [16, 84, 90, 105, 126], "exclus": [16, 83, 171, 173, 178, 179, 180, 181, 184, 195, 207, 378, 398, 406, 408, 441, 443, 461, 466, 476, 479, 504, 549, 551], "exclusion_mask": [171, 173, 178, 179, 180, 181, 184, 470, 477, 481, 504, 506, 526, 549, 551, 552], "exclusion_mask_2d": 504, "exclusion_mask_crab": [471, 525], "exclusion_radiu": 506, "exclusion_region": 470, "exclusionmask": 451, "execut": [11, 124, 128, 132, 133, 136, 392, 393, 395, 397, 399, 400, 401, 407, 408, 412, 413, 424, 425, 426, 427, 428, 429, 430, 439, 447, 453, 463, 469, 478, 487, 494, 504, 505, 512, 515, 519, 520, 522, 524, 528, 529, 557, 568, 590, 601, 603], "exercis": [395, 408, 413, 419], "exhibit": 482, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 88, 91, 99, 100, 102, 103, 106, 108, 110, 111, 125, 127, 154, 155, 161, 166, 169, 181, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 215, 229, 244, 253, 262, 277, 278, 279, 281, 360, 375, 392, 395, 397, 400, 401, 403, 404, 405, 406, 408, 409, 411, 413, 414, 416, 417, 419, 420, 422, 426, 427, 430, 431, 434, 438, 439, 453, 454, 456, 459, 474, 477, 499, 505, 506, 508, 509, 510, 515, 539, 554, 555, 606], "exist_ok": [470, 471, 479, 480, 483, 525, 526], "exit": [11, 15, 87, 91, 218, 220, 229, 253, 435, 567, 605], "exot": 409, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 156, 236, 240, 247, 259, 260, 273, 393, 416, 492, 508, 509, 561, 562, 570, 574, 575, 576, 577, 586, 587, 588, 593, 594, 595, 608], "expand": [132, 356, 402, 445], "expand_map": 132, "expans": [50, 52, 53], "expcutoffpowerlaw": 576, "expcutoffpowerlaw3fglspectralmodel": [264, 416, 468, 508, 575], "expcutoffpowerlawnormspectralmodel": [235, 264, 460, 508, 576], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 223, 224, 227, 231, 233, 234, 240, 246, 247, 250, 254, 256, 258, 259, 260, 264, 265, 270, 272, 273, 274, 275, 278, 282, 416, 468, 470, 479, 508, 574, 580], "expdecai": [236, 463, 556, 591, 601], "expdecay_model": [483, 593], "expdecaytemporalmodel": [276, 416, 441, 445, 483, 492, 508, 593], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 109, 111, 125, 181, 186, 187, 192, 207, 294, 297, 298, 299, 301, 305, 315, 348, 392, 397, 405, 407, 408, 409, 412, 413, 418, 420, 464, 466, 472, 473, 474, 477, 483, 484, 490, 496, 497, 501, 505, 506, 509, 511, 515, 517, 538, 540, 606, 607, 608], "expected_ts_0": 610, "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 470, 484], "experi": [392, 395, 397, 401, 403, 407, 421, 422, 424, 453, 530, 604, 609], "experienc": [401, 429], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 408, 605], "expert": [413, 520], "expertis": 409, "expfactor": [274, 275, 587, 588], "expir": 405, "explain": [87, 91, 392, 395, 397, 406, 409, 411, 413, 419, 424, 426, 428, 439, 445, 464, 470, 472, 497, 501, 506, 508, 513, 514, 542, 603, 605], "explan": [120, 124, 128, 132, 136, 393, 397, 431, 496, 609], "explicit": [87, 91, 195, 197, 392, 393, 408, 410, 417, 554, 609], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 318, 402, 415, 425, 435, 484, 507, 540, 554, 609], "explor": [196, 197, 199, 205, 208, 209, 400, 408, 412, 422, 430, 463, 470, 476, 479, 482, 485, 486, 487, 490, 491, 495, 496, 498, 499, 507, 509, 516, 517, 525, 528, 542, 551], "explos": 52, "expomap": 405, "expon": [416, 508], "exponenti": [28, 30, 36, 39, 40, 77, 233, 234, 235, 236, 273, 274, 275, 393, 403, 439, 463, 479, 483, 492, 556, 569, 590], "exponentialcutoffpowerlaw": 580, "export": [84, 87, 90, 91, 103, 105, 106, 125, 126, 127, 395, 417, 420, 426, 428, 439, 449, 456, 457, 460, 471, 508, 516, 517, 525], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 401, 406, 407, 408, 411, 412, 413, 458, 460, 461, 502, 505, 520, 540, 541, 603], "exposur": [16, 83, 88, 101, 103, 106, 107, 109, 110, 111, 124, 136, 143, 154, 155, 161, 164, 166, 169, 171, 176, 183, 186, 187, 188, 190, 191, 192, 269, 307, 310, 315, 398, 401, 402, 403, 404, 405, 417, 437, 442, 450, 452, 453, 454, 456, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 481, 483, 484, 488, 491, 492, 495, 499, 504, 505, 506, 516, 525, 526, 538, 550, 555, 607], "exposure_fil": 101, "exposure_geom": 155, "exposure_hdu": [154, 155, 161, 166, 169], "exposure_hdu_band": [154, 155, 161, 166, 169], "exposure_hpx": 515, "exposure_map": [154, 155, 161, 166, 169, 186, 187, 192, 503], "exposure_max": 499, "exposure_min": 499, "exposure_tim": 405, "express": [124, 140, 294, 298, 403, 416, 417, 460, 477, 501, 503, 508, 511, 538, 547, 554, 562, 606, 607, 608], "expressli": 412, "exptest": 451, "extend": [15, 19, 20, 22, 26, 69, 72, 87, 91, 92, 100, 171, 198, 201, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 297, 399, 403, 404, 405, 406, 412, 413, 415, 416, 417, 420, 426, 438, 440, 445, 463, 467, 469, 470, 474, 484, 490, 498, 505, 506, 507, 508, 513, 515, 520, 550, 551], "extended_archive_v18": 567, "extended_source_spectral_analysi": [463, 466, 469], "extens": [41, 153, 196, 197, 199, 201, 208, 209, 225, 226, 229, 230, 239, 242, 253, 255, 257, 266, 267, 271, 277, 281, 394, 397, 398, 399, 400, 401, 403, 405, 407, 408, 409, 410, 411, 413, 423, 424, 448, 482, 483, 484, 508, 605], "extent": [207, 229, 253, 406, 474, 508], "extern": [115, 393, 412, 419, 446, 450, 451, 454, 514, 542], "extnam": 503, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 102, 105, 126, 194, 195, 200, 204, 205, 207, 213, 214, 216, 277, 278, 316, 391, 393, 399, 400, 406, 408, 409, 413, 419, 420, 450, 453, 454, 465, 505, 506, 520, 542, 555], "extra_term": 315, "extract": [16, 84, 90, 100, 103, 105, 106, 110, 111, 125, 126, 127, 132, 154, 155, 161, 166, 169, 172, 177, 178, 183, 185, 193, 196, 197, 198, 199, 201, 206, 207, 208, 209, 279, 392, 402, 407, 412, 417, 419, 420, 447, 448, 459, 460, 464, 466, 470, 471, 472, 473, 479, 480, 483, 484, 485, 488, 495, 499, 500, 505, 525, 538, 546, 551], "extragalact": [231, 465, 514], "extrapol": [102, 150, 151, 152, 176, 196, 197, 199, 205, 208, 209, 231, 282, 330, 331, 445, 450, 452, 453, 461, 503, 505, 514, 515, 554], "extras_requir": 409, "extrem": [392, 420, 505, 562], "ey": 422, "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 136, 149, 203, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 317, 318, 345, 392, 395, 409, 415, 416, 421, 425, 426, 428, 447, 456, 464, 466, 471, 473, 480, 481, 482, 483, 484, 491, 492, 493, 495, 497, 498, 501, 504, 506, 508, 509, 510, 511, 515, 516, 523, 525, 526, 528, 536, 551, 570, 580, 592, 593, 594, 595, 596, 597, 598, 605, 606, 607], "f0": [280, 599], "f06": 48, "f06b": [49, 532], "f06p": 49, "f1": [280, 599], "f2": [280, 599], "f4": [151, 156, 472, 499, 503, 505, 514, 515], "f8": [503, 515], "f_": [302, 304, 317, 538], "f_0": [258, 583], "f_dead": [83, 88], "f_i": 302, "f_max": 496, "f_max_err": 496, "f_mean": 496, "f_mean_err": 496, "f_min": 496, "f_min_err": 496, "f_pp": 303, "f_var": 303, "fabio": [405, 410, 422, 435, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 452, 454, 456, 458, 459, 460, 461], "face": [397, 400], "facecolor": [389, 465, 470, 472, 481, 482, 485, 493, 497, 560, 561, 562], "facil": 418, "fact": [19, 20, 97, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 412, 419, 466, 555], "facto": 419, "factor": [19, 20, 23, 103, 104, 106, 109, 110, 111, 120, 124, 125, 154, 155, 157, 161, 163, 164, 165, 166, 167, 169, 176, 183, 189, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 212, 217, 218, 219, 220, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 255, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 280, 281, 283, 297, 392, 405, 407, 422, 441, 461, 464, 473, 474, 476, 479, 481, 485, 488, 492, 499, 500, 504, 508, 514, 538, 555, 570], "factor1": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281], "factor_max": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281], "factor_min": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281], "factori": [196, 197, 208, 209, 406, 411, 416, 553, 555], "factoris": [269, 416, 508, 602], "fail": [16, 84, 90, 105, 126, 128, 214, 393, 395, 406, 422, 423, 424, 448, 461, 470, 480, 515], "failur": [456, 459], "faint": 606, "fair": [392, 419], "fair4r": [392, 419], "fake": [103, 106, 110, 111, 404, 405, 437, 472, 473, 488, 492, 511], "fall": [77, 140, 179, 206, 229, 253, 392, 399, 401, 402, 409, 422, 454, 455, 496, 509], "fallback": [16, 84, 90, 105, 126, 392], "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 119, 124, 125, 126, 127, 128, 129, 132, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 297, 318, 331, 348, 354, 357, 359, 360, 389, 392, 406, 408, 416, 421, 422, 453, 454, 460, 464, 465, 466, 470, 471, 472, 473, 476, 477, 479, 480, 481, 482, 483, 485, 488, 490, 491, 492, 495, 497, 498, 499, 501, 503, 504, 505, 506, 507, 508, 509, 511, 515, 525, 526, 528, 539, 542, 549, 551, 552, 567, 580, 589], "falsifi": 511, "famili": 419, "familiar": [409, 410, 505, 506, 528], "fanci": [392, 493], "far": [400, 405, 407, 409, 414, 417, 420, 422, 430, 445, 483, 509, 530], "fashion": [407, 413], "fast": [392, 406, 410, 501], "faster": [87, 91, 137, 146, 196, 197, 199, 205, 208, 209, 369, 460, 474, 509], "faucher": [30, 31, 32, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 532, "favour": [397, 405, 421, 511], "favourit": 481, "fbka_oau": 465, "fc": [508, 555], "fcluster": [316, 510], "fcluster_kwarg": [316, 510], "fcn": [422, 501], "fdx": 392, "fe": 285, "feasibl": [406, 411, 473, 488, 499], "featur": [6, 13, 87, 91, 96, 120, 144, 316, 317, 382, 383, 392, 395, 399, 401, 402, 403, 404, 406, 408, 409, 412, 415, 416, 417, 419, 420, 421, 427, 432, 435, 436, 437, 438, 439, 441, 442, 445, 449, 452, 453, 454, 455, 496, 505, 506, 508, 510, 540, 580], "feature_irf": 510, "features_irf": [96, 316, 317, 510], "feb": [398, 399, 409, 414, 430, 432], "februari": 432, "fed": 472, "feedback": [395, 397, 401, 406, 408, 409, 412, 413, 414, 416, 422, 423, 453, 503, 542], "feedstock": [423, 424], "feel": [402, 605], "feijen": [458, 459, 460, 461], "feldman": [436, 442, 450, 452, 604], "feldman1998": 604, "fellowship": 419, "felt": 392, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 101, 128, 129, 131, 136, 196, 197, 199, 205, 206, 208, 209, 229, 231, 253, 285, 287, 292, 399, 400, 401, 402, 404, 405, 408, 409, 413, 424, 426, 431, 433, 434, 437, 439, 442, 446, 449, 450, 451, 452, 453, 454, 461, 463, 465, 468, 474, 483, 485, 498, 505, 506, 507, 508, 518, 519, 520, 528, 530, 539, 542, 547, 567, 578, 583, 602, 609], "fermi_3fhl": [83, 196, 197, 199, 205, 208, 209, 507, 515, 528, 610], "fermi_3fhl_events_select": [83, 515, 610], "fermi_3fhl_exposure_cube_hpx": 515, "fermi_3fhl_psf_gc": 515, "fermi_bkg_model": 507, "fermi_ct": 131, "fermi_dataset": [229, 253, 292, 507, 515], "fermi_lat": [413, 454, 463, 515, 519], "fermi_model": 515, "fermi_prof": 129, "fermi_ts_imag": 393, "fermilat": 465, "fermipi": [101, 399, 401, 404, 408, 413, 417, 451, 453, 515, 530], "fermitool": 408, "fetch": [15, 392, 395, 400, 423, 433, 446, 525, 605], "few": [82, 83, 87, 88, 91, 391, 392, 393, 395, 397, 398, 399, 400, 402, 404, 406, 410, 412, 413, 418, 422, 423, 424, 430, 444, 455, 457, 460, 461, 466, 471, 477, 479, 481, 498, 500, 501, 505, 509, 514, 525, 526, 551, 555, 610], "fewer": [406, 413], "ff": 419, "fft": 209, "fftconvolv": 209, "fgl": [206, 506], "fgst": [195, 196, 197, 199, 200, 201, 207, 208, 209, 505], "fhit": 516, "fidalgo": [402, 407, 434, 454, 455], "fiduci": 505, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 105, 126, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 173, 237, 254, 320, 324, 379, 392, 406, 419, 420, 430, 435, 440, 447, 454, 470, 472, 477, 479, 481, 483, 503, 504, 506, 514, 515, 542, 544, 545, 546, 547, 548, 549, 551, 580, 604], "fieldinfo": [16, 84, 90, 105, 126], "fig": [209, 380, 464, 466, 470, 471, 472, 473, 474, 477, 479, 480, 481, 482, 485, 490, 492, 493, 497, 501, 506, 509, 511, 526, 551, 552, 562, 566, 570, 603, 610], "figsiz": [88, 103, 106, 110, 111, 130, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 196, 197, 199, 205, 208, 209, 212, 380, 466, 470, 473, 474, 477, 479, 480, 481, 482, 490, 491, 492, 493, 495, 496, 497, 498, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 526, 551, 562, 566, 570, 610], "figur": [88, 103, 106, 110, 111, 130, 150, 151, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 169, 196, 197, 199, 205, 208, 209, 212, 369, 379, 380, 386, 392, 393, 397, 413, 424, 465, 470, 474, 479, 481, 482, 483, 485, 490, 491, 496, 497, 498, 499, 501, 504, 505, 507, 508, 513, 514, 515, 516, 605, 610], "file": [11, 15, 16, 26, 65, 66, 67, 77, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 103, 106, 107, 108, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 177, 182, 196, 197, 199, 203, 205, 208, 209, 215, 221, 229, 231, 244, 253, 277, 278, 279, 280, 281, 282, 326, 354, 357, 360, 391, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 411, 412, 413, 414, 416, 417, 420, 421, 423, 424, 425, 426, 428, 430, 438, 439, 445, 447, 449, 451, 452, 453, 454, 456, 457, 459, 460, 461, 463, 464, 469, 472, 473, 478, 479, 481, 483, 484, 487, 488, 492, 494, 498, 499, 504, 505, 506, 507, 508, 509, 512, 516, 517, 518, 519, 520, 522, 524, 528, 529, 530, 541, 542, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 609], "file_dir": 326, "file_model": 483, "file_nam": 326, "filemod": [16, 471, 476, 477, 479, 525, 605], "filenam": [11, 16, 26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 103, 106, 107, 108, 110, 111, 125, 127, 129, 131, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 196, 197, 199, 203, 205, 208, 209, 229, 231, 244, 253, 277, 278, 279, 280, 281, 282, 287, 289, 291, 292, 326, 357, 360, 370, 392, 393, 397, 442, 461, 470, 471, 476, 477, 479, 480, 484, 485, 498, 499, 500, 505, 506, 507, 508, 514, 515, 525, 526, 528, 539, 542, 544, 545, 546, 548, 567, 570, 599, 600, 605, 610], "filename_1": 539, "filename_2": 539, "filename_arf": 108, "filename_bkg": 108, "filename_model": [100, 125, 292, 507, 515], "filename_rmf": 108, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 103, 105, 106, 109, 110, 111, 126, 153, 164, 195, 196, 197, 199, 205, 207, 208, 209, 282, 392, 400, 401, 405, 408, 413, 419, 423, 424, 439, 446, 453, 456, 466, 483, 484, 498, 503, 504, 506, 509, 515, 526, 554], "fill_between": [19, 20, 26, 130, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 493], "fill_by_coord": [164, 196, 197, 199, 205, 208, 209, 505, 515, 554], "fill_by_idx": [196, 197, 199, 205, 208, 209, 554], "fill_by_pix": [196, 197, 199, 205, 208, 209, 554], "fill_ev": [196, 197, 199, 205, 208, 209, 448, 459, 472, 505, 515, 523, 610], "fill_nan": 197, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 277, 278, 281, 392, 503, 505], "filled_t": [87, 91], "filter": [83, 88, 89, 398, 402, 404, 406, 407, 412, 454, 455, 458, 495, 506, 510, 518, 520, 526, 528], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [125, 127], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [492, 493], "final": [132, 297, 392, 393, 399, 400, 402, 405, 406, 408, 409, 411, 412, 414, 416, 418, 419, 424, 439, 440, 441, 464, 465, 466, 468, 470, 479, 481, 483, 484, 490, 491, 493, 497, 499, 501, 504, 506, 509, 510, 515, 516, 520, 525, 526, 527, 528, 538, 539, 540], "finalis": 396, "find": [19, 20, 26, 134, 136, 144, 145, 153, 179, 180, 184, 211, 222, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 307, 392, 397, 403, 405, 411, 412, 423, 424, 425, 445, 447, 453, 454, 459, 460, 468, 470, 474, 498, 499, 505, 508, 509, 514, 517, 528, 605, 607, 608], "find_peak": [145, 454, 474, 481], "find_peaks_in_flux_map": 474, "find_root": 445, "finder": [144, 179, 180, 445, 454, 474], "fine": [293, 331, 405, 412, 477, 499, 515, 555, 605], "finer": [483, 499, 555], "fingertip": 391, "finish": [395, 399, 401, 423, 451, 453], "finit": [100, 103, 106, 110, 111, 154, 155, 161, 166, 182, 197, 205, 209, 279, 410], "fink": [231, 232, 465, 570], "fir": 580, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 103, 106, 110, 111, 125, 127, 129, 137, 139, 144, 146, 153, 170, 179, 196, 197, 198, 201, 205, 206, 229, 253, 286, 306, 351, 381, 392, 393, 395, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 417, 418, 419, 422, 424, 425, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 452, 454, 455, 456, 457, 459, 461, 464, 466, 468, 470, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 504, 505, 506, 507, 508, 510, 511, 514, 515, 516, 520, 525, 526, 527, 528, 539, 551, 554, 605], "firstli": [393, 395, 482, 483, 500], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 107, 108, 110, 111, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 173, 176, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 219, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 279, 280, 281, 282, 284, 292, 293, 294, 295, 296, 298, 299, 300, 305, 308, 314, 315, 326, 327, 328, 373, 374, 377, 380, 385, 387, 391, 392, 393, 398, 402, 403, 404, 405, 408, 410, 411, 413, 414, 415, 416, 417, 420, 421, 426, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 450, 452, 453, 454, 455, 457, 459, 460, 461, 463, 464, 467, 469, 473, 474, 475, 477, 478, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 516, 517, 520, 523, 527, 528, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 560, 567, 570, 580, 599, 600, 603, 604, 609, 610], "fit2": 507, "fit_covari": [471, 525], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [466, 470, 479, 480], "fit_prior": 511, "fit_rang": [16, 471, 476, 477, 479, 525], "fit_result": [214, 292, 471, 495, 500, 525], "fit_results_nul": 292, "fit_scipi": 501, "fit_sherpa": 501, "fit_stat_scan": 407, "fit_statist": [392, 477], "fit_statistics_cython": 424, "fitconfig": 16, "fitmc": 410, "fitresult": [214, 447, 459, 461, 501, 526], "fitsfixedwarn": [474, 567], "fitsonli": 514, "fitspectrum": 449, "fitstatist": [295, 296], "fitstepresult": [213, 216], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 452, 453, 468], "five": 528, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 107, 108, 136, 148, 166, 168, 183, 214, 255, 256, 261, 281, 395, 397, 398, 399, 403, 404, 407, 409, 412, 415, 417, 418, 419, 423, 424, 426, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 464, 472, 473, 476, 477, 479, 480, 483, 488, 491, 492, 495, 501, 503, 504, 507, 508, 510, 513, 525, 552, 554, 563, 581], "fixed_altaz": 85, "fixed_bin": 148, "fixed_icr": [85, 166, 464, 473, 483, 484, 488, 492], "fixed_offset": [96, 182, 445], "fixed_r_in": 171, "fixed_width": 171, "fixedpointinginfo": [88, 166, 189, 459, 460, 464, 473, 483, 484, 488, 492], "fk5": [555, 567], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 104, 109, 125, 127, 128, 129, 132, 133, 194, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 209, 213, 214, 215, 216, 393, 466, 479, 483, 498, 508], "flake8": 395, "flare": [140, 302, 426, 439, 440, 463, 489, 490, 492, 494, 495, 496, 520, 540, 551], "flask": 453, "flat": [127, 140, 158, 168, 194, 195, 200, 202, 204, 207, 210, 211, 255, 403, 412, 417], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 195, 202, 204, 207, 496], "fledg": 421, "flexibl": [82, 342, 392, 397, 401, 402, 403, 406, 408, 412, 413, 414, 420, 505, 542, 602], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 103, 106, 110, 111, 115, 120, 124, 126, 127, 130, 133, 134, 135, 136, 144, 145, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 171, 173, 182, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 210, 211, 214, 216, 217, 219, 221, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 292, 293, 294, 297, 298, 301, 305, 307, 311, 313, 318, 329, 336, 345, 347, 378, 381, 382, 383, 504, 511, 514, 515, 605, 609], "float32": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 476, 481, 505], "float64": [87, 91, 112, 117, 153, 156, 392, 421, 430, 500, 503, 505, 540, 605], "float64float64float64": 481, "float64float64float64float64float64float64float64float32bool": 468, "float64float64float64float64float64float64float64float64": 481, "float_a": [87, 91], "flow": [420, 603, 604], "fluctuat": [294, 298, 417, 473, 488, 511, 607], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 102, 103, 106, 110, 111, 120, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 223, 224, 225, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 265, 268, 269, 270, 272, 273, 274, 275, 278, 280, 282, 283, 285, 286, 290, 295, 301, 302, 303, 304, 306, 312, 396, 404, 405, 407, 408, 410, 413, 414, 416, 426, 433, 436, 438, 439, 441, 445, 447, 451, 452, 453, 455, 460, 461, 463, 467, 469, 472, 474, 479, 481, 483, 484, 486, 487, 490, 491, 492, 493, 495, 496, 499, 505, 508, 515, 520, 527, 536, 538, 542, 547, 556, 564, 580, 602, 603, 604, 607], "flux1": 306, "flux2": 306, "flux_err": [124, 125, 127, 136, 302, 303, 304, 312, 474, 490, 496], "flux_err1": 306, "flux_err2": 306, "flux_errn": [19, 20, 26, 125, 127, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 498], "flux_errp": [19, 20, 26, 125, 127, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 498], "flux_int_cu": 286, "flux_map": [125, 127, 137, 146, 417, 497], "flux_metadata_fits_kei": 126, "flux_per_omega": 508, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 102, 125, 127, 128, 404, 464, 468, 470, 471, 476, 477, 479, 481, 493, 498, 499, 525, 526, 528], "flux_point_dataset": 404, "flux_points_at_tim": 417, "flux_points_ctb_37b": 127, "flux_points_dataset": [470, 481, 493], "flux_points_dataset_no_ul": 470, "flux_points_fermi": 480, "flux_points_hawc": 480, "flux_points_hess": 480, "flux_points_intrins": 465, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 470, "flux_points_ob": 465, "flux_points_recomput": 127, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 102, "flux_profil": [463, 485, 487], "flux_profile_estim": 485, "flux_profile_fermi": 485, "flux_quant": [139, 140, 141, 142, 496], "flux_ref": [125, 127, 417], "flux_sensit": [124, 125, 127, 136], "flux_ul": [124, 125, 127, 136, 498], "fluxestim": [125, 127, 128, 414, 441, 443, 444, 445, 447, 460], "fluxmap": [124, 126, 127, 136, 137, 138, 145, 146, 445, 460, 461, 474, 540], "fluxmapestim": 417, "fluxmapsmetadata": 420, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 102, 125, 126, 128, 129, 132, 139, 140, 141, 142, 148, 404, 407, 417, 420, 445, 452, 453, 459, 460, 461, 464, 468, 480, 485, 490, 491, 496, 498, 499, 528, 537, 538, 540, 542], "fluxpointdataset": 439, "fluxpointestim": [407, 436, 442, 455], "fluxpointfit": 404, "fluxpointfitt": 454, "fluxpointprofil": 455, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 103, 106, 414, 417, 420, 435, 439, 460, 461, 468, 470, 480, 481, 492, 493, 538], "fluxpointsdatasetmetadata": 420, "fluxpointsestim": [121, 129, 132, 338, 414, 415, 417, 426, 436, 441, 442, 445, 459, 460, 465, 470, 480, 481, 493, 500, 525, 526, 542], "fluxpointsetim": 417, "fluxpointsmetadata": 420, "fluxprofileestim": [121, 445, 458, 460, 485], "fly": 402, "fmt": [495, 501, 511], "focu": [402, 413, 439, 452, 472, 605], "focus": [402, 412, 419, 422], "fold": [109, 129, 417, 468, 480, 491, 500, 538, 540], "folder": [11, 82, 94, 102, 107, 111, 127, 355, 392, 393, 397, 400, 412, 423, 425, 430, 435, 445, 448, 471, 479, 483, 514, 525, 526, 603, 605], "follow": [15, 19, 20, 43, 44, 77, 80, 82, 83, 84, 90, 91, 103, 105, 107, 108, 110, 111, 124, 125, 126, 127, 130, 136, 138, 144, 147, 195, 196, 197, 199, 203, 208, 209, 214, 221, 269, 286, 292, 295, 311, 313, 382, 383, 385, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 437, 438, 439, 441, 442, 445, 447, 448, 454, 455, 459, 460, 461, 464, 465, 466, 467, 468, 470, 471, 473, 474, 476, 479, 480, 483, 484, 490, 491, 492, 493, 495, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 509, 513, 514, 520, 521, 525, 527, 528, 530, 532, 533, 538, 540, 542, 544, 546, 547, 551, 553, 554, 555, 556, 565, 566, 571, 574, 575, 577, 578, 582, 583, 585, 586, 587, 588, 589, 603, 604, 606, 607, 608, 610], "font": [196, 197, 199, 205, 208, 209, 393, 505], "fontsiz": [389, 493, 501], "foo": [87, 91], "footprint": [196, 197, 199, 205, 207, 208, 209, 563], "footprint_rectangle_sky_region": 207, "forbid": [16, 84, 90, 105, 126], "forbidden": 507, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 154, 155, 161, 164, 166, 169, 207, 209, 318, 397, 407, 435], "forecom": [392, 418], "foremost": 605, "forens": [408, 412], "foreseen": [402, 412, 418], "forev": 435, "forg": [391, 409, 423, 424, 426, 427, 430, 453], "forget": [471, 482, 525], "forgot": 392, "forgotten": 392, "fork": [395, 423], "form": [16, 84, 87, 90, 91, 103, 105, 126, 166, 169, 204, 219, 238, 248, 284, 330, 392, 398, 402, 407, 412, 416, 418, 420, 422, 431, 453, 461, 506, 509, 511, 539, 547, 561, 572, 603], "formal": [397, 421, 474], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 103, 105, 106, 108, 110, 111, 125, 126, 127, 128, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 229, 237, 244, 253, 269, 279, 282, 326, 348, 372, 373, 381, 391, 400, 401, 402, 403, 404, 406, 408, 412, 417, 419, 420, 424, 433, 445, 447, 450, 454, 456, 457, 459, 460, 461, 465, 468, 470, 471, 472, 474, 476, 477, 479, 481, 483, 484, 485, 490, 492, 496, 498, 500, 503, 505, 506, 508, 514, 515, 516, 517, 525, 528, 530, 536, 538, 539, 540, 541, 544, 545, 546, 547, 548, 555, 599, 600, 603, 604, 605, 606], "format_plot_xaxi": [198, 201, 206, 503], "format_plot_yaxi": [201, 503], "formatt": [381, 412, 505], "formatwarn": 392, "former": [419, 436, 441, 466, 507, 603, 606], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 134, 165, 259, 260, 315, 464, 606], "forthcom": 500, "forum": 423, "forward": [19, 20, 26, 83, 87, 91, 103, 106, 110, 111, 129, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 178, 200, 204, 205, 206, 214, 223, 224, 227, 228, 231, 233, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 287, 316, 381, 386, 393, 399, 402, 412, 417, 468, 480, 491, 500, 538, 540, 555], "forwardref": [16, 84, 90, 105, 126], "foug3ngh": 495, "found": [19, 20, 26, 82, 86, 87, 91, 140, 179, 184, 203, 221, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 302, 395, 396, 400, 407, 412, 418, 419, 439, 442, 443, 444, 448, 477, 483, 496, 503, 508, 509, 511, 517, 518, 520, 539, 540, 551, 552], "four": [395, 403, 417, 423, 490, 514, 515, 546, 548, 554, 604], "fov": [124, 150, 151, 173, 174, 188, 189, 191, 193, 237, 392, 398, 406, 450, 453, 454, 461, 476, 495, 503, 506, 507, 514, 526, 547, 550, 604], "fov_": 392, "fov_align": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 503], "fov_background": [476, 525], "fov_bkg_mak": [504, 549], "fov_lat": [151, 503, 514, 547], "fov_lat_axi": 503, "fov_lon": [151, 503, 514, 547], "fov_lon_axi": 503, "fov_rotation_step": [176, 189], "fov_theta": 392, "fovalign": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 503], "fovbackground": [421, 441], "fovbackgroundmak": [174, 440, 445, 504, 525, 526], "fovbackgroundmodel": [15, 103, 109, 110, 114, 173, 229, 249, 253, 421, 442, 459, 460, 461, 479, 480, 483, 484, 488, 499, 507, 525, 526, 547, 549, 563], "fp": [125, 127, 148, 417, 525, 540, 542], "fp_dataset": [470, 499], "fp_dnde": 417, "fp_energy_flux": 417, "fp_estim": 500, "fp_result": 500, "fpe": [338, 415, 417, 465, 470, 481, 493, 526], "fpe_no_ul": 470, "fpp": 303, "fpp_err": [303, 496], "fpp_tabl": 496, "fr": 419, "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 106, 111, 153, 156, 212, 235, 240, 258, 260, 273, 274, 302, 304, 317, 416, 538, 546, 547, 560, 561, 562, 565, 566, 571, 574, 575, 577, 578, 582, 583, 585, 586, 587, 588, 593, 594, 595, 597, 607, 608], "frac_remain": [221, 422, 509], "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 124, 135, 142, 157, 163, 165, 166, 167, 169, 204, 210, 211, 221, 223, 224, 227, 230, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 303, 304, 402, 407, 422, 452, 460, 464, 473, 483, 488, 499, 503, 506, 509, 514, 515, 516], "frame": [16, 83, 85, 91, 94, 95, 96, 103, 106, 110, 111, 112, 113, 114, 117, 129, 144, 166, 176, 179, 189, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281, 316, 317, 352, 367, 392, 393, 401, 403, 406, 417, 435, 436, 438, 439, 440, 466, 470, 471, 472, 473, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 499, 503, 504, 505, 506, 507, 508, 510, 515, 516, 525, 526, 528, 546, 551, 553, 554, 555, 560, 561, 562, 563, 564, 565, 566, 567, 610], "framework": [403, 405, 406, 408, 410, 411, 412, 416, 422, 435, 436, 442, 454, 493, 508, 509, 532, 542], "franceschini": [231, 232, 282, 459, 465, 570], "franceschini17": [232, 465, 570], "franceschni": 570, "frd_ab": 232, "free": [50, 52, 53, 77, 103, 106, 110, 111, 128, 132, 133, 176, 214, 218, 220, 255, 256, 292, 397, 407, 412, 435, 461, 465, 471, 473, 476, 477, 479, 481, 482, 488, 490, 492, 495, 499, 501, 504, 507, 508, 511, 515, 520, 525, 526, 530, 540, 549, 563, 580, 581, 605, 607, 608], "free_paramet": [218, 220, 292, 422, 495, 501, 507, 509], "freedom": [122, 125, 127, 138, 147, 311, 313, 419, 460, 482, 540, 607, 608], "freez": [19, 20, 26, 87, 91, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 407, 419, 435, 445, 460, 476, 488, 495, 501, 508, 580], "freeze_al": [218, 220], "frenk": 530, "frequenc": [280, 297, 534], "frequent": [201, 392, 401, 410, 419, 422, 491, 492, 496, 506, 520, 542, 543, 605], "frequentist": [410, 501], "fresh": 221, "fridai": 401, "friendli": [392, 397, 420, 456, 471, 525, 542, 610], "from": [13, 15, 16, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 182, 183, 185, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 286, 292, 293, 294, 295, 297, 298, 301, 304, 316, 317, 318, 328, 336, 338, 340, 341, 345, 348, 349, 353, 358, 370, 371, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 428, 430, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610], "from_align": [207, 445], "from_attribut": [16, 84, 90, 105, 126], "from_bound": [156, 158, 166, 195, 201, 207, 417, 480, 483, 484, 499, 503, 504, 505, 513, 554, 555], "from_covariance_matrix": 421, "from_default": 200, "from_diagonal_respons": [112, 117, 153, 154, 155, 474, 515], "from_dict": [19, 20, 26, 102, 103, 106, 110, 111, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 438, 445, 511], "from_dir": [82, 89, 96, 176, 316, 317, 430, 466, 470, 472, 481, 491, 493, 495, 504, 510, 513, 514, 517, 523, 526, 539, 542, 549, 551, 552], "from_edg": [155, 196, 197, 199, 201, 205, 208, 209, 473, 488, 492, 503, 515, 516], "from_edisp_kernel": 154, "from_energy_bound": [103, 106, 110, 111, 112, 117, 153, 155, 156, 158, 164, 166, 176, 194, 195, 200, 201, 204, 207, 209, 393, 464, 466, 470, 472, 480, 481, 483, 484, 491, 493, 495, 499, 503, 504, 508, 515, 516, 526, 546, 549, 551, 552, 555], "from_energy_edg": [153, 201, 387, 499, 503], "from_events_fil": [82, 483, 514], "from_factor_matrix": 212, "from_fil": [82, 539], "from_fits_head": 85, "from_gauss": [153, 154, 158, 164, 166, 169, 546], "from_gaussian": 442, "from_geom": [103, 106, 110, 111, 154, 155, 164, 166, 169, 196, 197, 199, 203, 205, 208, 209, 439, 458, 499, 505, 506, 555, 562], "from_gti": 206, "from_gti_bound": 206, "from_hdu": [195, 197, 209], "from_hdulist": [103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 505], "from_head": [84, 90, 105, 126, 195, 207, 420], "from_irf": 168, "from_log10": [246, 247, 578], "from_map": [125, 127], "from_map_dataset": [106, 111], "from_nam": [477, 481, 513], "from_nod": 201, "from_orm": [16, 84, 90, 105, 126], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284], "from_parametr": [156, 544], "from_posit": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 484], "from_refer": 416, "from_region": [204, 230, 459, 551], "from_region_map": 282, "from_spatial_model": 164, "from_spectrum_dataset": [111, 464, 473], "from_stack": [83, 86, 92, 125, 127, 196, 197, 198, 199, 201, 205, 208, 209, 212, 218, 220, 459, 460, 539], "from_tabl": [127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 198, 200, 201, 205, 206, 244, 456, 464], "from_table_hdu": [86, 200, 201], "from_time_bound": 206, "from_time_edg": [206, 495, 496], "from_time_interv": 86, "from_ultranest": 222, "from_wcs_til": 197, "from_yaml": [16, 229, 253, 403, 471], "fromnumer": [472, 495], "front": [401, 422, 423, 452], "frozen": [19, 20, 26, 102, 128, 132, 173, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 407, 416, 421, 437, 460, 465, 466, 468, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 485, 488, 491, 492, 495, 498, 499, 500, 501, 506, 507, 508, 509, 511, 515, 525, 526, 528, 540, 549, 580, 589], "fr\u00f6se": [460, 461], "ftol": 501, "ftool": 407, "fulfil": [420, 505], "full": [82, 128, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 197, 215, 221, 229, 253, 326, 388, 391, 392, 397, 401, 402, 405, 407, 408, 413, 419, 421, 422, 425, 432, 435, 445, 447, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 523, 525, 526, 528, 542, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604], "full_enclosur": [189, 503], "full_output": [19, 20, 26, 215, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284], "fulli": [132, 194, 195, 204, 207, 280, 401, 402, 409, 414, 419, 424, 427, 437, 439, 447, 466, 496, 508, 514, 516, 517], "fun": [392, 395], "func": [17, 18, 21, 22, 24, 25, 27, 90, 196, 197, 199, 205, 208, 209, 288, 339, 343, 344, 385, 477, 479], "function": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 84, 85, 87, 88, 90, 91, 100, 101, 102, 103, 104, 105, 109, 110, 120, 124, 125, 126, 132, 136, 137, 139, 140, 141, 142, 145, 146, 147, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 169, 196, 197, 199, 201, 205, 208, 209, 214, 215, 216, 219, 221, 223, 224, 227, 231, 233, 234, 235, 238, 240, 246, 247, 248, 250, 254, 256, 258, 259, 260, 265, 268, 269, 270, 272, 273, 274, 275, 278, 282, 284, 288, 294, 295, 296, 297, 298, 306, 307, 311, 312, 313, 331, 339, 340, 342, 343, 347, 348, 358, 376, 380, 381, 385, 387, 389, 391, 395, 398, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 426, 428, 430, 431, 433, 435, 436, 437, 438, 439, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 464, 465, 470, 471, 472, 473, 474, 479, 481, 482, 483, 484, 485, 495, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 516, 517, 518, 520, 525, 526, 528, 530, 531, 532, 537, 538, 539, 541, 542, 551, 553, 555, 561, 562, 564, 593, 602, 603, 604, 605, 606, 608, 610], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "functool": [16, 84, 90, 105, 126], "fundament": [405, 415, 420, 422, 426, 428, 509, 520, 543], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 120, 124, 128, 129, 132, 136, 202, 342, 395, 396, 398, 401, 402, 405, 406, 409, 411, 413, 414, 415, 416, 440, 441, 442, 445, 447, 477, 483, 497, 498, 499, 500, 505, 526, 528, 531, 532, 547, 605], "furthermor": 514, "futur": [104, 109, 392, 397, 402, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 453, 479, 505, 515, 531, 540, 602], "fvar": [142, 304, 407, 452], "fvar_err": [304, 496], "fvar_tabl": 496, "g": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 84, 85, 86, 87, 90, 91, 95, 105, 115, 126, 144, 195, 196, 197, 199, 201, 205, 207, 208, 209, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 302, 318, 358, 381, 387, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 416, 417, 419, 420, 422, 423, 424, 426, 427, 428, 445, 447, 451, 453, 454, 455, 456, 459, 466, 468, 470, 471, 473, 481, 483, 485, 497, 498, 499, 501, 505, 506, 507, 508, 509, 514, 515, 520, 528, 530, 534, 537, 538, 539, 540, 542, 547, 552, 553, 554, 562, 602, 604, 605, 607, 609, 610], "g0": [479, 515], "g28": 67, "g320": 498, "g5f0ae82af": [105, 126, 431, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "g_1": 156, "g_2": 156, "g_3": 156, "ga": 485, "gabriel": 454, "gadf": [83, 84, 85, 86, 88, 90, 95, 103, 105, 106, 110, 111, 126, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 402, 405, 417, 420, 445, 447, 456, 459, 461, 500, 503, 505, 525, 538, 542, 555, 604], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 397, 409, 453, 509], "gal_diffus": 408, "galact": [17, 18, 21, 22, 24, 25, 27, 28, 29, 35, 36, 37, 45, 47, 67, 68, 83, 91, 103, 106, 110, 111, 112, 117, 128, 129, 131, 166, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 230, 239, 242, 257, 266, 267, 325, 352, 392, 393, 403, 406, 413, 433, 435, 452, 465, 466, 470, 473, 474, 476, 479, 481, 482, 483, 485, 488, 492, 497, 498, 499, 505, 506, 507, 508, 514, 528, 530, 533, 537, 552, 553, 554, 555, 560, 561, 562, 563, 564, 565, 566, 604, 610], "galactic_median": 83, "galactocentr": 41, "galaxi": [17, 21, 22, 28, 30, 35, 39, 40, 41, 231, 303, 304, 433, 466], "galelli": [458, 460, 461], "gallant": 453, "galleri": [424, 440, 442, 445, 456, 460, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 523, 525, 526, 528, 543, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602], "gallery_jupyt": 556, "gallery_python": 556, "galprop": [195, 196, 197, 199, 208, 209], "galprop2": [195, 196, 197, 199, 208, 209], "gambit": 530, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 36, 37, 52, 53, 57, 59, 63, 66, 67, 79, 83, 124, 128, 135, 165, 189, 196, 197, 199, 208, 209, 231, 233, 234, 235, 258, 259, 260, 282, 286, 345, 392, 398, 400, 403, 404, 405, 406, 417, 424, 426, 430, 431, 436, 450, 451, 452, 453, 454, 464, 465, 468, 470, 471, 472, 477, 480, 481, 482, 483, 485, 498, 503, 505, 506, 510, 514, 516, 517, 525, 528, 530, 532, 533, 537, 538, 539, 542, 545, 549, 551, 552, 562, 570, 574, 575, 582, 583, 602, 603, 604, 605, 606, 607, 610], "gamma1": [223, 571, 585], "gamma2": [223, 571, 585], "gamma_1": [270, 273, 274, 275, 416, 586, 587, 588], "gamma_2": [270, 273, 274, 275, 416, 586, 587, 588], "gamma_min": [135, 464], "gamma_min_sensit": 124, "gammacat": [55, 66, 452, 468], "gammalib": [392, 405], "gammamc_dif": 530, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 412, 415, 416, 417, 421, 422, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 523, 525, 526, 527, 528, 531, 532, 534, 535, 536, 542, 543, 544, 545, 546, 548, 552, 553, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 604, 605, 606, 610], "gammapy_analysis_config": 408, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 102, 103, 106, 110, 111, 116, 119, 120, 124, 125, 127, 129, 131, 133, 136, 144, 145, 146, 147, 148, 149, 151, 155, 156, 157, 158, 166, 176, 196, 197, 199, 205, 208, 209, 214, 229, 232, 244, 253, 282, 292, 316, 317, 370, 380, 385, 387, 392, 393, 395, 408, 422, 426, 428, 430, 434, 435, 436, 445, 454, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 523, 525, 526, 528, 539, 540, 542, 544, 545, 546, 548, 549, 551, 552, 567, 599, 600, 610], "gammapy_extra": 434, "gammapybaseconfig": 16, "gammapydeprecationwarn": 392, "gammmapi": [402, 409], "gap": 139, "garcia": 454, "gather": [406, 413, 423], "gauss": [42, 51, 54, 103, 106, 130, 131, 157, 197, 209, 239, 240, 241, 242, 416, 451, 493, 505, 508, 528, 560, 561], "gauss_elong": 508, "gauss_temp": 508, "gaussian": [67, 68, 80, 81, 102, 120, 130, 137, 146, 153, 154, 158, 164, 166, 169, 197, 209, 219, 238, 239, 240, 241, 242, 243, 248, 284, 295, 296, 303, 304, 403, 411, 416, 421, 422, 438, 442, 461, 463, 465, 468, 470, 481, 483, 488, 492, 496, 498, 501, 503, 508, 509, 511, 514, 528, 546, 548, 556, 558, 568, 569, 590, 591, 601], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 120, "gaussian_compon": [67, 498], "gaussian_error": [137, 146], "gaussian_filt": [130, 209], "gaussian_model": 594, "gaussian_sigma": 501, "gaussianband2d": 453, "gaussianprior": [262, 421, 465, 511], "gaussianspatialmodel": [80, 81, 116, 119, 263, 416, 438, 481, 482, 488, 508, 561], "gaussianspectralmodel": [264, 416, 508, 577], "gaussiantemporalmod": 445, "gaussiantemporalmodel": [276, 416, 441, 508, 594], "gb": [400, 402, 514, 516], "gc": [86, 103, 106, 110, 111, 116, 119, 120, 124, 129, 131, 136, 144, 145, 229, 253, 380, 385, 387, 395, 474, 476, 479, 481, 483, 485, 497, 499, 500, 505, 507, 508, 514, 515, 528, 530, 539, 540], "gc_3fhl": 528, "gc_3fhl_cutout": 528, "gc_3fhl_smooth": 528, "gc_imag": 485, "gc_po": 515, "gc_sep": 507, "gca": 465, "gcc": 430, "ge": 90, "geminga": 59, "gen_gaussian_model": 595, "gener": [16, 19, 20, 26, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 101, 103, 104, 105, 106, 109, 110, 111, 118, 126, 155, 166, 169, 196, 197, 199, 200, 201, 205, 208, 209, 214, 223, 224, 227, 228, 231, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 277, 278, 280, 282, 283, 297, 340, 342, 345, 346, 347, 348, 355, 393, 395, 401, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 427, 430, 436, 440, 441, 442, 445, 447, 452, 456, 459, 460, 461, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 523, 525, 526, 528, 538, 542, 547, 553, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 605, 607, 608], "generalconfig": 16, "generalis": [127, 411, 439, 503], "generalized_gaussian_model": 595, "generalizedgaussianspatialmodel": [263, 442, 508, 562], "generalizedgaussiantemporalmodel": [276, 447, 508, 595], "generalrandom": 437, "generatejsonschema": [16, 84, 90, 105, 126], "gengauss": [243, 508, 562], "geodeticloc": 94, "geolat": 466, "geom": [16, 23, 83, 103, 106, 110, 111, 112, 115, 117, 118, 124, 125, 127, 129, 136, 154, 155, 164, 166, 169, 176, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 225, 226, 229, 230, 237, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 281, 403, 405, 407, 442, 445, 454, 460, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 481, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 511, 515, 516, 525, 526, 528, 540, 549, 551, 552, 553, 554, 555, 559, 561, 562, 563, 564, 610], "geom_24_energy_bin": 555, "geom_6_energy_bin": 555, "geom_edisp": [103, 106, 110, 111, 499], "geom_energi": 555, "geom_exposur": [103, 106, 110, 111, 458, 499], "geom_imag": [477, 481, 555], "geom_irf": 405, "geom_psf": [103, 106, 110, 111, 499], "geom_tru": 439, "geomconfig": 16, "geometri": [23, 83, 100, 103, 106, 110, 111, 113, 114, 115, 118, 125, 127, 136, 137, 138, 146, 154, 155, 161, 164, 166, 169, 173, 176, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 225, 226, 229, 230, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 281, 388, 398, 404, 407, 408, 439, 445, 456, 461, 470, 471, 472, 473, 476, 477, 479, 483, 484, 488, 499, 500, 504, 515, 516, 538, 540, 542, 550, 554, 603, 604], "geomspac": [127, 421, 500], "geq": [52, 53], "gerrit": 461, "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 103, 105, 107, 108, 110, 120, 124, 126, 128, 129, 132, 133, 136, 144, 148, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 212, 218, 220, 221, 223, 224, 225, 226, 227, 230, 231, 233, 234, 235, 238, 239, 240, 242, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 284, 285, 326, 342, 392, 393, 397, 398, 399, 400, 401, 402, 406, 407, 409, 417, 419, 420, 421, 424, 425, 427, 428, 430, 431, 434, 436, 451, 452, 453, 454, 461, 464, 471, 473, 474, 479, 480, 481, 488, 491, 495, 498, 499, 501, 503, 504, 506, 507, 508, 511, 514, 515, 516, 517, 518, 520, 525, 526, 528, 530, 538, 542, 555, 604, 608], "get_altaz": [85, 94, 459], "get_bia": 153, "get_bias_energi": 153, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [196, 197, 199, 205, 208, 209, 504, 505, 515, 516, 554], "get_by_idx": [196, 197, 199, 205, 208, 209, 505, 554], "get_by_pix": [196, 197, 199, 205, 208, 209, 554], "get_cl": [468, 498, 506], "get_combined_flux_map": 137, "get_combined_significance_map": 138, "get_coord": [194, 195, 200, 204, 207, 438, 445, 454, 484, 505, 506, 551, 555], "get_dataset": [15, 471, 476, 477, 479, 490, 525], "get_edges_fixed_bin": 148, "get_edges_min_t": 148, "get_edisp_kernel": [154, 155, 440, 445, 499, 515, 546], "get_events_meta_data": 405, "get_excess_map": [15, 525], "get_filenam": [107, 108], "get_flux_point": [15, 125, 127, 417, 440, 471, 525], "get_group_by_idx": 417, "get_hdu": 326, "get_icr": [85, 94, 459], "get_idx": [194, 195, 204, 207, 555], "get_image_by_coord": [196, 197, 199, 205, 208, 209, 505], "get_image_by_idx": [196, 197, 199, 205, 208, 209], "get_image_by_pix": [196, 197, 199, 205, 208, 209], "get_index_list": 195, "get_irfs_featur": [316, 317, 459, 510], "get_kernel": 120, "get_light_curv": 15, "get_mean": 153, "get_observ": [15, 82, 96, 316, 317, 436, 447, 466, 470, 471, 472, 476, 477, 479, 481, 483, 490, 491, 493, 495, 504, 510, 513, 516, 523, 525, 526, 542, 549, 551, 552], "get_ogip_meta": 108, "get_pix": 207, "get_pointing_altaz": [88, 510], "get_pointing_icr": [88, 459, 481, 504, 526], "get_psf_kernel": [164, 166, 169, 460, 461, 515], "get_random_st": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 345, 346, 347, 348, 392], "get_rebinned_axi": 491, "get_resolut": 153, "get_respons": 452, "get_scal": 120, "get_scale_model": [128, 129, 132], "get_spectrum": [196, 197, 199, 205, 208, 209], "get_subcovari": 212, "get_transform": [474, 481, 560, 561], "get_valid_path": 107, "get_wcs_coord_and_weight": 204, "getattr": 421, "getitem": 452, "getlogg": [392, 477, 481, 490, 491, 492, 495, 523], "getter": 393, "getting_start": 413, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 77, 129, 136, 196, 197, 199, 201, 205, 208, 209, 468, 472, 474, 479, 480, 485, 488, 492, 493, 497, 498, 504, 505, 506, 507, 514, 515, 516, 528, 555, 580, 603, 604], "gev2": [19, 497], "gevgevgev1": 468, "gh": [392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424], "gigu\u00e8r": [30, 31, 32, 39], "git": [86, 269, 392, 393, 395, 397, 399, 400, 419, 423, 427, 456], "github": [393, 395, 396, 397, 398, 400, 401, 410, 413, 419, 422, 423, 424, 427, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 450, 451, 452, 453, 454, 455, 509], "giuliani": 405, "giunti": [435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 448, 456, 459], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 143, 302, 303, 392, 397, 401, 402, 406, 407, 408, 409, 413, 414, 419, 424, 435, 437, 439, 447, 460, 470, 471, 474, 482, 484, 491, 495, 496, 498, 501, 503, 504, 505, 508, 514, 515, 525, 542, 547, 605, 606, 608, 609], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 122, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 182, 184, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 294, 296, 298, 304, 316, 318, 321, 322, 329, 336, 340, 343, 344, 352, 379, 380, 385, 389, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 416, 417, 419, 421, 434, 439, 445, 453, 454, 459, 464, 465, 466, 468, 471, 474, 483, 484, 485, 488, 490, 491, 492, 497, 498, 499, 500, 503, 504, 505, 506, 508, 509, 514, 515, 520, 525, 528, 538, 539, 540, 542, 546, 547, 551, 552, 554, 555, 562, 566, 570, 602, 604, 605, 606, 607], "glast": 515, "glat": [41, 67, 68, 83, 392, 470, 498, 505, 515], "glat_err": 498, "glat_pnt": [481, 514], "glimps": [516, 520, 527], "gll_iem_v06_cutout": [196, 197, 199, 205, 208, 209], "gll_iem_v06_gc": [483, 505, 507, 508, 515], "gll_psc_v16": 61, "gll_psc_v20": 498, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 393, 499, 500], "global": [16, 19, 20, 26, 33, 42, 45, 46, 47, 100, 103, 104, 106, 109, 110, 111, 155, 166, 169, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 221, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 342, 345, 346, 347, 348, 392, 396, 398, 422, 442, 459, 470, 481, 482, 493, 507, 509, 511, 540, 603], "global_dataset": 504, "global_to_loc": 195, "glon": [41, 67, 68, 83, 392, 470, 498, 505, 515], "glon_pnt": [481, 514], "glossari": [413, 456, 538, 555], "glue": 542, "glueviz": 409, "go": [50, 87, 91, 395, 402, 413, 418, 422, 456, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 523, 525, 526, 528, 530, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605], "goal": [397, 406, 412, 421, 501, 509], "goe": [41, 52, 382, 392, 411, 424, 485, 511], "gogia": 452, "good": [82, 86, 102, 127, 222, 308, 315, 392, 397, 399, 400, 401, 402, 403, 406, 408, 409, 410, 412, 413, 422, 465, 470, 472, 473, 477, 488, 491, 492, 496, 497, 499, 501, 504, 506, 508, 509, 515, 516, 520, 565, 566, 604, 609], "googl": [87, 91, 413, 423, 461], "got": 514, "gov": [58, 60, 61, 62, 64, 65, 101, 153, 201, 413, 583], "gp": [82, 83, 89, 393, 402, 408, 476, 479, 481, 493, 514, 516], "gpg": 395, "gpl3": 392, "gps_baseline_110380": [82, 83, 514], "gradient": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 422, 509], "grai": [383, 551, 580], "grand": 392, "grant": [395, 419], "granular": [412, 496], "graph": 412, "grayify_colormap": 411, "grb": [492, 496], "great": [397, 406, 411, 451, 520, 521], "greater": [173, 385], "green": [102, 110, 111, 453, 482, 510, 511], "grei": 493, "grep": 429, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 128, 131, 157, 165, 167, 196, 197, 199, 201, 205, 208, 209, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 288, 385, 392, 403, 408, 422, 437, 439, 501, 554, 555, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598], "gridsearch": [214, 501], "gridspec": 379, "gridspec_kw": [474, 481, 490, 492, 570], "ground": [95, 407, 514, 606], "group": [86, 87, 91, 92, 128, 129, 132, 133, 136, 154, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 316, 398, 407, 411, 413, 414, 417, 423, 426, 436, 439, 441, 445, 451, 454, 467, 474, 490, 492, 520, 540, 542, 556, 605], "group_1": 510, "group_2": 510, "group_bi": [87, 91, 417], "group_by_axi": 417, "group_by_label": [92, 510], "group_high_zenith": 510, "group_low_zenith": 510, "group_siz": [148, 491], "group_tabl": [86, 201, 206], "grouped_observ": 510, "grow": [400, 411, 453], "grown": 413, "gr\u00e9aux": 459, "gsfc": [58, 60, 61, 62, 64, 65, 101, 153, 201, 413, 583], "gt": 503, "gt100_wtcnt": 77, "gtdrm": [153, 154], "gtexpcube2": 515, "gti": [82, 87, 88, 89, 100, 102, 103, 106, 110, 111, 125, 127, 129, 132, 137, 146, 170, 206, 269, 398, 401, 402, 405, 406, 407, 417, 437, 439, 440, 442, 455, 459, 460, 483, 491, 492, 495, 499, 504, 514, 516, 517, 538, 604], "gti_1": 539, "gti_2": 539, "gti_t0": 492, "gtimetadata": 420, "gtmktime": [402, 515], "gtobsim": 405, "gtol": 501, "gtpsf": [154, 155, 161, 166, 169, 201, 474, 515], "gtselect": [402, 515], "guarante": [400, 416, 418, 422, 509], "guess": [127, 195, 197, 460], "guid": [395, 408, 410, 426, 427, 428, 431, 454, 479, 503, 520, 542, 547, 557, 568, 590, 601], "guidelin": [392, 396, 431, 453], "guiger": 31, "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 103, 106, 110, 111, 116, 119, 120, 124, 129, 131, 136, 144, 145, 158, 229, 232, 253, 282, 380, 385, 387, 393, 415, 454, 465, 471, 474, 482, 483, 484, 485, 498, 499, 500, 503, 505, 507, 508, 514, 515, 516, 523, 525, 526, 528, 539, 540, 542, 544, 545, 546, 548, 570, 610], "h": [26, 67, 82, 86, 87, 91, 95, 128, 130, 155, 182, 196, 197, 199, 205, 208, 209, 297, 382, 413, 416, 422, 426, 430, 431, 439, 454, 461, 463, 464, 465, 466, 470, 471, 473, 477, 480, 482, 490, 491, 492, 495, 497, 501, 503, 504, 505, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 523, 525, 526, 537, 542, 555, 593, 594, 604, 605], "h0": [311, 482], "h05": [45, 49], "h1": [311, 482], "h_0": [482, 607], "h_1": [482, 607], "h_i": 130, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 87, 91, 102, 103, 106, 110, 111, 124, 125, 127, 168, 176, 190, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 217, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 280, 281, 282, 385, 387, 389, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 441, 442, 445, 447, 448, 454, 455, 456, 458, 459, 460, 461, 465, 466, 470, 471, 472, 477, 482, 484, 490, 491, 493, 497, 498, 499, 501, 504, 505, 506, 508, 509, 510, 511, 514, 516, 517, 525, 526, 538, 539, 542, 547, 551, 552, 554, 555, 560, 561, 589, 602, 605, 607], "habilit": 315, "hack": 450, "had": [392, 398, 400, 419, 442, 448, 452, 453], "hadron": [285, 398, 403, 477, 499, 514, 538, 547, 551], "hajlaoui": [442, 445], "hal": 419, "half": [166, 169, 201, 207, 281], "halo": [17, 22, 530], "halv": [140, 302, 460], "halving_coord": 496, "halving_err": 496, "hand": [178, 392, 395, 400, 403, 413, 419, 421, 457, 501, 520, 542], "handbook": [413, 520], "handi": 479, "handl": [3, 16, 84, 90, 105, 125, 126, 127, 182, 203, 305, 391, 393, 396, 404, 405, 406, 408, 414, 416, 417, 420, 423, 426, 428, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 459, 470, 472, 479, 480, 481, 483, 499, 503, 505, 507, 508, 515, 516, 520, 526, 527, 528, 538, 539, 542, 604, 607], "handler": 412, "handler_map": 389, "hanna": [460, 461], "hap": 408, "happen": [82, 395, 397, 399, 400, 406, 410, 424, 471, 507, 520, 525, 526, 527, 538, 542, 607], "happi": [395, 399, 413, 434, 435, 454], "hard": [392, 393, 416, 421, 440, 511], "harder": [399, 605], "hardli": 420, "harri": [449, 450], "harvard": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 214, 250, 285, 286, 413, 501], "has_any_t": [125, 127], "has_energy_axi": [194, 195, 204, 207], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "has_single_spatial_bin": [154, 155, 161, 166, 169], "has_stat_profil": [125, 127], "has_success": [125, 127], "has_ul": [125, 127], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 392, "hash": 412, "hashabl": 412, "hasn": 397, "hatch": 493, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 105, 108, 112, 117, 125, 126, 127, 132, 134, 144, 145, 153, 154, 155, 164, 166, 169, 176, 178, 190, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 318, 342, 348, 389, 391, 392, 393, 394, 395, 397, 398, 399, 401, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 439, 442, 445, 447, 448, 451, 453, 454, 455, 456, 457, 459, 460, 461, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 491, 492, 493, 495, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 520, 525, 526, 528, 530, 538, 539, 540, 542, 549, 553, 554, 555, 566, 578, 602, 605, 608, 609], "haven": [430, 509], "hawc": [55, 59, 63, 72, 76, 97, 146, 147, 431, 439, 445, 453, 456, 457, 459, 463, 518, 519, 520, 537, 550, 604], "hawc19_flux_point": [127, 480, 542], "hawc_crab": [127, 480, 542], "hawc_pass4_public_crab": [146, 147], "hd": 67, "hdr": 420, "hdr_dict": 420, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 326, 377, 393, 402, 433, 448, 450, 453, 456, 457, 503, 505, 514, 516, 517, 538, 539, 542, 544, 545, 546, 548, 555, 600, 610], "hdu1": 153, "hdu2": 153, "hdu_band": [125, 127, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209], "hdu_class": [82, 87, 326, 514, 516, 517], "hdu_class_uniqu": 87, "hdu_filenam": 516, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [154, 155, 157, 161, 165, 166, 167, 169, 196, 197, 208, 209], "hdu_loc": 87, "hdu_nam": 326, "hdu_ob": 82, "hdu_out": [196, 197], "hdu_region": [204, 205], "hdu_tabl": [82, 516], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 514, 516, 517], "hdu_type_uniqu": 87, "hduclas2": 503, "hduclas3": 503, "hduclas4": 503, "hduclasn": 503, "hduindext": [82, 326, 516], "hdulist": [103, 106, 108, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 505, 538], "hduloc": [87, 103], "he": [285, 402, 407], "hea": 407, "head": 393, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 102, 103, 105, 106, 107, 108, 110, 111, 125, 126, 127, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 281, 328, 373, 374, 377, 397, 402, 405, 420, 439, 447, 449, 454, 456, 459, 472, 484, 505, 514, 609], "healpi": [195, 391, 399, 401, 409, 425, 426, 428, 437, 445, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 553], "healpix": [13, 195, 196, 197, 199, 205, 208, 209, 391, 399, 401, 406, 445, 453, 505, 515, 554], "healpix_to_imag": 446, "heapsort": [87, 91], "hear": 422, "heart": 607, "heasarc": [153, 201], "heatmap": [381, 386], "heavi": [454, 455], "heavier": 479, "heavili": 445, "hegra": [97, 286], "heidelberg": [392, 423], "heidt": 496, "height": [16, 29, 87, 91, 94, 129, 351, 471, 476, 477, 479, 485, 490, 493, 497, 505, 506, 508, 525, 551, 555], "heighten": 496, "helen": 451, "hello": [430, 481], "help": [11, 87, 91, 299, 305, 392, 395, 397, 399, 406, 407, 408, 413, 419, 423, 424, 425, 430, 431, 434, 435, 436, 453, 454, 456, 498, 504, 505, 507, 515, 528, 542, 605], "helper": [13, 326, 331, 399, 401, 406, 407, 408, 411, 424, 430, 436, 437, 438, 439, 445, 447, 450, 452, 453, 459, 460, 485, 498, 506, 507, 551, 603, 610], "henc": [87, 91, 248, 408, 412, 476, 477, 540, 555, 607], "here": [13, 82, 83, 87, 91, 101, 103, 110, 127, 138, 147, 151, 156, 165, 214, 294, 298, 301, 380, 391, 392, 393, 394, 395, 398, 399, 404, 405, 406, 407, 408, 409, 410, 411, 413, 419, 420, 421, 422, 423, 424, 426, 428, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 481, 482, 483, 484, 488, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 509, 510, 511, 514, 515, 516, 520, 525, 526, 528, 532, 538, 542, 547, 549, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 609, 610], "hereaft": 483, "herebi": 511, "heritag": 419, "herm": [289, 291, 460], "herr": [422, 509], "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 102, 110, 111, 133, 148, 149, 156, 158, 176, 214, 292, 316, 317, 393, 400, 401, 406, 408, 413, 422, 423, 426, 430, 433, 435, 438, 449, 450, 453, 454, 463, 466, 468, 470, 471, 472, 477, 479, 481, 482, 491, 493, 495, 498, 499, 500, 501, 504, 509, 510, 511, 513, 515, 517, 519, 523, 525, 526, 530, 539, 540, 542, 544, 545, 546, 548, 549, 551, 552, 610], "hess2": [156, 544], "hess_dl3_dr1_obs_id_020136": [88, 158, 393, 544, 545, 546, 548], "hess_dl3_dr1_obs_id_023523": [83, 86, 539], "hess_dl3_dr1_obs_id_023526": 539, "hess_ecpl": [286, 470], "hess_pl": 286, "hessian": 540, "heterogen": [420, 468, 480], "hex": 508, "hfm": 67, "hgp": [67, 80, 81, 124, 413, 439, 451, 453, 454, 537], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 498], "hi": [392, 452], "hi_bnd": 201, "hi_threshold": 153, "hidden": 403, "hide": [13, 397, 415], "hierarch": [13, 25, 316, 358, 401, 403, 420, 460, 542, 554], "hierarchi": [316, 403, 438], "hierarchical_clust": [459, 510], "high": [6, 15, 58, 62, 63, 83, 153, 201, 341, 392, 396, 397, 398, 405, 406, 407, 412, 413, 420, 422, 437, 438, 439, 440, 441, 445, 453, 454, 463, 464, 468, 471, 474, 476, 479, 485, 488, 490, 497, 498, 499, 500, 504, 506, 509, 514, 515, 516, 517, 520, 526, 527, 528, 529, 537, 538, 539, 540, 547, 550, 603, 604, 605, 606], "high_zenith": 510, "higher": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 221, 243, 395, 398, 403, 408, 411, 414, 427, 468, 484, 496, 503, 505, 549, 555], "highest": [144, 182, 496, 504, 514, 528], "highli": [412, 508, 509], "highlight": 605, "hint": [420, 474, 540], "hip": 412, "hire": [157, 413, 532, 534, 535, 536, 538, 539, 544, 545, 546, 548, 551, 555, 607, 610], "hist": [83, 110, 111, 205, 209, 385, 473, 509, 511], "histogram": [83, 110, 111, 201, 205, 209, 222, 385, 459, 493, 555, 604], "histori": [406, 419, 456], "hit": 422, "hli": [405, 440, 441, 445, 456, 463, 467, 469, 520, 538, 541, 604], "hli_spectrum_analysi": 471, "hline": 560, "hlyuwdx4": 495, "hoc": 406, "hold": [69, 82, 89, 92, 96, 100, 164, 237, 318, 401, 402, 404, 407, 605, 607], "home": [16, 355, 395, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 567, 570, 593, 599, 600], "homebrew": 409, "homework": 436, "homogen": [87, 91, 442], "honk": 397, "hood": [471, 520, 525, 527], "hook": [395, 456], "hope": 397, "hopefulli": 399, "horizont": [85, 95, 159, 361, 503, 609], "host": [392, 422], "hour": [67, 94, 395, 408, 423, 424, 464, 498, 504, 505, 542], "hover": 393, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 105, 126, 127, 129, 131, 176, 197, 207, 209, 342, 348, 394, 397, 400, 404, 406, 408, 409, 411, 412, 415, 416, 419, 420, 422, 424, 425, 426, 430, 431, 434, 435, 436, 439, 440, 447, 449, 452, 453, 454, 459, 460, 464, 465, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 502, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 525, 527, 528, 532, 538, 540, 543, 547, 551, 553, 554, 570, 589, 603, 605, 606, 607, 609, 610], "howev": [77, 87, 91, 102, 124, 129, 303, 391, 392, 393, 395, 399, 402, 405, 406, 410, 419, 421, 422, 427, 466, 477, 485, 493, 495, 497, 498, 499, 501, 509, 511, 516, 517, 520, 521, 538, 542, 554, 555, 561, 578, 605], "howto": [412, 413, 456, 457], "hpx": [195, 196, 197, 199, 208, 209, 406, 445, 505, 515], "hpx2wc": [196, 197], "hpx_map": [196, 197], "hpx_pixel": 406, "hpx_reg": 195, "hpxgeom": [125, 194, 196, 197, 440, 445, 456, 515, 553], "hpxmap": [197, 199, 553], "hpxndmap": [277, 445, 553], "hpxsparsemap": 439, "hpxtowcsmap": [196, 197], "hr": [483, 484, 488, 492], "hspace": 497, "hspec": [449, 450, 451], "hst": 231, "hstack": [87, 91, 405], "html": [83, 87, 91, 101, 128, 153, 189, 195, 201, 204, 207, 214, 229, 253, 282, 318, 345, 346, 392, 393, 400, 413, 418, 419, 423, 424, 432, 453, 464, 473, 476, 479, 481, 488, 492, 501, 503, 514, 539, 553, 555, 583], "htmlcov": 424, "http": [11, 13, 33, 34, 38, 50, 52, 53, 58, 60, 61, 62, 64, 65, 67, 83, 87, 88, 91, 101, 128, 138, 153, 156, 182, 189, 195, 201, 204, 207, 214, 229, 250, 253, 259, 260, 274, 275, 282, 285, 286, 311, 313, 318, 345, 346, 358, 409, 413, 418, 419, 422, 423, 424, 425, 426, 427, 428, 432, 436, 453, 464, 470, 473, 476, 479, 480, 481, 488, 492, 497, 498, 501, 503, 509, 514, 539, 553, 555, 583, 587, 588, 605], "hubert": 454, "hue": 383, "huestart": 383, "huge": [424, 561], "hugovk": 435, "human": [372, 403, 422, 424, 447, 471, 509, 525], "hundr": 516, "hypercub": [505, 554, 555], "hypothes": [292, 311, 313, 459, 542, 607], "hypothesi": [125, 127, 128, 129, 132, 133, 134, 292, 294, 298, 461, 468, 474, 482, 500, 540, 542, 604, 607], "hysteresi": 495, "hz": [348, 528], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 315, 316, 318, 320, 324, 326, 329, 330, 331, 336, 338, 339, 342, 345, 346, 347, 348, 350, 351, 354, 357, 359, 360, 362, 366, 368, 369, 373, 374, 375, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 525, 526, 527, 528, 530, 531, 532, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610], "i0": [87, 91], "i1": [87, 91], "i4": 485, "i8": [505, 528], "i_0": [196, 197, 199, 205, 208, 209], "i_hpx": [196, 197, 199, 205, 208, 209], "i_lat": [196, 197, 199, 205, 208, 209], "i_lon": [196, 197, 199, 205, 208, 209], "i_n": [196, 197, 199, 205, 208, 209], "i_scan": 511, "iact": [82, 83, 85, 94, 176, 179, 183, 398, 401, 402, 403, 404, 406, 408, 413, 431, 436, 450, 452, 454, 468, 474, 477, 504, 505, 507, 514, 515, 517, 539, 544, 545, 546, 547, 548, 602, 604], "iactbasicimageestim": [398, 453], "iau": [52, 433, 437], "iau2015": 52, "ic": 580, "icon": 603, "icr": [83, 85, 88, 91, 94, 95, 96, 103, 106, 110, 111, 113, 114, 144, 166, 176, 179, 195, 196, 197, 199, 202, 204, 207, 208, 209, 225, 226, 230, 239, 242, 257, 266, 267, 316, 317, 352, 392, 393, 417, 438, 470, 471, 472, 473, 474, 477, 480, 481, 483, 484, 488, 490, 491, 492, 493, 495, 498, 499, 503, 504, 505, 506, 508, 510, 513, 514, 515, 516, 525, 526, 539, 542, 546, 551, 555, 560, 561, 562, 564, 565, 566], "icrc": 449, "id": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 80, 82, 83, 87, 88, 91, 92, 113, 114, 405, 408, 430, 471, 473, 483, 485, 488, 493, 498, 508, 509, 514, 515, 516, 517, 525, 539], "id_obs_vela": 493, "idea": [397, 400, 407, 411, 413, 414, 471, 495, 503, 510, 515, 525], "ideal": [394, 395, 402, 406, 407, 412, 417, 421, 423, 468, 515], "idempot": [16, 84, 90, 105, 126], "ident": [366, 407, 456, 470, 472], "identif": [67, 398, 498], "identifi": [67, 88, 104, 109, 195, 269, 392, 402, 403, 405, 408, 412, 418, 419, 424, 440, 474, 483, 496, 498, 499, 508, 514, 516, 541], "identified_object": 498, "idx": [83, 87, 91, 92, 100, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 253, 473, 483, 492, 498, 501, 505, 554], "idx1": 501, "idx2": 501, "idx_glob": 195, "idx_loc": 195, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 124, 419, 465, 495, 507, 508, 538, 604], "iem": [507, 515], "iem_minus_iem": 505, "iem_plus_iem": 505, "iem_times_two": 505, "iffpxpd7": 495, "ignacio": 455, "ignasi": 449, "ignor": [11, 16, 84, 87, 90, 91, 102, 105, 126, 139, 160, 170, 199, 217, 219, 237, 318, 330, 393, 447, 461, 470, 485, 492, 493, 499, 506, 525, 542, 605], "ii": [212, 451], "ij": 212, "ilist": 195, "illustr": [110, 111, 393, 402, 404, 405, 406, 408, 411, 422, 472, 474, 480, 485, 499, 504, 505, 507, 508, 515, 520, 532, 538, 551, 552, 560, 561, 570, 603], "illustrate_colormap": 411, "iloc": [87, 91], "im": [381, 501], "imag": [103, 106, 110, 111, 120, 130, 131, 144, 155, 156, 157, 163, 165, 166, 167, 169, 171, 181, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 281, 307, 310, 355, 377, 380, 381, 382, 383, 387, 392, 400, 401, 403, 408, 409, 413, 414, 424, 426, 431, 433, 434, 435, 438, 439, 440, 446, 450, 451, 452, 453, 454, 461, 463, 467, 476, 479, 485, 486, 487, 504, 506, 508, 514, 526, 528, 538, 547, 551, 552, 553, 554, 555, 603, 604, 610], "image_analysi": [413, 434], "image_err": 131, "image_fitting_with_sherpa": [413, 455], "image_pip": 453, "image_profil": 452, "imagehdu": [196, 197, 208, 209], "imagenorm": [382, 383, 610], "imageprofil": 131, "images_t": 481, "imagin": 605, "img": [380, 505], "iminuit": [214, 391, 409, 419, 422, 445, 447, 454, 458, 459, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 602], "immut": 229, "impact": [399, 405, 409, 516], "imperfect": 504, "implement": [19, 20, 103, 106, 110, 111, 138, 147, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 297, 303, 392, 393, 397, 398, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 452, 453, 455, 456, 459, 460, 461, 466, 476, 491, 496, 497, 498, 504, 505, 506, 509, 530, 538, 540, 542, 547, 548, 549, 589, 602, 603, 604, 605, 606, 609], "implent": 392, "impli": [243, 392, 411, 422, 538, 604], "implic": 415, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 547], "implicitli": 504, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 102, 103, 105, 106, 110, 111, 112, 116, 117, 119, 120, 124, 125, 126, 127, 129, 131, 133, 136, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 164, 166, 176, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 220, 223, 224, 227, 229, 231, 233, 234, 235, 240, 244, 246, 247, 250, 251, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 286, 292, 297, 303, 304, 316, 317, 338, 348, 358, 370, 371, 376, 380, 382, 383, 385, 387, 393, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 429, 430, 441, 451, 453, 458, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 523, 525, 526, 528, 531, 532, 534, 535, 536, 538, 539, 540, 542, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 605, 606, 607, 609, 610], "importantli": [417, 454, 466, 605], "importerror": [87, 91], "impos": [458, 464, 551], "imposs": 422, "improv": [109, 292, 394, 396, 397, 398, 400, 401, 402, 406, 407, 408, 409, 410, 411, 412, 413, 418, 424, 425, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 505, 514, 542, 547, 552, 560], "imshow": [103, 106, 164, 197, 209, 380, 386, 452, 505, 528], "in2p3": 419, "in_memori": [88, 542], "in_memory_gener": 92, "in_safe_data_rang": [103, 106, 110, 111], "inaccur": 392, "incex": [16, 84, 90, 105, 126], "incid": [398, 604], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 105, 126, 132, 154, 164, 170, 172, 173, 179, 180, 184, 194, 195, 204, 207, 219, 238, 248, 254, 284, 326, 391, 392, 395, 398, 400, 403, 404, 405, 406, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 435, 437, 442, 453, 458, 459, 460, 461, 464, 479, 480, 482, 483, 485, 492, 497, 498, 500, 501, 504, 506, 507, 508, 509, 514, 516, 530, 532, 538, 540, 541, 552, 554, 602, 606, 609], "include_irf": [88, 483, 539, 542], "include_ssc": 254, "inclus": [83, 204, 378, 406], "incompat": [418, 447], "incomplet": [392, 424, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "inconsist": [442, 448, 458, 459], "inconveni": [411, 454], "incorpor": [408, 413, 421, 604], "incorrect": [83, 392, 420, 429, 438, 456, 457, 504, 511], "incorrectli": [456, 506], "increas": [144, 171, 201, 206, 221, 230, 239, 242, 392, 401, 420, 491, 500, 504, 538, 542, 560], "increment": [19, 20, 26, 120, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 406, 505, 554], "ind": [195, 207, 229, 253], "inde": [483, 561], "indefinit": 399, "indent": [16, 84, 90, 105, 126], "independ": [67, 128, 132, 137, 138, 146, 147, 315, 329, 392, 395, 398, 402, 403, 404, 405, 406, 407, 410, 412, 414, 415, 416, 417, 419, 426, 435, 445, 464, 471, 490, 498, 505, 506, 507, 508, 516, 525, 526, 537, 542, 547, 604, 608], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 102, 103, 106, 110, 111, 120, 124, 125, 127, 128, 129, 133, 135, 136, 143, 153, 154, 155, 161, 164, 166, 169, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 220, 223, 224, 227, 229, 231, 233, 234, 235, 240, 246, 247, 250, 251, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 286, 297, 326, 340, 345, 398, 401, 402, 403, 404, 407, 408, 416, 417, 418, 423, 426, 436, 450, 452, 453, 459, 460, 465, 466, 468, 470, 471, 473, 474, 476, 479, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 498, 499, 500, 501, 503, 507, 508, 509, 514, 515, 516, 517, 525, 526, 528, 540, 547, 553, 554, 555, 559, 560, 561, 562, 564, 565, 566, 567, 570, 572, 574, 575, 576, 581, 582, 583, 592, 593, 594, 595, 596, 597, 598, 599, 600], "index1": [223, 270, 571, 585], "index2": [223, 270, 571, 585], "index_1": [273, 274, 275, 586, 587, 588], "index_2": [77, 273, 274, 275, 586, 587, 588], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 200, "index_err": 495, "index_errn": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "index_errp": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "index_mod": [87, 91], "index_scan": 511, "indexerror": [92, 100, 253], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 392, 456, 473, 484, 496, 504, 505, 509, 510, 511, 516, 517, 542, 554, 555, 604], "indico": 401, "indirect": [17, 19, 20, 21, 22, 24, 25, 26, 27, 497, 530], "individu": [87, 91, 109, 122, 130, 388, 398, 404, 405, 407, 413, 416, 417, 421, 466, 470, 473, 482, 485, 491, 498, 499, 501, 504, 507, 508, 528, 538, 542, 604], "indiviud": 415, "indxschm": [196, 197, 208, 209], "ineffici": [87, 91, 395], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 242, 284, 421, 509, 511], "infer": [125, 127, 194, 195, 196, 197, 199, 207, 208, 209, 231, 393, 396, 509, 525, 554], "inferno": 505, "infil": 392, "infin": 511, "influenc": 511, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 157, 163, 165, 167, 294, 298, 326, 393, 407, 408, 413, 423, 429, 439, 440, 442, 449, 450, 453, 471, 476, 477, 479, 483, 491, 495, 497, 498, 499, 505, 509, 515, 516, 517, 520, 523, 525, 605], "info_dict": [103, 106, 110, 111, 294, 298, 385, 442, 460, 499], "info_t": [100, 466, 470, 471, 473, 479, 492, 499, 507, 542], "infodict": 385, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 153, 157, 163, 165, 167, 168, 171, 176, 177, 182, 183, 202, 214, 219, 221, 223, 224, 225, 226, 227, 228, 230, 231, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 254, 255, 256, 257, 258, 260, 261, 266, 267, 268, 270, 273, 274, 275, 277, 278, 281, 282, 284, 299, 305, 326, 342, 373, 374, 392, 396, 397, 402, 404, 405, 406, 407, 408, 412, 416, 417, 420, 421, 422, 424, 429, 430, 431, 439, 441, 442, 445, 447, 453, 459, 460, 465, 468, 471, 472, 480, 483, 484, 488, 495, 496, 499, 500, 501, 504, 505, 508, 509, 514, 515, 516, 517, 525, 526, 528, 537, 538, 539, 540, 542, 555, 604, 605, 608], "information_gain_bit": 509, "infrar": 231, "infrastructur": [424, 432, 445, 456, 459], "ingredi": [417, 497], "inher": 509, "inherit": [87, 91, 297, 392, 402, 404, 407, 412, 417, 420, 421, 440, 445, 452, 499, 503, 553, 554], "init": [19, 20, 26, 87, 91, 124, 129, 136, 173, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 330, 342, 404, 442, 457, 459, 460, 461, 474, 485, 491, 498, 499, 500, 528], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 105, 125, 126, 127, 136, 194, 195, 197, 200, 201, 204, 207, 229, 253, 255, 256, 318, 392, 397, 402, 403, 404, 408, 422, 447, 464, 473, 477, 479, 480, 482, 483, 484, 488, 493, 498, 499, 505, 508, 525, 526, 528, 537, 539, 589, 604], "initialis": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 342, 345, 346, 347, 348, 392, 415, 509, 511], "initiliaz": 422, "inject": [473, 488], "inlin": [397, 464, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 505, 506, 507, 508, 513, 514, 515, 517, 525, 526, 528], "inner": [44, 52, 53, 129, 171, 181, 267, 477, 528, 566], "inner_height": [551, 555], "inner_width": [551, 555], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 103, 105, 106, 109, 120, 122, 124, 125, 126, 127, 128, 131, 132, 136, 140, 141, 142, 143, 145, 149, 154, 155, 157, 164, 165, 166, 167, 168, 169, 171, 173, 177, 179, 181, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 229, 244, 253, 280, 281, 282, 297, 318, 329, 339, 342, 361, 363, 385, 387, 398, 400, 402, 403, 404, 405, 406, 407, 408, 412, 414, 430, 440, 445, 448, 455, 459, 461, 470, 473, 483, 484, 493, 500, 505, 511, 540, 554, 555, 606], "input_map": [112, 117], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 459, "insensit": 203, "insert": [87, 91, 92, 100, 253, 419, 440, 509, 608], "insert_row": [87, 91], "insertion_order_mww_test": [422, 509], "inset": 446, "insid": [50, 83, 103, 110, 116, 119, 153, 179, 195, 196, 197, 199, 204, 207, 208, 209, 229, 253, 269, 381, 385, 392, 393, 395, 406, 408, 412, 417, 445, 464, 470, 473, 476, 479, 481, 488, 492, 499, 504, 506, 507, 508, 514, 516, 539, 549, 551, 552, 555], "inside_geom": 506, "insight": 429, "inspect": [404, 408, 412, 430, 470, 472, 479, 483, 484, 501, 505, 507, 514, 515], "inspir": [392, 417, 423], "instal": [87, 91, 391, 392, 395, 399, 400, 401, 409, 423, 424, 425, 428, 430, 431, 434, 435, 445, 449, 452, 453, 454, 461, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 520, 525, 526, 528, 542, 605], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 105, 122, 126, 127, 128, 130, 132, 133, 168, 170, 178, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 336, 342, 379, 381, 382, 383, 386, 388, 392, 398, 403, 404, 407, 408, 415, 417, 420, 445, 468, 470, 473, 485, 498, 500, 501, 504, 506, 507, 508, 509, 528, 532, 542, 554, 555, 580], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 196, 197, 199, 201, 208, 209, 403, 408, 466, 471, 498, 499, 505, 508, 511, 525], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 103, 105, 106, 110, 111, 115, 126, 183, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 392, 393, 395, 397, 399, 400, 402, 403, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 421, 425, 426, 428, 435, 438, 441, 442, 455, 459, 461, 465, 472, 479, 483, 488, 490, 492, 493, 498, 499, 503, 504, 505, 508, 511, 539, 546, 547, 554, 555, 605], "instruct": [392, 395, 401, 409, 423, 425, 426, 434, 445, 449, 453, 483, 514], "instrument": [6, 83, 95, 109, 156, 160, 161, 237, 392, 402, 403, 404, 405, 407, 413, 417, 426, 430, 439, 442, 454, 455, 456, 463, 466, 468, 470, 471, 474, 479, 486, 487, 493, 495, 499, 501, 503, 504, 507, 508, 510, 511, 514, 515, 516, 517, 518, 520, 525, 526, 538, 539, 540, 544, 546, 548, 603, 604], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 101, 103, 104, 105, 106, 109, 110, 111, 113, 114, 120, 122, 126, 127, 128, 129, 132, 133, 134, 136, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 179, 183, 184, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 288, 290, 292, 294, 297, 298, 302, 303, 304, 306, 311, 312, 313, 318, 329, 330, 336, 340, 342, 345, 346, 347, 348, 350, 351, 379, 385, 392, 406, 452, 501, 532], "int64": [103, 106, 110, 111, 112, 117, 124, 136, 540], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 223, 224, 227, 231, 233, 234, 235, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 547, 560], "int_flux": 497, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 136, 144, 145, 154, 155, 161, 166, 169, 172, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 218, 220, 229, 253, 318, 336, 342, 392, 398, 406, 554], "integr": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 102, 103, 106, 110, 111, 125, 127, 130, 132, 143, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 171, 196, 197, 199, 201, 205, 208, 209, 210, 211, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 285, 286, 288, 329, 391, 399, 401, 403, 405, 406, 407, 409, 410, 413, 417, 419, 422, 433, 435, 436, 440, 441, 445, 450, 451, 452, 453, 454, 455, 456, 459, 470, 472, 473, 476, 492, 495, 497, 498, 499, 505, 506, 508, 509, 528, 530, 538, 540, 546, 562, 583], "integral_error": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 410, 442, 495], "integral_flux": 495, "integral_flux_imag": 446, "integrate_geom": [225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281, 445, 458, 460], "integrate_log_log": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "integrate_spectrum": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 436, 442], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 318, 402, 412, 421, 422, 503], "intens": [196, 197, 199, 205, 208, 209, 214, 243, 402, 505, 538], "intent": 397, "interact": [19, 20, 87, 91, 166, 169, 196, 197, 199, 205, 208, 209, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 391, 392, 393, 401, 402, 403, 404, 408, 413, 416, 430, 439, 465, 479, 488, 501, 505, 507, 508, 509, 520, 521, 525, 526, 551, 554, 580, 605], "interchang": 554, "interest": [116, 119, 128, 132, 214, 292, 397, 405, 406, 410, 413, 424, 468, 479, 483, 485, 495, 498, 499, 501, 504, 506, 509, 510, 514, 515, 528, 539, 540, 580, 604, 607, 608], "interfac": [6, 11, 15, 19, 20, 87, 91, 212, 214, 217, 218, 220, 221, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 392, 396, 397, 398, 402, 404, 405, 407, 409, 410, 411, 412, 413, 422, 435, 438, 440, 441, 442, 445, 449, 452, 453, 459, 463, 465, 471, 474, 476, 479, 488, 490, 501, 508, 514, 520, 526, 527, 528, 529, 538, 539, 542, 550, 553, 580, 602, 603, 604, 605], "interfer": 423, "intermedi": [207, 401, 408, 412, 419, 430, 466, 491], "intern": [15, 19, 20, 26, 87, 91, 125, 127, 128, 129, 133, 139, 140, 141, 142, 173, 179, 204, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 288, 318, 330, 392, 404, 406, 408, 411, 412, 417, 445, 447, 456, 459, 464, 471, 479, 490, 496, 499, 505, 517, 525, 538, 542, 600], "interoper": 412, "interp": [19, 20, 158, 196, 197, 199, 201, 205, 206, 208, 209, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 331, 387, 416, 421, 458, 460, 473, 480, 484, 488, 492, 503, 504, 505, 508, 513, 515, 516, 554, 555, 580, 581], "interp1": 505, "interp1d": 331, "interp2": 505, "interp_by_coord": [196, 197, 199, 205, 208, 209, 281, 456, 505], "interp_by_pix": [196, 197, 199, 205, 208, 209, 277, 278, 505], "interp_kwarg": [68, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 231, 277, 278, 281, 282, 392, 503, 515, 589], "interp_map": [196, 197, 199, 205, 208, 209], "interp_missing_data": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "interp_param": 392, "interp_scal": [102, 293, 331], "interp_to_geom": [196, 197, 199, 205, 208, 209, 442, 458, 505, 515, 542], "interp_weight": 195, "interpol": [26, 94, 102, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 176, 195, 196, 197, 199, 201, 205, 206, 208, 209, 231, 244, 255, 256, 277, 278, 280, 281, 282, 293, 330, 331, 332, 391, 403, 404, 405, 435, 440, 445, 447, 450, 453, 455, 456, 457, 458, 459, 460, 470, 484, 503, 504, 508, 515, 516, 542, 550, 554, 589], "interpolatedunivariatesplin": 280, "interpolation_scal": [217, 219], "interpret": [91, 103, 106, 130, 144, 145, 197, 201, 207, 208, 209, 336, 410, 421, 505, 540, 555], "intersect": [89, 179, 180, 184, 204, 406, 491], "interspers": 397, "interstellar": [45, 483], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 102, 104, 109, 127, 132, 177, 193, 201, 206, 214, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 401, 402, 406, 407, 410, 417, 426, 439, 441, 442, 445, 454, 455, 460, 461, 490, 492, 495, 501, 505, 516, 526, 539, 554, 604, 607], "interval_edg": 206, "intervent": [422, 509], "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 254, 304, 403, 407], "intrinsic_model": 465, "intro": 422, "intro_map": 454, "introduc": [19, 20, 196, 197, 199, 201, 205, 208, 209, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 392, 399, 400, 402, 404, 405, 406, 407, 409, 413, 415, 418, 421, 422, 436, 438, 439, 441, 442, 445, 447, 448, 452, 453, 454, 456, 459, 460, 461, 482, 496, 504, 508, 509, 555, 561, 605, 608], "introduct": [395, 414, 415, 416, 422, 435, 439, 440, 441, 442, 461, 468, 471, 508, 518, 525, 526, 531], "introductori": 496, "introspect": 318, "intrus": 412, "intuit": [414, 608], "invalid": [377, 392, 406, 420, 421, 445, 461, 472, 477, 483, 517], "invalid_pixel": 506, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 207, 217, 219, 223, 224, 227, 231, 233, 234, 235, 240, 243, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 294, 297, 298, 340, 347, 405, 422, 483, 506, 508, 511, 580], "inverse_al": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "inverse_cdf": [422, 483], "inverse_transform": [217, 219], "inversecdf": 405, "inversecdfsampl": [405, 437], "inversecompton": [254, 580], "invert": [91, 195, 207, 528], "invest": 395, "investig": [482, 491, 495, 509], "involv": [87, 91, 103, 106, 110, 111, 392, 397, 406, 408, 410, 412, 415, 474, 605], "io": [13, 83, 86, 87, 91, 128, 189, 199, 204, 214, 282, 401, 413, 422, 424, 436, 439, 451, 455, 459, 501, 503, 505, 509, 514, 539, 542, 553, 555], "iop": 274, "iopscienc": 274, "ipix": 195, "ipykernel": [426, 428], "ipynb": [400, 413, 436, 439, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 523, 525, 526, 528, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "ipynb_to_galleri": 392, "ipython": [87, 91, 391, 392, 408, 409, 412, 425, 429, 437, 464, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 520, 521, 525, 526, 528, 541, 605], "ipython3": 427, "ipywidget": 505, "irap": 413, "irf": [6, 82, 88, 96, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 182, 183, 185, 186, 187, 189, 191, 192, 195, 204, 207, 269, 317, 392, 393, 398, 402, 403, 404, 405, 408, 411, 413, 414, 415, 421, 426, 434, 436, 439, 441, 442, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 465, 466, 468, 470, 471, 472, 473, 474, 476, 479, 483, 484, 488, 490, 492, 502, 504, 506, 510, 511, 512, 515, 516, 517, 518, 520, 525, 526, 538, 539, 542, 544, 545, 546, 548, 549, 603, 604], "irf_dict": 170, "irf_dl3_hdu_specif": 503, "irf_fil": [88, 151, 155, 156, 157, 166, 464, 473, 488, 492, 503, 514], "irf_filenam": [483, 484, 503, 514], "irf_map": [154, 155, 161, 166, 169], "irf_path": 483, "irfmap": [154, 155, 166, 169, 426, 442, 542], "irfmetadata": 420, "irfmodel": 403, "irfs1": 514, "irfs2": 514, "irfs_path": 82, "irfstack": [442, 451], "irreduc": 547, "irregular": [195, 207, 554], "irrespect": [405, 479, 505, 554], "is_align": [195, 201, 206, 207], "is_all_point_sky_region": 204, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209], "is_allski": [194, 195, 204, 207], "is_bkg": 108, "is_contigu": [206, 505], "is_convertible_to_flux_sed_typ": [125, 127], "is_energy_axi": 201, "is_energy_depend": [225, 226, 228, 230, 236, 239, 241, 242, 243, 244, 245, 255, 257, 261, 266, 267, 268, 271, 277, 280, 281, 283, 458, 508], "is_fixed_rad_max": 168, "is_flat": [194, 195, 200, 204, 207], "is_hpx": [195, 204, 207], "is_imag": [194, 195, 204, 207], "is_mask": [196, 197, 199, 205, 208, 209], "is_norm": [421, 447, 460], "is_norm_spectral_model": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 445, 508], "is_nul": 505, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 445], "is_rang": 83, "is_region": [195, 204, 207], "is_regular": [195, 204, 207], "is_ul": [67, 125, 127, 445, 460, 471, 498, 500, 528], "is_unidimension": 200, "isf": [501, 607], "isinst": [392, 403, 406, 416, 420, 421, 422], "ism": [52, 53, 580], "isn": [399, 406, 408, 411, 424, 481, 605], "isnan": [505, 506], "iso": [88, 127, 206, 211, 459, 492, 507, 515, 554, 599], "iso_p8r2_source_v6_v06": [507, 515], "isol": [30, 31, 32, 406, 425, 506], "isot": [372, 609], "isotherm": [22, 530], "isotrop": [47, 101, 226, 287, 507], "isotropi": 547, "isotropic_fil": 101, "issu": [19, 20, 26, 87, 91, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 392, 393, 395, 400, 401, 403, 404, 406, 409, 412, 413, 418, 419, 420, 421, 423, 426, 427, 428, 431, 432, 435, 447, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 481, 506, 509, 514, 538, 542, 605, 606], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 203, 253, 413, 420], "iter": [87, 91, 92, 100, 125, 127, 134, 136, 196, 197, 199, 200, 201, 203, 205, 206, 208, 209, 253, 395, 398, 400, 408, 446, 474, 492, 509], "iter_by_axi": [125, 127, 196, 197, 199, 205, 208, 209], "iter_by_axis_data": 205, "iter_by_coord": 437, "iter_by_edg": [201, 206], "iter_by_imag": [196, 197, 199, 205, 208, 209, 454], "iter_by_image_data": [196, 197, 199, 205, 208, 209, 505], "iter_by_image_index": [196, 197, 199, 205, 208, 209], "iter_by_pix": 437, "iter_with_reshap": 200, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 501, "its": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 103, 106, 110, 111, 125, 127, 172, 173, 182, 195, 201, 203, 221, 230, 231, 292, 392, 395, 398, 401, 402, 404, 407, 408, 409, 411, 412, 417, 419, 420, 424, 427, 445, 459, 460, 461, 466, 471, 472, 476, 483, 484, 490, 491, 496, 498, 500, 501, 504, 505, 506, 507, 508, 509, 511, 525, 528, 531, 547, 549, 551, 553, 554, 555, 604, 607], "itself": [87, 91, 391, 392, 407, 419, 466, 490, 491, 493, 511, 605], "ivoa": [392, 412, 460], "j": [19, 20, 23, 103, 110, 130, 138, 393, 395, 538], "j0001": [498, 528], "j0002": [498, 528], "j0003": [498, 528], "j0006": 498, "j0007": 528, "j0008": [498, 528], "j0009": 528, "j0010": 498, "j0013": 498, "j0021": 498, "j0022": 498, "j0025": 498, "j0031": 498, "j0349": 498, "j0521": 470, "j0534": [498, 528], "j0633": 528, "j0835": [468, 528], "j0851": 498, "j1036": 498, "j1104": [498, 528], "j1506": 468, "j1507": 468, "j1513": 498, "j1514": 498, "j1555": 528, "j1653": 498, "j1713": 466, "j1731": 507, "j1732": 507, "j1741": 507, "j1744": 507, "j1745": 507, "j1746": 507, "j1747": 507, "j1748": 507, "j1753": 507, "j1800": 507, "j1801": 507, "j1802": 507, "j1809": 507, "j1811": 507, "j1824": 498, "j1825": 482, "j1843": 67, "j1844": 67, "j2028": 498, "j2158": 498, "j2347": 528, "j2350": 528, "j2351": 528, "j2352": 528, "j2356": 528, "j2357": [498, 528], "j2358": [498, 528], "j2359": [498, 528], "j_": 23, "jackson": [87, 91], "jacob": [435, 454], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 441], "jalel": [442, 445], "jan": [397, 398, 401, 404, 409, 414, 432], "jana": 460, "januari": [399, 401, 418], "jargon": 426, "jason": 435, "javascript": [87, 91], "jax": 410, "jbernet": 460, "jean": [453, 454], "jeffrei": 511, "jeltema": 530, "jep": 397, "jet": 383, "jfact": 497, "jfact_decai": 497, "jfact_map": 497, "jfactor": [19, 20, 459], "jfactori": 497, "jj": 212, "jk": [103, 110, 538], "jkl": 538, "jl": 538, "jo": [87, 91], "job": [93, 128, 129, 132, 136, 172, 447], "johann": [438, 445, 449, 450, 451, 452, 453, 454], "johannesbuchn": 422, "john": [87, 91, 422], "join": [394, 403, 404, 431, 514], "joint": [100, 110, 111, 122, 133, 137, 138, 147, 149, 214, 292, 400, 401, 404, 408, 413, 415, 422, 426, 435, 436, 438, 439, 454, 455, 461, 463, 466, 468, 470, 471, 472, 474, 482, 486, 487, 492, 499, 500, 501, 504, 508, 509, 510, 511, 515, 520, 525, 540, 542, 602, 603, 604], "joint_fit": 493, "joint_result": 493, "jointli": [510, 516], "jonathan": [449, 450], "jose": [445, 447, 453], "joshi": 445, "jos\u00e9": [400, 408, 412, 413, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 453, 454, 455], "journal": [311, 313, 419], "jouvin": [435, 437, 438, 439, 442, 450, 451, 452, 453, 454], "jqueri": [87, 91], "jqwtarm1": 495, "jskwarg": [87, 91], "json": [16, 84, 90, 105, 126, 412, 423, 447, 449, 453], "json_data": [16, 84, 90, 105, 126], "json_encode_earth_loc": 90, "json_schema": [16, 84, 90, 105, 126], "json_schema_input_typ": 90, "jsonschema": [409, 438, 439], "jsviewer": [87, 91, 481], "juan": 460, "jul": [398, 407, 409, 411, 432], "juli": [398, 401, 406, 408, 409, 411, 416, 418, 420, 491, 495], "julia": 460, "julian": 609, "julien": [451, 452, 453], "jun": [406, 408, 409, 415, 416, 431], "june": [406, 410, 432], "junior": [66, 413], "jupyt": [391, 399, 408, 409, 413, 425, 429, 431, 436, 451, 452, 453, 455, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 521, 523, 525, 526, 528, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605], "jupyterlab": [391, 409, 413, 430, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528], "jupytext": 413, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 156, 366, 392, 393, 394, 395, 397, 400, 402, 406, 408, 409, 410, 413, 424, 425, 427, 453, 455, 465, 470, 471, 473, 479, 481, 483, 490, 491, 493, 496, 499, 505, 509, 515, 516, 520, 525, 528, 539, 555, 605], "juypter": 408, "jyear": [87, 91], "k": [19, 33, 52, 53, 103, 110, 203, 227, 280, 342, 468, 470, 472, 498, 501, 505, 507, 509, 515, 538, 555, 560, 573, 580], "kai": [453, 454], "kaori": 437, "kaspi": [30, 31, 32, 39, 45], "katrin": [421, 458, 459, 460], "kb": 400, "kde": 509, "keep": [13, 87, 91, 100, 125, 164, 196, 197, 199, 205, 208, 209, 214, 392, 393, 395, 397, 398, 399, 400, 406, 409, 410, 411, 412, 413, 416, 417, 422, 443, 453, 476, 477, 482, 488, 495, 501, 507, 515], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [104, 109], "keepdim": [164, 166, 169, 196, 197, 199, 205, 208, 209, 434, 439, 504], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 82, 84, 87, 89, 90, 91, 103, 105, 106, 110, 111, 120, 126, 203, 214, 354, 359, 360, 377, 395, 400, 402, 409, 415, 417, 420, 422, 431, 454, 465, 499, 508, 509, 570], "kept": [89, 103, 106, 110, 111, 125, 127, 128, 132, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 392, 398, 412, 413, 417, 465, 495, 540], "kernel": [103, 106, 110, 111, 120, 124, 130, 131, 136, 153, 154, 155, 164, 166, 169, 171, 176, 181, 183, 186, 197, 207, 209, 398, 420, 426, 428, 440, 441, 446, 451, 455, 456, 461, 474, 477, 493, 504, 505, 506, 515, 528, 538, 542, 546], "kernel_width": [136, 474, 481], "kernelbackgroundestim": 441, "kernelbackgroundmapestim": 414, "kev": [108, 136, 201, 474, 499, 500, 555], "keyboard": 430, "keyerror": [91, 203, 417], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 102, 103, 105, 106, 110, 111, 126, 127, 129, 130, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 214, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 287, 293, 297, 330, 338, 339, 360, 372, 374, 375, 379, 380, 381, 385, 386, 387, 388, 389, 420, 441, 445, 448, 456, 457, 472, 483, 484, 499, 505, 509, 516, 540, 555, 567], "kg": 52, "khelifi": [422, 437, 439, 442, 445, 448, 452, 453, 454, 456, 457], "kh\u00e9lifi": [419, 456, 458, 459, 460, 461], "kill": 423, "kind": [87, 91, 366, 403, 404, 405, 410, 411, 412, 416, 419, 454], "kinet": 44, "king": [165, 438, 449, 450, 451, 452, 453, 454, 503, 548], "kirsti": [458, 459, 460, 461], "kl": [509, 538], "klepser": 449, "km": [32, 37], "km2": 514, "km2a": [57, 70], "know": [221, 393, 395, 397, 401, 406, 408, 409, 417, 422, 424, 436, 453, 454, 455, 481, 484, 497, 503, 504, 505, 514, 516, 517, 605], "knowledg": [219, 238, 248, 284, 412, 421, 422, 430, 468, 473, 480, 482, 485, 488, 490, 501, 504, 505, 507, 509, 511], "known": [134, 294, 298, 318, 405, 432, 470, 474, 477, 482, 490, 504, 505, 506, 509, 513, 528, 542, 552, 605, 606, 607], "koenig": [297, 461], "konig": [297, 461], "konrad": 460, "kornecki": 460, "kovalev": 496, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 254, 318, 321, 497, 498, 536, 580], "kurt": 460, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 102, 103, 106, 110, 111, 127, 128, 129, 130, 132, 148, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 178, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 287, 293, 330, 341, 366, 379, 380, 381, 384, 386, 387, 388, 389, 392, 403, 420, 421, 458, 468, 472, 483, 493, 504, 517, 593], "kwargs_ax": [385, 477, 479], "kwargs_background": [110, 111], "kwargs_colorbar": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 380], "kwargs_count": [110, 111], "kwargs_excess": [110, 111], "kwargs_extens": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 482], "kwargs_fit": [110, 111, 385], "kwargs_fp": 102, "kwargs_hist": [385, 477, 479], "kwargs_list": 203, "kwargs_model": 102, "kwargs_npred_sign": [110, 111], "kwargs_point": [204, 229, 253, 472], "kwargs_posit": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 482], "kwargs_residu": [102, 110, 111], "kwargs_saf": [110, 111], "kwargs_spati": [103, 106, 110, 111, 479, 526], "kwargs_spectr": [103, 106, 110, 111, 479, 526], "kwargs_spectrum": [102, 110, 111], "kzrtxtjm": 495, "l": [23, 26, 51, 54, 102, 103, 110, 111, 176, 295, 296, 389, 393, 406, 416, 419, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 481, 482, 488, 492, 493, 498, 499, 501, 504, 505, 506, 508, 509, 510, 511, 514, 515, 525, 526, 528, 538, 542, 555, 580, 589, 604, 606, 607, 608], "l06": [48, 532], "l0d9k": 495, "l_": [52, 53], "l_0": [51, 535, 560, 561], "l_snr": 44, "la": 451, "lab": [419, 426, 428, 430, 453], "label": [92, 198, 201, 206, 229, 253, 316, 380, 381, 386, 389, 392, 393, 396, 401, 405, 406, 423, 424, 445, 447, 456, 457, 459, 461, 464, 465, 468, 470, 472, 477, 479, 480, 484, 485, 490, 491, 493, 496, 497, 501, 505, 508, 510, 511, 528, 535, 536, 544, 570, 576, 579, 580, 584, 589], "label_axi": [198, 505], "label_axis2": 505, "labelcolor": 464, "labelmapaxi": [445, 459, 461], "lack": [203, 407, 493], "lafferti": [433, 604], "lafferty1994": 604, "lai": 506, "lambda": [67, 234, 235, 297, 385, 498, 514, 574, 607], "lambda_": [234, 235, 292, 468, 470, 479, 574, 576], "lancast": [138, 147], "land": 424, "landscap": [422, 509], "langl": 19, "languag": [399, 411], "laplac": [242, 562], "laptop": 422, "lar": [408, 434, 435, 436, 452, 453, 454, 457, 459, 461], "larg": [67, 87, 91, 196, 197, 199, 205, 208, 209, 277, 279, 281, 392, 395, 397, 398, 406, 413, 414, 422, 435, 445, 454, 455, 460, 464, 470, 477, 491, 498, 506, 509, 514, 515, 516, 528, 538, 540, 542, 543, 549, 555, 562, 602, 605, 610], "large_scale_compon": [67, 498], "larger": [27, 135, 154, 155, 161, 166, 169, 292, 303, 393, 400, 411, 459, 461, 464, 466, 470, 499, 504, 505, 506, 511, 539, 555, 562, 606, 607], "largest": [103, 106, 110, 111, 209, 392], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 196, 197, 198, 199, 201, 205, 208, 209, 253, 348, 389, 399, 402, 404, 415, 419, 423, 424, 426, 428, 434, 435, 496, 549, 551], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 101, 103, 106, 110, 112, 117, 124, 128, 129, 131, 136, 154, 155, 161, 166, 169, 172, 196, 197, 199, 202, 205, 207, 208, 209, 225, 226, 230, 237, 239, 242, 255, 257, 266, 267, 269, 271, 277, 279, 281, 287, 292, 320, 321, 324, 346, 392, 393, 400, 401, 402, 403, 404, 405, 411, 413, 416, 424, 426, 431, 434, 439, 452, 453, 454, 461, 463, 468, 471, 474, 476, 477, 479, 481, 485, 490, 491, 495, 498, 499, 500, 503, 504, 505, 506, 507, 508, 510, 518, 519, 520, 525, 526, 528, 530, 537, 539, 540, 542, 547, 554, 555, 560, 561, 562, 563, 564, 565, 566, 602, 609], "lat_0": [230, 239, 242, 257, 266, 267, 281, 407, 416, 474, 476, 479, 480, 482, 483, 484, 488, 490, 498, 499, 507, 508, 515, 525, 526, 560, 561, 562, 564, 565, 566, 567], "lat_0_err": 482, "lat_pnt": [320, 324], "lat_rang": 346, "lat_t": [320, 324], "later": [392, 397, 398, 399, 403, 404, 405, 408, 409, 410, 411, 413, 414, 422, 433, 435, 445, 446, 448, 449, 455, 465, 470, 472, 479, 480, 499, 504, 505, 508, 509, 515, 528, 538], "latest": [128, 189, 282, 318, 395, 399, 413, 418, 419, 423, 427, 456, 464, 473, 476, 479, 480, 481, 488, 492, 501, 539, 555], "latex": [392, 393], "latex_inlin": 459, "latitud": [94, 151, 194, 195, 196, 197, 202, 204, 207, 208, 209, 346, 379, 438, 485, 505, 508, 547, 554, 563], "latpol": 505, "latter": [183, 214, 403, 405, 407, 414, 417, 420, 422, 439, 472, 473, 483, 484, 488, 506, 507, 549, 551, 604, 606], "launch": [426, 428, 453, 605], "laura": [442, 445, 447, 448, 454, 456, 458, 459, 460, 461], "law": [27, 102, 120, 125, 127, 129, 135, 143, 164, 166, 169, 223, 233, 234, 235, 258, 259, 260, 261, 270, 273, 274, 275, 285, 297, 345, 405, 433, 439, 453, 463, 465, 473, 476, 479, 483, 485, 488, 491, 492, 493, 495, 507, 508, 511, 542, 556, 569, 570, 590, 597], "law2": 583, "layer": [87, 91, 404, 411, 412], "layout": [445, 479, 488, 505, 514, 525, 526], "lazi": [88, 100, 103, 106, 110, 111, 279, 327, 453], "lazili": 103, "lazyfitsdata": 441, "lc": [86, 132, 206, 405, 407], "lc_1d": [125, 127, 148, 490, 491, 492, 496], "lc_3d": 490, "lc_estim": 407, "lc_maker_1d": [490, 491, 492], "lc_maker_3d": 490, "lc_new": 491, "le": 90, "lea": 442, "lead": [124, 392, 401, 406, 411, 414, 416, 418, 419, 422, 438, 461, 509, 511, 514, 516, 530, 605], "leak": [472, 551], "leakag": [297, 461, 490], "learn": [151, 156, 392, 409, 413, 423, 426, 428, 430, 454, 468, 470, 474, 481, 482, 483, 485, 496, 498, 499, 501, 505, 508, 509, 511, 514, 520, 528, 605], "least": [43, 44, 137, 146, 392, 395, 397, 401, 483, 496, 554], "leav": [397, 404, 406, 407, 409, 413, 425, 507], "lefaucheur": [451, 452, 453], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 110, 125, 127, 132, 136, 154, 156, 196, 197, 199, 205, 208, 209, 221, 235, 240, 260, 273, 274, 299, 302, 305, 392, 400, 402, 406, 408, 411, 412, 416, 430, 474, 481, 490, 492, 496, 498, 507, 509, 540, 549, 552, 561, 562, 570, 571, 574, 575, 577, 578, 580, 582, 585, 586, 587, 588, 593, 594, 595, 597, 606, 607, 608], "legaci": [392, 453, 454], "legacy_altaz": 85, "legal": [87, 91], "legend": [389, 464, 465, 468, 470, 472, 479, 480, 484, 485, 490, 491, 493, 496, 497, 501, 508, 510, 511, 515, 535, 536, 544, 570, 576, 579, 580, 584, 589], "legend_kwarg": 389, "lemi\u00e8r": 453, "len": [83, 292, 389, 474, 482, 483, 484, 491, 493, 495, 496, 498, 504, 507, 528, 542], "lenain": [453, 454], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 172, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 297, 330, 385, 419, 422, 468, 470, 473, 481, 485, 495, 498, 501, 505, 515, 528, 560], "lengthi": 505, "lennarz": [436, 450, 452], "lepton": 547, "leq": [560, 565, 566], "less": [77, 195, 197, 201, 244, 280, 305, 392, 397, 399, 410, 422, 424, 453, 501, 508, 509, 510, 511], "let": [67, 286, 392, 395, 397, 401, 406, 409, 426, 429, 453, 454, 455, 468, 471, 472, 473, 474, 479, 480, 481, 482, 483, 485, 492, 493, 498, 499, 501, 505, 506, 508, 511, 515, 525, 528, 605], "level": [6, 11, 15, 16, 83, 84, 90, 105, 124, 126, 134, 214, 294, 298, 392, 393, 395, 396, 397, 403, 405, 407, 411, 412, 413, 414, 417, 420, 426, 430, 437, 438, 439, 440, 441, 445, 453, 460, 463, 466, 468, 470, 471, 474, 476, 477, 479, 481, 483, 488, 490, 491, 492, 493, 496, 497, 500, 501, 507, 510, 514, 515, 516, 517, 520, 523, 527, 528, 529, 538, 539, 540, 547, 549, 550, 603, 604, 605, 609], "levelnam": 392, "levmar": [214, 501], "lf": 424, "lgpl": 392, "lgtm": 424, "lhaaso": [55, 57], "li": [120, 124, 179, 398, 422, 464, 474, 477, 483, 500, 509, 513, 604, 607], "lib": [355, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 567, 593], "librari": [87, 91, 221, 392, 397, 398, 402, 412, 413, 419, 431, 466, 470, 508, 509, 514, 520, 526, 530, 539, 542, 603, 605], "licenc": 419, "licens": [419, 430], "lie": [194, 195, 201, 204, 207, 500], "life": [399, 501], "lifetim": [20, 460], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 132, 140, 231, 244, 304, 396, 403, 405, 408, 413, 417, 426, 439, 441, 442, 449, 452, 454, 459, 460, 463, 465, 467, 489, 494, 495, 496, 520, 540, 541, 551, 556, 591, 601, 603], "light_curv": [16, 244, 413, 454, 463, 471, 476, 477, 479, 490, 494, 525, 600], "light_curve_flar": [463, 491, 494], "light_curve_model": 600, "light_curve_simul": [463, 492, 494], "lightcrv_pksb1222": [244, 600], "lightcurv": [71, 73, 74, 75, 77, 78, 121, 127, 132, 139, 140, 141, 142, 148, 205, 206, 244, 301, 302, 304, 401, 403, 408, 411, 414, 417, 426, 437, 439, 440, 441, 445, 451, 452, 453, 454, 456, 457, 459, 460, 463, 489, 490, 491, 494, 500, 520, 537, 542, 600], "lightcurve1": 139, "lightcurve2": 139, "lightcurve_at_energi": 417, "lightcurveconfig": 16, "lightcurveestim": [121, 407, 408, 414, 417, 426, 437, 439, 441, 442, 445, 453, 454, 459, 490, 491, 492, 495, 542], "lightcurvetablemodel": [403, 405], "lightcurvetempl": 403, "lightcurvetemplatemodel": [458, 459], "lightcurvetemplatetemporalmodel": [276, 416, 456, 459, 461, 484, 508, 600], "lightweight": 412, "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 144, 145, 160, 168, 196, 197, 199, 203, 205, 208, 209, 217, 221, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 318, 338, 348, 391, 392, 393, 395, 397, 398, 399, 400, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 422, 423, 425, 426, 430, 436, 445, 447, 448, 452, 453, 455, 456, 458, 459, 464, 465, 468, 470, 471, 472, 473, 477, 484, 485, 493, 496, 497, 499, 501, 503, 505, 509, 510, 511, 514, 515, 520, 521, 525, 527, 528, 530, 531, 538, 542, 547, 555, 566, 603, 604, 605, 606, 607, 608], "likelhood": 404, "likelihood": [100, 102, 103, 106, 111, 124, 125, 126, 127, 129, 134, 136, 137, 146, 221, 222, 248, 293, 314, 315, 392, 398, 401, 404, 405, 408, 410, 413, 414, 415, 417, 422, 426, 433, 435, 436, 439, 446, 449, 452, 454, 455, 460, 461, 468, 470, 471, 472, 474, 481, 485, 490, 491, 493, 499, 500, 501, 504, 509, 511, 515, 525, 526, 530, 538, 540, 542, 580, 603, 604, 606, 607], "likelihood_profil": [403, 435], "likelihood_typ": 440, "likewis": [197, 209], "lima": 120, "lima1983": [513, 540, 604, 607], "lima_map": 477, "lima_maps2": 477, "limamapestim": [414, 441], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 102, 113, 114, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 146, 153, 168, 171, 201, 218, 219, 220, 238, 248, 258, 284, 293, 294, 295, 298, 338, 339, 379, 398, 400, 401, 403, 404, 405, 406, 407, 409, 410, 413, 414, 416, 417, 421, 422, 435, 441, 445, 452, 453, 454, 455, 460, 464, 470, 474, 479, 482, 485, 490, 499, 500, 501, 505, 506, 510, 515, 525, 538, 540, 542, 551, 561, 580, 589, 603, 604, 608], "lin": [19, 20, 201, 205, 206, 209, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 293, 330, 331, 332, 421, 484, 503, 505, 513, 555, 580], "line": [6, 13, 46, 82, 83, 87, 91, 102, 103, 106, 110, 111, 157, 163, 165, 167, 204, 205, 229, 253, 350, 351, 389, 391, 393, 395, 398, 401, 403, 406, 408, 409, 412, 417, 424, 425, 426, 428, 430, 439, 450, 453, 461, 479, 501, 504, 508, 509, 530, 542, 555, 603], "line2d": [204, 229, 253], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 206, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 330, 392, 456, 463, 479, 484, 485, 488, 505, 508, 509, 515, 525, 526, 556, 591, 601], "linear_model": 596, "linearli": [206, 209, 505, 538], "linearsegmentedcolormap": [382, 383], "linearstretch": [382, 383, 610], "lineartemporalmodel": [276, 508, 596], "lineno": 392, "liner": [280, 406], "linestyl": [464, 493, 495, 497, 511, 536, 555, 560, 561], "linewidth": [229, 253, 389, 393, 495, 509], "linhoff": [457, 458, 459, 460, 461], "link": [67, 69, 80, 102, 229, 253, 292, 397, 400, 401, 404, 412, 413, 419, 423, 424, 430, 431, 442, 445, 447, 451, 452, 453, 465, 466, 470, 471, 472, 473, 476, 479, 480, 483, 488, 491, 492, 498, 501, 508, 509, 511, 514, 526, 528, 542, 589, 602], "link_to_nasaad": 393, "linkag": 316, "linkage_kwarg": 316, "linkcheck": 393, "linspac": [83, 155, 196, 197, 199, 205, 208, 209, 214, 483, 485, 493, 501, 503, 505, 511, 554, 560], "lint": [16, 84, 90, 105, 126], "linux": [399, 409, 424, 427, 454, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 605], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 102, 103, 104, 105, 106, 109, 110, 111, 120, 122, 124, 125, 127, 128, 129, 132, 133, 136, 137, 138, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 172, 176, 177, 179, 180, 182, 183, 184, 185, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 339, 349, 350, 351, 353, 381, 385, 386, 388, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 411, 413, 414, 415, 416, 417, 419, 420, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 465, 466, 470, 473, 474, 480, 484, 485, 488, 490, 492, 495, 496, 499, 500, 501, 503, 504, 510, 511, 514, 515, 516, 517, 518, 520, 526, 527, 538, 542, 545, 554, 555, 602, 603, 604, 605], "list_format": [87, 91], "listen": 542, "listenv": 395, "liter": [16, 84, 90, 105, 126, 336], "literatur": [422, 530, 532, 604], "littl": [87, 91, 411, 414, 420, 505, 515, 551, 605], "live": [83, 86, 88, 221, 392, 397, 400, 402, 414, 422, 455, 458, 500, 509], "live_point": [221, 422, 509], "livetim": [67, 88, 89, 106, 107, 111, 166, 188, 190, 191, 398, 464, 466, 470, 471, 473, 481, 483, 484, 488, 492, 498, 499, 503, 505, 515, 516, 528, 538, 542], "livetime_fract": 89, "ljouvin": 398, "ll": [125, 127, 136, 395, 397, 409, 427, 464, 465, 466, 470, 472, 476, 477, 481, 490, 491, 492, 493, 495, 496, 509, 605, 607], "llvm": 430, "ln": [53, 501, 587], "lo": [23, 422, 452], "lo_bnd": 201, "lo_threshold": 153, "load": [66, 67, 83, 86, 87, 91, 100, 102, 103, 106, 110, 129, 131, 170, 176, 194, 195, 196, 197, 207, 326, 392, 448, 451, 453, 459, 471, 473, 476, 477, 483, 484, 488, 492, 493, 496, 506, 514, 515, 517, 525, 528, 539], "load_cta_irf": [455, 459], "load_irf_dict_from_fil": [166, 459, 464, 473, 483, 484, 488, 492, 514], "loc": [87, 91, 209, 385, 493, 535, 536, 544, 570, 576, 579, 580, 584], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 144, 145, 181, 194, 195, 204, 205, 207, 392, 393, 395, 400, 406, 412, 422, 423, 424, 427, 431, 435, 445, 471, 474, 476, 477, 482, 483, 497, 504, 509, 520, 525, 542], "local_dataset": 504, "local_dens": [17, 18, 21, 22, 24, 25, 27, 497], "local_to_glob": 195, "localfold": 11, "localis": 326, "localn": [16, 84, 90, 105, 126], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 140, 154, 155, 161, 166, 169, 207, 347, 395, 400, 406, 410, 414, 419, 420, 426, 428, 459, 461, 464, 473, 483, 484, 488, 492, 498, 516, 517, 539, 555, 605], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 103, 105, 125, 126, 127, 134, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 201, 205, 209, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 285, 288, 295, 296, 299, 305, 329, 330, 332, 377, 387, 404, 408, 412, 422, 432, 449, 456, 460, 463, 465, 471, 473, 474, 476, 477, 479, 480, 481, 484, 488, 490, 491, 492, 495, 497, 499, 501, 503, 504, 505, 508, 509, 511, 515, 516, 523, 525, 526, 542, 544, 554, 555, 556, 569, 581, 589, 590, 597, 604, 605, 606, 607, 608], "log10": 493, "log_": [246, 247, 508, 578], "log_2": 302, "log_dir": [221, 509], "log_en": 508, "log_level": 11, "log_parabola": 468, "log_parabola_norm": 416, "logarithm": [34, 505, 511, 578], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 452, "loggaussian": 403, "logger": [357, 360, 392, 412, 481], "logic": [16, 84, 86, 90, 105, 126, 182, 417, 461, 505, 506], "logical_and": [196, 197, 199, 205, 208, 209], "logical_or": [196, 197, 199, 205, 208, 209, 504], "loglikelihood_dataset": [295, 296], "loglog": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 329, 464, 497, 534, 535, 536], "lognorm": 497, "logo": 424, "logparabola": [403, 579], "logparabolanormspectralmodel": [247, 264, 416, 442, 508, 579], "logparabolaspectralmodel": [214, 246, 264, 416, 465, 468, 470, 472, 480, 498, 501, 508, 572, 578], "logscal": 439, "logspac": [155, 196, 197, 199, 205, 208, 209, 473, 488, 492, 493, 497, 505, 534, 535, 536, 555], "logspir": [33, 38], "loguniform": [248, 422, 509], "loguniformprior": [262, 509], "logz": [422, 509], "logz_b": [422, 509], "logz_singl": [422, 509], "logzerr": [422, 509], "logzerr_b": [422, 509], "logzerr_singl": [422, 509], "logzerr_tail": [422, 509], "lomb": [407, 453], "lon": [16, 47, 91, 94, 96, 103, 106, 110, 112, 117, 124, 129, 131, 136, 154, 155, 161, 166, 169, 172, 196, 197, 199, 202, 205, 207, 208, 209, 225, 226, 230, 237, 239, 242, 255, 257, 266, 267, 269, 271, 277, 279, 281, 320, 321, 324, 346, 392, 393, 403, 406, 411, 416, 438, 461, 471, 474, 476, 477, 479, 481, 485, 490, 491, 495, 498, 499, 500, 503, 504, 505, 508, 510, 515, 525, 526, 528, 540, 554, 555, 560, 561, 562, 563, 564, 565, 566], "lon_0": [230, 239, 242, 257, 266, 267, 281, 407, 416, 474, 476, 479, 480, 482, 483, 484, 488, 490, 498, 499, 507, 508, 515, 525, 526, 560, 561, 562, 564, 565, 566, 567], "lon_0_err": 482, "lon_pnt": [320, 324], "lon_rang": 346, "lon_t": [320, 324], "long": [392, 395, 397, 399, 406, 408, 411, 413, 415, 418, 420, 422, 447, 456, 465, 498, 509, 520, 521, 554], "longer": [303, 392, 398, 399, 406, 407, 409, 413, 427, 445, 448, 453, 454, 456, 459, 466, 473, 490], "longest": 200, "longitud": [68, 94, 151, 194, 195, 196, 197, 202, 204, 207, 208, 209, 346, 379, 406, 485, 505, 508, 547, 554, 563], "lonpol": 505, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 103, 106, 110, 111, 127, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 348, 392, 394, 395, 397, 404, 406, 407, 409, 411, 413, 416, 422, 430, 453, 466, 470, 471, 473, 474, 476, 477, 479, 481, 483, 485, 488, 490, 492, 493, 499, 503, 505, 508, 514, 515, 518, 520, 525, 528, 530, 539, 542, 605], "look_up": 451, "lookup": 202, "loop": [87, 91, 339, 405, 459, 470, 498, 505, 516, 525, 542], "lopez": [231, 453, 459, 570], "lopez21": [232, 465, 570], "lopez_2021": 232, "lorim": 35, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 392, "loss": [52, 604], "lost": [100, 103, 106, 110, 111, 542, 555], "lot": [82, 392, 395, 397, 398, 399, 400, 403, 405, 406, 408, 413, 424, 434, 436, 437, 445, 453, 454, 471, 481, 515, 525, 526, 552], "low": [87, 91, 153, 201, 221, 341, 392, 393, 395, 396, 401, 423, 451, 453, 463, 466, 470, 474, 481, 483, 499, 506, 507, 509, 514, 515, 520, 525, 527, 529, 549, 606], "low_zenith": 510, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 125, 127, 153, 182, 201, 203, 206, 221, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 392, 406, 411, 413, 420, 485, 504, 509, 526], "lower_error": 127, "lowest": [411, 496, 509], "lp": [246, 247, 416, 468, 498, 508, 572], "lp_norm": 579, "lss": 470, "lst": [399, 514], "lsw": 423, "lt": [392, 419, 447, 456, 565, 566], "ltcube": [195, 196, 197, 199, 208, 209, 505], "lts_author": 419, "luca": [435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 448, 456, 459], "lui": 455, "luigi": 450, "luminos": [41, 46, 51, 52, 53, 54, 254], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 536], "lvtm": 492, "lw": [470, 472, 474, 481, 493, 501, 555, 560, 562], "ly": [445, 507], "lyne": 37, "l\u00e9a": [435, 437, 438, 439, 442, 450, 451, 452, 453, 454], "l\u00f3pez": 453, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 112, 117, 132, 194, 195, 196, 197, 199, 205, 207, 208, 209, 315, 392, 393, 395, 406, 423, 425, 426, 427, 428, 484, 497, 501, 503, 505, 508, 523, 547, 551, 553, 554, 555, 567, 605, 608], "m2": [103, 156, 176, 465, 471, 473, 476, 477, 479, 481, 488, 499, 503, 504, 514, 525, 526], "m5oikaki": 495, "m_": [20, 50, 52, 53], "m_3fhl_gc": 505, "m_4d": 505, "m_allski": 505, "m_b": 606, "m_cube": 505, "m_ejecta": [52, 535], "m_gc": 505, "m_hpx": 505, "m_i": 606, "m_iem_10gev": 505, "m_iem_cutout": 505, "m_iem_gc": 505, "m_iem_interp": 505, "m_sub": 505, "m_sun": 535, "m_wc": [196, 197, 199, 205, 208, 209, 505], "ma": [87, 91, 120, 124, 464, 474, 477, 500, 513, 604, 607], "mac": [87, 91, 392, 399, 424, 452, 605], "machin": [395, 399, 400, 405, 409, 424, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 479], "maco": [409, 454], "macport": [409, 452, 454], "made": [176, 183, 204, 207, 218, 220, 229, 253, 318, 350, 351, 392, 395, 397, 408, 411, 414, 417, 418, 419, 445, 456, 457, 461, 470, 474, 479, 480, 504, 514, 555, 567, 604], "madrid": 402, "magenta": [389, 482, 510], "magic": [97, 426, 431, 447, 453, 456, 472, 515, 604], "magic_ecpl": 286, "magic_lp": [286, 472], "magma": 509, "magnet": [42, 50, 51, 54, 580], "magnetic_field": [50, 51, 54], "magnitud": [330, 483], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 102, 105, 126, 127, 221, 392, 393, 395, 400, 401, 405, 406, 408, 409, 412, 418, 419, 424, 425, 427, 432, 433, 465, 476, 477, 483, 500, 514, 541, 542, 554, 562, 580, 602, 605, 609], "mail": [393, 395, 397, 399, 406, 408, 411, 414, 416, 419, 423, 429, 434, 435, 528, 605], "mailmap": [445, 456], "main": [91, 103, 110, 124, 136, 392, 395, 397, 398, 400, 404, 407, 408, 409, 412, 413, 417, 419, 423, 424, 435, 441, 445, 448, 453, 459, 471, 482, 483, 485, 488, 495, 498, 503, 505, 506, 507, 509, 523, 525, 526, 537, 539, 543, 605, 607], "mainli": [392, 402, 403, 406, 412, 414, 505, 547], "maint": 461, "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 392, 394, 409, 411, 413, 414, 418, 424, 454, 504], "mainten": [392, 399, 419, 424, 436, 458], "major": [204, 230, 239, 242, 392, 396, 397, 401, 409, 418, 447, 453, 454, 560, 561, 562], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 102, 105, 126, 171, 172, 176, 177, 178, 179, 181, 182, 183, 186, 187, 192, 193, 195, 196, 197, 200, 201, 204, 206, 207, 208, 209, 221, 280, 348, 350, 351, 362, 391, 393, 394, 397, 398, 399, 402, 404, 406, 408, 409, 410, 411, 413, 414, 417, 419, 420, 424, 426, 428, 430, 433, 434, 436, 439, 440, 445, 447, 450, 451, 452, 453, 456, 458, 461, 463, 465, 466, 470, 472, 473, 477, 479, 483, 488, 490, 502, 503, 504, 505, 508, 512, 514, 515, 520, 523, 528, 539, 542, 547, 605, 606], "make_background": [176, 183], "make_background_fit": 173, "make_background_scal": 173, "make_base_catalog_galact": [453, 532], "make_concentric_annulus_sky_region": 485, "make_contour": 501, "make_count": [176, 177, 178, 183], "make_counts_off": [177, 178], "make_cub": 171, "make_dataset": 172, "make_default_fov_background_model": 173, "make_edisp": [176, 183], "make_edisp_kernel": [176, 183], "make_edisp_kernel_map": 503, "make_edisp_map": 155, "make_effective_livetime_map": [461, 504], "make_exclusion_mask": 173, "make_exposur": [176, 183], "make_exposure_irf": [176, 183], "make_imag": 454, "make_lupton_rgb": 387, "make_map_background_irf": 448, "make_map_count": 398, "make_map_cutout": 398, "make_map_exposure_reco_energi": 398, "make_map_exposure_true_energi": [155, 398, 503], "make_map_fov_background": 398, "make_map_hadron_accept": 398, "make_map_ring_background": 398, "make_map_xxx": 398, "make_maps_off": 181, "make_mask_bkg_invalid": 182, "make_mask_energy_aeff_default": 182, "make_mask_energy_aeff_max": 182, "make_mask_energy_bkg_peak": 182, "make_mask_energy_edisp_bia": 182, "make_mask_offset_max": 182, "make_mean_edisp": 455, "make_mean_psf": 455, "make_meta_t": [176, 183], "make_model": 411, "make_more_random_stuff": 392, "make_observation_time_map": 504, "make_orthogonal_rectangle_sky_region": [129, 485], "make_path": [127, 480, 499, 500], "make_pixel_region": 406, "make_psf": [166, 176, 183, 455], "make_psf_map": 503, "make_quant": 362, "make_random_stuff": 392, "make_region": 406, "make_sampl": 509, "make_sky_coord": 406, "make_some_random_stuff": 392, "make_theta_squared_t": [445, 513], "makefil": [424, 449], "maker": [6, 155, 166, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 398, 405, 407, 419, 439, 441, 442, 447, 456, 459, 460, 463, 464, 470, 472, 473, 477, 481, 483, 484, 488, 492, 493, 495, 499, 502, 503, 506, 512, 513, 516, 520, 547, 552, 604], "maker_fov": 526, "maker_safe_mask": [481, 488, 526], "mamba": [395, 425, 426, 447], "manag": [87, 91, 218, 220, 229, 253, 338, 369, 391, 392, 395, 400, 408, 409, 411, 415, 419, 420, 423, 445, 450, 452, 456, 460, 505, 507, 605], "manconi": 437, "mandatori": [182, 395, 405, 419, 484, 508, 509, 547], "mandatory_keyword": 503, "mani": [87, 91, 330, 392, 393, 395, 397, 399, 401, 404, 406, 407, 408, 409, 412, 413, 414, 419, 422, 424, 430, 436, 437, 442, 445, 451, 452, 453, 454, 455, 458, 459, 466, 470, 473, 482, 488, 496, 500, 505, 509, 517, 520, 530, 538, 540, 552, 555, 602, 603, 604, 605, 609], "manifest": 402, "manipul": [87, 91, 417, 420, 447, 511, 554], "manner": [458, 459], "manpow": [397, 409], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 399, 404, 415, 423, 542, 550, 605, 606], "manuel": [446, 449, 450], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 83, 84, 87, 90, 91, 96, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 131, 132, 136, 137, 138, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 226, 229, 230, 237, 239, 242, 244, 253, 255, 257, 266, 267, 269, 271, 277, 278, 279, 281, 282, 290, 297, 340, 379, 380, 385, 387, 389, 391, 392, 393, 395, 399, 403, 404, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 420, 422, 426, 430, 434, 435, 437, 438, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 459, 460, 461, 463, 464, 466, 470, 471, 472, 473, 475, 478, 479, 482, 483, 484, 485, 486, 487, 490, 491, 492, 495, 496, 498, 499, 500, 502, 504, 508, 509, 512, 513, 514, 515, 516, 520, 521, 522, 525, 526, 527, 530, 537, 538, 541, 542, 546, 547, 548, 549, 550, 551, 552, 559, 561, 562, 563, 564, 567, 600, 603, 604, 610], "map_": [210, 211, 380, 387], "map_4d": 505, "map_analysi": 411, "map_cent": 281, "map_coord": [83, 155, 166, 169], "map_dataset": [404, 493], "map_dataset_empti": 493, "map_dataset_mak": 493, "map_dataset_on_off": 493, "map_edisp": [112, 117], "map_in": [196, 197, 199, 205, 208, 209], "map_out": [106, 111, 154, 155, 161, 166, 169, 196, 197, 199, 205, 208, 209], "map_result": 474, "map_select": [16, 471, 476, 477, 479, 525], "map_typ": [196, 197, 199, 205, 208, 209, 505, 554], "mapax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 442, 445, 447, 505], "mapaxi": [19, 20, 26, 103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 125, 127, 129, 137, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 176, 186, 187, 192, 193, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 387, 393, 407, 417, 436, 437, 439, 442, 445, 455, 459, 461, 464, 466, 470, 472, 473, 480, 481, 483, 484, 488, 491, 492, 493, 495, 499, 503, 504, 505, 508, 513, 515, 516, 526, 546, 549, 551, 552, 554, 555], "mapcoord": [83, 155, 166, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 255, 453, 454, 505, 555, 563], "mapdataset": [98, 99, 101, 104, 106, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 124, 129, 132, 136, 143, 144, 145, 146, 147, 171, 172, 173, 176, 177, 181, 182, 229, 237, 253, 385, 388, 405, 407, 414, 415, 435, 436, 437, 438, 439, 440, 441, 442, 445, 459, 460, 461, 474, 476, 480, 481, 482, 484, 485, 488, 490, 492, 493, 500, 501, 504, 506, 507, 515, 525, 526, 540, 542, 549, 552, 604, 606, 607], "mapdataseteventsampl": [93, 109, 439, 440, 441, 448, 459, 461, 483, 484], "mapdatasetmak": [166, 174, 183, 405, 439, 442, 445, 448, 456, 481, 483, 484, 488, 493, 503, 504, 516, 525, 526, 542, 547, 549, 552], "mapdatasetmetadata": [103, 106, 420], "mapdatasetoff": 447, "mapdatasetonoff": [98, 103, 110, 111, 120, 124, 143, 171, 177, 181, 439, 440, 442, 445, 458, 459, 477, 493, 504, 538, 552, 606], "mapdatasetsampl": 405, "mapevalu": [403, 404, 438, 439, 442, 445, 456, 457, 458, 460], "mapeventsampl": [437, 438], "mapfit": [403, 404, 435, 454, 455], "mapgeom": [398, 455, 456], "mapmak": [176, 408, 435, 439, 454], "mapmakerob": [438, 439], "mappabl": 417, "mappanelplott": [414, 610], "mapper": [326, 412], "mappingintstrani": [16, 84, 90, 105, 126], "mappingnamespac": [16, 84, 90, 105, 126], "maps_off": 181, "mar": [409, 432, 457], "march": [399, 401, 432, 434, 455], "marco": [17, 19, 20, 21, 22, 24, 25, 26, 27], "margin": [101, 102, 106, 111, 116, 119, 195, 197, 207, 209, 229, 253, 269, 403, 506, 560, 604, 606], "marion": [435, 454], "mark": [91, 392, 403, 423], "marker": [102, 103, 106, 110, 111, 229, 253, 464, 466, 470, 472, 474, 481, 490, 491, 492, 496, 528], "markerfacecolor": [103, 106, 110, 111], "markers": [102, 103, 106, 110, 111, 229, 253, 511], "markov": [422, 604], "mask": [83, 87, 91, 99, 102, 103, 106, 110, 111, 124, 128, 129, 131, 132, 133, 136, 154, 155, 161, 166, 169, 171, 173, 178, 179, 180, 181, 182, 184, 194, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 218, 220, 229, 253, 269, 385, 404, 421, 439, 441, 442, 443, 445, 448, 454, 456, 457, 458, 459, 461, 463, 464, 466, 479, 481, 502, 504, 507, 512, 516, 520, 538, 549, 551, 554, 604], "mask_1": 510, "mask_2": 510, "mask_bright": 498, "mask_contains_region": 209, "mask_data": 506, "mask_energi": [499, 506], "mask_fit": [102, 103, 106, 110, 111, 116, 119, 404, 439, 456, 472, 477, 479, 493, 499, 501, 506, 511, 538], "mask_fit_imag": [103, 106, 110, 111], "mask_imag": [103, 106, 110, 111], "mask_map": [195, 207, 463, 506, 512], "mask_map_catalog": 506, "mask_nearest_posit": [196, 197, 199, 205, 208, 209], "mask_off": 493, "mask_roi": 498, "mask_saf": [102, 103, 106, 107, 110, 111, 182, 404, 439, 499, 504, 506, 538], "mask_safe_edisp": [103, 106, 110, 111, 461], "mask_safe_imag": [103, 106, 110, 111, 154, 155, 161, 166, 169], "mask_safe_psf": [103, 106, 110, 111], "mask_spac": 499, "mask_valid": 102, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 405, 441, 460, 497, 509, 530, 564], "massdm": [19, 20, 497], "master": [398, 399, 406, 423, 424, 433], "match": [83, 87, 91, 109, 114, 134, 194, 195, 197, 200, 201, 202, 204, 207, 209, 211, 294, 298, 392, 400, 453, 455, 460, 470, 473, 492, 500, 515, 537, 554], "match_by_nam": 202, "materi": 422, "math": [239, 391], "mathcal": [501, 538], "mathemat": [508, 511], "mathieu": [412, 445, 448], "mathrm": [19, 20, 23, 103, 110, 156, 497, 501, 538, 606, 608], "mathworld": [345, 346], "matomo": 461, "matplotlib": [19, 20, 26, 66, 67, 83, 131, 150, 153, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 205, 208, 209, 212, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 369, 380, 381, 382, 385, 386, 387, 389, 391, 392, 393, 406, 409, 419, 427, 430, 437, 445, 447, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 525, 526, 528, 534, 535, 536, 542, 544, 545, 546, 548, 551, 560, 562, 566, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 609, 610], "matric": 212, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 112, 117, 153, 154, 155, 158, 212, 213, 214, 218, 229, 253, 294, 298, 385, 409, 410, 421, 455, 456, 459, 461, 501, 503, 538, 540, 546], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 406, 413, 421, 454, 459, 460, 463, 502, 504, 512, 515, 520, 531, 603, 605], "matthew": [399, 451, 453, 454], "matthia": [453, 454], "mattox": 474, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 103, 113, 114, 128, 130, 132, 168, 172, 176, 178, 182, 209, 217, 218, 219, 220, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 284, 346, 400, 408, 416, 421, 430, 441, 442, 443, 445, 447, 459, 461, 465, 466, 470, 471, 472, 473, 476, 477, 479, 480, 481, 482, 485, 488, 490, 491, 492, 493, 495, 496, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 515, 516, 525, 526, 528, 530, 549, 551, 552, 560, 580, 583, 589, 607], "max_ag": [45, 532], "max_column": [87, 91], "max_energi": 496, "max_lin": [87, 91], "max_nit": [134, 136, 461], "max_offset": 408, "max_percentil": 83, "max_radiu": [164, 166, 169, 207, 515], "max_region_numb": [179, 551], "max_valu": 378, "max_width": [87, 91], "maxcal": 214, "maxclust": 316, "maxfev": 501, "maxim": [45, 82, 91, 113, 114, 134, 136, 182, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 422, 457, 458, 459, 460, 461, 551], "maxima": [144, 218, 220], "maximilian": [445, 447, 448, 457, 458, 459, 460, 461], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 125, 127, 130, 166, 169, 171, 176, 179, 182, 188, 189, 191, 195, 201, 206, 207, 217, 219, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 284, 294, 298, 345, 347, 350, 378, 389, 395, 398, 406, 447, 468, 474, 496, 500, 501, 504, 505, 509, 511, 516, 526, 532, 540, 551, 580, 603, 604, 607], "maximum_likelihood": [422, 509], "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392, 400, 402, 403, 415, 509], "mb": [194, 195, 204, 207, 400, 426, 428, 463, 469, 478, 487, 494, 512, 514, 515, 517, 519, 522, 524, 529, 557, 568, 590, 601], "mbox": [103, 110], "mc": 410, "mc_id": [83, 402, 405, 447, 483, 514], "mcerp": 410, "mckee": [53, 460], "mcmc": [410, 413, 422, 435, 440, 442, 509, 580, 604], "mcmc_sampl": [413, 437], "mcra18ma": 495, "md": [16, 84, 90, 105, 126, 395, 413, 419], "md5": 412, "mdm": [26, 497], "mean": [42, 68, 87, 91, 96, 102, 103, 129, 131, 153, 154, 155, 158, 161, 166, 169, 238, 240, 244, 280, 297, 301, 317, 336, 392, 393, 395, 397, 399, 405, 406, 408, 409, 412, 416, 421, 422, 427, 430, 442, 451, 470, 473, 474, 484, 496, 500, 501, 504, 508, 509, 510, 511, 515, 516, 528, 561, 577, 605, 606], "meaning": 508, "meant": [398, 459, 464, 473, 476, 479, 481, 488, 492, 514], "measur": [27, 67, 102, 106, 111, 131, 134, 137, 146, 201, 286, 294, 295, 296, 298, 301, 302, 303, 304, 306, 308, 309, 312, 315, 398, 406, 411, 417, 424, 433, 438, 446, 452, 454, 465, 466, 470, 472, 473, 477, 480, 482, 485, 488, 490, 491, 496, 498, 513, 515, 526, 528, 540, 547, 549, 552, 603, 604, 607, 608], "mechan": [400, 410, 412, 417, 420], "media": 419, "median": [19, 20, 26, 83, 166, 169, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 422, 430, 493, 509, 510, 515], "median_zenith": 510, "medium": [45, 52, 392, 401], "meeseeksdev": 392, "meeseeksmachin": 392, "meet": [229, 253, 318, 398, 400, 413, 418, 424], "megabyt": [194, 195, 204, 207], "mem": [463, 469, 478, 487, 494, 512, 519, 522, 524, 529, 557, 568, 590, 601], "member": [83, 393, 397, 406, 419, 420, 453, 459, 500, 514, 517], "memo": [153, 201], "memori": [87, 88, 91, 92, 100, 103, 104, 106, 109, 110, 111, 194, 195, 204, 207, 277, 279, 281, 369, 392, 402, 404, 405, 408, 415, 417, 439, 445, 460, 473, 488, 542, 604], "memoryobserv": 88, "mender": [458, 459, 460], "mention": [59, 148, 392, 393, 395, 399, 400, 404, 406, 409, 411, 413, 418, 419, 423, 424, 503, 507, 508, 511, 530, 604], "mentor": [395, 413], "mere": 402, "merg": [67, 86, 87, 91, 198, 201, 229, 253, 358, 392, 395, 396, 397, 398, 405, 406, 407, 411, 413, 418, 419, 423, 424, 434, 435, 436, 437, 438, 439, 440, 441, 442, 450, 451, 452, 453, 454, 455], "merge_equ": 86, "mergesort": [87, 91], "mess": 393, "messag": [102, 213, 215, 216, 395, 406, 408, 412, 416, 422, 443, 458, 466, 468, 470, 471, 472, 479, 480, 481, 492, 493, 495, 500, 501, 515, 525, 526, 542, 605], "met": [86, 372, 459, 491, 495, 604], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 103, 104, 106, 108, 109, 110, 111, 125, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 183, 196, 197, 199, 205, 208, 209, 277, 278, 281, 282, 328, 372, 373, 374, 375, 402, 405, 406, 407, 417, 420, 423, 441, 442, 453, 457, 459, 460, 483, 493, 505, 510, 514, 516, 539, 540, 600], "meta_t": [100, 102, 103, 106, 110, 111, 176, 183, 417, 420, 442, 466, 473, 504, 538], "metaattribut": [87, 91], "metaclass": 412, "metadata": [83, 84, 85, 87, 88, 90, 91, 105, 107, 125, 126, 127, 150, 151, 152, 156, 157, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 373, 396, 398, 409, 412, 460, 471, 476, 477, 479, 483, 508, 525, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "metadata_fits_export_kei": [84, 90, 105, 126], "metadatabas": 420, "metadatabasemodel": 420, "metapackag": 409, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 298, 304, 306, 316, 326, 330, 334, 338, 339, 340, 365, 379, 381, 391, 392, 395, 398, 401, 402, 403, 406, 407, 408, 410, 411, 412, 413, 415, 417, 419, 420, 422, 426, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 464, 466, 468, 470, 471, 472, 474, 476, 477, 479, 480, 481, 482, 483, 484, 488, 491, 493, 495, 497, 498, 499, 500, 501, 503, 504, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 525, 526, 528, 537, 539, 541, 542, 546, 549, 551, 552, 553, 555, 578, 593, 602, 603, 604, 605, 607], "method_kwarg": [338, 339], "methoda": 437, "metric": 316, "metropoli": 422, "mev": [74, 77, 83, 150, 151, 152, 156, 275, 464, 465, 473, 476, 479, 481, 488, 492, 493, 498, 503, 505, 508, 514, 515, 528, 589], "meval": 562, "mexico": 516, "meyer": [250, 286, 480, 604], "meyer2010": 604, "mgtime": 407, "mi": 547, "michael": [458, 460], "michel": 461, "mid": [113, 448, 459, 514], "middl": [381, 408], "midpoint": 88, "might": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 184, 201, 214, 392, 397, 403, 404, 406, 409, 411, 417, 419, 420, 422, 423, 426, 428, 435, 470, 491, 493, 499, 504, 506, 515, 516, 520, 521, 528, 530, 538, 542, 549, 555, 605, 607], "migra": [103, 106, 110, 111, 155, 158, 163, 187, 408, 483, 484, 503, 547], "migra_axi": [103, 106, 110, 111, 115, 155, 157, 158, 483, 484, 503, 504], "migrad": [102, 214, 466, 468, 470, 471, 472, 479, 480, 481, 493, 495, 500, 501, 515, 525, 526], "migrad_opt": [214, 501], "migrat": [103, 106, 110, 111, 115, 157, 158, 163, 401, 438, 445, 454, 479, 483, 504, 546, 547], "milagro": [97, 383, 610], "mileston": [401, 423], "milki": [33, 38, 433, 532], "miller": [87, 91], "million": [392, 420], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 103, 128, 130, 132, 148, 176, 217, 218, 219, 220, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 284, 302, 346, 407, 408, 416, 421, 430, 445, 453, 461, 465, 466, 470, 471, 472, 473, 476, 477, 479, 480, 481, 482, 485, 488, 490, 491, 492, 493, 495, 496, 498, 499, 501, 503, 504, 505, 508, 509, 510, 511, 515, 525, 526, 528, 530, 551, 580, 583, 589], "min_count": 173, "min_dist": [144, 145, 179, 474, 481, 551], "min_distance_input": [179, 551], "min_energi": 496, "min_ess": 221, "min_npix": [154, 155, 161, 166, 169, 207, 209], "min_npred_background": 173, "min_num_live_point": 422, "min_pix": 461, "min_signific": 407, "min_significance_lc": 407, "min_valu": 378, "minaya": 455, "mind": [395, 413, 488, 501], "mini": 413, "miniconda": 425, "minim": [19, 20, 26, 113, 114, 135, 196, 197, 199, 204, 205, 208, 209, 210, 214, 223, 224, 226, 227, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 254, 255, 256, 257, 258, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 292, 404, 407, 416, 420, 422, 447, 457, 459, 464, 483, 499, 501, 511, 526, 542, 551, 552, 555, 603, 608], "minima": [218, 220, 422, 509, 511], "minimis": [492, 509, 510], "minimmum": [154, 155, 161, 166, 169, 207, 209], "minimum": [19, 20, 26, 47, 100, 124, 125, 127, 130, 135, 140, 144, 145, 148, 149, 171, 173, 179, 201, 204, 206, 216, 217, 219, 221, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 284, 288, 293, 299, 302, 318, 345, 347, 350, 378, 387, 409, 422, 447, 453, 470, 474, 483, 500, 501, 505, 509, 511, 515, 540, 542, 551, 580, 608], "mino": [214, 501], "minor": [392, 397, 412, 413, 416, 418, 444, 457, 561, 562], "minos_contour": [437, 455], "minu": [158, 493], "minuit": [102, 122, 214, 215, 216, 292, 403, 410, 439, 454, 455, 459, 466, 468, 470, 471, 472, 479, 480, 481, 493, 495, 500, 501, 509, 515, 525, 526], "minuit_opt": 501, "minut": [413, 424, 453, 465, 468, 470, 471, 474, 477, 479, 480, 481, 482, 483, 485, 490, 491, 492, 493, 495, 497, 499, 500, 501, 504, 507, 509, 511, 525, 526], "mireia": [456, 461], "mirror": 193, "misc": [433, 446, 450, 451, 452], "miss": [82, 87, 91, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 392, 395, 400, 401, 402, 403, 406, 413, 414, 417, 443, 445, 447, 453, 458, 461, 505, 547], "mission": [83, 459, 604], "mistak": [397, 418], "mix": [391, 392, 408, 412, 499, 505], "mixin": [87, 91], "mjd": [86, 94, 127, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 373, 375, 393, 458, 459, 474, 483, 484, 490, 491, 492, 495, 496, 505, 508, 539, 593, 594, 595, 596, 597, 598, 599, 600, 609], "mjdref": [474, 505], "mjdreff": [94, 372, 375, 484], "mjdrefi": [94, 372, 375, 484], "mkdir": [408, 470, 471, 479, 480, 483, 525, 526], "mkn": [528, 604], "mkn_421_3fhl": 528, "mncontour": 214, "mnt": 456, "mock": 482, "mock_dl4": 482, "modal": 509, "mode": [16, 84, 85, 87, 90, 91, 94, 103, 105, 106, 110, 126, 130, 154, 155, 161, 166, 169, 172, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 279, 420, 422, 440, 453, 456, 460, 492, 509], "model": [1, 6, 15, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 114, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 143, 146, 147, 150, 156, 157, 164, 165, 166, 167, 169, 173, 176, 189, 196, 197, 199, 205, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 307, 310, 315, 388, 391, 392, 393, 396, 397, 398, 404, 405, 407, 408, 410, 412, 413, 414, 417, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 467, 468, 473, 474, 477, 482, 485, 488, 493, 500, 502, 503, 504, 505, 506, 512, 515, 516, 527, 530, 531, 537, 538, 540, 542, 543, 547, 549, 550, 557, 568, 590, 601, 603, 604, 607, 608], "model1": [224, 570, 572, 576, 579, 581, 584], "model2": [224, 465, 492, 570, 572, 576, 579, 581, 584], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 471], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [508, 572], "model_best": 465, "model_best_joint": 470, "model_best_stack": 470, "model_bin_": 495, "model_bin_0": 495, "model_bkg": 499, "model_computed_field": [16, 84, 90, 105, 126], "model_config": [16, 84, 90, 105, 126, 476, 525], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 105, 126], "model_copi": [16, 84, 90, 105, 126, 479, 508], "model_dump": [16, 84, 90, 105, 126], "model_dump_json": [16, 84, 90, 105, 126], "model_extra": [16, 84, 90, 105, 126], "model_field": [16, 84, 90, 105, 126], "model_fields_set": [16, 84, 90, 105, 126], "model_fit": 492, "model_in_bin": 495, "model_joint": 479, "model_json_schema": [16, 84, 90, 105, 126], "model_manag": [463, 507, 512], "model_nam": [103, 106, 110, 111, 229, 253, 388, 499], "model_parametrized_nam": [16, 84, 90, 105, 126], "model_plot": 482, "model_post_init": [16, 84, 90, 105, 126], "model_prior": 511, "model_read": 511, "model_rebuild": [16, 84, 90, 105, 126], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [473, 488, 492], "model_spectrum": 508, "model_str": 471, "model_typ": [229, 237, 251, 253, 269, 279, 292, 416, 507], "model_valid": [16, 84, 90, 105, 126], "model_validate_json": [16, 84, 90, 105, 126], "model_validate_str": [16, 84, 90, 105, 126], "model_weak": 511, "model_weak_prior": 511, "model_without_nam": 508, "modelbas": [237, 262, 269, 271, 272, 279, 283, 421], "modeldm": [19, 20], "modelevalu": 403, "modeling_2d": [463, 476, 478], "modelmetadata": 420, "modelmodel_dump": [16, 84, 90, 105, 126], "modelmodel_dump_json": [16, 84, 90, 105, 126], "models_3fhl": 507, "models_4fgl_roi": 498, "models_as_dict": [16, 84, 90, 105, 126], "models_diffus": 483, "models_fil": [16, 471, 476, 477, 479, 525], "models_fit": 488, "models_gc": 507, "models_gp": 514, "models_joint": 479, "models_or": 507, "models_read": 508, "models_select": 507, "models_stack": 479, "models_yaml": 508, "modelsmetadata": 420, "modern": [87, 91, 410], "modernis": [409, 439], "modest": [392, 561], "modif": [16, 84, 87, 90, 91, 105, 126, 392, 395, 412, 415, 422, 423, 456], "modifi": [22, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 103, 110, 127, 129, 132, 136, 172, 214, 338, 363, 389, 402, 404, 408, 415, 419, 420, 422, 440, 442, 443, 445, 447, 455, 458, 459, 461, 465, 471, 484, 504, 506, 511, 516, 525, 540, 555, 609], "modul": [268, 392, 393, 397, 401, 408, 414, 433, 435, 441, 453, 492, 498, 500, 504, 507, 530, 531, 532, 533, 580, 598, 609], "modular": [398, 412], "mohanti": 102, "mohrmann": [408, 434, 435, 436, 452, 453, 454, 457, 459, 461, 604], "mohrmann2019": 604, "moment": [15, 51, 54, 86, 95, 269, 367, 398, 406, 408, 409, 412, 413, 418, 419, 503, 505], "moncar": [214, 501], "mongodb": 412, "monitor": [405, 509, 514, 542], "monkei": 392, "mono": [400, 509], "monoton": 201, "mont": [410, 422, 547, 604], "montecarlo": [104, 109, 214], "month": [78, 395, 401, 406, 409, 411, 413, 418, 423, 427, 433, 434, 435, 436, 437, 446, 449, 450, 451, 452, 453, 454, 455], "monthli": [401, 420, 426, 455], "moor": 24, "morcuend": [455, 458, 460, 461], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 102, 103, 106, 110, 111, 137, 144, 146, 153, 182, 196, 197, 199, 208, 209, 221, 223, 224, 225, 226, 227, 228, 230, 231, 233, 235, 236, 239, 240, 241, 242, 243, 244, 245, 247, 254, 255, 256, 257, 258, 260, 261, 266, 267, 268, 270, 273, 274, 275, 281, 282, 299, 305, 326, 366, 392, 393, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 430, 439, 440, 441, 442, 445, 452, 454, 455, 459, 461, 465, 466, 470, 472, 474, 477, 479, 483, 484, 492, 495, 496, 497, 499, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 520, 528, 538, 539, 540, 542, 551, 552, 554, 555, 561, 602, 603, 605, 607, 609], "moreov": [408, 498, 504, 538], "morpholog": [122, 405, 463, 486, 487, 520], "morphologi": [50, 52, 122, 403, 405, 416, 433, 450, 452, 466, 476, 482, 483, 484, 488, 498, 504, 556], "mosaic": 398, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 120, 127, 221, 391, 392, 393, 395, 397, 398, 399, 400, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 424, 426, 427, 445, 452, 453, 455, 456, 459, 460, 476, 477, 485, 490, 492, 498, 500, 501, 503, 504, 505, 506, 509, 514, 515, 520, 521, 528, 530, 540, 541, 542, 547, 549, 555, 602, 604, 605, 608], "mostli": [56, 69, 318, 392, 393, 398, 399, 400, 401, 406, 408, 411, 413, 414, 417, 418, 420, 424, 445, 453, 498, 504, 517, 528, 607, 609], "motion": [45, 322], "motiv": [182, 397, 399, 400, 406, 409, 411, 423, 508, 542], "move": [292, 397, 398, 399, 400, 403, 406, 411, 413, 414, 417, 423, 429, 435, 436, 438, 439, 440, 441, 445, 446, 450, 451, 453, 454, 455, 456, 473], "move_axi": 459, "movement": 419, "mpatch": 485, "mpg": 67, "mpi": [67, 422], "mpl": 392, "mpl_check_plot": 392, "mpl_kwarg": [470, 481, 485], "mpl_normal": [382, 383, 610], "mpl_plot_check": 392, "mpl_style": 453, "mpocfzxg": 495, "msg": [464, 473, 476, 479, 481, 488, 492, 514], "msh": [477, 498, 504], "msh15": 517, "mst": 514, "mu": [26, 238, 294, 298, 299, 385, 421, 465, 497, 511, 546, 547, 607], "mu_": [299, 305, 606, 607, 608], "mu_background": 605, "mu_bkg": [106, 111, 294, 309, 315, 430, 605, 607], "mu_off": 607, "mu_on": [299, 305, 607], "mu_sig": [298, 309, 315, 477, 606, 607], "mu_x": 607, "much": [197, 221, 392, 398, 403, 406, 408, 411, 413, 422, 438, 445, 473, 479, 485, 493, 509, 511, 515, 528, 562], "mul": [26, 465, 497, 508, 570, 576, 579, 581, 584, 589], "multi": [87, 91, 195, 207, 401, 406, 421, 439, 442, 446, 453, 463, 468, 474, 486, 487, 499, 501, 503, 508, 510, 515, 520, 540, 542, 554, 603, 604], "multibeam": 35, "multicompon": 461, "multidimension": [398, 408, 421, 460, 500, 518, 520, 547, 603], "multinorm": 410, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 102, 103, 106, 109, 110, 111, 114, 116, 119, 136, 144, 170, 196, 197, 199, 205, 208, 209, 214, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 392, 393, 398, 401, 404, 405, 406, 408, 410, 414, 415, 417, 421, 422, 426, 435, 442, 443, 445, 453, 459, 460, 461, 472, 479, 491, 498, 499, 500, 504, 505, 506, 508, 509, 515, 540, 554, 580, 589, 602, 603, 604, 605, 610], "multipli": [19, 20, 26, 127, 209, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 238, 239, 240, 242, 244, 246, 247, 248, 250, 253, 254, 255, 256, 258, 259, 260, 262, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 284, 290, 297, 307, 310, 318, 465, 474, 477, 493, 497, 508, 570, 607], "multiprocess": [13, 93, 128, 129, 132, 136, 172, 333, 338, 339, 439, 459, 460], "multithread": 13, "multivari": 410, "multivariategaussianprior": 421, "multiwavelength": 231, "muon": 510, "muoneff": 510, "mur": [26, 497], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 88, 91, 102, 103, 106, 107, 111, 112, 117, 127, 132, 136, 137, 144, 145, 146, 164, 172, 176, 178, 183, 190, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 303, 304, 318, 336, 387, 392, 393, 397, 403, 404, 407, 417, 418, 419, 420, 422, 464, 470, 476, 491, 499, 500, 504, 506, 507, 508, 514, 515, 526, 528, 542, 554, 604], "mutablemap": 203, "mutablesequ": [92, 100, 253], "mutipl": 426, "mutltipl": 395, "my": [392, 415, 416, 422, 425, 483, 484, 499, 508], "my_custom_model": 508, "my_flux_map": 417, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 415, "mybind": [424, 453], "myconfig": [11, 605], "mycustomgaussianmodel": [416, 508], "mycustomprior": 511, "mycustomspectralmodel": [264, 508], "mysql": 412, "n": [19, 20, 51, 82, 87, 91, 125, 127, 194, 195, 196, 197, 199, 201, 202, 205, 207, 208, 209, 217, 219, 285, 292, 392, 395, 406, 409, 422, 425, 427, 451, 488, 491, 495, 497, 498, 500, 501, 505, 507, 509, 511, 514, 515, 516, 517, 524, 547, 554, 555, 557, 561, 562, 604, 606, 608], "n_": [103, 110, 299, 305, 538, 606, 607, 608], "n_0": [240, 577], "n_bad": 515, "n_bin": 499, "n_bkg": [294, 298, 607], "n_dof": [125, 127, 540], "n_event": [196, 197, 199, 205, 208, 209, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 405], "n_event_bunch": [104, 109], "n_events_bkg": 405, "n_fit_bin": [479, 492, 499, 507], "n_free_paramet": [134, 292], "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 535, 536], "n_job": [16, 93, 128, 129, 132, 136, 172, 338, 459, 471, 474, 476, 477, 479, 485, 491, 504, 525], "n_jobs_default": [93, 128, 129, 132, 136, 172], "n_model": [72, 76], "n_ob": [473, 483, 492], "n_observ": 605, "n_off": [106, 111, 298, 308, 309, 315, 477, 606, 607], "n_off_posit": 472, "n_off_region": [184, 472], "n_on": [294, 298, 299, 305, 308, 309, 315, 430, 477, 605, 606, 607], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 421, 599], "n_sampl": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "n_scale": 120, "n_sig": [294, 298, 493, 607], "n_sig_matching_signific": [294, 298], "n_sigma": [71, 74, 75, 78, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 292, 294, 298, 311, 313, 464, 474, 485, 491, 498, 499, 500, 525, 528, 540], "n_sigma_asimov": 311, "n_sigma_sensit": [124, 125, 126, 127, 128, 133, 136, 485], "n_sigma_ul": [71, 74, 75, 78, 124, 125, 126, 127, 128, 129, 132, 133, 136, 474, 485, 490, 491, 498, 499, 500, 525, 528, 540], "n_sourc": [45, 532], "n_spatial_ax": 200, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": [491, 495], "nachiketa": [451, 452], "nadarajah": 147, "naima": [254, 391, 409, 410, 411, 413, 416, 436, 463, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 542, 556, 569, 589, 590], "naimamodel": [436, 439, 441], "naimaspectralmodel": [264, 416, 445, 508, 542, 580], "nakashima": 437, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 116, 117, 118, 119, 125, 126, 127, 128, 129, 132, 133, 136, 140, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 177, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 316, 317, 339, 370, 371, 387, 393, 395, 398, 401, 402, 404, 405, 406, 407, 410, 411, 415, 416, 417, 419, 420, 421, 422, 423, 426, 428, 435, 436, 437, 438, 439, 440, 441, 442, 445, 454, 456, 457, 459, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 498, 499, 500, 501, 503, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 517, 525, 526, 528, 530, 540, 542, 546, 549, 551, 552, 554, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 607], "name1": 501, "name2": 501, "name_err": [128, 129, 132, 133], "name_scan": [128, 129, 132, 133], "name_substr": [229, 253, 507], "name_ul": [128, 129, 132, 133], "namedtupl": 392, "nameerror": 392, "namespac": [6, 16, 84, 90, 105, 126, 392, 411, 414, 438, 441, 451, 508, 531, 609], "namibia": 517, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 103, 125, 127, 139, 176, 194, 195, 196, 197, 199, 205, 208, 209, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 392, 416, 421, 461, 465, 466, 470, 471, 472, 473, 476, 477, 479, 480, 485, 488, 490, 491, 492, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 511, 525, 526, 528, 542, 580, 589], "nan_to_num": [100, 103, 106, 110, 111, 154, 155, 161, 166, 169, 197, 205, 209, 279], "nansum": [196, 197, 199, 208, 209], "nasa": [58, 60, 61, 62, 64, 65, 101, 153, 201, 413, 583], "nat": 509, "nativ": [87, 91, 202, 404, 409, 445, 505], "natur": [87, 91, 392, 398, 416, 419, 508, 578], "nauroi": [315, 604], "naurois2012": 604, "navarro": [25, 530], "navi": 465, "navig": [453, 455], "naxi": 505, "naxis1": 505, "naxis2": 505, "naxis3": 505, "naxis4": 505, "nbin": [16, 112, 117, 129, 156, 158, 164, 166, 198, 201, 206, 209, 350, 351, 408, 464, 470, 471, 472, 476, 477, 479, 480, 481, 483, 484, 485, 490, 491, 493, 495, 499, 503, 504, 505, 508, 513, 515, 516, 525, 546, 549, 551, 552, 555], "nbin_per_decad": 201, "nbstripout": 400, "ncall": [422, 509], "nchunk": 297, "ncol": [150, 151, 196, 197, 199, 205, 208, 209, 385, 389, 466, 470, 474, 477, 479, 481, 493, 499, 501, 505, 506, 551, 570], "ncp": 496, "nd": [196, 197, 199, 205, 208, 209, 277, 278, 414, 505, 555], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 87, 91, 92, 102, 120, 150, 151, 152, 153, 154, 157, 158, 160, 163, 164, 165, 166, 167, 169, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 217, 218, 219, 220, 222, 229, 237, 255, 256, 282, 293, 294, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 310, 312, 314, 315, 318, 329, 330, 331, 340, 345, 347, 381, 385, 386, 392, 499, 505, 528, 554, 555], "nddata": [436, 439], "nddataarrai": [437, 451, 452], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 288], "ndim": [103, 110, 112, 117, 151, 153, 156, 195, 202, 207, 472, 476, 481, 485, 499, 500, 503, 504, 505, 514, 515, 528, 540, 555], "ndimag": [209, 406], "ndmap": 500, "ndmin": 318, "ne": 404, "nearest": [26, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 196, 197, 199, 201, 205, 208, 209, 330, 447, 454, 456, 505, 540, 542, 554], "nearli": [392, 445, 466], "nebula": [50, 286, 292, 439, 470, 471, 472, 477, 480, 481, 482, 490, 501, 506, 508, 509, 511, 515, 516, 517, 525, 526, 528, 533, 555, 604], "necess": [417, 511], "necessari": [16, 84, 90, 102, 105, 126, 395, 402, 407, 412, 419, 423, 447, 466, 470, 472, 473, 477, 483, 484, 488, 491, 492, 500, 504, 505, 507, 508, 526, 538, 539, 542, 547], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 407, 476], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 102, 103, 105, 106, 110, 111, 124, 126, 127, 154, 155, 166, 168, 169, 204, 221, 285, 286, 318, 391, 392, 393, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 422, 424, 425, 430, 431, 434, 435, 436, 453, 455, 460, 465, 466, 471, 473, 474, 476, 477, 481, 483, 484, 491, 492, 495, 496, 501, 503, 505, 506, 507, 508, 509, 510, 514, 516, 525, 528, 538, 551, 553, 554, 605, 609], "need_upd": 445, "needless": 412, "neg": [19, 20, 26, 87, 91, 125, 127, 128, 129, 132, 133, 136, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 281, 282, 294, 298, 393, 442, 460, 461, 511, 540, 607, 608], "neglect": [130, 182, 464, 504, 540, 608], "neighbor": [157, 165, 167, 447, 454], "neighbour": [330, 564], "neither": [96, 182, 409, 412, 418], "neldermead": 214, "nep": [397, 418], "neraest": 197, "nest": [15, 195, 196, 197, 221, 222, 254, 292, 318, 358, 396, 412, 459, 463, 501, 502, 512, 515, 520, 553, 607], "nested_model": 254, "nested_sampling_crab": [463, 509, 512], "nestedsampl": 422, "net": [87, 91, 470], "neutrino": [52, 392], "neutron": 36, "never": [389, 391, 392, 395, 398, 402, 406, 415, 422, 509, 516], "nevertheless": [392, 426, 428], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 102, 103, 105, 106, 110, 111, 125, 126, 127, 128, 132, 134, 136, 139, 148, 150, 151, 152, 153, 156, 158, 160, 163, 168, 179, 180, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 229, 253, 269, 279, 306, 318, 342, 369, 376, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 446, 449, 479, 495, 496, 498, 499, 505, 507, 508, 509, 539, 540, 542, 589, 604], "new_attribut": 392, "new_axi": 148, "new_dataset_nam": [229, 253], "new_datasets_nam": [19, 20, 26, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284], "new_ev": 542, "new_flux_map": 417, "new_funct": 392, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 589, "new_nam": [87, 91, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209], "new_ob": [88, 542], "new_observ": 92, "newaxi": 554, "newer": [409, 424, 435, 454], "newli": [439, 440, 441], "next": [87, 91, 103, 392, 393, 397, 408, 413, 414, 418, 421, 423, 451, 452, 464, 479, 482, 483, 485, 488, 498, 499, 500, 504, 505, 508, 509, 510, 511, 515], "nfcn": 501, "nfev": [102, 214, 215, 216, 222, 466, 468, 470, 471, 472, 479, 480, 481, 493, 495, 500, 501, 515, 525, 526], "nfw": [25, 27, 530], "nfwprofil": 497, "ni": 392, "nice": [392, 397, 403, 409, 411, 420, 437, 445, 474, 479, 498, 509, 605], "nicer": [392, 430, 528], "nieto": [442, 445, 447, 448, 456, 458, 459, 460, 461], "nieva": [456, 461], "night": [407, 491], "nightli": [426, 490], "nightwise_lc": 490, "nigro": [442, 445, 447, 453, 454, 456, 459], "niter": [125, 127, 136, 422, 474, 509], "nmcid": 448, "nn": 516, "noah": [421, 460], "node": [19, 20, 26, 166, 169, 198, 201, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 255, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 436, 501, 503, 505, 514, 515, 563, 581], "node_typ": [158, 198, 201, 206, 483, 484, 503, 515], "noeth": [442, 443], "nois": [297, 303, 410, 604], "noisi": 514, "non": [16, 84, 87, 90, 91, 100, 103, 105, 106, 110, 111, 116, 119, 125, 126, 127, 134, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 182, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 279, 311, 313, 318, 382, 383, 385, 387, 398, 403, 406, 410, 412, 413, 414, 420, 422, 435, 439, 440, 441, 445, 453, 456, 457, 459, 460, 461, 466, 495, 509, 515, 520, 521, 538, 542, 553, 554, 580, 604], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 118, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 287, 292, 294, 297, 298, 315, 316, 318, 321, 326, 330, 338, 339, 340, 342, 345, 346, 347, 348, 357, 360, 366, 374, 379, 380, 381, 385, 386, 387, 388, 389, 392, 404, 406, 409, 417, 420, 421, 422, 447, 458, 459, 461, 465, 466, 468, 470, 471, 473, 474, 479, 480, 481, 483, 484, 485, 488, 491, 492, 493, 495, 497, 498, 499, 500, 504, 505, 507, 508, 509, 511, 515, 525, 530, 538, 554, 560, 561, 562, 605], "nonetyp": [84, 90, 105, 126], "nonposit": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "nonposx": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 445], "nonstopmod": 393, "nonzero": 39, "nooverlaperror": 458, "noqa": [19, 20, 153, 189, 200, 201, 207, 389], "nor": [96, 182, 402, 412, 414, 418, 423], "norm": [19, 20, 26, 124, 125, 127, 128, 129, 132, 133, 136, 138, 147, 173, 223, 224, 227, 228, 231, 233, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 247, 250, 254, 255, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 385, 403, 415, 417, 421, 439, 440, 442, 445, 460, 461, 463, 470, 474, 476, 477, 479, 480, 482, 483, 484, 485, 488, 491, 492, 493, 497, 498, 499, 500, 501, 515, 525, 526, 528, 530, 540, 542, 549, 556, 558, 562, 568, 569, 570, 589, 590, 599, 607, 610], "norm_0": [563, 581], "norm_1": [563, 581], "norm_2": [563, 581], "norm_3": [563, 581], "norm_4": 581, "norm_5": 581, "norm_err": [124, 125, 127, 129, 136, 417, 474, 485, 491, 499, 500, 540], "norm_errn": [125, 127, 491, 498, 500, 528, 540], "norm_errp": [125, 127, 491, 498, 500, 528, 540], "norm_only_chang": 457, "norm_prior": 421, "norm_scan": [125, 417, 470, 471, 500, 540], "norm_sensit": [125, 127, 491, 500], "norm_ul": [125, 127, 417, 485, 491, 498, 499, 500, 528, 540], "norma": [33, 38], "normal": [42, 102, 103, 106, 110, 111, 128, 129, 130, 132, 143, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 173, 196, 197, 199, 205, 206, 208, 209, 237, 255, 256, 259, 279, 281, 285, 295, 318, 382, 383, 392, 393, 395, 397, 398, 402, 403, 406, 410, 417, 434, 438, 447, 461, 465, 477, 483, 490, 491, 493, 504, 505, 506, 507, 508, 515, 526, 528, 554, 560, 561, 562, 565, 566, 567, 589, 604, 606, 607, 610], "normalis": [67, 80, 124, 125, 127, 132, 150, 151, 152, 153, 156, 158, 160, 163, 164, 168, 173, 193, 196, 197, 199, 205, 208, 209, 255, 256, 269, 390, 471, 474, 476, 477, 492, 500, 506, 507, 508, 509, 515, 525], "normed_templ": 508, "normspectralmodel": [229, 253, 416, 442, 458, 460, 508, 549], "north": [230, 239, 242, 560], "notabl": 509, "notat": [442, 544, 546, 552, 608], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 102, 103, 104, 105, 106, 109, 110, 111, 120, 124, 126, 127, 128, 129, 132, 136, 153, 158, 166, 168, 178, 189, 207, 211, 214, 217, 221, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 303, 304, 318, 339, 366, 383, 389, 391, 394, 395, 397, 400, 405, 406, 409, 413, 417, 418, 419, 421, 422, 423, 424, 427, 433, 435, 455, 457, 459, 461, 464, 465, 466, 471, 472, 474, 476, 479, 482, 484, 491, 492, 493, 495, 496, 497, 498, 499, 503, 504, 505, 506, 507, 508, 509, 511, 514, 515, 516, 538, 540, 542, 547, 549, 554, 555, 565, 566, 578, 607, 608, 609], "notebook": [87, 91, 355, 395, 396, 401, 402, 406, 407, 408, 409, 410, 412, 413, 423, 424, 426, 427, 428, 431, 434, 435, 436, 437, 439, 440, 441, 443, 445, 447, 451, 452, 453, 454, 455, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 523, 525, 526, 528, 541, 542, 543, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605], "noteworthi": 221, "noth": [342, 409, 511], "notic": [398, 501], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "notion": 422, "nov": [399, 404, 409, 410, 413, 417, 432, 456], "novemb": [401, 432, 442, 443, 444, 445], "now": [16, 82, 84, 88, 90, 99, 101, 105, 125, 126, 127, 193, 206, 254, 262, 392, 395, 397, 398, 399, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 421, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 470, 471, 472, 473, 476, 477, 479, 480, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 499, 501, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 525, 526, 528, 539, 540, 551, 592, 596, 597, 598, 605, 607, 608, 609], "noworkflow": 412, "np": [83, 87, 91, 103, 106, 110, 111, 112, 117, 120, 124, 127, 136, 155, 196, 197, 199, 205, 208, 209, 214, 285, 392, 393, 403, 404, 407, 416, 417, 421, 422, 430, 456, 461, 464, 473, 474, 477, 483, 485, 488, 491, 492, 493, 495, 496, 497, 498, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 534, 535, 536, 540, 542, 549, 554, 555, 560, 561, 563, 589, 598, 605], "npanel": [379, 610], "npix": [195, 204, 207, 208, 209, 470, 481, 503, 515, 551, 555, 559, 563], "npix_max": 195, "npoint": [297, 501], "npred": [103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 134, 136, 279, 300, 314, 403, 404, 405, 415, 417, 433, 435, 442, 445, 451, 453, 461, 474, 483, 485, 491, 498, 499, 500, 511, 515, 538, 540, 607], "npred_background": [103, 106, 110, 111, 125, 127, 442, 472, 473, 485, 499, 540, 607], "npred_background_min": 149, "npred_excess": [124, 125, 127, 129, 136, 138, 147, 474, 477, 485, 491, 493, 500, 540], "npred_excess_err": [125, 127], "npred_excess_errn": [125, 127], "npred_excess_errp": [125, 127], "npred_excess_ref": [125, 127], "npred_excess_ul": [125, 127], "npred_min": 149, "npred_off": [106, 111, 607], "npred_sig": [103, 106, 110, 111, 404], "npred_sign": [103, 106, 110, 111, 388, 445, 459, 499, 607], "npred_signal_min": 149, "npred_sourc": 499, "nrow": [466, 470, 501, 570], "nside": [195, 196, 197, 456, 515, 553], "nside2resol": 197, "nside_til": [195, 197], "nsou": 474, "nstep": [221, 407], "nu": [19, 26], "nu_e": [26, 497], "nu_mu": [26, 497], "nu_tau": [26, 497], "nuclei": 27, "nuisanc": [470, 501, 604, 608], "null": [125, 127, 128, 129, 132, 133, 134, 292, 294, 298, 461, 471, 476, 477, 479, 482, 500, 508, 525, 540, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 607], "null_valu": [133, 134, 292, 485], "nullabl": [87, 91], "num": 83, "numba": 409, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 101, 103, 104, 106, 109, 110, 111, 113, 114, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 173, 176, 179, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 283, 288, 292, 294, 297, 298, 311, 312, 313, 318, 336, 338, 339, 340, 341, 342, 345, 346, 347, 348, 350, 351, 379, 385, 393, 396, 397, 398, 401, 403, 404, 405, 406, 407, 411, 414, 417, 419, 420, 422, 423, 430, 435, 445, 447, 448, 449, 454, 455, 456, 459, 460, 461, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 481, 482, 483, 484, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 504, 505, 506, 508, 509, 510, 514, 515, 516, 517, 525, 526, 528, 532, 538, 540, 542, 549, 551, 554, 555, 604, 605, 606, 607, 608], "number_of_column": [87, 91], "number_param": 212, "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 83, 87, 91, 127, 201, 217, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 283, 318, 391, 392, 405, 410, 427, 445, 464, 473, 476, 479, 481, 488, 492, 505, 514], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 102, 112, 117, 120, 127, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 167, 168, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 211, 212, 214, 217, 218, 219, 220, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 280, 281, 294, 298, 318, 342, 347, 386, 391, 392, 393, 395, 399, 403, 405, 409, 410, 411, 419, 421, 430, 431, 438, 439, 442, 450, 451, 452, 454, 456, 457, 458, 460, 461, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 525, 526, 528, 534, 535, 536, 540, 542, 554, 555, 560, 561, 563, 589, 598], "numpoint": [214, 501], "numpy121": 395, "nupeak_ob": 528, "nutshel": 609, "nvyloso": 495, "n\u00f6the": [445, 447, 448], "o": [67, 82, 87, 91, 102, 203, 229, 253, 392, 401, 406, 409, 412, 414, 417, 425, 426, 428, 437, 445, 448, 451, 452, 453, 459, 464, 466, 470, 474, 481, 490, 491, 492, 495, 496, 505, 510, 511, 514, 604, 605], "ob": [40, 82, 83, 88, 89, 91, 92, 96, 166, 176, 316, 317, 404, 405, 408, 409, 415, 430, 448, 449, 458, 464, 466, 470, 473, 474, 481, 483, 488, 491, 492, 493, 495, 504, 510, 514, 515, 516, 517, 523, 526, 539, 542, 547, 549, 551, 552], "obei": 554, "obj": [16, 84, 90, 105, 126, 472, 495], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 102, 103, 104, 105, 106, 110, 111, 124, 125, 126, 127, 130, 131, 132, 134, 136, 139, 140, 141, 142, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 180, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 294, 298, 318, 322, 326, 327, 330, 338, 340, 342, 348, 351, 365, 366, 367, 368, 373, 379, 385, 387, 388, 389, 398, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 417, 419, 420, 422, 426, 430, 436, 437, 439, 440, 441, 442, 445, 447, 452, 453, 454, 456, 459, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 480, 482, 485, 488, 490, 491, 492, 495, 496, 499, 501, 504, 505, 506, 507, 508, 509, 511, 514, 515, 516, 517, 525, 526, 528, 532, 537, 538, 539, 540, 548, 551, 553, 554, 555, 589, 602, 604, 605, 609], "obs2": 542, "obs_clust": [92, 510], "obs_col": 481, "obs_con": [16, 471, 476, 477, 479, 525], "obs_copi": 88, "obs_fil": [16, 471, 476, 477, 479, 525], "obs_filenam": 516, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 149, 214, 316, 317, 402, 404, 415, 420, 430, 466, 470, 471, 472, 473, 476, 477, 479, 480, 481, 483, 484, 490, 491, 492, 495, 501, 504, 510, 514, 516, 517, 523, 525, 526, 551], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [90, 105, 420], "obs_list": [453, 455], "obs_list_vela": 493, "obs_mod": 95, "obs_model": 465, "obs_muoneff": 510, "obs_po": [41, 321], "obs_tabl": [82, 91, 96, 316, 317, 447, 481, 483, 491, 495, 504, 510, 514, 516, 517, 523, 526, 551], "obs_table_filenam": 82, "obs_tim": [16, 471, 476, 477, 479, 525], "obs_time_src": 504, "obs_zenith": 510, "obscor": 460, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 118, 166, 171, 172, 173, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 228, 231, 236, 241, 243, 244, 245, 261, 268, 280, 283, 299, 305, 315, 317, 326, 347, 396, 398, 404, 405, 406, 407, 408, 412, 413, 415, 417, 420, 426, 435, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 463, 464, 466, 472, 473, 476, 477, 479, 480, 488, 492, 493, 495, 496, 501, 502, 509, 511, 512, 513, 514, 516, 517, 520, 523, 530, 538, 539, 542, 545, 547, 549, 551, 552, 580, 604, 605, 606, 607], "observation_clust": [463, 510, 512], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 454, "observationcta": 402, "observationeventsampl": 460, "observationfilt": [88, 402, 407, 434, 455], "observationlist": [402, 455], "observationmetadata": 420, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 460, "observationseventssampl": 461, "observationssummari": 439, "observationstat": [434, 439], "observationt": [82, 405, 406, 456, 510, 516, 526], "observationtablecheck": 454, "observationtablesummari": 451, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 405, 412, 420, 423, 426, 446, 514, 516, 517, 520, 537, 542, 547], "observatory_earth_loc": [83, 88, 461], "observatory_loc": [420, 447, 464, 473, 483, 484, 488, 492], "obsinfometadata": [90, 105], "obstim": [85, 94, 609], "obtain": [85, 103, 106, 109, 111, 125, 127, 140, 302, 402, 407, 409, 410, 417, 455, 461, 470, 471, 472, 474, 477, 483, 484, 491, 495, 496, 501, 505, 506, 511, 525, 528, 538, 542, 546, 547, 604, 606, 607], "obviou": [404, 411, 413, 414, 420], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 530], "occur": [196, 197, 199, 208, 209, 348, 392, 413, 414, 418, 515], "occurr": [92, 100, 200, 218, 220, 229, 253], "oct": [400, 402, 403, 407, 409, 413, 419], "octob": [401, 412], "odd": [207, 209], "odd_npix": [207, 209], "odot": [28, 35, 39, 40, 52], "off": [103, 104, 106, 108, 109, 110, 111, 124, 125, 127, 171, 177, 178, 181, 184, 193, 298, 315, 389, 390, 395, 398, 404, 406, 407, 408, 439, 445, 447, 449, 459, 461, 464, 465, 466, 471, 472, 477, 481, 490, 491, 493, 495, 499, 501, 504, 509, 511, 513, 538, 547, 551, 552, 604, 606, 607, 608], "off_2": [106, 111], "off_ev": 493, "off_patch": 493, "off_phas": [177, 493], "off_phase_rang": 493, "offdatabackgroundmak": 450, "offer": [125, 395, 403, 412, 419, 420, 426, 427, 454, 472, 500, 501, 504, 508, 542], "offici": [419, 543, 605], "offlin": [87, 91], "offset": [83, 96, 113, 114, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 172, 176, 182, 183, 188, 191, 196, 197, 199, 201, 205, 208, 209, 392, 398, 406, 430, 439, 449, 451, 453, 458, 459, 460, 461, 464, 472, 473, 476, 479, 480, 481, 488, 493, 503, 504, 510, 514, 526, 539, 547, 549, 552], "offset2": 83, "offset_axi": [156, 157, 158], "offset_band": 83, "offset_from_median": 83, "offset_index": 163, "offset_max": [16, 83, 172, 182, 188, 191, 471, 476, 477, 479, 481, 488, 493, 504, 525, 526, 549, 552], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 140, 286, 382, 383, 392, 397, 406, 407, 408, 410, 452, 464, 466, 471, 476, 477, 480, 481, 488, 495, 499, 501, 504, 506, 525, 526, 538, 542, 604], "ogip": [95, 107, 108, 111, 153, 198, 200, 201, 204, 205, 206, 404, 407, 452, 465, 470, 480, 538, 546, 555], "ogip_column": 205, "ogipdatasetread": 111, "ogipdatasetwrit": [111, 458, 460], "ok": [392, 406, 501, 509], "old": [200, 376, 392, 397, 400, 404, 408, 409, 436, 437, 452, 453, 454, 496], "old_attribut": 392, "older": [399, 409, 427, 452, 498], "oldest": 413, "olga": [450, 451], "olivera": [442, 445, 447, 448, 456, 458, 459, 460, 461], "ombobypd": 495, "omega": [19, 20, 23, 268, 285, 514, 560, 598], "omit": [136, 393, 479, 514, 605], "omp": 413, "on_circl": 551, "on_ellipse_annulu": 551, "on_ev": 493, "on_patch": 493, "on_phas": [177, 493], "on_phase_rang": 493, "on_posit": 193, "on_radii": 464, "on_radiu": [481, 493], "on_rectangl": 551, "on_region": [16, 103, 106, 179, 464, 466, 470, 471, 472, 473, 476, 477, 479, 481, 483, 484, 490, 491, 493, 495, 499, 525, 551], "on_region_radiu": [464, 470, 473, 483, 484, 491, 495], "onc": [87, 91, 103, 134, 207, 392, 395, 397, 402, 403, 406, 407, 408, 413, 414, 415, 417, 418, 422, 423, 424, 425, 426, 428, 472, 491, 493, 504, 507, 509, 516, 520, 539, 542, 605], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 77, 84, 87, 89, 90, 91, 92, 93, 95, 99, 102, 103, 105, 106, 109, 110, 111, 114, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 139, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 178, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 288, 292, 294, 297, 298, 326, 331, 347, 362, 379, 385, 386, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 453, 456, 457, 459, 461, 464, 466, 470, 471, 472, 476, 479, 483, 490, 492, 493, 496, 498, 499, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 525, 526, 528, 537, 538, 539, 540, 542, 547, 549, 551, 554, 555, 562, 602, 603, 604, 605, 606, 607, 608, 609], "ones": [87, 91, 120, 124, 128, 132, 136, 153, 200, 396, 400, 404, 406, 409, 413, 421, 427, 430, 492, 496, 503, 505, 530, 549, 604, 605], "ones_lik": [493, 549], "ongo": [395, 398, 399, 424, 509, 547], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 124, 126, 127, 128, 129, 132, 136, 137, 139, 146, 147, 154, 155, 159, 161, 166, 169, 172, 176, 178, 183, 193, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 253, 254, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 279, 280, 281, 294, 298, 311, 313, 318, 338, 366, 389, 392, 393, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 427, 435, 437, 441, 445, 447, 448, 453, 457, 459, 460, 461, 466, 468, 470, 471, 472, 476, 477, 479, 480, 482, 483, 484, 485, 490, 491, 492, 493, 495, 498, 499, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 526, 530, 538, 540, 546, 549, 552, 555, 600, 604, 605, 606, 607], "onlin": [87, 91, 393, 397, 400, 413, 430], "onlinelibrari": 138, "onoff": [448, 538], "onserv": 93, "ontim": [189, 402, 483, 499], "onto": [106, 111, 196, 197, 199, 205, 207, 208, 209, 379, 398, 526, 538, 542, 554, 603], "oo": 419, "op": 408, "opac": 231, "open": [66, 87, 91, 392, 393, 395, 397, 403, 406, 409, 411, 412, 413, 417, 418, 419, 423, 425, 426, 428, 430, 431, 452, 471, 480, 505, 514, 516, 517, 525, 537, 604, 605], "openastronomi": 453, "oper": [87, 91, 195, 207, 224, 392, 398, 403, 406, 440, 442, 445, 454, 455, 459, 465, 499, 507, 508, 554, 555, 570, 572, 576, 579, 581, 584, 589], "opinion": [397, 605], "oppos": [496, 580, 605], "opposit": [196, 197, 422], "opt": [89, 393, 498, 570, 580], "opt_method": 501, "optic": [231, 406, 412, 465, 570], "optim": [19, 20, 26, 102, 129, 133, 136, 147, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 385, 391, 392, 401, 404, 405, 415, 417, 466, 468, 470, 471, 472, 473, 474, 479, 480, 481, 493, 495, 496, 500, 501, 509, 511, 515, 525, 526], "optimis": [19, 20, 214, 215, 216, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 406, 408, 410, 454, 461, 540, 602], "optimize_opt": [214, 479, 488, 500, 501, 526], "optimize_result": [214, 215, 459], "optimizeresult": [102, 214, 215, 466, 468, 470, 471, 472, 479, 480, 481, 493, 495, 500, 501, 515, 525, 526], "optin": 419, "optinon": [110, 111], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 297, 298, 302, 303, 304, 306, 311, 312, 313, 315, 316, 318, 329, 339, 342, 345, 346, 347, 348, 350, 351, 354, 359, 360, 362, 373, 374, 379, 380, 381, 385, 386, 387, 388, 389, 392, 393, 395, 397, 398, 400, 401, 403, 404, 406, 408, 410, 412, 413, 416, 420, 422, 424, 425, 426, 427, 428, 434, 435, 436, 439, 441, 442, 445, 447, 451, 453, 454, 455, 456, 458, 459, 460, 461, 474, 479, 488, 490, 492, 498, 499, 504, 505, 506, 508, 510, 514, 515, 525, 526, 538, 540, 542, 554, 555, 600, 604, 605], "option1": 393, "option2": 393, "option3": 393, "option_context": [87, 91], "optionali": 563, "optout": 419, "optpars": 397, "opu": 412, "oral": 419, "orang": [393, 470, 479, 485, 490, 493, 497, 500, 511, 551], "orchestr": [398, 402, 404, 408, 471, 525, 526], "orcid": 419, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 103, 106, 127, 139, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 166, 168, 169, 172, 176, 183, 186, 187, 192, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 208, 209, 279, 292, 318, 389, 392, 393, 398, 403, 404, 406, 407, 408, 409, 412, 417, 418, 419, 421, 422, 435, 436, 437, 438, 439, 440, 441, 442, 445, 461, 470, 471, 472, 474, 479, 480, 483, 493, 498, 501, 503, 504, 505, 508, 509, 516, 525, 526, 528, 547, 553, 554, 555, 605, 608], "ordereddict": [398, 409, 438], "ordinari": 528, "org": [11, 34, 64, 65, 83, 87, 88, 91, 182, 214, 259, 260, 274, 275, 311, 313, 318, 395, 400, 409, 413, 418, 419, 423, 425, 426, 428, 432, 451, 453, 464, 473, 476, 479, 480, 481, 488, 492, 497, 498, 501, 514, 587, 588, 605], "organ": [396, 413, 418, 419, 445, 516, 517, 539, 554], "organis": [399, 408, 411, 419, 453], "orient": [151, 159, 160, 392, 403], "origin": [16, 36, 37, 41, 84, 87, 90, 91, 103, 105, 110, 125, 126, 127, 197, 209, 277, 279, 281, 402, 406, 412, 419, 420, 423, 451, 471, 476, 477, 479, 491, 496, 505, 508, 515, 525, 547, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 608, 609], "orm": 412, "orthogon": 351, "orthonorm": 147, "oscar": [453, 454], "osx": 441, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 103, 105, 106, 110, 111, 125, 126, 128, 132, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 218, 220, 221, 279, 293, 318, 331, 361, 381, 386, 391, 395, 397, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 425, 431, 453, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 538, 539, 540, 542, 547, 549, 551, 555, 572, 602, 603, 605, 609], "other_id": 466, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 103, 105, 110, 126, 164, 203, 207, 209, 211, 217, 218, 219, 220, 229, 253, 284, 318, 385, 405, 416, 419, 461, 507, 508, 515, 571], "our": [392, 395, 401, 406, 408, 409, 411, 412, 415, 416, 417, 419, 435, 436, 452, 461, 464, 466, 470, 471, 472, 476, 477, 479, 480, 481, 484, 491, 492, 493, 495, 505, 506, 509, 511, 516, 525, 526, 605], "ourself": 528, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 102, 127, 196, 197, 199, 205, 208, 209, 253, 266, 267, 391, 392, 393, 395, 397, 400, 402, 404, 406, 408, 410, 411, 413, 418, 422, 423, 430, 431, 433, 439, 453, 468, 472, 476, 477, 495, 505, 506, 509, 514, 515, 525, 528, 530, 531, 551, 565, 566, 602, 605, 609], "out_fold": 408, "outcom": [397, 406], "outdat": [409, 413], "outdir": [16, 82, 93, 471, 476, 477, 479, 525], "outer": [43, 44, 52, 53, 129, 171, 266, 566], "outer_height": [551, 555], "outer_width": [551, 555], "outfil": 392, "outflow": 206, "outlin": [103, 106, 110, 111, 225, 226, 230, 239, 242, 257, 266, 267, 281, 395, 397, 400, 401, 402, 403, 406, 413, 416], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 105, 118, 124, 126, 136, 144, 145, 153, 158, 196, 197, 199, 205, 208, 209, 215, 221, 222, 229, 244, 253, 297, 347, 393, 400, 402, 405, 408, 409, 412, 414, 417, 420, 434, 449, 455, 458, 459, 461, 479, 483, 484, 488, 492, 500, 504, 505, 525, 526, 540, 542, 605, 606], "output_map": [196, 197, 199, 205, 208, 209], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 103, 106, 110, 111, 116, 119, 153, 173, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 217, 219, 231, 282, 331, 380, 392, 406, 407, 408, 412, 445, 477, 500, 501, 504, 505, 506, 542, 549, 562, 589, 604], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 102, 103, 106, 110, 111, 128, 136, 140, 153, 154, 164, 166, 169, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 229, 253, 285, 294, 298, 302, 329, 330, 343, 383, 392, 393, 397, 400, 401, 402, 405, 406, 407, 413, 416, 420, 422, 425, 427, 445, 466, 470, 474, 477, 479, 482, 483, 492, 498, 499, 500, 501, 504, 505, 508, 509, 526, 528, 540, 542, 546, 604, 606, 607], "overal": [400, 406, 412, 461, 470], "overcom": [422, 506, 509], "overestim": [540, 607], "overflow": [206, 472, 492, 495, 593], "overkil": 492, "overlai": [471, 500], "overlaid": [103, 106, 110, 111, 470, 471], "overlap": [86, 91, 116, 119, 132, 184, 201, 206, 389, 407, 470], "overlap_ok": 86, "overlin": [103, 110, 538], "overload": 445, "overplot": [498, 537], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 358, 403, 470, 472, 481, 485], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 204, 389], "overs": 412, "oversampl": [104, 109, 164, 166, 169, 176, 183, 189, 195, 196, 197, 199, 204, 205, 208, 209, 226, 230, 239, 242, 243, 244, 255, 266, 267, 269, 271, 277, 281, 283, 288, 436, 504], "oversample_energy_factor": [104, 109, 484], "oversampling_factor": [197, 207, 225, 226, 230, 239, 242, 243, 244, 255, 257, 266, 267, 269, 271, 277, 281, 283], "overview": [6, 395, 412, 422, 424, 439, 440, 442, 445, 463, 493, 500, 505, 508, 509, 520, 527, 528, 529, 542, 543, 556, 606], "overwrit": [11, 15, 16, 19, 20, 26, 82, 88, 93, 100, 102, 103, 106, 108, 110, 111, 125, 127, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 209, 215, 217, 221, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 338, 360, 417, 454, 456, 461, 470, 471, 479, 480, 483, 484, 485, 503, 505, 506, 507, 508, 514, 515, 523, 525, 526, 538, 555, 567, 605], "overwrite_templ": [215, 229, 253], "overwritten": [166, 169, 330], "owen": [433, 446], "own": [87, 91, 99, 125, 127, 203, 205, 398, 408, 415, 419, 445, 464, 483, 508, 515, 526, 542, 554, 555], "p": [38, 51, 54, 87, 91, 110, 111, 131, 301, 315, 392, 445, 471, 482, 497, 501, 525, 542, 547, 548, 607], "p0_birth": 43, "p90": 48, "p_": [544, 546, 547, 548], "p_0": [51, 196, 199, 205, 208, 209, 534], "p_dot": [51, 54], "p_i": [196, 199, 205, 208, 209], "p_lat": [196, 199, 205, 208, 209], "p_lon": [196, 199, 205, 208, 209], "p_mean": 42, "p_n": [196, 199, 205, 208, 209], "p_stdv": 42, "p_valu": [294, 298, 501, 605, 607], "pace": [400, 401], "packag": [11, 144, 318, 355, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 406, 409, 410, 412, 413, 418, 419, 420, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 435, 438, 439, 441, 442, 445, 448, 449, 450, 451, 452, 453, 454, 456, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 538, 541, 542, 543, 550, 555, 567, 578, 593, 605, 609], "pacman": 450, "paczynski": [36, 37], "paczynski1990": [28, 29, 30, 35, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 103, 106, 110, 111, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 380, 442, 445], "pad_width": [103, 110, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209], "pad_with": [196, 197, 199, 205, 208, 209], "page": [6, 87, 91, 214, 299, 305, 315, 393, 395, 397, 404, 406, 409, 413, 419, 422, 423, 424, 426, 427, 431, 439, 440, 445, 448, 449, 452, 453, 454, 455, 461, 501, 505, 517, 518, 520, 540, 542, 553, 555, 606, 607, 609], "pain": [392, 395, 399], "pair": [16, 84, 90, 103, 105, 106, 110, 111, 125, 126, 127, 140, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 408, 465], "panda": [87, 91, 391, 409, 454, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528], "panel": [88, 102, 103, 106, 110, 111, 379, 448, 483, 501], "panel_fov": 379, "panni": 445, "papadopoulo": [445, 447], "paper": [57, 59, 63, 72, 74, 128, 182, 413, 419, 422, 454, 491, 496, 498, 504, 509, 516, 530], "papermil": 408, "par": [403, 416, 421, 422, 465, 495, 501, 511, 514], "par_000_amplitud": 501, "par_001_alpha": 501, "par_002_beta": 501, "par_00x_": 403, "par_1": [214, 501], "par_2": [214, 501], "par_alpha": [214, 501], "par_beta": [214, 501], "par_box": 91, "par_nam": [229, 237, 253, 269, 279], "par_to_v": 514, "par_typ": [229, 237, 253, 269, 279], "parabol": [293, 331, 501], "parabola": [246, 247, 463, 480, 501, 556, 569, 590], "paragraph": 397, "parallel": [93, 128, 129, 132, 136, 172, 333, 334, 335, 336, 337, 338, 339, 395, 409, 424, 447, 459, 460, 461, 474, 499], "parallel_backend": [93, 128, 129, 132, 136, 172, 338, 485], "parallelbackendenum": 333, "parallelis": 422, "parallelmixin": [93, 128, 136, 172], "param": [16, 84, 90, 105, 126, 231, 282, 385, 408, 440, 501], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 501, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 324, 325, 327, 329, 330, 331, 332, 338, 339, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 401, 404, 405, 407, 408, 410, 411, 412, 415, 417, 419, 431, 434, 435, 436, 437, 438, 439, 441, 442, 445, 447, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 465, 466, 468, 470, 472, 473, 474, 476, 477, 479, 480, 481, 483, 484, 485, 488, 490, 492, 493, 495, 497, 498, 499, 500, 503, 504, 509, 510, 511, 514, 515, 526, 528, 530, 538, 540, 541, 542, 549, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608], "parameter": 508, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_matching_signific": 134, "parameter_nam": 393, "parameter_name_scan": 214, "parameter_typ": 393, "parameterestim": [121, 441, 460], "parameteris": [544, 546], "parameters_list": [218, 220], "parameters_nam": [229, 253], "parameters_stat_sum": 421, "parameters_unique_nam": [19, 20, 26, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 501], "parametersensitivityestim": 121, "parametr": [16, 27, 84, 90, 102, 105, 126, 156, 157, 162, 165, 167, 246, 247, 266, 404, 408, 416, 435, 442, 445, 472, 474, 508, 514, 565, 566, 578], "parametricpsf": [157, 165, 445, 447], "parametris": [165, 416, 439, 546, 548, 560, 561, 562, 563, 571, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600], "paramnam": [422, 509], "parent": [16, 84, 90, 105, 120, 124, 126, 128, 132, 136, 207, 392, 402, 420, 491, 500, 540, 580], "parenthes": [403, 409, 457, 459], "parfiv": [409, 438], "park": 35, "parnam": 511, "pars": [16, 84, 85, 90, 105, 126, 195, 204, 393, 406, 461, 464, 473, 476, 479, 481, 488, 492, 506, 514, 605], "parse_arg": 605, "parse_fil": [16, 84, 90, 105, 126], "parse_obj": [16, 84, 90, 105, 126], "parse_raw": [16, 84, 90, 105, 126], "parseabl": 318, "parser": 605, "part": [102, 392, 395, 398, 401, 403, 405, 406, 407, 408, 410, 411, 412, 413, 418, 419, 422, 426, 428, 435, 439, 440, 441, 449, 454, 459, 460, 464, 466, 470, 479, 488, 498, 499, 505, 506, 509, 526, 528, 542, 547, 551], "parti": 397, "partial": [91, 103, 106, 154, 155, 161, 166, 169, 172, 195, 207, 209, 279, 406, 410, 440, 454, 553], "partial_overlap": 91, "particip": [397, 401, 413], "particl": [17, 19, 20, 21, 22, 24, 25, 26, 27, 254, 285, 441, 530, 580], "particle_distribut": [254, 580], "particular": [87, 91, 124, 136, 392, 398, 405, 407, 415, 417, 418, 420, 422, 442, 445, 456, 457, 466, 470, 471, 472, 473, 476, 480, 483, 491, 492, 496, 501, 504, 507, 509, 514, 516, 517, 525, 526, 539, 542, 549, 551, 555, 607], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [395, 401, 402, 406, 413, 414], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 102, 103, 105, 106, 109, 110, 111, 126, 127, 130, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 181, 189, 194, 195, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 212, 213, 214, 216, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 293, 297, 318, 330, 338, 339, 340, 345, 346, 347, 348, 379, 380, 385, 387, 388, 392, 395, 402, 404, 405, 406, 407, 412, 420, 441, 445, 447, 459, 460, 461, 466, 468, 470, 471, 479, 480, 484, 490, 491, 496, 498, 499, 501, 503, 504, 505, 506, 508, 510, 514, 525, 526, 528, 542, 553, 554, 555, 560, 561, 605, 609], "pass4": 516, "pass8_edisp_usag": 101, "passkwarg": [472, 495], "past": [392, 397, 400, 408, 409, 412, 413, 414, 416, 419, 421, 430, 451, 453, 454, 505, 605], "patch": [389, 392, 399, 419, 448, 457, 470, 472, 481, 485, 493], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 101, 105, 107, 108, 111, 126, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 196, 197, 199, 204, 205, 208, 209, 215, 229, 244, 253, 280, 326, 355, 356, 357, 360, 392, 395, 422, 429, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 540, 599, 600, 604, 605], "path_effect": [204, 229, 253], "path_to_notebook": 392, "path_to_script": 392, "patheffect": [204, 229, 253], "pathlib": [16, 82, 83, 86, 87, 91, 153, 205, 215, 229, 253, 356, 470, 471, 479, 480, 483, 484, 514, 525, 526], "pathpatch": 485, "pattern": [392, 398, 406], "paula": 460, "paulakx": 460, "paz": [446, 449, 450], "pbar": 542, "pc": [46, 47, 50, 52, 535, 536], "pcolormesh": [83, 127, 150, 151, 153, 156, 157, 158, 163, 165, 167, 168, 452, 458, 501, 503], "pd": [87, 91], "pdf": [153, 157, 182, 259, 260, 274, 275, 295, 311, 313, 340, 385, 393, 412, 480, 483, 497, 532, 534, 535, 536, 538, 539, 544, 545, 546, 548, 551, 555, 587, 588, 607, 610], "pdf_in_safe_rang": 153, "pdf_matrix": 153, "pdf_threshold": [153, 154, 158], "pdflatex": 393, "pdsehz_a": 495, "peak": [68, 130, 144, 145, 153, 182, 221, 235, 241, 243, 247, 274, 447, 453, 460, 474, 496, 498, 504, 509, 566], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 392, "peek": [83, 88, 103, 106, 110, 111, 130, 131, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 392, 404, 430, 442, 448, 452, 456, 466, 472, 479, 483, 484, 493, 499, 503, 514, 516, 517, 539, 542, 544, 545, 546, 548], "pei": 461, "penal": 248, "penalti": [422, 511], "peopl": [397, 399, 413, 419, 423, 424, 497, 530, 542, 605], "pep": 397, "pep257": 393, "pep8": 395, "per": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 99, 101, 102, 103, 106, 110, 111, 113, 114, 124, 125, 127, 128, 129, 132, 133, 138, 144, 147, 148, 149, 166, 169, 201, 223, 224, 227, 231, 233, 234, 235, 236, 240, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 288, 296, 299, 305, 315, 392, 398, 404, 405, 408, 417, 419, 420, 433, 441, 445, 447, 460, 464, 473, 483, 488, 490, 492, 497, 504, 505, 510, 511, 516, 517, 520, 538, 542, 545, 549, 604, 606], "per_decad": [201, 470, 472, 483, 484, 493, 499, 515, 546, 552], "percent": 135, "percentag": [153, 182, 504], "percentil": 83, "peresano": 461, "perfect": 153, "perfectli": [561, 605], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 105, 109, 126, 173, 181, 195, 207, 209, 226, 229, 230, 239, 242, 253, 255, 266, 267, 271, 277, 281, 294, 298, 354, 357, 385, 392, 393, 398, 401, 402, 403, 407, 408, 412, 417, 420, 422, 423, 424, 426, 435, 442, 445, 447, 450, 454, 457, 459, 460, 461, 464, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 482, 484, 488, 490, 491, 492, 495, 499, 501, 502, 504, 505, 506, 507, 509, 510, 516, 518, 520, 525, 527, 538, 542, 550, 551, 554, 561, 580, 603, 604, 605, 606], "perhap": 555, "perimet": 412, "period": [42, 51, 54, 201, 280, 399, 419, 422, 453, 461, 509, 510, 534], "period_dot": 51, "periodicmapaxi": 461, "periodogram": [297, 407, 454, 461], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 412, 419, 520], "perseu": [33, 38], "person": [392, 395, 397, 399, 400, 401, 405, 410, 414], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 453, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 528, "ph": 376, "pha": [107, 108, 111, 205, 404, 451, 454, 470, 480], "pha_": 499, "pha_meta": 107, "pha_ob": [107, 149, 214, 480, 500, 501, 509], "pha_obs23523": [110, 111, 133, 292, 422, 511, 540], "pha_obs23592": 540, "phacountsspectrum": 437, "phacountsspectrumlist": 436, "phase": [50, 52, 53, 89, 174, 177, 280, 397, 402, 403, 406, 407, 409, 411, 417, 430, 435, 454, 456, 459, 461, 463, 508, 531, 542, 547, 556, 591, 601], "phase_axi": 417, "phase_bkg_mak": 493, "phase_column_nam": [177, 493], "phase_curve_model": 599, "phase_filt": 89, "phase_max": 493, "phase_min": 493, "phase_model": 599, "phasebackgroundestim": 439, "phasebackgroundmak": [174, 439, 459, 461, 493], "phasecurv": [280, 453, 599], "phasecurve_lsi_dc": 599, "phasecurvemodel": 416, "phasecurvetablemodel": [403, 405], "phasecurvetempl": 403, "phasogram": [280, 599], "phi": [19, 20, 26, 202, 223, 224, 227, 230, 231, 233, 234, 235, 239, 242, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 322, 416, 488, 507, 508, 515, 528, 547, 560, 561, 562, 564, 565, 566, 571, 573, 574, 575, 577, 578, 582, 583, 585, 586, 587, 588], "phi_0": [223, 225, 226, 230, 233, 234, 235, 239, 242, 246, 247, 255, 257, 259, 260, 266, 267, 270, 271, 273, 274, 275, 277, 281, 416, 501, 571, 574, 575, 578, 582, 585, 586, 587, 588], "phi_ref": [280, 599], "philipp": [453, 454], "phone": 413, "photon": [44, 231, 254, 376, 407, 465, 473, 483, 488, 506, 508, 528, 547, 580, 604], "photutil": [144, 392, 406, 454], "physic": [128, 129, 132, 134, 136, 311, 313, 338, 339, 391, 417, 421, 436, 471, 480, 505, 508, 509, 511, 514, 525, 540, 542, 580, 604, 607, 608], "physicist": [17, 19, 20, 21, 22, 24, 25, 26, 27], "pi": [19, 20, 30, 31, 32, 37, 54, 240, 285, 416, 508, 536, 560, 561, 562, 565, 566, 577, 598], "pick": [392, 399, 406, 418, 435, 528], "pictur": 393, "pie": 542, "piec": [392, 398, 406, 411, 421], "piecewis": [255, 256, 463, 508, 556, 558, 568, 569, 590], "piecewisebrokenpowerlawnormspectralmodel": 416, "piecewisebrokenpowerlawnormspectramodel": 416, "piecewisenormsectralmodel": 442, "piecewisenormspatialmodel": [263, 459, 461, 508, 563], "piecewisenormspectralmodel": [264, 421, 442, 445, 458, 460, 508, 549, 581], "pig": [13, 392, 394, 395, 434, 435, 437, 438, 439, 441, 442, 453, 455, 456, 460], "pii": 138, "pillar": 408, "pin": 454, "pink": [110, 111], "pint": [493, 542], "pintor": [405, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 456, 458, 459, 460, 461], "pip": [391, 395, 399, 409, 425, 426, 428, 435, 454, 514, 605], "pipe": [450, 451, 452], "pipelin": [395, 405, 407, 412, 422, 441, 509], "piron": 604, "piron2001": 604, "pivot": [19, 20, 26, 67, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 460, 498], "pivot_energi": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "pix": [194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 554], "pix_reg": 497, "pix_reg_rec": 497, "pix_to_coord": [194, 195, 198, 200, 201, 204, 206, 207, 460], "pix_to_idx": [194, 195, 198, 200, 201, 204, 206, 207], "pix_tuple_to_idx": 461, "pixcoord": 406, "pixel": [13, 83, 103, 106, 110, 111, 113, 114, 115, 120, 130, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 179, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 226, 229, 230, 239, 242, 253, 255, 266, 267, 271, 277, 281, 403, 433, 437, 451, 454, 474, 483, 485, 499, 504, 505, 515, 528, 538, 540, 552, 553, 554, 564], "pixel_area": 207, "pixel_scal": [120, 195, 207], "pixelis": 554, "pixelregion": [406, 551], "pixilis": 505, "pixreg": 562, "pixregion": 209, "pk": [140, 440, 465, 491, 492, 495, 496, 498, 510, 528, 570], "pks2155": [465, 491, 495], "pks2155_hess_lc": [125, 127, 148, 496, 500], "pl": [67, 80, 124, 129, 136, 173, 251, 258, 259, 260, 416, 468, 474, 485, 491, 498, 499, 500, 508, 509, 528], "pl_model": 597, "pl_spectrum": 511, "place": [83, 86, 87, 91, 92, 100, 103, 106, 110, 111, 144, 150, 151, 152, 153, 154, 155, 156, 160, 161, 166, 168, 169, 179, 184, 196, 197, 199, 205, 208, 209, 253, 279, 312, 364, 392, 393, 399, 400, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 418, 424, 438, 440, 470, 490, 505, 506, 508, 528, 538, 539, 603, 609], "placehold": 397, "plai": [413, 481], "plain": [409, 412, 505], "plainseri": 90, "plan": [396, 397, 401, 402, 406, 408, 409, 413, 418, 423, 434, 451, 453, 454, 455, 602], "planar": [281, 403], "plane": [29, 67, 68, 128, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 413, 497, 498, 505, 514, 537, 552, 555, 561, 604, 610], "plate": [207, 505], "platform": [409, 419, 445], "plausibl": [420, 482], "pleas": [104, 109, 221, 393, 395, 397, 399, 401, 429, 434, 435, 436, 445, 453, 455, 461, 468, 470, 471, 472, 473, 476, 479, 483, 484, 491, 492, 496, 499, 500, 509, 525, 531, 542], "pleasant": 395, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 102, 103, 106, 110, 111, 127, 130, 131, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 196, 197, 198, 199, 201, 204, 205, 206, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 286, 290, 369, 379, 380, 384, 385, 386, 387, 388, 389, 390, 391, 393, 406, 407, 408, 410, 411, 414, 417, 422, 430, 433, 436, 439, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 460, 461, 463, 464, 466, 468, 472, 474, 476, 477, 479, 480, 484, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 504, 506, 508, 510, 511, 512, 514, 515, 516, 517, 520, 525, 528, 532, 534, 535, 536, 538, 542, 544, 545, 546, 548, 551, 599, 600, 604, 607, 609], "plot_absorb": [463, 570, 590], "plot_at_energi": [150, 151, 514], "plot_bia": [153, 158], "plot_broken_powerlaw": [463, 571, 590], "plot_compound": [463, 572, 590], "plot_const": [463, 559, 568], "plot_constant_spectr": [463, 573, 590], "plot_constant_tempor": [463, 592, 601], "plot_containment_radiu": [157, 163, 165, 167], "plot_containment_radius_vs_energi": [157, 163, 165, 166, 167, 169, 514, 515], "plot_contour_lin": 501, "plot_correl": [212, 501], "plot_count": [110, 111], "plot_dat": 609, "plot_datapoint": 509, "plot_dens": 509, "plot_disk": [463, 560, 568], "plot_distribut": [461, 477, 479], "plot_energi": [83, 484], "plot_energy_depend": [150, 156, 514, 544], "plot_energy_offset": 83, "plot_err": 130, "plot_error": [19, 20, 26, 66, 67, 102, 223, 224, 225, 226, 227, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 410, 465, 468, 470, 472, 479, 480, 482, 498, 501, 526], "plot_excess": [110, 111, 448], "plot_exp_cutoff_powerlaw": [463, 574, 590], "plot_exp_cutoff_powerlaw_3fgl": [463, 575, 590], "plot_exp_cutoff_powerlaw_norm_spectr": [463, 576, 590], "plot_expdecay_tempor": [463, 593, 601], "plot_extension_error": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281], "plot_fit": [102, 110, 111, 466, 470, 471, 472, 481, 493, 525], "plot_gauss": [463, 561, 568], "plot_gauss_spectr": [463, 577, 590], "plot_gaussian_tempor": [463, 594, 601], "plot_gen_gauss": [463, 562, 568], "plot_generalized_gaussian_tempor": [463, 595, 601], "plot_grid": [164, 196, 197, 199, 205, 208, 209, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 417, 447, 458, 479, 499, 503, 504, 505, 506, 508, 516], "plot_heatmap": 212, "plot_hist": [205, 555], "plot_imag": 83, "plot_interact": [196, 197, 199, 205, 208, 209, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 447, 454, 479, 488, 505, 525, 526], "plot_kernel": 164, "plot_kwarg": [470, 472, 481], "plot_linear_tempor": [463, 596, 601], "plot_logparabola": [463, 578, 590], "plot_logparabola_norm_spectr": [463, 579, 590], "plot_map_rgb": 459, "plot_mask": [110, 111, 197, 205, 209, 551], "plot_matrix": [153, 499, 515], "plot_migr": 158, "plot_naima": [463, 580, 590], "plot_npred_sign": [459, 479, 481, 526], "plot_offset2_distribut": 83, "plot_offset_depend": [150, 156], "plot_panel": 379, "plot_phasogram": 280, "plot_piecewise_norm_spati": [463, 563, 568], "plot_piecewise_norm_spectr": [463, 581, 590], "plot_point": [463, 564, 568], "plot_posit": [229, 253, 507], "plot_position_error": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281], "plot_powerlaw": [463, 582, 590], "plot_powerlaw2": [463, 583, 590], "plot_powerlaw_norm_spectr": [463, 584, 590], "plot_powerlaw_tempor": [463, 597, 601], "plot_profil": 130, "plot_psf_vs_rad": [157, 163, 165, 166, 167, 169, 515], "plot_rad_max_vs_energi": [168, 461, 472], "plot_region": [204, 205, 229, 253, 389, 472, 485, 507, 551, 555], "plot_residu": [102, 103, 106, 110, 111, 443, 445, 479, 526], "plot_residuals_spati": [103, 106, 110, 111, 479, 488, 526], "plot_residuals_spectr": [103, 106, 110, 111], "plot_rgb": 459, "plot_shel": [463, 565, 568], "plot_shell2": [463, 566, 568], "plot_sine_tempor": [463, 598, 601], "plot_smooth_broken_powerlaw": [463, 585, 590], "plot_spati": 445, "plot_spectrum": [102, 150, 479, 492, 499], "plot_spectrum_datasets_off_region": [442, 458, 459, 470, 472, 481, 551], "plot_stat": 470, "plot_super_exp_cutoff_powerlaw_3fgl": [463, 586, 590], "plot_super_exp_cutoff_powerlaw_4fgl": [463, 587, 590], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [463, 588, 590], "plot_templ": [463, 567, 568], "plot_template_phase_tempor": [463, 599, 601], "plot_template_spectr": [463, 589, 590], "plot_template_tempor": [463, 600, 601], "plot_theta_squared_t": 513, "plot_tim": 83, "plot_ts_profil": [127, 470, 471, 485, 490, 500], "plotconfig": 509, "plotmixin": [110, 111], "plotter": [379, 509, 610], "plsuperexpcutoff3fgl": 452, "plsuperexpcutoff4fgl": 437, "plt": [19, 20, 26, 66, 67, 131, 150, 156, 157, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 380, 389, 392, 393, 430, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 525, 526, 528, 534, 535, 536, 542, 544, 545, 546, 548, 551, 560, 562, 566, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 610], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 230, 413, 419, 508], "plug": 422, "pmf": 405, "png": [157, 400, 412, 430, 532, 534, 535, 536, 538, 539, 544, 545, 546, 548, 551, 555, 607, 610], "po": [155, 207, 551], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 110, 111, 113, 114, 121, 125, 127, 128, 129, 132, 133, 135, 136, 137, 141, 146, 148, 155, 157, 160, 166, 168, 169, 179, 180, 182, 183, 184, 186, 187, 189, 190, 192, 193, 196, 197, 199, 204, 205, 208, 209, 214, 221, 229, 253, 257, 269, 288, 292, 295, 297, 303, 320, 324, 330, 336, 346, 384, 392, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 426, 433, 436, 438, 439, 445, 447, 448, 450, 451, 452, 453, 455, 458, 459, 460, 463, 466, 467, 469, 472, 473, 474, 479, 484, 485, 488, 490, 491, 492, 493, 495, 499, 501, 503, 504, 505, 508, 509, 510, 515, 517, 520, 527, 530, 531, 537, 538, 539, 542, 547, 551, 554, 556, 558, 561, 562, 568, 580, 602, 603, 604], "point_sourc": 403, "pointer": 400, "pointing_altaz": [420, 459], "pointing_galact": 91, "pointing_info": [85, 94, 464], "pointing_posit": [166, 473, 484, 488], "pointing_radec": [83, 91, 459, 514], "pointing_t": 94, "pointing_zen": 459, "pointinginfo": [85, 451], "pointinginfometadata": [90, 105], "pointingmetadata": 420, "pointingmod": 85, "pointlik": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 453, 551], "points_scal": 330, "pointskyregion": [178, 183, 204, 257, 448, 472, 484], "pointsourc": [403, 530], "pointspatialmodel": [19, 20, 72, 80, 136, 263, 416, 417, 438, 458, 474, 476, 479, 480, 483, 484, 490, 498, 499, 507, 508, 515, 525, 526, 564], "pointspreadfunct": 503, "poisson": [106, 111, 294, 297, 298, 299, 305, 308, 309, 315, 348, 404, 405, 436, 441, 468, 473, 477, 488, 513, 604, 605, 607], "poisson_stats_imag": 610, "poissonian": [297, 493, 496, 604], "poissonlikelihoodfitt": 450, "polar": [51, 54, 319, 392], "pole": [51, 406, 505], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 197], "polici": 396, "pollut": 407, "pollux": 412, "polygon": [197, 211, 406], "polygonis": 406, "polygonpixelregion": 406, "polygonskyregion": [211, 406], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 250, 505], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [334, 338, 339], "pool_kwarg": [338, 339], "poolmethodenum": 334, "poon": 451, "poor": [17, 19, 20, 21, 22, 24, 25, 26, 27], "poorli": [504, 509, 549], "pop": [92, 100, 203, 253], "popitem": 203, "popul": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 393, 413, 452, 531, 533, 580, 603], "popular": 605, "port": 452, "pos_ob": 481, "pos_on": 193, "pos_target": [481, 493], "posit": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 103, 104, 105, 106, 109, 113, 114, 125, 126, 127, 128, 129, 132, 133, 136, 154, 155, 161, 164, 166, 169, 179, 182, 184, 193, 195, 196, 197, 199, 204, 205, 206, 207, 208, 209, 210, 217, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 292, 294, 298, 316, 317, 320, 321, 324, 325, 380, 392, 399, 403, 405, 406, 416, 417, 418, 419, 435, 437, 442, 445, 447, 460, 461, 464, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 492, 493, 497, 498, 499, 503, 504, 505, 506, 507, 508, 510, 514, 515, 528, 538, 539, 540, 542, 547, 548, 551, 552, 553, 555, 560, 561, 562, 564, 580, 607], "position_angl": 473, "position_error": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 439], "position_lonlat": [225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281], "position_off": 193, "positv": 456, "posixpath": [16, 355], "possibl": [33, 82, 87, 91, 139, 159, 392, 393, 395, 399, 400, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 417, 420, 423, 424, 426, 436, 437, 445, 452, 454, 459, 461, 465, 470, 474, 476, 477, 482, 485, 499, 501, 503, 504, 505, 509, 515, 518, 520, 526, 528, 540, 542, 549, 554, 555, 580, 605, 606], "possibli": [87, 91, 125, 398, 402, 403, 405, 406, 410, 411, 413, 414, 420, 423, 445, 509, 549], "post": [52, 401, 420], "postbuild": 423, "poster": [395, 419, 424, 449], "posterior": [221, 410, 501, 511], "posteriori": 511, "postfix": 392, "postgresql": 412, "potenti": [122, 400, 408, 412, 422, 482, 542], "potentiel": 419, "power": [19, 20, 26, 27, 102, 120, 125, 127, 129, 135, 143, 164, 166, 169, 195, 217, 219, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 270, 272, 273, 274, 275, 278, 282, 285, 290, 297, 345, 403, 405, 433, 439, 451, 453, 461, 463, 465, 473, 476, 479, 483, 485, 488, 491, 492, 493, 495, 507, 508, 511, 542, 556, 569, 570, 590, 597], "power_spectrum": 297, "power_spectrum_param": 297, "powerlaw": [182, 259, 261, 297, 403, 404, 408, 451, 453, 463, 466, 476, 484, 485, 498, 508, 509, 511, 526, 556, 584, 591, 601], "powerlaw2spectralmodel": [251, 259, 260, 264, 416, 468, 476, 508, 528, 583], "powerlaw_with_paramet": 297, "powerlawnormspectralmodel": [67, 237, 258, 260, 264, 279, 415, 416, 421, 442, 460, 479, 480, 483, 484, 488, 499, 507, 508, 515, 525, 549, 563, 584, 589], "powerlawspectr": 136, "powerlawspectralmodel": [70, 72, 76, 80, 102, 110, 111, 116, 119, 124, 127, 133, 136, 218, 220, 258, 259, 264, 286, 392, 416, 417, 421, 465, 466, 468, 471, 473, 474, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 498, 499, 500, 507, 508, 509, 511, 514, 515, 525, 526, 528, 540, 559, 560, 561, 562, 564, 565, 566, 567, 570, 572, 581, 582, 592, 593, 594, 595, 596, 597, 598, 599, 600], "powerlawspectramodel": 421, "powerlawtemporalmodel": [276, 508, 597], "pp": [311, 313], "pppc": [17, 19, 20, 21, 22, 24, 25, 26, 27], "pppc4dm": 530, "pprint": [87, 91, 606], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pr": [392, 402, 404, 406, 416, 417, 419, 421, 422, 423, 439, 440], "practic": [405, 409, 414, 417, 418, 419, 420, 470, 499, 506, 508, 526, 538, 542, 551, 604], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 105, 109, 126, 127, 392, 395, 401, 413, 419, 420, 425, 426, 442, 454, 456, 471, 476, 477, 480, 482, 485, 496, 498, 500, 501, 507, 511, 538, 544], "preced": [336, 406, 408, 419, 508], "precis": [134, 136, 157, 163, 165, 167, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 392, 410, 418, 419, 484], "precision_factor": [166, 169, 196, 197, 199, 205, 208, 209], "precomput": [26, 102, 127, 461, 499, 507], "pred": 538, "predefin": [426, 428, 447, 485, 490, 491, 525], "predic": 403, "predict": [102, 103, 106, 109, 110, 111, 124, 125, 127, 128, 129, 132, 133, 136, 143, 173, 176, 182, 189, 257, 269, 300, 311, 313, 314, 340, 388, 398, 403, 404, 405, 442, 459, 460, 465, 471, 473, 476, 477, 479, 481, 483, 485, 488, 499, 500, 504, 511, 525, 526, 540, 542, 546, 547, 549, 570, 604, 607], "prefer": [87, 91, 366, 392, 397, 399, 403, 411, 413, 419, 425, 426, 430, 485, 492, 505, 506, 511, 520, 521, 605, 607], "prefix": [201, 403], "preliminari": [401, 413, 421, 450, 452, 460, 474, 503, 515], "prepar": [82, 176, 402, 403, 412, 422, 423, 471, 480, 500, 504, 508, 515, 525, 550, 602], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [77, 87, 91, 318], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 461, 474, 496, 505, 580, 604], "present": [15, 70, 82, 85, 91, 92, 100, 107, 111, 125, 127, 170, 198, 203, 229, 237, 253, 318, 392, 393, 395, 405, 408, 412, 413, 417, 420, 422, 424, 445, 466, 472, 476, 477, 490, 491, 495, 496, 497, 503, 504, 505, 507, 538, 540, 543, 555, 605, 607], "preserv": [87, 91, 106, 196, 197, 199, 201, 205, 208, 209, 409, 499, 506], "preserve_count": [196, 197, 199, 205, 208, 209, 505], "press": 514, "pretti": [406, 413, 424, 430], "prevent": [197, 231, 318, 445, 479, 549], "preview": [395, 517], "previou": [74, 87, 91, 221, 392, 395, 406, 413, 414, 418, 423, 436, 442, 460, 461, 472, 482, 483, 505, 508, 510, 511, 528, 537], "previous": [292, 409, 441, 453, 454, 464, 470, 479, 480, 498, 504, 506], "primari": [26, 87, 91, 196, 197, 199, 200, 208, 209, 397, 419, 441, 456, 500, 505], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 200, "primary_band": 505, "primaryflux": [19, 20, 497, 530], "primaryhdu": 505, "prime": 23, "primer": 410, "princip": 482, "principl": [392, 419, 421, 470, 552], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 102, 103, 110, 112, 117, 124, 127, 129, 136, 151, 153, 156, 157, 163, 165, 167, 176, 179, 218, 220, 229, 244, 253, 286, 316, 317, 326, 358, 392, 393, 403, 404, 407, 412, 417, 420, 429, 430, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 525, 526, 528, 540, 542, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 609], "print0": 392, "print_level": [479, 488, 501, 526], "print_stack": 392, "printout": [392, 452, 453, 499], "prior": [19, 20, 99, 102, 103, 106, 110, 111, 217, 218, 219, 220, 223, 226, 227, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 284, 396, 401, 422, 460, 461, 463, 465, 466, 470, 471, 472, 473, 476, 479, 480, 485, 488, 491, 492, 498, 501, 502, 508, 509, 512, 520, 526, 528, 589, 602], "prior_inverse_cdf": 422, "prior_registri": 511, "prior_stat_sum": [217, 218, 219, 220, 421, 511], "priorfitstatist": 421, "priori": [417, 477, 506], "prioriti": [389, 401, 403, 404, 406, 419, 423], "priormodel": 421, "priorparamet": [238, 248, 262, 284, 421, 511], "privat": [392, 401, 416, 453, 516, 517], "pro": [392, 408], "probabl": [13, 102, 137, 146, 147, 158, 219, 238, 248, 284, 295, 395, 398, 399, 400, 402, 405, 406, 410, 413, 415, 421, 422, 424, 470, 473, 488, 501, 505, 508, 509, 511, 515, 546, 547, 548, 604, 605, 607, 608], "probe": [136, 303, 422, 508, 509], "problem": [19, 20, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 312, 369, 400, 402, 406, 414, 421, 429, 457, 501, 542], "problemat": [411, 417, 420, 491, 542], "proce": [395, 424, 426, 428, 456, 465, 466, 470, 471, 483, 488, 491, 506, 507, 514, 515, 525, 526], "procedur": [405, 418, 423, 424, 465, 474, 479], "proceed": [413, 419, 516], "process": [11, 83, 93, 128, 129, 132, 136, 137, 146, 172, 197, 209, 337, 338, 339, 348, 392, 393, 395, 397, 398, 400, 401, 402, 404, 405, 407, 408, 412, 415, 418, 419, 420, 427, 431, 437, 442, 445, 447, 453, 460, 461, 466, 470, 474, 481, 483, 484, 498, 499, 504, 509, 516, 523, 526, 532, 539, 541, 542, 603, 604, 605], "process_lots_of_data": 392, "processor": 413, "procur": 412, "prod": 434, "prod3": 413, "prod3b": 514, "prod5": [483, 484, 514], "produc": [15, 103, 106, 110, 111, 115, 125, 289, 291, 392, 393, 398, 407, 408, 412, 417, 418, 420, 422, 424, 439, 465, 466, 470, 472, 474, 480, 481, 482, 483, 488, 491, 493, 497, 501, 504, 509, 511, 514, 526, 542, 545, 547, 604, 605], "product": [109, 137, 146, 196, 197, 199, 202, 205, 208, 209, 280, 398, 407, 408, 419, 420, 430, 445, 459, 460, 465, 468, 474, 484, 493, 499, 501, 504, 509, 515, 517, 540, 547, 604], "prof_mak": 129, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 77, 102, 103, 106, 121, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 146, 157, 163, 165, 166, 167, 169, 193, 197, 205, 214, 241, 243, 293, 315, 331, 350, 351, 395, 404, 406, 410, 411, 419, 426, 428, 433, 435, 442, 445, 450, 452, 454, 455, 460, 461, 463, 470, 471, 481, 486, 487, 490, 491, 492, 500, 501, 511, 520, 530, 540, 542, 560, 604, 607], "profile_err": 130, "profile_high": 485, "profile_new": 485, "profuma": 530, "program": [392, 408], "programmat": 479, "progress": [15, 82, 120, 132, 136, 214, 339, 398, 401, 408, 409, 424, 445, 452, 453, 454, 460, 509, 542], "progress_download": 542, "proj": [103, 106, 110, 111, 176, 195, 196, 197, 207, 208, 209, 470, 504, 505, 515, 526, 551], "project": [103, 110, 129, 173, 179, 195, 196, 197, 199, 204, 205, 207, 208, 209, 226, 229, 230, 239, 242, 253, 255, 266, 267, 271, 277, 281, 325, 351, 392, 393, 394, 395, 397, 399, 406, 408, 409, 413, 419, 437, 445, 453, 459, 471, 474, 477, 481, 485, 493, 503, 505, 506, 507, 515, 523, 525, 526, 528, 530, 551, 554, 555, 565, 566, 603, 605, 610], "projected_distance_axi": 129, "prompt": 605, "pronounc": 542, "pronunci": 542, "prop_cycl": 389, "propag": [53, 130, 302, 403, 410, 439, 459, 501], "proper": [45, 100, 393, 407, 419, 458, 459, 472, 479, 542], "properli": [136, 189, 397, 407, 419, 457, 458, 470, 471, 500, 501, 525, 538, 606], "properti": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 96, 105, 125, 126, 173, 207, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 304, 389, 392, 393, 403, 405, 416, 417, 420, 421, 442, 445, 447, 452, 453, 455, 458, 459, 470, 472, 481, 483, 485, 498, 506, 508, 510, 528, 539, 555, 604], "propos": [392, 394, 396, 397, 398, 399, 401, 409, 418, 419, 421, 423, 435, 438, 439, 441, 442, 453, 459], "proprietari": 412, "protect": 461, "proto": [16, 84, 90, 105, 126], "proton": [285, 547, 580], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 397, 403, 405, 408, 409, 410, 412, 413, 450, 452, 453, 460, 531], "prov": 412, "proven": [396, 408], "provid": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 83, 84, 85, 87, 88, 90, 91, 102, 103, 105, 106, 110, 111, 115, 126, 132, 136, 137, 139, 146, 153, 154, 172, 186, 187, 192, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 221, 244, 277, 278, 281, 297, 315, 318, 385, 392, 393, 402, 403, 405, 407, 408, 409, 412, 413, 414, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 435, 438, 439, 440, 442, 445, 447, 456, 459, 461, 464, 470, 472, 473, 474, 484, 488, 496, 498, 499, 500, 501, 504, 505, 506, 508, 509, 510, 515, 516, 517, 518, 520, 526, 528, 530, 532, 537, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 552, 553, 554, 555, 556, 564, 567, 580, 589, 602, 603, 604, 605, 607, 610], "proxi": 402, "prune": [395, 423], "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudo": 295, "pseudonym": 395, "psf": [16, 82, 87, 88, 96, 103, 104, 106, 109, 110, 111, 113, 114, 115, 155, 157, 162, 163, 164, 165, 166, 167, 169, 176, 183, 192, 207, 229, 253, 269, 316, 317, 392, 398, 402, 403, 404, 405, 408, 433, 435, 439, 440, 441, 442, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 459, 461, 464, 466, 470, 471, 472, 474, 476, 477, 479, 481, 483, 484, 488, 490, 499, 504, 506, 510, 514, 516, 517, 525, 526, 538, 540, 542, 547, 550, 555, 604], "psf3d": [88, 157, 162, 165, 167, 192, 435, 453, 548], "psf68": 464, "psf_": 538, "psf_3gauss": [87, 157, 514, 548], "psf_assym": 503, "psf_file": 101, "psf_kernel": [166, 515], "psf_kernel_map": [164, 515], "psf_king": [87, 165, 548], "psf_map": [104, 109, 166, 169], "psf_map_reco": [169, 516], "psf_mean": 515, "psf_new": 503, "psf_out": [166, 169], "psf_r95": 506, "psf_tabl": [82, 87, 163, 503, 517], "psf_theta": 392, "psf_updat": [104, 109], "psf_valu": [157, 165, 167], "psfkernel": [106, 166, 169, 197, 209, 404, 414, 454, 548], "psfking": [162, 447, 548], "psfmap": [103, 104, 106, 109, 110, 111, 154, 155, 161, 162, 164, 169, 176, 183, 192, 404, 405, 414, 435, 438, 439, 441, 442, 454, 460, 461, 474, 499, 515, 542, 548], "psfnd": 503, "psr": [493, 498, 528], "psyf24sb": 495, "pub": 395, "public": [6, 382, 383, 395, 397, 406, 411, 415, 418, 424, 449, 466, 480, 490, 491, 495, 603, 610], "publicli": [514, 516, 517], "publish": [11, 409, 424, 470, 515], "pull": [393, 396, 397, 400, 401, 402, 403, 404, 405, 406, 413, 418, 419, 423, 424, 432], "puls": [77, 243], "pulsar": [30, 31, 32, 35, 39, 40, 42, 50, 54, 60, 64, 77, 83, 402, 413, 435, 437, 456, 459, 461, 463, 477, 482, 489, 494, 508, 520, 532, 533, 542], "pulsar_analysi": [413, 463, 493, 494], "pulsat": 268, "pulse_profil": 77, "pulse_profile_best_fit": 77, "pulse_profile_radio": 77, "pulse_stat": 493, "punch": [458, 460], "pure": [392, 409, 411, 413, 551], "purpl": 555, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 342, 366, 396, 398, 404, 407, 411, 416, 418, 419, 453, 474, 499, 507, 508, 546], "push": [392, 395, 423, 456], "put": [201, 392, 393, 395, 397, 399, 400, 403, 413, 423, 424, 430, 436, 473, 483, 506, 515, 542, 605], "pwbpl": 416, "pwd": [395, 426, 428], "pwl": [19, 20, 26, 127, 218, 220, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 286, 403, 416, 421, 465, 468, 483, 500, 508, 511, 540, 559, 560, 561, 562, 564, 565, 566, 567, 570, 572], "pwl2": 508, "pwl_decai": 483, "pwl_norm": [416, 508, 584], "pwn": [43, 498, 528, 535], "pwne": 482, "py": [392, 393, 399, 406, 409, 411, 414, 423, 424, 430, 435, 437, 438, 446, 451, 455, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 522, 523, 525, 526, 528, 529, 542, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 605], "py310": 395, "py35": 452, "pycharm": 436, "pydant": [16, 84, 90, 105, 126, 391, 439, 458, 460, 479], "pydantic_cor": [16, 84, 90, 105, 126], "pydanticdeprecatedsince20": 479, "pydanticserializationerror": [16, 84, 90, 105, 126], "pydanticundefin": [16, 84, 90, 105, 126], "pydata": [447, 461], "pydocstyl": 393, "pyfact": [433, 451], "pyflak": 447, "pyirf": 460, "pyjok": 391, "pymc": 410, "pymotw": 605, "pypi": [409, 420, 423, 424, 426, 427], "pyplot": [19, 20, 26, 66, 67, 83, 131, 157, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 380, 385, 430, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 525, 526, 528, 534, 535, 536, 542, 544, 545, 546, 548, 551, 560, 562, 566, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 610], "pyproject": 442, "pyregion": 406, "pytest": [392, 393, 395, 424, 453], "python": [11, 16, 84, 90, 105, 126, 144, 318, 359, 391, 395, 396, 397, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 419, 420, 423, 424, 425, 426, 427, 428, 429, 431, 433, 434, 435, 437, 438, 445, 447, 450, 451, 452, 453, 454, 455, 456, 459, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 521, 523, 525, 526, 528, 530, 541, 542, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 605], "python3": [355, 427, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 567, 593], "python_execut": [464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528], "python_vers": [464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528], "pytorch": 410, "pyx": [395, 424], "pyyaml": [391, 409, 434, 438], "q": [26, 83, 87, 91, 387, 497], "q08xt3im": 495, "qauvslzx": 474, "qol": 461, "qtabl": [87, 91, 407, 495], "quadrat": [505, 528, 608], "qualiti": [205, 413, 453, 454, 459, 509, 510, 526, 542, 603, 610], "quantifi": [460, 482, 495, 496, 511], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 103, 104, 106, 107, 109, 110, 111, 113, 114, 115, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 176, 180, 181, 182, 184, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 217, 219, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 288, 294, 297, 298, 301, 302, 303, 304, 306, 312, 317, 318, 320, 322, 324, 325, 330, 348, 350, 351, 362, 366, 392, 393, 398, 401, 403, 406, 407, 408, 410, 416, 417, 420, 421, 436, 438, 442, 445, 446, 454, 455, 456, 464, 472, 474, 483, 484, 485, 491, 495, 496, 498, 499, 503, 504, 505, 506, 508, 514, 516, 517, 528, 534, 535, 536, 538, 542, 547, 555, 583, 593, 595, 604, 607, 609], "quantity_support": [503, 560], "quasar": 140, "quentin": [410, 415, 416, 437, 438, 439, 440, 441, 442, 445, 447, 448, 456, 457, 458, 459, 460, 461], "queri": [408, 412, 450, 498], "question": [358, 395, 397, 399, 400, 401, 403, 404, 405, 406, 409, 411, 417, 429, 434, 435, 453, 454, 455, 481, 509, 528, 542, 543, 605], "questionnair": [399, 453], "quetin": 439, "quick": [83, 88, 103, 106, 110, 111, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 392, 413, 424, 474, 476, 479, 481, 483, 492, 499, 503, 507, 514, 516, 517, 518, 520, 528, 530, 539], "quickest": 393, "quickli": [392, 393, 395, 397, 408, 409, 413, 419, 422, 424, 426, 452, 470, 479, 496, 516, 546, 605], "quicklook": 83, "quickplot": 197, "quicksort": [87, 91], "quickstart": 431, "quiescent": 570, "quit": [87, 91, 392, 421, 483], "quival": 403, "quk24xa7": 504, "quot": [74, 286, 392, 393, 497], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 158, 193, 206, 319, 392, 393, 418, 424, 471, 480, 484, 501, 504, 525, 532, 547, 551, 560, 561, 562, 566, 570], "r0lm4pge": 495, "r68": [83, 113, 114, 157, 166, 169], "r70": [67, 498], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 266, 267, 497, 562, 565, 566], "r_0": [30, 33, 38, 48, 230, 242, 266, 507, 560, 562, 566], "r_1": [39, 48], "r_eval": 242, "r_exp": [36, 48], "r_in": [44, 171, 181, 266, 477, 552], "r_m": 562, "r_out": 44, "r_out_max": 171, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 144, 179, 392, 393, 405, 408, 464, 470, 472, 474, 477, 481, 484, 490, 491, 493, 495, 498, 504, 506, 513, 514, 515, 516, 526, 528, 530, 542, 546, 609], "ra_pnt": 517, "ra_tru": [392, 405], "rad": [33, 83, 88, 103, 106, 110, 111, 113, 114, 115, 154, 155, 157, 161, 163, 165, 166, 167, 168, 169, 179, 192, 268, 408, 447, 459, 472, 499, 503, 504, 515, 547, 548, 551, 598], "rad_axi": [103, 106, 110, 111, 115, 166, 169, 499, 503, 504, 542], "rad_di": [45, 532], "rad_index": 163, "rad_max": [82, 83, 87, 88, 162, 168, 185, 447, 456, 458, 459, 472], "rad_max_2d": [87, 168, 178, 183, 185, 472], "radec": [83, 94, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 176, 392, 393, 503, 505, 528], "radecsi": 567, "radesysa": 567, "radi": [254, 580], "radial": [28, 30, 35, 36, 39, 40, 45, 131, 193, 197, 344, 392, 403, 411, 417, 435, 450, 452, 460, 483, 485, 504, 514, 530, 532, 548, 551], "radian": [17, 18, 21, 22, 24, 25, 27, 202, 225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281], "radiat": [231, 542, 565, 566, 580], "radiative_model": [254, 580], "radii": [27, 497, 515, 561], "radio": [30, 31, 32, 77, 140, 406, 505], "radio_profil": 77, "radiobutton": [479, 488, 505, 525, 526], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 103, 106, 110, 111, 124, 129, 130, 157, 163, 165, 166, 167, 169, 171, 179, 181, 197, 207, 209, 210, 229, 230, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 279, 281, 316, 317, 350, 393, 406, 408, 416, 417, 435, 444, 445, 449, 459, 464, 466, 470, 471, 473, 474, 476, 477, 479, 481, 483, 484, 490, 491, 493, 495, 497, 499, 503, 504, 506, 507, 508, 510, 514, 525, 526, 528, 535, 536, 549, 551, 552, 555, 560, 561, 562, 565, 566], "radius_inn": [52, 53], "radius_max": [350, 485], "radius_min": 350, "radius_reverse_shock": [50, 53, 535], "radmax": [447, 448, 459, 460], "radmax2d": [83, 88, 162, 185, 445, 461, 472], "rai": [11, 19, 20, 26, 36, 37, 52, 53, 57, 59, 63, 66, 83, 93, 124, 128, 129, 132, 135, 136, 140, 172, 231, 285, 286, 303, 304, 338, 339, 392, 398, 403, 404, 406, 410, 422, 424, 426, 430, 431, 436, 452, 454, 459, 460, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 498, 499, 501, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 525, 526, 528, 530, 532, 533, 537, 538, 539, 542, 545, 549, 551, 552, 570, 602, 603, 604, 605, 606, 607, 610], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 105, 126, 129, 198, 203, 229, 231, 253, 277, 278, 279, 281, 318, 369, 392, 406, 416, 417, 420, 421, 439, 456, 459, 460, 461, 484], "raise_error": [16, 84, 90, 105, 126], "raj2000": [498, 528], "ran": [423, 514], "random": [19, 20, 26, 33, 42, 45, 46, 47, 87, 91, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 341, 342, 343, 344, 345, 346, 347, 348, 395, 404, 405, 408, 422, 437, 449, 453, 483, 508, 542, 606, 607, 609], "random_se": 404, "random_st": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 341, 342, 345, 346, 347, 348, 392, 405, 473, 483, 484], "randomli": [46, 101, 118, 392], "randomnumb": 345, "randomst": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 342, 345, 346, 347, 348, 392], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 77, 80, 83, 87, 91, 92, 100, 101, 102, 103, 106, 110, 111, 128, 136, 153, 166, 168, 169, 182, 194, 195, 198, 200, 201, 204, 205, 207, 217, 219, 223, 224, 227, 228, 230, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 253, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 279, 280, 282, 283, 288, 331, 343, 345, 346, 347, 378, 385, 392, 398, 404, 405, 407, 412, 417, 436, 441, 442, 445, 453, 454, 456, 466, 470, 472, 473, 476, 479, 480, 482, 484, 491, 492, 493, 496, 498, 499, 500, 501, 503, 505, 506, 508, 509, 510, 511, 515, 516, 525, 526, 528, 538, 540, 542, 562, 573, 603, 607], "rangl": 19, "rapid": [140, 303, 398, 401, 417, 418], "rare": [391, 392, 411, 505], "raster": [95, 197], "rate": [44, 45, 83, 88, 150, 151, 182, 189, 297, 348, 405, 430, 454, 470, 472, 493, 504, 509, 514, 515, 517, 532, 545, 604], "rather": [120, 124, 128, 132, 136, 397, 410, 414, 453, 456, 458, 460, 461, 466, 501, 505, 528, 538, 561, 607], "ratio": [106, 111, 171, 195, 196, 197, 298, 315, 417, 464, 493, 514, 552, 604, 606, 607, 608, 610], "rave": 412, "ravel": [195, 483], "raw": [125, 182, 528], "rc": [196, 197, 199, 205, 208, 209, 389, 505], "rc_context": [196, 197, 199, 205, 208, 209, 505], "rc_param": [196, 197, 199, 205, 208, 209, 505], "rcparam": 389, "rdbu": 525, "rdbu_r": [103, 106, 110, 111], "rdf": 412, "re": [87, 91, 96, 127, 128, 129, 133, 173, 196, 197, 199, 205, 208, 209, 214, 316, 317, 385, 392, 393, 395, 397, 399, 400, 406, 407, 408, 410, 412, 414, 415, 416, 417, 429, 433, 445, 447, 454, 468, 470, 471, 477, 479, 480, 481, 492, 501, 503, 507, 510, 515, 525, 528, 540, 542, 564, 605], "reach": [53, 135, 210, 397, 402, 405, 422, 508, 509], "reactiv": 456, "reactivenestedsampl": 422, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 103, 106, 107, 110, 111, 116, 119, 120, 124, 125, 127, 129, 131, 133, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 178, 196, 197, 199, 203, 204, 205, 208, 209, 214, 229, 231, 244, 253, 280, 281, 282, 287, 289, 291, 292, 354, 357, 377, 380, 385, 387, 392, 393, 395, 397, 402, 403, 404, 405, 408, 412, 413, 415, 417, 419, 420, 421, 426, 428, 439, 442, 445, 453, 454, 456, 459, 460, 461, 465, 470, 471, 472, 477, 479, 482, 483, 496, 499, 500, 501, 503, 508, 509, 511, 514, 515, 516, 520, 525, 528, 539, 540, 542, 544, 545, 546, 548, 567, 599, 600, 605, 608, 610], "read_arf": 107, "read_bkg": 107, "read_builtin": [231, 465, 570], "read_covari": [229, 253], "read_dataset": 15, "read_fil": 422, "read_lazi": 447, "read_model": 15, "read_pha": 107, "read_rmf": 107, "read_xspec_model": 282, "readabl": [372, 403, 447, 471, 525], "reader": [420, 464, 473, 476, 479, 481, 484, 488, 492, 514], "readi": [402, 420, 429, 604], "readili": [413, 422, 509], "readm": [395, 419], "readthedoc": [13, 128, 189, 204, 214, 282, 413, 436, 451, 501, 503, 514, 539, 553, 555], "real": [51, 392, 395, 424, 473, 474, 477, 484, 501, 506, 509, 538, 547], "realis": [397, 406, 419], "realist": 421, "realiti": 465, "realiz": [398, 604], "realli": [392, 399, 406, 409, 412, 473, 488, 501], "rearrang": 413, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392, 397, 398, 399, 400, 403, 404, 405, 407, 409, 411, 414, 419, 422, 453, 465, 483, 501, 509, 511, 516, 538, 605], "reassign": [19, 20, 26, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284], "rebas": [392, 406], "rebin": [127, 148, 407, 447, 460, 491, 496, 499], "rebuild": [16, 84, 90, 105, 126, 480], "recarrai": [87, 91, 157, 167], "receiv": [410, 413, 414, 416, 418, 509], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 402, 406, 407, 408, 409, 412, 413, 422, 427, 434, 448, 454, 480, 509, 514, 516], "recip": [394, 408, 423, 431, 445, 493, 542, 543, 604, 607], "recipi": 412, "reco": [103, 106, 110, 111, 153, 186, 392, 398, 407, 417, 455, 456, 464, 499, 504, 516, 604], "reco_exposur": [124, 461], "reco_psf": [103, 106, 110, 111, 115, 504, 516], "recogn": [464, 473, 476, 479, 481, 488, 492, 514], "recognis": [403, 605], "recognit": 419, "recommend": [92, 100, 101, 102, 154, 155, 161, 166, 169, 183, 229, 253, 293, 330, 331, 391, 392, 393, 395, 399, 401, 409, 412, 419, 424, 425, 427, 430, 437, 454, 470, 471, 472, 482, 499, 501, 504, 508, 509, 515, 525, 542, 549, 554, 555, 605, 606, 609], "recomput": [127, 417, 477], "recompute_ul": 127, "recon_vers": [515, 528], "reconstruct": [83, 103, 104, 106, 109, 110, 111, 113, 114, 115, 124, 135, 136, 143, 150, 151, 153, 154, 155, 158, 168, 169, 182, 189, 392, 398, 403, 405, 442, 457, 464, 466, 470, 473, 476, 477, 479, 483, 488, 492, 499, 504, 506, 511, 516, 538, 540, 546, 547, 548, 555, 604], "recopsfmap": [162, 456, 459], "record": [83, 88, 392, 397, 398, 412, 419, 514], "recov": 408, "rectangl": [226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 351, 406, 485, 551], "rectangleskyregion": [207, 225, 226, 281, 350, 351, 406, 466, 497, 506, 551, 555], "rectangular": [485, 551, 555], "recurr": 407, "recurs": [358, 420], "red": [102, 229, 253, 297, 303, 382, 464, 465, 470, 473, 477, 479, 482, 497, 509, 510, 511, 560, 561], "redesign": 401, "redistribut": 546, "redo": 493, "redshift": [19, 20, 231, 416, 528, 570], "redshift_scan": 465, "reduc": [6, 11, 15, 100, 103, 106, 110, 111, 164, 166, 169, 174, 184, 196, 197, 199, 201, 205, 208, 209, 398, 399, 401, 403, 404, 408, 411, 414, 419, 420, 426, 433, 438, 445, 454, 460, 463, 465, 466, 468, 471, 472, 473, 479, 480, 483, 488, 490, 491, 492, 495, 502, 506, 510, 512, 516, 520, 538, 542, 552, 555, 561, 562, 603, 604, 605], "reduce_data": 408, "reduce_over_ax": [196, 197, 199, 205, 208, 209, 476, 504, 516], "reduct": [6, 11, 172, 398, 404, 405, 408, 413, 414, 415, 420, 426, 439, 441, 459, 463, 477, 481, 482, 485, 493, 499, 502, 503, 506, 507, 510, 512, 520, 521, 527, 539, 542, 547, 549, 551, 552, 603, 604], "ref": [83, 94, 103, 110, 124, 129, 136, 195, 204, 207, 229, 253, 393, 417, 474, 481, 485, 491, 498, 499, 500, 503, 505, 515, 528, 555, 593, 594, 595, 596, 597, 598, 605], "ref_templ": [16, 84, 90, 105, 126], "refactor": [392, 404, 406, 407, 408, 416, 435, 436, 437, 439, 440, 441, 442, 445, 447, 449, 451, 453], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 103, 105, 106, 107, 110, 111, 113, 114, 115, 120, 125, 126, 127, 128, 130, 134, 137, 139, 140, 146, 147, 158, 172, 173, 176, 179, 180, 183, 184, 185, 188, 189, 191, 206, 207, 208, 209, 214, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 286, 297, 299, 303, 304, 305, 306, 311, 312, 313, 315, 345, 346, 372, 373, 374, 375, 392, 393, 398, 400, 403, 404, 406, 408, 410, 416, 417, 418, 419, 420, 422, 424, 431, 445, 452, 453, 461, 465, 466, 468, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 488, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 504, 505, 507, 508, 509, 511, 514, 515, 516, 525, 526, 528, 531, 538, 540, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 572, 574, 575, 576, 578, 579, 581, 582, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 609], "referenc": [392, 604], "reference_flux": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "reference_map": 505, "reference_model": [125, 127, 137, 146, 464, 465, 474, 480, 500], "reference_model_default": [125, 127], "reference_spectral_model": [125, 127], "reference_tim": [86, 88, 103, 106, 110, 111, 200, 206, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 458, 459, 484, 492, 496, 504, 505, 600], "refit": 500, "reflect": [174, 178, 179, 180, 184, 193, 401, 406, 408, 411, 414, 426, 438, 445, 447, 450, 451, 454, 465, 466, 470, 471, 472, 481, 491, 495, 506, 513, 547, 550, 604], "reflected_bkg_mak": 504, "reflectedbgestim": 408, "reflectedregion": 465, "reflectedregionsbackgroundmak": [174, 179, 439, 461, 466, 470, 472, 481, 491, 495, 504], "reflectedregionsfind": [178, 184, 437, 551], "refpix": [207, 208, 209], "refresh": [87, 91], "refus": 392, "reg": [103, 106, 110, 111, 506, 508], "reg_dataset": 499, "regard": [417, 420, 470, 547], "regardless": [87, 91], "regeard": [457, 458, 459, 460, 461], "regi": [398, 403, 404, 408], "region": [27, 83, 91, 100, 103, 106, 108, 110, 111, 116, 119, 124, 125, 127, 129, 131, 135, 140, 154, 155, 161, 166, 169, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 195, 196, 197, 199, 204, 205, 207, 208, 209, 211, 214, 225, 226, 229, 230, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 279, 281, 282, 285, 298, 315, 349, 350, 351, 352, 353, 385, 388, 389, 391, 393, 396, 398, 399, 407, 408, 409, 411, 415, 417, 422, 426, 437, 438, 439, 441, 445, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 465, 471, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 505, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528, 537, 538, 539, 540, 542, 547, 549, 550, 552, 553, 554, 560, 561, 580, 603, 604, 606, 607, 608], "region_coord": 204, "region_ev": 493, "region_find": [178, 472], "region_io": 204, "region_map": [205, 209, 555], "region_map_1": 555, "region_map_2": 555, "region_mask": [83, 195, 207, 406, 470, 477, 481, 499, 504, 506, 526, 549, 551, 552], "region_nd_map": 205, "region_new": 352, "region_pix": 508, "region_weight": 207, "regionfind": [179, 180, 184], "regiongeom": [103, 106, 110, 111, 125, 129, 176, 183, 185, 186, 187, 189, 190, 205, 226, 230, 239, 242, 255, 266, 267, 269, 271, 277, 281, 406, 407, 415, 426, 441, 442, 445, 464, 466, 470, 472, 473, 481, 485, 491, 492, 493, 495, 498, 499, 500, 504, 515, 528, 538, 551, 554], "regionndmap": [26, 77, 107, 110, 111, 135, 177, 178, 183, 185, 196, 197, 199, 204, 208, 209, 226, 230, 239, 242, 244, 255, 266, 267, 271, 277, 278, 281, 389, 406, 426, 441, 442, 445, 448, 456, 459, 484, 500, 515, 538, 554, 600], "regions_ds9": 506, "regionsfind": [178, 179, 184, 447], "regist": [412, 508], "registri": [55, 98, 121, 162, 174, 249, 251, 263, 264, 276, 414, 421, 438, 441, 442, 445, 454, 498, 508], "regress": 395, "regul": 419, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 195, 203, 207, 295, 401, 421, 422, 447, 459, 488, 505, 506, 516], "regulargridinterpol": [330, 392], "regularis": 421, "regularli": [421, 517], "reichardt": 449, "reimplement": 403, "rej_sampl": 405, "reject": [396, 397, 405], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 106, 107, 111, 134, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 206, 207, 208, 209, 266, 286, 302, 348, 407, 419, 445, 492, 496, 509, 516, 566, 607], "rel_reduction_of_f_": 501, "relat": [11, 13, 28, 67, 83, 85, 212, 303, 398, 400, 403, 405, 406, 409, 411, 412, 413, 414, 419, 422, 424, 441, 442, 454, 460, 499, 508, 514, 532, 602, 607], "relationship": 412, "relative_variability_amplitud": 496, "relative_variability_error": 496, "relative_variability_signific": 496, "relativist": 580, "releas": [11, 51, 65, 95, 394, 396, 397, 399, 400, 406, 409, 410, 412, 420, 425, 427, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 466, 470, 471, 480, 490, 491, 495, 514, 516, 517, 520, 525, 526, 530, 542, 544, 545, 546, 547, 548], "relev": [125, 294, 298, 374, 392, 398, 407, 412, 413, 417, 422, 423, 470, 471, 474, 490, 491, 492, 495, 507, 509, 510, 514, 516, 517, 525, 526, 538, 539, 609], "reli": [125, 392, 397, 398, 402, 403, 407, 411, 417, 418, 437, 442, 445, 456, 468, 479, 506, 530, 607], "reliabl": [395, 427, 477, 501, 506, 606], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 397, 398, 399, 400, 405, 409, 412, 419, 435, 454, 472, 507, 548], "remaind": [221, 516], "remark": 472, "rememb": [392, 406, 501, 520, 605], "remi": [415, 416, 437, 438, 439, 440, 441, 442, 445, 456, 457, 458, 459, 460, 461], "remind": [201, 419, 474, 481, 500], "remnant": [28, 52, 466, 482, 508, 533], "remot": [395, 423], "remov": [13, 87, 91, 92, 96, 100, 166, 169, 181, 194, 195, 200, 203, 204, 207, 209, 253, 317, 395, 399, 400, 402, 403, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 422, 425, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 470, 477, 479, 493, 499, 506, 510, 514, 531, 542, 551], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 127, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 402, 403, 411, 413, 416, 433, 436, 438, 439, 440, 441, 445, 455, 456, 459, 605], "rename_ax": [194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 456], "rename_column": [87, 91, 127], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 369, 392, 393, 400, 453], "renorm": [477, 549], "renormalis": 181, "reoptim": [128, 129, 132, 133, 214, 435, 465, 485, 490, 500, 501, 511, 525], "reorder": 461, "reorder_ax": [196, 197, 199, 205, 208, 209, 459], "reorgan": 445, "reorganis": 413, "repeat": [393, 479, 516], "repl": 392, "replac": [15, 87, 91, 100, 103, 106, 110, 111, 154, 155, 161, 166, 194, 195, 197, 200, 204, 205, 207, 209, 279, 292, 392, 402, 403, 406, 410, 412, 414, 420, 422, 427, 436, 437, 439, 441, 442, 459, 460, 461, 493], "replace_axi": [194, 195, 204, 207], "replace_column": [87, 91], "repo": [393, 400, 423, 424, 433, 446], "report": [87, 395, 408, 423, 424, 431, 433, 447, 448, 453], "repositori": [87, 91, 392, 395, 397, 400, 402, 419, 423, 445, 454, 483, 517], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 84, 87, 90, 91, 103, 105, 106, 110, 111, 126, 195, 197, 199, 201, 202, 204, 206, 269, 318, 326, 336, 392, 403, 404, 405, 406, 410, 414, 415, 416, 417, 435, 459, 465, 484, 485, 498, 500, 501, 504, 505, 506, 508, 515, 528, 537, 538, 540, 544, 545, 546, 548, 554, 602, 603, 604, 609], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 105, 126, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 392, 406, 420, 435, 437, 459, 468, 498, 505, 508, 509, 554], "reprocess": 398, "reproduc": [94, 102, 127, 393, 408, 409, 410, 412, 413, 419, 420, 425, 427, 454, 504], "reproject": [182, 196, 197, 199, 205, 208, 209, 388, 392, 398, 406, 409, 417, 439, 446, 454, 456, 460, 505, 506], "reproject_by_imag": [196, 197, 199, 205, 208, 209, 460], "reproject_to_geom": [196, 197, 199, 205, 208, 209, 456], "request": [85, 125, 127, 393, 396, 397, 399, 400, 401, 402, 403, 404, 406, 413, 417, 418, 419, 421, 424, 432, 483, 500, 506, 540], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 84, 85, 87, 88, 90, 91, 95, 103, 105, 106, 110, 111, 112, 117, 126, 127, 130, 134, 136, 150, 151, 153, 156, 157, 158, 163, 165, 168, 173, 196, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 318, 366, 370, 371, 390, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 415, 416, 417, 418, 419, 421, 422, 423, 425, 427, 433, 438, 439, 440, 441, 446, 447, 449, 450, 451, 452, 455, 456, 457, 461, 465, 466, 472, 477, 480, 491, 492, 493, 495, 496, 499, 503, 505, 506, 508, 509, 514, 526, 540, 542, 555], "require_ev": 82, "required_ax": [150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 503], "required_hdu": 448, "required_irf": [16, 82, 471, 472, 476, 477, 479, 525], "required_nam": [198, 200, 201, 206], "required_paramet": [157, 165, 167], "rerun": [407, 495], "resampl": [103, 106, 110, 111, 127, 148, 149, 154, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207, 208, 209, 387, 445, 447, 496, 542], "resample_axi": [127, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 387, 442, 491, 496], "resample_energy_axi": [103, 106, 110, 111, 154, 442, 447, 499], "resample_energy_edg": [470, 542], "resampled_energy_edg": 149, "resampled_map": [196, 197, 199, 205, 208, 209], "rescal": 504, "research": [408, 419], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 217, 219, 237, 279, 393, 442], "reset_autoscal": [217, 219], "reset_data_cach": [103, 106, 110, 111], "reset_to_default": 237, "reshap": [196, 197, 199, 205, 208, 209, 464, 484, 503, 505], "resid": [415, 508], "residu": [72, 102, 103, 106, 110, 111, 173, 403, 404, 408, 437, 442, 448, 455, 461, 477, 499, 501, 515, 538, 551, 604], "resolut": [52, 153, 154, 158, 195, 207, 401, 403, 405, 406, 453, 459, 461, 498, 515], "resolv": [16, 84, 90, 105, 126, 393, 395, 402, 406, 407, 415, 416, 429, 435, 454, 461, 463, 489, 491, 494, 520, 551], "resort": 476, "resourc": [453, 520], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 84, 87, 90, 91, 105, 107, 126, 127, 140, 195, 197, 207, 209, 293, 392, 402, 407, 419, 421, 442, 461, 474, 477, 492, 500, 505, 506, 509, 516, 540, 555, 608], "respond": 419, "respons": [6, 109, 153, 154, 155, 158, 160, 161, 179, 392, 398, 399, 401, 403, 404, 405, 407, 408, 417, 419, 426, 452, 453, 454, 455, 466, 470, 471, 472, 473, 488, 492, 503, 504, 507, 514, 516, 517, 518, 520, 525, 526, 538, 539, 544, 546, 548, 603, 604], "rest": [26, 395, 409, 411, 498, 537], "restart": 509, "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 507], "restore_statu": [218, 220, 229, 253, 511], "restore_valu": [218, 220, 229, 253], "restrict": [87, 91, 406, 479, 499, 506], "restructur": [393, 407, 408, 409, 411, 414, 420, 424, 439, 445, 446, 447, 448, 450, 459], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 102, 103, 105, 106, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 138, 139, 144, 146, 147, 158, 164, 166, 169, 182, 186, 187, 192, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 213, 214, 215, 216, 221, 229, 253, 281, 292, 297, 318, 385, 391, 392, 393, 395, 397, 399, 401, 402, 403, 404, 405, 408, 410, 411, 412, 415, 419, 421, 422, 427, 430, 437, 445, 447, 448, 453, 455, 459, 460, 461, 465, 468, 470, 472, 473, 479, 481, 483, 484, 488, 491, 492, 493, 496, 498, 499, 501, 505, 506, 510, 511, 515, 516, 517, 525, 526, 537, 540, 542, 555, 593, 604, 606, 607], "result1": 465, "result2": 507, "result_0": 509, "result_1": 509, "result_2": 509, "result_ecpl": 468, "result_joint": [466, 470, 479, 509], "result_list": 385, "result_log_parabola": 468, "result_minuit": 501, "result_pwl": 468, "result_scipi": 501, "result_stack": 470, "results_joint": 480, "results_prior": 511, "results_simplex": 501, "results_t": 482, "resum": [221, 509], "retain": [498, 555], "retriev": [87, 91, 417, 419, 466, 468, 470, 505, 508, 510, 516, 526, 539, 554, 555], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 290, 292, 293, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 311, 312, 313, 315, 316, 317, 318, 320, 322, 324, 325, 329, 331, 336, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 361, 362, 363, 372, 373, 374, 375, 376, 378, 380, 382, 383, 385, 387, 388, 398, 402, 403, 404, 405, 406, 407, 412, 416, 417, 420, 421, 422, 438, 439, 442, 445, 448, 454, 456, 461, 470, 472, 477, 481, 485, 491, 492, 495, 498, 499, 500, 501, 504, 505, 506, 508, 509, 511, 528, 532, 554, 555, 589, 607], "return_delta": 348, "return_diff": 348, "return_typ": 90, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [408, 412, 442, 460], "reval": 562, "reveal": [422, 509], "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 200, 253, 505, 535], "reverse_lon_radec": 159, "revert": 461, "review": [395, 400, 401, 402, 405, 406, 408, 409, 411, 413, 414, 416, 417, 419, 421, 422, 455, 456, 509, 554], "revis": [413, 509], "revisit": [39, 40, 231], "rework": 440, "rewrit": [398, 401, 408, 440, 450, 451, 453, 454, 455, 605], "rewritten": [452, 455], "rf": 497, "rgb": [387, 389, 459, 464, 470], "rglob": [82, 483, 514], "rhe": 185, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rhul": [311, 313], "rich": [392, 408, 509], "rid": 398, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 110, 125, 127, 136, 156, 235, 240, 260, 273, 274, 299, 302, 305, 380, 392, 406, 416, 419, 474, 481, 483, 490, 492, 514, 560, 561, 562, 570, 571, 574, 575, 577, 578, 582, 585, 586, 587, 588, 593, 594, 595, 597, 605, 606, 607, 608], "rightarrow": [566, 608], "rigid": 397, "ring": [106, 124, 171, 174, 181, 195, 196, 197, 398, 401, 408, 411, 426, 435, 439, 441, 451, 452, 453, 454, 463, 475, 478, 482, 506, 520, 541, 547, 550, 553, 604], "ring2dkernel": [171, 181], "ring_background": [463, 477, 478], "ring_bkg_mak": 552, "ring_mak": 477, "ringbackgroundestim": [398, 453], "ringbackgroundmak": [171, 174, 439, 477, 504, 547, 552], "rint": 461, "rise": [140, 243, 496, 595], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 395, 419], "rkqx_nvo": 504, "rm": [153, 154, 158, 275, 416, 472, 501, 544, 546, 547, 548, 562, 593, 594, 595, 596, 597, 598], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [107, 108, 111, 153, 154, 155, 451, 470], "rmf_ob": 107, "rmffile": 107, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 342, 345, 346, 347, 348, 392], "roadmap": [396, 399, 408, 418, 434, 455], "roberta": [453, 454], "robust": [392, 422, 454, 509], "roellinghoff": 461, "roi": [67, 408, 498, 517, 604], "roi_max": 408, "role": [412, 453, 504], "rolf": 433, "rolk": 604, "rolke2005": 604, "roll": 515, "room": [402, 412], "root": [19, 20, 26, 125, 126, 134, 136, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 307, 310, 392, 410, 445, 474, 530, 540, 605, 607], "rosillo": 456, "rotang": 484, "rotat": [22, 51, 54, 176, 179, 180, 184, 189, 230, 239, 242, 484, 551, 560, 561], "rough": [72, 408], "roughli": [120, 395, 400, 406, 408, 411, 413, 452, 477], "round": [87, 91, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 422, 470, 554], "round_to_edg": [194, 195, 204, 207], "round_trip": [16, 84, 90, 105, 126], "routin": 433, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 144, 153, 326, 362, 386, 407, 417, 420, 456, 459, 470, 473, 484, 485, 495, 498, 501, 505, 514, 516, 517, 528, 537], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 498], "row_label": 386, "row_specifi": [83, 87, 91], "royalblu": 493, "rpovid": 407, "rspec": [67, 498], "rst": [395, 397, 413, 419, 423, 424, 440, 445], "rtd": 454, "rtol": [134, 136, 366, 392], "rtol_ax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209], "rtol_wc": 207, "ruben": 453, "rub\u00e9n": 453, "ruiz": [400, 408, 412, 413, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 453, 454, 455], "rule": [87, 91, 269, 288, 329, 419, 505, 554], "run": [16, 82, 83, 84, 88, 90, 93, 102, 104, 105, 109, 120, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 135, 136, 144, 145, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 204, 207, 214, 221, 222, 338, 339, 365, 385, 391, 392, 393, 399, 400, 402, 405, 407, 408, 409, 413, 415, 417, 421, 422, 423, 424, 425, 430, 436, 437, 440, 441, 452, 454, 455, 459, 461, 464, 465, 466, 468, 473, 474, 476, 477, 479, 480, 481, 483, 488, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 517, 520, 521, 523, 526, 528, 538, 539, 540, 542, 547, 549, 551, 552, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "run0": 509, "run1": 509, "run2": 509, "run_fit": [15, 471, 476, 525], "run_id": [83, 515, 528], "run_multiprocess": 542, "run_opt": 221, "runner": [16, 355, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 567, 570, 593, 599, 600], "runtim": [401, 420, 423], "runtimewarn": [472, 477, 483, 495, 517, 593], "rx": 466, "rxj": 466, "rxj1713_2016_250gev": 567, "r\u00e9gi": [398, 401, 402, 406, 407, 409, 411, 414, 415, 416, 417, 418, 420, 422, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "r\u00e9my": [410, 445, 447, 448, 456], "s0167947313003204": 138, "s10052": [311, 313], "s180": 303, "s2": 280, "s3": 280, "s_0": 542, "s_1": 542, "safari": [87, 91], "safe": [99, 102, 103, 106, 110, 111, 154, 155, 161, 166, 169, 174, 182, 392, 404, 406, 419, 439, 441, 442, 456, 457, 458, 459, 461, 466, 470, 499, 506, 526, 538, 603], "safe_mask": [16, 103, 110, 471, 476, 477, 479, 525], "safe_mask_mak": [172, 466, 470, 493, 504, 516, 549, 551, 552], "safe_mask_mask": [472, 481, 491, 495, 504], "safemaskconfig": 16, "safemaskmak": [172, 174, 414, 439, 440, 445, 447, 448, 460, 466, 470, 472, 481, 488, 491, 493, 495, 504, 506, 516, 525, 526, 549, 550, 551, 552], "safer": 422, "safeti": 419, "sagittariu": [33, 38], "saha": 453, "sai": [74, 397, 411, 412, 605], "said": [392, 397, 399, 516, 517, 605], "sake": [483, 501], "saldana": [231, 232, 459, 465, 570], "saldana21": 570, "samantha": 461, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 95, 100, 103, 106, 107, 110, 111, 124, 136, 137, 138, 144, 145, 146, 147, 157, 158, 164, 165, 166, 167, 169, 170, 172, 193, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 286, 297, 303, 311, 313, 385, 392, 395, 400, 402, 404, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 426, 427, 437, 438, 442, 445, 459, 468, 471, 472, 473, 479, 480, 483, 488, 490, 491, 493, 498, 499, 505, 506, 507, 508, 510, 511, 515, 516, 520, 525, 527, 538, 539, 540, 546, 554, 555, 605], "sampl": [19, 20, 26, 47, 93, 104, 109, 136, 139, 155, 157, 163, 165, 166, 167, 169, 196, 197, 199, 205, 207, 208, 209, 221, 222, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 293, 297, 306, 331, 340, 345, 346, 347, 348, 396, 404, 406, 407, 410, 413, 426, 433, 435, 437, 438, 441, 447, 454, 456, 459, 460, 461, 463, 472, 486, 487, 496, 499, 501, 502, 512, 520, 542], "sample_axi": 340, "sample_background": [104, 109, 439], "sample_coord": [155, 166, 169, 196, 197, 199, 205, 208, 209, 439, 441, 456], "sample_edisp": [104, 109], "sample_powerlaw": 411, "sample_psf": [104, 109], "sample_sourc": [104, 109], "sample_spher": [449, 609], "sample_tim": [228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 445, 456, 461], "sampler": [104, 222, 340, 401, 405, 422, 441, 445, 461, 483], "sampler_kwarg": 93, "sampler_opt": [221, 509], "sampler_result": [222, 509], "sampler_ultranest": 221, "samplerlikelihood": [221, 422], "samplerresult": [221, 509], "samreai": 509, "saniti": 453, "santiago": 461, "satisfi": [149, 173, 195, 196, 197, 318, 507, 509, 542], "save": [15, 19, 20, 26, 100, 136, 211, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 392, 400, 408, 412, 417, 421, 422, 461, 465, 479, 480, 483, 501, 506, 507, 516, 539], "savefig": [369, 430], "savez": 211, "saw": 431, "sba69nlt": 495, "sbpl": [270, 416, 508], "sc": [87, 91], "scalar": [87, 91, 164, 195, 196, 197, 199, 205, 208, 209, 318, 411, 447, 458, 460, 505, 554], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 105, 106, 111, 120, 126, 128, 129, 132, 157, 173, 201, 205, 206, 207, 209, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 290, 293, 317, 330, 331, 332, 348, 372, 373, 374, 385, 392, 393, 401, 406, 407, 410, 412, 416, 422, 440, 445, 446, 454, 457, 458, 459, 461, 471, 474, 484, 485, 490, 491, 492, 496, 497, 498, 500, 503, 504, 505, 508, 510, 511, 514, 525, 528, 530, 570, 592, 593, 594, 595, 596, 597, 598, 599, 600], "scale10": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 421, 580], "scale_method": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 421, 580], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 497], "scale_transform": [217, 219, 580], "scaled_featur": 317, "scaled_features_irf": [316, 317, 510], "scaledregulargridinterpol": [68, 231, 282, 440, 455], "scalespectralmodel": [128, 129, 132, 264, 416, 508], "scan": [19, 20, 95, 125, 127, 128, 129, 132, 133, 214, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 407, 417, 445, 485, 491, 500, 511, 540, 542], "scan_max": [19, 20, 128, 132, 136, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 465, 491, 500, 501], "scan_min": [19, 20, 128, 132, 136, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 465, 500, 501], "scan_n_sigma": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 501], "scan_n_valu": [19, 20, 128, 132, 133, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 465, 501, 511], "scan_prior": 511, "scan_valu": [19, 20, 214, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 485, 501], "scargl": [407, 453, 496], "scatter": [24, 229, 253, 414, 474, 481, 495, 560, 561], "sce": 547, "scenario": [87, 91, 397, 404, 415, 426, 500, 505, 508, 531, 606], "scengin": [87, 91], "schedul": 401, "schema": [15, 16, 84, 90, 105, 126, 408, 411, 412], "schema_gener": [16, 84, 90, 105, 126], "schema_json": [16, 84, 90, 105, 126], "scheme": [16, 84, 90, 102, 105, 107, 108, 126, 195, 196, 197, 206, 221, 244, 392, 398, 402, 404, 407, 415, 416, 417, 418, 420, 423, 438, 445, 456, 460, 484, 503, 505, 508, 509, 542, 547, 553, 554, 556], "schiavo": 461, "school": [419, 422], "scienc": [138, 196, 197, 199, 208, 209, 399, 401, 405, 408, 409, 413, 419, 422, 431, 453, 454, 473, 480, 492, 505, 508, 510, 514, 515, 520, 530, 542, 578, 604, 605], "sciencedirect": 138, "scientif": [393, 399, 416, 419, 427], "scientist": 514, "scikit": [144, 392, 406, 409, 413, 454, 506], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 209, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 316, 330, 371, 385, 391, 392, 395, 401, 406, 409, 410, 413, 419, 431, 435, 436, 437, 438, 450, 451, 452, 455, 457, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 602, 607], "scipy_mvn": 212, "scipy_opt": 501, "scitool": 583, "scope": [405, 406, 407, 408, 411, 412, 420, 531, 547], "scratch": [156, 392, 402, 406, 424, 479, 506], "screen": [87, 91, 505, 528], "script": [6, 87, 91, 127, 354, 355, 356, 357, 358, 359, 360, 393, 398, 399, 401, 403, 406, 408, 411, 412, 413, 419, 423, 424, 434, 435, 436, 437, 445, 446, 450, 453, 454, 455, 456, 460, 463, 465, 468, 470, 471, 474, 477, 479, 480, 481, 482, 483, 485, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 504, 507, 509, 511, 515, 522, 525, 526, 541, 542, 605], "scriptabl": 420, "scutum": [33, 38], "sdc": 514, "sdist": 424, "sdl7lltd": 495, "seaborn": 542, "seamless": 412, "seamlessli": 412, "search": [87, 91, 294, 298, 355, 392, 393, 430, 453, 454, 471, 474, 481, 482, 497, 498, 510, 525, 526, 528, 530, 542, 547, 605], "season": 413, "sebastian": 445, "sec": [54, 83, 94, 100, 132, 348, 501], "second": [42, 58, 83, 86, 87, 88, 91, 139, 153, 280, 306, 348, 351, 368, 372, 375, 381, 393, 400, 402, 404, 406, 410, 417, 419, 424, 439, 458, 465, 468, 470, 471, 474, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 495, 497, 499, 500, 501, 504, 505, 507, 509, 511, 514, 520, 525, 526, 527, 537, 606, 609], "secpl": [273, 274, 275, 416, 508], "section": [19, 87, 91, 297, 299, 305, 392, 393, 395, 397, 406, 408, 409, 411, 412, 416, 419, 422, 424, 442, 455, 473, 479, 483, 484, 488, 492, 498, 500, 501, 506, 507, 508, 528, 531, 542, 555, 603, 605, 609, 610], "secur": 506, "sed": [121, 124, 125, 126, 127, 129, 136, 205, 231, 391, 408, 410, 417, 426, 433, 452, 468, 474, 485, 491, 498, 499, 500, 525, 528, 604], "sed_fit": [463, 468, 469], "sed_fitting_gammacat_fermi": 413, "sed_typ": [19, 20, 26, 125, 126, 127, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 445, 464, 465, 468, 470, 471, 472, 480, 481, 485, 490, 491, 492, 498, 500, 526, 528, 540, 542, 580, 604], "sed_type_init": [71, 74, 75, 78, 125, 126, 127], "sed_type_plot_default": [125, 127], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 536], "sedov_taylor_end": [52, 53, 536], "seds_20230803": 64, "sedtypeenum": 126, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 103, 106, 110, 111, 120, 122, 124, 127, 128, 129, 132, 135, 136, 138, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 179, 181, 182, 189, 194, 195, 197, 199, 201, 202, 204, 207, 209, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 284, 287, 299, 305, 308, 309, 315, 318, 326, 342, 358, 382, 383, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 413, 414, 418, 419, 420, 421, 422, 424, 426, 427, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 450, 451, 452, 453, 454, 455, 456, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 485, 488, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 516, 520, 525, 526, 528, 530, 538, 539, 542, 547, 552, 553, 555, 583, 587, 588, 602, 604, 605, 606, 607, 609, 610], "seed": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 341, 342, 345, 346, 347, 348, 392, 453, 483, 580], "seed_photon_field": [254, 580], "seem": [392, 399, 400, 403, 409, 414, 530], "seen": [392, 406, 414, 466, 474, 480, 491, 505, 508, 515, 604], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 103, 106, 110, 111, 124, 176, 183, 196, 197, 198, 199, 201, 206, 208, 209, 218, 220, 229, 253, 269, 279, 292, 388, 389, 395, 402, 404, 405, 406, 407, 408, 412, 413, 415, 417, 420, 426, 428, 434, 437, 445, 449, 464, 470, 472, 473, 476, 477, 479, 480, 482, 483, 484, 488, 492, 493, 499, 500, 501, 504, 505, 506, 509, 510, 513, 514, 516, 517, 520, 527, 528, 540, 542, 546, 547, 551, 603, 605], "select_energi": [83, 539], "select_from_geom": [229, 253], "select_map_mask": 435, "select_mask": [83, 229, 253, 445, 507], "select_nested_model": [459, 461], "select_obs_id": [91, 481], "select_observ": [91, 96, 408, 491, 495, 510, 526, 542], "select_offset": [83, 483, 517, 539], "select_paramet": [83, 89, 493, 539], "select_phas": 402, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 229, 253, 406, 437, 445, 483, 484, 493, 507, 528, 539], "select_row_subset": 83, "select_sky_box": 406, "select_sky_circl": [91, 406], "select_tim": [83, 86, 88, 92, 100, 402, 417, 439, 484, 491, 495, 539], "select_time_rang": 91, "selected_energi": 539, "selected_ev": 83, "selected_id": 539, "selected_obs_t": [91, 510, 526], "selected_offset": 539, "selected_region": 539, "selected_tim": 539, "selection_al": [120, 136], "selection_mask": [229, 253, 507], "selection_opt": [16, 120, 122, 123, 124, 128, 129, 131, 132, 133, 135, 136, 445, 461, 465, 470, 471, 474, 476, 477, 479, 480, 481, 485, 490, 491, 492, 493, 500, 506, 516, 525], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [479, 488, 505, 525, 526], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 105, 125, 126, 127, 204, 205, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 269, 270, 272, 273, 274, 275, 278, 282, 392, 393, 403, 404, 406, 409, 416, 417, 420, 421, 422, 441, 477, 505, 508], "semant": [406, 412, 418], "semi": 230, "semiaxi": [230, 239, 242, 560, 561, 562], "semilogi": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 464, 484], "semimajor": 498, "semiminor": 498, "semver": 418, "send": 423, "sens": [392, 399, 402, 406, 408, 411, 413, 414, 477], "sensibl": 510, "sensit": [121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 286, 311, 313, 405, 413, 440, 442, 452, 453, 459, 460, 463, 467, 469, 488, 514, 520, 530, 547], "sensitivity_estim": 464, "sensitivity_t": 464, "sensitivityestim": [121, 434, 440, 464], "sent": 397, "sentenc": [397, 413, 419], "sep": [204, 401, 409, 416, 432, 508], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 195, 204, 207, 312, 381, 392, 393, 398, 399, 400, 401, 404, 405, 406, 407, 408, 411, 413, 414, 415, 422, 441, 445, 451, 453, 454, 458, 459, 473, 477, 479, 481, 488, 492, 498, 507, 508, 510, 531, 539, 547, 548, 560, 561, 565, 566, 580, 604], "septemb": [401, 409, 411, 413, 418], "sequenc": [87, 91, 92, 100, 103, 110, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 218, 229, 253, 318, 412, 424], "sequenti": [398, 470, 526], "seri": [87, 91, 127, 297, 302, 348, 401, 406, 407, 445, 461, 496], "serial": [16, 84, 87, 90, 91, 99, 100, 102, 103, 105, 106, 110, 111, 126, 398, 403, 407, 408, 412, 414, 417, 438, 441, 445, 447, 454, 456, 457, 458, 459, 460, 505, 508, 511, 530], "serialis": [20, 103, 106, 110, 111, 223, 224, 227, 229, 231, 233, 234, 235, 237, 238, 240, 244, 246, 247, 248, 250, 252, 253, 254, 256, 258, 259, 260, 262, 265, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 404, 406, 408, 411, 412, 414, 415, 416, 437, 439, 441, 445, 450, 453, 455, 456, 458, 459, 460, 511, 525, 542, 555, 600], "serializ": [16, 84, 90, 105, 126], "serialize_as_ani": [16, 84, 90, 105, 126], "serialize_method": [87, 91], "serializiaton": 404, "serilis": [26, 225, 226, 228, 230, 236, 239, 241, 242, 243, 245, 255, 257, 261, 266, 267, 268, 269, 271, 278, 283], "sersic": 416, "sersic2d": 416, "sersicspatialmodel": 416, "serv": [87, 91, 392, 397, 404, 408, 417, 422, 424, 447, 497, 546], "server": [415, 426, 428, 520], "servic": [412, 453], "servillat": 412, "session": [395, 408, 412, 419, 541], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 115, 122, 124, 125, 126, 127, 128, 129, 131, 132, 136, 138, 147, 153, 155, 166, 169, 172, 173, 176, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 217, 218, 219, 220, 221, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 273, 274, 275, 277, 280, 281, 282, 292, 306, 338, 340, 392, 393, 398, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 417, 418, 419, 420, 421, 424, 426, 428, 441, 447, 449, 451, 453, 456, 459, 460, 461, 464, 465, 466, 467, 470, 472, 473, 474, 476, 479, 481, 482, 483, 484, 485, 490, 491, 493, 498, 499, 500, 501, 504, 506, 508, 509, 510, 511, 514, 516, 517, 520, 526, 530, 538, 539, 542, 551, 553, 554, 555, 580, 602, 605, 608, 609], "set_by_coord": [196, 197, 199, 205, 208, 209, 505, 554], "set_by_idx": [196, 197, 199, 205, 208, 209, 505, 554], "set_by_pix": [196, 197, 199, 205, 208, 209, 554], "set_label": 495, "set_lim": [217, 219], "set_log": 16, "set_model": [15, 415, 471, 476, 490, 525], "set_models_paramet": 415, "set_parameter_factor": [218, 220], "set_parameters_bound": [229, 253], "set_prior": [253, 421], "set_prop_cycl": 464, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 212, "set_titl": [465, 466, 470, 474, 477, 481, 493, 497, 501, 503, 504, 507, 551, 562, 566, 570], "set_unit": [468, 500, 542], "set_xlabel": [464, 465, 466, 470, 473, 493, 495, 501, 509, 510, 511], "set_xlim": [468, 470, 471, 480, 493, 544, 570], "set_xscal": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "set_xtick": [562, 566], "set_ylabel": [464, 465, 466, 470, 485, 493, 495, 497, 501, 510, 570], "set_ylim": [464, 468, 470, 471, 472, 490, 493, 544, 570], "set_yscal": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 485, 497, 544], "set_ytick": [562, 566], "setdefault": 203, "seterr": 392, "setlevel": 481, "setter": [393, 421, 439, 445, 499], "settl": 419, "setup": [13, 394, 395, 396, 399, 404, 405, 409, 413, 421, 451, 455, 520, 605], "setuptool": [446, 605], "sever": [87, 91, 178, 397, 398, 399, 406, 407, 408, 411, 412, 417, 420, 422, 439, 440, 441, 445, 448, 457, 458, 459, 473, 480, 498, 509, 514, 515, 516, 542, 605, 607], "seyfert": 303, "sf": [312, 607], "sgr": 528, "shade": [197, 205, 209, 501, 509, 603], "shall": 395, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 103, 106, 110, 111, 112, 117, 124, 125, 129, 130, 136, 143, 144, 145, 151, 153, 156, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 212, 242, 293, 318, 331, 347, 403, 406, 410, 443, 458, 461, 468, 470, 472, 474, 476, 481, 484, 485, 491, 495, 496, 498, 499, 500, 503, 504, 505, 506, 508, 509, 514, 515, 528, 540, 554, 555, 556, 562, 566], "shape_ax": [195, 207], "share": [196, 197, 199, 203, 205, 208, 209, 392, 397, 404, 407, 411, 412, 415, 427, 445, 447, 459, 479, 480, 506, 507, 542, 605], "sharp": [243, 382, 383, 560], "she": [402, 407], "shear": 406, "sheet": [429, 542, 610], "shell": [52, 53, 80, 266, 267, 403, 408, 412, 416, 426, 428, 463, 508, 556, 558, 566, 568, 605], "shell2": [266, 463, 508, 556, 558, 568], "shell2d": 52, "shell2spatialmodel": [263, 267, 508, 566], "shellspatialmodel": [80, 263, 266, 416, 445, 508, 565], "sherpa": [108, 111, 153, 200, 201, 204, 205, 214, 299, 305, 391, 392, 401, 409, 410, 413, 414, 425, 426, 428, 435, 449, 450, 451, 452, 454, 461, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 555, 578, 606], "sherpa_opt": 501, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 281, 430, 461], "shim": 399, "shini": 376, "ship": [399, 400, 409, 434, 452, 473, 488, 493, 508, 542], "shock": [50, 52, 53, 535], "short": [392, 393, 396, 397, 401, 406, 409, 413, 416, 419, 442, 491, 496, 509, 515, 542, 543, 604, 607, 610], "short_observ": [491, 495], "shortcut": [82, 430, 447], "shorten": 445, "shorter": [303, 392, 393, 406, 413, 418, 442, 473, 491, 508, 605], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 101, 103, 105, 106, 109, 110, 111, 114, 116, 119, 125, 126, 127, 128, 132, 136, 139, 140, 141, 142, 148, 154, 155, 158, 164, 166, 169, 181, 186, 187, 192, 194, 195, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 311, 313, 318, 366, 381, 382, 383, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 418, 419, 420, 422, 423, 424, 426, 428, 429, 430, 435, 437, 459, 472, 479, 482, 483, 484, 492, 493, 499, 501, 503, 504, 505, 506, 507, 508, 509, 511, 514, 516, 538, 540, 542, 547, 549, 554, 605, 606, 608, 609], "shoulder": 285, "shouldn": [83, 392], "show": [11, 82, 87, 91, 129, 130, 131, 157, 176, 244, 389, 392, 393, 395, 404, 406, 407, 411, 413, 421, 422, 424, 434, 435, 439, 447, 452, 453, 454, 459, 460, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 518, 520, 521, 525, 526, 527, 528, 534, 535, 536, 542, 544, 545, 546, 548, 549, 551, 553, 560, 570, 589, 603, 605, 607, 610], "show_contour_label": 509, "show_dtyp": [87, 91], "show_in_brows": [87, 91, 481], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 542, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 511, "shower": [449, 514, 547], "shown": [19, 20, 26, 83, 164, 204, 205, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 387, 392, 399, 409, 410, 411, 420, 421, 423, 424, 439, 441, 466, 470, 474, 479, 481, 482, 483, 484, 491, 492, 493, 496, 504, 507, 508, 510, 511, 514, 526, 539], "showwarn": 392, "shrink": 509, "si": [83, 195, 204, 207, 229, 253, 285, 555], "side": [16, 84, 90, 105, 126, 207, 209, 294, 298, 392, 406], "sider": [604, 609], "sidereal_tim": 393, "siejkowski": 454, "sig": [385, 606, 607, 608], "sight": 530, "sigma": [19, 20, 30, 32, 48, 49, 124, 125, 126, 127, 128, 132, 133, 136, 144, 145, 153, 154, 158, 164, 165, 166, 169, 212, 214, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 292, 294, 298, 304, 311, 313, 416, 421, 465, 474, 481, 482, 488, 490, 496, 500, 501, 506, 508, 511, 525, 540, 546, 561, 577, 594, 607], "sigma1": 31, "sigma2": 31, "sigma_": [212, 561], "sigma_1": [31, 49, 157, 503], "sigma_10tev": [416, 508], "sigma_1tev": [416, 508], "sigma_2": [31, 49, 157, 503], "sigma_3": [157, 503], "sigma_err": 482, "sigma_gauss": 242, "sigma_laplac": 242, "sigma_m": 561, "sigma_nod": 508, "sigma_to_t": 607, "sigmav": 530, "sign": [217, 219, 294, 298, 395, 419, 441, 456, 540, 607], "signal": [83, 103, 106, 109, 110, 111, 181, 209, 268, 294, 298, 315, 417, 464, 470, 471, 477, 480, 490, 506, 513, 525, 530, 545, 549, 551, 604, 606, 607, 608], "signif_avg": 528, "signific": [77, 120, 124, 125, 126, 127, 128, 134, 135, 136, 138, 147, 148, 292, 294, 298, 302, 311, 313, 382, 383, 390, 397, 398, 399, 400, 407, 408, 413, 414, 417, 419, 441, 442, 450, 453, 454, 459, 460, 461, 463, 464, 470, 471, 475, 478, 479, 480, 481, 482, 490, 493, 495, 496, 498, 500, 501, 516, 520, 525, 528, 540, 542, 603, 604, 605, 610], "significance_lima": 441, "significance_map": [477, 479], "significance_map_off": 477, "significance_mask": 506, "significance_mask_inv": 506, "significancemapestim": 441, "significantli": [445, 465, 483, 514, 604], "signoff": 395, "silent": [456, 461], "silvia": 437, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 383, 392, 395, 404, 405, 406, 407, 408, 411, 413, 414, 417, 445, 459, 472, 496, 500, 505, 509, 510, 511, 528, 538, 546, 605], "similarli": [398, 400, 417, 420, 422, 445, 498, 501, 503, 505, 506, 508, 555], "simlat": 297, "simon": [458, 459, 460], "simpifi": 401, "simpl": [50, 52, 120, 144, 221, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 285, 392, 393, 404, 405, 406, 407, 408, 411, 412, 417, 420, 421, 435, 445, 449, 453, 454, 459, 464, 466, 468, 470, 471, 472, 473, 476, 479, 493, 495, 496, 500, 501, 505, 506, 509, 510, 517, 525, 526, 528, 532, 542, 603, 604, 605], "simple_norm": 209, "simple_rebin_lc": 407, "simplefilt": 542, "simpler": [184, 400, 405, 406, 415], "simplest": [464, 470, 496], "simplex": [214, 501], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 173, 214, 218, 220, 392, 406, 407, 417, 426, 427, 428, 456, 459, 464, 465, 466, 481, 499, 506, 507, 508, 528, 555, 605, 607], "simplic": [480, 483, 501, 508, 509, 511, 515], "simplif": [403, 416, 456], "simplifi": [136, 203, 399, 401, 403, 410, 417, 435, 438, 439, 440, 442, 445, 449, 456, 465, 468, 474, 547, 608], "simu": [488, 492, 511], "simul": [45, 83, 88, 93, 103, 106, 109, 110, 111, 114, 155, 166, 169, 297, 348, 402, 405, 408, 413, 420, 421, 426, 433, 437, 439, 441, 447, 450, 452, 453, 454, 459, 460, 461, 463, 467, 469, 476, 479, 481, 486, 487, 489, 493, 494, 507, 511, 514, 520, 532, 547, 603], "simulate_3d": [413, 454, 463, 487, 488], "simulate_dataset": [435, 439, 440], "simulate_observ": 93, "simulated_d": 472, "simulated_data": 93, "simulated_model": 472, "simultan": [421, 492, 499, 508, 511, 538], "sin": [560, 561, 562, 598], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 87, 91, 197, 207, 366, 392, 393, 398, 402, 406, 408, 409, 410, 411, 412, 413, 417, 419, 420, 421, 424, 445, 455, 456, 457, 458, 459, 460, 461, 465, 472, 477, 479, 491, 492, 495, 499, 507, 508, 511, 514, 516, 606, 609], "sine": [268, 403, 463, 556, 591, 601], "sine_model": 598, "sinetemporalmodel": [276, 508, 598], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 124, 128, 129, 132, 136, 154, 155, 166, 168, 169, 172, 176, 178, 183, 186, 187, 192, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 229, 253, 392, 398, 399, 402, 404, 405, 406, 407, 408, 409, 414, 415, 420, 421, 422, 426, 433, 435, 440, 441, 453, 459, 460, 464, 470, 472, 474, 476, 477, 490, 492, 498, 499, 504, 505, 507, 509, 511, 516, 517, 525, 528, 538, 540, 552, 554, 555, 602, 604], "singleobscubemak": 398, "singleobsimagemak": 398, "singleton": 342, "sinha": [404, 407, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461], "sink": 409, "sinu": [268, 508], "sinusoid": [268, 598], "sipocz": [409, 435, 437, 439, 441, 450, 451, 452, 453, 454, 455], "sip\u0151cz": [456, 461], "sit": 395, "site": [355, 424, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 567, 593, 605], "situat": [406, 407, 409, 547], "six": [411, 418], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 103, 104, 106, 109, 110, 111, 113, 114, 115, 116, 119, 130, 136, 139, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 171, 172, 178, 179, 180, 183, 184, 185, 193, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 212, 223, 224, 226, 227, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 306, 340, 341, 345, 346, 347, 348, 380, 392, 400, 403, 405, 406, 426, 428, 458, 460, 464, 472, 477, 479, 483, 491, 493, 498, 504, 505, 506, 508, 514, 515, 516, 517, 528, 538, 553, 560, 561, 609], "skeleton": 408, "sketch": 408, "skill": [395, 422, 430, 509], "skimag": 454, "skip": [16, 82, 84, 90, 105, 126, 164, 380, 393, 395, 404, 406, 413, 452, 495, 507], "skip_miss": [82, 453], "sklearn": 392, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 103, 106, 109, 110, 111, 120, 144, 154, 155, 166, 169, 189, 195, 196, 197, 199, 204, 205, 207, 208, 209, 229, 253, 269, 281, 285, 287, 320, 324, 325, 349, 351, 353, 379, 391, 392, 393, 405, 411, 426, 435, 437, 451, 452, 454, 465, 470, 471, 473, 474, 477, 488, 492, 493, 498, 505, 508, 514, 515, 520, 523, 525, 526, 527, 528, 530, 537, 538, 539, 542, 547, 548, 551, 553, 555, 560, 561, 565, 566, 567, 603, 604], "sky_circl": [91, 96, 491, 495, 510, 526], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 116, 119, 407, 465, 490, 491, 495, 498, 507, 508, 526, 572], "sky_model_pntpwl": 483, "sky_reg": 497, "sky_reg_rec": 497, "sky_region": 89, "skycood": 403, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 103, 106, 110, 111, 113, 114, 125, 127, 129, 131, 154, 155, 161, 166, 169, 179, 180, 182, 184, 186, 187, 189, 190, 192, 193, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 210, 225, 226, 229, 230, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 279, 281, 316, 317, 350, 351, 367, 388, 393, 403, 406, 417, 420, 464, 466, 470, 472, 473, 477, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 503, 504, 505, 506, 507, 508, 510, 513, 514, 515, 516, 526, 528, 542, 546, 551, 553, 555, 564, 610], "skycoord_from_t": 406, "skycoord_to_pixel_scale_angl": 406, "skycoordconfig": 16, "skycub": [398, 411, 451, 452, 453, 454], "skydiffusecub": [403, 416, 436, 441, 442, 454], "skydiffusemap": [403, 436], "skydir": [16, 83, 103, 106, 110, 111, 112, 117, 155, 166, 176, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 470, 471, 472, 476, 477, 479, 481, 482, 483, 484, 488, 490, 493, 497, 499, 503, 504, 505, 506, 508, 515, 516, 525, 526, 549, 551, 552, 553, 555, 561, 562, 563, 564, 610], "skydirfunct": 530, "skydisk": 436, "skydiskelong": 403, "skyellips": [435, 436, 437, 438], "skygaussian": 435, "skygaussianelong": 403, "skyimag": [398, 411, 451, 452, 453, 454], "skyimagelist": 451, "skymap": [196, 197, 199, 205, 208, 209, 406, 450, 451, 484], "skymap_band": [484, 600], "skymap_region": 484, "skymask": 452, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 103, 106, 110, 111, 116, 119, 125, 127, 133, 136, 137, 146, 173, 214, 229, 249, 253, 287, 292, 403, 404, 405, 407, 414, 416, 417, 435, 439, 440, 441, 445, 454, 460, 465, 466, 468, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 488, 490, 491, 492, 493, 495, 498, 499, 500, 501, 507, 509, 511, 515, 525, 526, 537, 538, 540, 559, 560, 561, 562, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602], "skypointsourc": 438, "skyregion": [100, 103, 106, 110, 111, 129, 154, 155, 161, 166, 169, 179, 180, 184, 199, 204, 205, 209, 229, 253, 349, 352, 406, 466, 483, 485, 506, 508, 546, 551, 555], "skyspatialmodel": [403, 454], "slack": [394, 395, 399, 416, 423, 429, 431, 434, 435, 605], "slew": 95, "slice": [83, 87, 91, 100, 101, 103, 106, 110, 111, 122, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 279, 281, 307, 398, 442, 482, 485, 491, 499, 500, 514, 554], "slice_by_coord": [125, 127, 460], "slice_by_energi": [100, 103, 106, 110, 111, 125, 127, 279, 442, 499], "slice_by_idx": [103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 442, 454, 456, 485, 491, 500, 505, 515], "slice_by_tim": [125, 127], "sliced_ax": 200, "sliced_geom": [194, 195, 204, 207], "sliced_lc": 491, "slicesampl": 422, "slide": [401, 474, 498], "slider": 505, "sliderstyl": [479, 488, 505, 525, 526], "slightli": [120, 201, 470], "slope": [27, 436], "slow": [87, 91, 214, 399, 408, 471, 501, 525, 526], "slower": [87, 91, 197, 221, 392, 400, 410, 509], "slowest": 424, "small": [383, 392, 398, 400, 406, 408, 409, 412, 413, 415, 420, 422, 424, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 490, 491, 505, 509, 511, 514, 515, 516, 517, 561, 565, 566, 604, 605], "smaller": [27, 155, 166, 169, 184, 195, 196, 197, 199, 205, 208, 209, 385, 395, 435, 454, 483, 491, 496, 501, 505, 511, 561], "smallest": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 265, 270, 272, 273, 274, 275, 278, 282, 474], "smooth": [103, 106, 110, 111, 120, 130, 131, 144, 196, 197, 199, 205, 208, 209, 229, 230, 253, 270, 384, 387, 445, 450, 451, 452, 454, 455, 463, 477, 479, 481, 485, 488, 493, 499, 504, 505, 507, 509, 515, 525, 526, 528, 556, 560, 569, 590, 610], "smooth_kernel": [103, 106], "smooth_radiu": [103, 106], "smoothbrokenpowerlawspectralmodel": [223, 264, 416, 440, 441, 508, 585], "sn": [45, 50, 52, 53], "sn_rate": [45, 532], "snippet": [393, 413, 542], "snr": [44, 50, 53, 67, 515, 535, 536], "snr_model": 536, "snrcat": [449, 498], "snrtruelovemcke": [50, 535, 536], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 102, 106, 111, 128, 130, 132, 133, 136, 137, 146, 149, 154, 155, 161, 166, 169, 193, 196, 197, 199, 201, 205, 208, 209, 214, 217, 219, 242, 281, 292, 366, 374, 382, 383, 392, 393, 395, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 420, 422, 423, 425, 426, 428, 430, 435, 437, 445, 455, 457, 458, 461, 466, 470, 472, 474, 476, 481, 482, 483, 488, 490, 497, 498, 500, 501, 505, 506, 508, 509, 511, 514, 515, 516, 520, 526, 542, 549, 551, 555, 562, 566, 605, 606, 607, 608], "social": 419, "soft": 303, "softwar": [196, 197, 199, 208, 209, 406, 407, 409, 412, 419, 420, 424, 505], "solar": 52, "sole": [402, 419], "solid": [194, 195, 204, 207, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 285, 408, 433, 435, 436, 437, 454, 477, 504, 505, 514, 545, 551, 604], "solid_angl": [194, 195, 204, 207, 505, 555], "solut": [19, 20, 26, 52, 137, 146, 153, 223, 224, 227, 231, 233, 234, 235, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 393, 395, 397, 399, 400, 405, 406, 408, 409, 410, 412, 413, 415, 417, 421, 422, 427, 500, 538, 540, 542, 608], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 400, 402, 403, 404, 405, 412, 447, 542], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 105, 126, 182, 203, 318, 326, 395, 397, 398, 399, 400, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 422, 424, 426, 427, 428, 429, 430, 431, 433, 435, 437, 445, 446, 448, 450, 452, 453, 454, 459, 464, 466, 468, 470, 472, 474, 476, 477, 480, 481, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 504, 505, 507, 508, 509, 511, 514, 515, 526, 528, 530, 531, 538, 539, 542, 547, 552, 554, 604, 605, 606, 607, 609], "some_class": 392, "some_map": 164, "some_map_convolv": 164, "somehow": [400, 406, 411], "someon": [395, 397, 413], "someth": [87, 91, 392, 393, 394, 395, 397, 400, 406, 409, 410, 413, 424, 426, 428, 473, 498, 555, 605], "sometim": [19, 20, 83, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 369, 392, 395, 399, 406, 413, 424, 426, 501, 542, 604, 609], "somewhat": [409, 514], "somewher": [409, 424], "soon": [395, 406, 412, 424], "sort": [82, 83, 87, 91, 102, 144, 354, 359, 360, 392, 409, 436, 461, 528], "sort_kei": [354, 359, 360], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 397, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 419, 424, 426, 431, 433, 435, 439, 440, 445, 446, 451, 452, 453, 454, 459, 460, 461, 463, 465, 467, 468, 469, 471, 472, 473, 475, 476, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 515, 516, 517, 520, 523, 525, 526, 527, 530, 531, 536, 538, 540, 542, 547, 550, 551, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 606, 607], "source1": 508, "source2": 508, "source_1": [403, 408], "source_2": 403, "source_42": 408, "source_fermi_3fgl": 468, "source_fermi_3fhl": 468, "source_gammacat": 468, "source_irf_model": 403, "source_librari": 514, "source_model": 583, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 498, 528], "source_name_alia": 56, "source_name_kei": 56, "source_po": [477, 481, 504], "source_population_model": [413, 439], "source_posit": [464, 482, 510], "sourcebackground": 403, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 406, 445, 498, 506, 528, 537], "sourcecatalog1lhaaso": [55, 70, 498], "sourcecatalog2fhl": [55, 71, 498, 537], "sourcecatalog2hwc": [55, 72, 498, 537], "sourcecatalog2pc": [55, 498], "sourcecatalog3fgl": [55, 74, 468, 498, 537], "sourcecatalog3fhl": [55, 75, 229, 253, 468, 498, 507, 528, 537], "sourcecatalog3hwc": [55, 76, 498, 537], "sourcecatalog3pc": [55, 498], "sourcecatalog4fgl": [55, 78, 447, 465, 498, 537], "sourcecataloggammacat": [55, 79, 468, 498, 537], "sourcecataloghgp": [55, 80, 81, 498, 537], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 498, 537], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 434, 498], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 403, "sources_flux_map": 474, "sourcetempl": 403, "south": [483, 484, 514], "south_z20_50h": [82, 151, 155, 156, 157, 166, 464, 473, 488, 492, 503, 514], "south_z40_50h": 514, "southaz": 514, "southern": 514, "space": [87, 91, 103, 106, 110, 111, 206, 209, 277, 278, 297, 311, 313, 329, 347, 391, 392, 402, 408, 415, 422, 493, 499, 501, 505, 509, 547, 554, 580, 589], "span": 510, "spars": [195, 196, 197, 199, 204, 207, 208, 209, 422, 436, 445, 453, 484, 505], "sparsif": 417, "sparsifi": [196, 197, 199, 208, 209], "spatail": 136, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 103, 106, 110, 111, 113, 114, 125, 127, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 173, 178, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 218, 220, 225, 226, 229, 230, 237, 239, 242, 253, 255, 257, 263, 266, 267, 269, 271, 277, 279, 281, 292, 385, 387, 392, 398, 401, 404, 405, 406, 408, 410, 411, 417, 426, 434, 435, 437, 438, 439, 440, 442, 445, 453, 454, 456, 459, 460, 461, 463, 465, 468, 471, 473, 474, 476, 479, 480, 482, 483, 484, 485, 488, 491, 492, 493, 495, 498, 499, 500, 502, 504, 507, 509, 512, 515, 518, 520, 525, 530, 531, 538, 540, 542, 543, 553, 554, 568, 602, 603, 604], "spatial_bin_s": [113, 114], "spatial_bin_size_min": [113, 114], "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 116, 119, 136, 173, 230, 237, 269, 279, 292, 407, 439, 465, 474, 479, 481, 482, 483, 484, 488, 490, 491, 495, 498, 499, 507, 508, 515, 526, 559, 560, 561, 562, 563, 564, 565, 566, 567], "spatial_model_point": 483, "spatial_model_registri": 508, "spatial_par": 416, "spatial_typ": 416, "spatial_width": [113, 114], "spatial_width_max": [113, 114], "spatialbackground": 403, "spatialcircleconfig": 16, "spatialconst": 403, "spatialgaussian": 403, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 173, 225, 226, 230, 237, 239, 242, 255, 257, 266, 267, 269, 277, 279, 281, 403, 416, 439, 454, 458, 498, 508, 526, 530, 537, 556, 602], "spatialtempl": 403, "spatiamodel": 164, "speak": 501, "spec": [80, 111, 392, 406, 450, 479, 484, 498, 514, 526], "spec_model_tru": 493, "special": [87, 91, 242, 392, 402, 404, 406, 407, 416, 419, 420, 434, 461, 476, 498, 499, 500, 507, 508], "specialis": [406, 413], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 85, 86, 87, 91, 94, 103, 106, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 186, 187, 192, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 214, 244, 279, 292, 381, 391, 392, 393, 395, 397, 402, 404, 406, 407, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 422, 424, 426, 427, 439, 442, 445, 447, 456, 457, 459, 465, 466, 467, 470, 472, 473, 477, 479, 480, 485, 488, 492, 493, 499, 501, 502, 503, 505, 506, 509, 510, 511, 517, 520, 528, 538, 539, 540, 542, 544, 545, 546, 548, 553, 554, 555, 609], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 88, 90, 91, 92, 96, 102, 103, 105, 106, 110, 111, 120, 122, 125, 126, 127, 128, 130, 132, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 182, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 209, 229, 244, 253, 292, 318, 320, 324, 329, 379, 402, 409, 415, 418, 422, 427, 438, 441, 445, 461, 465, 472, 476, 477, 479, 482, 485, 488, 499, 500, 501, 503, 504, 505, 507, 508, 514, 526, 538, 540, 553], "spectra": [26, 110, 111, 128, 133, 149, 214, 264, 285, 292, 398, 401, 403, 405, 407, 411, 416, 422, 433, 437, 450, 454, 465, 466, 472, 473, 480, 484, 490, 492, 493, 499, 500, 501, 504, 508, 509, 511, 530, 538, 540, 542, 604], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 102, 103, 106, 110, 111, 120, 124, 125, 127, 128, 129, 132, 135, 136, 143, 164, 166, 169, 173, 218, 220, 223, 224, 227, 229, 231, 233, 234, 235, 237, 240, 244, 246, 247, 250, 251, 253, 254, 256, 258, 259, 260, 264, 265, 269, 270, 272, 273, 274, 275, 278, 279, 280, 282, 285, 286, 303, 345, 398, 401, 403, 404, 405, 406, 407, 408, 410, 411, 414, 415, 417, 426, 434, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 463, 469, 473, 474, 476, 479, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 511, 512, 513, 514, 515, 518, 525, 526, 527, 530, 531, 537, 538, 540, 541, 542, 543, 549, 550, 551, 559, 560, 561, 562, 563, 564, 565, 566, 567, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 606], "spectral_analysi": [463, 469, 470], "spectral_analysis_hli": [463, 469, 471], "spectral_analysis_rad_max": [463, 469, 472], "spectral_cub": 446, "spectral_index": [19, 20, 26, 52, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "spectral_index_error": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 459], "spectral_irf_model": 403, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 110, 111, 116, 119, 120, 124, 129, 133, 135, 136, 143, 164, 166, 169, 173, 214, 229, 237, 251, 253, 269, 279, 292, 392, 407, 410, 415, 416, 417, 421, 442, 461, 464, 465, 466, 468, 470, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 498, 499, 500, 501, 507, 508, 509, 511, 515, 526, 528, 540, 549, 559, 560, 561, 562, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "spectral_model1": 492, "spectral_model2": 492, "spectral_model_pwl": 483, "spectral_model_registri": 508, "spectral_par": 416, "spectral_point": 408, "spectral_typ": 416, "spectralbackground": 403, "spectralbackgroundmodel": 404, "spectralcompoundmodel": 403, "spectralconst": 403, "spectralevalu": 403, "spectralexponentialcutoffpowerlaw3fgl": 411, "spectralgaussian": [403, 437], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 102, 120, 124, 125, 127, 129, 135, 143, 164, 166, 169, 173, 223, 224, 227, 229, 231, 233, 234, 235, 237, 240, 246, 247, 250, 253, 254, 256, 258, 259, 260, 265, 269, 270, 273, 274, 275, 278, 279, 282, 285, 403, 404, 407, 410, 417, 442, 445, 452, 459, 461, 498, 508, 526, 528, 537, 556, 602], "spectralregion": 406, "spectraltempl": 403, "spectroscopi": [461, 463, 489, 491, 494, 520, 551], "spectrum": [19, 20, 26, 72, 76, 98, 100, 102, 103, 106, 107, 110, 111, 125, 127, 132, 135, 140, 166, 169, 174, 178, 182, 183, 196, 197, 199, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 285, 286, 297, 303, 389, 392, 398, 403, 404, 407, 408, 411, 413, 414, 426, 436, 437, 438, 439, 441, 445, 447, 450, 451, 452, 453, 454, 456, 458, 461, 463, 466, 467, 468, 469, 471, 479, 480, 483, 484, 485, 492, 497, 498, 499, 506, 508, 514, 515, 520, 525, 528, 530, 538, 542, 547, 555, 571, 574, 575, 577, 578, 582, 583, 585, 586, 587, 588, 605], "spectrum_analysi": 470, "spectrum_dataset": [149, 404, 470, 493, 499], "spectrum_dataset_1": 404, "spectrum_dataset_2": 404, "spectrum_dataset_empti": [493, 504], "spectrum_dataset_mak": [493, 504], "spectrum_dataset_on_off": 493, "spectrum_fitting_with_sherpa": 413, "spectrum_mak": 464, "spectrum_simul": [413, 463, 469, 473], "spectrumanalysisiact": [408, 438, 452], "spectrumdataset": [98, 99, 100, 103, 106, 111, 132, 135, 149, 177, 178, 182, 183, 237, 414, 436, 437, 438, 439, 440, 441, 442, 445, 448, 464, 466, 470, 472, 473, 481, 491, 492, 493, 495, 501, 504, 511, 551, 606], "spectrumdatasetmak": [174, 439, 445, 464, 466, 470, 472, 473, 481, 491, 492, 493, 495, 504, 551], "spectrumdatasetonoff": [98, 106, 107, 108, 110, 133, 135, 149, 177, 178, 214, 292, 389, 407, 436, 437, 438, 440, 441, 457, 458, 459, 464, 465, 466, 470, 471, 473, 480, 481, 490, 493, 495, 499, 500, 501, 504, 509, 511, 538, 540, 606], "spectrumdatasetonoffstack": 438, "spectrumdatasetsonoff": 404, "spectrumenergygroup": 453, "spectrumevalu": 441, "spectrumextract": [407, 436, 439, 452], "spectrumfit": [436, 452, 453, 454], "spectrumobserv": [404, 436, 452], "spectrumobservationlist": [436, 451], "spectrumobservationstack": 451, "spectrumonoffdataset": 407, "spectrumresult": 436, "spectrumsimul": [437, 451, 454], "spectrumstack": 453, "spectrumstat": 437, "specutil": 406, "speed": [136, 318, 395, 422, 427, 437, 439, 447, 453, 454, 461, 501], "spell": [397, 542], "spend": [405, 413], "spent": [399, 504], "sphere": [47, 346, 433, 435, 554, 560, 561, 564], "spherepointpick": 346, "spheric": [47, 392, 435, 554, 603], "sphericalcircleskyregion": [411, 493, 528], "sphinx": [395, 399, 413, 424, 436, 440, 447, 453, 454, 456, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 523, 525, 526, 528, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "sphinx_gallery_conf": 424, "sphinx_gallery_thumbnail_numb": 393, "sphinxext": 393, "spill": 504, "spin": [50, 51, 54, 437, 534], "spir": [435, 454], "spiral": [22, 33, 34, 38, 45, 449], "spiralarm": [33, 38, 45, 453, 532], "spiralarm_index": [33, 34, 38], "spirit": 419, "split": [19, 20, 87, 91, 92, 116, 119, 125, 127, 196, 197, 199, 205, 208, 209, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 398, 400, 402, 404, 406, 407, 411, 414, 416, 422, 426, 442, 460, 491, 508, 531, 610], "split_by_axi": [196, 197, 199, 205, 208, 209], "split_template_model": [116, 119], "sporad": 420, "spot": 392, "spread": [82, 88, 101, 157, 166, 169, 392, 415, 442, 464, 474, 503, 547, 604], "spring": [402, 455], "sprint": [400, 401, 405, 408, 409, 410, 411, 414], "spuriou": 144, "sqlalchemi": 412, "sqlite": 412, "sqrt": [19, 20, 30, 31, 32, 67, 102, 103, 106, 110, 111, 120, 124, 125, 127, 130, 136, 196, 197, 199, 201, 205, 208, 209, 212, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 293, 304, 330, 331, 332, 404, 466, 470, 474, 477, 479, 485, 488, 493, 496, 498, 501, 504, 505, 507, 515, 525, 526, 528, 540, 561, 562, 565, 566, 577, 607], "sqrt_space": [411, 439], "sqrt_t": [120, 124, 125, 127, 136, 144, 149, 294, 298, 385, 417, 430, 442, 466, 470, 471, 474, 477, 479, 481, 493, 498, 499, 500, 506, 516, 525, 528, 540, 605, 607, 610], "sqrt_ts_min": [149, 470], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 124, 125, 126, 127, 129, 136, 474, 485, 490, 491, 498, 499, 500, 525, 528], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 103, 106, 125, 126, 153, 154, 155, 161, 166, 169, 172, 193, 207, 209, 279, 301, 407, 410, 442, 463, 502, 506, 511, 512, 517, 520, 530, 540, 554, 605, 606, 607, 608], "squash": [155, 194, 195, 198, 200, 201, 204, 206, 207, 459, 464, 477, 499, 505], "squeez": [464, 503], "sr": [150, 151, 152, 163, 194, 195, 204, 207, 226, 281, 285, 464, 473, 476, 479, 481, 488, 492, 498, 499, 503, 505, 508, 514, 515, 547, 559, 567], "src": [405, 465, 482, 538], "src_above_bkg": 482, "src_event": [483, 484], "src_posit": [483, 484], "srcmap": [195, 196, 197, 199, 208, 209, 505], "ssc": [58, 60, 61, 62, 64, 65, 101, 254, 413, 583], "ssc_model": 254, "ssh": 395, "st": [53, 501, 515], "stabil": [19, 20, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 418, 488], "stabl": [11, 87, 91, 204, 214, 318, 399, 400, 401, 408, 409, 413, 418, 423, 424, 425, 427, 439, 440, 441, 447, 452, 454, 456, 501, 539], "stack": [16, 83, 86, 92, 100, 102, 103, 105, 106, 110, 111, 124, 125, 127, 137, 146, 154, 155, 161, 166, 169, 172, 196, 197, 198, 199, 204, 205, 208, 209, 212, 218, 220, 279, 361, 392, 404, 407, 408, 415, 420, 435, 438, 439, 442, 445, 450, 451, 456, 457, 459, 461, 465, 466, 471, 476, 480, 481, 490, 493, 499, 501, 504, 510, 511, 525, 526, 539, 540, 549, 552, 604], "stack_dataset": [172, 493, 504], "stack_reduc": [100, 149, 214, 438, 466, 470, 472, 479, 480, 481, 493, 499, 501, 540], "stacked_dataset": [481, 482], "stacked_fit": 470, "stacked_on_off": 477, "stackedobscubemak": 398, "stackedobsimagemak": 398, "stackoverflow": 358, "stage": [395, 408, 477, 479, 492, 499, 538, 604], "stai": [404, 423, 509], "stall": 412, "stamp": 412, "stand": 397, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 197, 209, 214, 238, 286, 297, 317, 373, 374, 392, 393, 395, 397, 401, 403, 404, 405, 408, 410, 412, 417, 419, 420, 422, 430, 437, 438, 454, 460, 464, 465, 471, 473, 477, 480, 482, 484, 488, 491, 492, 495, 497, 501, 505, 508, 509, 510, 511, 514, 517, 520, 525, 527, 538, 541, 546, 547, 554, 603, 604, 605], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 316, 510], "standardis": [363, 364, 376, 453], "standardise_unit": [363, 377], "standpoint": 392, "stapel": [460, 461], "star": [36, 40, 231], "starmap": [334, 338, 339], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 132, 144, 189, 206, 228, 229, 236, 241, 243, 244, 245, 253, 261, 268, 280, 283, 392, 393, 395, 397, 399, 400, 401, 402, 405, 406, 408, 409, 412, 418, 419, 421, 422, 423, 424, 428, 429, 430, 431, 433, 438, 447, 450, 451, 452, 453, 454, 459, 461, 463, 464, 465, 466, 468, 470, 471, 472, 474, 476, 477, 479, 481, 482, 483, 484, 485, 490, 491, 492, 493, 495, 496, 497, 498, 500, 505, 508, 509, 514, 515, 516, 520, 525, 528, 529, 542, 546, 603], "start_po": [129, 351, 485], "startswith": 392, "stat": [6, 100, 102, 125, 127, 128, 129, 132, 133, 136, 214, 215, 217, 219, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 385, 392, 404, 413, 421, 422, 424, 430, 437, 439, 440, 441, 442, 445, 451, 454, 455, 456, 460, 461, 466, 468, 470, 471, 472, 474, 477, 479, 480, 481, 482, 485, 491, 493, 495, 496, 500, 501, 511, 515, 525, 526, 540, 605, 606, 607], "stat_arrai": [99, 102, 103, 106, 110, 111, 421, 461], "stat_array_dataset": [295, 296], "stat_contour": 214, "stat_kwarg": 102, "stat_max": [294, 298], "stat_nul": [125, 127, 128, 129, 132, 133, 136, 294, 298, 460, 474, 485, 491, 500, 540], "stat_per_bin": 404, "stat_profil": [214, 465, 501, 511, 542], "stat_scan": [102, 125, 127, 128, 129, 132, 133, 136, 137, 146, 214, 293, 461, 465, 470, 491, 500, 501, 511, 540], "stat_sum": [99, 100, 102, 103, 106, 110, 111, 421, 422, 458, 459, 479, 492, 499, 507, 542], "stat_sum_dataset": [295, 296], "stat_sum_no_prior": 422, "stat_surfac": [214, 442, 542], "stat_typ": [99, 102, 103, 106, 110, 111, 440, 470, 479, 492, 499, 507], "state": [16, 45, 47, 206, 214, 392, 398, 402, 404, 408, 413, 415, 417, 422, 465, 471, 509, 525, 547, 570], "stateless": 420, "statement": [392, 395, 399, 458, 460, 531], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 107, 108, 109, 120, 124, 125, 127, 128, 129, 132, 133, 136, 157, 165, 176, 182, 183, 195, 196, 197, 199, 205, 206, 208, 209, 223, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 258, 259, 260, 261, 266, 267, 268, 270, 273, 274, 275, 280, 282, 283, 284, 389, 400, 403, 424, 436, 453], "staticmethod": [403, 416, 421, 422, 508, 511], "stationari": [422, 509], "statist": [6, 19, 20, 26, 79, 99, 100, 102, 103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 136, 145, 149, 176, 214, 216, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 265, 270, 272, 273, 274, 275, 278, 282, 292, 293, 294, 295, 296, 298, 299, 300, 305, 311, 313, 314, 315, 404, 407, 410, 411, 413, 415, 421, 436, 440, 441, 442, 445, 447, 459, 460, 464, 465, 471, 473, 474, 476, 477, 479, 481, 485, 488, 490, 492, 493, 496, 499, 501, 504, 511, 525, 526, 538, 540, 542, 547, 549, 552, 603, 604], "statu": [19, 20, 26, 125, 127, 213, 215, 216, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 392, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 419, 420, 421, 422, 455, 460, 507, 508, 509], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 297, 317, 473, 496, 515], "stddev": 68, "stderr": 392, "stdev": [422, 509], "stdout": [326, 392], "steadi": 465, "steep": 473, "stefan": [449, 460, 461], "step": [19, 20, 26, 124, 128, 132, 133, 136, 214, 215, 221, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 392, 395, 398, 399, 402, 403, 404, 406, 407, 408, 410, 412, 414, 418, 421, 422, 423, 424, 430, 447, 454, 455, 459, 464, 470, 472, 476, 479, 481, 482, 483, 484, 491, 492, 499, 500, 501, 504, 508, 509, 511, 525, 526, 528, 542, 550, 555], "step_sampl": 221, "stepprior": 421, "stepsampl": 422, "stepsiz": 171, "steradian": 204, "stewart": [136, 307, 474, 604], "stewart2009": [604, 607], "stick": [416, 435, 454, 501, 604], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 399, 400, 402, 405, 406, 409, 411, 413, 414, 417, 418, 420, 422, 423, 424, 452, 453, 454, 508, 511, 528, 540, 565, 566, 605], "stipul": 419, "stone": [392, 413], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 132, 134, 136, 206, 228, 229, 236, 241, 243, 244, 245, 253, 261, 268, 280, 283, 402, 430, 459, 471, 476, 477, 479, 491, 493, 495, 501, 509, 515, 525], "storag": [82, 412, 542], "store": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 77, 82, 83, 84, 85, 86, 87, 90, 91, 105, 125, 126, 127, 130, 132, 164, 177, 178, 196, 197, 199, 205, 208, 209, 214, 215, 217, 219, 221, 229, 253, 374, 392, 393, 395, 398, 400, 401, 402, 404, 405, 408, 410, 412, 415, 417, 419, 420, 424, 442, 445, 446, 461, 466, 472, 473, 483, 484, 493, 495, 496, 499, 500, 501, 503, 504, 505, 506, 509, 510, 514, 515, 516, 517, 528, 538, 539, 542, 547, 548, 549, 554, 555, 580, 602, 603, 605, 609], "store_per_ob": 408, "store_trac": [214, 501], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 118, 122, 124, 125, 126, 127, 128, 130, 132, 133, 136, 137, 139, 140, 141, 142, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 173, 176, 177, 182, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 287, 318, 330, 339, 354, 355, 356, 360, 373, 374, 376, 381, 385, 386, 388, 406, 420, 470, 472, 495, 504, 508], "str3": [87, 91], "straight": [393, 412], "straightforward": [424, 608], "strang": 392, "strategi": [292, 392, 399, 406, 412, 459, 501, 509, 608], "stream": [392, 412], "streil": [421, 458, 459, 460], "strength": [51, 54, 421, 509, 580], "stretch": [196, 197, 199, 205, 208, 209, 382, 383, 387, 474, 479, 485, 488, 504, 505, 507, 515, 525, 526, 528, 610], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 103, 105, 106, 126, 154, 155, 161, 166, 169, 172, 201, 207, 209, 279, 461], "strict_bound": 201, "strictli": [16, 84, 90, 105, 126, 201, 412], "strike": 538, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 105, 125, 126, 127, 128, 129, 132, 136, 157, 163, 165, 167, 172, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 209, 217, 219, 229, 253, 318, 336, 381, 392, 405, 406, 409, 411, 419, 420, 433, 437, 445, 447, 471, 498, 506, 508, 509, 525, 554, 555], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 405, 413, 470], "stronger": 511, "strongli": [303, 407, 409, 419, 445, 476, 501, 511, 520], "structlog": 412, "structur": [17, 87, 91, 207, 312, 396, 397, 398, 401, 403, 405, 408, 412, 413, 416, 419, 420, 426, 428, 432, 438, 439, 441, 445, 448, 460, 461, 463, 485, 499, 500, 504, 505, 506, 508, 520, 527, 529, 530, 537, 539, 554, 555, 605], "stuck": [412, 605], "student": 395, "studi": [46, 147, 285, 312, 405, 408, 412, 417, 427, 454, 461, 466, 468, 480, 481, 482, 485, 488, 491, 492, 495, 501, 505, 508, 514, 532, 542, 547, 551, 606], "stuff": [393, 424, 542], "stuff1": 392, "stuff2": 392, "style": [87, 91, 102, 196, 197, 199, 205, 208, 209, 389, 395, 401, 419, 449, 451, 479, 488, 503, 505, 525, 526, 542, 555, 610], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 116, 119, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 189, 196, 197, 198, 199, 201, 205, 206, 208, 209, 212, 392, 395, 399, 401, 402, 406, 411, 413, 414, 415, 420, 424, 433, 435, 439, 441, 442, 450, 452, 453, 481, 483, 500, 504, 506, 508, 516, 517, 538, 541, 542, 550, 603, 605, 609], "subact": 412, "subcategori": 422, "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 318, 406, 412, 451, 454, 508, 511], "subcompon": [67, 80], "subdirectori": 221, "subfold": [221, 400, 445], "subject": 547, "submit": [397, 419], "submodul": [400, 435, 436, 441, 505, 528, 540], "subok": 318, "subpackag": [414, 420, 438, 445, 449], "subplot": [66, 67, 196, 197, 199, 205, 208, 209, 464, 466, 468, 470, 471, 472, 473, 474, 477, 479, 480, 481, 485, 490, 492, 493, 495, 497, 500, 501, 503, 505, 506, 507, 509, 510, 511, 526, 542, 544, 551, 562, 566, 570], "subplot_kw": [474, 477, 481, 493, 506, 551], "subplots_adjust": [491, 496, 497, 498], "subsect": [413, 505], "subsequ": [302, 401], "subset": [82, 83, 87, 91, 128, 132, 136, 254, 420, 449, 450, 481, 493, 507, 514, 516, 541, 603], "subspac": 406, "substanti": [87, 91], "substitut": 606, "substr": [229, 253], "subtract": 472, "succe": 222, "succeed": 125, "success": [16, 84, 90, 102, 105, 125, 126, 127, 128, 129, 132, 133, 136, 213, 214, 215, 216, 222, 421, 422, 423, 445, 466, 468, 470, 471, 472, 474, 479, 480, 481, 485, 490, 491, 493, 495, 500, 501, 507, 509, 515, 525, 526, 567], "successfulli": [102, 412, 423, 466, 468, 470, 471, 472, 479, 480, 481, 492, 493, 495, 500, 501, 515, 525, 526], "sudo": 427, "suffer": [409, 493], "suffic": 492, "suffici": [395, 398, 405, 419, 459, 542], "suffix": [102, 125, 393, 403, 416, 508, 554, 556], "suggest": [395, 397, 399, 402, 406, 413, 415, 417, 421, 474, 483, 484, 542, 605], "suit": [197, 392, 555], "suitabl": 197, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 103, 106, 110, 111, 127, 128, 129, 131, 132, 133, 136, 137, 138, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 205, 208, 209, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 285, 294, 295, 296, 298, 300, 388, 392, 402, 403, 405, 415, 417, 421, 436, 460, 474, 479, 483, 493, 497, 499, 511, 515, 525, 526, 528, 538, 548, 604, 606], "sum_": 538, "sum_band": [196, 197], "sum_i": 130, "sum_j": 538, "sum_k": 538, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [196, 197, 199, 205, 208, 209, 229, 253, 380, 454, 477, 479, 485, 493, 499, 504, 506, 507, 515, 526], "sum_over_energy_group": [124, 128, 136, 474, 481, 485], "summar": [401, 530], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 298, 326, 330, 340, 365, 379, 393, 413, 432, 466, 471, 491, 492, 499, 514, 525, 542], "summaris": [392, 397, 399, 413], "summat": [294, 298, 398], "summer": 400, "sun": 41, "sunpi": [409, 413, 414], "super": [195, 197, 273, 274, 275, 463, 472, 483, 517, 556, 569, 590, 593], "superexpcutoffpowerlaw3fglspectralmodel": [264, 416, 508, 586], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 264, 508, 587], "superexpcutoffpowerlaw4fglspectralmodel": [264, 416, 508, 588], "superflu": [402, 493], "supernova": [28, 52, 466, 482, 508, 532, 533], "superpixel": 195, "supersed": [195, 196, 197, 207, 208, 209], "supervisor": 408, "suppli": [19, 20, 26, 87, 91, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 465, 491, 492], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 101, 103, 106, 110, 111, 115, 127, 148, 159, 164, 195, 196, 197, 198, 199, 201, 206, 207, 208, 209, 214, 229, 253, 391, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 420, 422, 427, 431, 434, 435, 437, 438, 439, 440, 441, 442, 445, 447, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 471, 473, 476, 479, 481, 488, 492, 497, 498, 499, 505, 511, 514, 515, 516, 517, 525, 541, 547, 554, 555, 600, 602, 603, 605], "suppos": [244, 280, 397, 404, 604, 606], "suppress": [153, 154, 158, 542], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 221, 392, 395, 397, 408, 423, 470, 490, 505, 542, 605], "surfac": [28, 30, 35, 36, 39, 40, 45, 214, 269, 285, 344, 411, 442, 501, 508, 532], "surface_brightness_err": 498, "surprisingli": 406, "surround": [52, 336, 392], "survei": [35, 67, 128, 231, 399, 402, 413, 430, 463, 514, 520, 521, 522, 532, 537, 542, 604], "survey_map": [463, 522, 523], "suspect": 607, "suss": [401, 419], "svg": [392, 412], "swap": 195, "swept": 52, "swgo": 604, "swh": 419, "swhid": 419, "switch": [104, 109, 292, 392, 395, 399, 402, 423, 447, 451], "switcher": 423, "sy": [392, 429], "syllabl": 542, "symbol": 506, "symmetr": [103, 106, 110, 111, 124, 133, 136, 184, 193, 197, 239, 296, 392, 403, 435, 447, 450, 468, 492, 504, 511, 514, 530, 540, 548, 560, 561, 607], "symmetri": [197, 435], "sync": 454, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 419, "synchrotron": [254, 441, 580], "syntact": [87, 91], "syntax": [16, 87, 91, 393, 408, 411, 412, 439, 456, 605], "synthesi": [532, 533], "synthet": 433, "system": [11, 21, 83, 87, 91, 113, 114, 151, 159, 160, 195, 196, 197, 199, 202, 204, 207, 208, 209, 229, 253, 392, 398, 403, 405, 409, 413, 414, 418, 419, 421, 427, 435, 453, 459, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 503, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 553, 554, 603, 605, 609], "systemat": [403, 417, 419, 420, 442, 470, 490, 504, 540, 604, 606], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 105, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 137, 138, 146, 147, 148, 153, 193, 206, 229, 244, 248, 253, 292, 294, 297, 298, 311, 313, 316, 363, 367, 391, 392, 393, 395, 397, 399, 400, 402, 404, 406, 408, 409, 410, 411, 413, 416, 417, 418, 420, 422, 424, 425, 426, 428, 430, 442, 446, 449, 450, 451, 454, 459, 461, 464, 465, 466, 470, 476, 479, 481, 482, 485, 488, 490, 491, 493, 495, 496, 497, 498, 500, 501, 504, 505, 506, 508, 509, 510, 511, 514, 515, 530, 534, 535, 536, 538, 540, 542, 551, 592, 593, 594, 595, 596, 597, 598, 603, 604, 605, 608, 609], "t0": [236, 261, 483, 491, 492, 495, 593, 597], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 302, 547, 593, 594, 595, 596, 597, 598, 606], "t_0": 597, "t_b": 606, "t_decai": [243, 595], "t_delta": [104, 109, 206, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283], "t_i": 302, "t_j": 538, "t_live": [83, 88], "t_max": [228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 405, 417, 495], "t_min": [228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 405, 417, 495], "t_observ": [83, 88], "t_r": 244, "t_ref": [236, 241, 243, 244, 245, 261, 268, 280, 458, 459, 483, 484, 492, 508, 593, 594, 595, 596, 597, 598, 599, 600], "t_rise": [243, 595], "t_start": [86, 539], "t_stop": [52, 86, 539], "ta": 297, "ta2": 297, "ta3": 297, "tab": [153, 397, 479, 485, 490, 500, 511, 551], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 482, "table_class": [87, 91], "table_compon": [67, 498], "table_filenam": 26, "table_format": 127, "table_from_row_data": 459, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 498], "table_model": [282, 416], "table_oth": 361, "tableau": 542, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [403, 455], "tablepsf": [414, 433, 435], "tablepsfcheck": 451, "tabul": 530, "tabular": [508, 589], "tackl": 401, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 181, 182, 183, 196, 197, 199, 205, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 418, 421, 423, 442, 456, 503, 508, 511, 562, 566], "tail": [509, 514, 605], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 103, 106, 110, 111, 124, 151, 171, 173, 205, 207, 212, 214, 219, 221, 229, 238, 248, 253, 269, 284, 366, 390, 392, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 417, 422, 424, 440, 441, 442, 445, 447, 455, 456, 458, 459, 460, 464, 466, 470, 472, 473, 483, 484, 485, 492, 493, 495, 500, 501, 504, 505, 506, 508, 510, 511, 514, 526, 528, 539, 542, 555, 573, 606, 607, 608], "taken": [15, 87, 91, 103, 106, 110, 111, 125, 127, 156, 164, 183, 189, 191, 205, 206, 209, 214, 305, 393, 397, 401, 405, 458, 465, 470, 479, 480, 493, 495, 500, 503, 506, 507, 513, 514, 528, 538, 540, 551, 552, 607], "talk": [395, 397, 399, 409, 419], "tan": [197, 204, 406, 437, 470, 505, 515, 551], "tandem": 530, "tangent": [179, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281], "tangenti": [195, 555], "tar": [424, 514], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 103, 106, 110, 111, 115, 120, 124, 126, 134, 136, 154, 155, 166, 169, 186, 187, 191, 192, 196, 197, 199, 201, 205, 208, 209, 221, 393, 398, 399, 405, 419, 422, 423, 451, 466, 472, 481, 491, 504, 506, 509, 526], "target_nam": 551, "target_posit": [179, 466, 470, 472, 481, 490, 491, 495, 526], "target_radec": 88, "targetmetadata": [90, 126], "task": [339, 413, 417, 419, 420, 423, 424, 455, 471, 474, 504, 505, 515, 520, 521, 525, 542, 550, 603, 605, 609], "task_nam": 339, "tast": 605, "tau": [26, 51, 54, 139, 306, 421, 497, 570], "tau_0": 51, "taul": [26, 497], "taur": [26, 497], "taylor": [52, 53], "tb00058": 138, "tbc": 422, "tbd": 248, "tbl": [87, 91], "tdelta_precis": 312, "team": [397, 401, 409, 413, 415, 419, 432, 453], "technic": [394, 395, 397, 405, 412, 413, 415, 417, 419, 422, 424, 476], "techniqu": [398, 407, 408, 410, 422, 466, 470, 479, 482, 501, 504, 506, 509, 516, 549, 552, 603, 604], "tediou": 498, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 105, 156, 405, 406, 420, 426, 430, 431, 483, 490, 493, 510, 514, 515, 517], "tell": 472, "temp": [449, 484], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 105, 106, 111, 116, 119, 126, 173, 181, 195, 196, 197, 199, 200, 201, 207, 208, 209, 215, 229, 244, 253, 277, 278, 279, 280, 281, 282, 289, 291, 307, 310, 397, 403, 404, 408, 416, 442, 456, 459, 460, 463, 473, 474, 477, 484, 505, 506, 507, 508, 530, 551, 556, 558, 568, 569, 576, 579, 584, 590, 599], "template_diffus": [507, 515], "template_extrapol": 589, "template_model": 483, "template_noextrapol": 589, "templatelightcurvetemporalmodel": 456, "templatend": [277, 278, 508], "templatendspatialmodel": [263, 508], "templatendspectralmodel": [26, 264, 447, 458, 508], "templatenpredmodel": [249, 445], "templatephasecurvetemporalmodel": [276, 456, 461, 508, 599], "templatespatialmodel": [67, 263, 415, 416, 442, 456, 457, 459, 460, 461, 483, 507, 508, 515, 567], "templatespectralmodel": [229, 253, 264, 287, 416, 508, 515, 538, 576, 579, 584, 589], "templatetemporalmodel": 456, "tempo2": [493, 542], "tempor": [218, 220, 228, 229, 236, 241, 243, 244, 245, 253, 261, 268, 269, 276, 280, 283, 302, 403, 405, 416, 417, 438, 440, 441, 442, 447, 456, 458, 459, 460, 461, 463, 465, 468, 471, 473, 474, 479, 480, 481, 483, 486, 487, 488, 495, 496, 498, 499, 500, 507, 509, 515, 518, 520, 525, 542, 543, 601, 602, 604], "temporal_model": [269, 405, 483, 484, 492, 508, 592, 593, 594, 595, 596, 597, 598, 599, 600], "temporal_model1": 492, "temporal_model2": 492, "temporal_model_map": 484, "temporal_model_registri": 508, "temporal_typ": 416, "temporalbackground": 403, "temporalmodel": [228, 236, 241, 243, 244, 245, 261, 268, 269, 280, 403, 417, 441, 456, 458, 459, 461, 556], "temporari": 520, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 403], "ten": [398, 413], "tend": [392, 562], "tension": 496, "tensorflow": [410, 413], "tent": 423, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 245, 248, 308, 315, 395, 397, 399, 401, 402, 406, 409, 413, 418, 420, 422, 443, 447, 456, 465, 474, 501, 503, 605, 607, 608], "termin": [87, 91, 102, 395, 408, 425, 426, 427, 428, 429, 466, 468, 470, 471, 472, 479, 480, 481, 493, 495, 500, 501, 515, 525, 526, 605], "terrier": [398, 401, 402, 403, 404, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 420, 422, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "test": [16, 36, 37, 84, 90, 94, 101, 102, 105, 116, 119, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 145, 147, 164, 166, 169, 196, 197, 199, 205, 208, 209, 244, 292, 293, 294, 298, 301, 311, 313, 348, 365, 366, 367, 368, 369, 370, 371, 393, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 418, 421, 423, 424, 434, 436, 437, 439, 441, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 459, 461, 466, 473, 474, 484, 488, 490, 491, 492, 495, 499, 500, 503, 509, 540, 542, 546, 547, 552, 599, 600, 604, 607, 610], "test2": 492, "test_aeff3d": 503, "test_edisp": 503, "test_events_with_gti": 539, "test_gti": 539, "test_person_txt": 392, "test_plot": 392, "test_psf": 503, "test_someth": 392, "test_using_data_fil": 370, "test_using_scipi": 371, "testcod": 393, "testoutput": 393, "testpar": 421, "teststatisticnest": [459, 461], "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 102, 103, 106, 110, 111, 112, 117, 120, 125, 127, 128, 144, 145, 150, 151, 153, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 176, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 269, 270, 272, 273, 274, 275, 278, 282, 285, 286, 316, 317, 338, 387, 393, 403, 416, 417, 420, 421, 430, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 525, 526, 528, 536, 539, 540, 546, 547, 549, 551, 552, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603], "tevcat": [446, 498], "tevcat_nam": 71, "tevpi": 433, "tevtevtev1": 481, "tex": 393, "texliv": 393, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 106, 111, 125, 127, 136, 266, 267, 317, 354, 360, 381, 393, 400, 408, 412, 419, 424, 471, 493, 503, 514, 525, 528, 560, 561, 562, 565, 566, 571, 587, 595, 605, 607], "textcolor": 381, "textkw": 381, "th": 201, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 135, 154, 155, 157, 158, 161, 165, 166, 167, 169, 173, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 292, 303, 369, 385, 392, 393, 395, 397, 398, 399, 402, 405, 406, 407, 410, 411, 412, 417, 419, 420, 422, 424, 453, 456, 457, 458, 460, 464, 466, 479, 480, 483, 490, 491, 496, 501, 504, 506, 509, 510, 511, 538, 555, 561, 562, 605, 607], "thank": [417, 439, 440, 445, 447, 461, 504, 542], "thaw": 507, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 105, 109, 113, 114, 126, 132, 140, 170, 280, 302, 338, 392, 393, 395, 397, 398, 399, 400, 401, 403, 406, 408, 409, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 431, 442, 445, 447, 459, 460, 466, 468, 472, 497, 499, 501, 506, 507, 508, 509, 510, 511, 514, 517, 530, 539, 540, 542, 547, 554, 555, 603, 604, 605, 606, 607, 609], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 105, 126, 128, 218, 220, 229, 253, 318, 392, 393, 395, 397, 399, 400, 406, 408, 411, 419, 420, 422, 423, 424, 430, 437, 453, 466, 468, 470, 473, 476, 479, 480, 482, 484, 490, 498, 499, 500, 501, 505, 506, 508, 509, 511, 514, 516, 520, 526, 539, 542, 551, 605, 607], "theme": [447, 454, 461], "themselv": [87, 91, 408, 504, 506, 549], "theorem": [292, 311, 313, 540, 607], "theoret": 511, "therefor": [106, 393, 398, 402, 405, 406, 407, 411, 414, 416, 422, 427, 445, 461, 466, 490, 493, 501, 505, 506, 509, 510, 511, 516, 528, 540, 607, 608], "thereof": 403, "thermal": [19, 580, 604], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 157, 163, 165, 167, 171, 179, 193, 202, 319, 322, 392, 442, 463, 472, 502, 512, 515, 517, 520, 528, 560, 561, 565, 566], "theta2": [183, 193, 390, 453], "theta2_axi": 513, "theta2_max": 390, "theta2_min": 390, "theta2_t": 513, "theta2_table_en": 513, "theta_0": [33, 38], "theta_square_plot": [463, 512, 513], "theta_squared_axi": [193, 513], "thew": 498, "thi": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 103, 104, 105, 106, 109, 110, 111, 115, 120, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 140, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 178, 179, 180, 182, 184, 186, 187, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 221, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 285, 292, 294, 298, 304, 311, 313, 318, 326, 336, 339, 342, 347, 348, 366, 369, 376, 379, 381, 382, 383, 387, 389, 391, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 523, 525, 526, 528, 530, 531, 538, 539, 540, 542, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609], "thick": 389, "thin": [56, 330], "thing": [392, 395, 397, 400, 406, 407, 408, 409, 413, 417, 424, 433, 452, 472, 476, 492, 493, 506, 515], "think": [397, 409, 410, 412, 413], "third": [62, 63, 87, 91, 393, 445, 498, 501, 505, 520, 527, 528, 537], "thoma": [419, 453], "thorough": [505, 530], "those": [15, 83, 182, 196, 197, 199, 205, 208, 209, 214, 218, 220, 229, 253, 326, 381, 392, 395, 397, 399, 401, 406, 408, 411, 412, 413, 414, 415, 416, 418, 424, 425, 426, 428, 429, 439, 442, 490, 495, 501, 505, 506, 507, 510, 520, 521, 528, 540, 542, 551, 609], "though": [15, 395, 400, 406, 407, 408, 410, 412, 413, 471, 508, 525], "thought": [397, 406], "three": [87, 91, 164, 297, 392, 401, 404, 406, 419, 423, 461, 481, 483, 490, 496, 505, 509, 511, 520, 527, 547, 554, 604], "threshold": [67, 103, 110, 120, 125, 126, 127, 134, 136, 144, 145, 153, 154, 158, 171, 182, 206, 292, 381, 382, 383, 406, 435, 441, 442, 464, 470, 472, 474, 481, 485, 490, 498, 499, 501, 504, 506, 514, 525, 538, 540], "threshold_alpha": 171, "through": [41, 83, 87, 91, 317, 318, 389, 395, 397, 405, 406, 412, 413, 417, 418, 422, 427, 431, 445, 456, 465, 470, 474, 484, 496, 501, 504, 505, 506, 507, 509, 515, 516, 542, 547, 554, 604, 607], "throughout": [13, 399, 401, 402, 406, 408, 452, 498, 509], "throught": 485, "thrown": 508, "thu": [392, 399, 406, 409, 410, 413, 449, 464, 465, 476, 477, 481, 483, 500, 602, 608], "thumbnail": 445, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 197, 401, 492], "tibaldo": 450, "tick": [458, 459], "tick_param": 464, "ticker": 381, "tight_layout": [491, 501, 511, 562, 566, 610], "tightli": [411, 412], "tikonov": 421, "tild": [195, 207], "tile": [195, 197], "tilt": [259, 279, 403, 415, 416, 421, 434, 440, 476, 479, 480, 483, 484, 488, 499, 508, 515, 525, 526, 549, 555, 563, 584, 589], "tilt_prior": 421, "tim": 460, "time": [19, 20, 35, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 113, 125, 126, 127, 132, 136, 139, 140, 148, 172, 178, 189, 191, 196, 197, 198, 199, 200, 205, 206, 208, 209, 214, 217, 219, 221, 228, 231, 236, 241, 243, 244, 245, 261, 268, 269, 280, 283, 297, 302, 306, 312, 348, 368, 372, 373, 374, 375, 392, 393, 395, 397, 398, 399, 400, 402, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 422, 423, 424, 426, 430, 434, 435, 438, 439, 440, 442, 445, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 465, 467, 468, 470, 471, 472, 473, 474, 477, 479, 480, 481, 482, 484, 485, 490, 493, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 525, 526, 528, 534, 535, 536, 538, 539, 540, 542, 547, 551, 555, 561, 562, 570, 592, 593, 594, 595, 596, 597, 598, 599, 600, 604, 605, 606, 607, 608], "time1": 306, "time2": 306, "time_axi": [196, 197, 199, 200, 205, 208, 209, 297, 484, 495, 505, 555], "time_bin": 407, "time_bin_end": 407, "time_bin_s": 407, "time_bin_start": 407, "time_bound": 206, "time_box": 91, "time_column": 417, "time_delta": [86, 206, 372, 375], "time_edg": [206, 496, 505], "time_filt": 89, "time_format": [127, 206, 459, 492], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 132, 471, 476, 477, 479, 484, 490, 491, 495, 525], "time_map_axi": [206, 505], "time_map_axis_contigu": 505, "time_max": [100, 125, 127, 206, 406, 407, 408, 484, 490, 495, 498, 505], "time_mid": [206, 496], "time_min": [100, 125, 127, 206, 406, 407, 408, 484, 490, 495, 498, 505], "time_rang": [91, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 484, 592, 593, 594, 595, 596, 597, 598, 599, 600], "time_ref": [83, 85, 86, 91, 94, 200], "time_ref_default": 86, "time_ref_from_dict": 609, "time_relative_to_ref": 609, "time_resolved_spectroscopi": [463, 494, 495], "time_seri": 297, "time_start": [85, 86, 91, 189, 407], "time_step": 407, "time_stop": [85, 86, 91, 407], "time_sum": [86, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283], "timedelta": [87, 91, 94, 206, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 348, 372, 375, 609], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [397, 399, 453], "timemapaxi": [127, 148, 198, 200, 445, 460, 461, 491, 492, 495, 496], "timerangeconfig": 16, "timeref": 483, "timescal": [140, 236, 303, 418, 496], "timeseri": 407, "timesi": [94, 457, 459, 483], "timestamp": 392, "timeunit": 483, "timmer": [297, 461], "tini": [481, 514], "tinydb": 412, "tip": 542, "titl": [393, 397, 485, 497, 610], "title2": 393, "title_fmt": 509, "tiziani": 451, "tke": 515, "tm": [87, 91], "tmax": 407, "tmid": [88, 459, 481, 504, 510, 526], "tmin": 407, "tnx0n0pd": 495, "to_2d": [151, 517], "to_3d": [150, 458, 460], "to_bands_hdu": [194, 195, 204, 207], "to_binsz": [195, 204, 207, 445], "to_binsz_wc": 204, "to_contigu": [206, 505], "to_counts_hdulist": 108, "to_cub": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 442, 477, 555], "to_dict": [19, 20, 26, 99, 102, 103, 106, 110, 111, 213, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 420, 511], "to_edisp_kernel": [158, 461, 546], "to_edisp_kernel_map": [155, 445, 546], "to_energy_dependent_table_psf": 453, "to_even_npix": 207, "to_fits_head": 85, "to_fram": 202, "to_gti": [206, 460], "to_hdu": [196, 197, 208, 209], "to_hdulist": [103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 196, 197, 203, 204, 205, 208, 209, 505], "to_head": [84, 90, 105, 126, 195, 198, 200, 201, 206, 207, 420], "to_html": 392, "to_imag": [103, 106, 110, 111, 153, 154, 164, 166, 169, 194, 195, 204, 207, 415, 439, 440, 464, 477, 481, 499, 515, 552, 555], "to_json": [16, 84, 90, 105, 126], "to_map": [125, 127], "to_map_dataset": [106, 111], "to_mask": [103, 106, 110, 111, 497], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 229, 253, 445, 498], "to_node_typ": 201, "to_nsid": [195, 197], "to_odd_npix": 207, "to_panda": [87, 91], "to_parameters_t": [229, 253, 465, 466, 470, 471, 472, 476, 479, 491, 501, 511, 526], "to_pixel": [406, 470, 481, 497, 504, 508, 551, 560, 561, 562], "to_polygon": 406, "to_psf3d": [157, 165, 167], "to_python": [16, 84, 90, 105, 126], "to_region": [225, 226, 229, 230, 239, 242, 253, 257, 266, 267, 281, 406, 439, 508, 560, 561, 562], "to_region_map_dataset": [103, 106, 110, 111, 499], "to_region_nd_map": [154, 155, 161, 166, 169, 197, 205, 209, 442, 445, 515], "to_region_nd_map_histogram": [209, 459], "to_sed_typ": 417, "to_sherpa": [439, 453, 454], "to_spectrum": 445, "to_spectrum_dataset": [100, 103, 106, 110, 111, 415, 438, 440, 493, 499, 511], "to_st": 459, "to_str": [459, 464], "to_swap": [195, 196, 197], "to_tabl": [102, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 200, 201, 205, 206, 218, 220, 244, 445, 461, 465, 468, 470, 471, 481, 485, 488, 490, 492, 498, 500, 508, 528, 540], "to_table_hdu": [83, 86, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 200, 201, 505], "to_table_psf": 451, "to_template_sky_model": [229, 253], "to_template_spectral_model": [229, 253, 416], "to_unit": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209], "to_wc": [196, 197], "to_wcs_geom": [195, 204, 555], "to_wcs_til": [195, 197], "to_yaml": [16, 84, 90, 105, 126, 229, 253, 403, 420, 508, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "tob": 471, "todai": 419, "todo": [13, 79, 99, 164, 282, 393, 417, 436, 514, 532, 533, 609], "tof": 163, "togeth": [100, 103, 106, 110, 111, 128, 132, 229, 253, 389, 392, 405, 409, 412, 413, 425, 437, 465, 477, 479, 480, 485, 491, 499, 501, 504, 507, 508, 509, 510, 511, 517, 526, 538, 539, 605], "tol": [292, 501], "toler": [86, 100, 132, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 368, 501], "tolist": 501, "tomato": 465, "toml": 442, "ton": [303, 514], "too": [392, 397, 398, 422, 444, 445, 458, 459, 460, 501, 506, 509], "took": [418, 422], "tool": [6, 13, 196, 197, 199, 208, 209, 391, 392, 395, 399, 401, 403, 405, 408, 409, 412, 413, 419, 431, 439, 450, 453, 454, 482, 485, 492, 499, 501, 505, 510, 514, 515, 517, 530, 542, 578, 603, 604], "toolbox": [408, 450], "top": [16, 84, 90, 105, 110, 111, 126, 379, 388, 392, 397, 408, 412, 413, 415, 427, 453, 472, 474, 481, 485, 490, 492, 496, 498, 504, 528, 542, 555, 603, 605, 609], "top_five_ts_3fhl": 528, "tophat2dkernel": 124, "topic": [397, 401, 413, 421, 528], "total": [51, 67, 99, 102, 103, 106, 110, 111, 128, 129, 132, 133, 143, 176, 191, 195, 215, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 315, 400, 417, 421, 426, 428, 460, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 504, 505, 506, 507, 509, 511, 512, 515, 519, 522, 524, 525, 526, 528, 529, 532, 538, 542, 547, 557, 568, 580, 590, 601, 604], "total_jfact": 497, "total_jfact_decai": 497, "total_model": 403, "total_obstim": 504, "total_stat": [215, 216, 422, 465, 495, 501, 606], "touch": [86, 434, 520], "tour": 520, "toward": [336, 399, 406, 413, 455, 509], "tox": [355, 393, 395, 456, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 567, 593], "tqdm": 542, "trace": [214, 215, 216, 412, 442, 501], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392], "track": [85, 94, 392, 395, 401, 407, 419, 447, 507], "tracker": [395, 406, 423, 461], "traction": 509, "tradit": [422, 509], "tradition": [422, 508, 509, 606], "train": 418, "traitlet": [408, 420], "traittyp": 420, "transfer": 420, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 164, 198, 200, 201, 206, 207, 217, 219, 221, 229, 253, 320, 324, 347, 352, 392, 406, 408, 417, 421, 422, 433, 435, 451, 454, 474, 481, 504, 511, 554, 560, 561, 609], "transit": [27, 382, 383, 399, 434, 435, 453, 516, 604, 610], "transit_map": 516, "transit_numb": 516, "transitsmap_crab": 516, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 408, 412, 540], "transpar": 407, "transport": 505, "transpos": 454, "trapezoid": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 288, 329], "trapz": 329, "trapz_loglog": 440, "trash": 436, "travi": [439, 441, 445], "treat": [83, 95, 426, 458, 459, 470, 483, 608], "treatment": [445, 470, 479, 604], "trend": 483, "tri": [77, 400, 406], "tributor": 419, "tricki": 406, "trigger": [369, 392, 423, 516], "trim": [103, 106, 154, 155, 161, 166, 169, 172, 207, 209, 279], "tripl": 157, "trivial": 399, "troubl": 605, "troubleshoot": [426, 427, 428], "trough": 496, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 124, 125, 126, 127, 128, 132, 133, 136, 137, 143, 146, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 182, 183, 186, 187, 189, 190, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 214, 215, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 311, 313, 315, 318, 326, 327, 330, 348, 360, 362, 380, 385, 389, 392, 398, 405, 406, 407, 408, 416, 417, 420, 422, 436, 440, 441, 452, 454, 455, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 515, 516, 523, 525, 526, 528, 532, 538, 540, 542, 547, 552, 554, 555, 559, 560, 561, 564, 565, 567, 589, 604, 607, 610], "truelov": 53, "truncat": [136, 336, 445], "truncation_valu": [299, 305], "trust": [16, 84, 90, 105, 126], "trustworthi": 421, "truth": [509, 511], "try": [16, 77, 84, 90, 105, 126, 196, 197, 199, 205, 208, 209, 392, 393, 402, 406, 413, 423, 424, 430, 435, 468, 470, 472, 483, 484, 490, 498, 501, 505, 528, 605], "ts2": 297, "ts3": 297, "ts_asimov": 313, "ts_image_estim": 481, "ts_scan": [125, 127], "ts_threshold": [148, 292], "ts_threshold_ul": [493, 540], "ts_to_sigma": [482, 607], "tsimageestim": 453, "tsmap": 461, "tsmap_est": 385, "tsmapestim": [121, 146, 147, 385, 414, 417, 440, 441, 443, 445, 459, 461, 474, 481, 542], "tstart": [88, 91, 405, 407, 473, 483, 488, 491, 492, 495, 514], "tstop": [88, 405, 407, 473, 483, 488, 491, 495, 514], "tt": [86, 94, 373, 374, 419, 484, 491, 495, 609], "tth_sec3": 201, "tune": 412, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 102, 103, 105, 106, 110, 111, 126, 130, 136, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 172, 177, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 279, 282, 294, 298, 301, 330, 340, 347, 392, 505, 554], "turn": [83, 88, 393, 395, 406, 412, 514, 602], "tutori": [82, 99, 122, 132, 135, 160, 181, 219, 221, 222, 238, 248, 284, 392, 395, 396, 401, 404, 405, 406, 407, 408, 409, 410, 414, 422, 424, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 451, 452, 453, 454, 455, 456, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 478, 479, 480, 481, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 522, 524, 525, 526, 527, 528, 529, 542, 543, 545, 554, 602, 605], "tutorials_jupyt": [423, 520], "tutorials_python": 520, "tweak": [408, 445, 461, 505], "twice": [124, 554, 608], "twinx": 464, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 102, 103, 106, 110, 111, 120, 139, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 172, 177, 179, 195, 196, 197, 198, 199, 201, 204, 205, 207, 208, 209, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 311, 313, 348, 358, 381, 386, 389, 391, 392, 393, 395, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 413, 414, 417, 418, 419, 421, 423, 424, 426, 447, 453, 455, 459, 461, 471, 472, 479, 480, 482, 485, 492, 498, 499, 500, 501, 503, 505, 506, 508, 510, 511, 514, 516, 525, 526, 532, 538, 539, 540, 542, 551, 554, 555, 572, 607, 608], "txt": [127, 418, 420, 423, 507, 515], "tyler": 447, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 102, 103, 105, 115, 124, 125, 126, 127, 129, 136, 170, 176, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 318, 348, 395, 398, 401, 402, 403, 404, 406, 407, 408, 411, 416, 417, 419, 421, 424, 425, 430, 438, 445, 451, 452, 453, 459, 461, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 495, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 525, 526, 528, 530, 542, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 604, 605], "typeerror": [16, 84, 90, 105, 126, 318, 406, 417, 421], "typic": [125, 398, 401, 403, 410, 415, 416, 417, 418, 420, 423, 426, 427, 466, 472, 477, 485, 488, 490, 491, 498, 499, 500, 503, 506, 508, 510, 530, 537, 538, 539, 547, 551, 603, 604], "typo": [392, 431, 457, 458, 461], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 103, 106, 110, 111, 116, 119, 120, 125, 127, 129, 131, 136, 144, 145, 153, 155, 164, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 244, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 285, 286, 297, 316, 317, 318, 338, 387, 392, 395, 399, 400, 401, 407, 408, 409, 410, 412, 416, 417, 420, 421, 434, 435, 436, 453, 454, 455, 464, 465, 466, 468, 470, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 525, 526, 528, 532, 539, 540, 542, 544, 549, 551, 552, 555, 560, 562, 563, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599], "u03c3": 482, "u18": [33, 38], "uc": [87, 91], "ufunc": [196, 197, 199, 205, 208, 209, 472, 495], "uheyau9v": 495, "ui": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 250, 285, 286], "uigr20zt": 495, "uk": [311, 313], "ul": [67, 124, 125, 127, 128, 129, 132, 133, 136, 293, 480, 485, 492, 498], "ultim": [392, 412], "ultranest": [221, 422, 509], "ultranest_result": 222, "un": [404, 419, 442, 507], "unambigu": 508, "unbehaun": 460, "unbin": [404, 405, 454], "unboundlocalerror": 392, "unbundl": 610, "unc_": 77, "uncertaint": 410, "uncertainti": [52, 77, 103, 106, 110, 111, 294, 298, 396, 409, 422, 452, 468, 470, 493, 501, 509, 511, 526, 603, 604, 606], "unchang": [103, 106, 110, 111, 116, 119, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 453], "unclear": [392, 402, 403, 409, 420], "uncom": [408, 509, 514], "undefin": 608, "under": [72, 91, 134, 137, 138, 146, 147, 311, 392, 395, 396, 401, 409, 419, 454, 455, 465, 471, 520, 525, 527, 538, 607, 608], "underestim": 540, "underflow": 206, "underli": [16, 84, 87, 90, 91, 105, 126, 204, 405, 468, 498, 505, 511, 528, 530, 539, 551, 554], "underscor": 392, "understand": [408, 412, 426, 428, 431, 439, 440, 466, 470, 471, 472, 476, 483, 484, 491, 492, 496, 505, 506, 507, 514, 525, 526, 605], "undertak": 413, "undertaken": 412, "underwai": 422, "unevenli": [139, 306], "unexpect": [16, 84, 90, 105, 126, 516], "unfold": 604, "unfreez": [19, 20, 26, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 580], "unfreeze_al": [218, 220, 507], "unfrozen": 549, "unheard": 605, "uni": [421, 423], "uni_prior_stat_sum": 511, "unicod": [87, 91], "unid": 67, "unidimension": 200, "unif": 439, "unifi": [87, 91, 396, 401, 406, 434, 437, 439, 440, 441, 442, 445, 454, 455, 604], "uniform": [164, 214, 219, 221, 238, 248, 284, 347, 392, 401, 403, 404, 415, 417, 421, 422, 436, 437, 441, 445, 461, 466, 505, 509, 511, 603], "uniform_filt": [130, 209], "uniformli": [405, 540], "uniformprior": [262, 421, 461, 509, 511], "uninstal": 391, "union": [84, 86, 89, 90, 103, 105, 106, 126, 204, 353, 406, 407, 419, 420, 437, 538], "uniqu": [87, 91, 100, 153, 195, 196, 197, 198, 199, 205, 207, 208, 209, 218, 220, 229, 237, 253, 269, 279, 385, 402, 403, 404, 405, 412, 416, 419, 440, 461, 471, 499, 508, 516, 555, 602], "unique_id": 508, "unique_paramet": [218, 220], "uniquifi": [87, 91], "unit": [19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 102, 103, 106, 108, 110, 111, 112, 116, 117, 119, 120, 125, 127, 129, 131, 136, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 173, 176, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 284, 285, 286, 297, 306, 316, 317, 318, 348, 362, 363, 364, 366, 375, 376, 377, 378, 381, 382, 383, 387, 393, 401, 403, 406, 408, 410, 416, 417, 421, 422, 434, 435, 437, 445, 447, 453, 454, 456, 457, 458, 459, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 517, 525, 526, 528, 532, 534, 535, 536, 539, 540, 542, 544, 546, 547, 549, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 604], "unit_string_format": [459, 464], "unitbas": 318, "uniti": [130, 198, 281, 422, 457, 562], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 237, 279], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [464, 473, 476, 479, 481, 488, 492, 514], "univers": [25, 196, 197, 199, 205, 208, 209, 604], "univsers": 20, "unknown": [16, 84, 90, 102, 105, 126, 298, 474, 501, 604, 606, 607], "unless": [90, 93, 95, 129, 132, 136, 172, 318, 391, 398, 418, 420, 503], "unlik": [87, 91, 292, 399, 410, 509], "unmaintain": 435, "unmask": [87, 91], "unnam": [87, 91, 202], "unnecessari": [445, 456, 479], "unneed": 459, "unphys": 608, "unrealist": 392, "unrel": 609, "unreli": 514, "unsaf": 392, "unstabl": [392, 514], "unsu": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "unsupport": 409, "untar": 514, "until": [221, 392, 399, 406, 418, 452, 509], "unus": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 408, 437, 439], "unusu": 397, "unweight": [106, 111], "unzip": 514, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 102, 129, 131, 136, 157, 163, 165, 167, 204, 318, 392, 393, 396, 397, 399, 400, 401, 404, 406, 408, 409, 410, 412, 413, 415, 419, 421, 422, 424, 425, 426, 428, 430, 433, 435, 436, 437, 438, 439, 440, 441, 442, 445, 449, 451, 452, 453, 454, 455, 461, 470, 471, 479, 482, 483, 511, 514, 515, 555, 605], "upcast": 318, "upcom": [400, 401], "updat": [15, 16, 84, 87, 90, 91, 104, 105, 109, 126, 203, 217, 219, 221, 222, 229, 253, 281, 292, 338, 358, 392, 395, 397, 398, 399, 400, 401, 404, 409, 415, 417, 419, 420, 422, 423, 424, 426, 427, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 451, 452, 453, 454, 456, 459, 460, 461, 505, 508, 509, 553, 554], "update_config": 15, "update_forward_ref": [16, 84, 90, 105, 126], "update_from_dict": [217, 219], "update_link_label": [229, 253], "update_parameters_from_t": [229, 253], "update_scal": [217, 219], "updated_model": 422, "upgrad": [195, 391, 418, 427], "upload": [409, 423], "upon": [103, 106, 110, 111, 401, 476, 507, 514, 538], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 102, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 146, 153, 201, 206, 214, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 293, 294, 295, 298, 420, 430, 441, 445, 452, 453, 454, 460, 470, 474, 485, 490, 499, 500, 504, 525, 538, 540, 542], "upper_error": 127, "upsampl": [166, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 436, 456], "upsample_geom": 166, "upstream": [392, 395, 423], "upward": [294, 298], "url": 400, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 118, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 288, 293, 297, 299, 311, 312, 313, 316, 318, 326, 329, 330, 331, 338, 339, 342, 347, 348, 355, 358, 374, 375, 377, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 423, 424, 425, 426, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 477, 479, 480, 481, 484, 485, 488, 491, 492, 493, 495, 496, 497, 498, 500, 502, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 523, 527, 528, 531, 532, 542, 544, 545, 546, 548, 552, 553, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604, 605, 606, 607, 609, 610], "usabl": 392, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 105, 122, 126, 132, 135, 160, 181, 194, 195, 204, 207, 219, 221, 238, 248, 284, 342, 393, 398, 402, 403, 405, 407, 411, 417, 438, 459, 460, 498, 504, 506, 507, 520, 605], "use_cach": 254, "use_center_as_plot_label": 201, "use_enum_valu": [16, 84, 90, 105, 126], "use_evaluation_region": [229, 253], "use_fft": 209, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [176, 183, 186, 187, 189, 190, 445, 466], "useless": 514, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 124, 129, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 392, 393, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 431, 438, 445, 446, 452, 453, 454, 456, 471, 474, 482, 483, 484, 499, 500, 503, 505, 506, 507, 508, 510, 520, 525, 539, 540, 541, 542, 547, 551, 554, 557, 564, 568, 590, 601, 602, 605], "userdataset": 404, "usernam": 395, "userwarn": [470, 472, 480, 481, 485, 515], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 605, "usual": [29, 82, 83, 125, 144, 150, 151, 152, 164, 205, 326, 392, 393, 395, 397, 398, 399, 400, 406, 407, 413, 419, 422, 424, 459, 464, 465, 466, 468, 470, 472, 473, 476, 477, 481, 483, 484, 488, 490, 491, 492, 495, 496, 497, 499, 506, 509, 510, 513, 516, 526, 530, 538, 542, 544, 545, 546, 548, 551, 555, 561, 602, 604, 605, 606], "ut1": 609, "utc": [86, 88, 105, 126, 372, 483, 490, 491, 495, 505, 508, 592, 593, 594, 595, 596, 597, 598, 599, 600, 609], "utf": [87, 91], "utf8": [16, 84, 90, 105, 126], "util": [6, 96, 105, 112, 116, 117, 118, 119, 126, 127, 129, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 185, 186, 187, 188, 189, 190, 191, 192, 193, 291, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 392, 401, 403, 404, 405, 406, 412, 417, 433, 436, 437, 438, 439, 446, 447, 450, 451, 452, 453, 454, 455, 459, 460, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 517, 525, 526, 528, 530, 531, 542, 604], "utilis": [145, 292, 393, 426, 428, 464, 470, 474, 482, 496, 500, 505, 510, 516, 526, 539, 542, 549], "v": [26, 31, 32, 37, 87, 91, 157, 163, 165, 166, 167, 169, 178, 185, 203, 280, 292, 322, 395, 400, 407, 408, 420, 421, 422, 423, 424, 447, 464, 490, 497, 509, 510, 525], "v0": [95, 399, 400, 403, 404, 406, 409, 411, 412, 413, 418, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 454, 455, 456, 483, 484, 503, 507, 514], "v1": [13, 101, 392, 399, 401, 403, 408, 409, 410, 411, 418, 419, 423, 439, 440, 441, 447, 452, 456, 457, 458, 459, 460, 461], "v15": 461, "v2": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 419, 420, 445, 453, 460, 479], "v3": [437, 479], "v_0": [37, 49], "v_glat": 325, "v_glon": 325, "va": 560, "vagu": 397, "vain": 395, "val": [87, 91, 196, 197, 199, 205, 208, 209, 218, 220, 505, 554], "valfmt": 381, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 107, 125, 126, 129, 138, 147, 168, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 311, 313, 318, 336, 391, 392, 401, 405, 408, 409, 412, 419, 439, 447, 456, 466, 470, 495, 501, 504, 505, 508, 515, 540, 542, 547, 604], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "valid_interv": 495, "valid_tim": 495, "validate_al": 420, "validate_assign": [16, 84, 90, 105, 126, 420], "validate_default": [16, 84, 90, 105, 126], "validate_earth_loc": 90, "validate_loc": 420, "validate_scalar": 90, "validate_zenith_angl": 420, "validationerror": [16, 84, 90, 105, 126, 420], "valle": 38, "valleespir": 532, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 103, 105, 106, 110, 111, 113, 114, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 172, 176, 182, 183, 185, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 214, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 293, 294, 296, 298, 299, 301, 302, 303, 306, 311, 313, 318, 322, 330, 331, 345, 348, 358, 362, 377, 378, 381, 382, 383, 393, 395, 398, 403, 404, 406, 408, 410, 412, 413, 416, 417, 420, 422, 436, 439, 445, 456, 459, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 506, 507, 508, 509, 510, 514, 515, 516, 517, 520, 525, 526, 528, 530, 534, 535, 536, 540, 542, 546, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 608], "value_rang": 91, "value_scan": 293, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 229, 253, 392, 406, 420], "values_equ": [87, 91], "values_err": 493, "values_scal": [150, 151, 152, 205, 209, 244, 277, 281, 282, 330, 457, 459, 484, 503], "vanilla": [87, 91], "var": [304, 395, 426, 428], "vari": [68, 104, 109, 132, 164, 214, 330, 358, 404, 406, 407, 418, 439, 442, 463, 465, 476, 481, 482, 484, 489, 494, 495, 504, 508, 511, 515, 520], "variability_amplitud": 496, "variability_amplitude_100": 496, "variability_amplitude_error": 496, "variability_amplitude_signific": 496, "variability_estim": [463, 494, 496], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 105, 126, 139, 140, 209, 294, 298, 301, 302, 303, 304, 306, 312, 329, 356, 392, 393, 395, 405, 407, 408, 424, 426, 428, 434, 435, 451, 452, 453, 459, 460, 461, 463, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 484, 485, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 520, 525, 526, 528, 547, 605, 606, 607], "varianc": [96, 141, 142, 303, 304, 317, 407, 460, 510, 549], "variant": 424, "variat": [140, 245, 303, 398, 408, 464, 496, 503, 504, 547, 552, 607], "varieti": [403, 603], "variou": [122, 128, 129, 132, 133, 136, 145, 392, 398, 402, 404, 407, 417, 420, 424, 426, 445, 446, 460, 465, 468, 471, 474, 480, 482, 490, 500, 501, 525, 538, 542, 603, 609], "vasco": 461, "vast": [409, 447], "vaughan": [304, 496], "ve": [392, 393, 395, 509, 605], "vector": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 505, 546, 554], "vega": 454, "vel": 493, "vel_di": [45, 532], "vela": [66, 433, 468, 493, 528], "veloc": [31, 32, 37, 45, 49, 322, 325], "ver": 505, "verbos": [11, 82, 393, 416, 605, 607], "veri": [63, 87, 91, 144, 214, 382, 391, 392, 393, 394, 397, 398, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 420, 422, 424, 455, 464, 465, 473, 496, 498, 500, 501, 505, 509, 511, 515, 528, 538, 542, 555, 565, 566, 602, 604, 605, 606], "verif": [100, 229, 253, 354, 357, 470, 480, 515], "verifi": [218, 220, 242, 292, 392, 405, 498, 542], "verifywarn": 542, "verita": [97, 426, 431, 515], "versa": 195, "version": [11, 78, 85, 87, 91, 127, 184, 391, 393, 395, 396, 399, 400, 401, 402, 406, 409, 412, 413, 419, 420, 421, 422, 424, 425, 426, 427, 429, 431, 433, 434, 435, 436, 438, 439, 444, 446, 447, 449, 452, 453, 454, 456, 457, 459, 460, 461, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 540, 605], "versu": [150, 156, 292, 294, 298, 514, 536], "vert": 260, "vertex": 406, "vhe": [466, 530], "vi": 35, "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 104, 109, 197, 202, 212, 391, 393, 395, 400, 404, 406, 407, 408, 409, 410, 411, 412, 414, 416, 419, 420, 421, 422, 423, 424, 426, 427, 434, 442, 450, 452, 453, 454, 458, 459, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 523, 525, 526, 528, 542, 546, 547, 551, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 605, 609], "viabil": 420, "vice": 195, "vicin": [422, 509], "victor": 449, "view": [83, 87, 91, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 173, 196, 197, 199, 203, 205, 208, 209, 237, 320, 324, 379, 392, 406, 422, 435, 440, 445, 447, 454, 455, 470, 472, 477, 479, 483, 495, 499, 503, 504, 506, 509, 514, 515, 542, 544, 545, 546, 547, 548, 549, 551, 604], "vika": 445, "vila": 461, "vin\u00edciu": 452, "viridi": [472, 497], "virtual": [395, 412, 424, 426, 427, 428, 605], "visibl": [87, 91, 382, 383, 400, 445, 464, 483, 516, 526, 528, 604], "vision": 397, "visit": [422, 484], "visual": [6, 197, 209, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 406, 422, 440, 441, 459, 460, 461, 470, 472, 477, 479, 481, 484, 501, 503, 510, 513, 526, 528, 542, 551, 556, 560, 603], "visualis": [389, 404, 406, 414, 441, 456, 472, 503, 508, 509, 511, 514, 542], "vline": [536, 560, 561], "vmax": [103, 106, 110, 111, 382, 383, 476, 479, 481, 488, 499, 505, 506, 515, 516, 525, 526, 551, 610], "vmin": [103, 106, 110, 111, 382, 383, 474, 479, 488, 499, 505, 506, 515, 516, 525, 526, 551, 610], "vocndwmu": 465, "volum": [27, 200, 204, 207, 412, 509], "vorokh": [450, 451], "voruganti": [452, 453], "vrgr7vhw": 495, "vstack": [83, 86, 405], "vtransit": 610, "vuillaum": [419, 453], "vx": [322, 325, 418], "vy": [322, 325], "vz": [322, 325], "w": [26, 31, 49, 86, 193, 206, 315, 393, 418, 474, 477, 485, 497, 504, 508, 511, 551, 606, 608], "w3c": 412, "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 103, 105, 120, 126, 129, 132, 136, 172, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 385, 392, 395, 397, 398, 399, 400, 401, 402, 405, 406, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 424, 434, 437, 438, 439, 440, 441, 442, 449, 453, 454, 455, 456, 457, 458, 459, 465, 468, 470, 477, 479, 481, 504, 511, 514, 515, 516, 517, 528, 605], "wagner": 496, "wai": [33, 38, 83, 87, 91, 201, 297, 342, 348, 391, 392, 393, 395, 397, 398, 399, 400, 402, 403, 404, 406, 407, 408, 409, 412, 413, 414, 417, 419, 422, 426, 427, 428, 430, 433, 437, 453, 454, 468, 470, 472, 476, 479, 496, 498, 499, 500, 501, 504, 505, 506, 507, 509, 510, 514, 515, 516, 517, 520, 527, 532, 539, 541, 542, 546, 555, 603, 605, 607], "wait": [392, 423, 424], "wald": [311, 313], "wald1943": [311, 313], "walk": 422, "walker": [422, 509], "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 105, 108, 126, 153, 179, 204, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 392, 394, 395, 397, 398, 399, 402, 406, 407, 408, 410, 411, 413, 422, 424, 425, 426, 427, 428, 430, 431, 434, 454, 466, 470, 471, 472, 473, 476, 483, 484, 488, 490, 492, 493, 495, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 511, 514, 515, 525, 526, 528, 546, 602, 605, 606, 607, 608, 609], "ward": 316, "warmup": 422, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 105, 126, 197, 217, 218, 219, 220, 277, 278, 279, 281, 377, 418, 424, 436, 453, 458, 459, 460, 461, 464, 470, 473, 474, 476, 479, 480, 481, 484, 488, 492, 493, 514, 515, 542, 567, 605], "warn_miss": 87, "warn_with_traceback": 392, "wasn": [399, 454], "watch": [515, 609], "water": [426, 516, 604], "watson": 435, "wavelength": 411, "wavelet": [433, 451], "wc": [13, 16, 83, 103, 106, 110, 129, 171, 179, 180, 184, 195, 196, 197, 199, 204, 205, 207, 208, 209, 226, 229, 230, 239, 242, 253, 255, 266, 267, 271, 277, 281, 351, 387, 392, 398, 406, 411, 435, 436, 437, 439, 445, 453, 454, 458, 460, 470, 471, 474, 476, 477, 479, 481, 485, 490, 493, 497, 499, 503, 504, 506, 507, 508, 515, 525, 526, 528, 551, 554, 560, 561, 562, 567, 610], "wcd": 604, "wcda": [57, 70], "wcs_geom": [204, 229, 253, 505, 555], "wcs_geom_3d": 505, "wcs_geom_cel": 505, "wcs_map": [208, 209, 385], "wcs_tile": [195, 197], "wcsax": [103, 106, 110, 111, 197, 204, 205, 209, 229, 253, 387, 389, 479, 505, 528, 559, 563, 564, 565], "wcsconfig": 16, "wcsgeom": [23, 83, 103, 106, 110, 111, 112, 115, 117, 118, 124, 125, 136, 155, 164, 166, 176, 189, 190, 194, 195, 204, 208, 209, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 393, 398, 406, 435, 438, 439, 440, 445, 458, 460, 461, 470, 474, 476, 481, 483, 484, 485, 488, 493, 497, 499, 500, 503, 504, 505, 506, 508, 515, 516, 526, 528, 538, 540, 549, 551, 552, 555, 559, 561, 562, 563, 564], "wcslib": 392, "wcsmap": [196, 197, 199, 209, 456], "wcsndmap": [103, 106, 112, 117, 120, 136, 144, 164, 166, 169, 171, 173, 178, 179, 180, 181, 184, 189, 190, 195, 196, 197, 199, 205, 207, 208, 210, 211, 229, 253, 269, 277, 379, 385, 387, 398, 438, 439, 440, 442, 445, 447, 454, 456, 459, 460, 474, 476, 485, 497, 499, 504, 505, 515, 528, 538, 540, 548, 551], "wcsprm": 567, "wcsshape": 505, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 102, 136, 178, 204, 207, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 286, 366, 392, 393, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 433, 434, 435, 436, 441, 445, 447, 452, 453, 454, 455, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 520, 523, 525, 526, 528, 539, 546, 547, 549, 551, 554, 566, 570, 580, 602, 605, 606, 607, 608, 609], "weak": [411, 422, 500, 509, 511], "weaker": 292, "weakli": 506, "web": [87, 91, 400, 419, 424, 430, 431, 445, 453, 461, 498], "webpag": [394, 400, 413, 419, 423, 453, 456], "websit": 461, "wedg": 406, "week": [395, 400, 410, 413, 418, 423], "weekli": [398, 401, 405, 406, 490], "wegen": [453, 454], "weigh": [166, 169, 511], "weight": [67, 77, 106, 111, 147, 154, 155, 161, 164, 166, 169, 195, 196, 197, 199, 204, 205, 207, 208, 209, 222, 238, 248, 262, 279, 284, 314, 421, 422, 455, 459, 482, 511, 538, 554], "weighted_chi2_paramet": 482, "weighted_kernel": 164, "weighted_sampl": [422, 509], "welcom": [397, 406, 515], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 106, 111, 116, 119, 124, 125, 133, 195, 199, 201, 205, 207, 217, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 382, 383, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 445, 447, 448, 453, 454, 455, 459, 460, 465, 466, 467, 473, 477, 482, 484, 490, 492, 495, 499, 500, 501, 503, 504, 505, 506, 508, 509, 513, 514, 515, 518, 520, 525, 526, 528, 538, 539, 540, 551, 554, 555, 602, 603, 605, 607], "went": 434, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 140, 302, 392, 397, 398, 399, 400, 405, 407, 408, 409, 410, 411, 413, 414, 416, 418, 421, 424, 434, 437, 438, 439, 440, 441, 442, 445, 448, 453, 454, 457, 480, 493, 495, 506, 509, 511, 514, 608], "wg": 423, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 286, 348, 393, 398, 406, 409, 411, 413, 420, 422, 424, 432, 485, 497, 498, 500, 501, 509, 514, 515, 520, 526, 527, 530, 538, 555, 589, 605, 606, 609], "whatev": [406, 408, 409, 605], "wheel": [409, 461], "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 124, 125, 126, 127, 143, 154, 155, 161, 166, 168, 169, 176, 179, 182, 196, 197, 199, 201, 203, 205, 208, 209, 214, 215, 217, 219, 221, 223, 224, 227, 229, 231, 233, 234, 235, 238, 240, 244, 246, 247, 248, 250, 253, 254, 256, 258, 259, 260, 262, 265, 270, 272, 273, 274, 275, 278, 281, 282, 284, 330, 391, 392, 393, 395, 397, 398, 399, 402, 404, 406, 407, 409, 412, 413, 418, 419, 420, 421, 423, 426, 427, 428, 439, 447, 448, 453, 455, 458, 459, 460, 465, 472, 477, 481, 484, 485, 490, 491, 493, 498, 501, 504, 505, 508, 510, 514, 515, 538, 540, 542, 547, 549, 553, 554, 604, 606, 607, 608, 609], "when_us": 90, "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 105, 125, 126, 127, 130, 136, 153, 154, 155, 161, 166, 169, 171, 182, 193, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 210, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 299, 302, 305, 307, 311, 318, 355, 393, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 424, 426, 428, 430, 436, 448, 454, 464, 470, 476, 483, 484, 498, 504, 505, 506, 508, 509, 511, 514, 515, 516, 528, 530, 538, 539, 542, 547, 554, 560, 561, 562, 565, 566, 570, 604, 605, 606, 607, 608, 609], "wherea": [398, 406, 409, 412, 422, 509, 605], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 103, 105, 106, 108, 110, 111, 125, 126, 127, 128, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 182, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 223, 224, 227, 229, 231, 233, 234, 235, 240, 244, 246, 247, 250, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 279, 281, 282, 297, 318, 327, 354, 357, 359, 360, 389, 397, 399, 406, 409, 411, 413, 420, 422, 459, 473, 488, 500, 504, 505, 528, 554, 606, 607], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 102, 103, 105, 106, 108, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 140, 144, 145, 146, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 172, 176, 177, 182, 183, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 212, 214, 217, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 286, 292, 294, 297, 298, 302, 303, 304, 306, 311, 312, 313, 316, 330, 340, 350, 351, 369, 379, 381, 386, 388, 391, 393, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 435, 436, 437, 439, 440, 441, 442, 445, 448, 454, 456, 459, 461, 464, 465, 466, 470, 473, 474, 476, 477, 479, 482, 483, 484, 485, 490, 492, 493, 495, 496, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 525, 526, 528, 532, 533, 538, 539, 540, 542, 544, 545, 546, 547, 548, 549, 551, 553, 554, 555, 556, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 608], "whichev": [195, 196, 197], "while": [87, 91, 106, 196, 197, 199, 201, 205, 208, 209, 392, 395, 397, 398, 399, 401, 404, 405, 407, 411, 414, 415, 417, 418, 419, 422, 423, 424, 426, 464, 470, 472, 476, 484, 492, 493, 499, 500, 503, 504, 505, 507, 508, 509, 538, 540, 542, 553, 555, 605], "whilst": [393, 510, 520, 527], "whippl": 97, "whirlwind": 520, "white": [303, 381, 382, 481, 493, 501, 507, 530, 555], "whitespac": 336, "who": [419, 497, 530], "whole": [95, 120, 173, 176, 183, 186, 187, 189, 190, 195, 196, 197, 199, 208, 209, 254, 285, 294, 298, 392, 398, 404, 407, 412, 419, 466, 470, 479, 484, 490, 493, 499, 508, 515, 517, 547, 602], "whose": [419, 424, 484, 548, 561], "why": [392, 393, 397, 399, 406, 501, 555], "wich": 422, "wide": [399, 419, 420, 435, 454, 468, 480, 604], "wider": [491, 506, 549], "widget": [196, 197, 199, 205, 208, 209, 479, 488, 505, 525, 526], "width": [16, 27, 68, 83, 87, 91, 103, 106, 110, 111, 112, 113, 114, 116, 117, 119, 120, 130, 136, 153, 154, 155, 158, 161, 164, 166, 169, 171, 176, 181, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 226, 229, 230, 239, 241, 242, 253, 255, 266, 267, 269, 271, 277, 279, 281, 382, 383, 408, 416, 455, 471, 472, 474, 476, 477, 479, 481, 482, 483, 484, 485, 488, 490, 493, 497, 498, 499, 503, 504, 505, 506, 508, 515, 516, 525, 526, 528, 549, 551, 552, 553, 554, 555, 560, 561, 562, 564, 565, 566, 610], "width_err": 498, "width_error": 68, "width_min": 204, "width_pix": [195, 196, 197], "widthconfig": 16, "wiki": [34, 83, 88, 311, 313, 445, 517], "wikipedia": [34, 83, 88, 311, 313, 347, 406, 410], "wilei": 138, "wilk": [292, 311, 313, 540, 607], "willing": 395, "wind": [50, 477, 482, 508, 533], "window": [113, 114, 391, 392, 399, 409, 424, 425, 426, 428, 434, 450, 454, 474, 498, 604, 605, 607], "wise": [19, 20, 26, 87, 91, 144, 145, 197, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 421, 447, 461, 477, 479, 538], "wish": [204, 395, 410, 482, 501], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [402, 403, 404, 407, 415, 417], "withdrawn": [396, 397, 402, 403, 404, 407, 412, 415, 417], "within": [128, 131, 144, 195, 209, 228, 229, 230, 236, 241, 242, 243, 244, 245, 253, 261, 266, 268, 269, 280, 283, 378, 391, 392, 393, 397, 401, 406, 408, 409, 410, 411, 413, 416, 418, 419, 421, 422, 423, 424, 425, 426, 428, 448, 451, 453, 457, 459, 461, 471, 472, 479, 482, 490, 491, 492, 495, 498, 500, 503, 504, 505, 508, 509, 510, 515, 520, 521, 528, 538, 541, 542, 604, 607], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 132, 156, 194, 195, 200, 204, 207, 248, 389, 392, 395, 397, 400, 402, 406, 407, 408, 409, 411, 417, 422, 424, 435, 436, 440, 461, 471, 474, 479, 480, 495, 497, 504, 505, 506, 509, 525, 542, 553, 554, 555, 600, 605, 607], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 497], "wo": 493, "wobbl": [95, 492, 514], "wobbleregionfind": 447, "wobbleregionsfind": 472, "wolfram": [345, 346], "women": 450, "won": [120, 124, 128, 132, 136, 363, 418, 479, 505, 514, 608], "wong": [437, 461], "wood": [399, 451, 453, 454], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 542], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 127, 206, 221, 355, 391, 392, 393, 395, 397, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 446, 449, 450, 451, 452, 453, 454, 455, 456, 461, 464, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 503, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528, 538, 542, 552, 554, 567, 570, 593, 599, 600, 605], "workaround": [409, 461], "workflow": [400, 401, 408, 412, 414, 418, 424, 426, 428, 439, 461, 471, 477, 520, 525, 526, 527], "workshop": 401, "world": [83, 207, 229, 253, 392, 398, 481, 528, 554], "worst": [395, 412], "worth": [392, 530], "would": [16, 84, 87, 90, 91, 95, 105, 126, 196, 197, 199, 205, 208, 209, 248, 392, 395, 398, 399, 400, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 422, 436, 445, 468, 470, 473, 474, 488, 501, 505, 506, 508, 511, 515, 555], "wouldn": 406, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 201, 265, 326, 378, 406, 438, 461], "wrap_at": 403, "wrap_coord": 201, "wrapped_v": 378, "wrapper": [56, 254, 265, 330, 406, 407, 422, 436, 439, 509, 530, 542], "write": [11, 15, 16, 26, 82, 86, 87, 88, 91, 100, 102, 103, 106, 108, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 203, 205, 208, 209, 215, 229, 244, 253, 277, 278, 279, 280, 281, 360, 369, 393, 395, 401, 402, 403, 404, 405, 406, 408, 409, 411, 413, 415, 416, 417, 419, 420, 421, 424, 430, 433, 439, 442, 447, 449, 452, 453, 454, 455, 460, 461, 464, 470, 479, 480, 483, 485, 503, 507, 508, 514, 515, 523, 525, 526, 542, 547, 606, 608], "write_arf": 108, "write_bkg": 108, "write_covari": [15, 100, 215, 229, 253], "write_dataset": 15, "write_ds9": 508, "write_model": 15, "write_pha": 108, "write_rmf": 108, "writeabl": 421, "writer": [87, 91, 413, 420], "writeto": [86, 150, 151, 152, 156, 157, 158, 160, 163, 165, 167, 168], "written": [88, 100, 102, 103, 106, 108, 110, 111, 125, 127, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 211, 392, 393, 395, 397, 401, 402, 413, 419, 421, 457, 464, 484, 507, 509, 511, 530, 538, 539, 542, 555, 604], "wrong": [392, 443, 457, 458, 459], "wrote": 419, "wrt": [83, 166, 169, 392, 410, 492, 600], "wstat": [106, 111, 308, 309, 404, 433, 451, 452, 465, 470, 471, 473, 477, 481, 493, 499, 511, 513, 538, 604], "wstatcountsstatist": [493, 607], "wt": [26, 497], "wun": 437, "www": [67, 87, 91, 138, 311, 313, 413, 514], "wyatt": [433, 604], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 103, 110, 130, 138, 144, 151, 201, 205, 206, 214, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 297, 303, 304, 307, 321, 322, 323, 325, 329, 331, 336, 345, 381, 384, 385, 392, 393, 397, 399, 400, 401, 406, 418, 422, 423, 426, 428, 468, 473, 474, 481, 484, 493, 495, 496, 498, 501, 503, 505, 509, 511, 515, 528, 536, 542, 560, 561, 605, 607], "x27": [500, 503], "x86_64": [464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528], "x_": 130, "x_0": [196, 197, 199, 205, 208, 209], "x_1": 330, "x_2": 330, "x_3": 330, "x_bkg": 493, "x_edg": 131, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [196, 197, 199, 205, 208, 209], "x_j": 130, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [130, 343, 345, 485], "x_min": [130, 343, 345, 485], "x_n": [196, 197, 199, 205, 208, 209], "x_r_0": 242, "x_ref": [130, 485], "x_sigma": 239, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [214, 501], "xarg": 392, "xaxi": [500, 542], "xenryuwd": 479, "xerr": [464, 495, 511], "xf": 514, "xfail": 392, "xlabel": [393, 459, 477, 492, 495, 511, 515, 534, 535, 536, 560, 599], "xlim": [379, 479, 511, 515, 536, 610], "xmax": [17, 18, 21, 22, 24, 25, 27, 205, 421], "xmin": [17, 18, 21, 22, 24, 25, 27, 205, 421], "xml": [401, 402, 403, 412, 438, 452, 454, 514, 530], "xmltodict": [446, 514], "xr_pwtu8": 479, "xref": 130, "xrhfy_3c": 495, "xspec": [231, 282, 315, 452, 465, 606], "xunit": [472, 570], "xviii": 413, "xx": [403, 419], "xxx": [87, 91, 397, 419], "xxx_by_coord": 505, "xxxx": 542, "xy": [470, 481, 485, 560], "xy_posit": [33, 34, 38], "xytext": 560, "xyz": 423, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 144, 151, 201, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 321, 322, 323, 325, 329, 331, 384, 392, 406, 418, 426, 428, 459, 464, 474, 481, 484, 495, 501, 509, 511, 536, 542], "y2qgksgq": 495, "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [214, 501], "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 146, 147, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 354, 357, 359, 360, 391, 400, 401, 403, 404, 405, 408, 409, 412, 415, 420, 421, 423, 424, 425, 437, 438, 439, 442, 447, 456, 460, 461, 464, 466, 470, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 526, 528, 541, 602, 603, 604, 605], "yaml_str": [229, 253, 471], "yaxi": [468, 500, 542], "ye": 424, "year": [45, 61, 65, 78, 392, 397, 399, 400, 402, 409, 413, 414, 418, 420, 424, 451, 453, 454, 480, 482, 498, 514, 534, 535, 536, 537], "yearli": [427, 452], "yellow": 382, "yerr": [493, 495], "yet": [89, 391, 392, 397, 399, 406, 409, 413, 414, 461, 462, 468, 471, 525, 609], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 196, 197, 199, 205, 208, 209, 355, 399, 405, 406, 411, 414, 416, 421, 506, 606, 607, 608], "yk04": [45, 48], "yk04b": 48, "ylabel": [393, 492, 495, 511, 515, 534, 535, 536, 560, 599], "ylim": [379, 465, 477, 511, 515, 534, 536, 577, 586, 587, 588, 610], "ymax": [560, 561], "ymin": [560, 561], "yml": [395, 409, 423, 424, 425, 426, 428, 453, 461], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 102, 105, 108, 126, 127, 144, 151, 153, 156, 179, 196, 197, 199, 205, 208, 209, 214, 221, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 285, 292, 391, 392, 393, 394, 395, 397, 399, 402, 406, 409, 410, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 445, 453, 454, 455, 461, 465, 466, 468, 470, 471, 472, 473, 476, 477, 479, 481, 483, 484, 488, 491, 492, 493, 495, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 511, 514, 515, 516, 517, 518, 520, 521, 525, 526, 528, 538, 539, 542, 545, 549, 553, 578, 602, 605, 606, 607, 608, 609], "your": [16, 19, 20, 26, 84, 90, 99, 105, 126, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 391, 392, 393, 395, 397, 399, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 439, 440, 445, 454, 455, 464, 465, 466, 468, 470, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 523, 525, 526, 528, 537, 542, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 607], "yourself": [605, 606], "yr": [45, 52, 53, 532, 534, 535, 536], "yscale": [477, 597], "yt": 392, "yu": [437, 461], "yunit": [470, 472, 497, 498, 515, 581], "yusifov": [39, 40], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 453, "yy": 419, "yyyi": 419, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 147, 321, 322, 325, 418, 419, 422, 426, 428, 497, 509, 532, 570], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 449, "zanin": [453, 454], "zd": 83, "zen": 510, "zen_pnt": 510, "zenith": [83, 464, 480, 510, 514, 515, 516, 547], "zenith_angl": [83, 420, 515, 528], "zenodo": [419, 447, 514], "zero": [52, 53, 67, 87, 91, 100, 103, 106, 110, 111, 136, 144, 153, 154, 155, 158, 161, 166, 182, 196, 197, 199, 205, 208, 209, 257, 279, 281, 330, 336, 348, 392, 438, 441, 456, 461, 498, 504, 505, 509, 511, 608], "zhao": [27, 460], "zhen": 138, "zip": [407, 421, 423, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 523, 525, 526, 528, 536, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "zl": [26, 497], "zone": 493, "zp_vheba": 508, "zsh": 393, "zt": [26, 497], "zt0opfaj": 495, "zw": 495, "z\u00e9": 452, "\u00e0": 451, "\u0261\u00e6m\u0259pa\u026a": 542, "\u03b3": [140, 530, 604], "\u03c3": [28, 482]}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FermipyDatasetsReader", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_empty_map_dataset_from_irfs", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "create_map_dataset_from_dl4", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "ParameterSensitivityEstimator", "SensitivityEstimator", "TSMapEstimator", "combine_flux_maps", "combine_significance_maps", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_flux_maps", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "Sampler", "SamplerResult", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianPrior", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "LogUniformPrior", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "UniformPrior", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "Chi2AsymmetricErrorFitStatistic", "Chi2FitStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "sigma_to_ts", "structure_function", "ts_to_sigma", "weighted_cash_sum_cython", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "wrap_at", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 17 - Provenance capture", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "PIG 27 - Bayesian Inference using Nested Sampling", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (November 26th, 2024)", "2.0 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Data analysis", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D Image", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "3D Cube", "Computation times", "3D map simulation", "Time", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Package / API", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Bayesian analysis with nested sampling", "Observational clustering", "Priors", "Computation times", "Make a theta-square plot", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Model Gallery", "Computation times", "Tutorials", "Scripts", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Introduction", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Spatial models", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "Spectral models", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Temporal models", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Fundamental Concepts: Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistics in Gammapy", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 471, 484, 517, 525], "0": [401, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 462], "1": [397, 401, 421, 422, 432, 433, 440, 441, 443, 448, 456, 457, 458, 459, 460, 461, 509, 511], "10": [406, 432, 434], "10th": 456, "11": [407, 432, 435], "12": [408, 432, 436], "12th": 447, "13": [409, 432, 437, 446, 449], "13th": 459, "14": [410, 432, 438], "14th": 457, "15": [432, 439], "16": [411, 432, 440], "16th": 448, "17": [412, 432, 441], "18": [413, 432, 442, 443, 444], "19": [414, 432, 445], "19th": 444, "1d": [467, 471, 473, 480, 490, 491, 520], "1dc": 514, "2": [398, 399, 421, 422, 432, 444, 446, 458, 460, 462, 509, 511, 583], "20": [415, 432, 447, 448, 450], "2014": 433, "2015": [446, 449], "2016": [450, 451], "2017": 452, "2018": [453, 454, 455], "2019": [434, 435, 436, 437, 438, 439], "2020": [440, 441, 442, 443, 444], "2021": 445, "2022": [447, 448, 456], "2023": [457, 458, 459], "2024": [460, 461], "21": 416, "2155": 500, "22": [417, 451], "22nd": 445, "23": [418, 454], "24": 419, "25": [420, 433], "26": [421, 437], "26th": 461, "27": 422, "28": [434, 452, 453], "29": [435, 455], "29th": 460, "2d": [475, 476, 520], "3": [399, 421, 422, 432, 439, 449, 461, 509], "30": [436, 438], "304": 500, "32": 392, "3955": 421, "3d": [479, 480, 486, 488, 490, 520], "3fgl": [575, 586], "3fhl": 480, "4": [400, 422, 432, 450], "4122": 421, "4fgl": [587, 588], "4th": 442, "5": [401, 432, 451], "6": [402, 432, 452], "64": 392, "6th": [443, 458], "7": [399, 403, 432, 453], "8": [404, 432, 454], "9": [405, 432, 455], "A": [470, 500], "As": [544, 545, 546, 548], "In": 393, "ON": [466, 472, 480], "On": 473, "The": [398, 424, 480, 482, 500, 501, 511, 539, 551], "To": [392, 393, 413, 542], "about": 511, "abov": 482, "absolute_tim": 372, "absorpt": [416, 465, 570], "abstract": [397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "accept": 395, "access": [474, 499, 500, 505, 516, 539], "accessor": 554, "account": 465, "action": [392, 413], "ad": 505, "adapt": 474, "adaptiveringbackgroundmak": 171, "add": [403, 507], "add_colorbar": 380, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [416, 421, 548, 603], "aeff_2d": 544, "against": 472, "aim": 507, "aka": 422, "algorithm": 495, "alia": 416, "all": [491, 509], "along": 420, "altern": [400, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 417, 420], "amplitud": [421, 511], "an": [392, 464, 483, 484, 499, 506], "anaconda": 427, "analysi": [0, 11, 15, 398, 401, 464, 466, 467, 470, 471, 472, 473, 479, 480, 481, 490, 493, 509, 520, 525, 538, 541, 603], "analysisconfig": 16, "angl": [544, 545, 546, 548], "angular": 555, "annihil": 497, "annotate_heatmap": 381, "api": [6, 392, 393, 415, 417, 420, 421, 422, 456, 459, 460, 461, 500, 502, 520, 526], "apply_edisp": [112, 117], "approach": [407, 422, 466, 468, 471, 473, 474, 476, 477, 480, 483, 484, 485, 488, 490, 491, 492, 495, 496, 501, 506, 507, 509, 510, 525, 526], "apr": [441, 446, 450, 452], "arbitrari": 420, "area": [503, 514, 544], "argument": [392, 406], "arm": 532, "asmoothmapestim": 120, "assert": 392, "assert_quantity_allclos": 366, "assert_skycoord_allclos": 367, "assert_time_allclos": 368, "assess": [479, 501], "assign": [491, 507], "astro": [1, 530, 533], "astronomi": 407, "astrophys": [1, 531, 532, 533], "astropi": [392, 418], "asymmetr": 503, "attribut": [392, 393, 403], "aug": [433, 449], "author": 419, "authorship": 419, "avail": 498, "ax": [505, 555], "axi": [392, 547], "backend_default": 333, "background": [403, 407, 411, 415, 421, 477, 482, 483, 504, 507, 514, 515, 525, 545, 547, 549, 550, 551, 552, 606], "background2d": 150, "background3d": 151, "backgroundirf": 152, "backgroundirfmodel": 403, "backgroundmodel": 403, "backport": 392, "base": [417, 420, 553], "basic": [481, 505], "bayesian": [422, 496, 509], "between": 415, "bin": [407, 464, 482, 555], "binder": 424, "bit": 392, "bkg_2d": 545, "bkg_3d": 545, "block": 496, "boundari": 506, "branch": 423, "break": 392, "broken": [393, 571, 585], "brokenpowerlawspectralmodel": 223, "bsd": 392, "bug": [447, 456, 459, 460, 461], "bugfix": 423, "build": [393, 395, 424, 490, 491], "built": 602, "bullet": 393, "bundl": 392, "burkertprofil": 17, "butterfli": 526, "call": 403, "candid": [423, 474], "caplog": 392, "captur": [392, 412], "carlo": 509, "cartesian": 319, "case": [398, 402, 421, 422, 608], "casebattacharya1998": 28, "cash": [299, 606, 607], "cash_sum_cython": 300, "cashcountsstatist": 294, "catalog": [2, 498, 506, 507, 528, 537], "catalog_registri": 55, "caveat": 606, "cell": 392, "certif": 395, "cff": 419, "chain": [470, 472, 509], "chang": [392, 414, 456, 459, 460, 461], "changelog": 413, "character": 496, "check": [11, 392, 393, 429, 464, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 501, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 525, 526, 528], "checker": 365, "chi": 482, "chi2asymmetricerrorfitstatist": 295, "chi2fitstatist": 296, "choos": 393, "citat": 419, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 392, 393, 402, 403, 417, 420, 526, 548, 607], "clean": 411, "cli": 605, "clobber": 392, "clumpi": 530, "cluster": [13, 510], "code": [392, 393, 398, 401, 424], "codemeta": 419, "collect": 419, "colormap": 610, "colormap_hess": 382, "colormap_milagro": 383, "combin": [507, 539], "combine_flux_map": 137, "combine_significance_map": 138, "command": [11, 605], "common": 500, "compar": [472, 490, 509], "comparison": [422, 509], "compound": [508, 572], "compound_region_to_region": 349, "compoundspectralmodel": 224, "comput": [463, 464, 469, 470, 471, 477, 478, 481, 487, 494, 501, 512, 519, 522, 524, 526, 529, 557, 568, 590, 601], "compute_chisq": 301, "compute_flux_doubl": 302, "compute_fpp": 303, "compute_fvar": 304, "compute_lightcurve_discrete_correl": 139, "compute_lightcurve_doublingtim": 140, "compute_lightcurve_fpp": 141, "compute_lightcurve_fvar": 142, "concept": 603, "conda": 425, "confer": 419, "confid": 501, "config": [11, 476, 477, 605], "configur": [471, 479, 485, 490, 500, 525, 603], "constant": [559, 573, 592], "constantfluxspatialmodel": 225, "constantspatialmodel": 226, "constantspectralmodel": 227, "constanttemporalmodel": 228, "contain": 420, "containment_radiu": 210, "containment_region": 211, "content": [499, 555], "context": [466, 468, 470, 471, 472, 473, 474, 476, 477, 480, 482, 483, 485, 488, 490, 491, 492, 495, 496, 506, 509, 510, 511, 525, 526], "contigu": 505, "continu": 424, "contour": 501, "contribut": [395, 419, 507], "contributor": [419, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "conveni": 404, "convent": 392, "converg": 422, "convers": [392, 500], "convert": 392, "coordin": [13, 392, 403, 545, 555], "corner": 509, "correct": 393, "correl": 477, "count": [500, 507, 515, 538, 607], "covari": [212, 501], "covarianceresult": 213, "creat": [466, 470, 476, 477, 484, 499, 500, 503, 505, 506, 526, 555], "create_cosmic_ray_spectral_model": 285, "create_crab_spectral_model": 286, "create_empty_map_dataset_from_irf": 113, "create_fermi_isotropic_diffuse_model": 287, "create_map_dataset_from_dl4": 118, "create_map_dataset_from_observ": 114, "create_map_dataset_geom": 115, "creation": [466, 471, 491, 513], "cstat": 305, "cta": [402, 514], "ctao": 514, "cube": [398, 486, 505, 520], "cumul": 466, "current": 418, "curv": [407, 490, 491, 492, 500, 599, 600], "custom": [508, 511, 602], "cut": [468, 472], "cutoff": [574, 575, 576, 586, 587, 588], "cutout": 505, "cycl": 418, "cython": [418, 424], "d_sun_to_galactic_cent": 318, "dark": [497, 530], "darkmatt": [1, 530], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 392, 398, 400, 401, 407, 420, 424, 465, 466, 467, 470, 471, 472, 479, 480, 482, 485, 490, 491, 493, 495, 499, 504, 505, 513, 516, 518, 520, 525, 526, 528, 539, 550, 605, 606], "dataflow": 420, "dataset": [4, 11, 99, 100, 392, 401, 404, 414, 415, 420, 464, 466, 471, 472, 476, 477, 479, 480, 484, 490, 491, 492, 499, 500, 501, 504, 506, 507, 509, 511, 516, 525, 526, 538], "dataset_registri": 98, "datasetmodel": 229, "datasetsmak": 172, "datastor": [82, 514, 526], "dco": [395, 419], "deal": 393, "dec": 439, "decai": 497, "decemb": 458, "decis": [397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "default": 403, "defin": [464, 466, 470, 472, 481, 483, 484, 490, 491, 506, 509, 513, 526, 555], "definit": [419, 490, 509, 550], "depend": [391, 409, 416, 447, 472, 482, 484, 508], "deprec": [392, 418], "deriv": 608, "detail": [399, 479], "detect": [414, 474, 481, 513, 547], "detector": 545, "develop": [392, 394, 395, 399], "diagram": 402, "differ": [480, 505, 609], "diffus": 515, "dilat": 506, "direct": 472, "discrete_correl": 306, "discuss": 407, "disk": [471, 484, 525, 526, 560], "diskspatialmodel": 230, "dispers": [503, 514, 515, 546], "dissolv": 411, "distribut": [409, 422, 509, 532], "dl3": [3, 480, 517, 539, 547, 550], "dl4": [503, 538, 540, 550, 554, 602], "dl5": [540, 602], "dl6": 540, "dmprofil": 18, "do": 392, "doc": 424, "docstr": 393, "document": [393, 395, 401, 413, 460, 461], "doubl": 496, "download": [11, 424], "downsampl": 555, "dr1": [517, 588], "dr2": 588, "dr3": 587, "draw": 341, "driven": 605, "drop": 399, "due": 465, "durat": 504, "e": 517, "each": 482, "earli": 395, "earth_location_from_dict": 328, "ebl": [465, 570], "ebl_data_builtin": 232, "eblabsorptionnormspectralmodel": 231, "edg": 540, "edisp": 503, "edisp_2d": 546, "edispkernel": 153, "edispkernelmap": [154, 503], "edispmap": 155, "effect": [503, 504, 514, 544], "effectiveareatable2d": 156, "einastoprofil": 21, "elaps": 609, "empti": 499, "encourag": 511, "end": 392, "energi": [416, 464, 472, 482, 484, 503, 506, 508, 513, 514, 515, 540, 544, 545, 546, 548], "energydependentmorphologyestim": 122, "energydependentmultigausspsf": 157, "energydispersion2d": 158, "environ": 425, "eros": 506, "error": [501, 607], "estim": [5, 123, 410, 414, 417, 420, 422, 471, 474, 482, 485, 490, 495, 496, 500, 504, 540, 550, 551, 607], "estimate_exposure_reco_energi": 143, "estimator_registri": 121, "evalu": [403, 404, 405], "event": [401, 405, 483, 484, 493, 505, 514, 515, 528, 539, 547], "eventlist": 83, "eventlistmetadata": 84, "evid": 422, "evolut": 484, "exampl": [424, 511, 537, 538, 540, 541, 549, 550, 551, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 606], "excess": [417, 466, 477, 496, 607], "excessmapestim": 124, "exclus": [470, 471, 477, 506, 525], "execut": 605, "exemplari": 421, "exercis": [464, 468, 470, 473, 479, 481, 483, 484, 492, 495, 514, 515, 516, 517, 528], "exist": 398, "expcutoffpowerlaw3fglspectralmodel": 233, "expcutoffpowerlawnormspectralmodel": 234, "expcutoffpowerlawspectralmodel": 235, "expdecai": 593, "expdecaytemporalmodel": 236, "expect": 547, "explor": [466, 471, 481, 518, 520], "exponenti": [29, 468, 574, 575, 576, 586, 587, 588], "expos": 403, "exposur": [503, 515], "extend": [466, 483], "extens": [393, 465], "extern": 392, "extra": 424, "extract": [477, 490, 491, 492], "extrapol": [392, 589], "f_cash_root_cython": 307, "factor": 497, "factori": 505, "factoris": 547, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 421, "featur": [14, 418, 423, 456, 459, 460, 461, 500], "feb": [440, 453], "februari": 460, "fermi": [480, 515], "fermipydatasetsread": 101, "fermist": 530, "file": [393, 419, 471, 476, 477, 480, 514, 525, 539, 555], "fill": [505, 555], "filter": 491, "final": [397, 423, 471, 608], "find_peak": 144, "find_peaks_in_flux_map": 145, "finder": 551, "first": [423, 471], "fit": [10, 13, 214, 401, 407, 422, 465, 466, 468, 470, 471, 472, 476, 479, 480, 481, 488, 492, 501, 506, 511, 515, 525, 526, 555, 602, 606, 607, 608], "fitresult": 215, "fix": [392, 447, 456, 459, 460, 461], "fixedpointinginfo": 85, "fixtur": 392, "flare": 491, "float": 392, "flux": [417, 421, 464, 465, 468, 470, 471, 480, 485, 497, 498, 500, 525, 526, 528, 540], "fluxestim": 417, "fluxmap": [125, 417, 500], "fluxmetadata": 126, "fluxpoint": [127, 500], "fluxpointscollect": 417, "fluxpointsdataset": [102, 404, 499], "fluxpointsestim": [128, 540], "fluxprofileestim": 129, "fold": 403, "folder": 424, "follow": 414, "format": [392, 393, 609], "formula": 608, "forward": 403, "found": 605, "four": 547, "fov": [504, 549], "fov_to_ski": 320, "fovalign": 159, "fovbackgroundmak": [173, 549], "fovbackgroundmodel": 237, "fraction": 496, "free": 422, "freez": [418, 423, 507], "from": [392, 422, 491, 505, 506, 507, 555], "from_yaml": 354, "fulli": 500, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 392, 393, 514, 544, 545, 546, 547, 548, 607, 609], "fundament": 603, "further": [407, 465, 606], "galact": [321, 515], "galactocentr": 532, "galleri": [392, 393, 518, 520, 556], "gamlik": 530, "gamma": [407, 497, 547], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 392, 395, 398, 401, 409, 411, 413, 414, 418, 419, 420, 423, 424, 430, 431, 503, 514, 515, 516, 517, 530, 533, 537, 538, 539, 540, 541, 547, 549, 550, 551, 554, 602, 603, 607, 609], "gaussian": [561, 562, 577, 594, 595], "gaussianprior": 238, "gaussianspatialmodel": 239, "gaussianspectralmodel": 240, "gaussiantemporalmodel": 241, "gener": [392, 398, 402, 407, 419, 420, 540, 562, 595], "generalist": 417, "generalizedgaussianspatialmodel": 242, "generalizedgaussiantemporalmodel": 243, "geom": 194, "geometri": [466, 481, 490, 491, 505, 506, 525, 526, 553, 555], "get": [395, 413, 426, 465, 476, 477, 505, 513, 531, 532, 533, 539, 554], "get_combined_flux_map": 146, "get_combined_significance_map": 147, "get_images_path": 355, "get_irfs_featur": 96, "get_random_st": 342, "get_rebinned_axi": 148, "get_wstat_gof_term": 308, "get_wstat_mu_bkg": 309, "github": 392, "given": [507, 513], "global": 415, "glossari": 604, "good": 608, "gpl": 392, "group": 510, "gti": [86, 539], "guid": [394, 543], "guidelin": [393, 397, 398, 413], "h": 517, "halv": 496, "handl": [392, 401, 402, 403, 415, 419, 504, 609], "have": [400, 402, 407, 408, 417], "hawc": [480, 516], "hduindext": 87, "hduloc": 326, "healpix": 553, "help": 429, "helper": 404, "hess": 480, "hgp": 498, "hierarch": 510, "hierarchi": 420, "hierarchical_clust": 316, "high": [0, 5, 401, 408, 525, 541], "hli": 471, "how": [392, 393, 395, 413, 423, 505, 542], "hpxgeom": 195, "hpxmap": 196, "hpxndmap": 197, "hstack_column": 361, "i": [392, 395, 397, 485], "idea": 402, "imag": [393, 398, 406, 411, 474, 475, 481, 505, 520], "imageprofil": 130, "imageprofileestim": 131, "impact": 422, "implement": [402, 403, 413, 419, 421, 422, 508, 511], "import": [392, 488], "improv": [403, 416, 447, 456, 459, 460, 461], "inbuilt": 503, "includ": [393, 511], "index": [505, 511, 539], "individu": [509, 547], "infer": 422, "info": [11, 392], "inform": [419, 498, 511, 546], "infrastructur": 461, "input": [392, 420, 474], "inspect": 526, "instal": [413, 426, 427, 429], "instrument": [7, 480, 547], "integr": [13, 424, 464], "integrate_spectrum": 288, "interact": 415, "interest": 482, "interfac": [0, 401, 403, 408, 525, 541, 554], "intern": 500, "interpol": [13, 392, 505], "interpolate_profil": 331, "interpolation_scal": 332, "interv": 491, "intrins": 465, "introduc": [403, 411, 414, 416, 417, 485], "introduct": [403, 406, 407, 409, 410, 413, 417, 419, 420, 464, 470, 472, 481, 493, 497, 498, 499, 504, 505, 514, 515, 516, 517, 520, 527, 528, 530, 532, 533, 606], "inversecdfsampl": 340, "ipython": 430, "irf": [7, 160, 401, 420, 464, 499, 503, 514, 547], "irf_registri": 162, "irfmap": 161, "isothermalprofil": 22, "isotrop": 515, "issu": [422, 429, 461], "iter": 505, "j": 497, "jan": 434, "jfactori": 23, "joint": [479, 480, 538], "json": 419, "jul": 437, "june": [448, 459], "jupyt": [392, 426, 428, 430], "kei": 500, "kernel": 503, "known": 461, "labelmapaxi": [198, 505], "lat": [480, 515], "latest": 514, "law": [468, 571, 574, 575, 576, 582, 583, 584, 585, 586, 587, 588], "lazi": 404, "lazyfitsdata": 327, "lc": 490, "let": 484, "level": [0, 5, 398, 401, 408, 525, 526, 541], "li": 493, "licens": 392, "light": [407, 490, 491, 492, 500, 600], "lightcurv": [407, 483, 492, 496, 498], "lightcurveestim": [132, 540], "lightcurvetemplatetemporalmodel": 244, "like": [483, 500], "likelihood": 608, "limit": [402, 509], "line": [11, 392, 605], "linear": 596, "lineartemporalmodel": 245, "link": 393, "list": [393, 403, 404, 405, 406, 407, 408, 409, 412, 422, 483, 491, 498, 505, 506, 507, 508, 528, 539], "literatur": 472, "livetim": 504, "load": [404, 464, 465, 468, 470, 472, 498, 500, 507, 509, 516], "load_irf_dict_from_fil": 170, "locat": 392, "log": [11, 392, 468, 578, 579], "logparabolanormspectralmodel": 246, "logparabolaspectralmodel": 247, "logspir": 34, "loguniformprior": 248, "long": 419, "loop": [466, 504, 526], "lorimer2006": 35, "low": [398, 526], "lt": 418, "ma": 493, "mai": [436, 447], "maintain": [399, 419], "mainten": 401, "major": 423, "make": [392, 395, 423, 481, 484, 493, 513, 526], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 350, "make_counts_rad_max": 185, "make_edisp_kernel_map": 186, "make_edisp_map": 187, "make_effective_livetime_map": 188, "make_map_background_irf": 189, "make_map_exposure_true_energi": 190, "make_observation_time_map": 191, "make_orthogonal_rectangle_sky_region": 351, "make_path": 356, "make_psf_map": 192, "make_theta_squared_t": 193, "maker": [8, 175, 414, 420, 466, 491, 504, 525, 526, 549, 550, 551], "maker_registri": 174, "mamba": 427, "manag": [401, 427], "manual": [506, 510], "map": [9, 199, 203, 398, 401, 402, 474, 476, 477, 480, 481, 488, 493, 497, 503, 505, 506, 507, 523, 528, 540, 553, 554, 555], "mapax": 200, "mapaxi": 201, "mapcoord": [202, 554], "mapdataset": [103, 404, 479, 483, 499, 516, 538], "mapdataseteventsampl": [104, 405], "mapdatasetmak": [176, 550], "mapdatasetmetadata": 105, "mapdatasetonoff": [106, 404], "mappanelplott": 379, "mar": 435, "march": 457, "margin": 422, "markov": 509, "mask": [406, 470, 471, 477, 499, 506, 525], "materi": 419, "matter": [497, 530], "measur": 606, "meet": 401, "messag": 392, "met": 609, "metadata": [419, 420], "method": [393, 404, 405, 421, 496, 505, 540, 554], "method_default": 334, "method_kwargs_default": 335, "meyercrabspectralmodel": 250, "miniconda": 427, "minor": 414, "minuit": 422, "mission": 609, "model": [10, 251, 253, 401, 403, 411, 415, 416, 420, 421, 422, 465, 466, 470, 471, 472, 476, 479, 480, 481, 483, 484, 490, 491, 492, 495, 497, 498, 499, 501, 507, 508, 509, 511, 514, 518, 520, 525, 526, 528, 532, 533, 534, 535, 536, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 606], "model_registri": 249, "modelbas": 252, "modif": 506, "modifi": [392, 505, 508], "modul": [4, 5, 8, 10, 13], "mont": 509, "mooreprofil": 24, "morpholog": 482, "morphologi": 508, "motion_since_birth": 322, "motiv": [421, 422], "mpl_plot_check": 369, "multi": 480, "multipl": [483, 507, 511, 538], "multiprocessing_manag": 338, "n_jobs_default": 336, "naima": 580, "naimaspectralmodel": 254, "name": [392, 403, 547], "nebula": 535, "need": 547, "nest": [422, 509], "new": [392, 403, 407, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 491], "next": [468, 470, 471, 474, 481, 490, 514, 516, 517, 525, 528], "nfwprofil": 25, "night": 490, "non": [392, 505, 555], "norm": [416, 508, 563, 576, 579, 581, 584], "norm_bounds_cython": 310, "normal": [343, 525], "notat": 607, "note": [392, 432, 470, 500, 501, 606], "notebook": [11, 392, 400, 430], "nov": [442, 443, 444, 445, 451, 455], "novemb": [456, 461], "now": 407, "nuisanc": 421, "number": [392, 418, 547], "numpi": 418, "o": 485, "object": [392, 393, 402, 415, 476, 477, 483, 484, 498, 500, 510], "observ": [3, 88, 92, 401, 402, 465, 470, 471, 481, 483, 484, 490, 491, 504, 510, 525, 526], "observationeventsampl": 109, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [464, 482, 492, 510], "off": [468, 470, 473, 480], "offset": [544, 545, 546, 548], "ogipdatasetread": 107, "ogipdatasetwrit": 108, "old": 424, "one": 500, "onto": 505, "open": 493, "oper": [505, 506], "optimizeresult": 216, "option": [391, 409, 501, 509], "org": 424, "organ": [398, 407], "origin": [392, 395], "other": [392, 393, 402, 424, 427, 530, 554], "outlin": 421, "outlook": [404, 405, 406, 408, 409, 411, 412, 413, 414, 417], "output": [392, 422, 509], "over": 493, "overview": [413, 426, 482, 514, 516, 549, 551, 552], "overwrit": 392, "own": 605, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 411, 414, 424, 427, 447, 502, 520, 530, 531, 603], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 610, "paper": 401, "parabola": [468, 578, 579], "parallel": [13, 404, 422], "paramet": [217, 218, 403, 416, 421, 422, 471, 482, 501, 507, 508, 525], "parameterestim": 133, "parametersensitivityestim": 134, "parametr": 403, "parametricpsf": 167, "pdf": 344, "perform": [405, 466, 514, 526], "person": 419, "perspect": 399, "phase": [493, 599], "phasebackgroundmak": 177, "phasogram": 493, "piecewis": [563, 581], "piecewisenormspatialmodel": 255, "piecewisenormspectralmodel": 256, "pig": [396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "pip": 427, "pixel": [392, 406, 506], "pk": 500, "plan": 399, "plot": [14, 392, 465, 470, 471, 481, 482, 485, 505, 507, 509, 513, 526, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 610], "plot_contour_lin": 384, "plot_distribut": 385, "plot_heatmap": 386, "plot_map_rgb": 387, "plot_npred_sign": 388, "plot_spectrum_datasets_off_region": 389, "plot_theta_squared_t": 390, "png": 393, "point": [393, 421, 464, 465, 468, 470, 471, 480, 481, 483, 496, 498, 500, 514, 525, 526, 528, 540, 548, 564], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 257, "poisson": 606, "polar": 323, "polici": 419, "pool_kwargs_default": 337, "popul": [1, 532], "posit": [421, 511, 513, 546], "possibl": 419, "post": 423, "posterior": [422, 509], "power": [468, 571, 574, 575, 576, 582, 583, 584, 585, 586, 587, 588], "powerlaw": [468, 597], "powerlaw2spectralmodel": 258, "powerlawnormspectralmodel": 259, "powerlawspectralmodel": 260, "powerlawtemporalmodel": 261, "precis": 405, "predict": 538, "prepar": [407, 418, 464, 466, 484, 526], "prerequisit": [466, 468, 470, 471, 472, 473, 476, 480, 482, 483, 484, 485, 488, 490, 491, 492, 496, 501, 506, 507, 511, 525, 526], "pretti": 498, "primaryflux": 26, "print": 498, "prior": [262, 421, 511], "priorparamet": [219, 220], "produc": 516, "product": [497, 503], "profil": [465, 485, 497, 608], "project": [401, 424], "propag": 420, "propos": [400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 466, 468, 471, 473, 474, 476, 477, 480, 483, 484, 485, 488, 490, 491, 492, 495, 496, 501, 506, 507, 509, 510, 525, 526], "proven": 412, "psf": [503, 515, 548], "psf3d": 163, "psf_tabl": 548, "psfkernel": 164, "psfking": 165, "psfmap": [166, 503], "public": 419, "pull": [392, 395, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "pulsar": [51, 493, 534, 535], "purpos": 397, "pwn": 50, "pydant": 420, "python": [392, 393, 399, 418, 430], "qualiti": [401, 424, 470, 472, 479, 501], "quantiti": [500, 510, 540], "radial": 545, "radial_distribut": 48, "radmax2d": 168, "rai": [407, 497, 547], "random": [13, 392], "rang": [504, 513, 550], "rate": 547, "read": [474, 480, 484, 485, 505, 506, 507, 555], "read_hermes_cub": [289, 291], "read_yaml": 357, "recommend": [426, 428], "reconstruct": 545, "recopsfmap": 169, "recursive_merge_dict": 358, "redshift": 465, "reduc": [4, 476, 477, 499, 525, 526], "reduct": [8, 401, 407, 466, 470, 471, 472, 479, 490, 491, 495, 504, 516, 525, 526, 550, 605], "refer": [6, 413, 604, 605, 606, 607], "reflect": [504, 551], "reflectedregionsbackgroundmak": [178, 551], "reflectedregionsfind": 179, "region": [13, 403, 406, 464, 466, 470, 472, 504, 506, 507, 551, 555], "region_to_fram": 352, "regiongeom": [204, 555], "regionndmap": [205, 555], "regions_to_compound_region": 353, "regionsfind": 180, "relat": 555, "releas": [392, 401, 418, 419, 423, 424, 432], "remark": 397, "remnant": 536, "remov": [392, 507], "renam": 392, "repositori": 424, "repr": 392, "represent": [416, 500, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "request": [392, 395, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "requir": [391, 392, 409, 420], "requires_data": 370, "requires_depend": 371, "resampl": 499, "resample_energy_edg": 149, "residu": [470, 472, 479, 526, 547], "resolv": [414, 493, 495], "respons": [7, 547], "restructur": 413, "result": [407, 417, 464, 466, 471, 474, 482, 485, 490, 495, 500, 509, 608], "return": [392, 393], "review": 397, "ring": [477, 504, 552], "ringbackgroundmak": 181, "rmf": 546, "road": 402, "roadmap": 401, "rotat": 406, "rst": 393, "run": [11, 395, 470, 471, 472, 482, 484, 485, 490, 509, 525, 605], "run_multiprocess": 339, "safe": [504, 550], "safemaskmak": 182, "sampl": [405, 422, 483, 484, 509], "sample_powerlaw": 345, "sample_spher": 346, "sample_sphere_dist": 347, "sample_tim": 348, "sampler": [221, 484, 509], "samplerresult": 222, "save": [471, 525, 526], "scale": 609, "scale_plot_flux": 290, "scaledregulargridinterpol": 330, "scalespectralmodel": 265, "scenario": 402, "schedul": 418, "scheme": [403, 419], "script": [11, 13, 392, 430, 520, 521, 523], "section": 413, "sed": 540, "select": [466, 471, 481, 490, 491, 495, 498, 507, 525, 526, 539], "select_nested_model": 292, "sensit": 464, "sensitivityestim": 135, "sep": [438, 454], "serial": [404, 420, 480], "serialis": [421, 422, 471, 485, 503, 507, 508, 515, 538], "seril": 403, "set": [395, 471, 505, 525], "setup": [400, 424, 426, 428, 429, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 525, 526, 528], "sever": 392, "share": 508, "shell": 565, "shell2": 566, "shell2spatialmodel": 266, "shellspatialmodel": 267, "shorter": 416, "should": 392, "show": [481, 482, 510], "sigma_to_t": 311, "signal": 482, "signific": [466, 474, 477, 506, 513, 607], "simplepulsar": 54, "simplifi": 416, "simul": [401, 404, 472, 473, 483, 484, 488, 492], "sine": 598, "sinetemporalmodel": 268, "singl": [393, 473], "size": 555, "skip": 392, "sky": [9, 403, 406, 481, 483, 506, 546, 554], "sky_to_fov": 324, "skycoord": 554, "skymodel": [269, 508], "slice": 505, "small": 395, "smooth": [474, 585], "smoothbrokenpowerlawspectralmodel": 270, "snr": 52, "snrtruelovemcke": 53, "solut": 420, "some": [392, 402, 506, 513], "sourc": [1, 2, 464, 466, 470, 474, 481, 482, 483, 484, 492, 498, 506, 511, 514, 528, 532, 533, 534, 535, 537], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 403, "sourcemodel": 403, "spatial": [403, 416, 481, 497, 505, 508, 532, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567], "spatial_model_registri": 263, "spatialirfmodel": 403, "spatialmodel": 271, "special": 608, "specif": [403, 413, 498, 500], "spectra": 497, "spectral": [416, 421, 465, 466, 467, 468, 470, 471, 472, 480, 481, 497, 508, 509, 520, 528, 556, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589], "spectral_model_registri": 264, "spectralirfmodel": 403, "spectralmodel": 272, "spectroscopi": 495, "spectrum": [465, 470, 472, 473, 481, 493, 504, 526], "spectrumdataset": [110, 404, 499, 538], "spectrumdatasetmak": [183, 550], "spectrumdatasetonoff": [111, 404], "sphinx": [392, 393], "spiral": 532, "split_dataset": [116, 119], "spread": [514, 548], "squar": [482, 513], "stack": [470, 477, 479, 538], "standard_scal": 317, "standardise_unit": 376, "start": [413, 426, 531, 532, 533, 539, 554], "stat": [12, 465], "stat_contour": 501, "stat_profile_ul_scipi": 293, "stat_surfac": 501, "statist": [12, 470, 506, 513, 606, 607], "statu": [397, 402, 411, 412, 418], "step": [471, 514, 516, 517, 603], "store": [407, 471, 546], "str": 392, "structur": [411, 414, 447, 528, 603], "structure_funct": 312, "studi": 407, "style": 398, "sub": [505, 531], "subclass": 421, "subpackag": 398, "subset": 498, "suggest": 419, "summari": [433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 479, 515], "super": [586, 587, 588], "superexpcutoffpowerlaw3fglspectralmodel": 273, "superexpcutoffpowerlaw4fgldr3spectralmodel": 274, "superexpcutoffpowerlaw4fglspectralmodel": 275, "supernova": 536, "support": [392, 399, 418, 419, 421, 503, 538], "survei": [523, 610], "symmetr": 545, "systemat": 421, "t": [474, 607], "tabl": [13, 482, 498, 500, 516, 539], "table_row_to_dict": 362, "table_standardise_units_copi": 363, "table_standardise_units_inplac": 364, "tag": 416, "target": 470, "task": [403, 404, 405, 406, 407, 408, 409, 412, 422], "templat": [483, 567, 589], "templatendspatialmodel": 277, "templatendspectralmodel": 278, "templatenpredmodel": 279, "templatephasecurvetemporalmodel": 280, "templatespatialmodel": 281, "templatespectralmodel": 282, "tempor": [484, 492, 508, 556, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600], "temporal_model_registri": 276, "temporalmodel": 283, "term": 419, "terminologi": 402, "test": [13, 392, 395, 422, 482, 493, 513], "text": 392, "theta": 513, "theta2": 513, "thi": 395, "through": 500, "thumbnail": 393, "time": [13, 401, 407, 463, 469, 478, 483, 487, 489, 491, 492, 494, 495, 496, 512, 519, 520, 522, 524, 529, 557, 568, 590, 601, 609], "time_ref_from_dict": 373, "time_ref_to_dict": 374, "time_relative_to_ref": 375, "timemapaxi": [206, 505], "timmerkonig_lightcurve_simul": 297, "to_yaml": 359, "tool": [11, 605], "tooltip": 393, "touch": 395, "trapz_loglog": 329, "troubleshoot": [429, 605], "true": [544, 546, 548], "ts_to_sigma": 313, "tsmapestim": 136, "tune": 422, "tutori": [393, 400, 413, 426, 482, 514, 516, 520], "two": 507, "type": [392, 420, 538, 540, 554], "uncertainti": 410, "underli": [491, 555], "understand": 509, "unfold": 421, "unfreez": 507, "unif": 417, "unifi": [403, 417], "uniformprior": 284, "unit": [13, 392], "unit_from_fits_image_hdu": 377, "unix": 392, "unreleas": 462, "up": [395, 411, 414], "upsampl": 555, "us": [392, 402, 421, 422, 427, 430, 471, 482, 483, 490, 499, 501, 503, 505, 525, 526, 530, 533, 537, 538, 539, 540, 541, 547, 549, 550, 551, 554, 575, 586, 587, 588, 602], "user": [399, 422, 543], "util": [4, 5, 8, 10, 13, 411, 603, 607, 609], "valid": 420, "valleespir": 38, "valu": [392, 421, 482, 505, 511], "vari": 492, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 483, 496], "varianc": 496, "variou": 510, "veloc": 532, "velocity_distribut": 49, "velocity_glon_glat": 325, "venv": 425, "version": [392, 418, 423, 432, 488], "virtual": 425, "visual": [14, 414, 505, 555, 610], "visualis": [474, 495, 500], "volum": 555, "warn": 392, "wc": [505, 555], "wcsgeom": 207, "wcsmap": 208, "wcsndmap": 209, "we": [400, 407, 408, 417, 516], "webpag": 424, "weighted_cash_sum_cython": 314, "what": [392, 395, 397, 400, 402, 407, 408, 417, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 468, 470, 471, 474, 481, 490, 525, 528], "where": 392, "which": 392, "wind": 535, "wise": 490, "without": 511, "wobbleregionsfind": 184, "work": 539, "workflow": [11, 603], "wrap_at": 378, "write": [392, 397, 471, 484, 505, 506, 539, 555, 605], "write_yaml": 360, "wstat": [315, 606, 607, 608], "wstatcountsstatist": 298, "yaml": [416, 471, 525, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600], "your": [429, 471, 605], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})