Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[403, "aug-25-2014"]], "0.10 (Jan 28, 2019)": [[404, "jan-28-2019"]], "0.11 (Mar 29, 2019)": [[405, "mar-29-2019"]], "0.12 (May 30, 2019)": [[406, "may-30-2019"]], "0.13 (Jul 26, 2019)": [[407, "jul-26-2019"]], "0.14 (Sep 30, 2019)": [[408, "sep-30-2019"]], "0.15 (Dec 3, 2019)": [[409, "dec-3-2019"]], "0.16 (Feb 1, 2020)": [[410, "feb-1-2020"]], "0.17 (Apr 1, 2020)": [[411, "apr-1-2020"]], "0.18 (Nov 4th, 2020)": [[412, "nov-4th-2020"]], "0.18.1 (Nov 6th, 2020)": [[413, "nov-6th-2020"]], "0.18.2 (Nov 19th, 2020)": [[414, "nov-19th-2020"]], "0.19 (Nov 22nd, 2021)": [[415, "nov-22nd-2021"]], "0.2 (Apr 13, 2015)": [[416, "apr-13-2015"]], "0.20 (May 12th, 2022)": [[417, "may-12th-2022"]], "0.20.1 (June 16th, 2022)": [[418, "june-16th-2022"]], "0.3 (Aug 13, 2015)": [[419, "aug-13-2015"]], "0.4 (Apr 20, 2016)": [[420, "apr-20-2016"]], "0.5 (Nov 22, 2016)": [[421, "nov-22-2016"]], "0.6 (Apr 28, 2017)": [[422, "apr-28-2017"]], "0.7 (Feb 28, 2018)": [[423, "feb-28-2018"]], "0.8 (Sep 23, 2018)": [[424, "sep-23-2018"]], "0.9 (Nov 29, 2018)": [[425, "nov-29-2018"]], "1.0 (November 10th, 2022)": [[426, "november-10th-2022"]], "1.0.1 (March 14th, 2023)": [[427, "march-14th-2023"]], "1.0.2 (December 6th, 2023)": [[428, "december-6th-2023"]], "1.1 (June 13th 2023)": [[429, "june-13th-2023"]], "1.2 (February 29th 2024)": [[430, "february-29th-2024"]], "1.3 (unreleased)": [[431, "unreleased"]], "1D Spectral": [[478, "d-spectral"]], "1D spectrum simulation": [[440, "d-spectrum-simulation"]], "2D Image": [[478, "d-image"]], "2D map fitting": [[442, "d-map-fitting"]], "3D Cube": [[478, "d-cube"]], "3D detailed analysis": [[445, "d-detailed-analysis"]], "3D map simulation": [[453, "d-map-simulation"]], "API Links": [[365, "api-links"]], "API changes": [[426, "api-changes"], [429, "api-changes"], [430, "api-changes"]], "API reference": [[6, "api-reference"]], "ASmoothMapEstimator": [[112, "asmoothmapestimator"]], "Abstract": [[369, "abstract"], [370, "abstract"], [371, "abstract"], [372, "abstract"], [373, "abstract"], [374, "abstract"], [376, "abstract"], [377, "abstract"], [378, "abstract"], [379, "abstract"], [380, "abstract"], [381, "abstract"], [382, "abstract"], [383, "abstract"], [384, "abstract"], [385, "abstract"], [386, "abstract"], [387, "abstract"], [388, "abstract"], [389, "abstract"], [390, "abstract"], [391, "abstract"], [392, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[367, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[466, "accessing-data"]], "Accessing contents of a dataset": [[462, "accessing-contents-of-a-dataset"]], "Accessor methods": [[510, "accessor-methods"]], "Adaptive smoothing": [[441, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[158, "adaptiveringbackgroundmaker"]], "Add a model on multiple datasets": [[468, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[375, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[466, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[466, "adding-non-contiguous-axes"]], "Additional Models": [[387, "additional-models"]], "Additional PSF classes": [[504, "additional-psf-classes"]], "Additional utilities": [[556, "additional-utilities"]], "Aim": [[468, "aim"]], "Alternative": [[388, "alternative"]], "Alternatives": [[372, "alternatives"], [375, "alternatives"], [378, "alternatives"], [380, "alternatives"], [381, "alternatives"], [382, "alternatives"], [384, "alternatives"], [385, "alternatives"], [391, "alternatives"]], "Alternatives / Outlook": [[377, "alternatives-outlook"]], "Analysis": [[15, "analysis"]], "Analysis configuration": [[438, "analysis-configuration"], [445, "analysis-configuration"], [455, "analysis-configuration"], [482, "analysis-configuration"]], "Analysis steps": [[556, "analysis-steps"]], "Analysis workflow": [[556, "analysis-workflow"]], "AnalysisConfig": [[16, "analysisconfig"]], "As a function of of true energy and offset angle (PSF_TABLE)": [[504, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[364, "assert-convention"]], "Assign to model to all datasets": [[456, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[468, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[489, "astrophysical-source-models"]], "Astrophysical source population models": [[488, "astrophysical-source-population-models"]], "Astrophysics": [[487, "astrophysics"]], "Authorship policy": [[390, "authorship-policy"]], "BACKEND_DEFAULT": [[308, "backend-default"]], "BSD or GPL license?": [[364, "bsd-or-gpl-license"]], "Background": [[473, "background"], [501, "background"]], "Background / What we have now": [[379, "background-what-we-have-now"]], "Background Model Handling": [[386, "background-model-handling"]], "Background estimation": [[465, "background-estimation"], [506, "background-estimation"]], "Background2D": [[137, "background2d"]], "Background3D": [[138, "background3d"]], "BackgroundIRF": [[139, "backgroundirf"]], "BackgroundIRFModel": [[375, "backgroundirfmodel"]], "BackgroundModel": [[375, "backgroundmodel"]], "Basic image exploration and fitting": [[447, "basic-image-exploration-and-fitting"]], "Basic operators": [[466, "basic-operators"]], "Bayesian blocks": [[454, "bayesian-blocks"]], "Bin volume and angular size": [[511, "bin-volume-and-angular-size"]], "Boundary mask": [[467, "boundary-mask"]], "Broken power law spectral model": [[525, "broken-power-law-spectral-model"]], "BrokenPowerLawSpectralModel": [[208, "brokenpowerlawspectralmodel"]], "Bug fixes and improvements": [[417, "bug-fixes-and-improvements"], [426, "bug-fixes-and-improvements"], [429, "bug-fixes-and-improvements"], [430, "bug-fixes-and-improvements"]], "Build": [[394, "build"]], "Building 1D datasets from the new observations": [[456, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[455, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[455, "building-the-3d-analysis-configuration"]], "Built-in models": [[555, "built-in-models"]], "Bundled gammapy.extern code": [[364, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, "burkertprofile"]], "CATALOG_REGISTRY": [[55, "catalog-registry"]], "CITATION.cff": [[390, "citation-cff"]], "CLUMPY": [[486, "clumpy"]], "CTA 1DC": [[473, "cta-1dc"]], "CTA performance files": [[473, "cta-performance-files"]], "CTA with Gammapy": [[473, "cta-with-gammapy"]], "Caplog fixture": [[364, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[392, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[392, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[392, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, "casebattacharya1998"]], "Cash : Poisson data with background model": [[559, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[560, "cash-counts-statistic"]], "CashCountsStatistic": [[275, "cashcountsstatistic"]], "Catalog table": [[461, "catalog-table"]], "Caveat": [[559, "caveat"]], "Changelog": [[384, "changelog"]], "Check Python code": [[365, "check-python-code"]], "Check broken links": [[365, "check-broken-links"]], "Check setup": [[433, "check-setup"], [434, "check-setup"], [437, "check-setup"], [438, "check-setup"], [439, "check-setup"], [440, "check-setup"], [441, "check-setup"], [442, "check-setup"], [443, "check-setup"], [445, "check-setup"], [446, "check-setup"], [447, "check-setup"], [448, "check-setup"], [449, "check-setup"], [450, "check-setup"], [451, "check-setup"], [455, "check-setup"], [456, "check-setup"], [457, "check-setup"], [458, "check-setup"], [460, "check-setup"], [461, "check-setup"], [462, "check-setup"], [463, "check-setup"], [465, "check-setup"], [466, "check-setup"], [467, "check-setup"], [468, "check-setup"], [469, "check-setup"], [471, "check-setup"], [473, "check-setup"], [474, "check-setup"], [475, "check-setup"], [476, "check-setup"], [482, "check-setup"], [483, "check-setup"], [484, "check-setup"]], "Check the dataset we produced": [[475, "check-the-dataset-we-produced"]], "Check your setup": [[399, "check-your-setup"]], "Checker": [[338, "checker"]], "Choose a thumbnail and tooltip for the tutorial gallery": [[365, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[390, "citation-scheme"]], "Class attributes": [[365, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[383, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[364, "clobber-or-overwrite"]], "Code in RST files": [[365, "code-in-rst-files"]], "Code in docstrings in Python files": [[365, "code-in-docstrings-in-python-files"]], "Code quality": [[394, "code-quality"]], "Collection of the personal information of authors": [[390, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[563, "colormaps"]], "Combining event lists and GTIs": [[495, "combining-event-lists-and-gtis"]], "Combining two Models": [[468, "combining-two-models"]], "Command line tools": [[558, "command-line-tools"]], "Command line tools using click": [[364, "command-line-tools-using-click"]], "Command not found": [[558, "command-not-found"]], "Compare against the literature": [[439, "compare-against-the-literature"]], "Compare results": [[455, "compare-results"]], "Compound Spectral Model": [[469, "compound-spectral-model"]], "Compound spectral model": [[526, "compound-spectral-model"]], "CompoundSpectralModel": [[209, "compoundspectralmodel"]], "Computation times": [[432, "computation-times"], [436, "computation-times"], [444, "computation-times"], [452, "computation-times"], [459, "computation-times"], [472, "computation-times"], [477, "computation-times"], [479, "computation-times"], [481, "computation-times"], [485, "computation-times"], [513, "computation-times"], [523, "computation-times"], [544, "computation-times"], [554, "computation-times"]], "Compute Flux Points": [[437, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[443, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[447, "compute-images"]], "Compute sensitivity": [[433, "compute-sensitivity"]], "Computing contours using stat_contour": [[463, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[463, "computing-contours-using-stat-surface"]], "Computing flux points": [[483, "computing-flux-points"]], "Conda Environments": [[395, "conda-environments"]], "Confidence contours": [[463, "confidence-contours"]], "Configurable analysis": [[556, "configurable-analysis"]], "Configuration": [[451, "configuration"]], "Configuration for stacked and joint analysis": [[445, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[438, "configuration-of-the-analysis"]], "Constant spatial model": [[514, "constant-spatial-model"]], "Constant spectral model": [[527, "constant-spectral-model"]], "Constant temporal model": [[545, "constant-temporal-model"]], "ConstantFluxSpatialModel": [[210, "constantfluxspatialmodel"]], "ConstantSpatialModel": [[211, "constantspatialmodel"]], "ConstantSpectralModel": [[212, "constantspectralmodel"]], "ConstantTemporalModel": [[213, "constanttemporalmodel"]], "Context": [[434, "context"], [435, "context"], [437, "context"], [438, "context"], [439, "context"], [440, "context"], [441, "context"], [442, "context"], [443, "context"], [446, "context"], [448, "context"], [449, "context"], [451, "context"], [453, "context"], [454, "context"], [455, "context"], [456, "context"], [457, "context"], [467, "context"], [470, "context"], [471, "context"], [482, "context"], [483, "context"]], "Continuous integration": [[394, "continuous-integration"]], "Contribution in conferences": [[390, "contribution-in-conferences"]], "Contributors": [[403, "contributors"], [404, "contributors"], [405, "contributors"], [406, "contributors"], [407, "contributors"], [408, "contributors"], [409, "contributors"], [410, "contributors"], [411, "contributors"], [412, "contributors"], [415, "contributors"], [416, "contributors"], [417, "contributors"], [418, "contributors"], [419, "contributors"], [420, "contributors"], [421, "contributors"], [422, "contributors"], [423, "contributors"], [424, "contributors"], [425, "contributors"], [426, "contributors"], [427, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[364, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[364, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[511, "coordinates-defined-by-the-regiongeom"]], "Counts": [[474, "counts"]], "Counts and fit statistics": [[560, "counts-and-fit-statistics"]], "Counts statistics classes": [[560, "counts-statistics-classes"]], "Covariance": [[199, "covariance"]], "Covariance and parameters errors": [[463, "covariance-and-parameters-errors"]], "CovarianceResult": [[200, "covarianceresult"]], "Create DL4 product - PSFMap": [[464, "create-dl4-product-psfmap"]], "Create a mask in energy": [[467, "create-a-mask-in-energy"]], "Create a stacked dataset": [[443, "create-a-stacked-dataset"]], "Create edisp kernel map": [[464, "create-edisp-kernel-map"]], "Create exclusion mask": [[437, "create-exclusion-mask"], [443, "create-exclusion-mask"]], "Create exposure map": [[464, "create-exposure-map"]], "Create the energy-dependent temporal model": [[450, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[483, "create-the-maker-classes-to-be-used"]], "Create the makers": [[434, "create-the-makers"]], "Create the mask from a catalog of sources": [[467, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[467, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[467, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[467, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[450, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[466, "creating-wcs-maps"]], "Creating a RegionGeom": [[511, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[511, "creating-a-regionndmap"]], "Creating a mask for fitting": [[467, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[467, "creating-a-mask-manually"]], "Creating an empty dataset": [[462, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[467, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[466, "creating-from-a-map-geometry"]], "Creating the config file": [[442, "creating-the-config-file"], [443, "creating-the-config-file"]], "Creation of the Flux points": [[438, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[456, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[456, "creation-of-the-datasets"]], "Creation of the model": [[438, "creation-of-the-model"]], "Cube plotting": [[466, "cube-plotting"]], "Cumulative excess and significance": [[434, "cumulative-excess-and-significance"]], "Current status": [[389, "current-status"]], "Custom models": [[555, "custom-models"]], "Cutouts": [[466, "cutouts"]], "Cython": [[394, "cython"]], "DATASET_REGISTRY": [[93, "dataset-registry"]], "DCO implementation": [[390, "dco-implementation"]], "DL3 DR1": [[476, "dl3-dr1"]], "DMProfile": [[18, "dmprofile"]], "D_SUN_TO_GALACTIC_CENTER": [[293, "d-sun-to-galactic-center"]], "Dark matter": [[486, "dark-matter"]], "Dark matter spatial and spectral models": [[460, "dark-matter-spatial-and-spectral-models"]], "DarkMatterAnnihilationSpectralModel": [[19, "darkmatterannihilationspectralmodel"]], "DarkMatterDecaySpectralModel": [[20, "darkmatterdecayspectralmodel"]], "Data Fitting": [[379, "data-fitting"]], "Data access and selection (DL3)": [[495, "data-access-and-selection-dl3"]], "Data analysis": [[478, "data-analysis"]], "Data analysis subpackages in gammapy": [[370, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[373, "data-and-observation-handling"]], "Data and models files": [[446, "data-and-models-files"]], "Data exploration": [[478, "data-exploration"]], "Data reduction": [[379, "data-reduction"], [445, "data-reduction"], [445, "id1"], [482, "data-reduction"], [483, "data-reduction"]], "Data reduction (DL3 to DL4)": [[506, "data-reduction-dl3-to-dl4"]], "Data reduction into a MapDataset": [[475, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[465, "data-reduction-loop"]], "Data structures": [[484, "data-structures"]], "DataStore": [[78, "datastore"]], "Dataset": [[94, "dataset"], [376, "dataset"], [465, "dataset"]], "Dataset helper / convenience methods": [[376, "dataset-helper-convenience-methods"]], "Dataset serialization": [[376, "dataset-serialization"]], "Dataset simulations": [[439, "dataset-simulations"]], "DatasetModels": [[214, "datasetmodels"]], "Datasets": [[95, "datasets"], [373, "datasets"], [376, "datasets"], [391, "datasets"], [462, "datasets"]], "Datasets (DL4)": [[494, "datasets-dl4"]], "Datasets - Reduced data, IRFs, models": [[462, "datasets-reduced-data-irfs-models"]], "Datasets serialization": [[446, "datasets-serialization"]], "DatasetsMaker": [[159, "datasetsmaker"]], "Datastore": [[473, "datastore"]], "Dealing with links": [[365, "dealing-with-links"]], "Decision": [[369, "decision"], [370, "decision"], [371, "decision"], [372, "decision"], [373, "decision"], [374, "decision"], [375, "decision"], [376, "decision"], [377, "decision"], [378, "decision"], [379, "decision"], [380, "decision"], [381, "decision"], [382, "decision"], [383, "decision"], [384, "decision"], [385, "decision"], [386, "decision"], [387, "decision"], [388, "decision"], [389, "decision"], [390, "decision"], [391, "decision"], [392, "decision"]], "Define Target Region": [[437, "define-target-region"]], "Define an Observation": [[449, "define-an-observation"]], "Define an observation and make a dataset": [[450, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[433, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[447, "define-map-geometry"]], "Define the MapDataset": [[449, "define-the-mapdataset"]], "Define the Model": [[456, "define-the-model"]], "Define the ON region": [[439, "define-the-on-region"]], "Define the Sky model: a point-like source": [[449, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[434, "define-the-geometries"]], "Define the geometry": [[467, "define-the-geometry"]], "Define the model": [[483, "define-the-model"]], "Define the model to be used": [[455, "define-the-model-to-be-used"], [455, "id3"]], "Define the simulation source model": [[450, "define-the-simulation-source-model"]], "Define time intervals": [[456, "define-time-intervals"]], "Defining the datastore and selecting observations": [[483, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[456, "defining-the-geometry"]], "Definition of a Contributor": [[390, "definition-of-a-contributor"]], "Definition of the Maintainer": [[390, "definition-of-the-maintainer"]], "Definition of the data selection": [[455, "definition-of-the-data-selection"], [455, "id1"]], "Definition of the dataset geometry": [[455, "definition-of-the-dataset-geometry"], [455, "id2"]], "Dependencies": [[363, "dependencies"], [381, "dependencies"]], "Deprecating a function or a class": [[364, "deprecating-a-function-or-a-class"]], "Deprecation": [[389, "deprecation"]], "Derivation of the WStat formula": [[561, "derivation-of-the-wstat-formula"]], "Detailed plan": [[371, "detailed-plan"]], "Developer How To": [[364, "developer-how-to"]], "Developer guide": [[366, "developer-guide"]], "Discussion / Alternatives": [[379, "discussion-alternatives"]], "Disk spatial model": [[515, "disk-spatial-model"]], "DiskSpatialModel": [[215, "diskspatialmodel"]], "Dissolve gammapy.background": [[383, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[383, "dissolve-gammapy-image"]], "Distributions": [[381, "distributions"], [381, "id1"]], "Documentation": [[373, "documentation"], [430, "documentation"]], "Documentation How To": [[365, "documentation-how-to"]], "Documentation building": [[365, "documentation-building"]], "Documentation guidelines": [[365, "documentation-guidelines"]], "Download": [[394, "download"]], "EBL absorption spectral model": [[524, "ebl-absorption-spectral-model"]], "EBLAbsorptionNormSpectralModel": [[216, "eblabsorptionnormspectralmodel"]], "EBL_DATA_BUILTIN": [[217, "ebl-data-builtin"]], "EDispKernel": [[140, "edispkernel"]], "EDispKernelMap": [[141, "edispkernelmap"]], "EDispMap": [[142, "edispmap"]], "ESTIMATOR_REGISTRY": [[113, "estimator-registry"]], "Effective Area": [[464, "effective-area"]], "Effective area": [[473, "effective-area"], [500, "effective-area"]], "EffectiveAreaTable2D": [[143, "effectiveareatable2d"]], "EinastoProfile": [[21, "einastoprofile"]], "Energy Dependent Spatial Models": [[387, "energy-dependent-spatial-models"]], "Energy Dispersion": [[464, "energy-dispersion"], [474, "energy-dispersion"], [502, "energy-dispersion"]], "Energy dispersion": [[473, "energy-dispersion"]], "Energy edges": [[496, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[114, "energydependentmorphologyestimator"]], "EnergyDependentMultiGaussPSF": [[144, "energydependentmultigausspsf"]], "EnergyDispersion2D": [[145, "energydispersion2d"]], "Estimating TS": [[560, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[454, "estimation-of-time-variability-in-a-lightcurve"]], "Estimator": [[115, "estimator"]], "Estimators": [[391, "estimators"]], "Estimators (DL4 to DL5, and DL6)": [[496, "estimators-dl4-to-dl5-and-dl6"]], "Event Simulation": [[373, "event-simulation"]], "Event lists": [[484, "event-lists"]], "Event sampling": [[449, "event-sampling"]], "EventList": [[79, "eventlist"]], "EventListMetaData": [[80, "eventlistmetadata"]], "Events": [[473, "events"], [474, "events"]], "Example": [[559, "example"], [559, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[471, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[471, "example-2-encouraging-positive-amplitude-values"]], "Example plot": [[514, "example-plot"], [515, "example-plot"], [516, "example-plot"], [517, "example-plot"], [518, "example-plot"], [519, "example-plot"], [520, "example-plot"], [521, "example-plot"], [522, "example-plot"], [524, "example-plot"], [525, "example-plot"], [526, "example-plot"], [527, "example-plot"], [528, "example-plot"], [529, "example-plot"], [530, "example-plot"], [531, "example-plot"], [532, "example-plot"], [533, "example-plot"], [534, "example-plot"], [535, "example-plot"], [536, "example-plot"], [537, "example-plot"], [538, "example-plot"], [539, "example-plot"], [540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"], [549, "example-plot"], [550, "example-plot"], [551, "example-plot"]], "Examples using gammapy.analysis.Analysis": [[497, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[486, "examples-using-gammapy-astro-darkmatter-darkmatterannihilationspectralmodel"]], "Examples using gammapy.catalog.SourceCatalog3FHL": [[493, "examples-using-gammapy-catalog-sourcecatalog3fhl"]], "Examples using gammapy.catalog.SourceCatalogGammaCat": [[493, "examples-using-gammapy-catalog-sourcecataloggammacat"]], "Examples using gammapy.data.DataStore": [[495, "examples-using-gammapy-data-datastore"]], "Examples using gammapy.data.EventList": [[495, "examples-using-gammapy-data-eventlist"]], "Examples using gammapy.datasets.MapDataset": [[494, "examples-using-gammapy-datasets-mapdataset"]], "Examples using gammapy.datasets.SpectrumDatasetOnOff": [[494, "examples-using-gammapy-datasets-spectrumdatasetonoff"]], "Examples using gammapy.estimators.FluxPointsEstimator": [[496, "examples-using-gammapy-estimators-fluxpointsestimator"]], "Examples using gammapy.estimators.LightCurveEstimator": [[496, "examples-using-gammapy-estimators-lightcurveestimator"]], "Examples using gammapy.irf.EDispKernelMap": [[503, "examples-using-gammapy-irf-edispkernelmap"]], "Examples using gammapy.irf.PSFMap": [[503, "examples-using-gammapy-irf-psfmap"]], "Examples using gammapy.irf.load_irf_dict_from_file": [[503, "examples-using-gammapy-irf-load-irf-dict-from-file"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[505, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.MapDatasetMaker": [[506, "examples-using-gammapy-makers-mapdatasetmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[507, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Examples using gammapy.makers.SpectrumDatasetMaker": [[506, "examples-using-gammapy-makers-spectrumdatasetmaker"]], "Examples using gammapy.maps.HpxNDMap": [[510, "examples-using-gammapy-maps-hpxndmap"]], "Examples using gammapy.maps.RegionNDMap": [[510, "examples-using-gammapy-maps-regionndmap"]], "Examples using gammapy.maps.WcsNDMap": [[510, "examples-using-gammapy-maps-wcsndmap"]], "Examples using gammapy.modeling.Fit": [[555, "examples-using-gammapy-modeling-fit"]], "Excess and Significance": [[560, "excess-and-significance"], [560, "id2"]], "Excess errors": [[560, "excess-errors"], [560, "id4"]], "Excess estimators": [[388, "excess-estimators"]], "ExcessMapEstimator": [[116, "excessmapestimator"]], "Exclusion masks": [[467, "exclusion-masks"]], "Execution": [[558, "execution"]], "Exemplary additional prior subclasses:": [[392, "exemplary-additional-prior-subclasses"]], "Exercises": [[433, "exercises"], [435, "exercises"], [437, "exercises"], [440, "exercises"], [445, "exercises"], [447, "exercises"], [449, "exercises"], [450, "exercises"], [457, "exercises"], [473, "exercises"], [474, "exercises"], [475, "exercises"], [476, "exercises"], [484, "exercises"], [484, "id1"], [484, "id2"], [484, "id3"]], "Existing code": [[370, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[218, "expcutoffpowerlaw3fglspectralmodel"]], "ExpCutoffPowerLawNormSpectralModel": [[219, "expcutoffpowerlawnormspectralmodel"]], "ExpCutoffPowerLawSpectralModel": [[220, "expcutoffpowerlawspectralmodel"]], "ExpDecay temporal model": [[546, "expdecay-temporal-model"]], "ExpDecayTemporalModel": [[221, "expdecaytemporalmodel"]], "Expected number of detected events": [[503, "expected-number-of-detected-events"]], "Exploration of the fit results": [[438, "exploration-of-the-fit-results"]], "Explore the fit results": [[434, "explore-the-fit-results"]], "Explore the results": [[434, "explore-the-results"]], "Exponential": [[29, "exponential"]], "Exponential Cut-Off Powerlaw Fit": [[435, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[530, "exponential-cutoff-power-law-norm-spectral-model"]], "Exponential cutoff power law spectral model": [[528, "exponential-cutoff-power-law-spectral-model"]], "Exponential cutoff power law spectral model used for 3FGL": [[529, "exponential-cutoff-power-law-spectral-model-used-for-3fgl"]], "Expose model parameters as attributes": [[375, "expose-model-parameters-as-attributes"]], "Exposure": [[474, "exposure"]], "Extended source using a template": [[449, "extended-source-using-a-template"]], "Extract the light curve": [[456, "extract-the-light-curve"]], "Extract the lightcurve": [[457, "extract-the-lightcurve"]], "Extracting the light curve": [[455, "extracting-the-light-curve"]], "Extracting the ring background": [[443, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[503, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, "faucherkaspi2006"]], "FaucherKaspi2006VelocityBimodal": [[31, "faucherkaspi2006velocitybimodal"]], "FaucherKaspi2006VelocityMaxwellian": [[32, "faucherkaspi2006velocitymaxwellian"]], "FaucherSpiral": [[33, "faucherspiral"]], "Feature Freeze and Branching": [[393, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[446, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[474, "fermi-lat-with-gammapy"]], "FermiST": [[486, "fermist"]], "Files": [[473, "files"]], "Filling a RegionNDMap": [[511, "filling-a-regionndmap"]], "Filling maps from event lists": [[466, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[466, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[456, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[369, "final-remarks"]], "Final result": [[561, "final-result"]], "Fit": [[201, "fit"], [453, "fit"], [474, "fit"]], "Fit quality and model residuals": [[437, "fit-quality-and-model-residuals"], [439, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[463, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[445, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[445, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[437, "fit-spectrum"], [439, "fit-spectrum"]], "Fit statistics": [[559, "fit-statistics"]], "Fit the datasets": [[457, "fit-the-datasets"]], "Fit the model": [[483, "fit-the-model"]], "FitResult": [[202, "fitresult"]], "Fitting": [[373, "fitting"], [463, "fitting"]], "Fitting Multiple Datasets with and without the Prior": [[471, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[471, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[463, "fitting-options"]], "Fitting temporal models": [[457, "fitting-temporal-models"]], "Fitting the obtained light curve": [[457, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[364, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[81, "fixedpointinginfo"]], "Float data type: 32 bit or 64 bit?": [[364, "float-data-type-32-bit-or-64-bit"]], "Flux Profile Estimation": [[451, "flux-profile-estimation"]], "Flux maps": [[496, "flux-maps"]], "Flux maps for annihilation": [[460, "flux-maps-for-annihilation"]], "Flux maps for decay": [[460, "flux-maps-for-decay"]], "Flux point fitting": [[435, "flux-point-fitting"]], "Flux points": [[461, "flux-points"], [482, "flux-points"], [496, "flux-points"]], "Flux quantities": [[496, "flux-quantities"]], "FluxMaps": [[117, "fluxmaps"]], "FluxMetaData": [[118, "fluxmetadata"]], "FluxPoints": [[119, "fluxpoints"]], "FluxPointsDataset": [[96, "fluxpointsdataset"], [376, "fluxpointsdataset"], [462, "fluxpointsdataset"]], "FluxPointsEstimator": [[120, "fluxpointsestimator"]], "FluxProfileEstimator": [[121, "fluxprofileestimator"]], "FoV background": [[465, "fov-background"], [505, "fov-background"]], "FoVAlignment": [[146, "fovalignment"]], "FoVBackgroundMaker": [[160, "fovbackgroundmaker"]], "FoVBackgroundModel": [[222, "fovbackgroundmodel"]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[454, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[468, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[365, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[364, "functions-returning-several-values"]], "Further references": [[559, "further-references"]], "GTI": [[82, "gti"]], "Galactic diffuse background": [[474, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[488, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[460, "gamma-ray-spectra-at-production"]], "GammaLib": [[486, "gammalib"]], "Gammapy": [[401, "gammapy"]], "Gammapy Binder": [[394, "id1"]], "Gammapy analysis workflow and package structure": [[556, "gammapy-analysis-workflow-and-package-structure"]], "Gammapy overview": [[384, "gammapy-overview"]], "Gammapy repository": [[394, "gammapy-repository"]], "Gammapy webpages": [[394, "gammapy-webpages"]], "Gaussian spatial model": [[516, "gaussian-spatial-model"]], "Gaussian spectral model": [[531, "gaussian-spectral-model"]], "Gaussian temporal model": [[547, "gaussian-temporal-model"]], "GaussianSpatialModel": [[223, "gaussianspatialmodel"]], "GaussianSpectralModel": [[224, "gaussianspectralmodel"]], "GaussianTemporalModel": [[225, "gaussiantemporalmodel"]], "General Gammapy publications": [[390, "general-gammapy-publications"]], "General code style guidelines": [[370, "general-code-style-guidelines"]], "General conventions": [[364, "general-conventions"]], "General idea and class diagram": [[374, "general-idea-and-class-diagram"]], "General method": [[496, "general-method"]], "General organization of the new approach": [[379, "general-organization-of-the-new-approach"]], "Generalist estimators": [[388, "generalist-estimators"]], "Generalized Gaussian temporal model": [[548, "generalized-gaussian-temporal-model"]], "Generalized gaussian spatial model": [[517, "generalized-gaussian-spatial-model"]], "GeneralizedGaussianSpatialModel": [[226, "generalizedgaussianspatialmodel"]], "GeneralizedGaussianTemporalModel": [[227, "generalizedgaussiantemporalmodel"]], "Generating log messages": [[364, "generating-log-messages"]], "Geom": [[181, "geom"]], "Get in touch early": [[367, "get-in-touch-early"]], "Get set up": [[367, "get-set-up"]], "Getting started": [[384, "getting-started"], [396, "getting-started"], [487, "getting-started"], [488, "getting-started"], [489, "getting-started"]], "Getting started section restructuring": [[384, "getting-started-section-restructuring"]], "Getting started with data": [[495, "getting-started-with-data"]], "Getting started with maps": [[510, "getting-started-with-maps"]], "Getting the reduced dataset": [[442, "getting-the-reduced-dataset"], [443, "getting-the-reduced-dataset"]], "Global Model Handling": [[386, "global-model-handling"]], "Glossary": [[557, "glossary"]], "Glossary and references": [[557, "glossary-and-references"]], "Goodness of fit": [[561, "goodness-of-fit"]], "Guidelines and specific actions": [[384, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[476, "h-e-s-s-with-gammapy"]], "HAWC data access and reduction": [[475, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[475, "hawc-with-gammapy"]], "HAWC: 1D dataset for flux point fitting": [[446, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[83, "hduindextable"]], "HDULocation": [[301, "hdulocation"]], "HEALPix geometry": [[509, "healpix-geometry"]], "HEALPix-based maps": [[509, "healpix-based-maps"]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[446, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[390, "handling-of-conference-material"]], "Help!?": [[399, "help"]], "Hierarchical clustering of observations": [[470, "hierarchical-clustering-of-observations"]], "Hierarchy": [[391, "hierarchy"]], "High Level Analysis Interface": [[497, "high-level-analysis-interface"]], "High level interface": [[373, "high-level-interface"], [482, "high-level-interface"]], "How To": [[384, "how-to"], [498, "how-to"]], "How to contribute to Gammapy": [[367, "how-to-contribute-to-gammapy"]], "How to get data values": [[466, "how-to-get-data-values"]], "How to handle API breaking changes?": [[364, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[393, "how-to-make-a-gammapy-release"]], "How to make a pull request": [[364, "how-to-make-a-pull-request"]], "How to set data values": [[466, "how-to-set-data-values"]], "How to use logging": [[364, "how-to-use-logging"]], "How to use random numbers": [[364, "how-to-use-random-numbers"]], "How to write code": [[364, "how-to-write-code"]], "How to write tests": [[364, "how-to-write-tests"]], "HpxGeom": [[182, "hpxgeom"]], "HpxMap": [[183, "hpxmap"]], "HpxNDMap": [[184, "hpxndmap"]], "IPython": [[400, "id3"]], "IRF": [[147, "irf"], [391, "irf"]], "IRF axis naming": [[503, "irf-axis-naming"]], "IRFMap": [[148, "irfmap"]], "IRF_REGISTRY": [[149, "irf-registry"]], "IRFs": [[373, "irfs"], [473, "irfs"]], "Image Plotting": [[466, "image-plotting"]], "ImageProfile": [[122, "imageprofile"]], "ImageProfileEstimator": [[123, "imageprofileestimator"]], "Images and masks": [[378, "images-and-masks"]], "Implement default parameters": [[375, "implement-default-parameters"]], "Implement evaluation region specifications": [[375, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[375, "implement-sky-coordinate-handling"]], "Implementation": [[384, "implementation"], [392, "implementation"]], "Implementation Outline": [[392, "implementation-outline"]], "Implementation road map": [[374, "implementation-road-map"]], "Implementing a custom model": [[469, "implementing-a-custom-model"]], "Implementing a custom prior": [[471, "implementing-a-custom-prior"]], "Imports and versions": [[453, "imports-and-versions"]], "Improve SourceModels class": [[375, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[375, "improve-and-implement-model-serilization"]], "Improve spatial models": [[375, "improve-spatial-models"]], "In the RST files": [[365, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[464, "inbuilt-gammapy-irfs"]], "Include png files as images": [[365, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[466, "indexing-and-slicing-sub-maps"]], "Inspect the reduced dataset": [[483, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[483, "inspecting-residuals"]], "Install issues": [[399, "install-issues"]], "Installation": [[384, "installation"], [396, "installation"], [397, "installation"]], "Instrument Response Functions (DL3)": [[503, "instrument-response-functions-dl3"]], "Interaction Between Models and Dataset Objects": [[386, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[510, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[466, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[364, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[387, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[388, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[388, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[388, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[385, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[385, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[385, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[383, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[385, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[375, "introduce-naming-scheme-for-models"]], "Introduction": [[375, "introduction"], [378, "introduction"], [379, "introduction"], [381, "introduction"], [382, "introduction"], [384, "introduction"], [388, "introduction"], [390, "introduction"], [391, "introduction"], [433, "introduction"], [437, "introduction"], [439, "introduction"], [447, "introduction"], [458, "introduction"], [460, "introduction"], [461, "introduction"], [462, "introduction"], [465, "introduction"], [466, "introduction"], [473, "introduction"], [474, "introduction"], [478, "introduction"], [484, "introduction"], [486, "introduction"], [488, "introduction"], [489, "introduction"], [559, "introduction"]], "Introduction of background models": [[375, "introduction-of-background-models"]], "Introduction of model name attributes": [[375, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[375, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[315, "inversecdfsampler"]], "IsothermalProfile": [[22, "isothermalprofile"]], "Isotropic diffuse background": [[474, "isotropic-diffuse-background"]], "Iterating by image": [[466, "iterating-by-image"]], "J Factors": [[460, "j-factors"]], "JFactory": [[23, "jfactory"]], "Joint Analysis": [[494, "joint-analysis"]], "Joint analysis": [[445, "joint-analysis"], [446, "joint-analysis"]], "Jupyter notebooks": [[400, "jupyter-notebooks"]], "LabelMapAxis": [[185, "labelmapaxis"], [466, "labelmapaxis"]], "Lazy loading of Datasets": [[376, "lazy-loading-of-datasets"]], "LazyFitsData": [[302, "lazyfitsdata"]], "Let\u2019s simulate the model": [[450, "let-s-simulate-the-model"]], "Light Curve Fitting": [[379, "light-curve-fitting"]], "Light Curve estimation by observation": [[455, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[553, "light-curve-temporal-model"]], "Light curves": [[455, "light-curves"]], "Light curves for flares": [[456, "light-curves-for-flares"]], "LightCurveEstimator": [[124, "lightcurveestimator"]], "LightCurveTemplateTemporalModel": [[228, "lightcurvetemplatetemporalmodel"]], "Lightcurve": [[379, "lightcurve"]], "Lightcurves": [[461, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[379, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[374, "limitations"]], "Linear temporal model": [[549, "linear-temporal-model"]], "LinearTemporalModel": [[229, "lineartemporalmodel"]], "Links to other tutorials": [[365, "links-to-other-tutorials"]], "List available catalogs": [[461, "list-available-catalogs"]], "Load Data": [[437, "load-data"]], "Load IRFs and prepare dataset": [[433, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[461, "load-catalogs"]], "Load data": [[439, "load-data"]], "Load spectral points": [[435, "load-spectral-points"]], "Loading models from a catalog": [[468, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[364, "locate-origin-of-warnings"]], "Log parabola spectral model": [[532, "log-parabola-spectral-model"]], "Log parabola spectral norm model": [[533, "log-parabola-spectral-norm-model"]], "Log-Parabola Fit": [[435, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[230, "logparabolanormspectralmodel"]], "LogParabolaSpectralModel": [[231, "logparabolaspectralmodel"]], "LogSpiral": [[34, "logspiral"]], "Long Term Support releases": [[390, "long-term-support-releases"]], "Lorimer2006": [[35, "lorimer2006"]], "Low level API": [[483, "low-level-api"]], "Low level map and cube analysis": [[370, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[161, "maker-registry"]], "METHOD_DEFAULT": [[309, "method-default"]], "METHOD_KWARGS_DEFAULT": [[310, "method-kwargs-default"]], "MODEL_REGISTRY": [[232, "model-registry"]], "Maintainer and developer perspective": [[371, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[373, "maintenance-and-code-quality"]], "Make a Bugfix release": [[393, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[458, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[447, "make-sky-images"]], "Make small pull requests": [[367, "make-small-pull-requests"]], "Maker": [[162, "maker"]], "Makers": [[391, "makers"]], "Makers - Data reduction": [[465, "makers-data-reduction"]], "Making a butterfly plot": [[483, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[364, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[364, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[364, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[470, "manual-grouping-of-observations"]], "Map": [[186, "map"]], "Map Analysis / Data Reduction": [[373, "map-analysis-data-reduction"]], "MapAxes": [[187, "mapaxes"]], "MapAxis": [[188, "mapaxis"]], "MapCoord": [[189, "mapcoord"], [510, "mapcoord"]], "MapDataset": [[97, "mapdataset"], [376, "mapdataset"], [462, "mapdataset"]], "MapDatasetEventSampler": [[98, "mapdataseteventsampler"], [377, "mapdataseteventsampler"]], "MapDatasetMaker": [[163, "mapdatasetmaker"]], "MapDatasetMetaData": [[99, "mapdatasetmetadata"]], "MapDatasetOnOff": [[100, "mapdatasetonoff"], [376, "mapdatasetonoff"]], "MapPanelPlotter": [[351, "mappanelplotter"]], "Maps": [[190, "maps"], [373, "maps"], [466, "maps"], [484, "maps"]], "Maps operations": [[466, "maps-operations"]], "Mask dilation and erosion": [[467, "mask-dilation-and-erosion"]], "Mask maps": [[467, "mask-maps"]], "Mask modifications": [[467, "mask-modifications"]], "Mask some sky regions": [[467, "mask-some-sky-regions"]], "Masks for fitting": [[467, "masks-for-fitting"]], "Masks operations": [[467, "masks-operations"]], "Meetings": [[373, "meetings"]], "Metadata API": [[391, "metadata-api"]], "Metadata files": [[390, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[391, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[454, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[233, "meyercrabspectralmodel"]], "Minor changes": [[385, "minor-changes"]], "Mission elapsed times (MET)": [[562, "mission-elapsed-times-met"]], "Model": [[234, "model"]], "Model and dataset": [[463, "model-and-dataset"], [471, "model-and-dataset"]], "Model fit": [[447, "model-fit"]], "Model fitting": [[438, "model-fitting"], [482, "model-fitting"]], "Model gallery": [[512, "model-gallery"]], "Model lists and serialisation": [[469, "model-lists-and-serialisation"]], "ModelBase": [[235, "modelbase"]], "Modeling": [[373, "modeling"], [391, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[555, "modeling-and-fitting-dl4-to-dl5"]], "Modeling and fitting": [[445, "modeling-and-fitting"]], "Modelling": [[442, "modelling"], [468, "modelling"]], "Models": [[236, "models"], [469, "models"]], "Models with energy dependent morphology": [[469, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[469, "models-with-shared-parameter"]], "Modifying Data": [[466, "modifying-data"]], "Modifying model parameters": [[469, "modifying-model-parameters"]], "MooreProfile": [[24, "mooreprofile"]], "Morphological energy dependence estimation": [[448, "morphological-energy-dependence-estimation"]], "Motivation": [[392, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[446, "multi-instrument-joint-3d-and-1d-analysis"]], "NFWProfile": [[25, "nfwprofile"]], "N_JOBS_DEFAULT": [[311, "n-jobs-default"]], "Naima spectral model": [[534, "naima-spectral-model"]], "NaimaSpectralModel": [[237, "naimaspectralmodel"]], "New features": [[426, "new-features"], [429, "new-features"], [430, "new-features"]], "Next steps": [[473, "next-steps"], [475, "next-steps"], [476, "next-steps"]], "Night-wise LC estimation": [[455, "night-wise-lc-estimation"]], "Norm Spectral Models": [[469, "norm-spectral-models"]], "Notations": [[560, "notations"]], "Notes": [[559, "notes"]], "OGIPDatasetReader": [[101, "ogipdatasetreader"]], "OGIPDatasetWriter": [[102, "ogipdatasetwriter"]], "Object text repr, str and info": [[364, "object-text-repr-str-and-info"]], "Objective": [[442, "objective"], [443, "objective"], [449, "objective"], [450, "objective"], [470, "objective"]], "Objectives": [[374, "objectives"]], "Observation": [[84, "observation"]], "Observation duration and effective livetime": [[465, "observation-duration-and-effective-livetime"]], "Observation selection": [[438, "observation-selection"], [482, "observation-selection"]], "ObservationEventSampler": [[103, "observationeventsampler"]], "ObservationFilter": [[85, "observationfilter"]], "ObservationTable": [[86, "observationtable"]], "Observational clustering": [[470, "observational-clustering"]], "Observations": [[87, "observations"]], "ObservationsEventsSampler": [[88, "observationseventssampler"]], "Obtain the data to use": [[448, "obtain-the-data-to-use"]], "Obtain the observations": [[470, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[433, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[394, "old-example-data"]], "On-Off analysis": [[440, "on-off-analysis"]], "Opening the data": [[458, "opening-the-data"]], "OptimizeResult": [[203, "optimizeresult"]], "Optional dependencies": [[363, "optional-dependencies"], [381, "optional-dependencies"]], "Other folders": [[394, "other-folders"]], "Other packages": [[486, "other-packages"]], "Other repositories": [[394, "other-repositories"]], "Others": [[364, "others"], [394, "others"]], "Outlook": [[376, "outlook"], [378, "outlook"], [380, "outlook"], [381, "outlook"], [383, "outlook"], [384, "outlook"], [385, "outlook"], [388, "outlook"]], "Output in Jupyter notebook cells": [[364, "output-in-jupyter-notebook-cells"]], "Overview": [[505, "overview"], [507, "overview"], [508, "overview"]], "PIG 1 - PIG purpose and guidelines": [[369, "pig-1-pig-purpose-and-guidelines"]], "PIG 10 - Regions": [[378, "pig-10-regions"]], "PIG 11 - Light curves": [[379, "pig-11-light-curves"]], "PIG 12 - High level interface": [[380, "pig-12-high-level-interface"]], "PIG 13 - Gammapy dependencies and distribution": [[381, "pig-13-gammapy-dependencies-and-distribution"]], "PIG 14 - Uncertainty estimation": [[382, "pig-14-uncertainty-estimation"]], "PIG 16 - Gammapy package structure": [[383, "pig-16-gammapy-package-structure"]], "PIG 18 - Documentation": [[384, "pig-18-documentation"]], "PIG 19 - Gammapy package structure follow up": [[385, "pig-19-gammapy-package-structure-follow-up"]], "PIG 2 - Organization of low level analysis code": [[370, "pig-2-organization-of-low-level-analysis-code"]], "PIG 20 - Global Model API": [[386, "pig-20-global-model-api"]], "PIG 21 - Models improvements": [[387, "pig-21-models-improvements"]], "PIG 22 - Unified flux estimators API": [[388, "pig-22-unified-flux-estimators-api"]], "PIG 23 - Gammapy release cycle and version numbering": [[389, "pig-23-gammapy-release-cycle-and-version-numbering"]], "PIG 24 - Authorship policy": [[390, "pig-24-authorship-policy"]], "PIG 25 - Metadata container for Gammapy": [[391, "pig-25-metadata-container-for-gammapy"]], "PIG 26 - Model Priors API": [[392, "pig-26-model-priors-api"]], "PIG 3 - Plan for dropping Python 2.7 support": [[371, "pig-3-plan-for-dropping-python-2-7-support"]], "PIG 4 - Setup for tutorial notebooks and data": [[372, "pig-4-setup-for-tutorial-notebooks-and-data"]], "PIG 5 - Gammapy 1.0 roadmap": [[373, "pig-5-gammapy-1-0-roadmap"]], "PIG 6 - CTA observation handling": [[374, "pig-6-cta-observation-handling"]], "PIG 7 - Models": [[375, "pig-7-models"]], "PIG 8 - Datasets": [[376, "pig-8-datasets"]], "PIG 9 - Event sampling": [[377, "pig-9-event-sampling"]], "PIG review": [[369, "pig-review"]], "PIG status": [[369, "pig-status"]], "PIGs": [[368, "pigs"]], "POOL_KWARGS_DEFAULT": [[312, "pool-kwargs-default"]], "PSF": [[464, "psf"], [474, "psf"]], "PSF3D": [[150, "psf3d"]], "PSFKernel": [[151, "psfkernel"]], "PSFKing": [[152, "psfking"]], "PSFMap": [[153, "psfmap"]], "PWN": [[50, "pwn"]], "Package / API": [[478, "package-api"]], "Package and docs": [[394, "package-and-docs"]], "Package structure and dependencies": [[417, "package-structure-and-dependencies"]], "Paczynski1990": [[36, "paczynski1990"]], "Paczynski1990Velocity": [[37, "paczynski1990velocity"]], "Papers": [[373, "papers"]], "Parallel evaluation of datasets": [[376, "parallel-evaluation-of-datasets"]], "Parameter": [[204, "parameter"]], "ParameterEstimator": [[125, "parameterestimator"]], "Parameters": [[205, "parameters"]], "ParametricPSF": [[154, "parametricpsf"]], "Perform spectral model fitting": [[434, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[483, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[434, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[377, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[552, "phase-curve-temporal-model"]], "Phase-resolved map": [[458, "phase-resolved-map"]], "Phase-resolved spectrum": [[458, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[164, "phasebackgroundmaker"]], "Phasogram": [[458, "phasogram"]], "Piecewise  norm spectral model": [[535, "piecewise-norm-spectral-model"]], "Piecewise norm spatial model": [[518, "piecewise-norm-spatial-model"]], "PiecewiseNormSpatialModel": [[238, "piecewisenormspatialmodel"]], "PiecewiseNormSpectralModel": [[239, "piecewisenormspectralmodel"]], "Pixel coordinate convention": [[364, "pixel-coordinate-convention"]], "Plot": [[447, "plot"]], "Plot off regions": [[437, "plot-off-regions"]], "Plot resulting images": [[441, "plot-resulting-images"]], "Plot the fitted spectrum": [[483, "plot-the-fitted-spectrum"]], "Plotting Results": [[451, "plotting-results"]], "Plotting a RegionGeom": [[511, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[468, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[438, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[511, "plotting-the-map-content"]], "Plotting the results": [[448, "plotting-the-results"]], "Plotting the underlying region": [[511, "plotting-the-underlying-region"]], "Point Spread Function": [[504, "point-spread-function"]], "Point source sensitivity": [[433, "point-source-sensitivity"]], "Point spatial model": [[519, "point-spatial-model"]], "Point spread function": [[473, "point-spread-function"]], "PointSpatialModel": [[240, "pointspatialmodel"]], "PointingInfo": [[89, "pointinginfo"]], "PointingMode": [[90, "pointingmode"]], "Possible implementations": [[390, "possible-implementations"]], "Post release": [[393, "post-release"]], "Power Law Fit": [[435, "power-law-fit"]], "Power law 2 spectral model": [[537, "power-law-2-spectral-model"]], "Power law norm spectral model": [[538, "power-law-norm-spectral-model"]], "Power law spectral model": [[536, "power-law-spectral-model"]], "PowerLaw temporal model": [[550, "powerlaw-temporal-model"]], "PowerLaw2SpectralModel": [[241, "powerlaw2spectralmodel"]], "PowerLawNormSpectralModel": [[242, "powerlawnormspectralmodel"]], "PowerLawSpectralModel": [[243, "powerlawspectralmodel"]], "PowerLawTemporalModel": [[244, "powerlawtemporalmodel"]], "Predicted counts": [[494, "predicted-counts"]], "Prepare and run the event sampler": [[450, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[434, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[483, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[434, "prerequisites"], [435, "prerequisites"], [437, "prerequisites"], [438, "prerequisites"], [439, "prerequisites"], [440, "prerequisites"], [442, "prerequisites"], [446, "prerequisites"], [448, "prerequisites"], [449, "prerequisites"], [450, "prerequisites"], [451, "prerequisites"], [453, "prerequisites"], [454, "prerequisites"], [455, "prerequisites"], [456, "prerequisites"], [457, "prerequisites"], [463, "prerequisites"], [467, "prerequisites"], [468, "prerequisites"], [471, "prerequisites"], [482, "prerequisites"], [483, "prerequisites"]], "Pretty-print source information": [[461, "pretty-print-source-information"]], "PrimaryFlux": [[26, "primaryflux"]], "PriorParameter": [[206, "priorparameter"]], "PriorParameters": [[207, "priorparameters"]], "Priors": [[471, "priors"]], "Profile Estimation": [[451, "profile-estimation"]], "Profile Likelihood": [[561, "profile-likelihood"]], "Profiles": [[460, "profiles"]], "Project Management": [[373, "project-management"]], "Project setup": [[394, "project-setup"]], "Projects": [[373, "projects"]], "Proposal": [[372, "proposal"], [374, "proposal"], [375, "proposal"], [376, "proposal"], [377, "proposal"], [378, "proposal"], [379, "proposal"], [380, "proposal"], [382, "proposal"], [383, "proposal"], [384, "proposal"], [385, "proposal"], [386, "proposal"], [387, "proposal"]], "Proposal of API for flux estimate results": [[388, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[451, "proposed-approach"]], "Proposed approach": [[434, "proposed-approach"], [435, "proposed-approach"], [438, "proposed-approach"], [440, "proposed-approach"], [441, "proposed-approach"], [442, "proposed-approach"], [443, "proposed-approach"], [446, "proposed-approach"], [449, "proposed-approach"], [450, "proposed-approach"], [453, "proposed-approach"], [454, "proposed-approach"], [455, "proposed-approach"], [456, "proposed-approach"], [457, "proposed-approach"], [463, "proposed-approach"], [467, "proposed-approach"], [468, "proposed-approach"], [470, "proposed-approach"], [482, "proposed-approach"], [483, "proposed-approach"]], "Proposed class diagram": [[374, "proposed-class-diagram"]], "Proposed metadata classes": [[391, "proposed-metadata-classes"]], "Proposed solution": [[391, "proposed-solution"]], "Pull Requests": [[417, "pull-requests"], [418, "pull-requests"], [426, "pull-requests"], [427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"]], "Pull requests": [[403, "pull-requests"], [404, "pull-requests"], [405, "pull-requests"], [406, "pull-requests"], [407, "pull-requests"], [408, "pull-requests"], [409, "pull-requests"], [410, "pull-requests"], [411, "pull-requests"], [412, "pull-requests"], [413, "pull-requests"], [414, "pull-requests"], [415, "pull-requests"], [416, "pull-requests"], [419, "pull-requests"], [420, "pull-requests"], [421, "pull-requests"], [422, "pull-requests"], [423, "pull-requests"], [424, "pull-requests"], [425, "pull-requests"]], "Pulsar": [[51, "pulsar"]], "Pulsar Source Models": [[490, "pulsar-source-models"]], "Pulsar Wind Nebula Source Models": [[491, "pulsar-wind-nebula-source-models"]], "Pulsar analysis": [[458, "pulsar-analysis"]], "Python": [[400, "id2"]], "Python scripts": [[400, "python-scripts"]], "Python version support": [[364, "python-version-support"]], "RadMax2D": [[155, "radmax2d"]], "Read and Introduce Data": [[451, "read-and-introduce-data"]], "Read in input images": [[441, "read-in-input-images"]], "Read the datasets": [[468, "read-the-datasets"]], "Read the energy-dependent model": [[450, "read-the-energy-dependent-model"]], "Reading Maps": [[466, "reading-maps"]], "Reading and Writing": [[466, "reading-and-writing"]], "Reading and writing masks": [[467, "reading-and-writing-masks"]], "Reading different datasets": [[446, "reading-different-datasets"]], "RecoPSFMap": [[156, "recopsfmap"]], "Recommended Setup": [[396, "recommended-setup"], [398, "recommended-setup"]], "Reference": [[384, "reference"], [558, "reference"]], "References": [[557, "publications"]], "Reflected regions background": [[465, "reflected-regions-background"], [507, "reflected-regions-background"]], "ReflectedRegionsBackgroundMaker": [[165, "reflectedregionsbackgroundmaker"]], "ReflectedRegionsFinder": [[166, "reflectedregionsfinder"]], "Region arguments": [[378, "region-arguments"]], "RegionGeom": [[191, "regiongeom"], [511, "regiongeom"]], "RegionGeom and RegionNDMap": [[511, "regiongeom-and-regionndmap"]], "RegionGeom and coordinates": [[511, "regiongeom-and-coordinates"]], "RegionNDMap": [[192, "regionndmap"], [511, "regionndmap"]], "RegionsFinder": [[167, "regionsfinder"]], "Relation to WCS geometries": [[511, "relation-to-wcs-geometries"]], "Release notes": [[364, "release-notes"], [402, "release-notes"]], "Release preparation, feature freeze": [[389, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[389, "release-scheduling-and-lts"]], "Releases": [[373, "releases"], [390, "releases"], [394, "releases"]], "Releasing the final version of the major release": [[393, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[393, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[468, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[364, "removing-an-attribute"]], "Renaming an argument": [[364, "renaming-an-argument"]], "Required dependencies": [[363, "required-dependencies"], [381, "required-dependencies"]], "Requirements": [[391, "requirements"]], "Resampling datasets": [[462, "resampling-datasets"]], "Resolve gammapy.detect": [[385, "resolve-gammapy-detect"]], "Results": [[433, "results"]], "Results exploration": [[438, "results-exploration"]], "Ring background": [[465, "ring-background"], [508, "ring-background"]], "Ring background map": [[443, "ring-background-map"]], "RingBackgroundMaker": [[168, "ringbackgroundmaker"]], "Rotated regions": [[378, "rotated-regions"]], "Run Estimation": [[451, "run-estimation"]], "Run Estimator": [[448, "run-estimator"]], "Run data reduction chain": [[437, "run-data-reduction-chain"], [439, "run-data-reduction-chain"]], "Run the 1D data reduction": [[455, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[455, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[558, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[367, "running-tests-building-documentation"]], "Running the Data Reduction": [[438, "running-the-data-reduction"]], "Running the analysis": [[482, "running-the-analysis"]], "Running the estimation": [[438, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[438, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[438, "running-the-fit"]], "Running the light curve extraction in 1D": [[455, "running-the-light-curve-extraction-in-1d"]], "SNR": [[52, "snr"]], "SNRTrueloveMcKee": [[53, "snrtruelovemckee"]], "SPATIAL_MODEL_REGISTRY": [[245, "spatial-model-registry"]], "SPECTRAL_MODEL_REGISTRY": [[246, "spectral-model-registry"]], "Safe data range definition": [[506, "safe-data-range-definition"]], "Safe data range handling": [[465, "safe-data-range-handling"]], "SafeMaskMaker": [[169, "safemaskmaker"]], "Sample a source with energy-dependent temporal evolution": [[450, "sample-a-source-with-energy-dependent-temporal-evolution"]], "Sampling methods": [[377, "sampling-methods"]], "Sampling the source and background events": [[449, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[438, "save-dataset-to-disk"], [482, "save-dataset-to-disk"], [483, "save-dataset-to-disk"]], "ScaleSpectralModel": [[247, "scalespectralmodel"]], "ScaledRegularGridInterpolator": [[305, "scaledregulargridinterpolator"]], "Scripts": [[478, "scripts"]], "Select a catalog subset": [[461, "select-a-catalog-subset"]], "Select a source": [[461, "select-a-source"]], "Select observations": [[447, "select-observations"]], "Select the ON region": [[434, "select-the-on-region"]], "Select the data": [[434, "select-the-data"], [456, "select-the-data"]], "Selecting models contributing to a given region": [[468, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[468, "selecting-models-from-a-list"]], "SensitivityEstimator": [[126, "sensitivityestimator"]], "Serialisation": [[392, "serialisation"], [464, "serialisation"], [464, "id1"], [464, "id2"], [474, "serialisation"]], "Serialisation and I/O": [[451, "serialisation-and-i-o"]], "Serialisation of datasets": [[494, "serialisation-of-datasets"]], "Serialisation of the fit result": [[438, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[438, "serialisation-of-the-results"]], "Serialising models": [[468, "serialising-models"]], "Serialization": [[391, "serialization"]], "Setting fitting parameters": [[438, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[482, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[482, "setting-the-background-normalization-maker"]], "Setting the data to use": [[482, "setting-the-data-to-use"]], "Setting the exclusion mask": [[438, "setting-the-exclusion-mask"], [482, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[482, "setting-the-reduced-datasets-geometry"]], "Setup": [[433, "setup"], [434, "setup"], [435, "setup"], [437, "setup"], [438, "setup"], [439, "setup"], [440, "setup"], [441, "setup"], [442, "setup"], [443, "setup"], [447, "setup"], [448, "setup"], [449, "setup"], [450, "setup"], [451, "setup"], [454, "setup"], [455, "setup"], [456, "setup"], [457, "setup"], [460, "setup"], [462, "setup"], [465, "setup"], [466, "setup"], [467, "setup"], [468, "setup"], [469, "setup"], [473, "setup"], [474, "setup"], [482, "setup"], [483, "setup"], [484, "setup"]], "Shell spatial model": [[520, "shell-spatial-model"]], "Shell2 spatial model": [[521, "shell2-spatial-model"]], "Shell2SpatialModel": [[248, "shell2spatialmodel"]], "ShellSpatialModel": [[249, "shellspatialmodel"]], "Show images": [[447, "show-images"]], "Show the results tables": [[448, "show-the-results-tables"]], "Show various observation quantities": [[470, "show-various-observation-quantities"]], "SimplePulsar": [[54, "simplepulsar"]], "Simplify YAML Parameter Representation": [[387, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[387, "simplify-yaml-representation"]], "Simulate multiple event lists": [[449, "simulate-multiple-event-lists"]], "Simulating a light curve": [[457, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[457, "simulating-and-fitting-a-time-varying-source"]], "Simulation": [[453, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[376, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[440, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[551, "sine-temporal-model"]], "SineTemporalModel": [[250, "sinetemporalmodel"]], "Skip unit tests for some Astropy versions": [[364, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[378, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[510, "sky-maps-dl4"]], "SkyModel": [[251, "skymodel"], [469, "skymodel"]], "Smooth broken power law spectral model": [[539, "smooth-broken-power-law-spectral-model"]], "SmoothBrokenPowerLawSpectralModel": [[252, "smoothbrokenpowerlawspectralmodel"]], "Some terminology": [[374, "some-terminology"]], "Source Detection": [[447, "source-detection"]], "Source candidates": [[441, "source-candidates"]], "Source catalogs": [[461, "source-catalogs"], [484, "source-catalogs"], [493, "source-catalogs"]], "Source detection and significance maps": [[441, "source-detection-and-significance-maps"]], "Source information": [[461, "source-information"]], "Source models": [[461, "source-models"], [473, "source-models"]], "Source object": [[461, "source-object"]], "Source statistic": [[437, "source-statistic"]], "SourceCatalog": [[56, "sourcecatalog"]], "SourceCatalog1LHAASO": [[57, "sourcecatalog1lhaaso"]], "SourceCatalog2FHL": [[58, "sourcecatalog2fhl"]], "SourceCatalog2HWC": [[59, "sourcecatalog2hwc"]], "SourceCatalog3FGL": [[60, "sourcecatalog3fgl"]], "SourceCatalog3FHL": [[61, "sourcecatalog3fhl"]], "SourceCatalog3HWC": [[62, "sourcecatalog3hwc"]], "SourceCatalog4FGL": [[63, "sourcecatalog4fgl"]], "SourceCatalogGammaCat": [[64, "sourcecataloggammacat"]], "SourceCatalogHGPS": [[65, "sourcecataloghgps"]], "SourceCatalogLargeScaleHGPS": [[66, "sourcecataloglargescalehgps"]], "SourceCatalogObject": [[67, "sourcecatalogobject"]], "SourceCatalogObject1LHAASO": [[68, "sourcecatalogobject1lhaaso"]], "SourceCatalogObject2FHL": [[69, "sourcecatalogobject2fhl"]], "SourceCatalogObject2HWC": [[70, "sourcecatalogobject2hwc"]], "SourceCatalogObject3FGL": [[71, "sourcecatalogobject3fgl"]], "SourceCatalogObject3FHL": [[72, "sourcecatalogobject3fhl"]], "SourceCatalogObject3HWC": [[73, "sourcecatalogobject3hwc"]], "SourceCatalogObject4FGL": [[74, "sourcecatalogobject4fgl"]], "SourceCatalogObjectGammaCat": [[75, "sourcecatalogobjectgammacat"]], "SourceCatalogObjectHGPS": [[76, "sourcecatalogobjecthgps"]], "SourceCatalogObjectHGPSComponent": [[77, "sourcecatalogobjecthgpscomponent"]], "SourceIRFModel": [[375, "sourceirfmodel"]], "Spatial analysis": [[447, "spatial-analysis"]], "Spatial models": [[469, "spatial-models"], [512, "spatial-models"]], "SpatialIRFModel": [[375, "spatialirfmodel"]], "SpatialModel": [[253, "spatialmodel"]], "Special cases": [[561, "special-cases"]], "Specificities of the HGPS catalog": [[461, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[387, "spectral-absorption-model"]], "Spectral Norm Models": [[387, "spectral-norm-models"]], "Spectral analysis": [[437, "spectral-analysis"]], "Spectral analysis of extended sources": [[434, "spectral-analysis-of-extended-sources"]], "Spectral analysis with energy-dependent directional cuts": [[439, "spectral-analysis-with-energy-dependent-directional-cuts"]], "Spectral analysis with the HLI": [[438, "spectral-analysis-with-the-hli"]], "Spectral models": [[469, "spectral-models"], [512, "spectral-models"]], "Spectral models and flux points": [[484, "spectral-models-and-flux-points"]], "Spectral points": [[447, "spectral-points"]], "SpectralIRFModel": [[375, "spectralirfmodel"]], "SpectralModel": [[254, "spectralmodel"]], "Spectrum": [[447, "spectrum"]], "Spectrum dataset": [[465, "spectrum-dataset"]], "SpectrumDataset": [[104, "spectrumdataset"], [376, "spectrumdataset"], [462, "spectrumdataset"]], "SpectrumDatasetMaker": [[170, "spectrumdatasetmaker"]], "SpectrumDatasetOnOff": [[105, "spectrumdatasetonoff"], [376, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[365, "sphinx-gallery-extension"]], "Spiral arm models": [[488, "spiral-arm-models"]], "Stack observations": [[437, "stack-observations"]], "Stacked analysis": [[445, "stacked-analysis"]], "Stacking Multiple Datasets": [[494, "stacking-multiple-datasets"]], "Statistical utility functions": [[560, "statistical-utility-functions"]], "Status": [[374, "status"], [383, "status"]], "Storing the energy dispersion information as a function of sky position": [[502, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[379, "storing-the-results-and-further-studies"]], "Sub-packages": [[487, "sub-packages"]], "Suggestions": [[390, "suggestions"]], "Summary": [[403, "summary"], [404, "summary"], [405, "summary"], [406, "summary"], [407, "summary"], [408, "summary"], [409, "summary"], [410, "summary"], [411, "summary"], [412, "summary"], [413, "summary"], [414, "summary"], [415, "summary"], [416, "summary"], [417, "summary"], [418, "summary"], [419, "summary"], [420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [445, "summary"], [474, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[542, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr1-and-dr2"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[541, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr3"]], "Super exponential cutoff power law model used for 3FGL": [[540, "super-exponential-cutoff-power-law-model-used-for-3fgl"]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[255, "superexpcutoffpowerlaw3fglspectralmodel"]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[256, "superexpcutoffpowerlaw4fgldr3spectralmodel"]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[257, "superexpcutoffpowerlaw4fglspectralmodel"]], "Supernova Remnant Models": [[492, "supernova-remnant-models"]], "Support for Asymmetric IRFs": [[464, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[389, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[480, "survey-map-script"]], "Survey panel plots": [[563, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[258, "temporal-model-registry"]], "TS map estimation": [[441, "ts-map-estimation"]], "TSMapEstimator": [[127, "tsmapestimator"]], "Task List": [[376, "task-list"]], "Task list": [[375, "task-list"], [377, "task-list"], [378, "task-list"], [379, "task-list"], [380, "task-list"], [381, "task-list"]], "Template spatial model": [[522, "template-spatial-model"]], "Template spectral model": [[543, "template-spectral-model"]], "TemplateNDSpatialModel": [[259, "templatendspatialmodel"]], "TemplateNDSpectralModel": [[260, "templatendspectralmodel"]], "TemplateNPredModel": [[261, "templatenpredmodel"]], "TemplatePhaseCurveTemporalModel": [[262, "templatephasecurvetemporalmodel"]], "TemplateSpatialModel": [[263, "templatespatialmodel"]], "TemplateSpectralModel": [[264, "templatespectralmodel"]], "Temporal models": [[469, "temporal-models"], [512, "temporal-models"]], "TemporalModel": [[265, "temporalmodel"]], "Testing of plotting functions": [[364, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[370, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[448, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[394, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[394, "the-gammapy-extra-repository"]], "The index tables": [[495, "the-index-tables"]], "The reflected region finder": [[507, "the-reflected-region-finder"]], "The results for testing energy dependence": [[448, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[448, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[446, "the-setup"], [463, "the-setup"], [471, "the-setup"]], "Theta squared event distribution": [[476, "theta-squared-event-distribution"]], "Time": [[478, "time"]], "Time bin preparation": [[379, "time-bin-preparation"]], "Time bins": [[379, "time-bins"]], "Time differences": [[562, "time-differences"]], "Time format and scale": [[562, "time-format-and-scale"]], "Time handling in Gammapy": [[562, "time-handling-in-gammapy"]], "Time variable source using a lightcurve": [[449, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[193, "timemapaxis"], [466, "timemapaxis"]], "Timing Analysis": [[373, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[276, "timmerkonig-lightcurve-simulator"]], "Troubleshooting": [[399, "troubleshooting"], [558, "troubleshooting"]], "Tutorial overview": [[448, "tutorial-overview"], [473, "tutorial-overview"]], "Tutorials": [[384, "tutorials"], [478, "tutorials"]], "Tutorials Overview": [[396, "tutorials-overview"]], "Type validation": [[391, "type-validation"]], "Types of supported datasets": [[494, "types-of-supported-datasets"]], "Unification of flux estimators?": [[388, "unification-of-flux-estimators"]], "Unify calling interface for models": [[375, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[511, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[392, "use-cases"]], "Use cases / scenarios": [[374, "use-cases-scenarios"]], "User guide": [[499, "user-guide"]], "User perspective": [[371, "user-perspective"]], "Using Anaconda / Miniconda": [[397, "using-anaconda-miniconda"]], "Using Factory Methods": [[466, "using-factory-methods"]], "Using Gammapy": [[400, "using-gammapy"]], "Using Gammapy IRFs": [[464, "using-gammapy-irfs"]], "Using Mamba": [[397, "using-mamba"]], "Using YAML configuration files": [[482, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[438, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[438, "using-data-stored-into-your-computer"]], "Using gammapy.astro.source": [[489, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[493, "using-gammapy-catalog"]], "Using gammapy.data": [[495, "using-gammapy-data"]], "Using gammapy.datasets": [[494, "using-gammapy-datasets"], [497, "using-gammapy-datasets"]], "Using gammapy.estimators": [[496, "using-gammapy-estimators"]], "Using gammapy.irf": [[503, "using-gammapy-irf"]], "Using gammapy.makers": [[506, "using-gammapy-makers"]], "Using gammapy.maps": [[510, "using-gammapy-maps"]], "Using gammapy.modeling": [[555, "using-gammapy-modeling"]], "Using masks": [[462, "using-masks"]], "Using other package managers": [[397, "using-other-package-managers"]], "Using pip": [[397, "using-pip"]], "Using regions": [[507, "using-regions"]], "Using the reflected background estimator": [[507, "using-the-reflected-background-estimator"]], "Utility functions": [[562, "utility-functions"]], "ValleeSpiral": [[38, "valleespiral"]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[488, "velocity-distributions"]], "Venv Environments": [[395, "venv-environments"]], "Version 0.1": [[402, "version-0-1"]], "Version 0.10": [[402, "version-0-10"]], "Version 0.11": [[402, "version-0-11"]], "Version 0.12": [[402, "version-0-12"]], "Version 0.13": [[402, "version-0-13"]], "Version 0.14": [[402, "version-0-14"]], "Version 0.15": [[402, "version-0-15"]], "Version 0.16": [[402, "version-0-16"]], "Version 0.17": [[402, "version-0-17"]], "Version 0.18": [[402, "version-0-18"]], "Version 0.19": [[402, "version-0-19"]], "Version 0.2": [[402, "version-0-2"]], "Version 0.20": [[402, "version-0-20"]], "Version 0.20.1": [[402, "version-0-20-1"]], "Version 0.3": [[402, "version-0-3"]], "Version 0.4": [[402, "version-0-4"]], "Version 0.5": [[402, "version-0-5"]], "Version 0.6": [[402, "version-0-6"]], "Version 0.7": [[402, "version-0-7"]], "Version 0.8": [[402, "version-0-8"]], "Version 0.9": [[402, "version-0-9"]], "Version 1.0": [[402, "version-1-0"]], "Version 1.0.1": [[402, "version-1-0-1"]], "Version 1.0.2": [[402, "version-1-0-2"]], "Version 1.1": [[402, "version-1-1"]], "Version 1.2": [[402, "version-1-2"]], "Version numbering": [[389, "version-numbering"]], "Virtual Environments": [[395, "virtual-environments"]], "Visualing a RegionNDMap": [[511, "visualing-a-regionndmap"]], "Visualization": [[563, "visualization"]], "Visualizing and Plotting": [[466, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[559, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[560, "wstat-counts-statistic"]], "WStatCountsStatistic": [[277, "wstatcountsstatistic"]], "WcsGeom": [[194, "wcsgeom"]], "WcsMap": [[195, "wcsmap"]], "WcsNDMap": [[196, "wcsndmap"]], "What checks and conversions should I do for inputs?": [[364, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[369, "what-is-a-pig"]], "What is this?": [[367, "what-is-this"]], "What next?": [[435, "what-next"], [437, "what-next"], [441, "what-next"], [447, "what-next"], [455, "what-next"], [484, "what-next"]], "What others have": [[374, "what-others-have"]], "What we have": [[372, "what-we-have"], [380, "what-we-have"], [388, "what-we-have"]], "What\u2019s new?": [[404, "what-s-new"], [405, "what-s-new"], [406, "what-s-new"], [407, "what-s-new"], [408, "what-s-new"], [409, "what-s-new"], [410, "what-s-new"], [411, "what-s-new"], [412, "what-s-new"], [413, "what-s-new"], [414, "what-s-new"], [415, "what-s-new"], [417, "what-s-new"], [418, "what-s-new"], [420, "what-s-new"], [421, "what-s-new"], [422, "what-s-new"], [423, "what-s-new"], [424, "what-s-new"], [425, "what-s-new"]], "What\u2019s next": [[482, "whats-next"]], "What\u2019s next?": [[438, "whats-next"]], "Where should I import from?": [[364, "where-should-i-import-from"]], "WobbleRegionsFinder": [[171, "wobbleregionsfinder"]], "Working with event lists": [[495, "working-with-event-lists"]], "Write your own CLI": [[558, "write-your-own-cli"]], "Writing Maps": [[466, "writing-maps"]], "Writing a PIG": [[369, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[511, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[495, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[514, "yaml-representation"], [515, "yaml-representation"], [516, "yaml-representation"], [517, "yaml-representation"], [518, "yaml-representation"], [519, "yaml-representation"], [520, "yaml-representation"], [521, "yaml-representation"], [522, "yaml-representation"], [524, "yaml-representation"], [525, "yaml-representation"], [526, "yaml-representation"], [527, "yaml-representation"], [528, "yaml-representation"], [529, "yaml-representation"], [530, "yaml-representation"], [531, "yaml-representation"], [532, "yaml-representation"], [533, "yaml-representation"], [534, "yaml-representation"], [535, "yaml-representation"], [536, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [539, "yaml-representation"], [540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [550, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"]], "YusifovKucuk2004": [[39, "yusifovkucuk2004"]], "YusifovKucuk2004B": [[40, "yusifovkucuk2004b"]], "ZhaoProfile": [[27, "zhaoprofile"]], "absolute_time": [[345, "absolute-time"]], "add_colorbar": [[352, "add-colorbar"]], "add_observed_parameters": [[41, "add-observed-parameters"]], "add_pulsar_parameters": [[42, "add-pulsar-parameters"]], "add_pwn_parameters": [[43, "add-pwn-parameters"]], "add_snr_parameters": [[44, "add-snr-parameters"]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, "analysis-high-level-interface"]], "annotate_heatmap": [[353, "annotate-heatmap"]], "apply_edisp": [[106, "apply-edisp"], [110, "apply-edisp"]], "arbitrary type input and validation": [[391, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[502, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[501, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[501, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[502, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[500, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[339, "assert-quantity-allclose"]], "assert_skycoord_allclose": [[340, "assert-skycoord-allclose"]], "assert_time_allclose": [[341, "assert-time-allclose"]], "astro - Astrophysics": [[1, "astro-astrophysics"]], "cartesian": [[294, "cartesian"]], "cash": [[278, "cash"]], "cash_sum_cython": [[279, "cash-sum-cython"]], "catalog - Source catalogs": [[2, "catalog-source-catalogs"]], "check": [[11, "gammapy-check"]], "codemeta.json": [[390, "codemeta-json"]], "colormap_hess": [[354, "colormap-hess"]], "colormap_milagro": [[355, "colormap-milagro"]], "compound_region_to_regions": [[324, "compound-region-to-regions"]], "compute_chisq": [[280, "compute-chisq"]], "compute_flux_doubling": [[281, "compute-flux-doubling"]], "compute_fpp": [[282, "compute-fpp"]], "compute_fvar": [[283, "compute-fvar"]], "compute_lightcurve_doublingtime": [[128, "compute-lightcurve-doublingtime"]], "compute_lightcurve_fpp": [[129, "compute-lightcurve-fpp"]], "compute_lightcurve_fvar": [[130, "compute-lightcurve-fvar"]], "config": [[11, "gammapy-analysis-config"]], "containment_radius": [[197, "containment-radius"]], "containment_region": [[198, "containment-region"]], "create_cosmic_ray_spectral_model": [[266, "create-cosmic-ray-spectral-model"]], "create_crab_spectral_model": [[267, "create-crab-spectral-model"]], "create_fermi_isotropic_diffuse_model": [[268, "create-fermi-isotropic-diffuse-model"]], "create_map_dataset_from_observation": [[107, "create-map-dataset-from-observation"]], "create_map_dataset_geoms": [[108, "create-map-dataset-geoms"]], "cstat": [[284, "cstat"]], "data": [[391, "data"]], "data - DL3 data and observations": [[3, "data-dl3-data-and-observations"]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, "datasets-reduced-datasets"]], "docs.gammapy.org": [[394, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[316, "draw"]], "earth_location_from_dict": [[303, "earth-location-from-dict"]], "estimate_exposure_reco_energy": [[131, "estimate-exposure-reco-energy"]], "estimators - High level estimators": [[5, "estimators-high-level-estimators"]], "f_cash_root_cython": [[285, "f-cash-root-cython"]], "find_peaks": [[132, "find-peaks"]], "find_peaks_in_flux_map": [[133, "find-peaks-in-flux-map"]], "fov_to_sky": [[295, "fov-to-sky"]], "galactic": [[296, "galactic"]], "gamLike": [[486, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[394, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_significance_maps": [[134, "get-combined-significance-maps"]], "get_images_paths": [[329, "get-images-paths"]], "get_irfs_features": [[91, "get-irfs-features"]], "get_random_state": [[317, "get-random-state"]], "get_rebinned_axis": [[135, "get-rebinned-axis"]], "get_wstat_gof_terms": [[286, "get-wstat-gof-terms"]], "get_wstat_mu_bkg": [[287, "get-wstat-mu-bkg"]], "hierarchical_clustering": [[291, "hierarchical-clustering"]], "hstack_columns": [[334, "hstack-columns"]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[269, "integrate-spectrum"]], "interpolate_profile": [[306, "interpolate-profile"]], "interpolation_scale": [[307, "interpolation-scale"]], "irf - Instrument response functions": [[7, "irf-instrument-response-functions"]], "load_irf_dict_from_file": [[157, "load-irf-dict-from-file"]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, "make-base-catalog-galactic"]], "make_catalog_random_positions_cube": [[46, "make-catalog-random-positions-cube"]], "make_catalog_random_positions_sphere": [[47, "make-catalog-random-positions-sphere"]], "make_concentric_annulus_sky_regions": [[325, "make-concentric-annulus-sky-regions"]], "make_counts_rad_max": [[172, "make-counts-rad-max"]], "make_edisp_kernel_map": [[173, "make-edisp-kernel-map"]], "make_edisp_map": [[174, "make-edisp-map"]], "make_effective_livetime_map": [[175, "make-effective-livetime-map"]], "make_map_background_irf": [[176, "make-map-background-irf"]], "make_map_exposure_true_energy": [[177, "make-map-exposure-true-energy"]], "make_observation_time_map": [[178, "make-observation-time-map"]], "make_orthogonal_rectangle_sky_regions": [[326, "make-orthogonal-rectangle-sky-regions"]], "make_path": [[330, "make-path"]], "make_psf_map": [[179, "make-psf-map"]], "make_theta_squared_table": [[180, "make-theta-squared-table"]], "makers - Data reduction": [[8, "makers-data-reduction"]], "maps - Sky maps": [[9, "maps-sky-maps"]], "modeling - Models and fitting": [[10, "modeling-models-and-fitting"]], "motion_since_birth": [[297, "motion-since-birth"]], "mpl_plot_check": [[342, "mpl-plot-check"]], "multiprocessing_manager": [[313, "multiprocessing-manager"]], "norm_bounds_cython": [[288, "norm-bounds-cython"]], "normalize": [[318, "normalize"]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[92, "observatory-locations"]], "pdf": [[319, "pdf"]], "plot_contour_line": [[356, "plot-contour-line"]], "plot_distribution": [[357, "plot-distribution"]], "plot_heatmap": [[358, "plot-heatmap"]], "plot_map_rgb": [[359, "plot-map-rgb"]], "plot_npred_signal": [[360, "plot-npred-signal"]], "plot_spectrum_datasets_off_regions": [[361, "plot-spectrum-datasets-off-regions"]], "plot_theta_squared_table": [[362, "plot-theta-squared-table"]], "polar": [[298, "polar"]], "pydantic": [[391, "pydantic"]], "radial_distributions": [[48, "radial-distributions"]], "read_hermes_cube": [[270, "read-hermes-cube"], [272, "read-hermes-cube"]], "read_yaml": [[331, "read-yaml"]], "recursive_merge_dicts": [[332, "recursive-merge-dicts"]], "region_to_frame": [[327, "region-to-frame"]], "regions_to_compound_region": [[328, "regions-to-compound-region"]], "requires_data": [[343, "requires-data"]], "requires_dependency": [[344, "requires-dependency"]], "resample_energy_edges": [[136, "resample-energy-edges"]], "run": [[11, "gammapy-analysis-run"]], "run_multiprocessing": [[314, "run-multiprocessing"]], "sample_powerlaw": [[320, "sample-powerlaw"]], "sample_sphere": [[321, "sample-sphere"]], "sample_sphere_distance": [[322, "sample-sphere-distance"]], "sample_times": [[323, "sample-times"]], "scale_plot_flux": [[271, "scale-plot-flux"]], "scripts - Command line tools": [[11, "scripts-command-line-tools"]], "select_nested_models": [[273, "select-nested-models"]], "sky_to_fov": [[299, "sky-to-fov"]], "split_dataset": [[109, "split-dataset"], [111, "split-dataset"]], "standard_scaler": [[292, "standard-scaler"]], "standardise_unit": [[349, "standardise-unit"]], "stat_profile_ul_scipy": [[274, "stat-profile-ul-scipy"]], "stats - Statistics": [[12, "stats-statistics"]], "structure_function": [[289, "structure-function"]], "table_row_to_dict": [[335, "table-row-to-dict"]], "table_standardise_units_copy": [[336, "table-standardise-units-copy"]], "table_standardise_units_inplace": [[337, "table-standardise-units-inplace"]], "the base class": [[391, "the-base-class"]], "time_ref_from_dict": [[346, "time-ref-from-dict"]], "time_ref_to_dict": [[347, "time-ref-to-dict"]], "time_relative_to_ref": [[348, "time-relative-to-ref"]], "trapz_loglog": [[304, "trapz-loglog"]], "unit_from_fits_image_hdu": [[350, "unit-from-fits-image-hdu"]], "utils - Utilities": [[13, "utils-utilities"]], "velocity_distributions": [[49, "velocity-distributions"]], "velocity_glon_glat": [[300, "velocity-glon-glat"]], "visualization - Plotting features": [[14, "visualization-plotting-features"]], "write_yaml": [[333, "write-yaml"]], "wstat": [[290, "wstat"]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/Variability_estimation", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/Variability_estimation.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[557, "term-1D-Analysis", true]], "3d analysis": [[557, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[229, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[250, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[251, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[265, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[305, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[345, "gammapy.utils.time.absolute_time", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[352, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[557, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[117, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[119, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[146, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[89, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[353, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[106, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[110, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[189, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[112, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[339, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[340, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[341, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[204, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[206, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[160, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[169, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[163, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[170, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "axes (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[200, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[203, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[308, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[137, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[138, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[139, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[557, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[294, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[557, "term-Cash", true]], "cash() (in module gammapy.stats)": [[278, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[279, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[275, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[204, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[206, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[338, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[354, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[355, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.ColumnClass", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[324, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[209, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[280, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[275, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[277, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[275, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[277, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[281, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[282, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[283, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[128, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[129, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[130, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[275, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[277, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[201, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[112, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[115, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[123, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[125, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[126, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[212, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[211, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[212, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[213, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[197, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[198, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[251, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[85, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[115, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[123, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[189, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[229, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[235, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[250, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[251, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[261, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[265, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.parameter method)": [[204, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[206, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[199, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[209, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[212, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[213, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[214, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[222, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[225, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[235, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[236, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[247, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[254, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[265, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[201, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[200, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[84, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[183, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[189, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[191, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[195, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[234, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[251, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[266, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[267, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[268, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[107, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[108, "gammapy.datasets.create_map_dataset_geoms", false]], "crop() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[284, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[261, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[293, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[151, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[557, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[94, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[93, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[214, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[95, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[159, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[78, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[78, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[78, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[209, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[212, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[213, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[222, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[225, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[247, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[254, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[265, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[63, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[64, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.dict", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[215, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[557, "term-DL3", true]], "dl4": [[557, "term-DL4", true]], "dl5": [[557, "term-DL5", true]], "dl6": [[557, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[316, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[90, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[303, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[217, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[557, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[140, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[141, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[142, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[143, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[145, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[275, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[277, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[131, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[557, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[115, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[113, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[215, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[229, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[249, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[250, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[251, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[261, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[152, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[152, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[251, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[98, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[103, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[85, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[98, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[103, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[79, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[80, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[116, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[124, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[285, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[85, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[85, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[132, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[133, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[201, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[202, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[81, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[81, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[81, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[117, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[118, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[119, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[96, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[121, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[557, "term-FoV", true]], "fov background": [[557, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[295, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[146, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[160, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[205, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[207, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[229, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[235, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[250, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[251, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[261, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[265, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[187, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[96, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[214, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[215, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[229, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[234, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[235, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[236, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[240, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[249, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[250, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[251, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[253, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[254, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[261, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[265, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[205, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[207, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[78, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[78, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[199, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[78, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[81, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[151, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[183, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[184, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[190, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[192, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[195, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[196, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[137, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[138, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[139, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[147, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[148, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[154, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[150, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[152, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[181, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[183, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[190, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[191, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[195, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[83, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[86, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[215, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[229, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[235, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[240, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[249, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[250, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[251, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[253, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[254, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[261, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[265, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[215, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[240, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[249, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[253, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[215, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[191, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[151, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[79, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[87, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[183, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[185, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[186, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[195, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[199, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[205, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[207, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[137, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[138, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[139, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[147, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[154, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[150, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[152, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[185, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[187, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[187, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[214, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[236, "gammapy.modeling.models.Models.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[209, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[212, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[213, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[214, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[222, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[225, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[235, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[236, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[247, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[254, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[265, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[557, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[296, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[181, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[190, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[81, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[89, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[101, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[102, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[301, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[81, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[89, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[329, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[182, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[91, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[317, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[112, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[199, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[101, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[286, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[287, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.groups", false]], "gti": [[557, "term-GTI", true]], "gti (class in gammapy.data)": [[82, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[83, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[301, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[291, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[557, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[182, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[183, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[184, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[334, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[87, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[122, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[123, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[301, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[275, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[277, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[229, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[250, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[265, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[251, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[269, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[306, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[307, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[315, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[557, "term-IRF", true]], "irf (class in gammapy.irf)": [[147, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[149, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[148, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[213, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[225, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[265, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.is_norm", false]], "is_norm (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.is_norm", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[209, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[212, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[247, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[254, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[557, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[168, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[185, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[302, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[124, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[85, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[301, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[157, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "lon (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[325, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[164, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[164, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[172, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[173, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[174, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[175, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[176, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[177, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[168, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[178, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[326, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[330, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[179, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[180, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[557, "term-Maker", true]], "maker (class in gammapy.makers)": [[162, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[161, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[186, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[187, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[188, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[189, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[97, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[98, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[163, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[99, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[100, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[351, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[190, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[94, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[148, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "masked (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[200, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[205, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[207, "gammapy.modeling.PriorParameters.max", false]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[200, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[203, "gammapy.modeling.OptimizeResult.message", false]], "met": [[557, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[160, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[200, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[203, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[309, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[310, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[205, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[207, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[203, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[81, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[232, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[203, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[297, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[342, "gammapy.utils.testing.mpl_plot_check", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[313, "gammapy.utils.parallel.multiprocessing_manager", false]], "muoneff (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.muoneff", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[275, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[277, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[88, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[311, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[275, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[277, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[275, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[277, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[67, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[94, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[222, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[214, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[236, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[205, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[207, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[203, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[247, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[288, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_max (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_max", false]], "norm_max (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_max", false]], "norm_max (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_max", false]], "norm_min (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_min", false]], "norm_min (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_min", false]], "norm_min (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_min", false]], "norm_n_values (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_n_values", false]], "norm_parameters (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.parameters attribute)": [[205, "gammapy.modeling.Parameters.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameters attribute)": [[207, "gammapy.modeling.PriorParameters.norm_parameters", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_ul", false]], "norm_values (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_values", false]], "norm_values (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_values", false]], "norm_values (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_values", false]], "normalize() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[318, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[78, "gammapy.data.DataStore.obs_ids", false]], "obs_info (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.obs_info", false]], "observation (class in gammapy.data)": [[84, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[103, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[85, "gammapy.data.ObservationFilter", false]], "observations (class in gammapy.data)": [[87, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[88, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[86, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[92, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[101, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[102, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[201, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[203, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[275, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[277, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[88, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[204, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[205, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[209, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[212, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[213, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[214, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[222, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[225, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[235, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[236, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[247, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[254, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[265, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[203, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[214, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[236, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[154, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[301, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[319, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[164, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[209, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[212, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[247, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[254, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[193, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[229, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[250, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[265, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[351, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[356, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[199, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[357, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[358, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[359, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[360, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[351, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[361, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[362, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[90, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[89, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[90, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[298, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[312, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[67, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[63, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[64, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[214, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[236, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[205, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[207, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[204, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[206, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[206, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[207, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.projection", false]], "psf": [[557, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[150, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[151, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[151, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[152, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[153, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[146, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[155, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[79, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[81, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[83, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[84, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[86, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[89, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[95, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[96, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[101, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[137, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[138, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[139, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[147, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[148, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[154, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[150, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[151, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[152, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[183, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[184, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[190, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[195, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[196, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[214, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[236, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[270, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[272, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[331, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[229, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[235, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[250, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[251, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[261, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[265, "gammapy.modeling.models.TemporalModel.reassign", false]], "reco energy": [[557, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[156, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[332, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[213, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[225, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[265, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[557, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[166, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[327, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[191, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[192, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[328, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[167, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[148, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[343, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[344, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.reverse", false]], "ring background": [[557, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[168, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[557, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[67, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[63, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[64, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[88, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[115, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[123, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[162, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[164, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[166, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[167, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[168, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[171, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[201, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[338, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[314, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[169, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[315, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[315, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[320, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[321, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[322, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[229, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[250, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[265, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[323, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[271, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[305, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[273, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[112, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[115, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[123, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[125, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[126, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[126, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[199, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[225, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[88, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[299, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[261, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[63, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[64, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[222, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[245, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[222, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[246, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[104, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[170, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[105, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[109, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[111, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[275, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[277, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[261, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[557, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[292, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[349, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[201, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[275, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[277, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[275, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[277, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[201, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[274, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[201, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[289, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[200, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[203, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[275, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[277, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[225, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[335, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[336, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[337, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[63, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[64, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[94, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[101, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[102, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[112, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[115, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[123, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[125, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[126, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[148, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[160, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[162, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[163, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[164, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[168, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[169, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[170, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[209, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[212, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[213, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[222, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[225, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[247, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "target_radec (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[258, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[346, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[347, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[348, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[229, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[250, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[265, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[193, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[276, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[200, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.fitresult method)": [[202, "gammapy.modeling.FitResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[229, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[235, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[250, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[251, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[261, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[265, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[203, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[204, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[206, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[81, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[189, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[63, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[64, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.fitresult method)": [[202, "gammapy.modeling.FitResult.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[203, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[202, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[203, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[304, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[557, "term-True-Energy", true]], "ts": [[557, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[275, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[277, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[127, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[209, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[212, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[213, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[215, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[222, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[224, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[225, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[229, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[235, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[237, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[240, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[247, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[248, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[250, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[251, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[253, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[254, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[261, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[265, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[205, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[207, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[208, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[209, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[210, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[211, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[212, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[213, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[215, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[216, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[218, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[219, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[221, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[222, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[223, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[224, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[225, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[226, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[229, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[230, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[231, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[233, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[235, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[237, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[238, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[239, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[240, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[241, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[242, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[243, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[244, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[247, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[248, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[249, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[250, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[251, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[252, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[253, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[254, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[255, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[256, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[261, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[264, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[265, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[205, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[207, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "union() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[205, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[207, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[350, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[204, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[206, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[211, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[204, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[205, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[206, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[207, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[300, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[214, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[236, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[194, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[195, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[196, "gammapy.maps.WcsNDMap", false]], "width (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[249, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[171, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.write", false]], "write() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[202, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[228, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[259, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[260, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[261, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[262, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[263, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[214, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[236, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[333, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[557, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[290, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[277, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog3FGL"], [61, 1, 1, "", "SourceCatalog3FHL"], [62, 1, 1, "", "SourceCatalog3HWC"], [63, 1, 1, "", "SourceCatalog4FGL"], [64, 1, 1, "", "SourceCatalogGammaCat"], [65, 1, 1, "", "SourceCatalogHGPS"], [66, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [67, 1, 1, "", "SourceCatalogObject"], [68, 1, 1, "", "SourceCatalogObject1LHAASO"], [69, 1, 1, "", "SourceCatalogObject2FHL"], [70, 1, 1, "", "SourceCatalogObject2HWC"], [71, 1, 1, "", "SourceCatalogObject3FGL"], [72, 1, 1, "", "SourceCatalogObject3FHL"], [73, 1, 1, "", "SourceCatalogObject3HWC"], [74, 1, 1, "", "SourceCatalogObject4FGL"], [75, 1, 1, "", "SourceCatalogObjectGammaCat"], [76, 1, 1, "", "SourceCatalogObjectHGPS"], [77, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[65, 2, 1, "", "description"], [65, 3, 1, "", "gaussian_component"], [65, 2, 1, "", "large_scale_component"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "table_associations"], [65, 2, 1, "", "table_components"], [65, 2, 1, "", "table_identifications"], [65, 2, 1, "", "table_large_scale_component"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[66, 3, 1, "", "evaluate"], [66, 3, 1, "", "peak_brightness"], [66, 3, 1, "", "peak_brightness_error"], [66, 3, 1, "", "peak_latitude"], [66, 3, 1, "", "peak_latitude_error"], [66, 3, 1, "", "width"], [66, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[67, 2, 1, "", "name"], [67, 2, 1, "", "position"], [67, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[68, 2, 1, "", "name"], [68, 2, 1, "", "position"], [68, 2, 1, "", "row_index"], [68, 3, 1, "", "sky_model"], [68, 3, 1, "", "spatial_model"], [68, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[69, 2, 1, "", "asso"], [69, 2, 1, "", "energy_range"], [69, 2, 1, "", "flux_points"], [69, 2, 1, "", "flux_points_meta"], [69, 2, 1, "", "flux_points_table"], [69, 3, 1, "", "info"], [69, 2, 1, "", "is_pointlike"], [69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"], [69, 3, 1, "", "sky_model"], [69, 3, 1, "", "spatial_model"], [69, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[70, 3, 1, "", "info"], [70, 2, 1, "", "n_models"], [70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 3, 1, "", "lightcurve"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[72, 2, 1, "", "asso"], [72, 2, 1, "", "energy_range"], [72, 2, 1, "", "flux_points"], [72, 2, 1, "", "flux_points_meta"], [72, 2, 1, "", "flux_points_table"], [72, 3, 1, "", "info"], [72, 2, 1, "", "is_pointlike"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[73, 3, 1, "", "info"], [73, 2, 1, "", "is_pointlike"], [73, 2, 1, "", "n_models"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[76, 3, 1, "", "components_models"], [76, 2, 1, "", "energy_range"], [76, 2, 1, "", "flux_points"], [76, 2, 1, "", "flux_points_table"], [76, 3, 1, "", "info"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "spatial_model"]], "gammapy.data": [[78, 1, 1, "", "DataStore"], [79, 1, 1, "", "EventList"], [80, 1, 1, "", "EventListMetaData"], [81, 1, 1, "", "FixedPointingInfo"], [82, 1, 1, "", "GTI"], [83, 1, 1, "", "HDUIndexTable"], [84, 1, 1, "", "Observation"], [85, 1, 1, "", "ObservationFilter"], [86, 1, 1, "", "ObservationTable"], [87, 1, 1, "", "Observations"], [88, 1, 1, "", "ObservationsEventsSampler"], [89, 1, 1, "", "PointingInfo"], [90, 1, 1, "", "PointingMode"], [91, 4, 1, "", "get_irfs_features"], [92, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[78, 2, 1, "", "DEFAULT_HDU_TABLE"], [78, 2, 1, "", "DEFAULT_OBS_TABLE"], [78, 3, 1, "", "check"], [78, 3, 1, "", "copy_obs"], [78, 3, 1, "", "from_dir"], [78, 3, 1, "", "from_events_files"], [78, 3, 1, "", "from_file"], [78, 3, 1, "", "get_observations"], [78, 3, 1, "", "info"], [78, 3, 1, "", "obs"], [78, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[79, 2, 1, "", "altaz"], [79, 2, 1, "", "altaz_frame"], [79, 2, 1, "", "altaz_from_table"], [79, 3, 1, "", "check"], [79, 3, 1, "", "copy"], [79, 2, 1, "", "energy"], [79, 3, 1, "", "from_stack"], [79, 2, 1, "", "galactic"], [79, 2, 1, "", "galactic_median"], [79, 2, 1, "", "is_pointed_observation"], [79, 3, 1, "", "map_coord"], [79, 2, 1, "", "observation_dead_time_fraction"], [79, 2, 1, "", "observation_live_time_duration"], [79, 2, 1, "", "observation_time_duration"], [79, 2, 1, "", "observation_time_start"], [79, 2, 1, "", "observation_time_stop"], [79, 2, 1, "", "observatory_earth_location"], [79, 2, 1, "", "offset"], [79, 2, 1, "", "offset_from_median"], [79, 3, 1, "", "peek"], [79, 3, 1, "", "plot_energy"], [79, 3, 1, "", "plot_energy_offset"], [79, 3, 1, "", "plot_image"], [79, 3, 1, "", "plot_offset2_distribution"], [79, 3, 1, "", "plot_time"], [79, 2, 1, "", "pointing_radec"], [79, 2, 1, "", "radec"], [79, 3, 1, "", "read"], [79, 3, 1, "", "select_energy"], [79, 3, 1, "", "select_mask"], [79, 3, 1, "", "select_offset"], [79, 3, 1, "", "select_parameter"], [79, 3, 1, "", "select_rad_max"], [79, 3, 1, "", "select_region"], [79, 3, 1, "", "select_row_subset"], [79, 3, 1, "", "select_time"], [79, 3, 1, "", "stack"], [79, 2, 1, "", "time"], [79, 2, 1, "", "time_ref"], [79, 3, 1, "", "to_table_hdu"], [79, 3, 1, "", "write"]], "gammapy.data.EventListMetaData": [[80, 3, 1, "", "construct"], [80, 3, 1, "", "copy"], [80, 3, 1, "", "dict"], [80, 3, 1, "", "from_header"], [80, 3, 1, "", "from_orm"], [80, 3, 1, "", "json"], [80, 2, 1, "", "model_computed_fields"], [80, 2, 1, "", "model_config"], [80, 3, 1, "", "model_construct"], [80, 3, 1, "", "model_copy"], [80, 3, 1, "", "model_dump"], [80, 3, 1, "", "model_dump_json"], [80, 2, 1, "", "model_extra"], [80, 2, 1, "", "model_fields"], [80, 2, 1, "", "model_fields_set"], [80, 3, 1, "", "model_json_schema"], [80, 3, 1, "", "model_parametrized_name"], [80, 3, 1, "", "model_post_init"], [80, 3, 1, "", "model_rebuild"], [80, 3, 1, "", "model_validate"], [80, 3, 1, "", "model_validate_json"], [80, 3, 1, "", "model_validate_strings"], [80, 3, 1, "", "parse_file"], [80, 3, 1, "", "parse_obj"], [80, 3, 1, "", "parse_raw"], [80, 3, 1, "", "schema"], [80, 3, 1, "", "schema_json"], [80, 2, 1, "", "tag"], [80, 3, 1, "", "to_header"], [80, 3, 1, "", "to_yaml"], [80, 3, 1, "", "update_forward_refs"], [80, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[81, 2, 1, "", "fixed_altaz"], [81, 2, 1, "", "fixed_icrs"], [81, 3, 1, "", "from_fits_header"], [81, 3, 1, "", "get_altaz"], [81, 3, 1, "", "get_icrs"], [81, 2, 1, "", "mode"], [81, 3, 1, "", "read"], [81, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[82, 3, 1, "", "copy"], [82, 3, 1, "", "create"], [82, 3, 1, "", "delete_interval"], [82, 3, 1, "", "from_stack"], [82, 3, 1, "", "from_table_hdu"], [82, 3, 1, "", "from_time_intervals"], [82, 3, 1, "", "group_table"], [82, 2, 1, "", "met_start"], [82, 2, 1, "", "met_stop"], [82, 3, 1, "", "read"], [82, 3, 1, "", "select_time"], [82, 3, 1, "", "stack"], [82, 2, 1, "", "time_delta"], [82, 2, 1, "", "time_intervals"], [82, 2, 1, "", "time_ref"], [82, 2, 1, "", "time_start"], [82, 2, 1, "", "time_stop"], [82, 2, 1, "", "time_sum"], [82, 3, 1, "", "to_table_hdu"], [82, 3, 1, "", "union"], [82, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[83, 2, 1, "", "ColumnClass"], [83, 2, 1, "", "VALID_HDU_CLASS"], [83, 2, 1, "", "VALID_HDU_TYPE"], [83, 3, 1, "", "add_column"], [83, 3, 1, "", "add_columns"], [83, 3, 1, "", "add_index"], [83, 3, 1, "", "add_row"], [83, 3, 1, "", "argsort"], [83, 3, 1, "", "as_array"], [83, 2, 1, "", "base_dir"], [83, 2, 1, "", "colnames"], [83, 3, 1, "", "convert_bytestring_to_unicode"], [83, 3, 1, "", "convert_unicode_to_bytestring"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "dtype"], [83, 3, 1, "", "field"], [83, 3, 1, "", "filled"], [83, 3, 1, "", "from_pandas"], [83, 3, 1, "", "group_by"], [83, 2, 1, "", "groups"], [83, 2, 1, "", "has_masked_columns"], [83, 2, 1, "", "has_masked_values"], [83, 2, 1, "", "has_mixin_columns"], [83, 2, 1, "", "hdu_class_unique"], [83, 3, 1, "", "hdu_location"], [83, 2, 1, "", "hdu_type_unique"], [83, 2, 1, "", "iloc"], [83, 3, 1, "", "index_column"], [83, 3, 1, "", "index_mode"], [83, 2, 1, "", "indices"], [83, 2, 1, "", "info"], [83, 3, 1, "", "insert_row"], [83, 3, 1, "", "items"], [83, 3, 1, "", "itercols"], [83, 3, 1, "", "iterrows"], [83, 3, 1, "", "keep_columns"], [83, 3, 1, "", "keys"], [83, 2, 1, "", "loc"], [83, 2, 1, "", "loc_indices"], [83, 3, 1, "", "location_info"], [83, 2, 1, "", "mask"], [83, 2, 1, "", "masked"], [83, 2, 1, "", "meta"], [83, 3, 1, "", "more"], [83, 2, 1, "", "obs_id_unique"], [83, 3, 1, "", "pformat"], [83, 3, 1, "", "pformat_all"], [83, 3, 1, "", "pprint"], [83, 3, 1, "", "pprint_all"], [83, 2, 1, "", "pprint_exclude_names"], [83, 2, 1, "", "pprint_include_names"], [83, 3, 1, "", "read"], [83, 3, 1, "", "remove_column"], [83, 3, 1, "", "remove_columns"], [83, 3, 1, "", "remove_indices"], [83, 3, 1, "", "remove_row"], [83, 3, 1, "", "remove_rows"], [83, 3, 1, "", "rename_column"], [83, 3, 1, "", "rename_columns"], [83, 3, 1, "", "replace_column"], [83, 3, 1, "", "reverse"], [83, 3, 1, "", "round"], [83, 3, 1, "", "row_idx"], [83, 3, 1, "", "show_in_browser"], [83, 3, 1, "", "show_in_notebook"], [83, 3, 1, "", "sort"], [83, 3, 1, "", "summary"], [83, 3, 1, "", "to_pandas"], [83, 3, 1, "", "update"], [83, 3, 1, "", "values"], [83, 3, 1, "", "values_equal"], [83, 2, 1, "", "write"]], "gammapy.data.Observation": [[84, 2, 1, "", "aeff"], [84, 2, 1, "", "available_hdus"], [84, 2, 1, "", "available_irfs"], [84, 2, 1, "", "bkg"], [84, 3, 1, "", "check"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "create"], [84, 2, 1, "", "edisp"], [84, 2, 1, "", "events"], [84, 3, 1, "", "get_pointing_altaz"], [84, 3, 1, "", "get_pointing_icrs"], [84, 2, 1, "", "gti"], [84, 2, 1, "", "meta"], [84, 2, 1, "", "muoneff"], [84, 2, 1, "", "obs_info"], [84, 2, 1, "", "observation_dead_time_fraction"], [84, 2, 1, "", "observation_live_time_duration"], [84, 2, 1, "", "observation_time_duration"], [84, 2, 1, "", "observatory_earth_location"], [84, 3, 1, "", "peek"], [84, 2, 1, "", "pointing"], [84, 2, 1, "", "psf"], [84, 2, 1, "", "rad_max"], [84, 3, 1, "", "read"], [84, 3, 1, "", "select_time"], [84, 2, 1, "", "target_radec"], [84, 2, 1, "", "tmid"], [84, 2, 1, "", "tstart"], [84, 2, 1, "", "tstop"], [84, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[85, 2, 1, "", "EVENT_FILTER_TYPES"], [85, 3, 1, "", "copy"], [85, 3, 1, "", "filter_events"], [85, 3, 1, "", "filter_gti"], [85, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationTable": [[86, 2, 1, "", "ColumnClass"], [86, 3, 1, "", "add_column"], [86, 3, 1, "", "add_columns"], [86, 3, 1, "", "add_index"], [86, 3, 1, "", "add_row"], [86, 3, 1, "", "argsort"], [86, 3, 1, "", "as_array"], [86, 2, 1, "", "colnames"], [86, 3, 1, "", "convert_bytestring_to_unicode"], [86, 3, 1, "", "convert_unicode_to_bytestring"], [86, 3, 1, "", "copy"], [86, 2, 1, "", "dtype"], [86, 3, 1, "", "field"], [86, 3, 1, "", "filled"], [86, 3, 1, "", "from_pandas"], [86, 3, 1, "", "group_by"], [86, 2, 1, "", "groups"], [86, 2, 1, "", "has_masked_columns"], [86, 2, 1, "", "has_masked_values"], [86, 2, 1, "", "has_mixin_columns"], [86, 2, 1, "", "iloc"], [86, 3, 1, "", "index_column"], [86, 3, 1, "", "index_mode"], [86, 2, 1, "", "indices"], [86, 2, 1, "", "info"], [86, 3, 1, "", "insert_row"], [86, 3, 1, "", "items"], [86, 3, 1, "", "itercols"], [86, 3, 1, "", "iterrows"], [86, 3, 1, "", "keep_columns"], [86, 3, 1, "", "keys"], [86, 2, 1, "", "loc"], [86, 2, 1, "", "loc_indices"], [86, 2, 1, "", "mask"], [86, 2, 1, "", "masked"], [86, 2, 1, "", "meta"], [86, 3, 1, "", "more"], [86, 3, 1, "", "pformat"], [86, 3, 1, "", "pformat_all"], [86, 2, 1, "", "pointing_galactic"], [86, 2, 1, "", "pointing_radec"], [86, 3, 1, "", "pprint"], [86, 3, 1, "", "pprint_all"], [86, 2, 1, "", "pprint_exclude_names"], [86, 2, 1, "", "pprint_include_names"], [86, 3, 1, "", "read"], [86, 3, 1, "", "remove_column"], [86, 3, 1, "", "remove_columns"], [86, 3, 1, "", "remove_indices"], [86, 3, 1, "", "remove_row"], [86, 3, 1, "", "remove_rows"], [86, 3, 1, "", "rename_column"], [86, 3, 1, "", "rename_columns"], [86, 3, 1, "", "replace_column"], [86, 3, 1, "", "reverse"], [86, 3, 1, "", "round"], [86, 3, 1, "", "select_obs_id"], [86, 3, 1, "", "select_observations"], [86, 3, 1, "", "select_range"], [86, 3, 1, "", "select_sky_circle"], [86, 3, 1, "", "select_time_range"], [86, 3, 1, "", "show_in_browser"], [86, 3, 1, "", "show_in_notebook"], [86, 3, 1, "", "sort"], [86, 3, 1, "", "summary"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 3, 1, "", "to_pandas"], [86, 3, 1, "", "update"], [86, 3, 1, "", "values"], [86, 3, 1, "", "values_equal"], [86, 2, 1, "", "write"]], "gammapy.data.Observations": [[87, 3, 1, "", "append"], [87, 3, 1, "", "clear"], [87, 3, 1, "", "count"], [87, 3, 1, "", "extend"], [87, 3, 1, "", "from_stack"], [87, 3, 1, "", "group_by_label"], [87, 2, 1, "", "ids"], [87, 3, 1, "", "in_memory_generator"], [87, 3, 1, "", "index"], [87, 3, 1, "", "insert"], [87, 3, 1, "", "pop"], [87, 3, 1, "", "remove"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[88, 2, 1, "", "n_jobs"], [88, 2, 1, "", "parallel_backend"], [88, 3, 1, "", "run"], [88, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[89, 2, 1, "", "altaz"], [89, 2, 1, "", "altaz_frame"], [89, 2, 1, "", "altaz_from_table"], [89, 3, 1, "", "altaz_interpolate"], [89, 2, 1, "", "duration"], [89, 3, 1, "", "get_altaz"], [89, 3, 1, "", "get_icrs"], [89, 2, 1, "", "location"], [89, 2, 1, "", "radec"], [89, 3, 1, "", "read"], [89, 2, 1, "", "time"], [89, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[90, 2, 1, "", "DRIFT"], [90, 2, 1, "", "POINTING"]], "gammapy.datasets": [[93, 5, 1, "", "DATASET_REGISTRY"], [94, 1, 1, "", "Dataset"], [95, 1, 1, "", "Datasets"], [96, 1, 1, "", "FluxPointsDataset"], [97, 1, 1, "", "MapDataset"], [98, 1, 1, "", "MapDatasetEventSampler"], [99, 1, 1, "", "MapDatasetMetaData"], [100, 1, 1, "", "MapDatasetOnOff"], [101, 1, 1, "", "OGIPDatasetReader"], [102, 1, 1, "", "OGIPDatasetWriter"], [103, 1, 1, "", "ObservationEventSampler"], [104, 1, 1, "", "SpectrumDataset"], [105, 1, 1, "", "SpectrumDatasetOnOff"], [106, 4, 1, "", "apply_edisp"], [107, 4, 1, "", "create_map_dataset_from_observation"], [108, 4, 1, "", "create_map_dataset_geoms"], [109, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[94, 3, 1, "", "copy"], [94, 2, 1, "", "mask"], [94, 2, 1, "", "name"], [94, 3, 1, "", "stat_array"], [94, 3, 1, "", "stat_sum"], [94, 2, 1, "", "tag"], [94, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[95, 3, 1, "", "append"], [95, 3, 1, "", "clear"], [95, 2, 1, "", "contributes_to_stat"], [95, 3, 1, "", "copy"], [95, 3, 1, "", "count"], [95, 2, 1, "", "energy_axes_are_aligned"], [95, 2, 1, "", "energy_ranges"], [95, 3, 1, "", "extend"], [95, 2, 1, "", "gti"], [95, 3, 1, "", "index"], [95, 3, 1, "", "info_table"], [95, 3, 1, "", "insert"], [95, 2, 1, "", "is_all_same_energy_shape"], [95, 2, 1, "", "is_all_same_shape"], [95, 2, 1, "", "is_all_same_type"], [95, 2, 1, "", "meta_table"], [95, 2, 1, "", "models"], [95, 2, 1, "", "names"], [95, 2, 1, "", "parameters"], [95, 3, 1, "", "pop"], [95, 3, 1, "", "read"], [95, 3, 1, "", "remove"], [95, 3, 1, "", "reverse"], [95, 3, 1, "", "select_time"], [95, 3, 1, "", "slice_by_energy"], [95, 3, 1, "", "stack_reduce"], [95, 3, 1, "", "stat_sum"], [95, 3, 1, "", "to_spectrum_datasets"], [95, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[96, 3, 1, "", "copy"], [96, 3, 1, "", "data_shape"], [96, 3, 1, "", "flux_pred"], [96, 3, 1, "", "from_dict"], [96, 2, 1, "", "gti"], [96, 2, 1, "", "mask"], [96, 2, 1, "", "models"], [96, 2, 1, "", "name"], [96, 3, 1, "", "plot_fit"], [96, 3, 1, "", "plot_residuals"], [96, 3, 1, "", "plot_spectrum"], [96, 3, 1, "", "read"], [96, 3, 1, "", "residuals"], [96, 3, 1, "", "stat_array"], [96, 3, 1, "", "stat_sum"], [96, 2, 1, "", "stat_type"], [96, 2, 1, "", "tag"], [96, 3, 1, "", "to_dict"], [96, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[97, 2, 1, "", "background"], [97, 2, 1, "", "background_model"], [97, 3, 1, "", "copy"], [97, 2, 1, "", "counts"], [97, 3, 1, "", "create"], [97, 3, 1, "", "cutout"], [97, 2, 1, "", "data_shape"], [97, 3, 1, "", "downsample"], [97, 2, 1, "", "edisp"], [97, 2, 1, "", "energy_range"], [97, 2, 1, "", "energy_range_fit"], [97, 2, 1, "", "energy_range_safe"], [97, 2, 1, "", "energy_range_total"], [97, 2, 1, "", "evaluators"], [97, 2, 1, "", "excess"], [97, 2, 1, "", "exposure"], [97, 3, 1, "", "fake"], [97, 3, 1, "", "from_dict"], [97, 3, 1, "", "from_geoms"], [97, 3, 1, "", "from_hdulist"], [97, 2, 1, "", "geoms"], [97, 2, 1, "", "gti"], [97, 3, 1, "", "info_dict"], [97, 2, 1, "", "mask"], [97, 2, 1, "", "mask_fit"], [97, 2, 1, "", "mask_fit_image"], [97, 2, 1, "", "mask_image"], [97, 2, 1, "", "mask_safe"], [97, 2, 1, "", "mask_safe_edisp"], [97, 2, 1, "", "mask_safe_image"], [97, 2, 1, "", "mask_safe_psf"], [97, 2, 1, "", "meta"], [97, 2, 1, "", "meta_table"], [97, 2, 1, "", "models"], [97, 2, 1, "", "name"], [97, 3, 1, "", "npred"], [97, 3, 1, "", "npred_background"], [97, 3, 1, "", "npred_signal"], [97, 3, 1, "", "pad"], [97, 3, 1, "", "peek"], [97, 3, 1, "", "plot_residuals"], [97, 3, 1, "", "plot_residuals_spatial"], [97, 3, 1, "", "plot_residuals_spectral"], [97, 2, 1, "", "psf"], [97, 3, 1, "", "read"], [97, 3, 1, "", "resample_energy_axis"], [97, 3, 1, "", "reset_data_cache"], [97, 3, 1, "", "residuals"], [97, 3, 1, "", "slice_by_energy"], [97, 3, 1, "", "slice_by_idx"], [97, 3, 1, "", "stack"], [97, 3, 1, "", "stat_array"], [97, 3, 1, "", "stat_sum"], [97, 2, 1, "", "stat_type"], [97, 2, 1, "", "tag"], [97, 3, 1, "", "to_dict"], [97, 3, 1, "", "to_hdulist"], [97, 3, 1, "", "to_image"], [97, 3, 1, "", "to_masked"], [97, 3, 1, "", "to_region_map_dataset"], [97, 3, 1, "", "to_spectrum_dataset"], [97, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[98, 3, 1, "", "event_det_coords"], [98, 3, 1, "", "event_list_meta"], [98, 3, 1, "", "run"], [98, 3, 1, "", "sample_background"], [98, 3, 1, "", "sample_edisp"], [98, 3, 1, "", "sample_psf"], [98, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[99, 3, 1, "", "construct"], [99, 3, 1, "", "copy"], [99, 3, 1, "", "dict"], [99, 3, 1, "", "from_header"], [99, 3, 1, "", "from_orm"], [99, 3, 1, "", "json"], [99, 2, 1, "", "model_computed_fields"], [99, 2, 1, "", "model_config"], [99, 3, 1, "", "model_construct"], [99, 3, 1, "", "model_copy"], [99, 3, 1, "", "model_dump"], [99, 3, 1, "", "model_dump_json"], [99, 2, 1, "", "model_extra"], [99, 2, 1, "", "model_fields"], [99, 2, 1, "", "model_fields_set"], [99, 3, 1, "", "model_json_schema"], [99, 3, 1, "", "model_parametrized_name"], [99, 3, 1, "", "model_post_init"], [99, 3, 1, "", "model_rebuild"], [99, 3, 1, "", "model_validate"], [99, 3, 1, "", "model_validate_json"], [99, 3, 1, "", "model_validate_strings"], [99, 3, 1, "", "parse_file"], [99, 3, 1, "", "parse_obj"], [99, 3, 1, "", "parse_raw"], [99, 3, 1, "", "schema"], [99, 3, 1, "", "schema_json"], [99, 3, 1, "", "stack"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_header"], [99, 3, 1, "", "to_yaml"], [99, 3, 1, "", "update_forward_refs"], [99, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[100, 2, 1, "", "alpha"], [100, 2, 1, "", "background"], [100, 2, 1, "", "background_model"], [100, 3, 1, "", "copy"], [100, 2, 1, "", "counts"], [100, 3, 1, "", "create"], [100, 3, 1, "", "cutout"], [100, 2, 1, "", "data_shape"], [100, 3, 1, "", "downsample"], [100, 2, 1, "", "edisp"], [100, 2, 1, "", "energy_range"], [100, 2, 1, "", "energy_range_fit"], [100, 2, 1, "", "energy_range_safe"], [100, 2, 1, "", "energy_range_total"], [100, 2, 1, "", "evaluators"], [100, 2, 1, "", "excess"], [100, 2, 1, "", "exposure"], [100, 3, 1, "", "fake"], [100, 3, 1, "", "from_dict"], [100, 3, 1, "", "from_geoms"], [100, 3, 1, "", "from_hdulist"], [100, 3, 1, "", "from_map_dataset"], [100, 2, 1, "", "geoms"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "info_dict"], [100, 2, 1, "", "mask"], [100, 2, 1, "", "mask_fit"], [100, 2, 1, "", "mask_fit_image"], [100, 2, 1, "", "mask_image"], [100, 2, 1, "", "mask_safe"], [100, 2, 1, "", "mask_safe_edisp"], [100, 2, 1, "", "mask_safe_image"], [100, 2, 1, "", "mask_safe_psf"], [100, 2, 1, "", "meta"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "name"], [100, 3, 1, "", "npred"], [100, 3, 1, "", "npred_background"], [100, 3, 1, "", "npred_off"], [100, 3, 1, "", "npred_signal"], [100, 3, 1, "", "pad"], [100, 3, 1, "", "peek"], [100, 3, 1, "", "plot_residuals"], [100, 3, 1, "", "plot_residuals_spatial"], [100, 3, 1, "", "plot_residuals_spectral"], [100, 2, 1, "", "psf"], [100, 3, 1, "", "read"], [100, 3, 1, "", "resample_energy_axis"], [100, 3, 1, "", "reset_data_cache"], [100, 3, 1, "", "residuals"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "slice_by_idx"], [100, 3, 1, "", "stack"], [100, 3, 1, "", "stat_array"], [100, 3, 1, "", "stat_sum"], [100, 2, 1, "", "stat_type"], [100, 2, 1, "", "tag"], [100, 3, 1, "", "to_dict"], [100, 3, 1, "", "to_hdulist"], [100, 3, 1, "", "to_image"], [100, 3, 1, "", "to_map_dataset"], [100, 3, 1, "", "to_masked"], [100, 3, 1, "", "to_region_map_dataset"], [100, 3, 1, "", "to_spectrum_dataset"], [100, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[101, 3, 1, "", "get_filenames"], [101, 3, 1, "", "get_valid_path"], [101, 3, 1, "", "read"], [101, 3, 1, "", "read_arf"], [101, 3, 1, "", "read_bkg"], [101, 3, 1, "", "read_pha"], [101, 3, 1, "", "read_rmf"], [101, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[102, 3, 1, "", "get_filenames"], [102, 3, 1, "", "get_ogip_meta"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_counts_hdulist"], [102, 3, 1, "", "write"], [102, 3, 1, "", "write_arf"], [102, 3, 1, "", "write_bkg"], [102, 3, 1, "", "write_pha"], [102, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[103, 3, 1, "", "event_det_coords"], [103, 3, 1, "", "event_list_meta"], [103, 3, 1, "", "run"], [103, 3, 1, "", "sample_background"], [103, 3, 1, "", "sample_edisp"], [103, 3, 1, "", "sample_psf"], [103, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[104, 2, 1, "", "background"], [104, 2, 1, "", "background_model"], [104, 3, 1, "", "copy"], [104, 2, 1, "", "counts"], [104, 3, 1, "", "create"], [104, 3, 1, "", "cutout"], [104, 2, 1, "", "data_shape"], [104, 3, 1, "", "downsample"], [104, 2, 1, "", "edisp"], [104, 2, 1, "", "energy_range"], [104, 2, 1, "", "energy_range_fit"], [104, 2, 1, "", "energy_range_safe"], [104, 2, 1, "", "energy_range_total"], [104, 2, 1, "", "evaluators"], [104, 2, 1, "", "excess"], [104, 2, 1, "", "exposure"], [104, 3, 1, "", "fake"], [104, 3, 1, "", "from_dict"], [104, 3, 1, "", "from_geoms"], [104, 3, 1, "", "from_hdulist"], [104, 2, 1, "", "geoms"], [104, 2, 1, "", "gti"], [104, 3, 1, "", "info_dict"], [104, 2, 1, "", "mask"], [104, 2, 1, "", "mask_fit"], [104, 2, 1, "", "mask_fit_image"], [104, 2, 1, "", "mask_image"], [104, 2, 1, "", "mask_safe"], [104, 2, 1, "", "mask_safe_edisp"], [104, 2, 1, "", "mask_safe_image"], [104, 2, 1, "", "mask_safe_psf"], [104, 2, 1, "", "meta"], [104, 2, 1, "", "meta_table"], [104, 2, 1, "", "models"], [104, 2, 1, "", "name"], [104, 3, 1, "", "npred"], [104, 3, 1, "", "npred_background"], [104, 3, 1, "", "npred_signal"], [104, 3, 1, "", "pad"], [104, 3, 1, "", "peek"], [104, 3, 1, "", "plot_counts"], [104, 3, 1, "", "plot_excess"], [104, 3, 1, "", "plot_fit"], [104, 3, 1, "", "plot_masks"], [104, 3, 1, "", "plot_residuals"], [104, 3, 1, "", "plot_residuals_spatial"], [104, 3, 1, "", "plot_residuals_spectral"], [104, 2, 1, "", "psf"], [104, 3, 1, "", "read"], [104, 3, 1, "", "resample_energy_axis"], [104, 3, 1, "", "reset_data_cache"], [104, 3, 1, "", "residuals"], [104, 3, 1, "", "slice_by_energy"], [104, 3, 1, "", "slice_by_idx"], [104, 3, 1, "", "stack"], [104, 3, 1, "", "stat_array"], [104, 3, 1, "", "stat_sum"], [104, 2, 1, "", "stat_type"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_dict"], [104, 3, 1, "", "to_hdulist"], [104, 3, 1, "", "to_image"], [104, 3, 1, "", "to_masked"], [104, 3, 1, "", "to_region_map_dataset"], [104, 3, 1, "", "to_spectrum_dataset"], [104, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[105, 2, 1, "", "alpha"], [105, 2, 1, "", "background"], [105, 2, 1, "", "background_model"], [105, 3, 1, "", "copy"], [105, 2, 1, "", "counts"], [105, 3, 1, "", "create"], [105, 3, 1, "", "cutout"], [105, 2, 1, "", "data_shape"], [105, 3, 1, "", "downsample"], [105, 2, 1, "", "edisp"], [105, 2, 1, "", "energy_range"], [105, 2, 1, "", "energy_range_fit"], [105, 2, 1, "", "energy_range_safe"], [105, 2, 1, "", "energy_range_total"], [105, 2, 1, "", "evaluators"], [105, 2, 1, "", "excess"], [105, 2, 1, "", "exposure"], [105, 3, 1, "", "fake"], [105, 3, 1, "", "from_dict"], [105, 3, 1, "", "from_geoms"], [105, 3, 1, "", "from_hdulist"], [105, 3, 1, "", "from_map_dataset"], [105, 3, 1, "", "from_spectrum_dataset"], [105, 2, 1, "", "geoms"], [105, 2, 1, "", "gti"], [105, 3, 1, "", "info_dict"], [105, 2, 1, "", "mask"], [105, 2, 1, "", "mask_fit"], [105, 2, 1, "", "mask_fit_image"], [105, 2, 1, "", "mask_image"], [105, 2, 1, "", "mask_safe"], [105, 2, 1, "", "mask_safe_edisp"], [105, 2, 1, "", "mask_safe_image"], [105, 2, 1, "", "mask_safe_psf"], [105, 2, 1, "", "meta"], [105, 2, 1, "", "meta_table"], [105, 2, 1, "", "models"], [105, 2, 1, "", "name"], [105, 3, 1, "", "npred"], [105, 3, 1, "", "npred_background"], [105, 3, 1, "", "npred_off"], [105, 3, 1, "", "npred_signal"], [105, 3, 1, "", "pad"], [105, 3, 1, "", "peek"], [105, 3, 1, "", "plot_counts"], [105, 3, 1, "", "plot_excess"], [105, 3, 1, "", "plot_fit"], [105, 3, 1, "", "plot_masks"], [105, 3, 1, "", "plot_residuals"], [105, 3, 1, "", "plot_residuals_spatial"], [105, 3, 1, "", "plot_residuals_spectral"], [105, 2, 1, "", "psf"], [105, 3, 1, "", "read"], [105, 3, 1, "", "resample_energy_axis"], [105, 3, 1, "", "reset_data_cache"], [105, 3, 1, "", "residuals"], [105, 3, 1, "", "slice_by_energy"], [105, 3, 1, "", "slice_by_idx"], [105, 3, 1, "", "stack"], [105, 3, 1, "", "stat_array"], [105, 3, 1, "", "stat_sum"], [105, 2, 1, "", "stat_type"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_dict"], [105, 3, 1, "", "to_hdulist"], [105, 3, 1, "", "to_image"], [105, 3, 1, "", "to_map_dataset"], [105, 3, 1, "", "to_masked"], [105, 3, 1, "", "to_region_map_dataset"], [105, 3, 1, "", "to_spectrum_dataset"], [105, 3, 1, "", "write"]], "gammapy.datasets.utils": [[110, 4, 1, "", "apply_edisp"], [111, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[112, 1, 1, "", "ASmoothMapEstimator"], [113, 5, 1, "", "ESTIMATOR_REGISTRY"], [114, 1, 1, "", "EnergyDependentMorphologyEstimator"], [115, 1, 1, "", "Estimator"], [116, 1, 1, "", "ExcessMapEstimator"], [117, 1, 1, "", "FluxMaps"], [118, 1, 1, "", "FluxMetaData"], [119, 1, 1, "", "FluxPoints"], [120, 1, 1, "", "FluxPointsEstimator"], [121, 1, 1, "", "FluxProfileEstimator"], [122, 1, 1, "", "ImageProfile"], [123, 1, 1, "", "ImageProfileEstimator"], [124, 1, 1, "", "LightCurveEstimator"], [125, 1, 1, "", "ParameterEstimator"], [126, 1, 1, "", "SensitivityEstimator"], [127, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[112, 2, 1, "", "config_parameters"], [112, 3, 1, "", "copy"], [112, 3, 1, "", "estimate_maps"], [112, 3, 1, "", "get_kernels"], [112, 3, 1, "", "get_scales"], [112, 3, 1, "", "run"], [112, 3, 1, "", "selection_all"], [112, 2, 1, "", "selection_optional"], [112, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[114, 2, 1, "", "config_parameters"], [114, 3, 1, "", "copy"], [114, 3, 1, "", "estimate_energy_dependence"], [114, 3, 1, "", "run"], [114, 2, 1, "", "selection_optional"], [114, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[115, 2, 1, "", "config_parameters"], [115, 3, 1, "", "copy"], [115, 3, 1, "", "run"], [115, 2, 1, "", "selection_optional"], [115, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[116, 2, 1, "", "config_parameters"], [116, 3, 1, "", "copy"], [116, 2, 1, "", "correlation_radius"], [116, 3, 1, "", "estimate_excess_map"], [116, 3, 1, "", "estimate_exposure_reco_energy"], [116, 3, 1, "", "estimate_kernel"], [116, 3, 1, "", "estimate_mask_default"], [116, 3, 1, "", "run"], [116, 2, 1, "", "selection_optional"], [116, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[117, 3, 1, "", "all_quantities"], [117, 2, 1, "", "available_quantities"], [117, 2, 1, "", "counts"], [117, 2, 1, "", "dnde"], [117, 2, 1, "", "dnde_err"], [117, 2, 1, "", "dnde_errn"], [117, 2, 1, "", "dnde_errp"], [117, 2, 1, "", "dnde_ref"], [117, 2, 1, "", "dnde_ul"], [117, 2, 1, "", "e2dnde"], [117, 2, 1, "", "e2dnde_err"], [117, 2, 1, "", "e2dnde_errn"], [117, 2, 1, "", "e2dnde_errp"], [117, 2, 1, "", "e2dnde_ref"], [117, 2, 1, "", "e2dnde_ul"], [117, 2, 1, "", "eflux"], [117, 2, 1, "", "eflux_err"], [117, 2, 1, "", "eflux_errn"], [117, 2, 1, "", "eflux_errp"], [117, 2, 1, "", "eflux_ref"], [117, 2, 1, "", "eflux_ul"], [117, 2, 1, "", "energy_axis"], [117, 2, 1, "", "energy_max"], [117, 2, 1, "", "energy_min"], [117, 2, 1, "", "energy_ref"], [117, 2, 1, "", "filter_success_nan"], [117, 2, 1, "", "flux"], [117, 2, 1, "", "flux_err"], [117, 2, 1, "", "flux_errn"], [117, 2, 1, "", "flux_errp"], [117, 2, 1, "", "flux_ref"], [117, 2, 1, "", "flux_sensitivity"], [117, 2, 1, "", "flux_ul"], [117, 3, 1, "", "from_hdulist"], [117, 3, 1, "", "from_maps"], [117, 3, 1, "", "from_stack"], [117, 2, 1, "", "geom"], [117, 3, 1, "", "get_flux_points"], [117, 2, 1, "", "has_any_ts"], [117, 2, 1, "", "has_stat_profiles"], [117, 2, 1, "", "has_success"], [117, 2, 1, "", "has_ul"], [117, 2, 1, "", "is_convertible_to_flux_sed_type"], [117, 2, 1, "", "is_ul"], [117, 3, 1, "", "iter_by_axis"], [117, 2, 1, "", "n_dof"], [117, 2, 1, "", "n_sigma"], [117, 2, 1, "", "n_sigma_ul"], [117, 2, 1, "", "niter"], [117, 2, 1, "", "norm"], [117, 2, 1, "", "norm_err"], [117, 2, 1, "", "norm_errn"], [117, 2, 1, "", "norm_errp"], [117, 2, 1, "", "norm_sensitivity"], [117, 2, 1, "", "norm_ul"], [117, 2, 1, "", "npred"], [117, 2, 1, "", "npred_background"], [117, 2, 1, "", "npred_excess"], [117, 2, 1, "", "npred_excess_err"], [117, 2, 1, "", "npred_excess_errn"], [117, 2, 1, "", "npred_excess_errp"], [117, 2, 1, "", "npred_excess_ref"], [117, 2, 1, "", "npred_excess_ul"], [117, 3, 1, "", "read"], [117, 2, 1, "", "reference_model"], [117, 2, 1, "", "reference_model_default"], [117, 2, 1, "", "reference_spectral_model"], [117, 2, 1, "", "sed_type_init"], [117, 2, 1, "", "sed_type_plot_default"], [117, 3, 1, "", "slice_by_coord"], [117, 3, 1, "", "slice_by_energy"], [117, 3, 1, "", "slice_by_idx"], [117, 3, 1, "", "slice_by_time"], [117, 2, 1, "", "sqrt_ts"], [117, 2, 1, "", "sqrt_ts_threshold_ul"], [117, 2, 1, "", "stat"], [117, 2, 1, "", "stat_null"], [117, 2, 1, "", "stat_scan"], [117, 2, 1, "", "success"], [117, 3, 1, "", "to_hdulist"], [117, 3, 1, "", "to_maps"], [117, 2, 1, "", "ts"], [117, 2, 1, "", "ts_scan"], [117, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[118, 3, 1, "", "construct"], [118, 3, 1, "", "copy"], [118, 3, 1, "", "dict"], [118, 3, 1, "", "from_header"], [118, 3, 1, "", "from_orm"], [118, 3, 1, "", "json"], [118, 2, 1, "", "model_computed_fields"], [118, 2, 1, "", "model_config"], [118, 3, 1, "", "model_construct"], [118, 3, 1, "", "model_copy"], [118, 3, 1, "", "model_dump"], [118, 3, 1, "", "model_dump_json"], [118, 2, 1, "", "model_extra"], [118, 2, 1, "", "model_fields"], [118, 2, 1, "", "model_fields_set"], [118, 3, 1, "", "model_json_schema"], [118, 3, 1, "", "model_parametrized_name"], [118, 3, 1, "", "model_post_init"], [118, 3, 1, "", "model_rebuild"], [118, 3, 1, "", "model_validate"], [118, 3, 1, "", "model_validate_json"], [118, 3, 1, "", "model_validate_strings"], [118, 3, 1, "", "parse_file"], [118, 3, 1, "", "parse_obj"], [118, 3, 1, "", "parse_raw"], [118, 3, 1, "", "schema"], [118, 3, 1, "", "schema_json"], [118, 2, 1, "", "tag"], [118, 3, 1, "", "to_header"], [118, 3, 1, "", "to_yaml"], [118, 3, 1, "", "update_forward_refs"], [118, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[119, 3, 1, "", "all_quantities"], [119, 2, 1, "", "available_quantities"], [119, 2, 1, "", "counts"], [119, 2, 1, "", "dnde"], [119, 2, 1, "", "dnde_err"], [119, 2, 1, "", "dnde_errn"], [119, 2, 1, "", "dnde_errp"], [119, 2, 1, "", "dnde_ref"], [119, 2, 1, "", "dnde_ul"], [119, 2, 1, "", "e2dnde"], [119, 2, 1, "", "e2dnde_err"], [119, 2, 1, "", "e2dnde_errn"], [119, 2, 1, "", "e2dnde_errp"], [119, 2, 1, "", "e2dnde_ref"], [119, 2, 1, "", "e2dnde_ul"], [119, 2, 1, "", "eflux"], [119, 2, 1, "", "eflux_err"], [119, 2, 1, "", "eflux_errn"], [119, 2, 1, "", "eflux_errp"], [119, 2, 1, "", "eflux_ref"], [119, 2, 1, "", "eflux_ul"], [119, 2, 1, "", "energy_axis"], [119, 2, 1, "", "energy_max"], [119, 2, 1, "", "energy_min"], [119, 2, 1, "", "energy_ref"], [119, 2, 1, "", "filter_success_nan"], [119, 2, 1, "", "flux"], [119, 2, 1, "", "flux_err"], [119, 2, 1, "", "flux_errn"], [119, 2, 1, "", "flux_errp"], [119, 2, 1, "", "flux_ref"], [119, 2, 1, "", "flux_sensitivity"], [119, 2, 1, "", "flux_ul"], [119, 3, 1, "", "from_hdulist"], [119, 3, 1, "", "from_maps"], [119, 3, 1, "", "from_stack"], [119, 3, 1, "", "from_table"], [119, 2, 1, "", "geom"], [119, 3, 1, "", "get_flux_points"], [119, 2, 1, "", "has_any_ts"], [119, 2, 1, "", "has_stat_profiles"], [119, 2, 1, "", "has_success"], [119, 2, 1, "", "has_ul"], [119, 2, 1, "", "is_convertible_to_flux_sed_type"], [119, 2, 1, "", "is_ul"], [119, 3, 1, "", "iter_by_axis"], [119, 2, 1, "", "n_dof"], [119, 2, 1, "", "n_sigma"], [119, 2, 1, "", "n_sigma_ul"], [119, 2, 1, "", "niter"], [119, 2, 1, "", "norm"], [119, 2, 1, "", "norm_err"], [119, 2, 1, "", "norm_errn"], [119, 2, 1, "", "norm_errp"], [119, 2, 1, "", "norm_sensitivity"], [119, 2, 1, "", "norm_ul"], [119, 2, 1, "", "npred"], [119, 2, 1, "", "npred_background"], [119, 2, 1, "", "npred_excess"], [119, 2, 1, "", "npred_excess_err"], [119, 2, 1, "", "npred_excess_errn"], [119, 2, 1, "", "npred_excess_errp"], [119, 2, 1, "", "npred_excess_ref"], [119, 2, 1, "", "npred_excess_ul"], [119, 3, 1, "", "plot"], [119, 3, 1, "", "plot_ts_profiles"], [119, 3, 1, "", "read"], [119, 3, 1, "", "recompute_ul"], [119, 2, 1, "", "reference_model"], [119, 2, 1, "", "reference_model_default"], [119, 2, 1, "", "reference_spectral_model"], [119, 3, 1, "", "resample_axis"], [119, 2, 1, "", "sed_type_init"], [119, 2, 1, "", "sed_type_plot_default"], [119, 3, 1, "", "slice_by_coord"], [119, 3, 1, "", "slice_by_energy"], [119, 3, 1, "", "slice_by_idx"], [119, 3, 1, "", "slice_by_time"], [119, 2, 1, "", "sqrt_ts"], [119, 2, 1, "", "sqrt_ts_threshold_ul"], [119, 2, 1, "", "stat"], [119, 2, 1, "", "stat_null"], [119, 2, 1, "", "stat_scan"], [119, 2, 1, "", "success"], [119, 3, 1, "", "to_hdulist"], [119, 3, 1, "", "to_maps"], [119, 3, 1, "", "to_table"], [119, 2, 1, "", "ts"], [119, 2, 1, "", "ts_scan"], [119, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "estimate_best_fit"], [120, 3, 1, "", "estimate_counts"], [120, 3, 1, "", "estimate_errn_errp"], [120, 3, 1, "", "estimate_flux_point"], [120, 3, 1, "", "estimate_npred"], [120, 3, 1, "", "estimate_npred_excess"], [120, 3, 1, "", "estimate_scan"], [120, 3, 1, "", "estimate_ts"], [120, 3, 1, "", "estimate_ul"], [120, 3, 1, "", "get_scale_model"], [120, 2, 1, "", "n_jobs"], [120, 2, 1, "", "norm_max"], [120, 2, 1, "", "norm_min"], [120, 2, 1, "", "norm_n_values"], [120, 2, 1, "", "norm_values"], [120, 2, 1, "", "parallel_backend"], [120, 3, 1, "", "run"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 3, 1, "", "estimate_best_fit"], [121, 3, 1, "", "estimate_counts"], [121, 3, 1, "", "estimate_errn_errp"], [121, 3, 1, "", "estimate_flux_point"], [121, 3, 1, "", "estimate_npred"], [121, 3, 1, "", "estimate_npred_excess"], [121, 3, 1, "", "estimate_scan"], [121, 3, 1, "", "estimate_ts"], [121, 3, 1, "", "estimate_ul"], [121, 3, 1, "", "get_scale_model"], [121, 2, 1, "", "n_jobs"], [121, 2, 1, "", "norm_max"], [121, 2, 1, "", "norm_min"], [121, 2, 1, "", "norm_n_values"], [121, 2, 1, "", "norm_values"], [121, 2, 1, "", "parallel_backend"], [121, 2, 1, "", "projected_distance_axis"], [121, 3, 1, "", "run"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[122, 3, 1, "", "normalize"], [122, 3, 1, "", "peek"], [122, 3, 1, "", "plot"], [122, 3, 1, "", "plot_err"], [122, 2, 1, "", "profile"], [122, 2, 1, "", "profile_err"], [122, 3, 1, "", "smooth"], [122, 2, 1, "", "x_max"], [122, 2, 1, "", "x_min"], [122, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 3, 1, "", "estimate_best_fit"], [124, 3, 1, "", "estimate_counts"], [124, 3, 1, "", "estimate_errn_errp"], [124, 3, 1, "", "estimate_flux_point"], [124, 3, 1, "", "estimate_npred"], [124, 3, 1, "", "estimate_npred_excess"], [124, 3, 1, "", "estimate_scan"], [124, 3, 1, "", "estimate_time_bin_flux"], [124, 3, 1, "", "estimate_ts"], [124, 3, 1, "", "estimate_ul"], [124, 3, 1, "", "expand_map"], [124, 3, 1, "", "get_scale_model"], [124, 2, 1, "", "n_jobs"], [124, 2, 1, "", "norm_max"], [124, 2, 1, "", "norm_min"], [124, 2, 1, "", "norm_n_values"], [124, 2, 1, "", "norm_values"], [124, 2, 1, "", "parallel_backend"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 3, 1, "", "estimate_best_fit"], [125, 3, 1, "", "estimate_counts"], [125, 3, 1, "", "estimate_errn_errp"], [125, 3, 1, "", "estimate_npred"], [125, 3, 1, "", "estimate_scan"], [125, 3, 1, "", "estimate_ts"], [125, 3, 1, "", "estimate_ul"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[126, 2, 1, "", "config_parameters"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "estimate_min_e2dnde"], [126, 3, 1, "", "estimate_min_excess"], [126, 3, 1, "", "run"], [126, 2, 1, "", "selection_optional"], [126, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[127, 2, 1, "", "config_parameters"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "estimate_fit_input_maps"], [127, 3, 1, "", "estimate_flux_default"], [127, 3, 1, "", "estimate_flux_map"], [127, 3, 1, "", "estimate_kernel"], [127, 3, 1, "", "estimate_mask_default"], [127, 3, 1, "", "estimate_pad_width"], [127, 2, 1, "", "n_jobs"], [127, 2, 1, "", "parallel_backend"], [127, 3, 1, "", "run"], [127, 2, 1, "", "selection_all"], [127, 2, 1, "", "selection_optional"], [127, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[128, 4, 1, "", "compute_lightcurve_doublingtime"], [129, 4, 1, "", "compute_lightcurve_fpp"], [130, 4, 1, "", "compute_lightcurve_fvar"], [131, 4, 1, "", "estimate_exposure_reco_energy"], [132, 4, 1, "", "find_peaks"], [133, 4, 1, "", "find_peaks_in_flux_map"], [134, 4, 1, "", "get_combined_significance_maps"], [135, 4, 1, "", "get_rebinned_axis"], [136, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[137, 1, 1, "", "Background2D"], [138, 1, 1, "", "Background3D"], [139, 1, 1, "", "BackgroundIRF"], [140, 1, 1, "", "EDispKernel"], [141, 1, 1, "", "EDispKernelMap"], [142, 1, 1, "", "EDispMap"], [143, 1, 1, "", "EffectiveAreaTable2D"], [144, 1, 1, "", "EnergyDependentMultiGaussPSF"], [145, 1, 1, "", "EnergyDispersion2D"], [146, 1, 1, "", "FoVAlignment"], [147, 1, 1, "", "IRF"], [148, 1, 1, "", "IRFMap"], [149, 5, 1, "", "IRF_REGISTRY"], [150, 1, 1, "", "PSF3D"], [151, 1, 1, "", "PSFKernel"], [152, 1, 1, "", "PSFKing"], [153, 1, 1, "", "PSFMap"], [154, 1, 1, "", "ParametricPSF"], [155, 1, 1, "", "RadMax2D"], [156, 1, 1, "", "RecoPSFMap"], [157, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[137, 2, 1, "", "axes"], [137, 3, 1, "", "cumsum"], [137, 2, 1, "", "data"], [137, 2, 1, "", "default_interp_kwargs"], [137, 2, 1, "", "default_unit"], [137, 3, 1, "", "evaluate"], [137, 2, 1, "", "fov_alignment"], [137, 3, 1, "", "from_hdulist"], [137, 3, 1, "", "from_table"], [137, 2, 1, "", "has_offset_axis"], [137, 3, 1, "", "integral"], [137, 3, 1, "", "integrate_log_log"], [137, 3, 1, "", "interp_missing_data"], [137, 3, 1, "", "is_allclose"], [137, 2, 1, "", "is_pointlike"], [137, 3, 1, "", "normalize"], [137, 3, 1, "", "pad"], [137, 3, 1, "", "peek"], [137, 3, 1, "", "plot"], [137, 3, 1, "", "plot_at_energy"], [137, 3, 1, "", "plot_energy_dependence"], [137, 3, 1, "", "plot_offset_dependence"], [137, 3, 1, "", "plot_spectrum"], [137, 2, 1, "", "quantity"], [137, 3, 1, "", "read"], [137, 2, 1, "", "required_axes"], [137, 3, 1, "", "slice_by_idx"], [137, 2, 1, "", "tag"], [137, 3, 1, "", "to_3d"], [137, 3, 1, "", "to_hdulist"], [137, 3, 1, "", "to_table"], [137, 3, 1, "", "to_table_hdu"], [137, 3, 1, "", "to_unit"], [137, 2, 1, "", "unit"], [137, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[138, 2, 1, "", "axes"], [138, 3, 1, "", "cumsum"], [138, 2, 1, "", "data"], [138, 2, 1, "", "default_interp_kwargs"], [138, 2, 1, "", "default_unit"], [138, 3, 1, "", "evaluate"], [138, 2, 1, "", "fov_alignment"], [138, 3, 1, "", "from_hdulist"], [138, 3, 1, "", "from_table"], [138, 2, 1, "", "has_offset_axis"], [138, 3, 1, "", "integral"], [138, 3, 1, "", "integrate_log_log"], [138, 3, 1, "", "interp_missing_data"], [138, 3, 1, "", "is_allclose"], [138, 2, 1, "", "is_pointlike"], [138, 3, 1, "", "normalize"], [138, 3, 1, "", "pad"], [138, 3, 1, "", "peek"], [138, 3, 1, "", "plot_at_energy"], [138, 2, 1, "", "quantity"], [138, 3, 1, "", "read"], [138, 2, 1, "", "required_axes"], [138, 3, 1, "", "slice_by_idx"], [138, 2, 1, "", "tag"], [138, 3, 1, "", "to_2d"], [138, 3, 1, "", "to_hdulist"], [138, 3, 1, "", "to_table"], [138, 3, 1, "", "to_table_hdu"], [138, 3, 1, "", "to_unit"], [138, 2, 1, "", "unit"], [138, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[139, 2, 1, "", "axes"], [139, 3, 1, "", "cumsum"], [139, 2, 1, "", "data"], [139, 2, 1, "", "default_interp_kwargs"], [139, 3, 1, "", "evaluate"], [139, 2, 1, "", "fov_alignment"], [139, 3, 1, "", "from_hdulist"], [139, 3, 1, "", "from_table"], [139, 2, 1, "", "has_offset_axis"], [139, 3, 1, "", "integral"], [139, 3, 1, "", "integrate_log_log"], [139, 3, 1, "", "interp_missing_data"], [139, 3, 1, "", "is_allclose"], [139, 2, 1, "", "is_pointlike"], [139, 3, 1, "", "normalize"], [139, 3, 1, "", "pad"], [139, 2, 1, "", "quantity"], [139, 3, 1, "", "read"], [139, 2, 1, "", "required_axes"], [139, 3, 1, "", "slice_by_idx"], [139, 2, 1, "", "tag"], [139, 3, 1, "", "to_hdulist"], [139, 3, 1, "", "to_table"], [139, 3, 1, "", "to_table_hdu"], [139, 3, 1, "", "to_unit"], [139, 2, 1, "", "unit"], [139, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[140, 2, 1, "", "axes"], [140, 3, 1, "", "cumsum"], [140, 2, 1, "", "data"], [140, 2, 1, "", "default_interp_kwargs"], [140, 3, 1, "", "evaluate"], [140, 2, 1, "", "fov_alignment"], [140, 3, 1, "", "from_diagonal_response"], [140, 3, 1, "", "from_gauss"], [140, 3, 1, "", "from_hdulist"], [140, 3, 1, "", "from_table"], [140, 3, 1, "", "get_bias"], [140, 3, 1, "", "get_bias_energy"], [140, 3, 1, "", "get_mean"], [140, 3, 1, "", "get_resolution"], [140, 2, 1, "", "has_offset_axis"], [140, 3, 1, "", "integral"], [140, 3, 1, "", "integrate_log_log"], [140, 3, 1, "", "interp_missing_data"], [140, 3, 1, "", "is_allclose"], [140, 2, 1, "", "is_pointlike"], [140, 3, 1, "", "normalize"], [140, 3, 1, "", "pad"], [140, 3, 1, "", "pdf_in_safe_range"], [140, 2, 1, "", "pdf_matrix"], [140, 3, 1, "", "peek"], [140, 3, 1, "", "plot_bias"], [140, 3, 1, "", "plot_matrix"], [140, 2, 1, "", "quantity"], [140, 3, 1, "", "read"], [140, 2, 1, "", "required_axes"], [140, 3, 1, "", "slice_by_idx"], [140, 2, 1, "", "tag"], [140, 3, 1, "", "to_hdulist"], [140, 3, 1, "", "to_image"], [140, 3, 1, "", "to_table"], [140, 3, 1, "", "to_table_hdu"], [140, 3, 1, "", "to_unit"], [140, 2, 1, "", "unit"], [140, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[141, 3, 1, "", "copy"], [141, 3, 1, "", "cutout"], [141, 3, 1, "", "downsample"], [141, 2, 1, "", "edisp_map"], [141, 3, 1, "", "from_diagonal_response"], [141, 3, 1, "", "from_edisp_kernel"], [141, 3, 1, "", "from_gauss"], [141, 3, 1, "", "from_geom"], [141, 3, 1, "", "from_hdulist"], [141, 3, 1, "", "get_edisp_kernel"], [141, 2, 1, "", "mask_safe_image"], [141, 3, 1, "", "peek"], [141, 3, 1, "", "read"], [141, 2, 1, "", "required_axes"], [141, 3, 1, "", "resample_energy_axis"], [141, 3, 1, "", "slice_by_idx"], [141, 3, 1, "", "stack"], [141, 2, 1, "", "tag"], [141, 3, 1, "", "to_hdulist"], [141, 3, 1, "", "to_image"], [141, 3, 1, "", "to_region_nd_map"], [141, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[142, 3, 1, "", "copy"], [142, 3, 1, "", "cutout"], [142, 3, 1, "", "downsample"], [142, 2, 1, "", "edisp_map"], [142, 3, 1, "", "from_diagonal_response"], [142, 3, 1, "", "from_geom"], [142, 3, 1, "", "from_hdulist"], [142, 3, 1, "", "get_edisp_kernel"], [142, 2, 1, "", "mask_safe_image"], [142, 3, 1, "", "normalize"], [142, 3, 1, "", "peek"], [142, 3, 1, "", "read"], [142, 2, 1, "", "required_axes"], [142, 3, 1, "", "sample_coord"], [142, 3, 1, "", "slice_by_idx"], [142, 3, 1, "", "stack"], [142, 2, 1, "", "tag"], [142, 3, 1, "", "to_edisp_kernel_map"], [142, 3, 1, "", "to_hdulist"], [142, 3, 1, "", "to_region_nd_map"], [142, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[143, 2, 1, "", "axes"], [143, 3, 1, "", "cumsum"], [143, 2, 1, "", "data"], [143, 2, 1, "", "default_interp_kwargs"], [143, 2, 1, "", "default_unit"], [143, 3, 1, "", "evaluate"], [143, 2, 1, "", "fov_alignment"], [143, 3, 1, "", "from_hdulist"], [143, 3, 1, "", "from_parametrization"], [143, 3, 1, "", "from_table"], [143, 2, 1, "", "has_offset_axis"], [143, 3, 1, "", "integral"], [143, 3, 1, "", "integrate_log_log"], [143, 3, 1, "", "interp_missing_data"], [143, 3, 1, "", "is_allclose"], [143, 2, 1, "", "is_pointlike"], [143, 3, 1, "", "normalize"], [143, 3, 1, "", "pad"], [143, 3, 1, "", "peek"], [143, 3, 1, "", "plot"], [143, 3, 1, "", "plot_energy_dependence"], [143, 3, 1, "", "plot_offset_dependence"], [143, 2, 1, "", "quantity"], [143, 3, 1, "", "read"], [143, 2, 1, "", "required_axes"], [143, 3, 1, "", "slice_by_idx"], [143, 2, 1, "", "tag"], [143, 3, 1, "", "to_hdulist"], [143, 3, 1, "", "to_table"], [143, 3, 1, "", "to_table_hdu"], [143, 3, 1, "", "to_unit"], [143, 2, 1, "", "unit"], [143, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[144, 2, 1, "", "axes"], [144, 3, 1, "", "containment"], [144, 3, 1, "", "containment_radius"], [144, 3, 1, "", "cumsum"], [144, 2, 1, "", "data"], [144, 2, 1, "", "default_interp_kwargs"], [144, 3, 1, "", "evaluate"], [144, 3, 1, "", "evaluate_containment"], [144, 3, 1, "", "evaluate_direct"], [144, 3, 1, "", "evaluate_parameters"], [144, 2, 1, "", "fov_alignment"], [144, 3, 1, "", "from_hdulist"], [144, 3, 1, "", "from_table"], [144, 2, 1, "", "has_offset_axis"], [144, 3, 1, "", "info"], [144, 3, 1, "", "integral"], [144, 3, 1, "", "integrate_log_log"], [144, 3, 1, "", "interp_missing_data"], [144, 3, 1, "", "is_allclose"], [144, 2, 1, "", "is_pointlike"], [144, 3, 1, "", "normalize"], [144, 3, 1, "", "pad"], [144, 3, 1, "", "peek"], [144, 3, 1, "", "plot_containment_radius"], [144, 3, 1, "", "plot_containment_radius_vs_energy"], [144, 3, 1, "", "plot_psf_vs_rad"], [144, 2, 1, "", "quantity"], [144, 3, 1, "", "read"], [144, 2, 1, "", "required_axes"], [144, 2, 1, "", "required_parameters"], [144, 3, 1, "", "slice_by_idx"], [144, 2, 1, "", "tag"], [144, 3, 1, "", "to_hdulist"], [144, 3, 1, "", "to_psf3d"], [144, 3, 1, "", "to_table"], [144, 3, 1, "", "to_table_hdu"], [144, 3, 1, "", "to_unit"], [144, 2, 1, "", "unit"], [144, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[145, 2, 1, "", "axes"], [145, 3, 1, "", "cumsum"], [145, 2, 1, "", "data"], [145, 2, 1, "", "default_interp_kwargs"], [145, 2, 1, "", "default_unit"], [145, 3, 1, "", "evaluate"], [145, 2, 1, "", "fov_alignment"], [145, 3, 1, "", "from_gauss"], [145, 3, 1, "", "from_hdulist"], [145, 3, 1, "", "from_table"], [145, 2, 1, "", "has_offset_axis"], [145, 3, 1, "", "integral"], [145, 3, 1, "", "integrate_log_log"], [145, 3, 1, "", "interp_missing_data"], [145, 3, 1, "", "is_allclose"], [145, 2, 1, "", "is_pointlike"], [145, 3, 1, "", "normalize"], [145, 3, 1, "", "pad"], [145, 3, 1, "", "peek"], [145, 3, 1, "", "plot_bias"], [145, 3, 1, "", "plot_migration"], [145, 2, 1, "", "quantity"], [145, 3, 1, "", "read"], [145, 2, 1, "", "required_axes"], [145, 3, 1, "", "slice_by_idx"], [145, 2, 1, "", "tag"], [145, 3, 1, "", "to_edisp_kernel"], [145, 3, 1, "", "to_hdulist"], [145, 3, 1, "", "to_table"], [145, 3, 1, "", "to_table_hdu"], [145, 3, 1, "", "to_unit"], [145, 2, 1, "", "unit"], [145, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[146, 2, 1, "", "ALTAZ"], [146, 2, 1, "", "RADEC"]], "gammapy.irf.IRF": [[147, 2, 1, "", "axes"], [147, 3, 1, "", "cumsum"], [147, 2, 1, "", "data"], [147, 2, 1, "", "default_interp_kwargs"], [147, 3, 1, "", "evaluate"], [147, 2, 1, "", "fov_alignment"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "from_table"], [147, 2, 1, "", "has_offset_axis"], [147, 3, 1, "", "integral"], [147, 3, 1, "", "integrate_log_log"], [147, 3, 1, "", "interp_missing_data"], [147, 3, 1, "", "is_allclose"], [147, 2, 1, "", "is_pointlike"], [147, 3, 1, "", "normalize"], [147, 3, 1, "", "pad"], [147, 2, 1, "", "quantity"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "slice_by_idx"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_table"], [147, 3, 1, "", "to_table_hdu"], [147, 3, 1, "", "to_unit"], [147, 2, 1, "", "unit"], [147, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[148, 3, 1, "", "copy"], [148, 3, 1, "", "cutout"], [148, 3, 1, "", "downsample"], [148, 3, 1, "", "from_hdulist"], [148, 2, 1, "", "mask_safe_image"], [148, 3, 1, "", "read"], [148, 2, 1, "", "required_axes"], [148, 3, 1, "", "slice_by_idx"], [148, 3, 1, "", "stack"], [148, 2, 1, "", "tag"], [148, 3, 1, "", "to_hdulist"], [148, 3, 1, "", "to_region_nd_map"], [148, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "containment"], [150, 3, 1, "", "containment_radius"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 2, 1, "", "default_unit"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "info"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot_containment_radius"], [150, 3, 1, "", "plot_containment_radius_vs_energy"], [150, 3, 1, "", "plot_psf_vs_rad"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[151, 2, 1, "", "data"], [151, 3, 1, "", "from_gauss"], [151, 3, 1, "", "from_spatial_model"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "plot_kernel"], [151, 2, 1, "", "psf_kernel_map"], [151, 3, 1, "", "read"], [151, 3, 1, "", "slice_by_idx"], [151, 3, 1, "", "to_image"], [151, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "containment"], [152, 3, 1, "", "containment_radius"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 3, 1, "", "evaluate"], [152, 3, 1, "", "evaluate_containment"], [152, 3, 1, "", "evaluate_direct"], [152, 3, 1, "", "evaluate_parameters"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "info"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 3, 1, "", "peek"], [152, 3, 1, "", "plot_containment_radius"], [152, 3, 1, "", "plot_containment_radius_vs_energy"], [152, 3, 1, "", "plot_psf_vs_rad"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 2, 1, "", "required_parameters"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_psf3d"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[153, 3, 1, "", "containment"], [153, 3, 1, "", "containment_radius"], [153, 3, 1, "", "containment_radius_map"], [153, 3, 1, "", "copy"], [153, 3, 1, "", "cutout"], [153, 3, 1, "", "downsample"], [153, 2, 1, "", "energy_name"], [153, 3, 1, "", "from_gauss"], [153, 3, 1, "", "from_geom"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "get_psf_kernel"], [153, 2, 1, "", "mask_safe_image"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot_containment_radius_vs_energy"], [153, 3, 1, "", "plot_psf_vs_rad"], [153, 2, 1, "", "psf_map"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "sample_coord"], [153, 3, 1, "", "slice_by_idx"], [153, 3, 1, "", "stack"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_image"], [153, 3, 1, "", "to_region_nd_map"], [153, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "containment"], [154, 3, 1, "", "containment_radius"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 3, 1, "", "evaluate"], [154, 3, 1, "", "evaluate_containment"], [154, 3, 1, "", "evaluate_direct"], [154, 3, 1, "", "evaluate_parameters"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "info"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_containment_radius"], [154, 3, 1, "", "plot_containment_radius_vs_energy"], [154, 3, 1, "", "plot_psf_vs_rad"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 2, 1, "", "required_parameters"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_psf3d"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[155, 2, 1, "", "axes"], [155, 3, 1, "", "cumsum"], [155, 2, 1, "", "data"], [155, 2, 1, "", "default_interp_kwargs"], [155, 2, 1, "", "default_unit"], [155, 3, 1, "", "evaluate"], [155, 2, 1, "", "fov_alignment"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "from_irf"], [155, 3, 1, "", "from_table"], [155, 2, 1, "", "has_offset_axis"], [155, 3, 1, "", "integral"], [155, 3, 1, "", "integrate_log_log"], [155, 3, 1, "", "interp_missing_data"], [155, 3, 1, "", "is_allclose"], [155, 2, 1, "", "is_fixed_rad_max"], [155, 2, 1, "", "is_pointlike"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "pad"], [155, 3, 1, "", "plot_rad_max_vs_energy"], [155, 2, 1, "", "quantity"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "slice_by_idx"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_table"], [155, 3, 1, "", "to_table_hdu"], [155, 3, 1, "", "to_unit"], [155, 2, 1, "", "unit"], [155, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[156, 3, 1, "", "containment"], [156, 3, 1, "", "containment_radius"], [156, 3, 1, "", "containment_radius_map"], [156, 3, 1, "", "copy"], [156, 3, 1, "", "cutout"], [156, 3, 1, "", "downsample"], [156, 2, 1, "", "energy_name"], [156, 3, 1, "", "from_gauss"], [156, 3, 1, "", "from_geom"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "get_psf_kernel"], [156, 2, 1, "", "mask_safe_image"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot_containment_radius_vs_energy"], [156, 3, 1, "", "plot_psf_vs_rad"], [156, 2, 1, "", "psf_map"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "sample_coord"], [156, 3, 1, "", "slice_by_idx"], [156, 3, 1, "", "stack"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_image"], [156, 3, 1, "", "to_region_nd_map"], [156, 3, 1, "", "write"]], "gammapy.makers": [[158, 1, 1, "", "AdaptiveRingBackgroundMaker"], [159, 1, 1, "", "DatasetsMaker"], [160, 1, 1, "", "FoVBackgroundMaker"], [161, 5, 1, "", "MAKER_REGISTRY"], [162, 1, 1, "", "Maker"], [163, 1, 1, "", "MapDatasetMaker"], [164, 1, 1, "", "PhaseBackgroundMaker"], [165, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [166, 1, 1, "", "ReflectedRegionsFinder"], [167, 1, 1, "", "RegionsFinder"], [168, 1, 1, "", "RingBackgroundMaker"], [169, 1, 1, "", "SafeMaskMaker"], [170, 1, 1, "", "SpectrumDatasetMaker"], [171, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[158, 3, 1, "", "kernels"], [158, 3, 1, "", "make_cubes"], [158, 3, 1, "", "run"], [158, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[159, 3, 1, "", "callback"], [159, 3, 1, "", "error_callback"], [159, 3, 1, "", "make_dataset"], [159, 2, 1, "", "n_jobs"], [159, 2, 1, "", "offset_max"], [159, 2, 1, "", "parallel_backend"], [159, 3, 1, "", "run"], [159, 2, 1, "", "safe_mask_maker"], [159, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[160, 2, 1, "", "available_methods"], [160, 3, 1, "", "make_background_fit"], [160, 3, 1, "", "make_background_scale"], [160, 3, 1, "", "make_default_fov_background_model"], [160, 3, 1, "", "make_exclusion_mask"], [160, 2, 1, "", "method"], [160, 3, 1, "", "run"], [160, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[162, 3, 1, "", "run"], [162, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[163, 2, 1, "", "available_selection"], [163, 3, 1, "", "make_background"], [163, 3, 1, "", "make_counts"], [163, 3, 1, "", "make_edisp"], [163, 3, 1, "", "make_edisp_kernel"], [163, 3, 1, "", "make_exposure"], [163, 3, 1, "", "make_exposure_irf"], [163, 3, 1, "", "make_meta_table"], [163, 3, 1, "", "make_psf"], [163, 3, 1, "", "run"], [163, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[164, 3, 1, "", "make_counts"], [164, 3, 1, "", "make_counts_off"], [164, 3, 1, "", "run"], [164, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[165, 3, 1, "", "make_counts_off"], [165, 3, 1, "", "run"], [165, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[166, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[167, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[168, 3, 1, "", "kernel"], [168, 3, 1, "", "make_maps_off"], [168, 3, 1, "", "run"], [168, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[169, 2, 1, "", "available_methods"], [169, 3, 1, "", "make_mask_bkg_invalid"], [169, 3, 1, "", "make_mask_energy_aeff_default"], [169, 3, 1, "", "make_mask_energy_aeff_max"], [169, 3, 1, "", "make_mask_energy_bkg_peak"], [169, 3, 1, "", "make_mask_energy_edisp_bias"], [169, 3, 1, "", "make_mask_offset_max"], [169, 3, 1, "", "run"], [169, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[170, 2, 1, "", "available_selection"], [170, 3, 1, "", "make_background"], [170, 3, 1, "", "make_counts"], [170, 3, 1, "", "make_edisp"], [170, 3, 1, "", "make_edisp_kernel"], [170, 3, 1, "", "make_exposure"], [170, 3, 1, "", "make_exposure_irf"], [170, 3, 1, "", "make_meta_table"], [170, 3, 1, "", "make_psf"], [170, 3, 1, "", "run"], [170, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[171, 3, 1, "", "run"]], "gammapy.makers.utils": [[172, 4, 1, "", "make_counts_rad_max"], [173, 4, 1, "", "make_edisp_kernel_map"], [174, 4, 1, "", "make_edisp_map"], [175, 4, 1, "", "make_effective_livetime_map"], [176, 4, 1, "", "make_map_background_irf"], [177, 4, 1, "", "make_map_exposure_true_energy"], [178, 4, 1, "", "make_observation_time_map"], [179, 4, 1, "", "make_psf_map"], [180, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[181, 1, 1, "", "Geom"], [182, 1, 1, "", "HpxGeom"], [183, 1, 1, "", "HpxMap"], [184, 1, 1, "", "HpxNDMap"], [185, 1, 1, "", "LabelMapAxis"], [186, 1, 1, "", "Map"], [187, 1, 1, "", "MapAxes"], [188, 1, 1, "", "MapAxis"], [189, 1, 1, "", "MapCoord"], [190, 1, 1, "", "Maps"], [191, 1, 1, "", "RegionGeom"], [192, 1, 1, "", "RegionNDMap"], [193, 1, 1, "", "TimeMapAxis"], [194, 1, 1, "", "WcsGeom"], [195, 1, 1, "", "WcsMap"], [196, 1, 1, "", "WcsNDMap"], [197, 4, 1, "", "containment_radius"], [198, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[181, 2, 1, "", "as_energy_true"], [181, 2, 1, "", "center_coord"], [181, 2, 1, "", "center_pix"], [181, 2, 1, "", "center_skydir"], [181, 3, 1, "", "contains"], [181, 3, 1, "", "contains_pix"], [181, 3, 1, "", "coord_to_idx"], [181, 3, 1, "", "coord_to_pix"], [181, 3, 1, "", "copy"], [181, 3, 1, "", "crop"], [181, 3, 1, "", "data_nbytes"], [181, 2, 1, "", "data_shape"], [181, 3, 1, "", "downsample"], [181, 3, 1, "", "drop"], [181, 3, 1, "", "energy_mask"], [181, 3, 1, "", "from_hdulist"], [181, 3, 1, "", "get_coord"], [181, 3, 1, "", "get_idx"], [181, 2, 1, "", "has_energy_axis"], [181, 2, 1, "", "is_allsky"], [181, 2, 1, "", "is_flat"], [181, 2, 1, "", "is_image"], [181, 3, 1, "", "pad"], [181, 3, 1, "", "pix_to_coord"], [181, 3, 1, "", "pix_to_idx"], [181, 3, 1, "", "rename_axes"], [181, 3, 1, "", "replace_axis"], [181, 3, 1, "", "resample_axis"], [181, 3, 1, "", "slice_by_idx"], [181, 3, 1, "", "solid_angle"], [181, 3, 1, "", "squash"], [181, 3, 1, "", "to_bands_hdu"], [181, 3, 1, "", "to_cube"], [181, 3, 1, "", "to_image"], [181, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[182, 2, 1, "", "as_energy_true"], [182, 2, 1, "", "axes"], [182, 2, 1, "", "axes_names"], [182, 2, 1, "", "center_coord"], [182, 2, 1, "", "center_pix"], [182, 2, 1, "", "center_skydir"], [182, 3, 1, "", "contains"], [182, 3, 1, "", "contains_pix"], [182, 3, 1, "", "coord_to_idx"], [182, 3, 1, "", "coord_to_pix"], [182, 3, 1, "", "copy"], [182, 3, 1, "", "create"], [182, 3, 1, "", "crop"], [182, 3, 1, "", "cutout"], [182, 3, 1, "", "data_nbytes"], [182, 2, 1, "", "data_shape"], [182, 2, 1, "", "data_shape_axes"], [182, 3, 1, "", "downsample"], [182, 3, 1, "", "drop"], [182, 3, 1, "", "energy_mask"], [182, 2, 1, "", "frame"], [182, 3, 1, "", "from_hdu"], [182, 3, 1, "", "from_hdulist"], [182, 3, 1, "", "from_header"], [182, 3, 1, "", "get_coord"], [182, 3, 1, "", "get_idx"], [182, 3, 1, "", "get_index_list"], [182, 3, 1, "", "global_to_local"], [182, 2, 1, "", "has_energy_axis"], [182, 3, 1, "", "interp_weights"], [182, 2, 1, "", "ipix"], [182, 3, 1, "", "is_aligned"], [182, 3, 1, "", "is_allclose"], [182, 2, 1, "", "is_allsky"], [182, 2, 1, "", "is_flat"], [182, 2, 1, "", "is_hpx"], [182, 2, 1, "", "is_image"], [182, 2, 1, "", "is_region"], [182, 2, 1, "", "is_regular"], [182, 3, 1, "", "local_to_global"], [182, 2, 1, "", "ndim"], [182, 2, 1, "", "nest"], [182, 2, 1, "", "npix"], [182, 2, 1, "", "npix_max"], [182, 2, 1, "", "nside"], [182, 2, 1, "", "order"], [182, 2, 1, "", "ordering"], [182, 3, 1, "", "pad"], [182, 3, 1, "", "pix_to_coord"], [182, 3, 1, "", "pix_to_idx"], [182, 2, 1, "", "pixel_scales"], [182, 2, 1, "", "projection"], [182, 2, 1, "", "region"], [182, 3, 1, "", "region_mask"], [182, 3, 1, "", "rename_axes"], [182, 3, 1, "", "replace_axis"], [182, 3, 1, "", "resample_axis"], [182, 3, 1, "", "separation"], [182, 2, 1, "", "shape_axes"], [182, 3, 1, "", "slice_by_idx"], [182, 3, 1, "", "solid_angle"], [182, 3, 1, "", "squash"], [182, 3, 1, "", "to_bands_hdu"], [182, 3, 1, "", "to_binsz"], [182, 3, 1, "", "to_cube"], [182, 3, 1, "", "to_header"], [182, 3, 1, "", "to_image"], [182, 3, 1, "", "to_nside"], [182, 3, 1, "", "to_swapped"], [182, 3, 1, "", "to_wcs_geom"], [182, 3, 1, "", "to_wcs_tiles"], [182, 3, 1, "", "upsample"], [182, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[183, 3, 1, "", "coadd"], [183, 3, 1, "", "copy"], [183, 3, 1, "", "create"], [183, 3, 1, "", "crop"], [183, 3, 1, "", "cumsum"], [183, 2, 1, "", "data"], [183, 3, 1, "", "dot"], [183, 3, 1, "", "downsample"], [183, 3, 1, "", "fill_by_coord"], [183, 3, 1, "", "fill_by_idx"], [183, 3, 1, "", "fill_by_pix"], [183, 3, 1, "", "fill_events"], [183, 3, 1, "", "from_geom"], [183, 3, 1, "", "from_hdulist"], [183, 3, 1, "", "from_stack"], [183, 2, 1, "", "geom"], [183, 3, 1, "", "get_by_coord"], [183, 3, 1, "", "get_by_idx"], [183, 3, 1, "", "get_by_pix"], [183, 3, 1, "", "get_image_by_coord"], [183, 3, 1, "", "get_image_by_idx"], [183, 3, 1, "", "get_image_by_pix"], [183, 3, 1, "", "get_spectrum"], [183, 3, 1, "", "integral"], [183, 3, 1, "", "interp_by_coord"], [183, 3, 1, "", "interp_by_pix"], [183, 3, 1, "", "interp_to_geom"], [183, 3, 1, "", "is_allclose"], [183, 2, 1, "", "is_mask"], [183, 3, 1, "", "iter_by_axis"], [183, 3, 1, "", "iter_by_image"], [183, 3, 1, "", "iter_by_image_data"], [183, 3, 1, "", "iter_by_image_index"], [183, 3, 1, "", "mask_nearest_position"], [183, 2, 1, "", "meta"], [183, 3, 1, "", "normalize"], [183, 3, 1, "", "pad"], [183, 3, 1, "", "plot_grid"], [183, 3, 1, "", "plot_interactive"], [183, 2, 1, "", "quantity"], [183, 3, 1, "", "read"], [183, 3, 1, "", "reduce"], [183, 3, 1, "", "reduce_over_axes"], [183, 3, 1, "", "rename_axes"], [183, 3, 1, "", "reorder_axes"], [183, 3, 1, "", "reproject_by_image"], [183, 3, 1, "", "reproject_to_geom"], [183, 3, 1, "", "resample"], [183, 3, 1, "", "resample_axis"], [183, 3, 1, "", "sample_coord"], [183, 3, 1, "", "set_by_coord"], [183, 3, 1, "", "set_by_idx"], [183, 3, 1, "", "set_by_pix"], [183, 3, 1, "", "slice_by_idx"], [183, 3, 1, "", "split_by_axis"], [183, 3, 1, "", "sum_over_axes"], [183, 2, 1, "", "tag"], [183, 3, 1, "", "to_cube"], [183, 3, 1, "", "to_hdu"], [183, 3, 1, "", "to_hdulist"], [183, 3, 1, "", "to_swapped"], [183, 3, 1, "", "to_unit"], [183, 3, 1, "", "to_wcs"], [183, 2, 1, "", "unit"], [183, 3, 1, "", "upsample"], [183, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[184, 3, 1, "", "coadd"], [184, 3, 1, "", "convolve"], [184, 3, 1, "", "convolve_full"], [184, 3, 1, "", "convolve_wcs"], [184, 3, 1, "", "copy"], [184, 3, 1, "", "create"], [184, 3, 1, "", "crop"], [184, 3, 1, "", "cumsum"], [184, 3, 1, "", "cutout"], [184, 2, 1, "", "data"], [184, 3, 1, "", "dot"], [184, 3, 1, "", "downsample"], [184, 3, 1, "", "fill_by_coord"], [184, 3, 1, "", "fill_by_idx"], [184, 3, 1, "", "fill_by_pix"], [184, 3, 1, "", "fill_events"], [184, 3, 1, "", "from_geom"], [184, 3, 1, "", "from_hdu"], [184, 3, 1, "", "from_hdulist"], [184, 3, 1, "", "from_stack"], [184, 3, 1, "", "from_wcs_tiles"], [184, 2, 1, "", "geom"], [184, 3, 1, "", "get_by_coord"], [184, 3, 1, "", "get_by_idx"], [184, 3, 1, "", "get_by_pix"], [184, 3, 1, "", "get_image_by_coord"], [184, 3, 1, "", "get_image_by_idx"], [184, 3, 1, "", "get_image_by_pix"], [184, 3, 1, "", "get_spectrum"], [184, 3, 1, "", "integral"], [184, 3, 1, "", "interp_by_coord"], [184, 3, 1, "", "interp_by_pix"], [184, 3, 1, "", "interp_to_geom"], [184, 3, 1, "", "is_allclose"], [184, 2, 1, "", "is_mask"], [184, 3, 1, "", "iter_by_axis"], [184, 3, 1, "", "iter_by_image"], [184, 3, 1, "", "iter_by_image_data"], [184, 3, 1, "", "iter_by_image_index"], [184, 3, 1, "", "mask_nearest_position"], [184, 2, 1, "", "meta"], [184, 3, 1, "", "normalize"], [184, 3, 1, "", "pad"], [184, 3, 1, "", "plot"], [184, 3, 1, "", "plot_grid"], [184, 3, 1, "", "plot_interactive"], [184, 3, 1, "", "plot_mask"], [184, 2, 1, "", "quantity"], [184, 3, 1, "", "read"], [184, 3, 1, "", "reduce"], [184, 3, 1, "", "reduce_over_axes"], [184, 3, 1, "", "rename_axes"], [184, 3, 1, "", "reorder_axes"], [184, 3, 1, "", "reproject_by_image"], [184, 3, 1, "", "reproject_to_geom"], [184, 3, 1, "", "resample"], [184, 3, 1, "", "resample_axis"], [184, 3, 1, "", "sample_coord"], [184, 3, 1, "", "set_by_coord"], [184, 3, 1, "", "set_by_idx"], [184, 3, 1, "", "set_by_pix"], [184, 3, 1, "", "slice_by_idx"], [184, 3, 1, "", "smooth"], [184, 3, 1, "", "split_by_axis"], [184, 3, 1, "", "stack"], [184, 3, 1, "", "sum_over_axes"], [184, 2, 1, "", "tag"], [184, 3, 1, "", "to_cube"], [184, 3, 1, "", "to_hdu"], [184, 3, 1, "", "to_hdulist"], [184, 3, 1, "", "to_nside"], [184, 3, 1, "", "to_region_nd_map"], [184, 3, 1, "", "to_swapped"], [184, 3, 1, "", "to_unit"], [184, 3, 1, "", "to_wcs"], [184, 3, 1, "", "to_wcs_tiles"], [184, 2, 1, "", "unit"], [184, 3, 1, "", "upsample"], [184, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[185, 2, 1, "", "as_plot_center"], [185, 2, 1, "", "as_plot_edges"], [185, 2, 1, "", "as_plot_labels"], [185, 2, 1, "", "as_plot_xerr"], [185, 3, 1, "", "assert_name"], [185, 2, 1, "", "bin_width"], [185, 2, 1, "", "center"], [185, 3, 1, "", "concatenate"], [185, 3, 1, "", "coord_to_idx"], [185, 3, 1, "", "coord_to_pix"], [185, 3, 1, "", "copy"], [185, 3, 1, "", "downsample"], [185, 2, 1, "", "edges"], [185, 2, 1, "", "edges_max"], [185, 2, 1, "", "edges_min"], [185, 3, 1, "", "format_plot_xaxis"], [185, 3, 1, "", "from_stack"], [185, 3, 1, "", "from_table"], [185, 3, 1, "", "is_allclose"], [185, 2, 1, "", "name"], [185, 2, 1, "", "nbin"], [185, 2, 1, "", "node_type"], [185, 3, 1, "", "pad"], [185, 3, 1, "", "pix_to_coord"], [185, 3, 1, "", "pix_to_idx"], [185, 3, 1, "", "resample"], [185, 3, 1, "", "slice"], [185, 3, 1, "", "squash"], [185, 3, 1, "", "to_header"], [185, 2, 1, "", "unit"], [185, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[186, 3, 1, "", "coadd"], [186, 3, 1, "", "copy"], [186, 3, 1, "", "create"], [186, 3, 1, "", "crop"], [186, 3, 1, "", "cumsum"], [186, 2, 1, "", "data"], [186, 3, 1, "", "dot"], [186, 3, 1, "", "downsample"], [186, 3, 1, "", "fill_by_coord"], [186, 3, 1, "", "fill_by_idx"], [186, 3, 1, "", "fill_by_pix"], [186, 3, 1, "", "fill_events"], [186, 3, 1, "", "from_geom"], [186, 3, 1, "", "from_hdulist"], [186, 3, 1, "", "from_stack"], [186, 2, 1, "", "geom"], [186, 3, 1, "", "get_by_coord"], [186, 3, 1, "", "get_by_idx"], [186, 3, 1, "", "get_by_pix"], [186, 3, 1, "", "get_image_by_coord"], [186, 3, 1, "", "get_image_by_idx"], [186, 3, 1, "", "get_image_by_pix"], [186, 3, 1, "", "get_spectrum"], [186, 3, 1, "", "integral"], [186, 3, 1, "", "interp_by_coord"], [186, 3, 1, "", "interp_by_pix"], [186, 3, 1, "", "interp_to_geom"], [186, 3, 1, "", "is_allclose"], [186, 2, 1, "", "is_mask"], [186, 3, 1, "", "iter_by_axis"], [186, 3, 1, "", "iter_by_image"], [186, 3, 1, "", "iter_by_image_data"], [186, 3, 1, "", "iter_by_image_index"], [186, 3, 1, "", "mask_nearest_position"], [186, 2, 1, "", "meta"], [186, 3, 1, "", "normalize"], [186, 3, 1, "", "pad"], [186, 3, 1, "", "plot_grid"], [186, 3, 1, "", "plot_interactive"], [186, 2, 1, "", "quantity"], [186, 3, 1, "", "read"], [186, 3, 1, "", "reduce"], [186, 3, 1, "", "reduce_over_axes"], [186, 3, 1, "", "rename_axes"], [186, 3, 1, "", "reorder_axes"], [186, 3, 1, "", "reproject_by_image"], [186, 3, 1, "", "reproject_to_geom"], [186, 3, 1, "", "resample"], [186, 3, 1, "", "resample_axis"], [186, 3, 1, "", "sample_coord"], [186, 3, 1, "", "set_by_coord"], [186, 3, 1, "", "set_by_idx"], [186, 3, 1, "", "set_by_pix"], [186, 3, 1, "", "slice_by_idx"], [186, 3, 1, "", "split_by_axis"], [186, 3, 1, "", "sum_over_axes"], [186, 2, 1, "", "tag"], [186, 3, 1, "", "to_cube"], [186, 3, 1, "", "to_unit"], [186, 2, 1, "", "unit"], [186, 3, 1, "", "upsample"], [186, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[187, 3, 1, "", "assert_names"], [187, 3, 1, "", "bin_volume"], [187, 2, 1, "", "center_coord"], [187, 3, 1, "", "coord_to_idx"], [187, 3, 1, "", "coord_to_pix"], [187, 3, 1, "", "copy"], [187, 3, 1, "", "count"], [187, 3, 1, "", "downsample"], [187, 3, 1, "", "drop"], [187, 3, 1, "", "from_default"], [187, 3, 1, "", "from_table"], [187, 3, 1, "", "from_table_hdu"], [187, 3, 1, "", "get_coord"], [187, 3, 1, "", "index"], [187, 3, 1, "", "index_data"], [187, 3, 1, "", "is_allclose"], [187, 2, 1, "", "is_flat"], [187, 2, 1, "", "is_unidimensional"], [187, 2, 1, "", "iter_with_reshape"], [187, 2, 1, "", "names"], [187, 3, 1, "", "pad"], [187, 3, 1, "", "pix_to_coord"], [187, 3, 1, "", "pix_to_idx"], [187, 2, 1, "", "primary_axis"], [187, 3, 1, "", "rename_axes"], [187, 3, 1, "", "replace"], [187, 3, 1, "", "resample"], [187, 2, 1, "", "reverse"], [187, 2, 1, "", "shape"], [187, 3, 1, "", "slice_by_idx"], [187, 3, 1, "", "squash"], [187, 3, 1, "", "to_header"], [187, 3, 1, "", "to_table"], [187, 3, 1, "", "to_table_hdu"], [187, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[188, 2, 1, "", "as_plot_center"], [188, 2, 1, "", "as_plot_edges"], [188, 2, 1, "", "as_plot_labels"], [188, 2, 1, "", "as_plot_scale"], [188, 2, 1, "", "as_plot_xerr"], [188, 3, 1, "", "assert_name"], [188, 2, 1, "", "bin_width"], [188, 2, 1, "", "bounds"], [188, 2, 1, "", "center"], [188, 3, 1, "", "concatenate"], [188, 3, 1, "", "coord_to_idx"], [188, 3, 1, "", "coord_to_pix"], [188, 3, 1, "", "copy"], [188, 3, 1, "", "downsample"], [188, 2, 1, "", "edges"], [188, 2, 1, "", "edges_max"], [188, 2, 1, "", "edges_min"], [188, 3, 1, "", "format_plot_xaxis"], [188, 3, 1, "", "format_plot_yaxis"], [188, 3, 1, "", "from_bounds"], [188, 3, 1, "", "from_edges"], [188, 3, 1, "", "from_energy_bounds"], [188, 3, 1, "", "from_energy_edges"], [188, 3, 1, "", "from_nodes"], [188, 3, 1, "", "from_stack"], [188, 3, 1, "", "from_table"], [188, 3, 1, "", "from_table_hdu"], [188, 3, 1, "", "group_table"], [188, 2, 1, "", "interp"], [188, 3, 1, "", "is_aligned"], [188, 3, 1, "", "is_allclose"], [188, 2, 1, "", "is_energy_axis"], [188, 2, 1, "", "iter_by_edges"], [188, 2, 1, "", "name"], [188, 2, 1, "", "nbin"], [188, 2, 1, "", "nbin_per_decade"], [188, 2, 1, "", "node_type"], [188, 3, 1, "", "pad"], [188, 3, 1, "", "pix_to_coord"], [188, 3, 1, "", "pix_to_idx"], [188, 3, 1, "", "rename"], [188, 3, 1, "", "round"], [188, 3, 1, "", "slice"], [188, 3, 1, "", "squash"], [188, 3, 1, "", "to_header"], [188, 3, 1, "", "to_node_type"], [188, 3, 1, "", "to_table"], [188, 3, 1, "", "to_table_hdu"], [188, 2, 1, "", "unit"], [188, 3, 1, "", "upsample"], [188, 2, 1, "", "use_center_as_plot_labels"], [188, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[189, 3, 1, "", "apply_mask"], [189, 2, 1, "", "axis_names"], [189, 2, 1, "", "broadcasted"], [189, 3, 1, "", "copy"], [189, 3, 1, "", "create"], [189, 2, 1, "", "flat"], [189, 2, 1, "", "frame"], [189, 2, 1, "", "lat"], [189, 2, 1, "", "lon"], [189, 2, 1, "", "match_by_name"], [189, 2, 1, "", "ndim"], [189, 2, 1, "", "phi"], [189, 2, 1, "", "shape"], [189, 2, 1, "", "size"], [189, 2, 1, "", "skycoord"], [189, 2, 1, "", "theta"], [189, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[190, 3, 1, "", "clear"], [190, 3, 1, "", "from_geom"], [190, 3, 1, "", "from_hdulist"], [190, 2, 1, "", "geom"], [190, 3, 1, "", "get"], [190, 3, 1, "", "items"], [190, 3, 1, "", "keys"], [190, 3, 1, "", "pop"], [190, 3, 1, "", "popitem"], [190, 3, 1, "", "read"], [190, 3, 1, "", "setdefault"], [190, 3, 1, "", "to_hdulist"], [190, 3, 1, "", "update"], [190, 3, 1, "", "values"], [190, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[191, 2, 1, "", "as_energy_true"], [191, 2, 1, "", "axes"], [191, 2, 1, "", "axes_names"], [191, 3, 1, "", "bin_volume"], [191, 2, 1, "", "binsz_wcs"], [191, 2, 1, "", "center_coord"], [191, 2, 1, "", "center_pix"], [191, 2, 1, "", "center_skydir"], [191, 3, 1, "", "contains"], [191, 3, 1, "", "contains_pix"], [191, 3, 1, "", "contains_wcs_pix"], [191, 3, 1, "", "coord_to_idx"], [191, 3, 1, "", "coord_to_pix"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "create"], [191, 3, 1, "", "crop"], [191, 3, 1, "", "data_nbytes"], [191, 2, 1, "", "data_shape"], [191, 2, 1, "", "data_shape_axes"], [191, 3, 1, "", "downsample"], [191, 3, 1, "", "drop"], [191, 3, 1, "", "energy_mask"], [191, 2, 1, "", "frame"], [191, 3, 1, "", "from_hdulist"], [191, 3, 1, "", "from_regions"], [191, 3, 1, "", "get_coord"], [191, 3, 1, "", "get_idx"], [191, 3, 1, "", "get_wcs_coord_and_weights"], [191, 2, 1, "", "has_energy_axis"], [191, 2, 1, "", "is_all_point_sky_regions"], [191, 3, 1, "", "is_allclose"], [191, 2, 1, "", "is_allsky"], [191, 2, 1, "", "is_flat"], [191, 2, 1, "", "is_hpx"], [191, 2, 1, "", "is_image"], [191, 2, 1, "", "is_region"], [191, 2, 1, "", "is_regular"], [191, 2, 1, "", "npix"], [191, 3, 1, "", "pad"], [191, 3, 1, "", "pix_to_coord"], [191, 3, 1, "", "pix_to_idx"], [191, 3, 1, "", "plot_region"], [191, 2, 1, "", "projection"], [191, 2, 1, "", "region"], [191, 3, 1, "", "rename_axes"], [191, 3, 1, "", "replace_axis"], [191, 3, 1, "", "resample_axis"], [191, 3, 1, "", "separation"], [191, 3, 1, "", "slice_by_idx"], [191, 3, 1, "", "solid_angle"], [191, 3, 1, "", "squash"], [191, 3, 1, "", "to_bands_hdu"], [191, 3, 1, "", "to_binsz"], [191, 3, 1, "", "to_binsz_wcs"], [191, 3, 1, "", "to_cube"], [191, 3, 1, "", "to_hdulist"], [191, 3, 1, "", "to_image"], [191, 3, 1, "", "to_wcs_geom"], [191, 3, 1, "", "union"], [191, 3, 1, "", "upsample"], [191, 2, 1, "", "wcs"], [191, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[192, 3, 1, "", "coadd"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "create"], [192, 3, 1, "", "crop"], [192, 3, 1, "", "cumsum"], [192, 3, 1, "", "cutout"], [192, 2, 1, "", "data"], [192, 3, 1, "", "dot"], [192, 3, 1, "", "downsample"], [192, 3, 1, "", "fill_by_coord"], [192, 3, 1, "", "fill_by_idx"], [192, 3, 1, "", "fill_by_pix"], [192, 3, 1, "", "fill_events"], [192, 3, 1, "", "from_geom"], [192, 3, 1, "", "from_hdulist"], [192, 3, 1, "", "from_stack"], [192, 3, 1, "", "from_table"], [192, 2, 1, "", "geom"], [192, 3, 1, "", "get_by_coord"], [192, 3, 1, "", "get_by_idx"], [192, 3, 1, "", "get_by_pix"], [192, 3, 1, "", "get_image_by_coord"], [192, 3, 1, "", "get_image_by_idx"], [192, 3, 1, "", "get_image_by_pix"], [192, 3, 1, "", "get_spectrum"], [192, 3, 1, "", "integral"], [192, 3, 1, "", "interp_by_coord"], [192, 3, 1, "", "interp_by_pix"], [192, 3, 1, "", "interp_to_geom"], [192, 3, 1, "", "is_allclose"], [192, 2, 1, "", "is_mask"], [192, 3, 1, "", "iter_by_axis"], [192, 3, 1, "", "iter_by_axis_data"], [192, 3, 1, "", "iter_by_image"], [192, 3, 1, "", "iter_by_image_data"], [192, 3, 1, "", "iter_by_image_index"], [192, 3, 1, "", "mask_nearest_position"], [192, 2, 1, "", "meta"], [192, 3, 1, "", "normalize"], [192, 3, 1, "", "pad"], [192, 3, 1, "", "plot"], [192, 3, 1, "", "plot_grid"], [192, 3, 1, "", "plot_hist"], [192, 3, 1, "", "plot_interactive"], [192, 3, 1, "", "plot_mask"], [192, 3, 1, "", "plot_region"], [192, 2, 1, "", "quantity"], [192, 3, 1, "", "read"], [192, 3, 1, "", "reduce"], [192, 3, 1, "", "reduce_over_axes"], [192, 3, 1, "", "rename_axes"], [192, 3, 1, "", "reorder_axes"], [192, 3, 1, "", "reproject_by_image"], [192, 3, 1, "", "reproject_to_geom"], [192, 3, 1, "", "resample"], [192, 3, 1, "", "resample_axis"], [192, 3, 1, "", "sample_coord"], [192, 3, 1, "", "set_by_coord"], [192, 3, 1, "", "set_by_idx"], [192, 3, 1, "", "set_by_pix"], [192, 3, 1, "", "slice_by_idx"], [192, 3, 1, "", "split_by_axis"], [192, 3, 1, "", "stack"], [192, 3, 1, "", "sum_over_axes"], [192, 2, 1, "", "tag"], [192, 3, 1, "", "to_cube"], [192, 3, 1, "", "to_hdulist"], [192, 3, 1, "", "to_region_nd_map"], [192, 3, 1, "", "to_table"], [192, 3, 1, "", "to_unit"], [192, 2, 1, "", "unit"], [192, 3, 1, "", "upsample"], [192, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[193, 2, 1, "", "as_plot_center"], [193, 2, 1, "", "as_plot_edges"], [193, 2, 1, "", "as_plot_labels"], [193, 2, 1, "", "as_plot_xerr"], [193, 3, 1, "", "assert_name"], [193, 2, 1, "", "bin_width"], [193, 2, 1, "", "bounds"], [193, 2, 1, "", "center"], [193, 3, 1, "", "coord_to_idx"], [193, 3, 1, "", "coord_to_pix"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "downsample"], [193, 2, 1, "", "edges"], [193, 2, 1, "", "edges_max"], [193, 2, 1, "", "edges_min"], [193, 3, 1, "", "format_plot_xaxis"], [193, 3, 1, "", "from_gti"], [193, 3, 1, "", "from_gti_bounds"], [193, 3, 1, "", "from_table"], [193, 3, 1, "", "from_time_bounds"], [193, 3, 1, "", "from_time_edges"], [193, 3, 1, "", "group_table"], [193, 2, 1, "", "interp"], [193, 3, 1, "", "is_aligned"], [193, 3, 1, "", "is_allclose"], [193, 2, 1, "", "is_contiguous"], [193, 2, 1, "", "iter_by_edges"], [193, 2, 1, "", "name"], [193, 2, 1, "", "nbin"], [193, 2, 1, "", "node_type"], [193, 3, 1, "", "pix_to_coord"], [193, 3, 1, "", "pix_to_idx"], [193, 2, 1, "", "reference_time"], [193, 3, 1, "", "slice"], [193, 3, 1, "", "squash"], [193, 2, 1, "", "time_bounds"], [193, 2, 1, "", "time_delta"], [193, 2, 1, "", "time_edges"], [193, 2, 1, "", "time_format"], [193, 2, 1, "", "time_max"], [193, 2, 1, "", "time_mid"], [193, 2, 1, "", "time_min"], [193, 3, 1, "", "to_contiguous"], [193, 3, 1, "", "to_gti"], [193, 3, 1, "", "to_header"], [193, 2, 1, "", "unit"], [193, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[194, 2, 1, "", "as_energy_true"], [194, 2, 1, "", "axes"], [194, 2, 1, "", "axes_names"], [194, 3, 1, "", "bin_volume"], [194, 3, 1, "", "binary_structure"], [194, 3, 1, "", "boundary_mask"], [194, 2, 1, "", "center_coord"], [194, 2, 1, "", "center_pix"], [194, 2, 1, "", "center_skydir"], [194, 3, 1, "", "contains"], [194, 3, 1, "", "contains_pix"], [194, 3, 1, "", "coord_to_idx"], [194, 3, 1, "", "coord_to_pix"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "cutout"], [194, 3, 1, "", "cutout_slices"], [194, 3, 1, "", "data_nbytes"], [194, 2, 1, "", "data_shape"], [194, 2, 1, "", "data_shape_axes"], [194, 2, 1, "", "data_shape_image"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "drop"], [194, 3, 1, "", "energy_mask"], [194, 2, 1, "", "footprint"], [194, 2, 1, "", "footprint_rectangle_sky_region"], [194, 2, 1, "", "frame"], [194, 3, 1, "", "from_aligned"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "from_header"], [194, 3, 1, "", "get_coord"], [194, 3, 1, "", "get_idx"], [194, 3, 1, "", "get_pix"], [194, 2, 1, "", "has_energy_axis"], [194, 3, 1, "", "is_aligned"], [194, 3, 1, "", "is_allclose"], [194, 2, 1, "", "is_allsky"], [194, 2, 1, "", "is_flat"], [194, 2, 1, "", "is_hpx"], [194, 2, 1, "", "is_image"], [194, 2, 1, "", "is_region"], [194, 2, 1, "", "is_regular"], [194, 2, 1, "", "ndim"], [194, 2, 1, "", "npix"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "pix_to_coord"], [194, 3, 1, "", "pix_to_idx"], [194, 2, 1, "", "pixel_area"], [194, 2, 1, "", "pixel_scales"], [194, 2, 1, "", "projection"], [194, 3, 1, "", "region_mask"], [194, 3, 1, "", "region_weights"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "replace_axis"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "separation"], [194, 2, 1, "", "shape_axes"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "solid_angle"], [194, 3, 1, "", "squash"], [194, 3, 1, "", "to_bands_hdu"], [194, 3, 1, "", "to_binsz"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_even_npix"], [194, 3, 1, "", "to_header"], [194, 3, 1, "", "to_image"], [194, 3, 1, "", "to_odd_npix"], [194, 3, 1, "", "upsample"], [194, 2, 1, "", "wcs"], [194, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[195, 3, 1, "", "coadd"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "cumsum"], [195, 2, 1, "", "data"], [195, 3, 1, "", "dot"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "fill_by_coord"], [195, 3, 1, "", "fill_by_idx"], [195, 3, 1, "", "fill_by_pix"], [195, 3, 1, "", "fill_events"], [195, 3, 1, "", "from_geom"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_stack"], [195, 2, 1, "", "geom"], [195, 3, 1, "", "get_by_coord"], [195, 3, 1, "", "get_by_idx"], [195, 3, 1, "", "get_by_pix"], [195, 3, 1, "", "get_image_by_coord"], [195, 3, 1, "", "get_image_by_idx"], [195, 3, 1, "", "get_image_by_pix"], [195, 3, 1, "", "get_spectrum"], [195, 3, 1, "", "integral"], [195, 3, 1, "", "interp_by_coord"], [195, 3, 1, "", "interp_by_pix"], [195, 3, 1, "", "interp_to_geom"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_mask"], [195, 3, 1, "", "iter_by_axis"], [195, 3, 1, "", "iter_by_image"], [195, 3, 1, "", "iter_by_image_data"], [195, 3, 1, "", "iter_by_image_index"], [195, 3, 1, "", "mask_nearest_position"], [195, 2, 1, "", "meta"], [195, 3, 1, "", "normalize"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "plot_grid"], [195, 3, 1, "", "plot_interactive"], [195, 2, 1, "", "quantity"], [195, 3, 1, "", "read"], [195, 3, 1, "", "reduce"], [195, 3, 1, "", "reduce_over_axes"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "reorder_axes"], [195, 3, 1, "", "reproject_by_image"], [195, 3, 1, "", "reproject_to_geom"], [195, 3, 1, "", "resample"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "sample_coord"], [195, 3, 1, "", "set_by_coord"], [195, 3, 1, "", "set_by_idx"], [195, 3, 1, "", "set_by_pix"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "split_by_axis"], [195, 3, 1, "", "sum_over_axes"], [195, 2, 1, "", "tag"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_hdu"], [195, 3, 1, "", "to_hdulist"], [195, 3, 1, "", "to_unit"], [195, 2, 1, "", "unit"], [195, 3, 1, "", "upsample"], [195, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[196, 3, 1, "", "binary_dilate"], [196, 3, 1, "", "binary_erode"], [196, 3, 1, "", "coadd"], [196, 3, 1, "", "convolve"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 3, 1, "", "cutout"], [196, 3, 1, "", "cutout_and_mask_region"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdu"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_contains_region"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_interactive"], [196, 3, 1, "", "plot_mask"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "smooth"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "stack"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdu"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_region_nd_map"], [196, 3, 1, "", "to_region_nd_map_histogram"], [196, 3, 1, "", "to_unit"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.modeling": [[199, 1, 1, "", "Covariance"], [200, 1, 1, "", "CovarianceResult"], [201, 1, 1, "", "Fit"], [202, 1, 1, "", "FitResult"], [203, 1, 1, "", "OptimizeResult"], [204, 1, 1, "", "Parameter"], [205, 1, 1, "", "Parameters"], [206, 1, 1, "", "PriorParameter"], [207, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [273, 4, 1, "", "select_nested_models"], [274, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[199, 2, 1, "", "correlation"], [199, 2, 1, "", "data"], [199, 3, 1, "", "from_factor_matrix"], [199, 3, 1, "", "from_stack"], [199, 3, 1, "", "get_subcovariance"], [199, 3, 1, "", "plot_correlation"], [199, 2, 1, "", "scipy_mvn"], [199, 3, 1, "", "set_subcovariance"], [199, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[200, 2, 1, "", "backend"], [200, 2, 1, "", "matrix"], [200, 2, 1, "", "message"], [200, 2, 1, "", "method"], [200, 2, 1, "", "success"], [200, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[201, 3, 1, "", "confidence"], [201, 3, 1, "", "covariance"], [201, 3, 1, "", "optimize"], [201, 3, 1, "", "run"], [201, 3, 1, "", "stat_contour"], [201, 3, 1, "", "stat_profile"], [201, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[202, 2, 1, "", "backend"], [202, 2, 1, "", "covariance_result"], [202, 2, 1, "", "message"], [202, 2, 1, "", "method"], [202, 2, 1, "", "minuit"], [202, 2, 1, "", "models"], [202, 2, 1, "", "nfev"], [202, 2, 1, "", "optimize_result"], [202, 2, 1, "", "parameters"], [202, 2, 1, "", "success"], [202, 3, 1, "", "to_dict"], [202, 3, 1, "", "to_yaml"], [202, 2, 1, "", "total_stat"], [202, 2, 1, "", "trace"], [202, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[203, 2, 1, "", "backend"], [203, 2, 1, "", "message"], [203, 2, 1, "", "method"], [203, 2, 1, "", "minuit"], [203, 2, 1, "", "models"], [203, 2, 1, "", "nfev"], [203, 2, 1, "", "parameters"], [203, 2, 1, "", "success"], [203, 3, 1, "", "to_dict"], [203, 2, 1, "", "total_stat"], [203, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[204, 3, 1, "", "autoscale"], [204, 3, 1, "", "check_limits"], [204, 2, 1, "", "conf_max"], [204, 2, 1, "", "conf_min"], [204, 3, 1, "", "copy"], [204, 2, 1, "", "error"], [204, 2, 1, "", "factor"], [204, 2, 1, "", "factor_max"], [204, 2, 1, "", "factor_min"], [204, 2, 1, "", "frozen"], [204, 2, 1, "", "is_norm"], [204, 2, 1, "", "max"], [204, 2, 1, "", "min"], [204, 2, 1, "", "name"], [204, 2, 1, "", "norm_parameters"], [204, 2, 1, "", "prior"], [204, 3, 1, "", "prior_stat_sum"], [204, 2, 1, "", "quantity"], [204, 2, 1, "", "scale"], [204, 2, 1, "", "scale_method"], [204, 2, 1, "", "scan_max"], [204, 2, 1, "", "scan_min"], [204, 2, 1, "", "scan_n_sigma"], [204, 2, 1, "", "scan_values"], [204, 3, 1, "", "to_dict"], [204, 2, 1, "", "type"], [204, 2, 1, "", "unit"], [204, 3, 1, "", "update_from_dict"], [204, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[205, 3, 1, "", "autoscale"], [205, 3, 1, "", "check_limits"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "count"], [205, 2, 1, "", "free_parameters"], [205, 3, 1, "", "freeze_all"], [205, 3, 1, "", "from_dict"], [205, 3, 1, "", "from_stack"], [205, 3, 1, "", "index"], [205, 2, 1, "", "max"], [205, 2, 1, "", "min"], [205, 2, 1, "", "names"], [205, 2, 1, "", "norm_parameters"], [205, 2, 1, "", "prior"], [205, 3, 1, "", "prior_stat_sum"], [205, 3, 1, "", "restore_status"], [205, 3, 1, "", "select"], [205, 3, 1, "", "set_parameter_factors"], [205, 3, 1, "", "to_dict"], [205, 3, 1, "", "to_table"], [205, 2, 1, "", "types"], [205, 3, 1, "", "unfreeze_all"], [205, 2, 1, "", "unique_parameters"], [205, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[206, 3, 1, "", "autoscale"], [206, 3, 1, "", "check_limits"], [206, 2, 1, "", "conf_max"], [206, 2, 1, "", "conf_min"], [206, 3, 1, "", "copy"], [206, 2, 1, "", "error"], [206, 2, 1, "", "factor"], [206, 2, 1, "", "factor_max"], [206, 2, 1, "", "factor_min"], [206, 2, 1, "", "frozen"], [206, 2, 1, "", "is_norm"], [206, 2, 1, "", "max"], [206, 2, 1, "", "min"], [206, 2, 1, "", "name"], [206, 2, 1, "", "norm_parameters"], [206, 2, 1, "", "prior"], [206, 3, 1, "", "prior_stat_sum"], [206, 2, 1, "", "quantity"], [206, 2, 1, "", "scale"], [206, 2, 1, "", "scale_method"], [206, 2, 1, "", "scan_max"], [206, 2, 1, "", "scan_min"], [206, 2, 1, "", "scan_n_sigma"], [206, 2, 1, "", "scan_values"], [206, 3, 1, "", "to_dict"], [206, 2, 1, "", "type"], [206, 2, 1, "", "unit"], [206, 3, 1, "", "update_from_dict"], [206, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[207, 3, 1, "", "autoscale"], [207, 3, 1, "", "check_limits"], [207, 3, 1, "", "copy"], [207, 3, 1, "", "count"], [207, 2, 1, "", "free_parameters"], [207, 3, 1, "", "freeze_all"], [207, 3, 1, "", "from_dict"], [207, 3, 1, "", "from_stack"], [207, 3, 1, "", "index"], [207, 2, 1, "", "max"], [207, 2, 1, "", "min"], [207, 2, 1, "", "names"], [207, 2, 1, "", "norm_parameters"], [207, 2, 1, "", "prior"], [207, 3, 1, "", "prior_stat_sum"], [207, 3, 1, "", "restore_status"], [207, 3, 1, "", "select"], [207, 3, 1, "", "set_parameter_factors"], [207, 3, 1, "", "to_dict"], [207, 3, 1, "", "to_table"], [207, 2, 1, "", "types"], [207, 3, 1, "", "unfreeze_all"], [207, 2, 1, "", "unique_parameters"], [207, 2, 1, "", "value"]], "gammapy.modeling.models": [[208, 1, 1, "", "BrokenPowerLawSpectralModel"], [209, 1, 1, "", "CompoundSpectralModel"], [210, 1, 1, "", "ConstantFluxSpatialModel"], [211, 1, 1, "", "ConstantSpatialModel"], [212, 1, 1, "", "ConstantSpectralModel"], [213, 1, 1, "", "ConstantTemporalModel"], [214, 1, 1, "", "DatasetModels"], [215, 1, 1, "", "DiskSpatialModel"], [216, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [217, 5, 1, "", "EBL_DATA_BUILTIN"], [218, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [219, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [220, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [221, 1, 1, "", "ExpDecayTemporalModel"], [222, 1, 1, "", "FoVBackgroundModel"], [223, 1, 1, "", "GaussianSpatialModel"], [224, 1, 1, "", "GaussianSpectralModel"], [225, 1, 1, "", "GaussianTemporalModel"], [226, 1, 1, "", "GeneralizedGaussianSpatialModel"], [227, 1, 1, "", "GeneralizedGaussianTemporalModel"], [228, 1, 1, "", "LightCurveTemplateTemporalModel"], [229, 1, 1, "", "LinearTemporalModel"], [230, 1, 1, "", "LogParabolaNormSpectralModel"], [231, 1, 1, "", "LogParabolaSpectralModel"], [232, 5, 1, "", "MODEL_REGISTRY"], [233, 1, 1, "", "MeyerCrabSpectralModel"], [234, 1, 1, "", "Model"], [235, 1, 1, "", "ModelBase"], [236, 1, 1, "", "Models"], [237, 1, 1, "", "NaimaSpectralModel"], [238, 1, 1, "", "PiecewiseNormSpatialModel"], [239, 1, 1, "", "PiecewiseNormSpectralModel"], [240, 1, 1, "", "PointSpatialModel"], [241, 1, 1, "", "PowerLaw2SpectralModel"], [242, 1, 1, "", "PowerLawNormSpectralModel"], [243, 1, 1, "", "PowerLawSpectralModel"], [244, 1, 1, "", "PowerLawTemporalModel"], [245, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [246, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [247, 1, 1, "", "ScaleSpectralModel"], [248, 1, 1, "", "Shell2SpatialModel"], [249, 1, 1, "", "ShellSpatialModel"], [250, 1, 1, "", "SineTemporalModel"], [251, 1, 1, "", "SkyModel"], [252, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [253, 1, 1, "", "SpatialModel"], [254, 1, 1, "", "SpectralModel"], [255, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [256, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [257, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [258, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [259, 1, 1, "", "TemplateNDSpatialModel"], [260, 1, 1, "", "TemplateNDSpectralModel"], [261, 1, 1, "", "TemplateNPredModel"], [262, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [263, 1, 1, "", "TemplateSpatialModel"], [264, 1, 1, "", "TemplateSpectralModel"], [265, 1, 1, "", "TemporalModel"], [266, 4, 1, "", "create_cosmic_ray_spectral_model"], [267, 4, 1, "", "create_crab_spectral_model"], [268, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [269, 4, 1, "", "integrate_spectrum"], [270, 4, 1, "", "read_hermes_cube"], [271, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[208, 3, 1, "", "__call__"], [208, 2, 1, "", "amplitude"], [208, 3, 1, "", "copy"], [208, 2, 1, "", "covariance"], [208, 2, 1, "", "default_parameters"], [208, 2, 1, "", "ebreak"], [208, 3, 1, "", "energy_flux"], [208, 3, 1, "", "energy_flux_error"], [208, 3, 1, "", "evaluate"], [208, 3, 1, "", "evaluate_error"], [208, 3, 1, "", "freeze"], [208, 3, 1, "", "from_dict"], [208, 3, 1, "", "from_parameters"], [208, 2, 1, "", "frozen"], [208, 2, 1, "", "index1"], [208, 2, 1, "", "index2"], [208, 3, 1, "", "integral"], [208, 3, 1, "", "integral_error"], [208, 3, 1, "", "inverse"], [208, 3, 1, "", "inverse_all"], [208, 2, 1, "", "is_norm_spectral_model"], [208, 2, 1, "", "parameters"], [208, 2, 1, "", "pivot_energy"], [208, 3, 1, "", "plot"], [208, 3, 1, "", "plot_error"], [208, 3, 1, "", "reassign"], [208, 3, 1, "", "reference_fluxes"], [208, 3, 1, "", "spectral_index"], [208, 3, 1, "", "spectral_index_error"], [208, 2, 1, "", "tag"], [208, 3, 1, "", "to_dict"], [208, 2, 1, "", "type"], [208, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[209, 3, 1, "", "__call__"], [209, 3, 1, "", "copy"], [209, 2, 1, "", "covariance"], [209, 2, 1, "", "default_parameters"], [209, 3, 1, "", "energy_flux"], [209, 3, 1, "", "energy_flux_error"], [209, 3, 1, "", "evaluate"], [209, 3, 1, "", "evaluate_error"], [209, 3, 1, "", "freeze"], [209, 3, 1, "", "from_dict"], [209, 3, 1, "", "from_parameters"], [209, 2, 1, "", "frozen"], [209, 3, 1, "", "integral"], [209, 3, 1, "", "integral_error"], [209, 3, 1, "", "inverse"], [209, 3, 1, "", "inverse_all"], [209, 2, 1, "", "is_norm_spectral_model"], [209, 2, 1, "", "parameters"], [209, 2, 1, "", "pivot_energy"], [209, 3, 1, "", "plot"], [209, 3, 1, "", "plot_error"], [209, 3, 1, "", "reassign"], [209, 3, 1, "", "reference_fluxes"], [209, 3, 1, "", "spectral_index"], [209, 3, 1, "", "spectral_index_error"], [209, 2, 1, "", "tag"], [209, 3, 1, "", "to_dict"], [209, 2, 1, "", "type"], [209, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[210, 3, 1, "", "__call__"], [210, 3, 1, "", "copy"], [210, 2, 1, "", "covariance"], [210, 2, 1, "", "default_parameters"], [210, 3, 1, "", "evaluate"], [210, 3, 1, "", "evaluate_geom"], [210, 2, 1, "", "evaluation_bin_size_min"], [210, 2, 1, "", "evaluation_radius"], [210, 2, 1, "", "evaluation_region"], [210, 2, 1, "", "frame"], [210, 3, 1, "", "freeze"], [210, 3, 1, "", "from_dict"], [210, 3, 1, "", "from_parameters"], [210, 3, 1, "", "from_position"], [210, 2, 1, "", "frozen"], [210, 3, 1, "", "integrate_geom"], [210, 2, 1, "", "is_energy_dependent"], [210, 2, 1, "", "parameters"], [210, 2, 1, "", "phi_0"], [210, 3, 1, "", "plot"], [210, 3, 1, "", "plot_error"], [210, 3, 1, "", "plot_grid"], [210, 3, 1, "", "plot_interactive"], [210, 3, 1, "", "plot_position_error"], [210, 2, 1, "", "position"], [210, 2, 1, "", "position_error"], [210, 2, 1, "", "position_lonlat"], [210, 3, 1, "", "reassign"], [210, 2, 1, "", "tag"], [210, 3, 1, "", "to_dict"], [210, 3, 1, "", "to_region"], [210, 2, 1, "", "type"], [210, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[211, 3, 1, "", "__call__"], [211, 3, 1, "", "copy"], [211, 2, 1, "", "covariance"], [211, 2, 1, "", "default_parameters"], [211, 3, 1, "", "evaluate"], [211, 3, 1, "", "evaluate_geom"], [211, 2, 1, "", "evaluation_bin_size_min"], [211, 2, 1, "", "evaluation_radius"], [211, 2, 1, "", "evaluation_region"], [211, 2, 1, "", "frame"], [211, 3, 1, "", "freeze"], [211, 3, 1, "", "from_dict"], [211, 3, 1, "", "from_parameters"], [211, 3, 1, "", "from_position"], [211, 2, 1, "", "frozen"], [211, 3, 1, "", "integrate_geom"], [211, 2, 1, "", "is_energy_dependent"], [211, 2, 1, "", "parameters"], [211, 2, 1, "", "phi_0"], [211, 3, 1, "", "plot"], [211, 3, 1, "", "plot_error"], [211, 3, 1, "", "plot_grid"], [211, 3, 1, "", "plot_interactive"], [211, 3, 1, "", "plot_position_error"], [211, 2, 1, "", "position"], [211, 2, 1, "", "position_error"], [211, 2, 1, "", "position_lonlat"], [211, 3, 1, "", "reassign"], [211, 2, 1, "", "tag"], [211, 3, 1, "", "to_dict"], [211, 3, 1, "", "to_region"], [211, 2, 1, "", "type"], [211, 3, 1, "", "unfreeze"], [211, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[212, 3, 1, "", "__call__"], [212, 2, 1, "", "const"], [212, 3, 1, "", "copy"], [212, 2, 1, "", "covariance"], [212, 2, 1, "", "default_parameters"], [212, 3, 1, "", "energy_flux"], [212, 3, 1, "", "energy_flux_error"], [212, 3, 1, "", "evaluate"], [212, 3, 1, "", "evaluate_error"], [212, 3, 1, "", "freeze"], [212, 3, 1, "", "from_dict"], [212, 3, 1, "", "from_parameters"], [212, 2, 1, "", "frozen"], [212, 3, 1, "", "integral"], [212, 3, 1, "", "integral_error"], [212, 3, 1, "", "inverse"], [212, 3, 1, "", "inverse_all"], [212, 2, 1, "", "is_norm_spectral_model"], [212, 2, 1, "", "parameters"], [212, 2, 1, "", "pivot_energy"], [212, 3, 1, "", "plot"], [212, 3, 1, "", "plot_error"], [212, 3, 1, "", "reassign"], [212, 3, 1, "", "reference_fluxes"], [212, 3, 1, "", "spectral_index"], [212, 3, 1, "", "spectral_index_error"], [212, 2, 1, "", "tag"], [212, 3, 1, "", "to_dict"], [212, 2, 1, "", "type"], [212, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[213, 3, 1, "", "__call__"], [213, 3, 1, "", "copy"], [213, 2, 1, "", "covariance"], [213, 2, 1, "", "default_parameters"], [213, 3, 1, "", "evaluate"], [213, 3, 1, "", "freeze"], [213, 3, 1, "", "from_dict"], [213, 3, 1, "", "from_parameters"], [213, 2, 1, "", "frozen"], [213, 3, 1, "", "integral"], [213, 2, 1, "", "is_energy_dependent"], [213, 2, 1, "", "parameters"], [213, 3, 1, "", "plot"], [213, 3, 1, "", "reassign"], [213, 2, 1, "", "reference_time"], [213, 3, 1, "", "sample_time"], [213, 2, 1, "", "tag"], [213, 3, 1, "", "time_sum"], [213, 3, 1, "", "to_dict"], [213, 2, 1, "", "type"], [213, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[214, 3, 1, "", "copy"], [214, 3, 1, "", "count"], [214, 2, 1, "", "covariance"], [214, 3, 1, "", "freeze"], [214, 3, 1, "", "from_dict"], [214, 3, 1, "", "from_yaml"], [214, 2, 1, "", "frozen"], [214, 3, 1, "", "index"], [214, 2, 1, "", "names"], [214, 2, 1, "", "parameters"], [214, 2, 1, "", "parameters_unique_names"], [214, 3, 1, "", "plot_positions"], [214, 3, 1, "", "plot_regions"], [214, 2, 1, "", "positions"], [214, 3, 1, "", "read"], [214, 3, 1, "", "read_covariance"], [214, 3, 1, "", "reassign"], [214, 3, 1, "", "restore_status"], [214, 3, 1, "", "select"], [214, 3, 1, "", "select_from_geom"], [214, 3, 1, "", "select_mask"], [214, 3, 1, "", "select_region"], [214, 3, 1, "", "selection_mask"], [214, 3, 1, "", "set_parameters_bounds"], [214, 3, 1, "", "to_dict"], [214, 3, 1, "", "to_parameters_table"], [214, 3, 1, "", "to_regions"], [214, 3, 1, "", "to_template_sky_model"], [214, 3, 1, "", "to_template_spectral_model"], [214, 3, 1, "", "to_yaml"], [214, 3, 1, "", "unfreeze"], [214, 3, 1, "", "update_link_label"], [214, 3, 1, "", "update_parameters_from_table"], [214, 2, 1, "", "wcs_geom"], [214, 3, 1, "", "write"], [214, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[215, 3, 1, "", "__call__"], [215, 3, 1, "", "copy"], [215, 2, 1, "", "covariance"], [215, 2, 1, "", "default_parameters"], [215, 2, 1, "", "e"], [215, 2, 1, "", "edge_width"], [215, 3, 1, "", "evaluate"], [215, 3, 1, "", "evaluate_geom"], [215, 2, 1, "", "evaluation_bin_size_min"], [215, 2, 1, "", "evaluation_radius"], [215, 2, 1, "", "evaluation_region"], [215, 3, 1, "", "freeze"], [215, 3, 1, "", "from_dict"], [215, 3, 1, "", "from_parameters"], [215, 3, 1, "", "from_position"], [215, 3, 1, "", "from_region"], [215, 2, 1, "", "frozen"], [215, 3, 1, "", "integrate_geom"], [215, 2, 1, "", "is_energy_dependent"], [215, 2, 1, "", "lat_0"], [215, 2, 1, "", "lon_0"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "phi"], [215, 2, 1, "", "phi_0"], [215, 3, 1, "", "plot"], [215, 3, 1, "", "plot_error"], [215, 3, 1, "", "plot_grid"], [215, 3, 1, "", "plot_interactive"], [215, 3, 1, "", "plot_position_error"], [215, 2, 1, "", "position"], [215, 2, 1, "", "position_error"], [215, 2, 1, "", "position_lonlat"], [215, 2, 1, "", "r_0"], [215, 3, 1, "", "reassign"], [215, 2, 1, "", "tag"], [215, 3, 1, "", "to_dict"], [215, 3, 1, "", "to_region"], [215, 2, 1, "", "type"], [215, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[216, 3, 1, "", "__call__"], [216, 2, 1, "", "alpha_norm"], [216, 3, 1, "", "copy"], [216, 2, 1, "", "covariance"], [216, 2, 1, "", "default_parameters"], [216, 3, 1, "", "energy_flux"], [216, 3, 1, "", "energy_flux_error"], [216, 3, 1, "", "evaluate"], [216, 3, 1, "", "evaluate_error"], [216, 3, 1, "", "freeze"], [216, 3, 1, "", "from_dict"], [216, 3, 1, "", "from_parameters"], [216, 2, 1, "", "frozen"], [216, 3, 1, "", "integral"], [216, 3, 1, "", "integral_error"], [216, 3, 1, "", "inverse"], [216, 3, 1, "", "inverse_all"], [216, 2, 1, "", "is_norm_spectral_model"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "pivot_energy"], [216, 3, 1, "", "plot"], [216, 3, 1, "", "plot_error"], [216, 3, 1, "", "read"], [216, 3, 1, "", "read_builtin"], [216, 3, 1, "", "reassign"], [216, 2, 1, "", "redshift"], [216, 3, 1, "", "reference_fluxes"], [216, 3, 1, "", "spectral_index"], [216, 3, 1, "", "spectral_index_error"], [216, 2, 1, "", "tag"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "type"], [216, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[218, 3, 1, "", "__call__"], [218, 2, 1, "", "amplitude"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "covariance"], [218, 2, 1, "", "default_parameters"], [218, 2, 1, "", "ecut"], [218, 3, 1, "", "energy_flux"], [218, 3, 1, "", "energy_flux_error"], [218, 3, 1, "", "evaluate"], [218, 3, 1, "", "evaluate_error"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_parameters"], [218, 2, 1, "", "frozen"], [218, 2, 1, "", "index"], [218, 3, 1, "", "integral"], [218, 3, 1, "", "integral_error"], [218, 3, 1, "", "inverse"], [218, 3, 1, "", "inverse_all"], [218, 2, 1, "", "is_norm_spectral_model"], [218, 2, 1, "", "parameters"], [218, 2, 1, "", "pivot_energy"], [218, 3, 1, "", "plot"], [218, 3, 1, "", "plot_error"], [218, 3, 1, "", "reassign"], [218, 2, 1, "", "reference"], [218, 3, 1, "", "reference_fluxes"], [218, 3, 1, "", "spectral_index"], [218, 3, 1, "", "spectral_index_error"], [218, 2, 1, "", "tag"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[219, 3, 1, "", "__call__"], [219, 2, 1, "", "alpha"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "covariance"], [219, 2, 1, "", "default_parameters"], [219, 3, 1, "", "energy_flux"], [219, 3, 1, "", "energy_flux_error"], [219, 3, 1, "", "evaluate"], [219, 3, 1, "", "evaluate_error"], [219, 3, 1, "", "freeze"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_parameters"], [219, 2, 1, "", "frozen"], [219, 2, 1, "", "index"], [219, 3, 1, "", "integral"], [219, 3, 1, "", "integral_error"], [219, 3, 1, "", "inverse"], [219, 3, 1, "", "inverse_all"], [219, 2, 1, "", "is_norm_spectral_model"], [219, 2, 1, "", "lambda_"], [219, 2, 1, "", "norm"], [219, 2, 1, "", "parameters"], [219, 2, 1, "", "pivot_energy"], [219, 3, 1, "", "plot"], [219, 3, 1, "", "plot_error"], [219, 3, 1, "", "reassign"], [219, 2, 1, "", "reference"], [219, 3, 1, "", "reference_fluxes"], [219, 3, 1, "", "spectral_index"], [219, 3, 1, "", "spectral_index_error"], [219, 2, 1, "", "tag"], [219, 3, 1, "", "to_dict"], [219, 2, 1, "", "type"], [219, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[220, 3, 1, "", "__call__"], [220, 2, 1, "", "alpha"], [220, 2, 1, "", "amplitude"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 2, 1, "", "e_peak"], [220, 3, 1, "", "energy_flux"], [220, 3, 1, "", "energy_flux_error"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_error"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 2, 1, "", "frozen"], [220, 2, 1, "", "index"], [220, 3, 1, "", "integral"], [220, 3, 1, "", "integral_error"], [220, 3, 1, "", "inverse"], [220, 3, 1, "", "inverse_all"], [220, 2, 1, "", "is_norm_spectral_model"], [220, 2, 1, "", "lambda_"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "pivot_energy"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "reassign"], [220, 2, 1, "", "reference"], [220, 3, 1, "", "reference_fluxes"], [220, 3, 1, "", "spectral_index"], [220, 3, 1, "", "spectral_index_error"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[221, 3, 1, "", "__call__"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 2, 1, "", "frozen"], [221, 3, 1, "", "integral"], [221, 2, 1, "", "is_energy_dependent"], [221, 2, 1, "", "parameters"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "reassign"], [221, 2, 1, "", "reference_time"], [221, 3, 1, "", "sample_time"], [221, 2, 1, "", "t0"], [221, 2, 1, "", "t_ref"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "time_sum"], [221, 3, 1, "", "to_dict"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[222, 3, 1, "", "contributes"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_geom"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 2, 1, "", "name"], [222, 2, 1, "", "parameters"], [222, 3, 1, "", "reassign"], [222, 3, 1, "", "reset_to_default"], [222, 2, 1, "", "spatial_model"], [222, 2, 1, "", "spectral_model"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpatialModel": [[223, 3, 1, "", "__call__"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 2, 1, "", "e"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_geom"], [223, 2, 1, "", "evaluation_bin_size_min"], [223, 2, 1, "", "evaluation_radius"], [223, 2, 1, "", "evaluation_region"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 3, 1, "", "from_position"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "integrate_geom"], [223, 2, 1, "", "is_energy_dependent"], [223, 2, 1, "", "lat_0"], [223, 2, 1, "", "lon_0"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "phi"], [223, 2, 1, "", "phi_0"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "plot_grid"], [223, 3, 1, "", "plot_interactive"], [223, 3, 1, "", "plot_position_error"], [223, 2, 1, "", "position"], [223, 2, 1, "", "position_error"], [223, 2, 1, "", "position_lonlat"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "sigma"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 3, 1, "", "to_region"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[224, 3, 1, "", "__call__"], [224, 2, 1, "", "amplitude"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 3, 1, "", "energy_flux"], [224, 3, 1, "", "energy_flux_error"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_error"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "integral"], [224, 3, 1, "", "integral_error"], [224, 3, 1, "", "inverse"], [224, 3, 1, "", "inverse_all"], [224, 2, 1, "", "is_norm_spectral_model"], [224, 2, 1, "", "mean"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "pivot_energy"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "reassign"], [224, 3, 1, "", "reference_fluxes"], [224, 2, 1, "", "sigma"], [224, 3, 1, "", "spectral_index"], [224, 3, 1, "", "spectral_index_error"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integral"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "parameters"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "reference_time"], [225, 3, 1, "", "sample_time"], [225, 2, 1, "", "sigma"], [225, 2, 1, "", "t_ref"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "time_sum"], [225, 3, 1, "", "to_dict"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[226, 3, 1, "", "__call__"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 2, 1, "", "e"], [226, 2, 1, "", "eta"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_geom"], [226, 2, 1, "", "evaluation_bin_size_min"], [226, 2, 1, "", "evaluation_radius"], [226, 2, 1, "", "evaluation_region"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 3, 1, "", "from_position"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integrate_geom"], [226, 2, 1, "", "is_energy_dependent"], [226, 2, 1, "", "lat_0"], [226, 2, 1, "", "lon_0"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "phi"], [226, 2, 1, "", "phi_0"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "plot_error"], [226, 3, 1, "", "plot_grid"], [226, 3, 1, "", "plot_interactive"], [226, 3, 1, "", "plot_position_error"], [226, 2, 1, "", "position"], [226, 2, 1, "", "position_error"], [226, 2, 1, "", "position_lonlat"], [226, 2, 1, "", "r_0"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 3, 1, "", "to_region"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[227, 3, 1, "", "__call__"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 2, 1, "", "eta"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integral"], [227, 2, 1, "", "is_energy_dependent"], [227, 2, 1, "", "parameters"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "reference_time"], [227, 3, 1, "", "sample_time"], [227, 2, 1, "", "t_decay"], [227, 2, 1, "", "t_ref"], [227, 2, 1, "", "t_rise"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "time_sum"], [227, 3, 1, "", "to_dict"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[228, 3, 1, "", "__call__"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 3, 1, "", "from_table"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integral"], [228, 2, 1, "", "is_energy_dependent"], [228, 2, 1, "", "parameters"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "read"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "reference_time"], [228, 3, 1, "", "sample_time"], [228, 2, 1, "", "t_ref"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "time_sum"], [228, 3, 1, "", "to_dict"], [228, 3, 1, "", "to_table"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"], [228, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[229, 3, 1, "", "__call__"], [229, 2, 1, "", "alpha"], [229, 2, 1, "", "beta"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "integral"], [229, 2, 1, "", "is_energy_dependent"], [229, 2, 1, "", "parameters"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "reference_time"], [229, 3, 1, "", "sample_time"], [229, 2, 1, "", "t_ref"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "time_sum"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[230, 3, 1, "", "__call__"], [230, 2, 1, "", "alpha"], [230, 2, 1, "", "beta"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 3, 1, "", "energy_flux"], [230, 3, 1, "", "energy_flux_error"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_error"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_log10"], [230, 3, 1, "", "from_parameters"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integral"], [230, 3, 1, "", "integral_error"], [230, 3, 1, "", "inverse"], [230, 3, 1, "", "inverse_all"], [230, 2, 1, "", "is_norm_spectral_model"], [230, 2, 1, "", "norm"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "pivot_energy"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "reference"], [230, 3, 1, "", "reference_fluxes"], [230, 3, 1, "", "spectral_index"], [230, 3, 1, "", "spectral_index_error"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "to_dict"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[231, 3, 1, "", "__call__"], [231, 2, 1, "", "alpha"], [231, 2, 1, "", "amplitude"], [231, 2, 1, "", "beta"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 2, 1, "", "e_peak"], [231, 3, 1, "", "energy_flux"], [231, 3, 1, "", "energy_flux_error"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "evaluate_error"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_log10"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integral"], [231, 3, 1, "", "integral_error"], [231, 3, 1, "", "inverse"], [231, 3, 1, "", "inverse_all"], [231, 2, 1, "", "is_norm_spectral_model"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "pivot_energy"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "plot_error"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "reference"], [231, 3, 1, "", "reference_fluxes"], [231, 3, 1, "", "spectral_index"], [231, 3, 1, "", "spectral_index_error"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[233, 3, 1, "", "__call__"], [233, 2, 1, "", "coefficients"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 3, 1, "", "energy_flux"], [233, 3, 1, "", "energy_flux_error"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "evaluate_error"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "integral"], [233, 3, 1, "", "integral_error"], [233, 3, 1, "", "inverse"], [233, 3, 1, "", "inverse_all"], [233, 2, 1, "", "is_norm_spectral_model"], [233, 2, 1, "", "norm"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "pivot_energy"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "plot_error"], [233, 3, 1, "", "reassign"], [233, 3, 1, "", "reference_fluxes"], [233, 3, 1, "", "spectral_index"], [233, 3, 1, "", "spectral_index_error"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[234, 3, 1, "", "create"], [234, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 2, 1, "", "parameters"], [235, 3, 1, "", "reassign"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[236, 3, 1, "", "append"], [236, 3, 1, "", "clear"], [236, 3, 1, "", "copy"], [236, 3, 1, "", "count"], [236, 2, 1, "", "covariance"], [236, 3, 1, "", "extend"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_yaml"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "index"], [236, 3, 1, "", "insert"], [236, 2, 1, "", "names"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 3, 1, "", "plot_positions"], [236, 3, 1, "", "plot_regions"], [236, 3, 1, "", "pop"], [236, 2, 1, "", "positions"], [236, 3, 1, "", "read"], [236, 3, 1, "", "read_covariance"], [236, 3, 1, "", "reassign"], [236, 3, 1, "", "remove"], [236, 3, 1, "", "restore_status"], [236, 3, 1, "", "reverse"], [236, 3, 1, "", "select"], [236, 3, 1, "", "select_from_geom"], [236, 3, 1, "", "select_mask"], [236, 3, 1, "", "select_region"], [236, 3, 1, "", "selection_mask"], [236, 3, 1, "", "set_parameters_bounds"], [236, 3, 1, "", "set_prior"], [236, 3, 1, "", "to_dict"], [236, 3, 1, "", "to_parameters_table"], [236, 3, 1, "", "to_regions"], [236, 3, 1, "", "to_template_sky_model"], [236, 3, 1, "", "to_template_spectral_model"], [236, 3, 1, "", "to_yaml"], [236, 3, 1, "", "unfreeze"], [236, 3, 1, "", "update_link_label"], [236, 3, 1, "", "update_parameters_from_table"], [236, 2, 1, "", "wcs_geom"], [236, 3, 1, "", "write"], [236, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[237, 3, 1, "", "__call__"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "energy_flux"], [237, 3, 1, "", "energy_flux_error"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "evaluate_error"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 2, 1, "", "include_ssc"], [237, 3, 1, "", "integral"], [237, 3, 1, "", "integral_error"], [237, 3, 1, "", "inverse"], [237, 3, 1, "", "inverse_all"], [237, 2, 1, "", "is_norm_spectral_model"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "particle_distribution"], [237, 2, 1, "", "pivot_energy"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "plot_error"], [237, 3, 1, "", "reassign"], [237, 3, 1, "", "reference_fluxes"], [237, 3, 1, "", "spectral_index"], [237, 3, 1, "", "spectral_index_error"], [237, 2, 1, "", "ssc_model"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[238, 3, 1, "", "__call__"], [238, 2, 1, "", "coords"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "evaluate_geom"], [238, 2, 1, "", "evaluation_bin_size_min"], [238, 2, 1, "", "evaluation_radius"], [238, 2, 1, "", "evaluation_region"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 3, 1, "", "from_position"], [238, 2, 1, "", "frozen"], [238, 3, 1, "", "integrate_geom"], [238, 2, 1, "", "is_energy_dependent"], [238, 2, 1, "", "norms"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "phi_0"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "plot_error"], [238, 3, 1, "", "plot_grid"], [238, 3, 1, "", "plot_interactive"], [238, 3, 1, "", "plot_position_error"], [238, 2, 1, "", "position"], [238, 2, 1, "", "position_error"], [238, 2, 1, "", "position_lonlat"], [238, 3, 1, "", "reassign"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 2, 1, "", "energy"], [239, 3, 1, "", "energy_flux"], [239, 3, 1, "", "energy_flux_error"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "evaluate_error"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integral"], [239, 3, 1, "", "integral_error"], [239, 3, 1, "", "inverse"], [239, 3, 1, "", "inverse_all"], [239, 2, 1, "", "is_norm_spectral_model"], [239, 2, 1, "", "norms"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "pivot_energy"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "plot_error"], [239, 3, 1, "", "reassign"], [239, 3, 1, "", "reference_fluxes"], [239, 3, 1, "", "spectral_index"], [239, 3, 1, "", "spectral_index_error"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[240, 3, 1, "", "__call__"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 3, 1, "", "evaluate_geom"], [240, 2, 1, "", "evaluation_bin_size_min"], [240, 2, 1, "", "evaluation_radius"], [240, 2, 1, "", "evaluation_region"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 3, 1, "", "from_position"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integrate_geom"], [240, 2, 1, "", "is_energy_dependent"], [240, 2, 1, "", "lat_0"], [240, 2, 1, "", "lon_0"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "phi_0"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "plot_grid"], [240, 3, 1, "", "plot_interactive"], [240, 3, 1, "", "plot_position_error"], [240, 2, 1, "", "position"], [240, 2, 1, "", "position_error"], [240, 2, 1, "", "position_lonlat"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 3, 1, "", "to_region"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[241, 3, 1, "", "__call__"], [241, 2, 1, "", "amplitude"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 2, 1, "", "emax"], [241, 2, 1, "", "emin"], [241, 3, 1, "", "energy_flux"], [241, 3, 1, "", "energy_flux_error"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "evaluate_error"], [241, 3, 1, "", "evaluate_integral"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 2, 1, "", "index"], [241, 3, 1, "", "integral"], [241, 3, 1, "", "integral_error"], [241, 3, 1, "", "inverse"], [241, 3, 1, "", "inverse_all"], [241, 2, 1, "", "is_norm_spectral_model"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "pivot_energy"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "plot_error"], [241, 3, 1, "", "reassign"], [241, 3, 1, "", "reference_fluxes"], [241, 3, 1, "", "spectral_index"], [241, 3, 1, "", "spectral_index_error"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[242, 3, 1, "", "__call__"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 3, 1, "", "energy_flux"], [242, 3, 1, "", "energy_flux_error"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "evaluate_energy_flux"], [242, 3, 1, "", "evaluate_error"], [242, 3, 1, "", "evaluate_integral"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integral"], [242, 3, 1, "", "integral_error"], [242, 3, 1, "", "inverse"], [242, 3, 1, "", "inverse_all"], [242, 2, 1, "", "is_norm_spectral_model"], [242, 2, 1, "", "norm"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "pivot_energy"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "plot_error"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "reference"], [242, 3, 1, "", "reference_fluxes"], [242, 3, 1, "", "spectral_index"], [242, 3, 1, "", "spectral_index_error"], [242, 2, 1, "", "tag"], [242, 2, 1, "", "tilt"], [242, 3, 1, "", "to_dict"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[243, 3, 1, "", "__call__"], [243, 2, 1, "", "amplitude"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 3, 1, "", "energy_flux"], [243, 3, 1, "", "energy_flux_error"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "evaluate_energy_flux"], [243, 3, 1, "", "evaluate_error"], [243, 3, 1, "", "evaluate_integral"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 2, 1, "", "index"], [243, 3, 1, "", "integral"], [243, 3, 1, "", "integral_error"], [243, 3, 1, "", "inverse"], [243, 3, 1, "", "inverse_all"], [243, 2, 1, "", "is_norm_spectral_model"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "pivot_energy"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "plot_error"], [243, 3, 1, "", "reassign"], [243, 2, 1, "", "reference"], [243, 3, 1, "", "reference_fluxes"], [243, 3, 1, "", "spectral_index"], [243, 3, 1, "", "spectral_index_error"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[244, 3, 1, "", "__call__"], [244, 2, 1, "", "alpha"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 2, 1, "", "is_energy_dependent"], [244, 2, 1, "", "parameters"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "reference_time"], [244, 3, 1, "", "sample_time"], [244, 2, 1, "", "t0"], [244, 2, 1, "", "t_ref"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "time_sum"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ScaleSpectralModel": [[247, 3, 1, "", "__call__"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "energy_flux"], [247, 3, 1, "", "energy_flux_error"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_error"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 3, 1, "", "integral"], [247, 3, 1, "", "integral_error"], [247, 3, 1, "", "inverse"], [247, 3, 1, "", "inverse_all"], [247, 2, 1, "", "is_norm_spectral_model"], [247, 2, 1, "", "norm"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "pivot_energy"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "reassign"], [247, 3, 1, "", "reference_fluxes"], [247, 3, 1, "", "spectral_index"], [247, 3, 1, "", "spectral_index_error"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[248, 3, 1, "", "__call__"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 2, 1, "", "eta"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "evaluate_geom"], [248, 2, 1, "", "evaluation_bin_size_min"], [248, 2, 1, "", "evaluation_radius"], [248, 2, 1, "", "evaluation_region"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 3, 1, "", "from_position"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integrate_geom"], [248, 2, 1, "", "is_energy_dependent"], [248, 2, 1, "", "lat_0"], [248, 2, 1, "", "lon_0"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "phi_0"], [248, 3, 1, "", "plot"], [248, 3, 1, "", "plot_error"], [248, 3, 1, "", "plot_grid"], [248, 3, 1, "", "plot_interactive"], [248, 3, 1, "", "plot_position_error"], [248, 2, 1, "", "position"], [248, 2, 1, "", "position_error"], [248, 2, 1, "", "position_lonlat"], [248, 2, 1, "", "r_0"], [248, 2, 1, "", "r_in"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "tag"], [248, 3, 1, "", "to_dict"], [248, 3, 1, "", "to_region"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[249, 3, 1, "", "__call__"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 3, 1, "", "evaluate"], [249, 3, 1, "", "evaluate_geom"], [249, 2, 1, "", "evaluation_bin_size_min"], [249, 2, 1, "", "evaluation_radius"], [249, 2, 1, "", "evaluation_region"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 3, 1, "", "from_position"], [249, 2, 1, "", "frozen"], [249, 3, 1, "", "integrate_geom"], [249, 2, 1, "", "is_energy_dependent"], [249, 2, 1, "", "lat_0"], [249, 2, 1, "", "lon_0"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "phi_0"], [249, 3, 1, "", "plot"], [249, 3, 1, "", "plot_error"], [249, 3, 1, "", "plot_grid"], [249, 3, 1, "", "plot_interactive"], [249, 3, 1, "", "plot_position_error"], [249, 2, 1, "", "position"], [249, 2, 1, "", "position_error"], [249, 2, 1, "", "position_lonlat"], [249, 2, 1, "", "radius"], [249, 3, 1, "", "reassign"], [249, 2, 1, "", "tag"], [249, 3, 1, "", "to_dict"], [249, 3, 1, "", "to_region"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"], [249, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[250, 3, 1, "", "__call__"], [250, 2, 1, "", "amp"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 3, 1, "", "evaluate"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 2, 1, "", "frozen"], [250, 3, 1, "", "integral"], [250, 2, 1, "", "is_energy_dependent"], [250, 2, 1, "", "omega"], [250, 2, 1, "", "parameters"], [250, 3, 1, "", "plot"], [250, 3, 1, "", "reassign"], [250, 2, 1, "", "reference_time"], [250, 3, 1, "", "sample_time"], [250, 2, 1, "", "t_ref"], [250, 2, 1, "", "tag"], [250, 3, 1, "", "time_sum"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[251, 3, 1, "", "__call__"], [251, 3, 1, "", "contributes"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 3, 1, "", "create"], [251, 2, 1, "", "default_parameters"], [251, 3, 1, "", "evaluate"], [251, 3, 1, "", "evaluate_geom"], [251, 2, 1, "", "evaluation_bin_size_min"], [251, 2, 1, "", "evaluation_radius"], [251, 2, 1, "", "evaluation_region"], [251, 2, 1, "", "frame"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "integrate_geom"], [251, 2, 1, "", "name"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "position"], [251, 2, 1, "", "position_lonlat"], [251, 3, 1, "", "reassign"], [251, 2, 1, "", "spatial_model"], [251, 2, 1, "", "spectral_model"], [251, 2, 1, "", "tag"], [251, 2, 1, "", "temporal_model"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[252, 3, 1, "", "__call__"], [252, 2, 1, "", "amplitude"], [252, 2, 1, "", "beta"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 2, 1, "", "ebreak"], [252, 3, 1, "", "energy_flux"], [252, 3, 1, "", "energy_flux_error"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "evaluate_error"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 2, 1, "", "frozen"], [252, 2, 1, "", "index1"], [252, 2, 1, "", "index2"], [252, 3, 1, "", "integral"], [252, 3, 1, "", "integral_error"], [252, 3, 1, "", "inverse"], [252, 3, 1, "", "inverse_all"], [252, 2, 1, "", "is_norm_spectral_model"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "pivot_energy"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "reassign"], [252, 2, 1, "", "reference"], [252, 3, 1, "", "reference_fluxes"], [252, 3, 1, "", "spectral_index"], [252, 3, 1, "", "spectral_index_error"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[253, 3, 1, "", "__call__"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "evaluate_geom"], [253, 2, 1, "", "evaluation_bin_size_min"], [253, 2, 1, "", "evaluation_radius"], [253, 2, 1, "", "evaluation_region"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 3, 1, "", "from_position"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "integrate_geom"], [253, 2, 1, "", "is_energy_dependent"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "phi_0"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "plot_grid"], [253, 3, 1, "", "plot_interactive"], [253, 3, 1, "", "plot_position_error"], [253, 2, 1, "", "position"], [253, 2, 1, "", "position_error"], [253, 2, 1, "", "position_lonlat"], [253, 3, 1, "", "reassign"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[254, 3, 1, "", "__call__"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "energy_flux"], [254, 3, 1, "", "energy_flux_error"], [254, 3, 1, "", "evaluate_error"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integral"], [254, 3, 1, "", "integral_error"], [254, 3, 1, "", "inverse"], [254, 3, 1, "", "inverse_all"], [254, 2, 1, "", "is_norm_spectral_model"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "pivot_energy"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "reassign"], [254, 3, 1, "", "reference_fluxes"], [254, 3, 1, "", "spectral_index"], [254, 3, 1, "", "spectral_index_error"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[255, 3, 1, "", "__call__"], [255, 2, 1, "", "amplitude"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 2, 1, "", "ecut"], [255, 3, 1, "", "energy_flux"], [255, 3, 1, "", "energy_flux_error"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_error"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 2, 1, "", "frozen"], [255, 2, 1, "", "index_1"], [255, 2, 1, "", "index_2"], [255, 3, 1, "", "integral"], [255, 3, 1, "", "integral_error"], [255, 3, 1, "", "inverse"], [255, 3, 1, "", "inverse_all"], [255, 2, 1, "", "is_norm_spectral_model"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "pivot_energy"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "reassign"], [255, 2, 1, "", "reference"], [255, 3, 1, "", "reference_fluxes"], [255, 3, 1, "", "spectral_index"], [255, 3, 1, "", "spectral_index_error"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[256, 3, 1, "", "__call__"], [256, 2, 1, "", "amplitude"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 3, 1, "", "energy_flux"], [256, 3, 1, "", "energy_flux_error"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_error"], [256, 2, 1, "", "expfactor"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 2, 1, "", "index_1"], [256, 2, 1, "", "index_2"], [256, 3, 1, "", "integral"], [256, 3, 1, "", "integral_error"], [256, 3, 1, "", "inverse"], [256, 3, 1, "", "inverse_all"], [256, 2, 1, "", "is_norm_spectral_model"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "pivot_energy"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "reference"], [256, 3, 1, "", "reference_fluxes"], [256, 3, 1, "", "spectral_index"], [256, 3, 1, "", "spectral_index_error"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[257, 3, 1, "", "__call__"], [257, 2, 1, "", "amplitude"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "energy_flux"], [257, 3, 1, "", "energy_flux_error"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_error"], [257, 2, 1, "", "expfactor"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 2, 1, "", "index_1"], [257, 2, 1, "", "index_2"], [257, 3, 1, "", "integral"], [257, 3, 1, "", "integral_error"], [257, 3, 1, "", "inverse"], [257, 3, 1, "", "inverse_all"], [257, 2, 1, "", "is_norm_spectral_model"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "pivot_energy"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "reassign"], [257, 2, 1, "", "reference"], [257, 3, 1, "", "reference_fluxes"], [257, 3, 1, "", "spectral_index"], [257, 3, 1, "", "spectral_index_error"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[259, 3, 1, "", "__call__"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_geom"], [259, 2, 1, "", "evaluation_bin_size_min"], [259, 2, 1, "", "evaluation_radius"], [259, 2, 1, "", "evaluation_region"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 3, 1, "", "from_position"], [259, 2, 1, "", "frozen"], [259, 3, 1, "", "integrate_geom"], [259, 2, 1, "", "is_energy_dependent"], [259, 2, 1, "", "map"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "phi_0"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "plot_grid"], [259, 3, 1, "", "plot_interactive"], [259, 3, 1, "", "plot_position_error"], [259, 2, 1, "", "position"], [259, 2, 1, "", "position_error"], [259, 2, 1, "", "position_lonlat"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"], [259, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[260, 3, 1, "", "__call__"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "energy_flux"], [260, 3, 1, "", "energy_flux_error"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "evaluate_error"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 3, 1, "", "integral"], [260, 3, 1, "", "integral_error"], [260, 3, 1, "", "inverse"], [260, 3, 1, "", "inverse_all"], [260, 2, 1, "", "is_norm_spectral_model"], [260, 2, 1, "", "map"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "pivot_energy"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "reassign"], [260, 3, 1, "", "reference_fluxes"], [260, 3, 1, "", "spectral_index"], [260, 3, 1, "", "spectral_index_error"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"], [260, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 3, 1, "", "cutout"], [261, 2, 1, "", "default_parameters"], [261, 2, 1, "", "energy_center"], [261, 3, 1, "", "evaluate"], [261, 2, 1, "", "evaluation_radius"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 2, 1, "", "map"], [261, 2, 1, "", "name"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "position"], [261, 3, 1, "", "reassign"], [261, 3, 1, "", "slice_by_energy"], [261, 2, 1, "", "spectral_model"], [261, 3, 1, "", "stack"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"], [261, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[262, 3, 1, "", "__call__"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "evaluate"], [262, 2, 1, "", "f0"], [262, 2, 1, "", "f1"], [262, 2, 1, "", "f2"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 3, 1, "", "integral"], [262, 2, 1, "", "is_energy_dependent"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "phi_ref"], [262, 3, 1, "", "plot"], [262, 3, 1, "", "plot_phasogram"], [262, 3, 1, "", "read"], [262, 3, 1, "", "reassign"], [262, 2, 1, "", "reference_time"], [262, 3, 1, "", "sample_time"], [262, 2, 1, "", "t_ref"], [262, 2, 1, "", "tag"], [262, 3, 1, "", "time_sum"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"], [262, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[263, 3, 1, "", "__call__"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 3, 1, "", "evaluate"], [263, 3, 1, "", "evaluate_geom"], [263, 2, 1, "", "evaluation_bin_size_min"], [263, 2, 1, "", "evaluation_radius"], [263, 2, 1, "", "evaluation_region"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 3, 1, "", "from_position"], [263, 2, 1, "", "frozen"], [263, 3, 1, "", "integrate_geom"], [263, 2, 1, "", "is_energy_dependent"], [263, 2, 1, "", "lat_0"], [263, 2, 1, "", "lon_0"], [263, 2, 1, "", "map"], [263, 2, 1, "", "map_center"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "phi_0"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "plot_error"], [263, 3, 1, "", "plot_grid"], [263, 3, 1, "", "plot_interactive"], [263, 3, 1, "", "plot_position_error"], [263, 2, 1, "", "position"], [263, 2, 1, "", "position_error"], [263, 2, 1, "", "position_lonlat"], [263, 3, 1, "", "read"], [263, 3, 1, "", "reassign"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "to_dict"], [263, 3, 1, "", "to_region"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"], [263, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 3, 1, "", "energy_flux"], [264, 3, 1, "", "energy_flux_error"], [264, 3, 1, "", "evaluate"], [264, 3, 1, "", "evaluate_error"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 3, 1, "", "from_region_map"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integral"], [264, 3, 1, "", "integral_error"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "inverse_all"], [264, 2, 1, "", "is_norm_spectral_model"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "pivot_energy"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_error"], [264, 3, 1, "", "read_xspec_model"], [264, 3, 1, "", "reassign"], [264, 3, 1, "", "reference_fluxes"], [264, 3, 1, "", "spectral_index"], [264, 3, 1, "", "spectral_index_error"], [264, 2, 1, "", "tag"], [264, 3, 1, "", "to_dict"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[265, 3, 1, "", "__call__"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 2, 1, "", "frozen"], [265, 3, 1, "", "integral"], [265, 2, 1, "", "is_energy_dependent"], [265, 2, 1, "", "parameters"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "reassign"], [265, 2, 1, "", "reference_time"], [265, 3, 1, "", "sample_time"], [265, 3, 1, "", "time_sum"], [265, 3, 1, "", "to_dict"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.utils": [[272, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[275, 1, 1, "", "CashCountsStatistic"], [276, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [277, 1, 1, "", "WStatCountsStatistic"], [278, 4, 1, "", "cash"], [279, 4, 1, "", "cash_sum_cython"], [280, 4, 1, "", "compute_chisq"], [281, 4, 1, "", "compute_flux_doubling"], [282, 4, 1, "", "compute_fpp"], [283, 4, 1, "", "compute_fvar"], [284, 4, 1, "", "cstat"], [285, 4, 1, "", "f_cash_root_cython"], [286, 4, 1, "", "get_wstat_gof_terms"], [287, 4, 1, "", "get_wstat_mu_bkg"], [288, 4, 1, "", "norm_bounds_cython"], [289, 4, 1, "", "structure_function"], [290, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[275, 3, 1, "", "compute_errn"], [275, 3, 1, "", "compute_errp"], [275, 3, 1, "", "compute_upper_limit"], [275, 2, 1, "", "error"], [275, 3, 1, "", "info_dict"], [275, 2, 1, "", "n_bkg"], [275, 2, 1, "", "n_sig"], [275, 3, 1, "", "n_sig_matching_significance"], [275, 2, 1, "", "p_value"], [275, 2, 1, "", "sqrt_ts"], [275, 2, 1, "", "stat_max"], [275, 2, 1, "", "stat_null"], [275, 3, 1, "", "sum"], [275, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[277, 3, 1, "", "compute_errn"], [277, 3, 1, "", "compute_errp"], [277, 3, 1, "", "compute_upper_limit"], [277, 2, 1, "", "error"], [277, 3, 1, "", "info_dict"], [277, 2, 1, "", "n_bkg"], [277, 2, 1, "", "n_sig"], [277, 3, 1, "", "n_sig_matching_significance"], [277, 2, 1, "", "p_value"], [277, 2, 1, "", "sqrt_ts"], [277, 2, 1, "", "stat_max"], [277, 2, 1, "", "stat_null"], [277, 3, 1, "", "sum"], [277, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[291, 4, 1, "", "hierarchical_clustering"], [292, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[293, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [294, 4, 1, "", "cartesian"], [295, 4, 1, "", "fov_to_sky"], [296, 4, 1, "", "galactic"], [297, 4, 1, "", "motion_since_birth"], [298, 4, 1, "", "polar"], [299, 4, 1, "", "sky_to_fov"], [300, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[301, 1, 1, "", "HDULocation"], [302, 1, 1, "", "LazyFitsData"], [303, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[301, 3, 1, "", "get_hdu"], [301, 3, 1, "", "info"], [301, 3, 1, "", "load"], [301, 3, 1, "", "path"]], "gammapy.utils.integrate": [[304, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[305, 1, 1, "", "ScaledRegularGridInterpolator"], [306, 4, 1, "", "interpolate_profile"], [307, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[305, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[308, 5, 1, "", "BACKEND_DEFAULT"], [309, 5, 1, "", "METHOD_DEFAULT"], [310, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [311, 5, 1, "", "N_JOBS_DEFAULT"], [312, 5, 1, "", "POOL_KWARGS_DEFAULT"], [313, 1, 1, "", "multiprocessing_manager"], [314, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[315, 1, 1, "", "InverseCDFSampler"], [316, 4, 1, "", "draw"], [317, 4, 1, "", "get_random_state"], [318, 4, 1, "", "normalize"], [319, 4, 1, "", "pdf"], [320, 4, 1, "", "sample_powerlaw"], [321, 4, 1, "", "sample_sphere"], [322, 4, 1, "", "sample_sphere_distance"], [323, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[315, 3, 1, "", "sample"], [315, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[324, 4, 1, "", "compound_region_to_regions"], [325, 4, 1, "", "make_concentric_annulus_sky_regions"], [326, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [327, 4, 1, "", "region_to_frame"], [328, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[329, 4, 1, "", "get_images_paths"], [330, 4, 1, "", "make_path"], [331, 4, 1, "", "read_yaml"], [332, 4, 1, "", "recursive_merge_dicts"], [333, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[334, 4, 1, "", "hstack_columns"], [335, 4, 1, "", "table_row_to_dict"], [336, 4, 1, "", "table_standardise_units_copy"], [337, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[338, 1, 1, "", "Checker"], [339, 4, 1, "", "assert_quantity_allclose"], [340, 4, 1, "", "assert_skycoord_allclose"], [341, 4, 1, "", "assert_time_allclose"], [342, 4, 1, "", "mpl_plot_check"], [343, 4, 1, "", "requires_data"], [344, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[338, 3, 1, "", "run"]], "gammapy.utils.time": [[345, 4, 1, "", "absolute_time"], [346, 4, 1, "", "time_ref_from_dict"], [347, 4, 1, "", "time_ref_to_dict"], [348, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[349, 4, 1, "", "standardise_unit"], [350, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[351, 1, 1, "", "MapPanelPlotter"], [352, 4, 1, "", "add_colorbar"], [353, 4, 1, "", "annotate_heatmap"], [354, 4, 1, "", "colormap_hess"], [355, 4, 1, "", "colormap_milagro"], [356, 4, 1, "", "plot_contour_line"], [357, 4, 1, "", "plot_distribution"], [358, 4, 1, "", "plot_heatmap"], [359, 4, 1, "", "plot_map_rgb"], [360, 4, 1, "", "plot_npred_signal"], [361, 4, 1, "", "plot_spectrum_datasets_off_regions"], [362, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[351, 3, 1, "", "plot"], [351, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 65, 78, 79, 80, 82, 83, 86, 87, 90, 95, 96, 97, 98, 99, 100, 103, 104, 105, 118, 119, 124, 127, 132, 133, 137, 138, 139, 143, 163, 190, 196, 208, 212, 213, 218, 220, 221, 224, 225, 227, 228, 229, 231, 234, 236, 237, 241, 243, 244, 250, 251, 252, 255, 256, 257, 262, 265, 266, 267, 273, 283, 301, 349, 353, 354, 361, 364, 365, 367, 369, 374, 375, 376, 378, 380, 381, 382, 383, 384, 387, 390, 393, 394, 396, 397, 399, 400, 401, 402, 430, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 483, 484, 490, 491, 492, 493, 495, 496, 498, 503, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 562], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 65, 69, 72, 79, 81, 83, 84, 85, 86, 89, 91, 97, 98, 100, 103, 104, 105, 106, 107, 108, 110, 112, 114, 116, 117, 119, 120, 121, 122, 124, 126, 127, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 166, 167, 171, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 204, 206, 208, 209, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 271, 273, 275, 276, 277, 278, 281, 282, 283, 284, 291, 292, 311, 315, 322, 323, 341, 352, 354, 355, 359, 361, 364, 365, 367, 368, 371, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 397, 400, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 481, 482, 483, 484, 485, 486, 490, 492, 496, 500, 502, 505, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 558, 559, 560, 561], "00": [65, 83, 84, 85, 86, 96, 187, 365, 379, 432, 433, 434, 436, 437, 438, 439, 440, 442, 444, 445, 446, 449, 450, 452, 453, 456, 457, 459, 461, 462, 463, 464, 465, 466, 468, 469, 472, 473, 474, 475, 477, 479, 481, 482, 483, 484, 485, 513, 523, 543, 544, 554, 562], "000": [65, 83, 84, 86, 119, 379, 435, 437, 438, 440, 445, 446, 447, 449, 450, 453, 456, 457, 461, 462, 466, 468, 469, 474, 481, 482, 484, 513], "0000": 390, "000000": 461, "000000000000002": 466, "00000000000001": 440, "00000000000003": 458, "00000000000004": 461, "0000000000016": 82, "0000000000018": 89, "000000000002": 449, "000000000006": 449, "000000000007": 461, "00000000001": 461, "00000000e": [463, 464], "00000001": 82, "0000000e": 464, "00000143": [365, 562], "0000e": [96, 434, 437, 438, 439, 440, 442, 445, 453, 457, 463, 469, 483, 543], "0001": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 355, 447], "00010298": 462, "000150": 435, "0002": [435, 484], "00020": 435, "0002000": 435, "0003": 447, "00050": 435, "000500": 435, "0006": 435, "00074287037": [89, 450], "000742870370370241": 89, "0008": 461, "0009": 435, "000e": [437, 440, 446, 453, 457, 461, 469, 484, 543], "000true": 435, "001": [50, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 341, 449, 463, 521], "0016288e": 464, "001e": 65, "002018": 474, "0025508e": 464, "0028272e": 464, "0029": 389, "0029490222317034775": 482, "002e": 65, "003": [458, 468, 474], "003026327991562108": 446, "003131946268913696": 482, "0033": 560, "0036925550381217": 440, "00375698": 228, "004": 65, "00422666667": 454, "00449161": 233, "00490": 447, "00490483": 447, "0049409": 473, "005": 461, "00521472221220211": 446, "005914854792576181": 448, "0062e": 453, "0064830e": 464, "00688029": 228, "007": 461, "0076540e": 464, "008": [461, 559], "008164325487530225": 448, "008898002182656187": 448, "00894": 484, "009": 461, "00931e": 433, "009431203058496632": 448, "00e": [79, 433, 438, 449, 453, 457, 458, 462, 464, 465, 474, 482], "01": [39, 52, 72, 79, 83, 84, 86, 89, 97, 100, 104, 105, 107, 121, 127, 166, 167, 171, 181, 182, 187, 191, 194, 215, 221, 225, 227, 229, 244, 250, 365, 400, 432, 433, 437, 438, 439, 441, 442, 445, 446, 449, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 474, 475, 476, 482, 483, 484, 485, 490, 495, 505, 507, 508, 511, 515, 517, 519, 541, 542, 544, 546, 547, 548, 554, 559, 562], "010": 468, "010e": 65, "011": 468, "011872336272724": 482, "012": 468, "0122385e": 464, "01235137e": 464, "012733796525585": 470, "0129e": 457, "013": 445, "0139252e": 464, "014": [81, 97, 100, 104, 105, 163, 438, 461, 465, 482, 483, 507, 523], "0143724": 228, "0143764": 473, "01449": 79, "0145": 467, "01450": [455, 483], "0149044e": 464, "015": 461, "01551196351647377": 228, "0164": 447, "01648855015875024": 558, "01700709977114979": 454, "017442925431194484": 454, "018": 65, "018182745349064267": 446, "0183519e": 464, "01960784313726": 451, "019899368286133": 446, "01e": [163, 400, 433, 453, 461], "01t00": [83, 86, 89, 187, 365, 441, 449, 562], "01t01": 86, "01t02": 86, "02": [16, 65, 79, 89, 97, 100, 104, 105, 106, 110, 151, 158, 163, 181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 400, 432, 433, 435, 437, 438, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 472, 474, 479, 482, 483, 484, 505, 507, 508, 515, 516, 517, 523], "020": [446, 461], "020420144596410953": 470, "021": [65, 461], "0225e": 461, "02288737": 228, "023": 461, "023094": 527, "023473560586078527": 482, "023e": 441, "024": 461, "02432": 461, "024551293715163": 482, "024e": 484, "025": [461, 474], "0251191219844263": 447, "025e": 133, "026": [53, 65, 461], "02653": [441, 447], "026891": 461, "026914": 461, "027": 65, "028": 437, "028854": 467, "029e": 461, "02e": 79, "02t23": 82, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 65, 83, 85, 86, 193, 377, 392, 432, 433, 435, 446, 447, 449, 453, 457, 461, 464, 466, 468, 470, 471, 472, 476, 477, 483, 518], "031": [432, 544], "032": [432, 461, 482, 485], "0322": 65, "0322775e": 464, "033": [65, 461], "033176650892097": 91, "03383": 473, "034": 559, "0344": 65, "034796": 514, "034e": 435, "0354700e": 464, "0356": 433, "0356551": 433, "036": 65, "036e": 461, "037": 468, "03745318352059925": 552, "0375512e": 464, "0376213e": 464, "039": [445, 446], "039215686274545": 451, "03921700077803329": 446, "0395135e": 464, "03978226e": 469, "04": [30, 65, 89, 432, 436, 438, 440, 441, 443, 446, 449, 457, 458, 461, 464, 466, 469, 473, 474], "041": 474, "041345": 536, "0415": 484, "041882": 461, "042": 461, "0423761": 433, "042e": 461, "043": 65, "04357249662280083": 437, "044": 438, "04454": 474, "0447": 441, "0454683": 473, "046": 65, "0462798e": 464, "047": 65, "0473174": 233, "0474750e": 464, "048": [445, 474], "0482342e": 464, "04897634344908595": 91, "048e": 65, "049": [435, 445], "04939e": 433, "049676": 461, "04d": 449, "04e": 465, "04t15": 82, "04t22": 82, "05": [19, 20, 26, 29, 42, 65, 69, 83, 86, 99, 116, 117, 118, 119, 126, 194, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 325, 392, 432, 433, 434, 435, 436, 437, 438, 441, 444, 445, 446, 447, 450, 452, 453, 456, 459, 460, 461, 462, 463, 464, 465, 468, 469, 471, 472, 473, 475, 477, 482, 483, 510, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553], "050": 468, "05019": 133, "0503641": 433, "0505949e": 464, "05075": 464, "0508075688763": 461, "05088486522436142": 437, "051": [19, 20, 26, 468], "051c": [17, 21, 22, 24, 25, 27], "052": 461, "0520119e": 464, "0521842481248": 448, "05227": 461, "053": 445, "053212009682775": 470, "054833602905273e": 446, "05487060546875": 437, "0548e": 446, "054e": 65, "055": 461, "055e": 435, "0560": 484, "056130": 461, "05628243": 484, "05637e": 433, "05673": 484, "057": 461, "05762513693893088": 446, "058": 65, "058201": 461, "05853": 441, "058823529411775": 451, "058e": 441, "059": 65, "05901956e": 464, "0598579": 433, "05deg": 194, "06": [137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 432, 436, 445, 446, 447, 459, 461, 462, 463, 464, 465, 466, 469, 474, 477, 485], "0607e": 453, "061": [438, 484], "062": [449, 468, 469, 474], "0625": 469, "0628": 484, "063": 65, "0631757e": 464, "06334488877417636": 470, "064108e": 461, "06430": 447, "0643032": 447, "06450": 133, "065071": 461, "065119": 484, "06549": 133, "066": 437, "066442": 461, "0674": 441, "068245": 461, "0689": 463, "068e": 435, "069": 65, "069e": 453, "07": [97, 163, 339, 379, 400, 432, 435, 436, 438, 445, 447, 452, 456, 458, 461, 462, 464, 466, 468, 474], "07022": 133, "070483": 461, "070e": 441, "0711412": 433, "072": 65, "072945": 99, "073": 65, "0739282e": 464, "074": [461, 474], "07454639": 447, "07455": 447, "0746": 484, "0748": [461, 484], "075": 65, "07512322002655547": 446, "0756e": 433, "076": 484, "077": 433, "078": 435, "07843137254903": 451, "07943648658692837": 470, "07944657408": 461, "079464e": 484, "0799109224230051": 470, "07e": 458, "08": [82, 359, 400, 432, 439, 440, 442, 443, 445, 446, 453, 461, 462, 463, 465, 472, 474, 482, 483, 524], "080": 437, "0800792e": 464, "08075": 464, "08081469527619482": 440, "08088": [169, 465], "081": 437, "0811551760882139": 470, "08142": 460, "08191603310406206": 470, "08192": 447, "08192101": 447, "082": [432, 444, 461], "082691868487906": 454, "08269984": 484, "082e": 119, "083": [65, 461], "08328557573258877": 470, "0833333358168602": 437, "0833333432674408": 437, "08342": 133, "08388624433428049": 470, "084": [65, 432, 438, 477], "08447355125099419": 470, "0845515": 433, "085": [432, 436, 461], "08529426": 92, "0855013383552432": 470, "085e": 453, "08675": 462, "086e": 461, "087": 484, "08795162606984375": 470, "087e": 461, "088742": 461, "08880368117243051": 470, "08894569035619496": 470, "089": 128, "0894640e": 464, "0897868126630783": 470, "089881": 461, "08e": [453, 468], "09": [33, 119, 163, 432, 438, 441, 443, 445, 452, 461, 462, 464, 465, 482, 483, 484, 560], "090": 438, "0902437e": 464, "0907128e": 464, "091": [432, 554], "0910": [242, 243], "0914": [52, 53], "092": 437, "093": [432, 554], "093477": 447, "09348": 447, "094": [432, 554], "09426693227142095": 470, "094834": 461, "095": [432, 554], "095232": 461, "09562941": 484, "095707": 484, "096": 438, "0960": 484, "09607": 484, "09610314778983592": 470, "09623312838375568": 470, "097": 453, "09740295372903346": 470, "097e": 65, "09805": 133, "098665": 542, "098903": 461, "09907043184188653": 470, "09e": [465, 474], "0b100": 311, "0d": [121, 451, 462, 519], "0e": [387, 438, 440, 442, 446, 449, 453, 457, 462, 464, 466, 468, 469, 474, 482, 514, 515, 516, 517, 519, 520, 521, 522, 525, 526, 528, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "0f": [463, 474, 484], "0lssinhl": 465, "0rc": 393, "0rc1": 393, "0true": 447, "0x105fd0cf8": 364, "0x105fe3b70": 364, "0x129602550": 364, "0x7f6e459843d0": 462, "0x7f6e459844f0": 462, "0x7f6e48308a30": 470, "0x7f6e48308d30": 470, "0x7f6e5804d610": 471, "0x7f6e582e9430": 454, "0x7f6e59be0a90": 473, "0x7f6e5b08c6a0": 462, "0x7f6e5b227c40": 462, "0x7f6e5b2c8430": 470, "0x7f6e5b2c8460": 470, "0x7f6e5b69c6a0": 473, "0x7f6e5b6a70a0": 473, "0x7f6e5bb75b20": 451, "0x7f6e5bb75d60": 451, "0x7f6e5bebc610": 473, "0x7f6e8ea2db20": 469, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 62, 64, 65, 69, 70, 71, 72, 74, 79, 82, 83, 84, 86, 90, 91, 96, 97, 99, 100, 104, 105, 106, 109, 110, 111, 112, 116, 118, 119, 120, 121, 122, 124, 125, 127, 128, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 158, 163, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 201, 204, 206, 208, 209, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 237, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 273, 275, 276, 277, 281, 282, 291, 292, 304, 305, 311, 312, 313, 322, 323, 325, 326, 349, 351, 354, 355, 359, 361, 364, 365, 367, 368, 371, 372, 374, 375, 376, 378, 379, 381, 384, 386, 387, 388, 389, 390, 391, 393, 394, 397, 400, 401, 404, 405, 407, 408, 412, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 479, 482, 483, 484, 486, 490, 491, 492, 495, 496, 498, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 559, 560, 561], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 64, 65, 82, 83, 84, 85, 86, 97, 98, 100, 103, 104, 105, 106, 110, 112, 116, 117, 119, 120, 121, 125, 126, 127, 132, 133, 134, 137, 138, 140, 142, 144, 150, 151, 152, 153, 154, 156, 163, 169, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 201, 204, 206, 215, 218, 230, 231, 233, 234, 255, 267, 282, 311, 313, 323, 352, 357, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 386, 387, 388, 392, 394, 400, 405, 407, 418, 420, 423, 427, 429, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 482, 483, 484, 486, 492, 496, 502, 505, 507, 508, 509, 510, 520, 521, 524, 526, 529, 530, 532, 533, 534, 535, 537, 538, 540, 541, 542, 546, 547, 548, 558, 559, 562], "100": [19, 20, 26, 46, 47, 71, 89, 119, 127, 142, 143, 153, 194, 196, 208, 209, 212, 213, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 233, 237, 239, 241, 242, 243, 244, 247, 250, 252, 254, 255, 256, 257, 260, 262, 264, 265, 267, 269, 323, 364, 365, 367, 372, 383, 403, 433, 434, 437, 440, 445, 446, 447, 449, 450, 451, 453, 454, 458, 460, 461, 462, 464, 465, 466, 469, 471, 473, 474, 475, 484, 488, 490, 491, 492, 496, 507, 510, 511, 514, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 559], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184, 189, 364, 367, 435, 461, 462, 464, 471, 474, 484, 510], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 98, 103, 142, 153, 156, 166, 461, 474], "100000": [71, 461, 482], "1000000": [51, 52, 54, 461, 543], "10000000": 543, "1001": [422, 449, 450], "1002": 422, "10041": 132, "10045": [63, 257, 542], "10049": 433, "1006": 422, "101": [408, 458, 461], "1012": 460, "1013": 423, "1014": 423, "101430": 458, "10172": 469, "101e": 457, "102": [163, 441, 559, 560], "1021": 423, "1025": 423, "1026": 423, "10262943822890519": [91, 470], "1027": 423, "102877228833871": 470, "1029": [423, 457], "10295505": 484, "102e": 461, "103": [132, 403, 426], "103000133": 475, "1031": 423, "10317325958321796": 482, "1032": 423, "1034": 484, "1035": 423, "10350021860740599": 438, "1036": 441, "1038": 423, "104": 447, "1040": 423, "10409": 447, "10409446": 447, "1043": 423, "104317": [97, 462, 468], "1044": 441, "1045": 423, "1046": 382, "10470702368766069": 470, "10477": 484, "105": [78, 432, 437, 438, 476, 554], "1051": 423, "1052": 461, "1053": 423, "1054": 423, "1054498": 128, "1057": 423, "10592": 562, "105953": 484, "1061971e": 464, "106217": 79, "1062535e": 464, "1064": 461, "1065": 423, "1067": 423, "1069": 423, "107": [432, 433, 466, 554], "1070": [423, 484], "1072542e": 464, "1073": 423, "10752883769757363": 470, "1076": 423, "1078": 423, "107e": 461, "108": 420, "108034597491956e": 469, "108043": 445, "1082": 423, "1083": [423, 457], "1084": 423, "1085": 423, "1085000": 445, "1086": 282, "1087": 423, "1088": 423, "1089": 423, "109": [403, 466], "1090": 423, "1092": [423, 441], "1093": [423, 441], "1098": 423, "1099306e": 464, "109e": 447, "10d": 451, "10e": [163, 461, 464], "10k": 184, "10th": [391, 402], "11": [65, 83, 86, 89, 119, 120, 124, 125, 204, 325, 368, 371, 373, 381, 388, 392, 403, 404, 425, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 447, 449, 450, 451, 453, 455, 456, 457, 458, 461, 462, 463, 465, 467, 468, 471, 474, 482, 483, 484, 507, 509, 560], "110": [461, 474], "1100": 423, "110000": [462, 465], "1102": 423, "1102e": 434, "1103": 423, "110380": [79, 380, 442, 445, 447, 473], "1104": 423, "1105": 423, "1107": 423, "1108": 423, "111": [352, 371, 423, 445, 461], "1110": 423, "1111": [134, 461, 484], "111140": [380, 442, 445, 447], "111159": [380, 442, 445, 447, 473], "1115": 423, "111507416": 458, "111630": [85, 458, 473], "111797": 461, "11184": [63, 256, 541], "112": 433, "11208": 63, "1127": 423, "11291820875721864": 470, "113": 484, "1131": 372, "1133": 423, "1134": 423, "1136": 423, "114416978060046": 457, "1149": 462, "115": 65, "1150": 423, "11517": 484, "11553325504064559": [91, 470], "11587179071752986": 91, "116": 403, "1160": 461, "11610": 484, "1162": 423, "1166": 423, "1167": [371, 378], "1169": 423, "116e": 65, "117": [403, 437, 524], "1170": 423, "1172": 378, "1173775": 461, "1176": 423, "117877e": 461, "1179": 423, "118": [132, 445, 457], "1183": 423, "118355": 461, "119": [441, 445], "1190": 423, "1193777560333226e": 455, "119432": 433, "1195": 423, "11af4c": 403, "11e": [443, 461], "12": [17, 38, 42, 65, 82, 83, 86, 97, 100, 107, 119, 133, 153, 156, 182, 183, 184, 186, 192, 195, 196, 208, 212, 218, 220, 224, 231, 241, 243, 252, 255, 256, 257, 267, 368, 370, 371, 372, 373, 375, 376, 381, 384, 387, 403, 407, 408, 409, 421, 426, 432, 433, 435, 437, 438, 439, 440, 441, 442, 445, 447, 448, 449, 454, 455, 456, 457, 461, 462, 463, 466, 468, 469, 471, 472, 474, 482, 484, 485, 496, 507, 510, 511, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 528, 531, 532, 535, 536, 537, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553], "120": [53, 379, 439, 474, 518], "120000": 442, "120154": 461, "1204": 423, "1207": 423, "120e": [65, 484], "121": [65, 447, 468], "1210": 423, "1211": [423, 461], "121241": 445, "12148": 441, "1215": 423, "1216": 434, "12186": 484, "1219": 461, "122": [65, 132, 403, 435, 468], "1220": 423, "1226": 423, "1227": 423, "12276676166802643": 470, "123": [83, 86, 376, 437, 441], "1231": 424, "1234": 84, "123456789": [187, 365, 562], "1235": 423, "1237": 372, "1238": 423, "123890826": 82, "123892513": 82, "1239": 369, "123944": 79, "124": [132, 376, 437, 441, 461, 468], "1240": 423, "12423250e": 464, "1243": 484, "1244969200533408": 292, "1246": 423, "12493874": 464, "124e": 65, "125": [65, 119, 132, 437, 447, 466, 474, 484, 559], "12518": 446, "12525306": 454, "125315": 517, "12546": 63, "125e": 446, "126": [65, 435, 461, 463], "12611": 133, "1264500e": 464, "126585": 433, "1266": 423, "1268": 423, "12688": 79, "1269263e": 464, "12697": 446, "127": 441, "12704": [132, 133], "1271v": 283, "12751": 433, "1277": 370, "1278": 371, "12794487": 469, "128": [403, 458, 486], "12809": [97, 462, 468], "1281": 423, "12816": 484, "12856": 474, "1287": 423, "1289": 423, "128e": 435, "129": 429, "1290": 423, "1291": 423, "1294": 423, "1299": 461, "129e": 441, "12nan5": 435, "12r_": 53, "12th": [389, 402], "13": [65, 96, 119, 133, 193, 291, 368, 369, 373, 378, 383, 392, 408, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 482, 483, 484, 492, 560], "130": 507, "1300": 423, "1301v": 38, "13030": 484, "1305": 423, "13061": 469, "131": [435, 447], "1310": 484, "1312": 423, "13133": 484, "13152": 447, "1316": 423, "1317": 424, "1318": 423, "1319": [89, 423], "13197": 445, "132": 441, "1321e": 446, "13226": 484, "132361": 118, "132472": 447, "133": 133, "1331": 424, "1334": 424, "1337": 424, "1339": 424, "133e": [435, 441], "134": [133, 438, 441, 447], "1341": 424, "1342a": 143, "1343": 424, "1344": 461, "1345": 424, "1346": 424, "1347": 424, "135": [38, 96, 133, 435, 461, 463], "13500212963": 461, "13500566998758723": 448, "1351e": 461, "1354": 424, "135498046875": 437, "1357": 424, "1359316": 484, "135e": 119, "136": 461, "1360": 424, "1361": 461, "1362": 424, "1367": 424, "1369": [372, 424], "137": [438, 441, 448], "1372": 424, "137254901960785": 451, "1373": 424, "1374": 424, "1376": 424, "1377": 424, "1378": 424, "1379190199428797": 292, "137990": 461, "137e": 441, "138": [403, 435, 449, 484], "1381": 424, "1386": [424, 530], "1387": 424, "138e": 447, "139": [437, 441, 474], "13911": 484, "1395": 424, "1396": [364, 438], "13960": 484, "1397": 424, "1397412321592923": 470, "13e": 462, "13nan6": 435, "13th": 402, "14": [28, 63, 65, 82, 365, 368, 373, 376, 381, 383, 384, 422, 432, 433, 435, 436, 437, 438, 441, 445, 458, 461, 462, 463, 465, 467, 468, 469, 472, 483, 484, 559], "140": [432, 437, 465, 472, 475], "1401": 424, "1406": 424, "140779935183259e": 455, "14079": 132, "1408": [424, 484], "141": [290, 447, 461], "1411180": 445, "1412": 424, "14121": 447, "1412536400000000": 484, "14149953611195087": [91, 470], "14150": 447, "1419": [372, 425], "141945": 433, "142": [65, 403, 435, 461, 484], "14201": 132, "1421": 424, "14210": 435, "1426": 424, "142e": 461, "143": 441, "1432": 424, "1433": 424, "1435": 424, "1438": 166, "1438465e": 464, "1439110308062257": 470, "144": [432, 435, 468, 484, 523], "14419991": 92, "1442739329466746e": 469, "1443": 424, "1444": 424, "1445": 378, "14457": 484, "1446": 424, "1447": 424, "145": 461, "1451": 379, "14531053887243": 447, "1456": 424, "1456479e": 464, "146": 484, "14610": 562, "146472": 461, "1467": 134, "14671140315352": 448, "147": [422, 461, 466], "1470": [424, 484], "1474": 424, "1475": 424, "1476": 424, "14773": 474, "147e": 461, "148": [437, 441], "1482": 461, "1485314": 92, "1486415e": 464, "1489": 424, "149": [437, 465, 468], "1491": 447, "1492": 424, "1494": 447, "1495": 424, "1496e": 442, "1499472780781963": 292, "149e": 461, "14e": [442, 460], "14msts37sst": [449, 450], "14nan3": 435, "14nan5": 435, "14th": [388, 391, 402], "14yr_catalog": 63, "15": [39, 42, 65, 83, 84, 86, 99, 118, 140, 141, 142, 143, 144, 145, 150, 151, 152, 154, 193, 354, 355, 359, 373, 381, 403, 407, 412, 417, 420, 421, 422, 424, 432, 433, 437, 438, 441, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 458, 461, 463, 465, 466, 468, 469, 474, 484, 507, 515], "150": [125, 132, 133, 403, 435, 437, 449, 450, 466, 484], "1505": 424, "15076259": 92, "151": [403, 468], "1510": 128, "1510240e": 464, "1511": 457, "15140": 441, "1515": 424, "15154854": 92, "1517": 424, "152": [441, 447, 483], "1520": 486, "1521": 447, "15228678433255e": 482, "1523": 449, "15246": 449, "152477": 474, "1527": 424, "153": 461, "1530": 462, "15319": 449, "153600": 462, "154": [403, 433, 461], "1543": 424, "154e": 447, "155": 403, "15518": 484, "1552": 443, "1553": [461, 484], "1554": 424, "1554106e": 464, "1556": [424, 461, 484], "1556008e": 464, "1558": 424, "156": [403, 438, 441, 447, 468], "1562": 424, "15621": 484, "1564": 424, "156525": 461, "1567629e": 464, "1568": 424, "15686274509804": 451, "157": [403, 484], "1573": 424, "1576": 424, "158": [133, 433, 438, 445], "1582": 424, "1586": 89, "15899": 441, "1589e": 457, "1594": 424, "1597317": 92, "159t": 52, "15h14m00": 461, "15nan8": 435, "16": [16, 24, 53, 65, 89, 99, 104, 105, 118, 182, 368, 372, 381, 384, 385, 401, 408, 423, 428, 430, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 509, 551, 559, 560], "160": [31, 119, 403, 412, 451, 468], "1600": 450, "1605": 424, "16056": 441, "1606": 424, "1607": 460, "160e": 65, "161": [132, 372, 437, 447, 461], "1610e": 461, "161250": 453, "1613279491744304": 470, "1616": 424, "1618850e": 464, "1619e": 96, "162": 65, "16227766": 466, "1622776601683795": [465, 466, 482], "16240": 483, "16287": 484, "1629219e": 464, "163": [451, 559], "1630": [424, 484], "16303": 447, "16303044": 447, "1634": 424, "164": [432, 461, 554], "1642": 433, "165": 468, "1650": 484, "16506": 433, "16511": 447, "16511148": 447, "1658": 424, "166": [403, 447, 461], "1660": 424, "16650390625": 434, "1665478": 92, "167": [403, 447, 453], "167219": 461, "1675": 424, "167e": 441, "168": [432, 461, 484, 544], "1681": 424, "1685": 424, "1686": 461, "1687": 82, "168702": 433, "169": [432, 437, 447, 544], "1691": 433, "1695": 424, "1696": 424, "169627": 453, "1697": [424, 533], "169871": 453, "16t15": [514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "16t16": [438, 469, 482], "16th": 402, "16totjap": 469, "17": [20, 21, 40, 65, 82, 375, 378, 381, 412, 429, 432, 433, 447, 451, 457, 458, 459, 461, 462, 463, 464, 465, 466, 468, 474, 475, 484, 560], "170": 434, "17016482e": 463, "1702": 424, "17020": 441, "1703": 533, "171": 441, "1710": 425, "1711": 424, "1713": 434, "1715": 378, "1717": 484, "171749": 484, "1719502": 92, "1719610": 92, "1719670": 92, "171b": 266, "172": [436, 451], "17229679": 92, "173": [432, 461, 462, 472], "1731": [424, 468], "1732": 461, "17320": 461, "1737799900000000": 484, "1742": 65, "17445": 484, "1746": [424, 484], "1748": [424, 468], "175": [432, 485], "1750": 424, "1751": 424, "1753": 484, "1755": [424, 441], "1759": 424, "175e": 461, "176": [133, 403, 432, 458, 461, 523], "1760": 424, "1761": 424, "1762": 486, "1763": [425, 461], "1764": [424, 447], "176470588235294": 451, "1766": 425, "1768896e": 464, "177": [403, 474, 475], "17776": 433, "177e": 461, "178": [423, 457], "178442": 65, "1785": [424, 433], "1791": 424, "179475": 233, "1799": 424, "17a": 461, "17e": 468, "17g": 50, "17th": 418, "18": [11, 83, 86, 132, 193, 368, 383, 389, 409, 415, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "180": [378, 396, 398, 403, 432, 461, 466, 523], "1800": [424, 450, 466, 473], "180000": [449, 450], "1804": 461, "180458": 445, "18046952655570045": 292, "1805": 378, "1807": 425, "1808": [424, 461, 484], "181": 441, "1811": 440, "1812": 424, "1813": 461, "1818": 424, "182": 457, "1821": 424, "1822": 424, "1825": 461, "18257": 441, "183": [437, 445], "1830e": 437, "183139597": 82, "1834": 434, "1835": 89, "1836": 425, "1836544903987521": 470, "1837": 425, "18385658": 447, "18386": 447, "18392464": 498, "184": [82, 89, 417, 421, 432, 441, 449, 456, 467, 468, 544], "18400002": 456, "1841": 373, "1845": 425, "1846": 425, "18465": 484, "1849": 425, "184989894219835": 454, "185": [432, 467, 544], "1854": [425, 461], "1855": 425, "1857": 425, "1859": 425, "186": [416, 447, 461], "1861": 425, "1862": 425, "186484131475074": 323, "1866": 465, "186643": 484, "1867": 457, "186e": 441, "187": [409, 416, 447], "1871": 425, "1877": 374, "188": [416, 432, 433, 461, 544], "1883": 425, "1884": 425, "18842983819716610": 447, "1888": 425, "188e": 435, "189": 464, "1890": 425, "1891": 425, "18921591": 464, "1893": 425, "1893e": 461, "1894": 425, "1895": 425, "1898": 425, "18988": 484, "1899070e": 464, "18a": 61, "18h43m48": 65, "19": [51, 53, 54, 65, 193, 368, 380, 382, 384, 403, 411, 412, 414, 426, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 485], "190": [438, 461], "1902": [63, 257, 542], "1903": 425, "1904": 425, "1905": 446, "1908": 425, "1909": 425, "191": [132, 416], "1910": [169, 465], "1912": 425, "1913": 457, "1917": 484, "1918": 425, "1919": 425, "1920": 484, "1921": 425, "19214093": 92, "1922": 425, "1926": 425, "1926520e": 464, "1927": 425, "1928": 461, "1929": 425, "193": [441, 457, 474], "1930": 425, "1933": 425, "1934": 425, "19354": 447, "1936925": 92, "1937": [425, 461], "194": [416, 437], "1943186": 92, "1947565": 92, "1949": 425, "194e": 457, "195": 228, "1950rspsa": 52, "1951": 404, "1953830": 92, "1955810e": 464, "1958e": 463, "196": [65, 432, 433, 453, 468, 523], "1960784313725492": 451, "1961": 134, "1962": 404, "1963": 461, "19646": 474, "1965tralm": 21, "1966": 404, "1969": 404, "196991563774588": 267, "197": [65, 447], "1971": 375, "19735897928723367": 448, "1975": 404, "1976572e": 464, "1978": 461, "1979": [278, 284, 404, 557], "1979892": 447, "1980": 461, "1982": 37, "1983": 557, "1986": 376, "1986027": 484, "1987": 447, "19879005": 166, "1988": 404, "1989": 404, "199": [447, 468], "1990": [37, 404], "1990apj": [36, 37], "1991": 404, "1991mnra": 22, "19932878": 464, "1994": [404, 557], "1994a": [52, 53], "1995": [403, 404], "1995a": 276, "1995apj": 17, "1996": [27, 441, 454, 557], "1996mnra": 27, "1997": 482, "1997apj": 25, "1998": [83, 86, 404, 557], "1998apj": 28, "1999": [53, 187, 365, 562], "19991": 482, "199999809265137": 461, "19999999999999998": 440, "1999apj": 53, "19e": 465, "19th": 402, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 104, 105, 121, 141, 142, 151, 165, 182, 184, 318, 357, 370, 374, 375, 377, 378, 379, 380, 383, 384, 385, 396, 406, 408, 409, 410, 411, 415, 417, 420, 424, 426, 427, 430, 432, 433, 434, 435, 436, 437, 439, 441, 445, 452, 457, 462, 463, 465, 467, 469, 470, 471, 473, 474, 482, 494, 496, 498, 503, 506, 511, 555, 557], "1dc": [78, 79, 85, 97, 100, 104, 105, 109, 111, 112, 116, 132, 133, 138, 142, 143, 144, 153, 352, 357, 359, 372, 374, 380, 384, 405, 433, 440, 442, 445, 447, 453, 457, 458, 462, 464, 468, 496], "1deg": 194, "1e": [19, 20, 26, 82, 95, 124, 125, 127, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 234, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 267, 278, 284, 325, 339, 341, 364, 375, 435, 437, 439, 441, 443, 445, 447, 449, 450, 453, 455, 457, 458, 461, 463, 469, 471, 474, 475, 492, 496, 500, 524, 525, 526, 528, 531, 532, 536, 537, 539, 540, 541, 542], "1e0": 490, "1e10": [51, 143], "1e11": 463, "1e12": [490, 500], "1e2": [435, 490, 492], "1e3": [474, 500], "1e30": 534, "1e4": [463, 474, 475], "1e40": 491, "1e5": [439, 474, 492, 510, 511], "1e51": 52, "1e6": [45, 474, 488, 543], "1e7": [121, 543], "1f": 438, "1fhl": [409, 422], "1fhl_name": 69, "1h": [120, 153], "1htsw3bu": 465, "1k": [97, 104], "1kpc": 492, "1lhaaso": [57, 68, 430, 461], "1lhaaso_catalog": 57, "1rc1": 393, "1tev": [52, 53, 125, 450], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 62, 65, 66, 69, 70, 71, 72, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 96, 97, 99, 100, 104, 105, 108, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133, 135, 136, 140, 141, 142, 143, 145, 151, 153, 156, 163, 166, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 196, 204, 205, 206, 207, 208, 212, 216, 218, 220, 224, 226, 227, 231, 234, 241, 242, 243, 248, 249, 251, 252, 255, 256, 257, 262, 266, 267, 273, 275, 276, 277, 278, 283, 284, 289, 291, 311, 313, 349, 352, 357, 359, 361, 364, 365, 368, 369, 373, 375, 376, 378, 379, 380, 381, 384, 387, 388, 389, 390, 391, 393, 396, 398, 400, 403, 404, 405, 406, 407, 408, 415, 420, 421, 422, 423, 424, 425, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 482, 483, 484, 486, 492, 495, 496, 498, 503, 504, 505, 507, 508, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561], "20": [16, 38, 79, 83, 85, 86, 97, 100, 104, 105, 144, 145, 150, 152, 154, 163, 183, 184, 186, 192, 195, 196, 276, 291, 365, 368, 369, 370, 372, 377, 379, 382, 384, 389, 426, 432, 433, 437, 438, 439, 441, 442, 443, 445, 447, 448, 449, 452, 454, 455, 456, 457, 458, 460, 461, 463, 465, 466, 468, 469, 471, 473, 476, 477, 482, 483, 484, 486, 505, 507, 508, 509, 515, 516, 517, 520, 521, 530, 533, 538, 544, 559], "200": [52, 83, 86, 127, 194, 388, 416, 437, 438, 441, 447, 451, 453, 461, 466, 469, 484, 559], "2000": [84, 97, 100, 104, 105, 121, 221, 225, 227, 229, 244, 250, 404, 449, 450, 451, 465, 474, 484, 557], "2000000": 445, "20000000000000004": 440, "20009124": 464, "2000apj": 267, "2000e": 469, "2001": [89, 404, 441, 557], "2002": [83, 86, 282, 454], "2003": [283, 454], "2003mnra": 283, "2004": [82, 89, 454, 476], "2004a": [39, 40], "2004aph": [79, 84], "2004mnra": 24, "2005": [63, 557], "200503": 433, "2005a": 461, "2006": [31, 33, 379, 441, 448, 456], "200638": 484, "2006a": 267, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 112], "2007": [382, 557], "20072608": 464, "2008": [38, 82, 216, 264, 474, 486, 524], "2008aj": 38, "2009": [127, 285, 405, 441, 557], "20097159": 464, "2009851": 464, "20099855": 464, "201": [52, 432, 457, 466, 544], "2010": [121, 143, 216, 233, 289, 365, 524, 557, 562], "2010a": [233, 267], "2010mnra": 143, "2011": [216, 486, 524], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [86, 405, 557], "2013": [128, 384, 390, 394, 403, 454], "20136": [78, 292, 476], "20137": [292, 476], "2013aph": 266, "2014": [134, 402, 486], "2015": [52, 82, 378, 381, 402, 474], "20151": 292, "2015apj": [60, 120], "2015jheap": 267, "2016": [26, 378, 381, 402, 405, 454, 465], "2016apj": 58, "2017": [216, 369, 371, 381, 384, 400, 402, 405, 447, 473, 524], "2017apj": [59, 61], "2017icrc": 473, "2018": [52, 369, 370, 371, 372, 373, 374, 375, 379, 381, 383, 384, 402, 429, 473, 476, 557], "2018a": 120, "2019": [371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 402, 424, 425, 448, 473, 557], "202": 447, "2020": [193, 373, 384, 385, 386, 387, 388, 402, 448, 449, 457, 466, 546, 547, 548], "2021": [85, 216, 386, 388, 402, 429, 457, 469, 524], "2021345e": 464, "2022": [389, 390, 402, 405, 475], "2023": [376, 391, 392, 402, 405], "2023arxiv230517030c": 57, "2024": [99, 118, 401, 402, 438, 469, 482, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "2024e": 483, "2026": [376, 405], "2028": 405, "203": 437, "2030": [376, 405], "2031": 405, "20326": [291, 434], "20327": [291, 434], "2033": 405, "20339": 291, "2034": 405, "20343": 291, "20344": 291, "20345": 291, "20346": 291, "20349": 434, "2035": [117, 119, 405], "20350": 434, "2036": [117, 119], "2037": 405, "20372": 473, "2038": 405, "2039": 405, "20396": 434, "20397": 434, "204": 132, "2040469e": 464, "2041222e": 464, "20421": 434, "20422": 434, "2045": 376, "2046": 405, "2049": [405, 461, 484], "205": [416, 432, 447, 466, 544], "2050": 405, "20508075688775": 461, "2051": 405, "20517": 434, "20518": 434, "20519": 434, "205192": 461, "20521": 434, "2053315944536949e": 473, "205357": 461, "2054": 405, "20559": 484, "2058705e": 464, "206": [441, 461], "2061": 461, "2062580e": 464, "2064": 405, "2064335": 92, "2065": 405, "2066": 405, "2068682e": 464, "2069": 405, "207": [447, 451, 468], "2071": [376, 405], "2075": 392, "207520865": 456, "207521465": 456, "2076": 405, "2077": 405, "2079930e": 464, "208": [432, 523], "2085": 405, "2089": [378, 407], "20898": 434, "20899": 434, "209": 447, "20900": 434, "2093": 405, "2095": 447, "2097": [405, 433, 440, 442, 445, 447, 453, 457, 473], "2097e": 437, "2098": 405, "20deg": [449, 450], "20e": 464, "20th": 390, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 96, 121, 138, 367, 368, 412, 418, 427, 433, 437, 441, 443, 447, 456, 460, 461, 464, 466, 484, 511, 559], "210": [416, 461], "2103": 461, "2104": 406, "2104353e": 464, "210474": 545, "2106": 406, "2108": 406, "211": [432, 461, 462, 472], "2111": 406, "2112": [406, 483], "2114": 406, "2115": 406, "211770556360534": 458, "2118": 406, "2119": 406, "211e": 461, "212": [65, 416, 437, 461], "2121": 406, "2121164e": 464, "2123": 406, "21236e": 433, "2124": 406, "2126": 406, "2128": 406, "2129": [378, 407], "213": 439, "2130": 406, "2131": [406, 461], "2132": 406, "21325": 474, "2133": 406, "2136": [377, 408], "2139": 406, "214": [435, 441], "2140": 406, "2141": 406, "2142": 406, "214271": 539, "2145": 406, "2146": 406, "21464892": 484, "215": [65, 416, 430, 461], "21500000000003": 518, "2151": 406, "2152": 406, "21525376976022406": 448, "2153": [406, 461], "2154": [406, 461], "2155": [410, 454, 456, 457, 461, 470, 484, 524], "215686274509824": 451, "2157": 406, "2159e": 96, "215e": 461, "216": [228, 437, 438, 466, 468, 553], "2160": 406, "2162670e": 464, "2163": 406, "2164425e": 464, "2166": 406, "2169": 406, "217": 461, "2171": 406, "21731921e": 466, "21733761e": 466, "21735587e": 466, "218": [60, 120], "2190": 382, "2192": 407, "21t19": 89, "21t20": 89, "22": [65, 79, 81, 84, 97, 100, 104, 105, 127, 158, 163, 166, 181, 182, 191, 194, 368, 402, 415, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 495, 502, 505, 507, 508, 511], "220": [432, 445, 461, 468, 544, 559, 560], "2200": 407, "2201": [63, 256, 461, 484, 541], "2202e": 484, "2204": 407, "2206": 407, "220e": 461, "221": [378, 416, 432, 437, 477], "22149": 441, "2217": 407, "2217412e": 464, "2218": [381, 408], "2219": [380, 408], "222": [58, 432, 461, 468, 523], "2221": 461, "22245374e": 119, "2227134679628": 457, "22271346796282": 457, "22271346796283": 457, "2229": [377, 407], "223": 468, "2230": 407, "2231": 461, "2235": 407, "2237": [407, 484], "2238": 407, "2239": 407, "2240": 407, "2243": 407, "2244": 407, "224436": 484, "225": [91, 291, 292, 388, 416, 432, 461, 523], "2250": 407, "22500": 443, "2254": 407, "2255": [382, 470], "225575051666": 461, "2255890": [456, 470], "2257": 407, "2259": 407, "226": [447, 474], "22608": 462, "2262": 407, "22635140877790516": 463, "2264": [376, 407], "22646133647326874": 463, "2264827111476982": 463, "22648881839710966": 463, "2265163003209506": 463, "22662622801631419": 463, "227": [432, 437, 459], "2270": 381, "2272": 407, "2274": [383, 408, 433], "2276": 407, "2277": 407, "2278": 407, "2278975306934438": 463, "2279": [381, 408], "227e": 461, "228": [278, 284, 372, 378, 437, 438, 443, 461, 465, 476], "2287": 407, "2289": 407, "229": [65, 461], "2290": 383, "2292": 408, "2294": 407, "229533": 525, "2296": 407, "2297": 407, "22974080e": 474, "2298": 407, "22e": 465, "22nd": 402, "23": [89, 166, 364, 368, 390, 402, 426, 434, 439, 441, 457, 461, 463, 466, 468, 470, 484, 507], "230": [416, 441], "2300": 407, "2304": 382, "2305": 407, "230542e": 461, "2307": 63, "2308": 408, "231": 416, "2310": 407, "2313": 408, "2314": 408, "232": 61, "2320": [408, 461, 462], "2321": 408, "2323": 408, "2326": 408, "2327": [461, 468], "23273": 474, "233": [432, 436, 438], "2330": 408, "23306": 441, "2332": 468, "2334": 408, "2335": 408, "2338": 408, "2339": [434, 461, 484], "234": [416, 432, 451, 452, 458], "234132519034915": 466, "23413252": 466, "2342": 408, "2343": 408, "234359264373779": 465, "2343e": 468, "2344": 408, "2345": 408, "2346": 408, "2347": 408, "235": [416, 437], "2350": 409, "2351": 408, "23523": [136, 163, 400, 437, 438, 446, 455, 462, 463, 465, 476, 482, 483, 495, 498, 558], "23526": [136, 437, 438, 446, 455, 462, 463, 465, 476, 482, 483, 558], "235294117647083": 451, "2354": 408, "23559": [437, 438, 455, 462, 465, 482, 483, 505, 507, 508, 558], "2356": 408, "2357": 468, "2358": 408, "2359": 408, "23592": [437, 438, 455, 462, 465, 482, 483, 505, 507, 508, 558], "236": [416, 432, 461, 544], "2360": 408, "2362506e": 464, "23628": 474, "2365": 408, "2366": 408, "2367": 408, "2368": 408, "237": 433, "23734": 484, "2375": 408, "2377": 408, "2378": 408, "2379": 408, "2381": 408, "238298": 433, "2384": 433, "2385": 408, "239": [65, 432, 447, 544], "23905561": 464, "239439": 484, "239557417": 82, "2399": 461, "239e": 461, "23a": [60, 120], "24": [25, 27, 52, 53, 82, 83, 86, 89, 367, 368, 381, 385, 419, 424, 433, 441, 457, 461, 462, 466, 468, 473, 474, 482, 507, 524, 531, 540, 541, 542], "240": [97, 100, 104, 105, 116, 461, 462, 496], "2400": 408, "2401": 408, "2404": 408, "2405": 409, "241": 461, "2412": 408, "2414": 461, "2419": 433, "242835": 65, "2431": 461, "2433": 409, "2435": 409, "244": [65, 416, 437], "2440": 461, "2441": 409, "244140625": 468, "2443672e": 464, "2444": [409, 441], "2446": [409, 468], "2448": 409, "2449": 409, "245": [416, 438], "2450": [409, 468], "245152": 447, "2454": 409, "2455": 409, "2459": 409, "246": 416, "2461": 409, "24611324074": 461, "2463": [384, 409], "2464": 409, "2465055e": 464, "246551": 550, "2468": 409, "24685677e": 464, "247": [65, 416, 438], "2470": 409, "2471938975366008": 291, "2472": 409, "2475": 409, "2476": 409, "2477": 409, "2478": 409, "2479": [409, 483], "248": 416, "2481": 409, "248122": 461, "2483": 409, "2485": 482, "2486": 409, "249": [22, 416], "2490": 409, "2491": 409, "2492": 409, "2493": 409, "2496": 409, "24968": 433, "2497": 409, "2498": 409, "2499": 409, "249965667724609": 465, "249e": 133, "24e": [461, 468], "25": [33, 52, 83, 86, 96, 132, 142, 153, 166, 278, 284, 368, 381, 388, 402, 423, 430, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 516, 521], "250": [466, 557], "2501": 409, "250185": 465, "2502": [409, 447], "2505": 409, "2505121": 92, "2505703": 458, "2509": 461, "251": [441, 445], "2510": 409, "251185": 484, "2511884200000000": 484, "25162e": 433, "2518": 461, "251932": 461, "252": [416, 437, 447, 461], "2520": 409, "2521": 409, "2523": 409, "2525": 409, "2528": 409, "253": [440, 468], "2535": 409, "2536": [409, 468], "2537": 468, "2538": 409, "254": 416, "2540": 409, "2546": 409, "254901960784338": 451, "25496": 484, "2551": 409, "2552": [409, 461], "2553": 409, "2555": 385, "2557": 409, "255750516626": 461, "2558": 409, "2559": 409, "256": [65, 419], "2560538e": 464, "2561": 409, "2562": 409, "2563": 409, "2564": 409, "2565e": 457, "2567": 409, "2568720263723087": 448, "257": [132, 440], "2574": 409, "25743553e": 463, "25763": 441, "257642": 461, "2579999": 473, "258": [440, 522], "2580": 409, "2585": 409, "2587": 409, "2589254117941673": 482, "259": [440, 482, 484], "2591e": 461, "2594": 409, "2595": 409, "259e": 133, "25b": 17, "25e": 468, "25t_": 53, "25th": 390, "26": [19, 83, 86, 368, 402, 430, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 486, 534, 552], "260": [419, 484], "2604": 409, "2609": 468, "261": [419, 484], "2610e": 445, "2616": 409, "26173": 441, "2619": 409, "262": [419, 441, 468, 484], "2620": 409, "2625818241224747": 463, "2627": 409, "262728": 473, "26272868097919794": 470, "2628525e": 464, "263": [132, 133, 441, 468], "2634e": 446, "2635": 409, "2635108e": 464, "2637": 409, "26392": 443, "2639554729438709": 470, "264": [132, 419, 447], "2645": 409, "264516271942103": 482, "2648150": 92, "2649e": 463, "265": [32, 133, 378, 433, 441, 447, 468, 484], "2651": 409, "2654": 409, "266": [132, 133, 378, 440, 441, 447, 449, 453, 466, 468, 484], "2660": 409, "266192": 433, "26665050077722524": 470, "2667": 410, "266e": 457, "267": [65, 133, 440, 441, 447, 468, 473], "2672": 410, "2673": 410, "26739753": 92, "2674": 410, "268": [390, 441, 447, 461, 468, 484], "2681": 410, "2684": 410, "2685": 410, "268663733018811": 470, "2687": 410, "26883694": 484, "26887783978974283": 470, "269": 484, "2692": 410, "269385": 461, "2695": 447, "269627": 473, "2697": 410, "2699878e": 464, "26a": [39, 40, 50, 52, 53, 120, 233, 267, 276, 461], "26e": [461, 468], "26th": 386, "27": [133, 370, 430, 432, 441, 447, 457, 460, 462, 472, 484, 559], "270": [434, 441, 461, 468, 484], "270173": 521, "2703": 410, "2705": 410, "27057337686547633": 470, "2707": 410, "2708": 233, "2709": 410, "27093776e": 464, "271": [440, 441, 484], "2711": 410, "2712": 410, "2713": 410, "2715": 410, "271777777777796": 434, "27177778": 89, "2718": 410, "2719": 410, "271e": 441, "272": [440, 441, 445, 461, 468], "2720": [385, 411], "27209": 484, "2723": 410, "2725": 410, "2726": 410, "2726e": 484, "2727": 410, "2727693": 473, "2727e": 437, "2728": 410, "2729": 410, "273": [79, 419, 435, 441, 484], "2730": 410, "2731": 410, "2733": 410, "2734": 119, "2735": 410, "2737": 410, "2738": 410, "2739": 410, "274": 466, "27409496735322464": 470, "2741": 410, "2742": 410, "2743": 410, "274509803921596": 451, "2746": 410, "2747": 410, "27473": 447, "275": [440, 461, 552], "2750": 410, "2751": 410, "2752": 410, "2753": 410, "2755": 410, "2756": 410, "2759": 411, "276": 419, "2761": 411, "2762": 411, "2764": 411, "2765": 411, "276681": 531, "2767": 411, "2768": 411, "277": 440, "2771": 411, "2772": 411, "27727": 468, "2775": 411, "277522957147003": 448, "2776": 411, "2777": 411, "2777074437073429": 470, "2778": 411, "2779": 411, "278": [27, 419, 440, 453, 461, 468], "2781": 411, "2782": 411, "2783": 411, "2784": 411, "2785": 411, "2785e": 437, "2787": 411, "2788": 411, "2789": 411, "279": 419, "2790": 411, "2791": 411, "2792": 411, "2793": 411, "2794": 411, "2796": 411, "2797": 411, "2798": 411, "2799": 411, "27e": 461, "27t20": 85, "28": [21, 24, 65, 89, 132, 133, 373, 402, 435, 438, 439, 440, 441, 447, 449, 453, 457, 461, 465, 466, 468, 473, 484], "280": [65, 419, 437, 440, 452, 466], "2800": [449, 468, 484], "2801": 411, "2802": 411, "2803": 411, "2804": 411, "2805": 411, "2808": 411, "2809": 411, "281": [440, 461], "2810": 411, "2811": 411, "28118133544922": 461, "2812": 411, "28120079": 461, "2815": 411, "2816": [411, 468], "2817": 411, "2818": 411, "2818047723094509": 470, "282": [132, 133], "2820": 411, "2822": [411, 468], "2823": 411, "2825456e": 464, "2827": 411, "2827988e": 464, "2828": 411, "2829": 411, "282e": 461, "283": [419, 432, 437, 440, 544], "2832": 411, "283218": 433, "283487": 461, "2837": 411, "28382603": 464, "2838398": 473, "28385358839966657": 470, "2839": 411, "284": [440, 461, 562], "2841": 411, "2842": 411, "28429": 447, "2845": 411, "2846": [411, 447], "285": [419, 440], "2852": 468, "28551": 133, "285f": [79, 84], "286": [419, 440], "2861432787940619": 470, "286e": 461, "287": [52, 53], "2872": 412, "28720322": 92, "2874": [412, 484], "28755283551095173": 470, "2878662980210884": 292, "287e": 441, "288": 119, "2880470e": 464, "2885": 412, "288e": 435, "289": [419, 440], "28905": 474, "2891": 412, "28958": 441, "2896": 412, "2897": 412, "28e": [97, 435, 445, 447, 462], "29": [65, 133, 262, 379, 389, 402, 430, 433, 435, 438, 440, 441, 447, 453, 456, 461, 466, 468, 469, 473, 484], "290": [420, 432, 437, 440, 448, 544], "2900": 468, "2903": [412, 468], "2903e": 439, "2907": 412, "291": 419, "2912": 412, "29170324": 462, "291e": 484, "2922477": 92, "2924": 412, "2927": 412, "2929": 412, "293": 440, "2930": 461, "2931": 412, "2932": 412, "29355238360800506": 470, "2938": 412, "2939": 412, "293e": 441, "294": [432, 436], "2942": 386, "2943": 412, "2944": [387, 412], "2945": 412, "2947": 412, "2948": 412, "295": 419, "2950": 412, "2951": 412, "2953": 447, "2956": 412, "29585273e": 474, "2959": 468, "295e": [441, 461], "296": [419, 438, 457], "2965": 412, "2966": 412, "2967": 412, "297": 433, "2971e": 461, "2974": 412, "2976": 412, "298": [440, 447, 461], "2981": 412, "2984": 412, "29882214027996945": 470, "299": [419, 440, 461], "2990": 412, "2991": 412, "2992": 412, "2993": 412, "2995484265169": 454, "2996": 484, "2998": 412, "2999": [412, 461], "299940468335294": 447, "299995937905366": 447, "299e": 461, "299t": 53, "29t20": 456, "29th": 402, "2_": 19, "2aqmi1dp": 469, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 132, 133, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 163, 173, 174, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 201, 223, 370, 375, 380, 383, 384, 385, 396, 404, 410, 423, 424, 425, 432, 441, 443, 444, 447, 466, 467, 484, 494, 497, 508, 509, 510, 522], "2degx2deg": 449, "2e": [188, 433, 434, 435, 449, 450, 456, 461, 463, 468], "2e3": [188, 466], "2e6": 474, "2f": [353, 433, 438, 470, 483, 560], "2fhl": [58, 69, 409, 421, 422, 461, 484, 493], "2hwc": [59, 70, 409, 415, 423, 461, 493], "2k": [97, 104], "2m": [233, 267], "2nd": 389, "2pc": 67, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 62, 65, 76, 79, 81, 82, 83, 86, 89, 91, 97, 99, 100, 104, 105, 106, 110, 112, 118, 119, 133, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 166, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 205, 207, 216, 223, 226, 234, 256, 262, 264, 266, 267, 275, 276, 277, 282, 291, 292, 313, 322, 341, 352, 357, 359, 361, 364, 365, 367, 368, 370, 375, 376, 378, 379, 380, 381, 383, 388, 389, 390, 395, 400, 401, 403, 404, 405, 407, 408, 413, 415, 417, 420, 421, 422, 423, 424, 425, 426, 428, 429, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 485, 486, 488, 491, 492, 495, 496, 500, 502, 504, 505, 507, 508, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 559, 560], "30": [24, 52, 65, 79, 91, 97, 107, 132, 143, 182, 291, 292, 371, 372, 377, 384, 391, 402, 404, 433, 434, 437, 438, 441, 442, 447, 450, 453, 456, 457, 458, 461, 462, 463, 466, 468, 469, 470, 471, 473, 474, 484, 496, 502, 507, 508, 515, 516, 530, 533, 534, 535, 538], "300": [71, 83, 86, 276, 440, 442, 446, 449, 450, 453, 457, 461, 474], "3000": [374, 461, 510], "30000": 461, "3000000": 543, "30000000": 543, "3000020211954284": 447, "3001": 412, "30015e": 433, "3002": 412, "3003": 468, "300451666228708": 482, "3004625872247901": 446, "3005": 412, "3006": 484, "3006942": 92, "3007": 412, "301": [419, 440], "3011061699260256": 470, "3012": 412, "3013": 461, "301668796295": 461, "302": [440, 446], "3020791585772495": 291, "30287": 441, "3028e": 468, "302e": 461, "303": [437, 440, 461], "3030": 412, "3032": 412, "3034": 461, "3035": 412, "3035897658854436": 448, "3037": 412, "3037632e": 464, "3038": [412, 484], "3039": 412, "304": [454, 456, 457, 461, 470, 484, 524], "3041": 412, "3042": 412, "3043": 468, "3045": 412, "3046875": [462, 468], "3049664466089965": 292, "305": [65, 432, 440, 449, 452], "3051": 412, "3051827": 92, "3051852": 92, "3051856": 92, "3052": 412, "3053": 412, "30535345877453707": 470, "3054": 412, "30561": 133, "3058": 412, "3058422e": 464, "305e": 461, "306": [419, 453, 457, 559], "3060": 412, "306196370000000": 484, "3063": 412, "3069": 412, "306e": 461, "307": [432, 440, 544], "3070": 412, "3071": 461, "3072": 412, "3074": 412, "3075": 388, "3076": 412, "307e": 461, "308": [440, 447, 518], "3080": 412, "3081": 412, "3083": 412, "3085": 412, "3086": 412, "3088": 412, "3089": 412, "3091": 412, "3092": 412, "30997": 484, "30a": 267, "30d00m00": 391, "30e": [443, 464, 468], "30th": 376, "31": [132, 133, 373, 374, 387, 388, 400, 427, 432, 435, 437, 440, 441, 445, 448, 451, 452, 456, 457, 461, 462, 465, 466, 468, 471, 475, 482, 484], "310": [432, 438, 523], "3100": 412, "3106": 412, "31067517": 461, "3107": [461, 484], "311": [437, 518, 560], "3110": 413, "3111": 413, "3112": 413, "3113": 413, "31139074e": 463, "3114": 413, "311489174710791e": 484, "3116": 413, "3117988e": 464, "31186857659616535": 470, "3119611261122878": 470, "312": 419, "3122": 414, "3123": 414, "3124": 414, "3125": 414, "3126": 414, "3127": 414, "3129": 414, "312e": 441, "313": 440, "3130": 414, "3131": [415, 468], "3135914081482271": 470, "3136": 415, "313714614138": 462, "3138": 415, "314": [424, 457], "3140": 415, "3141": 415, "3145": 415, "3148": 415, "315": 461, "3152": 415, "3153": 415, "3155": 415, "3158": 415, "316": [440, 457, 474, 475], "3162": 415, "316227": 461, "316227766016838": 465, "3165": 415, "3168": 415, "3169": 415, "317": [419, 432, 440, 471, 472, 544], "3173": 415, "3178": 415, "317a": 267, "317e": 461, "318": [419, 437], "3180": 415, "3182": 415, "31834": 133, "3185": 415, "319": [420, 474], "3191": 415, "3195": 484, "3197": 415, "319725": 473, "3199": 415, "32": [79, 132, 182, 432, 441, 443, 444, 445, 456, 459, 462, 465, 466, 484], "320": [97, 100, 104, 105, 116, 461, 462, 468, 496], "3202": 415, "3207": 415, "3208": 415, "32095": 484, "321": 451, "3211": 415, "3216": 415, "3217": 415, "3219": 415, "321997": 482, "322": 440, "3222": 415, "3228": 415, "323": [438, 440, 447], "3230": 415, "3232943": 332, "3233356": 332, "32377509405904137": 91, "323779": 282, "3237948931463171": 470, "3238": 415, "3241": 415, "3243": 415, "324424288934": 462, "3246": 415, "32465247": 469, "3254": 415, "3257": 415, "3258": 415, "326": 419, "32619492023845": 457, "3262": 415, "32684": 484, "32684833": 473, "327": 447, "3272": 415, "3276": 415, "3277": 415, "3278": 415, "3279": 415, "3279955e": 464, "327e": 457, "328": [432, 447, 544], "3281": 415, "3283": 415, "3284": 415, "32843": 484, "32847": 433, "3285": 415, "329": [91, 291, 292, 456, 461, 470, 498], "3293": 415, "3299": 461, "329e": [437, 461], "33": [438, 454, 460, 462, 463, 466, 484, 498], "330": [420, 440, 468], "3301": 415, "33013e": 433, "3302": 415, "3302565e": 464, "3303": 415, "330376": 65, "3304": 415, "3305": 415, "330505": 473, "33055e": 433, "3306": 415, "3307": 415, "3308": 415, "3309": 415, "331": 457, "3310": 415, "3314": 415, "33164865722698683": 470, "3319": 415, "3319831545301117": 291, "332": [65, 420], "3320": 415, "3323": [415, 462], "332525": 461, "3328": 415, "332e": 447, "332f": [30, 31, 32, 33], "3330487": 92, "3331": 484, "3331761": 92, "3333": 415, "33333333": 364, "3333333333333344": 451, "3335": 415, "33368e": 433, "3337": 415, "3338": 415, "334": [119, 474], "3342": 415, "3343": 415, "3346": 415, "3347": 415, "33484": 433, "3349": 415, "334e": 461, "335": 420, "3353": 415, "3357": 415, "3358": 415, "335e": [435, 453], "336": [451, 461], "3363": 415, "3364130e": 464, "336444e": 461, "336606": 433, "3368855e": 464, "3369": 415, "337": [420, 440], "3374": 415, "3377": 415, "33787": [91, 470], "33788": [91, 470], "33789": [91, 470], "3379": 415, "33790": 470, "33791": 470, "33792": 470, "33793": 470, "33794": 470, "33795": 470, "33796": 470, "33797": 470, "33798": 470, "33799": 470, "338": [420, 461], "33800": 470, "33800122": 92, "33801": 470, "3380311e": 464, "3381": 415, "338215": 528, "339": [420, 451], "3390": 415, "3392": 415, "3393": 415, "3395": 415, "3396e": 445, "3397": 415, "339835555384604": 470, "3398360": 464, "33983991887701287": 91, "3399": 415, "33e": 458, "34": [52, 53, 65, 403, 433, 437, 438, 447, 462, 466, 468, 472, 484], "34005": 433, "3402": 415, "3403": 415, "340391": 484, "3404": 415, "34047": 433, "3406": 415, "3409": [89, 415], "341": 433, "3413": 415, "3416": 415, "3418": 415, "342": [420, 432, 472], "3420": 415, "3423": 415, "3426": 415, "3428": 415, "3434": 415, "3438": 415, "3439": 415, "343e": 435, "344": 461, "344238": 484, "3443842": 473, "3445": 415, "3446": 415, "3447": 415, "3449": 415, "344e": 65, "345": [283, 433, 468], "3453": 415, "3454": 415, "345692": 484, "3458": 415, "346": 468, "34613004113985": 448, "346488e": 461, "3466": 415, "3468": 415, "347": [420, 434], "3471": 415, "3474": 415, "347e": 441, "348": [36, 37, 420, 437], "3480": 415, "3481e": 445, "3485e": 483, "3488": 415, "348e": [65, 461], "3491": 415, "3493": 132, "349530550405035": 463, "349530725254468": 463, "34953073943366": 463, "34953075819191": 463, "34953077463306": 463, "34953079334042": 463, "349530807529028": 463, "349535814693404": 463, "349536723056637": 463, "349537158300407": 463, "349537804239922": 463, "34953807814367": 463, "34953910575007": 463, "34953932636892": 463, "349542158419318": 463, "349559366703698": 463, "34971209244579": 463, "349724940685938": 463, "3499075e": 464, "34e": [461, 468], "35": [65, 381, 388, 400, 438, 456, 461, 463, 471, 473], "350": [451, 458], "3501": 441, "350105": 447, "3502": 461, "35030398537787": 463, "3503706026275275": 470, "3504": 484, "35052105086856": 463, "350556388466543": 463, "350d": 451, "351": [420, 461, 484], "3515": 415, "352": [420, 461], "3521": 434, "3523": 415, "3529": 415, "3529411764705888": 451, "353": [24, 420, 432, 484, 523], "3535": 417, "3536": 433, "353e": 447, "354": 451, "3544": 415, "35569283": 464, "355804": 484, "3559": 415, "356": 484, "3561": 415, "356263170943497e": 482, "3568": 415, "357": [444, 461, 484], "3570e": 442, "35722435185": 461, "357587": 534, "3576e": 434, "357e": 441, "358": [447, 461, 484], "3584": 415, "3585": 447, "359": [420, 447, 461, 484], "3590188e": 464, "3592": 415, "3599": 449, "359e": 484, "36": [65, 82, 99, 118, 138, 311, 447, 449, 457, 461, 462, 464, 484], "360": [378, 466, 486], "3600": [440, 449, 450, 466], "36014": 445, "36073833513766157": 470, "361": [65, 420], "3619e": 483, "362": [432, 544], "36228879": 484, "36273": 484, "363472509034498": 470, "3639946": 458, "364": [420, 437], "3659253e": 464, "366": 483, "36669663417038234": 470, "3669": 417, "367": [420, 451, 468], "3674884": 461, "368": 112, "36834038301420274": 470, "368346217294295": 91, "3684": 417, "3689322e": 464, "369": 420, "3690": 484, "3699": 417, "36e": [460, 461], "37": [433, 438, 440, 463, 474, 560], "370": [451, 461, 468], "37058": 133, "371": [420, 438], "3710784e": 464, "3712": 417, "3713": 417, "3715810e": 464, "3718745": 92, "372": [35, 119, 484], "3720": 417, "3722": 417, "3725490196078436": 451, "3728": 417, "373": [437, 447], "3733": 417, "3739292e": 464, "374": [449, 451], "3740": 417, "374298": 543, "374550": 518, "37455141": 484, "3748": 417, "375": [420, 466], "3750": 447, "37506": 484, "37517": 441, "3752": 417, "3759377929871826": 470, "376": 65, "3760": 417, "3761": 417, "3765": 433, "3777": 417, "37773": 441, "3779": 484, "3783": 417, "3784": 132, "379": 420, "3792": 468, "3796": 417, "3797": 417, "38": [22, 65, 433, 434, 461, 466, 468, 469, 484, 543], "3802": 417, "3804": 417, "3806": 417, "381": [437, 468], "3810": 417, "3812": [461, 484], "3812120e": 464, "3812160e": 464, "38143003": 92, "3817": 417, "3829": 484, "382e": 437, "383": [65, 420, 461, 466], "3833": 417, "3837": 417, "383e": 65, "3842": 417, "3846": 417, "3848912826152664e": 484, "3856": 417, "385e": 133, "3860": 417, "3862": 426, "387": [420, 484], "3872": 461, "3873": 417, "3874": 417, "3876": 417, "387834": 484, "387e": 457, "388": 522, "388405": 484, "38848076245039": 457, "3885947175689592": 470, "3886270e": 464, "3887": 417, "389": 369, "3892": 417, "3895": 417, "3898": 417, "389e": 484, "39": [17, 18, 21, 22, 24, 25, 27, 59, 457, 460, 461, 466, 474, 522, 543], "390": [415, 432, 447, 452, 456, 459], "3904": 417, "39042": 82, "3905": 417, "3906": 417, "391": [432, 436, 461], "3915": 417, "39151": 443, "3918": 417, "3919677734375": 437, "392": [420, 438], "392156862745098": 451, "39224": 441, "3925": 426, "393": [197, 198], "3933": 417, "3935": 434, "3936": 417, "394": [420, 437], "3941": 417, "3945": [434, 461], "3947637541758": 457, "3948": 418, "395": 420, "3950": [389, 426], "395004": 484, "3956": 426, "3959": 418, "396": 420, "3962942e": 464, "3966": 418, "3970": 390, "39728": 484, "3975": 418, "3979": [418, 558], "397918129147546": [400, 558], "39791813": [400, 558], "398": [420, 445], "3981": 484, "3981075200000000": 484, "3983": 418, "3986": 418, "3987": 418, "3988": 418, "398e": 461, "3990": 418, "39e": 461, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 138, 144, 151, 152, 154, 163, 270, 272, 370, 373, 374, 375, 379, 380, 383, 384, 385, 396, 404, 405, 406, 408, 409, 410, 411, 422, 423, 424, 432, 433, 435, 437, 438, 441, 442, 443, 447, 448, 449, 450, 451, 452, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 482, 483, 494, 496, 497, 498, 503, 505, 506, 510, 555, 557], "3d33m15": 65, "3dataset": 446, "3e": [20, 119, 125, 447, 450, 453, 455, 458, 461, 468], "3e4": 474, "3e5": 474, "3e6": 543, "3e7": 543, "3f": [119, 448, 559, 560], "3fgl": [60, 65, 71, 218, 255, 387, 416, 419, 421, 422, 423, 432, 435, 461, 469, 484, 493, 512, 544], "3fgl_name": 69, "3fhl": [61, 72, 82, 121, 123, 127, 273, 384, 422, 423, 435, 441, 449, 451, 461, 466, 467, 468, 469, 474, 484, 493, 495], "3fhl_data_fermi": 446, "3fhl_dataset": [273, 446, 467], "3fhl_model": [273, 446, 468], "3g": [460, 461], "3hwc": [62, 73, 415, 426, 461, 493], "3ml": [382, 474], "3pc": 67, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 60, 65, 79, 83, 86, 96, 97, 100, 104, 105, 109, 111, 122, 127, 133, 135, 140, 143, 151, 163, 166, 182, 183, 184, 185, 186, 187, 192, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 228, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 266, 273, 274, 311, 351, 364, 365, 367, 368, 376, 378, 381, 384, 388, 389, 400, 403, 412, 414, 415, 416, 419, 421, 422, 425, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 477, 482, 483, 484, 486, 491, 492, 493, 507, 510, 511, 515, 516, 519, 524, 529, 542, 543, 551, 557, 558, 559, 560, 561], "40": [59, 104, 105, 371, 416, 434, 435, 437, 438, 440, 445, 447, 456, 457, 466, 469, 473, 484, 507, 530, 533, 538, 559], "400": [127, 442, 447, 451, 461, 466, 484, 552], "4000": 426, "40000": [163, 483], "400023002295445": 482, "400056": 433, "40050506591797": 461, "40051": 443, "40051035": 461, "40071076": 92, "400x200": 451, "401": 438, "40112": 484, "4013": 426, "4014": 426, "4015": 426, "4017": 426, "4018": 426, "402": [143, 438], "4022": 426, "40235": 445, "4024": 426, "4025": 426, "4026": 426, "402712": 461, "403": [420, 447, 468], "4035": 484, "4037": 426, "404": 289, "4043": 426, "4044": 426, "40481": 445, "405": 372, "4051": 426, "40525": 445, "4054": 426, "4058": 426, "406": 484, "40611": 484, "406178": 546, "4067": 426, "407": 461, "4071": 426, "4073": 426, "4073799600000000": 484, "4075": 426, "4076": 426, "4079": 426, "408": [437, 466], "4080": 426, "4080942e": 464, "40822469e": 469, "4083": 426, "4084": 426, "4088": 426, "4089": 426, "409": 437, "40919": 441, "4093": 426, "409416": 484, "4095": 426, "4098": 426, "40a": 59, "41": [65, 82, 89, 378, 461, 462, 466, 474, 484], "410": 451, "41009347393684": 462, "4103": 426, "4105": 426, "4106": 426, "4107": 426, "4108": 426, "411": 484, "4110e": 461, "4112": [119, 426], "4113": 426, "4115": 426, "41176470588239": 451, "4119": 426, "411e": 435, "4120719e": 464, "412165": 447, "412779907405": 461, "413": 447, "414": [420, 445], "41405230487": 448, "41415047": 92, "4142135623730951": 112, "41449": 441, "4144e": 445, "415": [420, 534], "4155": [461, 484], "41584196": 454, "416": [65, 461, 465], "417": 461, "418007850646973": 400, "41866": 474, "419": 468, "4191": 429, "41924": 132, "4198250e": 464, "41995": 441, "419e": 461, "41e19": [19, 20], "42": [25, 27, 89, 143, 332, 378, 440, 447, 461, 464, 465, 466, 470, 473, 511, 514, 515, 516], "420": 437, "42050348": 462, "4208": 429, "4209": 429, "421": [420, 451, 484, 557], "4210": 429, "4212": 429, "4212028e": 464, "4213": 429, "4215": 429, "4216": 429, "4217": 430, "4219": 429, "422": [39, 40], "4220": 445, "4221": 427, "4225498e": 464, "4225631e": 464, "42267": 447, "4226731": 447, "4231": [427, 429], "4236": 441, "42361": 441, "42399798": 447, "423e": 119, "42400": 447, "4242": 429, "4243": 429, "4245": 429, "42463": 474, "424649": 462, "42474": 484, "424e": 441, "425": 484, "4252": 429, "426": 461, "4264": 429, "4268": 427, "427": 438, "4275": [427, 429], "4277": 429, "4280": 429, "4281": 461, "4282": 429, "4288": 429, "429": 437, "4294": 429, "42e": [463, 468], "43": [266, 332, 378, 436, 437, 438, 447, 457, 462, 466, 484, 511, 517, 518, 519, 520], "430": 461, "43000": [52, 53], "4301": [427, 429], "4303606e": 464, "4305": 429, "431": [128, 372, 451, 462], "43113": 433, "43137254901962": 451, "4313847458879893": 470, "4319": 484, "43197": 441, "4324": [427, 429], "4326": 429, "432878": 461, "432e": 461, "433": 441, "4336": [427, 429], "43366": 552, "434": [432, 436, 437, 461], "43416595": 458, "4344": 427, "4346": 429, "435": 420, "4350": 429, "4351637481047363": 470, "4352": 429, "4359": [427, 429], "435l": 461, "436": [420, 437], "4360750e": 464, "4369": 429, "437": [461, 468], "4370": 429, "4373240195300975": 470, "438": 468, "4380": [428, 429], "4381": [392, 430], "4382": 428, "439": 437, "4393": [428, 429], "439306769641669e": 482, "4394": 428, "4395": 429, "4397": [428, 429], "439e": 461, "43e": 468, "44": [21, 50, 82, 332, 440, 456, 458, 466, 521, 522], "440": [432, 485], "4402": 429, "44055555555555603": 89, "4406": 429, "4408": 430, "4409": 429, "4412": [428, 429], "4417": 429, "4418": 429, "4420073e": 464, "4420222e": 464, "442262": 551, "4428": 429, "4428634e": 464, "442e": 441, "443": [432, 445, 452], "4430": 429, "44318": 462, "4432": 430, "4435": [428, 429], "4444": 429, "445": 441, "4450": 484, "44528685": 484, "4453": [428, 429], "44573": 89, "4458": 429, "4459": 429, "446": [468, 560], "4466": [429, 445], "4466832000000000": 484, "447": 420, "44742": 484, "44749e": 433, "447552": 433, "447e": [447, 461], "447l": 17, "448": 451, "4480056e": 464, "44802852": 484, "4481": 461, "4485": 430, "4486": [428, 429], "448e": [133, 446], "449": 474, "449046": 537, "4491": [391, 430], "4495": 429, "4498": 132, "44e": 400, "45": [51, 54, 437, 440, 446, 458, 462, 466, 467, 469, 486, 511, 516, 517, 524], "450": [438, 468], "4500": [428, 429], "4501": 430, "4504": 429, "4506": 429, "4508": 429, "4509803921569": 451, "451": 437, "4510": [429, 445, 484], "4515": 460, "4517490659800822": 455, "4520": 428, "4521": 429, "4524": 428, "453": 468, "454": 437, "4540": 430, "4545": 429, "4546": 430, "455": [420, 435], "45515263080596924": 434, "4558750": 447, "455e": 65, "456": 420, "4561": 430, "45646095": 458, "4567": 430, "457": [267, 420, 468], "457251": 484, "4574": [428, 430], "4575": 89, "4578": 428, "457804": 515, "4579e": 433, "458": [451, 461], "4584": 430, "45856": 484, "4586649826004114": 291, "459": [420, 462, 468], "4593": 428, "45935": 484, "4595": 430, "4599": 430, "45\u00ba": 475, "46": [53, 65, 104, 105, 378, 461, 466, 474, 525, 526], "460249999": 82, "4608": 430, "461": 420, "4615": 430, "4618695378303528": 434, "4619": 428, "462": [420, 437], "4620": [392, 430], "4620e": 461, "46225": 441, "4628": 430, "463": 484, "4631": 428, "4635": 430, "4638": 430, "464": 453, "4642048e": 464, "4647544e": 464, "465": [461, 468], "4653": 428, "4657": [428, 430], "465784": 484, "4660": 430, "4664": 430, "4668": 430, "4669": 430, "4671": 430, "46711": 441, "4677": [428, 430], "468": [458, 461], "4681": 428, "4684": 434, "468805426856864e": 52, "468e": 65, "4697": 430, "46e": [79, 442, 447], "47": [65, 457, 461, 466, 484, 527, 528, 529, 530], "4703": 430, "470588235294144": 451, "4711": 484, "4712207490447": 457, "4714": 430, "4721": 428, "4726": 430, "472636": 469, "4728": 428, "4729": 430, "473": 420, "4732": 441, "4738": 430, "474": 420, "4740": 430, "4741": 430, "474e": 461, "475": [420, 432, 468], "4750": 430, "4753": [428, 430], "475468": 433, "4755": 428, "4759": 430, "4770": 430, "4772": 428, "47797": 441, "477e": 461, "478": 420, "47802": 470, "47803": 470, "47804": 470, "47827": 470, "47828": 470, "47829": [78, 470, 476], "4783": 430, "4785": 430, "47e": 461, "48": [33, 163, 403, 445, 446, 466, 468, 474, 531, 532, 533], "480": [434, 461, 468], "4802": 430, "4805": 430, "480554966147": 445, "48068": 441, "4808": 430, "480e": 461, "481": [369, 420], "4810": 430, "4814": [430, 484], "4817": 430, "4819444e": 464, "482": 433, "48215685": 92, "4822": 430, "48248": 461, "4825": [461, 484], "4828": 430, "4829": 430, "483": [432, 437, 479], "4834": 430, "4834488e": 464, "4835": 430, "4837": 430, "484": 420, "48442": 262, "4845": 430, "4847": 430, "4848653": 461, "4849": [430, 461, 484], "484e": 133, "485": 420, "4850": 430, "4851": 430, "4854": 430, "485p": [36, 37], "48602294921875": 434, "487": [420, 482], "4875723e": 464, "4876": 428, "4879": 430, "4881": [242, 243], "4886": 430, "48871": 433, "4888969467051004e": 482, "488z": 27, "489": [432, 441, 444], "489e": 461, "48e": [461, 468, 483], "49": [53, 441, 445, 461, 468, 474, 482, 510, 534, 535], "490": 25, "4902": 430, "4904": 430, "4904078e": 464, "49078e": 433, "491": 437, "4913": 428, "49152": 474, "4917": 430, "493": [25, 437], "4930435940405": 445, "4933657e": 464, "4936": [428, 430], "4937": [428, 430], "4940": 430, "49417615": 82, "4942": 430, "49447596": 443, "4958277": 92, "496021": 473, "4963": 484, "4966": 484, "4968236e": 464, "497": 437, "4970": 430, "4971": 430, "4971704e": 464, "4973": 430, "4975": 430, "4978": 430, "498": 484, "498784": 461, "4989": 430, "498e": [461, 484], "499": [65, 461], "49919925926": [228, 553], "4992": 430, "4994": 430, "49972277488662115": 470, "4999833830074": 447, "4d": 383, "4e": [458, 461, 468, 543], "4f": [558, 559, 560], "4fgl": [63, 74, 256, 257, 387, 407, 409, 415, 417, 430, 432, 446, 461, 467, 469, 493, 512, 544], "4th": [376, 402], "4yr_catalog": 60, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 65, 79, 83, 86, 97, 98, 100, 103, 104, 105, 112, 116, 119, 120, 122, 124, 126, 132, 133, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 163, 166, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 208, 209, 212, 215, 216, 218, 219, 220, 223, 224, 226, 228, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 262, 264, 267, 289, 293, 325, 354, 355, 359, 361, 364, 365, 368, 369, 371, 375, 376, 378, 379, 380, 381, 383, 387, 388, 389, 395, 400, 403, 405, 407, 408, 415, 417, 419, 420, 422, 423, 424, 428, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 486, 491, 492, 495, 502, 505, 507, 508, 509, 510, 511, 515, 516, 517, 518, 520, 524, 525, 530, 532, 533, 534, 538, 539, 546, 547, 548, 549, 551, 557, 559, 560], "50": [83, 86, 89, 106, 110, 332, 371, 391, 433, 438, 439, 445, 453, 456, 457, 458, 461, 462, 464, 466, 468, 469, 470, 473, 474, 476, 482, 483, 484, 507, 510, 518, 536, 537, 538, 560], "500": [183, 184, 186, 192, 195, 196, 441, 447, 449, 450, 466, 473, 474, 484, 510, 515], "5000": [19, 20, 83, 86, 486, 510], "5000056568267741": 447, "5000e": 440, "50022222": 89, "500249": 461, "5004": 447, "5015": 430, "502": 420, "5029747": 439, "503": 420, "5030": 484, "504": 28, "5040": 430, "5044": 430, "5049": 484, "505": [65, 461, 462], "505523195905": 445, "506": 420, "5066": 461, "507": 420, "5074834": 92, "5078068": 92, "50807568877": 461, "509": 438, "509e": 461, "50e": [440, 468], "51": [52, 53, 65, 437, 445, 451, 455, 482, 539, 540, 541], "510": [420, 432, 477], "5104e": 439, "5106": 484, "51095676": 458, "511": [65, 420], "51179": [365, 562], "512": 437, "5126": 65, "513": [400, 466], "51312": 447, "5144": [89, 433], "514854": 473, "51544": [440, 449, 450, 453], "5162628e": 464, "518": [420, 468], "5188338e": 464, "51910": 89, "5192420e": 464, "5194769e": 464, "51948705e": 469, "52": [53, 119, 163, 432, 433, 434, 441, 443, 445, 457, 461, 473, 476, 484, 542, 543], "520073": 540, "5205": 474, "52074074074": 79, "521": 421, "523": [421, 466], "5230376e": 464, "52318414": 92, "5237647004325865": 470, "52389101852": 461, "523a": [233, 267], "523b": 22, "524": [421, 461, 468], "5248": 484, "524807800000000": 484, "52587": 441, "526": [421, 432, 452], "52607": 484, "527": [421, 474], "528": 468, "52826166": 461, "5283": [461, 484], "52839183495354": 457, "529": 421, "5292": 462, "529411764705883": 451, "5297030e": 464, "52e": [458, 482], "53": [28, 447, 471, 515, 524, 545, 546, 547, 548, 549], "530": 421, "53025": 89, "531": [421, 451], "53213": 447, "5324402": 92, "5326744": 92, "5326841": 92, "5326859": 92, "533": 461, "53343": [400, 455], "53344": 455, "53345": 455, "53346": 455, "53347": 455, "53348": 455, "534": 544, "5345275e": 464, "53482e": 433, "535": [421, 437, 461], "535058216604496": 267, "53566": 433, "536": 437, "53616": 233, "539": [267, 468], "5390438": 92, "539397": 461, "53945": 456, "53946": 454, "539e": 461, "53e": [400, 440], "54": [65, 437, 461, 464, 550, 551, 552, 553], "5400": 462, "5407363826067": 495, "5407363826070": 495, "541": 421, "5411": 433, "5427520e": 464, "54282": 441, "5438860e": 464, "544": [421, 461, 474], "545": [421, 437], "54566271": 559, "545y": [39, 40], "546": 421, "5461745": 92, "54676837e": 463, "54682": [441, 461, 474, 484], "547": [421, 433, 461], "54721e": 433, "5477": 461, "54772": 461, "548400": 532, "54892": 441, "548e": 461, "549": 421, "549019607843138": 451, "54e": 468, "55": [39, 42, 83, 86, 457, 458, 463, 467, 471], "550": 437, "55026401977972e": 482, "55027": 133, "55045": 461, "551": [461, 522], "551190600657": 457, "55197": [365, 562], "552": 461, "55275": 474, "553": [432, 457, 459, 461], "553337": 484, "5538": 484, "5538942e": 464, "554": 65, "55410": 461, "5545130e": 464, "554e": 435, "556": [421, 437, 560], "5561760e": 464, "5563052715230388": 482, "557": [421, 468], "55775": 461, "558": 421, "559": 421, "5594": 79, "56": [433, 458, 466, 475], "560": [37, 461], "5606985": 458, "5607778e": 464, "56093766": 92, "56141": 461, "561629": 453, "562": 461, "5622482": 92, "56353481": 559, "56393115380234": 448, "563e": [437, 447], "564": [282, 421, 437, 468], "56413952067279": 448, "5644": 462, "565": 421, "56506": 461, "565095": 433, "56659598478": 549, "566598197336": 550, "56660128859": 551, "566e": 437, "56711": 484, "5686274509803928": 451, "56871": 461, "569": 421, "56922612": 559, "5692809e": 464, "56973": 484, "57": [33, 437, 441, 443, 447, 458, 466], "57011": 447, "571": [461, 554], "57185": 495, "5719922e": 464, "571e": 461, "572": 438, "57233": 484, "57236": [441, 461, 474, 484], "572e": 435, "573": [65, 437, 484], "57300957": 166, "5754970e": 464, "576": 468, "5760": 484, "57602": 461, "5763635e": 464, "5768262e": 464, "577398": 474, "5777e": 439, "5779092e": 464, "578": [461, 559], "579": 461, "57944657408": 461, "57967": 461, "57e": 461, "58": [400, 403, 440, 445, 448, 461, 465, 466, 468, 476, 482], "580": 560, "581": 438, "5819e": 439, "582": 421, "58332": 461, "5833e": 461, "5835918e": 464, "5842497e": 464, "585": 461, "58540702": 92, "586": [432, 472], "5867488e": 464, "58693695": 458, "58698": 461, "586e": 441, "5882352941176467": 451, "588e": 461, "58909": 457, "58926": 441, "5892966e": 464, "5895": 434, "58999": 228, "58e": [453, 461], "59": [79, 99, 118, 443, 453, 461, 465, 476, 484, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "590": 437, "59000": [228, 553], "59001": 228, "59063": 461, "5908": 461, "590835686434463": 470, "591": [421, 461], "59100": [552, 553], "59123": [546, 547, 548], "5915030546513255": 454, "5915e": [461, 483], "59200": 552, "59233": 469, "59235": [79, 473], "59240": 469, "59250": 469, "59254e": 433, "59265": 433, "593": 421, "59300": 458, "59344": 484, "59348": 484, "59365": 553, "594": [421, 437], "59400008": 92, "59428": 461, "59451": 441, "5951631e": 464, "596": 468, "59696": 441, "596e": 461, "597": 474, "597329": 547, "597774": 464, "59793": 461, "598": 484, "5985": 484, "5987726": 92, "599": [421, 451, 456, 468], "599625": 473, "59976": 461, "599999904632568": 461, "599e": 441, "59d09m41": 461, "59e": [461, 468, 474], "5a": 58, "5e": [440, 450, 461, 468], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 65, 82, 83, 86, 95, 97, 104, 106, 110, 119, 124, 133, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 228, 267, 352, 355, 368, 371, 376, 380, 381, 384, 389, 397, 400, 413, 415, 417, 423, 424, 428, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 486, 490, 507, 511, 517, 521, 541, 557, 559], "60": [65, 86, 145, 428, 438, 440, 441, 461, 463, 474], "600": [438, 441, 446], "6000": 510, "6000000000000001": 469, "60011715645431": 457, "6002e": 483, "600661": 464, "60075": 464, "60090769e": 469, "600e": 437, "6018166e": 464, "601869": 522, "601e": 461, "602": 437, "6023e": 439, "603": [468, 484], "6033": 433, "60350": 435, "603625": 464, "604": 437, "60446": [549, 550, 551], "6046689e": 464, "60603928": 469, "606290172289": 457, "607843137254942": 451, "609e": 441, "60e": 461, "61": [65, 410, 438, 453, 461, 468, 560], "610": 468, "61051": 474, "6105760e": 464, "611": [441, 559], "6116853": 461, "611e": 461, "6125": 476, "612a": 120, "613114": 454, "61422433": 92, "61489": 464, "614e": 441, "615316": 484, "617": 438, "617835": 464, "6181862e": 464, "61862": 228, "619": 461, "6194453e": 464, "619794257232": 482, "62": [437, 443, 457, 461, 475, 483], "620": 461, "620398": 464, "6205": 484, "62111": 441, "621499": 484, "6218742e": 464, "6219": 435, "622": [421, 435], "62258": 461, "6227766": 466, "62277660168379": 466, "6228e": 435, "623": [461, 484], "62320": 435, "623397": 464, "62341325": 466, "623413251903492": 466, "624": 468, "624122": 447, "624d": 24, "62503": 461, "62514628": 464, "6253652e": 464, "6259962e": 464, "6266": 484, "6267247": 484, "627450980392158": 451, "628": 421, "62842028": 462, "63": [181, 182, 191, 194, 433, 437, 439, 462, 465, 475, 476, 482, 483, 505, 507, 508, 511], "630": [78, 468, 476, 482], "6309576500000000": 484, "630e": 65, "631": [421, 445], "631155605": 449, "631159205": 449, "631170005": 449, "631173605": 449, "631177205": 449, "631180805": 449, "6318811e": 464, "632627": 484, "633": [81, 97, 100, 104, 105, 163, 438, 446, 465, 482, 483, 507], "63307": 79, "63308": [455, 483], "633083": 467, "63310241699219": 446, "63326": 441, "6333": 89, "63342": 484, "633600": 468, "635": 421, "63500212963": 461, "6354": 484, "63541": 473, "636688324856333": 457, "638": 468, "639": 461, "6390": 433, "63902": 433, "6397": 484, "63e": 462, "64": [39, 65, 79, 119, 182, 403, 461, 474], "640": 421, "6402822e": 464, "641": [421, 484], "64103": 473, "6413": 447, "641635917844372": 448, "6417": 447, "6419578e": 464, "642": [432, 459, 484], "6429005895278312": 470, "643": [30, 31, 32, 33], "64323": 441, "644": [432, 460, 472], "64438": 474, "6444": 433, "645": 462, "6451": 447, "6464": 433, "646656": 529, "646713": 552, "647": [421, 485], "647058823529452": 451, "6471115e": 464, "64794383e": 469, "648": 421, "648e": 65, "649": 421, "64987376": 92, "64e": 438, "65": [62, 388, 403, 405, 446, 462, 474], "650": 462, "6509": 433, "651": 461, "651058": 484, "6514": 484, "652": 446, "6522806": 484, "652368617859867": 446, "653": [421, 434], "653052": 469, "65357608e": 464, "653e": 441, "654": [433, 461], "65412": 447, "654e": 461, "655": 441, "655283": 441, "6554088e": 464, "6556": 441, "6556248e": 464, "655e": 65, "656": 559, "65603222222": 474, "65603794185": 461, "656633": 535, "6577182894355391": 470, "658": 468, "658909145253801e": 484, "6589622747787678": 470, "659": [437, 441], "65e": 112, "66": [52, 53, 403, 406, 440, 453, 462, 463, 468, 471], "660": 421, "660407": 526, "6604475": 447, "660e": 484, "660fals": 435, "661": 421, "66104": 433, "6613": 457, "662": 461, "6623e": 445, "663": 559, "663742400000000": 484, "664502403": 473, "664502405": 473, "664502408": 473, "664502409": 473, "664502414": 473, "665": [432, 448, 452], "6652219e": 464, "6654036168695552": 448, "6659": 441, "66650390625": 434, "6666666666583865": 456, "6666666666666666": 548, "666666666666696": 451, "66813": 447, "669": 438, "66984341": 464, "669e": 133, "66e": [445, 462], "67": [17, 403, 461, 484], "670": 461, "6705024680435898": 291, "671616": 433, "6728": [461, 484], "673": [449, 476, 546], "67304": 92, "67375": 433, "67457342435522e": 484, "676836990188792": 438, "6768e": 438, "677": 421, "6772235e": 464, "67759236e": 464, "678": [82, 448], "67824": 462, "6784": 559, "67861": 464, "678684049503813e": 438, "679": 421, "679478012854058e": 438, "6795e": 438, "67992517": 92, "67e21": 460, "68": [65, 79, 91, 144, 150, 152, 153, 154, 156, 223, 403, 433, 461, 463, 464, 466, 473, 484, 560], "680": [438, 468], "6803": 484, "6812310184489": 457, "68125": 464, "6823": 433, "683": 437, "684": 163, "684048": 519, "68542112": 92, "686": 438, "68628538586": 462, "687": 468, "687214": 465, "687500": 465, "687685": 461, "689": 437, "68e": [445, 461], "69": [97, 430, 441, 461, 462], "690": 65, "690311850083152": 448, "690557685186": 461, "6909290e": 464, "691": 461, "69138": 441, "691680": [97, 462, 468], "692": 441, "6930e": 453, "69314486": 467, "693940": 445, "694": 438, "6953125": 462, "69543812": 92, "6959369197218669": 470, "697317": 474, "69735": 464, "697e": 435, "697fals": 435, "6985": 434, "6992": 447, "699e": 441, "6e": [435, 461, 468], "6h": 475, "6th": 402, "7": [16, 30, 31, 38, 52, 53, 65, 80, 83, 86, 99, 118, 119, 125, 132, 163, 166, 193, 226, 354, 355, 364, 368, 369, 376, 380, 381, 384, 400, 404, 405, 407, 408, 414, 415, 420, 421, 422, 424, 425, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 511, 515, 516, 552, 559, 560], "70": [65, 86, 97, 447, 461, 462, 559], "700": [372, 450, 467], "70000000e": 469, "7000e": 469, "70016": 447, "7007": 447, "701": 507, "70181": 133, "702": [455, 461, 483], "703": 400, "70358483e": 469, "704": 468, "70428": 484, "70437": 464, "705": 484, "70546": 441, "70634e": 433, "706e": 461, "707e": 446, "707t": 276, "708": [437, 438], "708e": 441, "709": 421, "7097381e": 464, "70e": 469, "71": [33, 440, 455, 468, 560], "710": 421, "71067811865478": 461, "7114777844256": 457, "7116851": 469, "712": 448, "71220672": 462, "7123895e": 464, "712e": [455, 483], "713": [421, 461], "7132e": 484, "714": 461, "714e": 441, "715": 484, "716": [91, 291, 292, 466], "716062": 473, "71693826": [456, 470, 498], "717": 461, "71795506": 484, "7184": 484, "719": [421, 437, 468], "7190994e": 464, "71944e": 433, "7195": 461, "719e": 461, "72": [407, 461, 465, 484], "720": [450, 461], "7200": 453, "721e": 441, "722": 468, "72217": 484, "722557505166": 461, "723": 441, "723e": 461, "7240965e": 464, "725": 461, "725490196078432": 451, "727": 468, "72775": 484, "7284447e": 464, "73": [433, 484], "7303": 484, "731": [421, 432, 554], "732e": [65, 461], "733": [65, 421], "733360190578827e": 482, "734": 484, "7340897283464": 457, "7350250533013533": 470, "7350380e": 464, "7351418e": 464, "735e": 461, "736": [559, 560], "737": 437, "738": [421, 461], "7385727e": 464, "739": [421, 437], "7395744e": 464, "739e": 65, "73e": [461, 482], "74": [433, 443, 484], "740": 421, "740e": 441, "742": 468, "743e": 461, "744": 447, "74427": 447, "74465974e": 464, "74479": 441, "745098039215687": 451, "74542e": 433, "7458e": 457, "746": 421, "7471700e": 464, "7479085e": 464, "748": 461, "748259": 445, "75": [65, 357, 437, 484], "750": 560, "75267735": 484, "753": [421, 438], "7537086e": 464, "754": 421, "75408483": 484, "7555": 465, "7559": 484, "756": 461, "7564416060166": 457, "7567": 433, "7580410e": 464, "758786": 524, "759": 421, "7596682e": 464, "75e": [461, 483], "76": [448, 466], "761": [432, 472], "7613": 400, "7613e": 442, "761c": 28, "762": 421, "762199399999986": 522, "763": 421, "7637308880733709": 470, "76419591747674": 457, "7642": 441, "7647": 484, "764705882352942": 451, "76473": 441, "7652512e": 464, "765e": 441, "766": [421, 441], "7660168382": 461, "7660365375951": 482, "766d": 473, "767": 421, "76739": 461, "768000": [97, 462], "768048": 92, "7681656e": 464, "76837444": 458, "7684028": 484, "7692170e": 464, "76e": 468, "77": 437, "770": 65, "771667": 476, "77174": 441, "7718272408581743": 291, "771e": 461, "772": [421, 433], "77206": 484, "77218": 441, "773": 461, "7733e": 461, "77351": 441, "77358627319336": 434, "774": [421, 453], "7743835449219": 437, "774e": [441, 461], "775": [65, 468], "7752244878226383": 447, "7755386e": 464, "776": 474, "7760": 484, "7763307219821931": 291, "7765957e": 464, "77678": 433, "7769775": 473, "777": 421, "7771617763704126": 291, "77751797": 92, "777e": [65, 435], "777l": 35, "778": [421, 437, 461], "778276": 438, "77827941": 466, "778279410038923": 466, "778696": 516, "779": [438, 461], "7796942": 484, "77e": [440, 461], "78": [457, 466, 467, 475, 483], "780": [31, 119], "7800e": 437, "7804888e": 464, "78063983672797": 457, "78083": [132, 133], "780e": 119, "78188": 441, "78188096": 92, "782": [474, 477], "7827941": 466, "78279410038923": 466, "783": [421, 461, 484], "78332719": 447, "78333": 447, "783587001383003": 473, "783e": 447, "784": [422, 438], "7843137254901955": 451, "78499999999997": 518, "785": 518, "7853981633974483": 551, "786": [432, 443, 444], "787": [65, 163], "7872234642813915e": 455, "7875405607868806": 470, "7876233e": 464, "788": 461, "7887840e": 464, "788e": 461, "789": 421, "78910994": 92, "7894": 447, "78952750835169": 457, "78e": 468, "79": [434, 461], "790": [421, 437], "791": 422, "7913e": 437, "791960": 548, "7922": 433, "793": 422, "79432823": 469, "79469899": 447, "7947": 441, "79470": 447, "795": 437, "795808": 538, "796": [422, 468], "797": 422, "7972": 465, "798": 422, "798218": 433, "7990194e": 464, "7997221e": 464, "799999952316284": 461, "7c": 466, "7d": 461, "7e": [461, 468, 469], "7e955f": 403, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 65, 83, 85, 86, 97, 100, 104, 105, 106, 110, 122, 133, 137, 138, 187, 194, 226, 228, 293, 364, 368, 371, 372, 381, 404, 405, 408, 410, 411, 415, 416, 417, 420, 421, 422, 425, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 491, 493, 502, 507, 511, 515, 524, 535, 543, 559], "80": [166, 437, 439, 441, 462, 466, 474, 507, 534], "800": 457, "800932": 461, "801": [484, 507], "801668796295": 461, "802": [468, 484], "803": [441, 522], "8031431e": 464, "8037638e": 464, "803921568627494": 451, "803e": 457, "804": [459, 468], "804492": 453, "80492": 133, "80571": 132, "8062607e": 464, "80683246": 464, "8069e": 445, "807": [432, 436], "807201": 484, "8075": [461, 484], "8075185": 461, "8084e": 457, "8086": 441, "808687936570502e": 463, "80871364": 92, "8090746": 473, "809505": 461, "80982039": 464, "81": [411, 432, 440, 524], "810": [422, 461], "810000": 453, "810456": 541, "810e": 461, "811": [422, 432, 452], "8115337251905373e": 463, "812": 422, "812075194992371e": 463, "8122169596532167e": 463, "8122425483643125e": 463, "8122e": 463, "812358724314062e": 463, "8129257829574434e": 463, "812951371538087e": 463, "813": 422, "814": 422, "8150": 484, "8157971601581226e": 463, "816": [422, 448], "8160964882165554": 291, "81699e": 433, "816e": 461, "818388e": 484, "81847286": 458, "818e": 435, "819": 461, "81e": 524, "82": [65, 403, 461, 511], "820": 422, "8205513": 473, "820562952023891": 291, "821": 457, "8222980e": 464, "823": 437, "82352941176471": 451, "824": [128, 422, 468], "8241471833009617": 470, "825": [422, 433, 461], "8256": 484, "826": 422, "826414166666": 89, "827": 422, "8272": 486, "82739": 441, "827e": 133, "8290458e": 464, "8293": 484, "82946153": 484, "82e": 446, "83": [30, 65, 79, 81, 89, 97, 100, 104, 105, 163, 166, 181, 182, 191, 194, 437, 438, 439, 441, 446, 455, 462, 465, 466, 467, 475, 476, 482, 483, 502, 505, 507, 508, 511], "830": [422, 472], "8300": 484, "831": 422, "832": 422, "83242471": 464, "833": [422, 438], "833333333336": 458, "833e": 441, "834": 422, "8341884287660133": 470, "8349780e": 464, "835": 422, "835e": 447, "835fals": 435, "836": [422, 441, 458, 461], "836731": 461, "8369650e": 464, "837": [422, 468], "8376": 453, "8377268e": 464, "838": 441, "8383396349722769": 291, "84": [24, 403, 437, 439, 447, 461, 468, 511], "840": [422, 441], "841": 461, "84196311": 92, "842": [422, 461], "84233": 441, "842x": 134, "843": [59, 433, 458], "843137254902004": 451, "843e": 65, "8441040e": 464, "844770648146": 89, "8449575657133206": 291, "845": 423, "84529": 461, "8455480e": 464, "845693": 433, "846": [441, 461, 559], "847": 422, "8475576e": 464, "8475650e": 464, "84e": 445, "85": [83, 86, 429, 447, 515, 516], "851": 422, "85157506": 484, "8515948e": 464, "85188496e": 464, "852": [432, 472], "85202": 484, "85287": 474, "852e": 461, "854": 422, "854166666664": 458, "85416667": 456, "85469291": 92, "854819": 553, "855": 422, "85527": 447, "85527359": 447, "8555500e": 464, "855887646638273e": 482, "85624": 442, "85625": 442, "8568": 484, "856e": 461, "8570719e": 464, "85722435185": 461, "858": 422, "858e": 461, "859": [422, 437], "85900": 447, "85900392": 447, "85925": 484, "8593054": 461, "85e": 461, "86": [435, 437, 438, 441, 466, 484, 495], "860": 461, "861": 484, "86111111": 456, "861150": 435, "8613613e": 464, "86178": 132, "8620": 453, "8623": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "862745098039234": 451, "864": [422, 437, 484], "865": [422, 441], "86676": 474, "8669": 433, "8673": 447, "868": [422, 461], "86831929": 92, "8699": 433, "8699165e": 464, "87": [65, 447, 466, 483], "870": [65, 422], "871": 422, "872": 422, "872e": 441, "873": 438, "8733348": 473, "873581766271": 448, "873659477745188": 470, "874": 434, "875": 422, "876": 468, "8767": 441, "8769240e": 464, "87710186": 92, "877563": 461, "878": [461, 468], "87897": 447, "87897418": 447, "8799800e": 464, "87e": 21, "88": [403, 425, 437, 439, 447, 448, 461, 466, 484], "881": [422, 433, 441], "88113384": 443, "8815212313941426": 470, "882": [65, 441], "882352941176466": 451, "883": 422, "8834862e": 464, "883e": 65, "884": 422, "88470839": 469, "885": 422, "886": 461, "8865": 484, "886962": 533, "88781": 441, "888": 422, "8885138e": 464, "889": 461, "8893600e": 464, "889e": 441, "88e": [435, 461], "89": [33, 438, 466], "8908866e": 464, "8909e": 457, "890e": 65, "892": [437, 468], "89243456": 484, "8926": 484, "89287": 433, "893": 422, "894": 435, "8943121e": 464, "89492144e": 463, "895": 458, "8954039e": 464, "89595846": 469, "89709472": 484, "898": 422, "8986348363207728": 470, "89873": 447, "8989213": 447, "898e": 461, "899": [65, 443], "8999": 447, "899a": 267, "89e": 462, "8e": [435, 445, 448, 450, 468, 474, 543], "9": [31, 33, 35, 65, 79, 83, 86, 132, 187, 226, 228, 323, 329, 361, 368, 369, 373, 381, 400, 406, 408, 419, 422, 424, 427, 429, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 510, 517, 521, 522, 523, 530, 533, 546, 554, 559], "90": [57, 65, 387, 440, 446, 447, 461, 466, 469, 486], "900": 461, "9002269877996247": 458, "900269": 464, "9023670e": 464, "90242058e": 462, "9032163": 82, "904": 484, "905": 461, "9053655e": 464, "9053906e": 464, "906": [422, 461], "90605275e": 474, "90685": 441, "907": [432, 452, 461], "9074812e": 464, "9077294": 473, "908700583573673": 482, "90e": [97, 438, 445, 462], "91": [440, 466, 471, 511], "910": 437, "911": 422, "912": 461, "912525e": 484, "912779907405": 461, "912868843587422e": 455, "913": 437, "913196574074": 455, "914": 65, "915": [432, 461, 463, 472], "91507": [97, 462], "9163195e": 464, "91719": 462, "918": 65, "918365": 461, "919": 422, "919e": 461, "91e": 468, "92": [133, 440, 441, 466, 473], "920": 437, "9205875e": 464, "921": 438, "9215375e": 464, "92234009259": [400, 455], "923e": 441, "924": 438, "9240e": 469, "92490": 441, "925106": 447, "925e": 441, "9269494e": 464, "927": [432, 436], "9277492e": 464, "928": 461, "9280475e": 464, "929": [433, 438], "93": [65, 117, 119, 440, 441, 466, 473], "93026": 461, "9303": [461, 484], "931": 289, "93128e": 433, "932": 422, "93271046296": 455, "933": 422, "9332549000000": 484, "9343": 433, "935826709880043": 454, "936": [432, 472], "93702": 474, "9382336444241555": 470, "938e": [447, 461], "939": [278, 284], "9391360e": 464, "93988308": 92, "939e": 453, "93e": 461, "94": [440, 457, 461, 466, 473, 482, 484], "940e": 461, "940fals": 435, "94111838": 92, "941176470588236": 451, "94186555556": [400, 455], "943282347242818": 482, "9445e": 442, "9453950989269149": 470, "945e": 441, "9462": 447, "946923": 262, "94722599": 447, "94723": 447, "948683": 433, "9489822e": 464, "949": 468, "9499210e": 464, "94e": [447, 461], "95": [33, 65, 144, 150, 152, 153, 154, 156, 210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263, 440, 441, 447, 453, 461, 462, 463, 466, 467, 473, 515, 560], "950": 422, "9500979841335693": 291, "95024543e": 463, "952": 65, "9529719e": 464, "953": 468, "954": [432, 472], "95421509259": 455, "95451985e": 119, "9546285068162436": 470, "95615": 433, "957": 65, "9580e": 439, "95883": 484, "959198": 461, "959d": [52, 53], "96": [403, 440, 462, 466, 524], "9602e": 453, "9606540e": 464, "960784313725491": 451, "9608912e": 464, "9619812963": 455, "965e": [441, 453], "966": 422, "96602": 442, "967": [432, 477], "967546": 441, "9677107409819438": 291, "96814": 484, "96833546296": [461, 474], "968488": 289, "969": [447, 461], "96e": 435, "96r": 466, "97": [440, 461, 464, 470, 482, 483], "97003": 484, "97054": 441, "970738": 530, "970e": 461, "97116": 447, "973": 461, "973194": 520, "97369425926": 455, "974": 438, "9741e": 446, "974e": 461, "975": 422, "97529": 132, "97596": 441, "976": 422, "97749": 447, "97749371": 447, "9776920e": 464, "979": [65, 422, 466], "97934": 441, "97978": 79, "97e": 461, "98": [79, 332, 439, 440, 441, 445, 455, 457, 464, 482], "980": 65, "9803921568627443": 451, "98049": 441, "98149518519": 455, "9816452e": 464, "982061": 549, "982075849517389e": 469, "98258": 441, "9833462074166": 461, "9834338e": 464, "98359208475904647": 447, "98429": 441, "9845": 433, "9847406e": 464, "985": [422, 435], "985502122122975": 470, "9864771491419372": 482, "9876": 433, "98772": 132, "988": [422, 461, 468], "988409870698051e": 52, "9890": 484, "98e": 461, "99": [332, 440, 441, 442, 453, 483, 484], "991": 461, "9910796e": 464, "9912648e": 464, "9912712e": 464, "9927e": 457, "993": [432, 434, 459], "9931": 484, "994": 422, "994e": 461, "995": 468, "9952623149688797": 482, "9969731e": 464, "997": 422, "9977859e": 464, "9978": 484, "998": 448, "99848e": 474, "999": [50, 153, 156, 461], "99919925926": 228, "99996948242188": 437, "9999912037958": 447, "999999": 461, "99999994": 82, "9999999995": 461, "9999999997835": 434, "999999999997": 449, "9999999999977": 461, "9999999999978": 456, "9999999999998": 461, "99999999999994": 461, "99999999999999": [440, 461], "99e": 461, "9e": [435, 461, 543], "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 83, 84, 85, 86, 87, 94, 95, 96, 97, 99, 100, 103, 104, 105, 117, 118, 119, 127, 132, 133, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204, 205, 207, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 275, 277, 285, 293, 302, 353, 354, 355, 357, 358, 365, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 402, 404, 408, 409, 410, 411, 412, 415, 417, 418, 421, 422, 423, 424, 426, 428, 429, 430, 433, 434, 437, 439, 441, 445, 447, 448, 451, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 481, 483, 484, 486, 494, 495, 496, 498, 499, 507, 508, 510, 511, 513, 515, 552, 553, 556, 557, 560], "AND": [467, 468], "And": [267, 364, 367, 382, 384, 390, 395, 434, 435, 437, 438, 445, 449, 451, 457, 462, 463, 466, 467, 469, 473, 475, 482, 483, 484], "As": [79, 293, 323, 364, 365, 367, 372, 376, 377, 378, 380, 382, 390, 391, 393, 400, 405, 424, 433, 434, 437, 438, 439, 441, 442, 443, 447, 449, 450, 454, 455, 456, 457, 460, 461, 462, 463, 465, 466, 469, 471, 474, 476, 482, 484, 498, 507, 560], "At": [251, 378, 381, 390, 391, 394, 408, 449, 466, 473, 503, 556], "But": [364, 369, 372, 378, 383, 391, 394, 400, 424, 437, 438, 463, 471, 473, 482, 486, 558], "By": [19, 20, 26, 50, 63, 83, 86, 96, 97, 100, 104, 105, 116, 120, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 160, 163, 170, 180, 182, 183, 184, 186, 192, 195, 196, 208, 209, 211, 212, 215, 216, 218, 219, 220, 223, 224, 226, 230, 231, 233, 237, 238, 239, 241, 242, 243, 247, 248, 249, 252, 253, 254, 255, 256, 257, 259, 260, 263, 264, 361, 364, 390, 391, 392, 409, 410, 412, 449, 450, 454, 456, 463, 466, 471, 483, 505, 509, 515, 516, 517, 561], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 78, 83, 84, 86, 90, 94, 96, 97, 100, 104, 105, 112, 114, 116, 117, 119, 120, 121, 124, 125, 126, 127, 140, 141, 142, 148, 153, 156, 163, 168, 170, 173, 174, 176, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 236, 237, 238, 239, 240, 241, 243, 244, 248, 249, 250, 252, 253, 255, 256, 257, 259, 263, 264, 276, 278, 282, 284, 290, 296, 311, 363, 364, 365, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 405, 406, 407, 409, 410, 411, 412, 415, 422, 426, 429, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 451, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 478, 482, 483, 484, 486, 493, 494, 496, 498, 508, 510, 511, 516, 521, 553, 557, 558, 560, 561, 562], "IN": [87, 95, 236], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 114, 116, 117, 118, 119, 120, 122, 124, 127, 131, 132, 135, 140, 141, 142, 148, 151, 153, 156, 157, 159, 160, 163, 165, 166, 169, 170, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 201, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 274, 290, 293, 305, 306, 311, 350, 353, 357, 358, 359, 360, 364, 365, 366, 367, 369, 371, 372, 377, 378, 380, 381, 382, 385, 386, 387, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 423, 424, 425, 433, 434, 435, 437, 439, 440, 442, 445, 447, 450, 453, 455, 456, 457, 458, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 484, 496, 498, 509, 511, 517, 519, 532, 558, 559, 560, 561], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 79, 83, 84, 86, 89, 96, 98, 103, 119, 140, 159, 182, 184, 187, 190, 196, 204, 206, 263, 274, 306, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 400, 405, 406, 407, 408, 409, 410, 411, 412, 415, 426, 429, 433, 434, 435, 437, 438, 439, 440, 441, 443, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 474, 475, 482, 483, 484, 494, 496, 498, 503, 506, 507, 508, 510, 511, 512, 515, 516, 521, 534, 553, 556, 557, 558, 559, 560, 561, 562], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 97, 100, 104, 105, 106, 108, 110, 117, 132, 140, 144, 151, 152, 153, 154, 156, 166, 169, 173, 174, 179, 183, 184, 186, 188, 191, 192, 195, 196, 198, 208, 209, 212, 215, 216, 218, 219, 220, 224, 228, 230, 231, 233, 237, 239, 241, 247, 251, 252, 254, 255, 256, 257, 260, 264, 276, 280, 282, 283, 301, 315, 320, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 399, 401, 405, 406, 407, 408, 412, 415, 417, 418, 419, 424, 426, 428, 429, 430, 433, 438, 443, 446, 448, 450, 453, 454, 458, 461, 462, 463, 465, 466, 467, 469, 471, 473, 474, 475, 476, 482, 483, 484, 486, 487, 494, 495, 497, 498, 502, 503, 505, 507, 511, 525, 528, 529, 531, 532, 536, 537, 539, 540, 541, 542, 555, 556, 557, 558, 559, 560, 562], "Its": [140, 376, 390, 391, 415, 417, 451, 456, 471, 483, 500, 501, 502, 504], "NOT": [467, 498], "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 375, 385, 388, 389, 423, 425, 431, 451, 461, 463, 465, 466, 484], "Not": [100, 104, 105, 185, 191, 193, 372], "ON": [97, 100, 126, 170, 171, 172, 180, 362, 370, 417, 433, 437, 440, 443, 447, 455, 456, 458, 463, 465, 471, 498, 507, 557, 559, 561], "OR": [97, 104, 462, 467, 468], "Of": [364, 367, 400, 445, 462, 466, 474, 558, 561], "On": [59, 158, 164, 165, 168, 276, 283, 289, 364, 365, 370, 372, 379, 380, 393, 395, 396, 397, 398, 419, 445, 446, 463, 478, 560], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 96, 97, 100, 104, 105, 214, 236, 319, 364, 365, 370, 372, 373, 374, 375, 378, 380, 381, 382, 390, 429, 434, 438, 443, 455, 465, 466, 467, 482, 484, 507, 511, 534, 558, 560], "Ones": 293, "Or": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 365, 383, 384, 438, 445, 462, 466, 473, 474, 496], "Such": [376, 464, 502], "That": [16, 19, 20, 80, 99, 118, 201, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 364, 365, 369, 378, 381, 384, 463, 484, 558], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 62, 67, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 160, 164, 165, 169, 170, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 266, 267, 273, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 293, 305, 311, 313, 314, 317, 332, 347, 348, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 401, 404, 405, 407, 408, 409, 410, 411, 412, 415, 417, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 478, 482, 483, 484, 486, 487, 488, 489, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 515, 517, 519, 520, 521, 524, 530, 532, 533, 534, 543, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563], "Their": 467, "Then": [65, 97, 102, 104, 367, 369, 374, 377, 379, 380, 381, 382, 388, 397, 434, 437, 445, 446, 449, 453, 455, 463, 467, 469, 471, 483], "There": [83, 86, 132, 364, 365, 369, 370, 371, 373, 378, 379, 380, 381, 382, 383, 384, 385, 388, 391, 394, 396, 397, 423, 447, 451, 454, 460, 461, 462, 463, 464, 465, 467, 468, 475, 486, 494, 495, 498, 511], "These": [90, 188, 266, 364, 365, 369, 370, 375, 377, 378, 379, 380, 384, 385, 390, 407, 409, 410, 411, 415, 423, 429, 433, 446, 448, 449, 454, 457, 460, 462, 464, 466, 469, 470, 475, 478, 486, 503, 508, 510, 511, 559, 560, 561], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 95, 99, 103, 116, 118, 120, 124, 182, 194, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 262, 264, 266, 276, 354, 355, 366, 367, 371, 372, 375, 376, 377, 379, 380, 385, 386, 387, 388, 389, 390, 394, 395, 397, 399, 400, 401, 405, 406, 407, 410, 411, 415, 417, 423, 424, 426, 429, 433, 434, 435, 437, 438, 439, 440, 442, 443, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 478, 482, 484, 494, 495, 496, 499, 503, 505, 507, 508, 515, 556, 558, 559, 560], "With": [79, 364, 373, 374, 390, 411, 424, 471, 494, 560], "_": [97, 104, 122, 224, 243, 364, 378, 388, 390, 440, 443, 460, 461, 463, 468, 471, 494, 507], "_0": [50, 51], "_1": [100, 105, 495], "_2": [100, 105], "__all__": 364, "__array__": 293, "__array_ufunc__": [449, 476, 546], "__attributes__": [83, 86], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 305, 370, 375, 392, 411], "__class__": [364, 388, 460, 492], "__dict__": [16, 80, 99, 118, 364], "__enter__": 342, "__eq__": 417, "__exit__": 342, "__fields__": [16, 80, 99, 118, 391], "__getitem__": [374, 375, 376], "__init__": [16, 80, 99, 118, 191, 263, 364, 370, 376, 388, 426], "__int__": 311, "__len__": 374, "__main__": [246, 364, 471, 480, 558], "__name__": [364, 443, 455, 456, 457, 460, 480, 492, 558], "__neq__": 417, "__pydantic_extra__": [16, 80, 99, 118], "__pydantic_fields_set__": [16, 80, 99, 118], "__repr__": [364, 410, 424], "__str__": [364, 376, 391, 407], "__subclasses__": 460, "__version__": 399, "_basemodel__context": [16, 80, 99, 118], "_build": [365, 394], "_check_interv": 429, "_compute_flux_spati": 415, "_covari": [214, 236], "_data": 388, "_dom_class": [445, 453, 466, 482, 483], "_energy_t": 388, "_errn": [120, 121, 124, 125], "_errp": [120, 121, 124, 125], "_evaluate_timevar_sourc": 429, "_f_cash_root_cython": 288, "_factr": 463, "_fields_set": [16, 80, 99, 118], "_i": 122, "_k": [97, 104, 494], "_l": 494, "_lat": 364, "_lon": 364, "_map": 357, "_model": 117, "_new_attribut": 364, "_old_attribut": 364, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 80, 99, 118], "_phi": 364, "_prior": 392, "_propagate_error": 414, "_reco": 364, "_repr_html_": 364, "_row_index": 67, "_sample_coord_time_energi": 429, "_scan": 463, "_time_group": 388, "_time_t": 388, "_true": 364, "_type": [392, 471], "_types_namespac": [16, 80, 99, 118], "_was_": [16, 80, 99, 118], "_wc": 522, "_weight": 392, "a_": [100, 105, 143, 500, 503, 560], "a_off": 560, "a_on": 560, "a_scan": 471, "aa": [83, 86, 293, 390], "aaguasca": 426, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 63, 79, 84, 112, 120, 134, 143, 196, 204, 206, 233, 266, 267, 276, 283, 460, 461], "abc": [18, 56, 94, 115, 162, 181, 186, 465], "abcmeta": 465, "abdalla2018": [507, 508, 557], "abeysekara": 59, "abil": [388, 471], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 374, 379, 382, 434, 453, 455, 456, 471, 478, 558], "about": [11, 13, 16, 80, 99, 118, 138, 143, 223, 228, 323, 364, 367, 369, 373, 380, 381, 383, 384, 385, 389, 390, 392, 393, 394, 399, 400, 419, 420, 424, 425, 426, 435, 441, 442, 443, 446, 447, 449, 461, 464, 466, 469, 474, 483, 484, 486, 494, 495, 558, 561], "abov": [29, 44, 52, 53, 79, 116, 118, 119, 122, 126, 127, 132, 133, 158, 193, 353, 355, 364, 365, 370, 373, 374, 376, 378, 380, 381, 382, 383, 384, 388, 396, 397, 400, 433, 447, 449, 450, 451, 455, 458, 463, 465, 466, 467, 469, 470, 471, 473, 474, 475, 482, 492, 494, 495, 502, 511, 557, 558, 559, 560, 561], "abramowski": 143, "abruptli": [364, 389], "abs_path": 301, "absenc": [379, 443, 465, 467, 507, 559], "absolut": [78, 86, 101, 137, 138, 139, 140, 143, 145, 147, 150, 155, 183, 184, 186, 188, 192, 195, 196, 297, 323, 341, 345, 496], "absolute_tim": 562, "absopt": 382, "absorb": [264, 374, 387, 422, 524], "absorbedspectralmodel": [409, 422], "absorbt": 387, "absorpt": [216, 382, 412, 422, 432, 512, 544], "abstract": [56, 57, 59, 94, 115, 154, 162, 167, 181, 183, 186, 195, 276, 375, 411, 510], "abstractsetintstr": [16, 80, 99, 118], "acada": 390, "academ": [128, 289], "accept": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 99, 100, 101, 105, 118, 158, 175, 180, 182, 183, 184, 186, 194, 195, 196, 214, 236, 277, 362, 368, 369, 370, 371, 372, 373, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 392, 416, 420, 429, 433, 438, 439, 440, 443, 447, 450, 462, 465, 466, 474, 494, 510, 516, 534, 559, 560], "acceptance_off": [100, 101, 105, 158, 168, 376, 433, 434, 437, 440, 443, 494, 560], "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 63, 64, 65, 78, 79, 83, 84, 86, 97, 151, 181, 182, 191, 194, 283, 301, 364, 372, 373, 374, 375, 377, 380, 388, 394, 396, 399, 404, 405, 412, 419, 420, 422, 423, 429, 430, 435, 437, 438, 439, 445, 461, 463, 464, 468, 469, 473, 476, 482, 483, 484, 493, 498, 509, 510, 511, 556], "accessor": 466, "accident": [474, 558], "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 70, 83, 86, 97, 100, 104, 105, 112, 117, 135, 141, 151, 158, 182, 188, 204, 206, 290, 353, 374, 375, 378, 379, 382, 388, 390, 409, 418, 430, 443, 455, 462, 465, 469, 470, 478, 494, 495, 498], "accordingli": [376, 390, 406, 412, 467], "account": [97, 100, 104, 105, 116, 160, 176, 214, 236, 251, 275, 277, 283, 339, 372, 377, 380, 388, 390, 411, 428, 430, 433, 434, 439, 443, 445, 451, 457, 458, 463, 465, 467, 483, 494, 496, 559, 560], "accur": [382, 425, 445, 463, 505], "accuraci": [378, 463, 498], "aceptance_off": 376, "acero": [382, 405, 407, 409, 412, 415, 417, 422, 424, 430], "achiev": [16, 80, 99, 112, 118, 158, 354, 355, 364, 373, 374, 375, 376, 377, 378, 380, 387, 390, 412, 466, 469, 470, 508], "acknowledg": [367, 390, 401], "acquir": 400, "acquisit": 557, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 112, 153, 156, 364, 373, 376, 394, 448, 457, 468, 474, 494, 510, 519, 557], "act": [86, 380, 468, 521], "action": [158, 369, 374, 380, 390, 394, 415, 457], "activ": [86, 283, 367, 381, 395, 396, 398, 399, 400, 409, 426, 454, 498], "actual": [171, 339, 340, 341, 363, 364, 365, 369, 373, 375, 377, 379, 380, 388, 389, 391, 393, 440, 450, 453, 456, 462, 463, 465, 466, 467, 471, 474, 475, 483, 484, 505, 507, 557, 558, 560, 562], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 78, 79, 80, 83, 86, 97, 99, 100, 104, 105, 108, 109, 111, 118, 119, 183, 184, 186, 191, 192, 195, 196, 364, 365, 367, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 383, 384, 388, 390, 404, 405, 406, 408, 409, 410, 412, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 439, 445, 446, 464, 465, 468, 469, 470, 471, 475, 494, 511, 561], "adapt": [112, 158, 201, 373, 374, 377, 378, 383, 384, 386, 387, 390, 393, 400, 405, 406, 408, 409, 410, 412, 413, 415, 418, 421, 422, 424, 426, 428, 429, 430, 462, 464, 466, 467, 508], "adaptiveringbackgroundestim": [168, 370], "adaptiveringbackgroundmak": [161, 409, 508], "adass": 384, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 75, 79, 80, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 117, 118, 119, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 160, 183, 184, 186, 190, 192, 195, 196, 202, 214, 236, 251, 290, 333, 352, 361, 363, 364, 365, 367, 369, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 390, 392, 393, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 440, 445, 446, 449, 453, 455, 458, 462, 464, 465, 466, 467, 469, 471, 473, 484, 488, 489, 498, 511, 526, 558, 561], "add_artist": [469, 515, 516], "add_cbar": [97, 100, 104, 105, 119, 137, 138, 140, 143, 144, 145, 150, 151, 152, 154, 183, 184, 186, 192, 195, 196, 352, 441, 442, 443, 445, 447, 453, 458, 460, 462, 464, 465, 466, 468, 469, 474, 475, 482, 483, 511, 514, 515, 516, 519, 520, 522], "add_column": [83, 86], "add_enabled_unit": [433, 440, 442, 445, 447, 453, 457, 473], "add_index": [83, 86], "add_loc": 364, "add_row": [83, 86], "add_subplot": 352, "addit": [16, 19, 20, 26, 43, 80, 83, 84, 86, 97, 99, 100, 104, 105, 108, 116, 118, 120, 125, 155, 183, 184, 186, 189, 192, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 364, 367, 368, 369, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 388, 389, 390, 391, 393, 394, 395, 396, 397, 406, 407, 409, 411, 412, 415, 416, 423, 424, 426, 429, 430, 435, 439, 451, 458, 461, 462, 463, 466, 468, 469, 471, 473, 474, 483, 484, 494, 496, 498, 505, 510, 511, 555, 561], "addition": [125, 376, 462, 463, 466, 468, 469], "address": [373, 376, 377, 378, 380, 390, 471, 497], "adequ": 191, "adher": 367, "adjac": [135, 188, 415, 456, 466, 507], "adjust": [16, 65, 183, 184, 186, 192, 195, 196, 373, 375, 387, 438, 454, 462, 469, 470, 482, 498, 505], "admit": 384, "adonath": 370, "adopt": [37, 377, 380, 385, 439, 449, 450, 460], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 233, 266, 267, 276, 283], "adult": 364, "advanc": [376, 380, 381, 384, 392, 396, 464, 466, 498, 557, 558], "advantag": [372, 378, 381, 388, 415, 466, 471, 534, 558], "advanteg": 376, "advertis": 393, "advic": [364, 390], "advis": [365, 390, 463, 471, 478], "advoc": 364, "aeff": [16, 78, 83, 84, 100, 105, 143, 169, 177, 374, 376, 377, 411, 412, 434, 437, 438, 439, 442, 443, 445, 447, 456, 464, 465, 473, 475, 476, 482, 483, 500, 505, 507, 508, 557], "aeff2d": 142, "aeff_2d": [78, 83, 143, 473, 476], "aeff_3d": 464, "aeff_ev": 464, "aeff_new": 464, "aeff_perc": [169, 434, 437, 438, 447, 456, 465, 475, 507], "aegi": 216, "af": 360, "affect": [364, 372, 376, 378, 389, 406, 407, 418, 427, 471], "affili": [378, 390, 426], "afmhot": [468, 484], "aforement": 390, "after": [16, 45, 50, 51, 52, 53, 80, 86, 95, 97, 99, 100, 104, 118, 153, 156, 283, 305, 323, 345, 348, 364, 367, 369, 372, 373, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 395, 400, 404, 411, 413, 414, 415, 417, 423, 425, 426, 427, 435, 445, 454, 456, 463, 466, 468, 473, 475, 476, 498, 558, 562], "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 297, 364, 488], "again": [97, 100, 104, 105, 153, 367, 374, 376, 378, 380, 385, 391, 395, 410, 411, 414, 421, 426, 435, 437, 438, 445, 450, 451, 466, 469, 471, 474, 482, 484, 511, 558], "against": [16, 80, 99, 118, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 365, 367, 381, 387, 394, 461, 474, 482, 493, 496], "agent": 380, "agglom": 13, "aggreg": 391, "agil": 377, "agn": [128, 281, 378, 437, 454, 455, 457, 473], "agnost": 463, "ago": 371, "agre": [185, 188, 367, 369, 378, 390], "agreement": [364, 367, 385, 458], "aguasca": [417, 426, 427, 428, 429], "aharonian": 448, "ahead": [378, 404], "ahelp": 201, "aim": [373, 374, 390, 445, 449, 460, 470, 486, 557], "air": 473, "ait": [182, 183, 184, 480], "aitoff": 378, "aka": 484, "al": [26, 33, 59, 128, 143, 216, 282, 283, 289, 374, 441, 448, 454, 486, 557], "albert": 557, "albert2007": 557, "alexi": [412, 415], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 83, 86, 112, 127, 158, 201, 276, 364, 370, 376, 377, 378, 383, 391, 407, 412, 420, 421, 422, 441, 454, 463, 475, 496, 510, 556, 560], "alia": [16, 56, 80, 99, 118, 367, 484], "alias": [16, 56, 80, 99, 118, 463], "align": [83, 86, 95, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 182, 183, 184, 186, 188, 192, 194, 195, 196, 364, 464, 467, 469], "alisha": 417, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 90, 91, 95, 97, 98, 99, 100, 102, 103, 104, 105, 116, 117, 118, 119, 120, 124, 125, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 157, 163, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 273, 336, 337, 338, 339, 340, 341, 351, 360, 363, 364, 365, 367, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 437, 438, 439, 442, 443, 445, 447, 448, 449, 453, 455, 457, 458, 461, 462, 463, 464, 466, 467, 468, 469, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 488, 494, 496, 498, 507, 509, 510, 511, 512, 534, 555, 558, 559, 560], "all_quant": [117, 119], "allclos": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 185, 186, 188, 192, 193, 195, 196, 339], "alloc": [184, 192, 196], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 80, 83, 86, 99, 112, 117, 118, 119, 126, 127, 153, 156, 182, 187, 189, 316, 364, 365, 367, 369, 370, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 406, 408, 409, 410, 411, 412, 415, 417, 424, 425, 426, 429, 433, 437, 448, 457, 462, 463, 464, 465, 466, 467, 483, 494, 496, 498, 505, 510, 511, 555, 556, 558, 563], "allow_extra": 187, "allow_pickl": [16, 80, 99, 118], "allowed_channel": [26, 460], "allski": [79, 466], "alma": 383, "almeida": 412, "almost": [363, 365, 367, 378, 474, 484], "alon": 369, "along": [66, 96, 117, 119, 123, 135, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 154, 155, 183, 184, 186, 192, 194, 195, 196, 281, 282, 283, 304, 305, 315, 325, 326, 373, 374, 388, 426, 429, 442, 451, 461, 462, 464, 465, 468, 469, 495, 510, 511, 527, 557], "alpha": [21, 27, 28, 48, 97, 100, 104, 105, 158, 180, 219, 220, 229, 230, 231, 244, 277, 287, 290, 361, 362, 376, 387, 389, 415, 422, 433, 434, 435, 437, 439, 440, 443, 445, 446, 450, 458, 461, 463, 471, 515, 524, 526, 528, 530, 532, 533, 534, 549, 550, 559, 560, 561], "alpha_": [100, 105], "alpha_1": [100, 105], "alpha_2": [100, 105], "alpha_norm": [216, 387, 524], "alphabet": [381, 390, 405, 406, 407, 408, 409, 410, 411, 412, 415], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 118, 201, 259, 260, 261, 263, 364, 370, 371, 372, 375, 376, 377, 378, 379, 381, 384, 385, 386, 388, 391, 393, 394, 424, 435, 439, 441, 450, 458, 460, 461, 462, 466, 467, 468, 469, 473, 474, 475, 484, 486, 511, 522], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 90, 112, 116, 117, 119, 120, 132, 134, 155, 160, 166, 181, 188, 190, 191, 201, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 262, 264, 274, 293, 301, 306, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 415, 423, 424, 425, 429, 433, 434, 437, 438, 439, 440, 441, 445, 447, 448, 449, 450, 451, 454, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 482, 483, 486, 494, 495, 496, 497, 498, 505, 507, 510, 511, 534, 537, 555, 557, 558, 559, 560, 562], "alt": [79, 81, 84, 89, 90, 364, 562], "alt_pnt": 86, "altaz": [79, 81, 89, 146, 364, 464, 562], "altaz_fram": [79, 89], "altaz_from_t": [79, 89], "altaz_interpol": 89, "altern": [78, 273, 363, 364, 367, 369, 373, 397, 415, 437, 439, 441, 448, 461, 463, 464, 466, 468, 473, 494, 495, 558], "although": [364, 377, 378, 379, 381, 384, 388, 463, 473, 520, 521, 555, 562], "altitud": 434, "alwai": [79, 83, 86, 140, 188, 191, 198, 204, 206, 222, 364, 365, 367, 370, 371, 372, 374, 375, 376, 378, 381, 389, 390, 397, 404, 411, 426, 427, 429, 440, 441, 445, 453, 460, 463, 465, 466, 468, 470, 471, 478, 496, 510, 511], "am": 373, "ambigu": [378, 423], "amend": 367, "among": [78, 83, 86, 97, 100, 104, 105, 380, 384, 385, 387, 392, 412, 463, 557], "amount": [371, 378, 392, 498], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 250, 551], "ampl_2": [144, 464], "ampl_3": [144, 464], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 66, 96, 120, 125, 127, 183, 184, 186, 195, 196, 208, 215, 218, 220, 224, 231, 234, 241, 242, 243, 250, 252, 255, 256, 257, 267, 273, 285, 375, 376, 379, 387, 434, 435, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 461, 462, 463, 468, 469, 473, 474, 482, 483, 484, 496, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 528, 529, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 560], "amplitude_maximum_signific": 454, "amplitude_maximum_vari": 454, "amplitude_ref": 458, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 103, 104, 105, 106, 108, 110, 117, 118, 119, 120, 121, 122, 124, 125, 127, 131, 132, 133, 138, 140, 141, 142, 143, 145, 148, 151, 153, 155, 156, 159, 163, 166, 168, 171, 173, 174, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 204, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 269, 276, 281, 283, 291, 293, 297, 311, 322, 326, 342, 348, 354, 355, 357, 360, 363, 365, 367, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 400, 401, 404, 405, 408, 409, 410, 411, 412, 415, 417, 418, 419, 422, 423, 424, 426, 427, 429, 430, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 451, 453, 454, 455, 456, 457, 458, 461, 463, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 486, 488, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 557, 558, 559, 560, 561], "anaconda": [381, 395, 396], "analog": [83, 86, 183, 184, 186, 192, 195, 196, 511], "analogi": 385, "analys": [78, 363, 364, 373, 374, 375, 376, 378, 382, 384, 386, 387, 392, 400, 401, 407, 408, 409, 411, 412, 422, 424, 427, 437, 438, 445, 456, 457, 460, 461, 467, 469, 473, 474, 482, 483, 486, 494, 558], "analysi": [6, 16, 57, 65, 68, 70, 71, 79, 97, 99, 100, 104, 105, 109, 111, 165, 169, 363, 364, 365, 368, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 391, 393, 394, 395, 396, 397, 400, 401, 404, 405, 406, 408, 409, 410, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 435, 436, 441, 442, 443, 444, 448, 449, 451, 452, 453, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 483, 484, 486, 495, 496, 498, 499, 503, 505, 506, 507, 508, 510, 511, 537, 555, 557, 558, 560], "analysis3d": 425, "analysis_1": [432, 482, 485], "analysis_1d": 455, "analysis_2": [365, 432, 483, 485], "analysis_3d": [424, 432, 445, 452, 455], "analysis_joint": 445, "analysis_mwl": [432, 446, 452], "analysis_stack": 445, "analysisconfig": [15, 365, 438, 442, 443, 445, 455, 482], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 143, 144, 152, 154, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 377, 382, 430, 464, 469, 496, 517, 561], "analyz": [374, 475, 557], "andrea": 377, "andrew": 424, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 66, 79, 85, 86, 91, 97, 100, 109, 111, 112, 116, 123, 127, 137, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 159, 166, 167, 169, 171, 181, 182, 184, 189, 191, 194, 196, 197, 211, 215, 223, 226, 238, 240, 248, 249, 251, 253, 259, 261, 263, 266, 321, 351, 364, 370, 378, 380, 387, 391, 403, 405, 406, 407, 424, 433, 434, 437, 440, 446, 449, 450, 456, 461, 466, 467, 469, 470, 473, 474, 498, 503, 507, 510, 511, 515, 516, 517, 520, 521, 557], "angle_incr": 166, "angular": [23, 97, 100, 109, 111, 122, 141, 142, 148, 153, 156, 159, 184, 191, 194, 196, 215, 223, 226, 261, 297, 300, 364, 380, 428, 439, 450, 458, 503, 504, 557], "angular_extens": 41, "angular_s": 511, "angular_separ": [387, 428, 430, 469], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 83, 86, 99, 114, 118, 124, 142, 165, 183, 184, 186, 191, 192, 194, 195, 196, 293, 316, 349, 363, 364, 365, 367, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 390, 391, 393, 396, 397, 398, 399, 400, 404, 405, 423, 424, 425, 430, 438, 447, 448, 451, 455, 458, 462, 465, 466, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 486, 495, 496, 508, 510, 511, 526, 558, 562], "ann": [23, 423], "anna": 364, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 426, 469, 486], "annoi": [364, 558], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 353, 391, 463, 515], "announc": [364, 369, 371, 378, 380, 383, 385, 387, 389, 390, 393, 394], "annuli": [451, 511], "annulu": [121, 325, 511], "anonym": 367, "anoth": [19, 20, 26, 79, 82, 83, 86, 97, 100, 104, 105, 141, 142, 143, 148, 153, 155, 156, 185, 188, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 364, 378, 379, 380, 382, 384, 385, 388, 391, 395, 400, 409, 424, 458, 462, 466, 467, 469, 511, 558], "another_posit": 507, "answer": [463, 498], "anti": [466, 467], "anticip": 373, "anymor": 426, "anyon": [369, 371, 473], "anyth": [140, 380, 558], "anytim": [367, 406], "anywai": [367, 378], "anywher": [378, 381, 383, 494], "ap": [369, 381, 389], "apart": 379, "apertur": 557, "api": [222, 368, 370, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 389, 390, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 415, 419, 423, 424, 432, 434, 437, 438, 441, 447, 449, 456, 462, 466, 467, 468, 469, 472, 473, 474, 482, 484, 485, 494, 495, 496, 497, 505, 506, 510, 555, 556, 557, 558], "apj": [278, 284], "aplpi": 424, "apologis": [404, 405, 424], "app": [83, 86, 394, 400, 423], "appear": [83, 86, 364, 365, 372, 378, 391, 418, 429, 461], "append": [83, 86, 87, 95, 136, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 236, 376, 377, 379, 410, 429, 434, 437, 439, 440, 445, 446, 447, 449, 456, 457, 458, 462, 463, 465, 468, 469, 470, 471, 507], "append_ax": [137, 138, 140, 143, 144, 145, 150, 152, 154, 196, 352], "appendix": [30, 127, 143, 233, 267, 285, 441], "appl": [396, 398, 400], "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 82, 83, 85, 86, 96, 97, 98, 100, 104, 105, 106, 109, 110, 111, 112, 116, 119, 120, 124, 127, 140, 141, 142, 148, 153, 155, 156, 160, 166, 169, 170, 183, 184, 186, 187, 191, 192, 194, 195, 196, 204, 206, 214, 222, 236, 251, 264, 274, 275, 277, 305, 306, 349, 353, 361, 364, 370, 371, 374, 375, 377, 379, 382, 388, 389, 390, 412, 417, 422, 423, 424, 425, 429, 433, 437, 439, 449, 456, 457, 458, 462, 465, 466, 467, 468, 469, 471, 473, 476, 483, 484, 496, 498, 543, 556, 559], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 86, 364, 375, 390, 392, 411, 454, 463, 510, 557], "apply_async": [313, 314], "apply_edisp": 430, "apply_hysteresis_threshold": 467, "apply_irf": [251, 411], "apply_mask": 189, "apply_psf": [375, 408], "apply_standard_scal": 91, "apply_threshold_sensit": 116, "apply_union": 198, "approach": [83, 86, 127, 364, 370, 372, 376, 380, 385, 388, 389, 391, 429, 433, 437, 465, 478, 557, 560], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 182, 183, 184, 186, 195, 196, 293, 301, 365, 439, 443, 445, 466, 558], "approv": [370, 371, 372], "approx": [52, 53], "approxim": [127, 169, 170, 182, 183, 184, 211, 215, 223, 226, 238, 248, 249, 253, 259, 263, 275, 277, 304, 375, 378, 406, 433, 463, 473, 496, 507, 516, 517, 520, 521, 557], "appveyor": 420, "apr": [386, 402], "april": [384, 391, 411], "apt": 397, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 65, 68, 71, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 91, 95, 96, 97, 99, 100, 103, 104, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 163, 164, 169, 170, 171, 176, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 273, 276, 281, 289, 293, 305, 311, 313, 325, 326, 339, 353, 355, 360, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 482, 483, 484, 486, 487, 488, 489, 493, 494, 495, 496, 498, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 515, 516, 524, 534, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563], "arakelian": 282, "arang": [112, 379, 441, 456, 510], "arb": 471, "arbitrari": [189, 191, 192, 375, 387, 410, 423, 449, 462, 466, 471, 510, 511], "arbitrary_types_allow": [16, 80, 99, 118, 391], "arbitrarytypemetadata": 391, "architectur": [396, 398], "archiv": [390, 476, 483], "arcsec": 166, "arctan": 378, "area": [78, 84, 100, 102, 142, 143, 158, 169, 170, 177, 184, 192, 194, 196, 364, 365, 375, 419, 421, 433, 437, 449, 458, 465, 475, 476, 503, 510, 511, 557], "areasc": [422, 424], "aren": [340, 364, 378, 383, 384, 395, 396, 398], "arf": [101, 102, 105, 187, 188, 191, 192, 437, 511], "arf_ob": 101, "arffil": 101, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 80, 83, 86, 99, 104, 105, 118, 137, 138, 139, 143, 144, 145, 147, 150, 151, 152, 154, 155, 184, 185, 192, 209, 222, 234, 241, 242, 243, 316, 558], "arg_in_kwarg": 364, "argmax": 454, "argmin": 454, "argpars": [369, 558], "argsort": [83, 86], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 79, 80, 82, 83, 84, 86, 87, 88, 95, 96, 97, 99, 100, 103, 104, 105, 118, 119, 120, 122, 124, 136, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 159, 169, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 274, 291, 293, 305, 311, 313, 314, 351, 352, 353, 357, 358, 359, 360, 361, 367, 370, 376, 379, 411, 412, 415, 417, 423, 429, 430, 441, 445, 450, 463, 465, 466, 469, 470, 483, 496, 498, 509, 510, 511, 534, 558], "aris": [369, 380], "arithmet": [209, 375, 425, 466, 467, 469, 526], "arjun": [422, 423], "arm": [33, 34, 38, 45, 419], "arm64": [396, 398], "armstrong": 423, "arnau": [417, 426, 427, 428, 429], "around": [56, 132, 159, 182, 184, 194, 196, 305, 378, 379, 439, 458, 460, 463, 467, 475, 484, 498, 507, 510, 511], "arpit": 422, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 78, 79, 81, 83, 86, 87, 89, 94, 95, 96, 97, 104, 105, 112, 117, 119, 120, 121, 124, 125, 127, 132, 133, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 204, 208, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 256, 257, 261, 262, 263, 264, 265, 274, 275, 277, 279, 289, 293, 304, 305, 306, 320, 321, 322, 326, 357, 358, 363, 364, 377, 378, 382, 388, 391, 400, 410, 423, 426, 428, 430, 440, 449, 450, 458, 461, 462, 463, 464, 466, 468, 469, 471, 473, 475, 476, 484, 510, 511, 518, 543, 546, 559, 560], "array_lik": [97, 104, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 278, 284, 290], "array_shap": [428, 430], "arriba": [416, 419, 420], "arriv": [213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 369, 377, 409, 410, 411, 449, 557, 561], "arrow": 556, "arrowprop": 515, "arrowstyl": 515, "artefact": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "arthmet": 375, "articl": [128, 134, 282, 289, 369, 434, 456], "artifact": [116, 184], "artifici": 449, "artist": [191, 214, 236, 515, 516], "arxiv": [63, 169, 242, 243, 256, 257, 446, 460, 461, 465, 541, 542], "as_arrai": [83, 86], "as_artist": [191, 192, 469, 511, 515, 516], "as_energy_tru": [181, 182, 191, 194], "as_plot_cent": [185, 188, 193], "as_plot_edg": [185, 188, 193], "as_plot_label": [185, 188, 193], "as_plot_scal": 188, "as_plot_xerr": [185, 188, 193], "asanyarrai": 364, "ascii": [83, 86, 119, 364], "asimov": 471, "asinh": 441, "asinha": 78, "ask": [365, 367, 369, 371, 378, 380, 381, 384, 390, 399, 455, 484, 498, 499, 558], "asmooth": [112, 113, 383, 410, 421, 424], "asmoothestim": 385, "asmoothmapestim": [113, 385, 410, 412, 415, 441, 498], "aspect": [367, 390, 499, 558, 563], "assert": [185, 187, 188, 193, 339, 340, 341, 367, 375, 387, 466], "assert_allclos": 364, "assert_equ": 364, "assert_nam": [185, 187, 188, 193], "assert_quantity_allclos": [364, 419], "assess": [437, 439, 454], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 98, 103, 104, 182, 251, 261, 360, 364, 373, 376, 379, 391, 393, 434, 453, 455, 462, 466, 469, 471, 483, 484, 510], "assist": 380, "asso": [69, 71, 72, 74], "assoc": 69, "assoc1": [71, 72, 74, 461, 484], "assoc2": [71, 72, 74, 484], "assoc_fgl": 74, "assoc_fhl": 74, "assoc_gam": 72, "assoc_gam1": [71, 74], "assoc_gam2": [71, 74], "assoc_gam3": [71, 74], "assoc_prob_bai": 461, "assoc_prob_lr": 461, "assoc_tev": [71, 72, 74], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 83, 86, 95, 97, 100, 117, 126, 128, 129, 130, 141, 142, 153, 156, 173, 174, 179, 192, 262, 293, 370, 380, 388, 389, 390, 391, 392, 429, 430, 434, 435, 437, 441, 446, 461, 462, 465, 466, 468, 469, 475, 484, 495, 496, 498, 511, 560], "association_catalog": [65, 461], "association_nam": [65, 461], "assum": [23, 50, 51, 52, 53, 65, 78, 79, 81, 90, 116, 117, 119, 127, 131, 134, 143, 155, 166, 180, 182, 183, 184, 186, 189, 193, 195, 196, 201, 257, 263, 266, 273, 320, 323, 364, 367, 376, 377, 379, 387, 388, 392, 400, 401, 433, 434, 437, 439, 440, 443, 449, 450, 451, 453, 456, 460, 464, 466, 469, 471, 474, 488, 494, 496, 503, 555, 560], "assumpt": [70, 90, 97, 100, 104, 105, 112, 126, 134, 378, 388, 503, 507, 559], "astri": 92, "astrisim": 377, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 120, 176, 183, 184, 186, 195, 196, 246, 264, 364, 365, 376, 383, 384, 388, 393, 407, 416, 420, 424, 426, 430, 439, 460, 464, 466, 473, 487, 488, 490, 491, 492, 495, 557], "astro_dark_matt": [384, 432, 460, 472], "astromodel": 486, "astronom": [13, 378, 385, 423, 557], "astronomi": [11, 267, 363, 374, 378, 382, 394, 401, 422, 434, 437, 443, 447, 465, 473, 498, 507, 508, 555, 556, 557, 558, 559, 560, 562, 563], "astrophys": [6, 23, 297, 379, 498, 556, 557], "astropi": [13, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 64, 79, 81, 82, 83, 84, 85, 86, 87, 89, 91, 97, 100, 104, 105, 109, 111, 112, 117, 119, 121, 123, 124, 127, 132, 133, 140, 142, 151, 153, 166, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 227, 228, 230, 231, 233, 237, 239, 241, 242, 243, 244, 247, 250, 251, 252, 254, 255, 256, 257, 260, 262, 264, 265, 267, 276, 291, 292, 293, 323, 340, 341, 350, 354, 355, 359, 363, 365, 366, 367, 369, 370, 371, 375, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 390, 391, 392, 393, 400, 401, 403, 407, 408, 409, 410, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 482, 483, 484, 488, 490, 491, 492, 494, 495, 496, 498, 500, 502, 505, 507, 508, 509, 510, 511, 515, 516, 517, 518, 519, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 559, 562], "astropy_healpix": 373, "astropy_help": [364, 405, 406, 407], "astropy_introduct": 406, "astropy_timeseri": 379, "astropy_vers": 364, "astropydeprecationwarn": 449, "astyp": [83, 86], "asymmetr": [116, 120, 121, 124, 125, 127, 382, 405, 411, 430, 471, 482, 496, 516], "asymmetri": 464, "asymptot": [560, 561], "atmospher": [379, 396, 401, 473], "atnf": 423, "atol": [82, 95, 124, 188, 193, 339, 341, 364], "atol_ax": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196], "atom": 380, "atproduction_gamma": 26, "atreye": [376, 379, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 89, 214, 222, 236, 251, 261, 375, 385, 428, 457, 463, 468, 469, 558], "attempt": [16, 80, 99, 118, 367, 378, 381], "attr": 364, "attract": 384, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 275, 277, 293, 374, 376, 386, 391, 392, 405, 406, 409, 410, 411, 412, 415, 417, 419, 421, 423, 428, 429, 430, 435, 439, 449, 463, 465, 466, 467, 469, 484, 494, 510, 511, 560], "attributeerror": 364, "attrribut": 466, "aug": [377, 380, 381, 383, 402], "august": [371, 377, 380, 383, 447], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393], "authoris": 390, "authorship": 368, "auto": [183, 184, 186, 195, 196, 365, 367, 375, 384, 410, 424, 463, 558], "autodiff": 382, "autogener": 384, "autograd": [375, 382], "autom": [11, 372, 380, 390, 393, 394, 417, 463, 558], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 99, 107, 118, 120, 124, 153, 156, 211, 215, 223, 226, 238, 248, 249, 253, 259, 263, 363, 364, 365, 367, 371, 372, 374, 375, 381, 384, 386, 390, 393, 404, 405, 411, 439, 447, 449, 463, 466, 558, 562], "automatis": 497, "autopep8": 364, "autoscal": [204, 205, 206, 207], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 65, 68, 70, 74, 79, 83, 84, 86, 96, 97, 100, 104, 105, 116, 117, 119, 120, 124, 125, 127, 136, 157, 163, 169, 170, 188, 201, 204, 206, 210, 211, 215, 216, 223, 226, 238, 240, 248, 249, 253, 259, 261, 263, 267, 317, 352, 364, 367, 370, 371, 372, 373, 375, 376, 377, 378, 381, 382, 384, 391, 394, 395, 396, 397, 398, 399, 405, 409, 410, 411, 415, 418, 422, 424, 426, 429, 437, 438, 441, 463, 465, 467, 469, 473, 474, 478, 482, 484, 486, 488, 489, 495, 497, 498, 500, 501, 502, 504, 512, 524, 556, 558, 560], "available_hdu": 84, "available_irf": 84, "available_method": [160, 169], "available_quant": [117, 119], "available_select": [163, 170], "averag": [19, 97, 100, 104, 105, 163, 170, 173, 174, 176, 177, 415, 434, 437, 494, 557], "averageaz": [449, 450], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 116, 163, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 364, 365, 370, 371, 372, 374, 378, 382, 383, 386, 387, 389, 390, 392, 415, 417, 426, 428, 429, 467, 471, 495, 507, 558], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 275, 277], "awar": [364, 369, 376, 384, 390], "ax": [16, 19, 20, 26, 64, 65, 79, 96, 97, 100, 104, 105, 106, 107, 108, 110, 116, 117, 119, 121, 122, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 170, 173, 174, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 275, 277, 351, 352, 356, 357, 358, 359, 360, 361, 364, 373, 383, 406, 410, 415, 421, 422, 423, 426, 429, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 482, 483, 484, 494, 496, 498, 500, 505, 507, 508, 509, 510, 515, 516, 517, 521, 524, 552, 553, 557], "ax1": [433, 441, 443, 447, 458, 467, 468], "ax2": [433, 441, 443, 447, 458, 467, 468], "ax3": [441, 447], "ax_crab_3fhl": 484, "ax_ebl": 524, "ax_excess": [434, 437], "ax_model": 524, "ax_residu": [96, 104, 105, 434, 437, 438, 439, 458, 482], "ax_s": [438, 482], "ax_spati": [97, 100, 104, 105], "ax_spectr": [97, 100, 104, 105], "ax_spectrum": [96, 104, 105, 434, 437, 438, 439, 458], "ax_sqrt_t": [434, 437], "axcols1": 466, "axcols2": 466, "axel": [373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "axes0": [183, 184, 186, 192, 195, 196], "axes_loc": [137, 138, 140, 143, 144, 145, 150, 152, 154, 196, 352], "axes_nam": [182, 183, 184, 186, 191, 192, 194, 195, 196], "axesimag": [352, 353], "axesn": [183, 184, 186, 192, 195, 196], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 79, 95, 96, 97, 100, 104, 105, 106, 107, 108, 110, 112, 116, 117, 119, 120, 121, 123, 124, 127, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 208, 209, 212, 213, 214, 215, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 233, 236, 237, 239, 241, 242, 243, 244, 247, 250, 252, 254, 255, 256, 257, 260, 261, 262, 264, 265, 271, 275, 276, 277, 281, 282, 283, 304, 305, 315, 352, 357, 358, 359, 360, 370, 373, 386, 388, 407, 410, 411, 412, 415, 417, 422, 424, 425, 426, 429, 433, 434, 437, 438, 439, 440, 442, 443, 445, 447, 449, 450, 451, 453, 454, 456, 457, 461, 462, 464, 465, 466, 473, 474, 475, 482, 483, 484, 494, 496, 498, 502, 507, 510, 511, 553, 557], "axis0": 510, "axis1": 466, "axis2": 466, "axis_edg": 357, "axis_nam": [96, 97, 100, 104, 105, 117, 119, 128, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 451, 455, 456, 457, 462], "axis_new": [119, 135, 454, 456], "axis_origin": 454, "axis_rgb": 359, "axis_tru": 447, "axisymmetr": 430, "axvlin": [440, 460, 470, 471], "axvspan": [192, 458], "az": [79, 81, 84, 89, 90, 364, 562], "azimuth": 474, "azur": 411, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 80, 83, 86, 99, 118, 143, 201, 332, 364, 365, 378, 387, 390, 448, 460, 461, 463, 466, 467, 469, 474, 484, 490, 494, 511], "b1509": 461, "b_0": [515, 516], "b_1": [83, 86], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 86, 184, 305, 367, 374, 375, 378, 384, 437, 438, 440, 466, 469, 482, 558], "backend": [88, 96, 114, 120, 121, 124, 125, 127, 159, 200, 201, 202, 203, 273, 308, 313, 314, 363, 373, 375, 405, 424, 425, 429, 434, 435, 437, 438, 439, 445, 446, 447, 458, 463, 474, 482, 483, 555, 556], "backend_default": [121, 124, 127], "background": [16, 65, 78, 79, 84, 88, 97, 98, 100, 101, 103, 104, 105, 107, 108, 112, 116, 117, 119, 126, 137, 138, 139, 149, 158, 160, 161, 163, 164, 165, 166, 168, 169, 170, 176, 216, 222, 261, 268, 275, 277, 285, 286, 287, 288, 290, 360, 364, 370, 373, 376, 377, 378, 380, 384, 385, 388, 396, 401, 404, 405, 406, 408, 409, 410, 411, 412, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 429, 430, 432, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445, 447, 450, 451, 453, 455, 456, 457, 458, 461, 462, 463, 464, 466, 467, 471, 475, 476, 478, 483, 494, 496, 497, 510, 556, 557, 558, 560, 561], "background2d": [138, 139, 149, 411, 418, 426, 428, 430, 501], "background3d": [84, 137, 149, 176, 370, 411, 415, 423, 424, 425, 464, 473, 501], "background_estim": 383, "background_interp_missing_data": 163, "background_map": [261, 375], "background_min": 136, "background_model": [97, 100, 104, 105, 127, 376, 377, 384, 386, 411, 442, 483, 501], "background_oversampl": [163, 170, 465], "background_pad_offset": 163, "background_r": [383, 462], "backgroundconfig": 16, "backgroundestim": [379, 409], "backgroundevalu": 375, "backgroundirf": [137, 138], "backgroundirfmodel": 386, "backgroundmodel": [376, 386, 387, 408, 410, 411, 412, 415], "backgroundtempl": 375, "backport": [371, 389, 393], "backround": 373, "backscal": 192, "backward": [364, 369, 378, 387, 388, 389, 407, 496], "bad": [82, 364, 378], "badli": 394, "balanc": 494, "band": [19, 20, 26, 66, 79, 85, 114, 117, 119, 122, 141, 142, 145, 148, 153, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 370, 382, 383, 387, 388, 396, 404, 435, 437, 438, 446, 447, 448, 458, 460, 461, 469, 474, 476, 493, 494, 496, 556], "bandshdu": 466, "banner": 394, "bar": [15, 78, 83, 86, 97, 100, 104, 105, 112, 124, 127, 137, 138, 196, 201, 224, 283, 314, 358, 381, 415, 418, 419, 425, 430, 458, 471, 498, 531], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 275, 277, 292, 301, 302, 305, 311, 313, 315, 338, 351, 359, 364, 365, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 387, 392, 394, 396, 397, 404, 406, 407, 409, 411, 412, 415, 417, 420, 421, 422, 423, 424, 430, 437, 439, 440, 442, 445, 446, 447, 448, 449, 451, 454, 458, 461, 464, 466, 467, 469, 470, 471, 473, 474, 483, 484, 486, 495, 496, 498, 508, 510, 522, 532, 556, 557, 559, 560], "base_dir": [78, 83, 301, 473, 475, 476, 486], "baselin": [78, 79, 229, 473], "basement": 406, "basemodel": [16, 80, 99, 118, 391], "baseradi": 237, "bash": [396, 398, 558], "basi": [369, 370, 380, 383, 393, 417, 419, 458, 460], "basic": [45, 46, 65, 69, 70, 71, 72, 73, 74, 75, 76, 100, 105, 119, 228, 367, 370, 374, 375, 376, 377, 378, 380, 384, 388, 391, 400, 412, 422, 424, 432, 434, 437, 439, 452, 454, 455, 460, 461, 467, 478, 484, 486, 488, 489, 494, 495, 496, 506, 507, 510, 555, 557, 558], "basicconfig": [16, 447, 480], "bayesian": 382, "bayesian_block": 454, "bayesian_edg": 454, "baysian": 373, "bb": [83, 86, 390], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [138, 142, 143, 144, 153, 433, 440, 453, 457, 464, 473], "becam": 371, "becaus": [16, 80, 99, 118, 183, 184, 186, 190, 192, 195, 196, 364, 365, 367, 369, 371, 375, 376, 378, 379, 383, 387, 388, 391, 394, 415, 417, 434, 435, 438, 451, 456, 458, 465, 466, 467, 468, 473, 474, 475, 482, 483, 484, 494, 498, 558, 561], "becom": [364, 372, 374, 375, 378, 383, 391, 449, 456, 469, 498, 558, 561], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 95, 99, 116, 118, 155, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 293, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 395, 397, 411, 412, 415, 417, 418, 424, 425, 426, 427, 428, 429, 430, 438, 448, 456, 457, 458, 466, 469, 470, 473, 475, 482, 495, 510, 543, 562], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 80, 83, 86, 87, 95, 99, 117, 118, 183, 184, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 305, 359, 364, 365, 367, 369, 371, 372, 373, 374, 378, 379, 380, 382, 383, 389, 393, 394, 400, 418, 424, 438, 440, 455, 456, 463, 466, 469, 475, 478, 482, 534, 558], "begin": [52, 83, 86, 97, 104, 117, 119, 127, 384, 387, 390, 437, 439, 466, 469, 515, 520, 521, 525, 541, 560], "behav": [364, 374, 429, 442, 561], "behavior": [16, 80, 83, 86, 90, 99, 118, 388, 414, 418, 429, 475], "behaviour": [339, 364, 386, 387, 412, 417, 423, 430, 456, 467, 474, 494, 559], "being": [116, 126, 184, 364, 369, 372, 378, 385, 388, 394, 439, 448, 454, 467, 471, 487, 511, 558], "belief": 471, "believ": [399, 471], "belong": [82, 388, 411], "below": [52, 53, 83, 86, 182, 186, 193, 194, 353, 354, 355, 359, 361, 365, 367, 368, 373, 374, 378, 380, 381, 384, 387, 388, 390, 391, 392, 394, 395, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 437, 441, 458, 461, 463, 465, 467, 469, 470, 471, 473, 474, 495, 498, 516, 560], "benchmark": [380, 390, 394], "benefit": 381, "benn": 380, "berg": 557, "berge2007": [378, 507, 508, 557], "bernet": 430, "besancon": 488, "besid": [116, 127, 378, 379, 388, 438, 439, 466, 474, 482, 483, 511], "best": [65, 69, 71, 72, 74, 76, 96, 117, 119, 120, 121, 124, 125, 132, 202, 203, 273, 275, 277, 357, 364, 367, 374, 377, 382, 390, 396, 398, 435, 437, 438, 439, 442, 445, 448, 458, 461, 463, 471, 482, 496, 498, 500, 524, 530, 533, 534, 538, 560, 561, 562], "best_fit_model": 439, "beta": [27, 28, 48, 229, 230, 231, 252, 387, 389, 411, 435, 439, 446, 461, 463, 526, 532, 533, 534, 539, 549], "better": [364, 367, 369, 370, 371, 372, 373, 377, 378, 383, 384, 385, 388, 405, 422, 423, 445, 446, 449, 458, 463, 466, 467, 474, 494], "between": [19, 20, 26, 65, 83, 84, 86, 89, 100, 105, 114, 121, 122, 124, 132, 133, 144, 150, 152, 153, 154, 156, 166, 180, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 208, 209, 212, 213, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 233, 237, 239, 241, 242, 243, 244, 247, 250, 252, 254, 255, 256, 257, 260, 262, 264, 265, 267, 273, 290, 323, 354, 355, 362, 364, 365, 372, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 388, 389, 391, 392, 402, 412, 415, 418, 429, 433, 439, 441, 446, 448, 451, 454, 457, 458, 463, 465, 466, 467, 468, 471, 474, 475, 484, 494, 496, 503, 504, 507, 516, 517, 557, 560, 562], "bewar": [262, 434, 456], "bexcub": 187, "bexpcub": [182, 183, 184, 186, 195, 196, 466], "beyond": [187, 378, 388, 391, 411, 465, 486], "bfg": 463, "bgstat": 421, "bi": [422, 425], "bia": [91, 140, 141, 145, 169, 423, 429, 465, 471, 502], "bias": [439, 559], "bias_energi": 140, "bias_perc": 169, "bibliographi": 557, "biederbeck": [392, 430], "big": [371, 374, 381, 393, 425, 474, 559, 561], "bigger": 184, "biggest": 383, "billion": 364, "bimod": 31, "bin": [19, 20, 26, 79, 82, 84, 97, 100, 103, 104, 105, 107, 112, 114, 116, 117, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 134, 135, 136, 140, 141, 143, 145, 151, 153, 155, 156, 163, 165, 166, 167, 169, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 269, 278, 284, 290, 357, 359, 362, 370, 375, 376, 377, 378, 380, 383, 384, 388, 395, 396, 406, 407, 409, 410, 412, 414, 415, 417, 420, 421, 422, 423, 424, 429, 430, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 494, 496, 498, 502, 506, 556, 557, 558, 559, 561], "bin_cent": 458, "bin_edg": 458, "bin_volum": [187, 191, 194, 511], "bin_width": [185, 188, 193, 458], "binari": [194, 196, 372, 378, 381, 390, 394, 415], "binary_dil": [196, 467], "binary_erod": [196, 467], "binary_eros": [196, 415], "binary_structur": 194, "bind": 367, "binder": [372, 393, 423, 426, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "binlik": 119, "binned_likelihood": 120, "binneddataaxi": [406, 422], "binnedtimeseri": [119, 379], "bins_axi": 196, "binsiz": [16, 438, 442, 443, 445, 455, 482, 483], "binsize_irf": [16, 438, 442, 443, 445, 455, 482], "binsz": [97, 100, 104, 105, 106, 110, 142, 151, 153, 163, 166, 167, 171, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 380, 437, 447, 448, 449, 450, 453, 458, 460, 462, 464, 465, 466, 467, 469, 474, 475, 483, 505, 507, 508, 510, 511, 514, 516, 517, 518, 519], "binsz_irf": [97, 100, 104, 105, 108, 462, 465, 498], "binsz_irf_default": [97, 100, 104, 105, 465], "binsz_wc": [191, 192], "bintabl": [182, 183, 184, 186, 195, 196], "bintablehdu": [79, 82, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 187, 188, 194, 195, 196, 449, 466, 494], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [79, 132, 365, 367, 371, 372, 378, 382, 383, 391, 458, 466, 511], "bitpix": 466, "bkg": [16, 78, 83, 84, 97, 101, 102, 104, 105, 137, 138, 139, 169, 176, 222, 386, 410, 412, 417, 433, 437, 438, 442, 443, 445, 446, 449, 450, 453, 458, 462, 464, 465, 468, 473, 475, 476, 482, 483, 494, 501, 557, 559, 560, 561], "bkg_": [97, 104], "bkg_2d": [83, 137], "bkg_3d": [78, 83, 138, 473, 476], "bkg_err": 458, "bkg_maker": [386, 434, 437, 439, 447, 456, 507], "bkg_model": [376, 386, 392, 445, 449, 450, 453, 468, 483, 518], "bkg_ob": 101, "bkg_sy": 126, "bkg_syst_fract": [126, 433], "bkg_syst_fraction_sensit": 116, "bkgfile": 101, "black": [104, 105, 353, 354, 361, 382, 424, 426, 433, 458, 460, 465, 470, 507], "blackground": 433, "blanch": [423, 424], "blanklin": [228, 400, 496, 511], "blazar": 289, "blind": [426, 498], "bll": 484, "blob": 403, "block": [365, 367, 370, 377, 384, 394, 403, 423], "block_reduc": 424, "blue": [96, 97, 100, 104, 105, 354, 437, 443, 445, 448, 470, 507], "blur": 33, "board": [373, 384], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 364, "boller": 454, "boni": [415, 418], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 76, 78, 79, 80, 82, 83, 84, 86, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 116, 117, 118, 119, 120, 124, 125, 127, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 170, 173, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 263, 290, 293, 302, 305, 323, 331, 333, 335, 361, 364, 378, 447, 461, 465, 466], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 117, 120, 121, 124, 125, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 201, 214, 236, 251, 380, 412, 445, 461, 466, 467, 468], "boost": 449, "bootstrap": [83, 86], "border": 86, "bose": 406, "bot": 370, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 68, 78, 79, 82, 83, 84, 86, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 180, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 204, 206, 364, 369, 370, 375, 376, 377, 378, 379, 384, 389, 393, 405, 409, 411, 412, 415, 418, 438, 439, 449, 453, 462, 466, 467, 468, 470, 471, 495, 496, 498, 510, 511, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 560], "bother": 442, "bottom": [384, 386, 449, 455, 457, 461], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 188, 191, 193, 201, 208, 209, 212, 213, 214, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 233, 236, 237, 239, 241, 242, 243, 244, 247, 250, 252, 254, 255, 256, 257, 260, 261, 262, 264, 265, 288, 373, 466, 471], "boundari": [188, 194, 263, 392, 420, 463, 469, 510], "boundary_mask": [194, 467], "boundary_typ": 188, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 364, 464], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 97, 100, 121, 122, 191, 194, 196, 325, 326, 373, 378, 382, 388, 422, 467, 469, 511], "bpl": [208, 387, 469], "bpwl_norm": 387, "bracket": [140, 201, 427, 429], "brake": 51, "branch": [364, 367, 371, 378, 389, 394, 403], "branchnam": 364, "bratio": 486, "break": [208, 252, 370, 378, 380, 389, 409, 410, 411, 525, 539], "brent": 441, "brentq": [19, 20, 26, 119, 201, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 274], "breviti": [445, 498], "brief": 562, "briefli": [475, 476], "bright": [66, 121, 251, 266, 443, 455, 456, 467, 469, 492, 507], "brighter": 449, "brightest": 461, "brigitta": [381, 405, 407, 409, 411, 420, 421, 422, 423, 424, 425, 426], "bring": 369, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 183, 184, 186, 189, 192, 195, 196, 251, 305, 450, 464, 466, 510], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [208, 252, 390, 432, 512, 544], "brokenpowerlaw": 387, "brokenpowerlawspectralmodel": [246, 252, 387, 412, 469, 525], "brown": [128, 454], "brown2013": 128, "brows": [83, 86, 365, 400, 484], "browser": [83, 86, 367, 394, 400, 420, 423, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 480, 482, 483, 484, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "bruno": [390, 407, 409, 412, 415, 418, 422, 423, 424, 426, 427, 428, 429, 430], "br\u00fcgge": [423, 424], "bsd": 390, "bst": [83, 86], "buchner": 415, "budget": 498, "buffer": 342, "bug": [364, 367, 370, 371, 389, 390, 393, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 427, 428], "bugfix": [371, 373, 389, 422, 423], "build": [16, 80, 99, 118, 182, 216, 364, 370, 371, 372, 377, 378, 380, 384, 388, 389, 390, 391, 393, 411, 417, 426, 441, 445, 458, 465, 467, 495, 498, 558], "build_doc": [329, 365, 367, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 522, 530, 533, 546], "built": [10, 170, 216, 332, 348, 363, 364, 365, 375, 376, 378, 380, 381, 383, 391, 394, 401, 424, 429, 461, 468, 474, 478, 494], "builtin": 484, "bullet": 369, "bump": [378, 422], "bunch": [98, 103, 365, 558], "bundl": [96, 97, 100, 104, 105, 373, 376, 394, 416, 424, 447, 462, 465, 494, 511, 556, 557], "bunit": [350, 424, 466], "bureaucrat": 369, "burkert": [17, 486], "burst": 454, "butterfli": [423, 463, 484], "button": [426, 466], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 80, 99, 118], "byte": [16, 80, 83, 86, 99, 118, 311, 342, 364], "bytearrai": [16, 80, 99, 118, 311], "bytestr": [83, 86], "b\u00fchler": 403, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 83, 86, 189, 199, 218, 255, 278, 284, 293, 332, 363, 364, 381, 396, 397, 399, 416, 423, 458, 460, 463, 471, 474, 486, 510, 529, 540, 558, 559, 561], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c_": 199, "c_0": [181, 182, 191, 194], "c_i": [181, 182, 191, 194], "c_n": [181, 182, 191, 194], "cach": [83, 84, 86, 95, 97, 100, 104, 105, 261, 301, 302, 373, 374, 376, 383, 386, 394, 408, 412, 415, 430], "cahil": 417, "cal_gen_92_002": [140, 188], "cal_gen_92_002_summari": 140, "calcul": [13, 15, 19, 20, 26, 91, 100, 105, 128, 129, 130, 169, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 247, 252, 254, 255, 256, 257, 260, 263, 264, 280, 282, 283, 290, 292, 315, 346, 354, 355, 374, 377, 405, 411, 415, 416, 417, 423, 428, 430, 433, 454, 458, 460, 471, 482, 483, 486, 498, 557, 561], "caldb": [78, 138, 140, 142, 143, 144, 153, 188, 417, 433, 440, 449, 450, 453, 457, 464, 473], "calendar": [389, 393], "calib_vers": [474, 484], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 82, 83, 86, 96, 97, 99, 100, 104, 105, 118, 128, 129, 130, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 165, 181, 182, 191, 194, 201, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 223, 224, 226, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 263, 264, 305, 317, 336, 342, 350, 353, 361, 364, 365, 367, 369, 370, 373, 376, 377, 378, 379, 380, 382, 384, 386, 388, 390, 392, 394, 396, 400, 411, 415, 429, 437, 438, 447, 461, 462, 463, 465, 466, 469, 474, 476, 482, 483, 484, 494, 498, 507, 508, 509, 510, 511, 558, 559, 560, 561], "callabl": [16, 45, 80, 99, 118, 269], "callback": [159, 558], "caller": [364, 375], "camera": [457, 464, 465], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 65, 66, 67, 78, 79, 80, 83, 86, 88, 97, 99, 100, 103, 104, 105, 108, 112, 117, 118, 119, 124, 125, 127, 132, 138, 143, 151, 153, 156, 160, 166, 169, 181, 182, 183, 184, 186, 188, 189, 191, 192, 193, 194, 195, 196, 198, 201, 205, 207, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 223, 224, 226, 228, 230, 231, 233, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 252, 253, 254, 255, 256, 257, 259, 260, 263, 264, 274, 276, 281, 293, 305, 306, 311, 314, 323, 340, 342, 357, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 407, 409, 411, 412, 415, 417, 418, 422, 423, 424, 425, 426, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 482, 483, 484, 486, 488, 489, 494, 495, 496, 498, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 532, 534, 543, 553, 555, 556, 557, 558, 559, 560, 561], "candel": 216, "candid": [389, 417, 461], "candl": [267, 557], "cannot": [16, 65, 80, 83, 86, 90, 99, 107, 117, 118, 119, 198, 284, 332, 361, 367, 377, 378, 429, 464, 468, 469, 496, 511], "cap": [51, 54], "capabl": [374, 474, 486], "capsiz": 471, "captur": [364, 380], "car": [97, 100, 104, 105, 163, 194, 195, 196, 214, 236, 378, 407, 447, 464, 465, 466, 483, 484], "card": [79, 82, 84, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196, 466], "care": [293, 364, 373, 380, 389, 434, 439, 445, 466, 558], "carefulli": [390, 449, 450, 471], "carina": [33, 38], "carlo": [382, 503], "carri": [379, 387, 389, 391, 415, 435, 483], "carr\u00e9": 194, "cartesian": [41, 46, 184, 195, 196, 296, 298, 428, 484, 510], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 67, 79, 83, 86, 140, 159, 171, 182, 184, 190, 191, 194, 196, 201, 204, 206, 226, 237, 259, 261, 263, 274, 284, 306, 323, 359, 364, 365, 367, 369, 372, 373, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 396, 404, 405, 408, 411, 417, 418, 423, 429, 430, 433, 434, 437, 438, 439, 440, 442, 443, 445, 449, 450, 453, 454, 455, 457, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 476, 478, 482, 484, 493, 496, 497, 498, 508, 511, 515, 516, 517, 520, 521, 525, 534, 541, 556, 558, 560], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [97, 100, 104, 105, 163, 279, 284, 364, 376, 415, 440, 442, 445, 453, 457, 462, 465, 468, 471, 482, 483, 494, 557], "cash1979": [557, 560], "cashcountsstatist": [400, 430, 558, 560], "cast": 86, "cat": [64, 65, 75, 372, 394, 422, 423, 435, 461, 469, 493, 557, 558], "catalof": 67, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 116, 120, 378, 384, 403, 407, 409, 411, 415, 416, 417, 420, 421, 422, 423, 424, 426, 430, 432, 435, 441, 446, 462, 469, 472, 474, 478, 488, 522, 556, 557], "catalog_3fgl": 435, "catalog_3fhl": [435, 461], "catalog_3fhl_bright": 461, "catalog_4fgl": 461, "catalog_4fgl_roi": 461, "catalog_gammacat": [435, 461], "catalog_hgp": 461, "catalog_registri": [435, 461, 467], "catalogimageestim": 424, "catalogu": [74, 415, 422], "catch_warn": 498, "categori": [364, 375, 388, 415, 467, 469, 512], "caus": [371, 378, 424, 427, 498], "cautious": 448, "caveat": [201, 289, 430, 516], "cax": 464, "cb98": 48, "cbar": 352, "cbar_kw": 358, "cbarlabel": 358, "cc": [373, 378, 380, 383, 385, 387, 390, 392], "ccube": [182, 183, 184, 186, 187, 188, 194, 195, 196, 466], "cd": [364, 365, 367, 380, 396, 397, 398], "cdelt": [194, 196], "cdelt1": 466, "cdelt2": 466, "cdf": [315, 377, 449, 463], "cdot": [51, 52, 53, 54, 97, 104, 241, 255, 387, 469, 494, 515, 520, 521, 525, 528, 529, 536, 537, 539, 540, 541, 542, 547, 548, 549, 551, 559], "celesti": [466, 510, 515, 519, 562], "celfix": 522, "cell": [372, 400, 426, 446, 458, 466, 473, 474, 484], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 79, 83, 86, 91, 97, 100, 104, 105, 117, 119, 121, 122, 123, 127, 140, 141, 142, 143, 144, 145, 148, 152, 153, 154, 156, 163, 166, 167, 169, 170, 171, 173, 174, 176, 177, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 210, 211, 214, 215, 223, 226, 236, 238, 240, 248, 249, 251, 253, 259, 261, 263, 295, 299, 325, 364, 365, 378, 380, 387, 388, 405, 406, 415, 417, 430, 433, 434, 437, 439, 440, 441, 442, 443, 445, 447, 449, 450, 451, 456, 457, 458, 460, 464, 465, 466, 467, 468, 469, 473, 474, 483, 484, 500, 501, 502, 503, 504, 505, 507, 508, 510, 511, 515, 516, 519], "center_coord": [181, 182, 187, 191, 194], "center_pix": [181, 182, 191, 194], "center_ski": 511, "center_skydir": [181, 182, 191, 194, 465, 466, 474, 475, 505, 507, 508], "centr": [460, 467, 486], "central": [376, 385, 435, 484], "cern": 486, "certain": [50, 79, 83, 86, 201, 281, 363, 378, 380, 382, 388, 433, 460, 465, 466, 474, 493, 511], "certainli": 367, "certif": 390, "certifi": 390, "cfa": [201, 463], "cff": 393, "cg": 490, "ch": 53, "chain": [159, 377, 380, 409, 465, 498, 508], "chainer": 382, "chakraborti": [421, 422], "challeng": [371, 373, 377, 422, 443, 445, 447, 473], "chanc": 369, "changchangelog": [364, 393, 416, 424], "channel": [19, 20, 26, 363, 366, 367, 381, 423, 450, 460, 466, 476, 486], "channel0": 486, "channel1": 486, "channel_registri": [19, 20, 26], "chapter": 460, "charact": [83, 86, 364, 468], "character": [283, 388, 449], "characterist": [21, 25, 27, 51, 52, 53, 54, 128, 281, 375, 429, 454, 557], "charg": [390, 534], "chatti": [364, 447], "cheat": 399, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 82, 83, 84, 86, 97, 100, 101, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 205, 207, 214, 236, 251, 289, 338, 340, 367, 380, 386, 390, 393, 394, 396, 397, 398, 401, 410, 415, 423, 435, 453, 464, 478, 486, 498, 502, 511, 555, 558, 559], "check_limit": [204, 205, 206, 207], "check_random_st": 364, "check_tutorials_setup": [433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "checker": [421, 424], "checklist": 394, "checkout": [364, 367, 406, 445, 449, 469], "checksum": [79, 82, 84, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196, 202, 214, 236, 331, 333, 430, 446, 474], "chen": 424, "cherenkov": [143, 377, 396, 401, 434, 437, 443, 455, 465, 473, 475, 507, 508, 557], "cherri": [364, 371, 378, 389], "chi": [280, 379, 559, 560, 561], "chi2": [96, 134, 376, 406, 448, 457, 463, 494, 560], "chi2assym": 409, "child": 374, "children": [445, 453, 466, 482, 483], "chime": 367, "chisq": 280, "chisquar": 280, "chmod": 558, "choic": [377, 381, 383, 390, 437, 438, 440, 442, 463, 475, 482, 499, 555, 558], "choos": [45, 181, 182, 185, 187, 188, 191, 194, 264, 307, 364, 376, 378, 380, 384, 396, 415, 435, 437, 441, 445, 447, 457, 462, 463, 465, 466, 468, 469, 470, 474, 483, 498, 558], "chose": [449, 474, 475, 560, 562], "chosen": [26, 140, 153, 156, 182, 183, 184, 192, 195, 196, 214, 223, 236, 364, 367, 379, 380, 383, 438, 456, 465, 466, 470, 471, 475, 482, 496, 506, 507, 511], "christoph": [369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 403, 404, 405, 406, 407, 408, 409, 410, 416, 419, 420, 421, 422, 423, 424, 425], "chrome": [83, 86], "chromei": 417, "chunk": [142, 153, 156], "chunk_siz": [142, 153, 156], "ci": [364, 367, 371, 390, 394, 409, 415, 417, 420, 426], "circl": [79, 171, 361, 365, 378, 417, 437, 447, 457, 460, 465, 467, 470, 473, 483, 484, 495, 505, 507, 508, 511], "circle_area": 365, "circleannulusskyregion": [248, 249, 507], "circledast": 494, "circlepixelregion": 378, "circleskyregion": [97, 100, 104, 105, 165, 166, 170, 194, 215, 365, 378, 433, 434, 437, 439, 440, 443, 445, 447, 449, 450, 456, 460, 462, 465, 467, 468, 483, 505, 507, 508, 511], "circular": [86, 97, 100, 170, 182, 184, 194, 375, 383, 385, 434, 439, 462, 470, 507, 511], "circumv": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "cirelli": [26, 486], "citat": 393, "cite": [367, 390], "cl": [16, 80, 97, 99, 104, 118, 391], "clabel": 463, "clang": 400, "clarif": 369, "clarifi": [388, 429], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 275, 277, 301, 302, 305, 313, 315, 338, 351, 367, 370, 373, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 392, 396, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 435, 437, 438, 439, 440, 441, 442, 443, 447, 449, 450, 453, 455, 458, 461, 462, 463, 464, 465, 466, 469, 471, 473, 474, 475, 482, 484, 489, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 506, 508, 509, 510, 511, 512, 534, 543, 555, 556, 557, 558, 563], "class1": 461, "class2": 461, "classic": [373, 382, 396, 405, 434, 437, 443, 447, 462, 465, 496, 498, 507, 508, 557, 560], "classifi": 475, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 95, 96, 97, 99, 100, 104, 105, 117, 118, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 391], "classproperti": 415, "classvar": [16, 80, 99, 118], "claudio": [428, 430], "claus": [364, 390], "clean": [364, 365, 367, 372, 373, 378, 380, 382, 403, 405, 406, 407, 408, 409, 410, 411, 412, 415, 422, 423, 424, 425], "cleaner": 426, "cleanup": [371, 383, 394, 403, 408, 409, 414, 415, 416, 420, 421, 423], "clear": [87, 95, 190, 236, 364, 369, 371, 375, 378, 379, 383, 384, 385, 423, 448, 562], "clearer": 408, "clearli": [128, 364, 369, 370, 378, 381, 389], "cli": [11, 380, 425, 556], "click": [363, 380, 381, 400, 408, 423, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 558], "clip": [19, 20, 26, 181, 182, 185, 187, 188, 191, 193, 194, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 263, 264, 305, 408, 409, 441], "clockwis": [215, 223, 226, 515], "clone": [367, 397, 424], "close": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 263, 339, 340, 341, 373, 378, 393, 418, 429, 430, 463, 543], "closer": 484, "closest": [112, 116, 120, 124, 127, 182, 183, 184, 186, 192, 195, 196, 467, 496], "cloud": [394, 478], "cluster": [6, 91, 291, 292, 377, 429, 430, 432, 472, 478, 495, 498], "clutter": [445, 498], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 65, 96, 119, 125, 127, 208, 212, 218, 220, 224, 231, 234, 241, 243, 251, 252, 255, 256, 257, 266, 349, 375, 387, 434, 435, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 453, 457, 458, 460, 461, 463, 469, 471, 473, 474, 482, 484, 491, 492, 496, 498, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 557], "cm2": [51, 54, 65, 102, 119, 133, 143, 196, 267, 349, 433, 435, 438, 440, 441, 445, 446, 447, 449, 450, 453, 455, 456, 457, 458, 460, 461, 462, 466, 468, 469, 471, 474, 482, 483, 484, 496, 511, 527, 530, 533, 538, 543], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 460], "cm5": 460, "cmap": [97, 100, 104, 105, 354, 355, 439, 445, 460, 466, 468, 474, 475, 482, 483, 507], "cmb": 534, "co": [53, 189, 389, 390, 433, 515, 516, 517], "coadd": [183, 184, 186, 192, 195, 196], "coars": 462, "coarser": [188, 193, 462], "codaci": 394, "codata": 52, "code": [19, 20, 26, 78, 79, 83, 86, 140, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 359, 367, 368, 369, 371, 372, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 397, 400, 403, 406, 407, 409, 410, 411, 412, 415, 417, 420, 421, 422, 423, 424, 426, 429, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 486, 498, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558], "codebas": [365, 381, 403, 422, 424], "codemeta": 417, "codespel": 415, "codestyl": 367, "coeffici": [122, 229, 233, 524], "coerce_numbers_to_str": 99, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coincid": 454, "col": [83, 86, 415], "col0": [83, 86], "col1": [83, 86], "col2": [83, 86], "col_b": [83, 86], "col_c": [83, 86], "col_d": [83, 86], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 358, "collabor": [354, 355, 369, 371, 373, 377, 417, 448, 474, 557], "colleagu": [367, 558], "collect": [190, 236, 364, 366, 391, 394, 422, 423, 438, 462, 468, 486, 495, 499, 503, 557, 562], "collis": 50, "colnam": [83, 86, 183, 184, 186, 192, 195, 196, 474, 484], "color": [96, 104, 105, 137, 138, 196, 353, 354, 355, 358, 361, 365, 433, 435, 437, 438, 439, 440, 441, 443, 445, 447, 448, 451, 455, 458, 460, 463, 465, 468, 470, 471, 498, 507, 511, 515, 516, 534], "colorbar": [119, 137, 138, 140, 143, 144, 145, 150, 151, 152, 154, 196, 352, 358, 463, 466], "colorblind": 498, "colorblind10": 498, "colormap": [353, 354, 355, 403, 416, 484], "colormap_hess": [385, 563], "colormap_milagro": 563, "colour": 426, "column": [41, 43, 44, 46, 47, 56, 79, 83, 86, 98, 103, 117, 119, 122, 132, 137, 138, 140, 164, 183, 184, 185, 186, 187, 188, 192, 193, 195, 196, 262, 283, 291, 334, 335, 336, 337, 357, 358, 361, 362, 364, 377, 379, 388, 426, 429, 430, 433, 449, 450, 458, 461, 466, 469, 473, 495, 498], "column_nam": 464, "column_prefix": 188, "columnclass": [83, 86], "columnspac": 361, "com": [128, 134, 289, 320, 321, 332, 367, 384, 393, 394, 397], "combin": [94, 96, 97, 100, 104, 105, 135, 169, 177, 183, 184, 186, 191, 192, 195, 196, 209, 251, 364, 370, 374, 375, 376, 377, 378, 379, 384, 387, 396, 408, 423, 429, 435, 440, 445, 446, 453, 457, 462, 463, 464, 465, 466, 467, 469, 475, 483, 484, 486, 488, 498, 505, 510, 526, 556, 557], "combined_ev": 495, "combining_and_defin": [433, 440, 442, 445, 447, 453, 457, 473], "come": [67, 367, 370, 371, 372, 373, 374, 378, 379, 380, 381, 383, 384, 389, 391, 393, 394, 411, 412, 415, 424, 425, 429, 437, 445, 453, 469, 473, 482, 558], "comma": [69, 70, 71, 72, 73, 74, 75, 76, 461], "command": [6, 13, 89, 96, 119, 144, 150, 152, 154, 363, 365, 367, 372, 373, 375, 380, 381, 394, 395, 396, 397, 398, 399, 405, 409, 420, 423, 424, 426, 449, 497, 556], "commensur": 196, "comment": [119, 364, 365, 369, 373, 377, 378, 380, 381, 383, 385, 387, 389, 390], "commit": [364, 367, 372, 378, 389, 390, 402, 403, 426], "committe": [369, 371, 389, 390], "commod": 390, "common": [90, 363, 364, 365, 367, 369, 370, 378, 380, 384, 385, 387, 388, 390, 397, 399, 400, 415, 417, 438, 439, 451, 461, 464, 467, 469, 482, 483, 486, 493, 496, 497, 511, 516, 558], "common_irf_head": 464, "commonli": [29, 79, 378, 382, 424, 451, 486, 555, 556, 558, 560, 563], "commun": [380, 386, 390, 393, 395, 401, 476], "comp": 461, "compact": [16, 80, 83, 86, 99, 118], "compar": [83, 86, 120, 121, 124, 125, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 201, 273, 364, 378, 381, 384, 412, 428, 429, 433, 434, 437, 441, 445, 448, 451, 453, 456, 461, 463, 465, 471, 474, 482, 493, 557, 559], "comparison": [82, 83, 86, 95, 124, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 323, 420, 488], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 183, 184, 186, 195, 196, 222, 369, 371, 375, 378, 387, 389, 391, 392, 400, 403, 405, 407, 424, 430, 466, 510], "compil": [367, 416], "complain": 367, "complaint": 382, "complement": 384, "complet": [13, 16, 80, 99, 118, 323, 364, 370, 374, 375, 376, 377, 378, 381, 382, 384, 388, 389, 390, 397, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 420, 421, 422, 423, 424, 425, 445, 450, 463, 470, 478, 498, 503], "complex": [364, 365, 370, 374, 378, 379, 380, 386, 388, 400, 434, 437, 447, 450, 454, 457, 462, 466, 467, 469, 470, 474, 507], "complianc": [390, 426], "compliant": [183, 184, 186, 195, 196, 430, 557], "complic": [378, 511], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 77, 84, 97, 98, 100, 103, 104, 105, 124, 128, 155, 157, 191, 214, 236, 237, 251, 266, 375, 376, 377, 380, 386, 387, 405, 409, 411, 415, 423, 424, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 453, 455, 456, 457, 461, 462, 468, 469, 473, 474, 482, 483, 486, 494, 496, 498, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 557], "component_1": 375, "component_2": 375, "component_class": 461, "components_model": 76, "components_statu": 65, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 370, 390], "composit": [57, 68, 76, 304, 390, 422], "compound": [191, 198, 209, 324, 328, 378, 387, 432, 451, 512, 544], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 417], "compoundpixelregion": 328, "compoundskymodel": 375, "compoundskyregion": [198, 324, 328], "compoundsourcemodel": 375, "compoundspectralmodel": [246, 387, 429, 469, 474, 524, 526, 530, 533, 535, 538, 543], "compress": 372, "compris": 475, "compromis": [364, 369, 377, 471], "compton": [237, 411, 534], "compulsori": 469, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 79, 80, 82, 84, 89, 91, 95, 96, 97, 99, 100, 104, 105, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 169, 170, 172, 175, 176, 177, 178, 180, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 201, 208, 209, 212, 214, 216, 218, 219, 220, 224, 228, 230, 231, 233, 236, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 262, 264, 266, 267, 273, 274, 275, 277, 280, 281, 282, 283, 288, 289, 292, 296, 297, 300, 364, 373, 374, 375, 376, 377, 378, 379, 382, 384, 385, 386, 387, 388, 392, 394, 396, 397, 401, 403, 405, 406, 407, 408, 411, 412, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 439, 441, 445, 446, 450, 451, 454, 455, 456, 458, 460, 462, 465, 468, 469, 470, 471, 474, 475, 476, 482, 484, 486, 494, 496, 498, 503, 507, 534, 556, 557, 558, 559, 560, 561, 562], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 201, 377, 378, 494], "compute_chisq": 422, "compute_differential_jfactor": 23, "compute_errn": [275, 277, 426, 560], "compute_errp": [275, 277, 560], "compute_flux_doubl": 128, "compute_fpp": 129, "compute_fvar": [130, 282], "compute_jfactor": [23, 460], "compute_lightcurve_doublingtim": 454, "compute_lightcurve_fpp": 454, "compute_lightcurve_fvar": 454, "compute_lima_map": 411, "compute_npr": 377, "compute_upper_limit": [275, 277], "computedfieldinfo": [16, 80, 99, 118], "con": [364, 380], "concaten": [79, 82, 87, 185, 188, 376, 380, 386, 429, 466], "concentr": 325, "concept": [16, 80, 99, 118, 384, 385, 391, 401, 460, 466, 499], "conception": [377, 386], "concern": [367, 369, 378, 380, 381, 383, 385, 387, 390, 415, 425, 475, 560], "conclud": 373, "concret": [16, 80, 99, 118, 381, 384], "conda": [363, 367, 371, 372, 381, 384, 389, 393, 394, 396, 397, 398, 399, 400, 405, 407, 423, 424, 558], "condit": [52, 53, 136, 188, 205, 207, 214, 236, 388, 392, 412, 433, 437, 440, 450, 461, 467, 468, 470, 475, 494, 503], "conduct": [426, 457], "cone": [86, 378, 438, 470, 482, 483, 498], "conesearch": 380, "conf": [83, 86, 364, 365, 394, 406, 421], "conf_1d": 455, "conf_3d": 455, "conf_max": [204, 206], "conf_min": [204, 206], "confid": [116, 201, 204, 206, 275, 277, 375, 382, 406, 411, 425, 557, 560], "confidence_opt": 201, "config": [15, 16, 80, 99, 118, 363, 365, 370, 372, 373, 380, 381, 384, 391, 396, 398, 408, 409, 410, 415, 423, 438, 445, 482, 555], "config_dict": 482, "config_joint": 445, "config_paramet": [112, 114, 115, 116, 120, 121, 123, 124, 125, 126, 127], "config_stack": 445, "config_str": 16, "configdict": [16, 80, 99, 118], "configpars": 421, "configur": [11, 15, 16, 46, 80, 83, 86, 96, 99, 104, 105, 112, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 313, 364, 365, 367, 373, 375, 379, 380, 384, 385, 391, 394, 400, 408, 410, 411, 415, 417, 426, 429, 430, 437, 439, 447, 449, 450, 473, 478, 497, 503, 557, 558], "confirm": 367, "conflict": [83, 86, 364, 367, 390], "confluenc": 476, "conform": [16, 80, 99, 118, 466], "confus": [364, 365, 370, 383], "connect": [374, 437, 451, 453, 467, 483, 555], "consant": [183, 184, 186, 192, 195, 196], "consciou": 369, "consecut": [166, 323, 364, 389], "consensu": [369, 390], "consent": 364, "consequ": [390, 450, 511], "conserv": [494, 519], "consid": [19, 20, 59, 91, 163, 170, 173, 174, 176, 177, 184, 196, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 273, 360, 369, 370, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 390, 392, 434, 437, 439, 445, 449, 450, 454, 464, 467, 495, 503, 561], "consider": [380, 405, 415, 423, 445], "consist": [71, 86, 90, 117, 119, 141, 142, 153, 156, 183, 184, 186, 195, 196, 223, 226, 364, 374, 375, 377, 378, 379, 384, 391, 408, 409, 410, 411, 412, 419, 423, 424, 426, 428, 429, 430, 438, 439, 440, 441, 448, 453, 457, 463, 465, 466, 469, 471, 482, 532, 534, 559], "consol": [364, 558], "consortium": [391, 473], "const": [210, 211, 212, 213, 387, 450, 469, 527, 545], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 387, "constant": [50, 51, 52, 53, 97, 104, 112, 143, 183, 184, 186, 192, 194, 195, 196, 210, 211, 212, 213, 215, 227, 229, 322, 377, 378, 383, 423, 432, 455, 474, 491, 494, 512, 523, 544, 554, 557, 561], "constant_model": 545, "constantmodel": 425, "constantnormspectralmodel": 387, "constantspatialmodel": [245, 387, 469, 474, 514], "constantspectralmodel": [246, 387, 450, 469, 527], "constanttemporalmodel": [258, 387, 408, 469, 545], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 462, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 390, 442, 446, 465, 471], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 498], "construct": [16, 80, 99, 118, 188, 230, 231, 330, 511, 557], "constructor": [181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 429, 483, 509], "consult": 399, "consum": [463, 498], "contact": [366, 371, 373, 390, 399, 401, 404, 405, 406, 420, 423], "contain": [13, 16, 19, 20, 26, 57, 59, 62, 65, 67, 78, 79, 80, 82, 83, 84, 86, 87, 90, 91, 95, 96, 97, 99, 100, 103, 104, 105, 107, 117, 118, 119, 127, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 165, 168, 170, 175, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 281, 291, 292, 357, 359, 361, 362, 364, 367, 368, 370, 372, 373, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 390, 393, 394, 401, 405, 409, 410, 411, 412, 414, 415, 417, 418, 421, 422, 423, 424, 425, 429, 430, 433, 435, 437, 438, 439, 442, 445, 446, 449, 450, 453, 455, 456, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 486, 487, 489, 494, 495, 496, 498, 502, 506, 507, 510, 511, 512, 555, 557, 559, 560, 561], "containment_correct": [16, 97, 100, 170, 433, 437, 438, 439, 442, 443, 445, 447, 455, 456, 458, 462, 465, 482], "containment_fract": 91, "containment_radiu": [144, 150, 152, 153, 154, 156, 433, 462, 464, 467], "containment_radius_map": [153, 156], "contains_pix": [181, 182, 191, 194], "contains_wcs_pix": 191, "contamin": [65, 443, 461, 467, 507], "content": [80, 99, 118, 119, 183, 184, 186, 192, 195, 196, 331, 364, 367, 369, 373, 379, 384, 391, 394, 409, 418, 423, 434, 466, 467, 473, 475, 495, 498, 509, 510], "content_typ": [16, 80, 99, 118], "context": [16, 80, 83, 86, 99, 118, 205, 207, 214, 236, 313, 342, 364, 379, 390, 394, 430, 466, 488], "contigu": [188, 193, 415], "continu": [188, 371, 373, 374, 377, 378, 380, 381, 383, 384, 389, 400, 403, 404, 407, 415, 420, 421, 422, 424, 437, 450, 467, 510, 557], "continuous_upd": [445, 453, 466, 482, 483], "contour": [198, 201, 356, 373, 425], "contour_": 463, "contour_alpha_amplitud": 463, "contour_alpha_beta": 463, "contour_beta_amplitud": 463, "contourf": 196, "contract": 390, "contrari": [365, 372], "contrast": [384, 557], "contrera": 425, "contribut": [95, 109, 111, 214, 222, 236, 251, 360, 364, 366, 373, 378, 386, 388, 394, 401, 404, 415, 417, 419, 465, 499, 534, 555, 558, 559], "contributes_to_stat": 95, "contributor": [364, 367, 384, 394, 402, 413, 414], "control": [79, 83, 86, 97, 100, 104, 105, 364, 377, 395, 397, 433, 460, 466, 471, 498, 560], "controversi": [364, 369, 370, 384], "conveni": [13, 117, 363, 364, 367, 374, 378, 386, 388, 395, 405, 407, 412, 415, 417, 422, 447, 460, 461, 462, 466, 467, 468, 469, 473, 475, 484, 493, 497, 556], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 182, 183, 184, 186, 194, 195, 196, 386, 388, 407, 408, 411, 412, 426, 462, 465, 466, 469, 494, 496, 503, 510, 560], "converg": [392, 406, 427, 437, 439, 445, 463, 494, 498, 515], "convers": [80, 83, 86, 99, 117, 118, 119, 369, 388, 391, 396, 398, 415, 428, 429, 430, 433, 511], "conversion_typ": [474, 484], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 79, 81, 82, 83, 86, 94, 96, 97, 100, 102, 104, 105, 117, 119, 122, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 202, 203, 204, 205, 206, 207, 214, 228, 236, 273, 290, 293, 294, 298, 311, 327, 345, 347, 348, 365, 370, 378, 379, 388, 391, 394, 416, 428, 429, 430, 433, 443, 448, 456, 457, 462, 463, 467, 468, 473, 484, 496, 502, 507, 510, 560, 562], "convert_bytestring_to_unicod": [83, 86], "convert_unicode_to_bytestr": [83, 86], "convinc": 484, "convolut": [112, 116, 122, 127, 151, 184, 196, 363, 376, 382, 403, 410, 412, 421, 423, 424, 430, 443, 466, 494, 511], "convolution_method": 184, "convolv": [100, 106, 110, 127, 151, 184, 196, 375, 403, 412, 415, 424, 440, 441, 443, 466, 504, 534], "convolve_ful": 184, "convolve_wc": 184, "cookiecutt": 380, "coolwarm": [445, 474, 475, 483], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 238, 281, 375, 408, 450, 466, 467, 507, 510, 511, 518], "coord_to_idx": [181, 182, 185, 187, 188, 191, 193, 194, 466], "coord_to_pix": [181, 182, 185, 187, 188, 191, 193, 194, 466], "coordiant": 464, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 79, 81, 83, 84, 85, 86, 89, 90, 91, 97, 98, 100, 103, 104, 105, 117, 119, 121, 122, 123, 128, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 154, 155, 156, 166, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 214, 215, 223, 226, 228, 236, 238, 240, 248, 249, 251, 263, 281, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 315, 321, 325, 326, 340, 365, 369, 370, 371, 373, 377, 378, 383, 384, 387, 389, 390, 403, 405, 408, 410, 421, 423, 424, 426, 433, 434, 437, 439, 440, 443, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 483, 484, 494, 502, 507, 509, 510, 515, 516, 519, 556, 557, 562], "coordsi": 410, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 82, 83, 84, 85, 86, 87, 94, 95, 96, 97, 99, 100, 103, 104, 105, 112, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 141, 142, 148, 153, 156, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 293, 336, 364, 369, 372, 374, 378, 380, 386, 393, 394, 400, 415, 417, 424, 425, 426, 429, 434, 437, 439, 440, 445, 447, 453, 456, 457, 461, 463, 465, 469, 471, 474, 498, 507, 511, 522, 558], "copy_data": [83, 86, 214, 222, 236, 251, 259, 261, 263], "copy_indic": [83, 86], "copy_ob": [78, 498], "copy_on_getitem": [83, 86], "copyright": 400, "core": [16, 53, 80, 99, 118, 149, 363, 364, 371, 377, 378, 385, 389, 390, 401, 404, 421, 425, 429, 433, 439, 440, 442, 445, 447, 449, 451, 453, 457, 468, 473, 474, 486, 496, 558], "corner": [378, 381, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "corr_coord": [153, 156], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 79, 84, 97, 98, 100, 142, 153, 156, 170, 175, 176, 189, 222, 238, 239, 263, 364, 376, 377, 389, 390, 391, 393, 407, 410, 412, 413, 414, 415, 418, 421, 422, 424, 426, 427, 428, 429, 430, 433, 437, 438, 439, 440, 449, 453, 455, 461, 462, 463, 465, 467, 468, 469, 471, 475, 482, 484, 495, 496, 505, 518, 530, 533, 535, 538, 543], "correctli": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 365, 367, 390, 391, 405, 407, 412, 417, 418, 427, 464, 465, 466, 467, 468, 471, 510, 516], "correl": [19, 20, 26, 116, 122, 199, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 247, 252, 254, 255, 256, 257, 260, 264, 382, 387, 388, 415, 425, 448, 451, 463, 467, 469, 471, 482, 496, 555], "correlate_off": 116, "correlation_radiu": [16, 116, 132, 133, 438, 442, 443, 445, 458, 475, 482, 496], "correspond": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 83, 85, 86, 95, 97, 99, 100, 104, 105, 117, 118, 119, 120, 121, 122, 124, 125, 127, 140, 141, 142, 148, 151, 153, 155, 156, 157, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 208, 209, 212, 216, 218, 219, 220, 223, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 262, 264, 291, 357, 374, 375, 376, 377, 384, 385, 388, 390, 392, 409, 412, 434, 435, 437, 438, 439, 445, 449, 450, 455, 461, 463, 465, 466, 469, 470, 471, 473, 474, 475, 482, 484, 494, 495, 496, 498, 510, 511, 521, 524, 556, 557, 562], "cosimo": [412, 415, 417, 423, 424, 426, 429], "cosmic": [52, 216, 266, 382, 473], "cost": 557, "costom": 471, "costomprior": 471, "costum": 471, "coto": 423, "could": [16, 80, 99, 118, 365, 367, 369, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 390, 391, 394, 434, 437, 445, 447, 461, 473, 474, 482, 497], "count": [16, 79, 87, 95, 97, 100, 101, 102, 103, 104, 105, 108, 112, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 131, 158, 160, 163, 164, 165, 170, 172, 176, 180, 183, 184, 186, 187, 188, 192, 195, 196, 205, 207, 214, 236, 275, 277, 278, 279, 284, 285, 288, 290, 315, 349, 351, 360, 362, 370, 372, 375, 376, 377, 379, 380, 384, 388, 406, 407, 410, 412, 415, 417, 418, 424, 425, 429, 430, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 447, 449, 451, 453, 455, 456, 457, 458, 462, 463, 465, 466, 467, 471, 475, 480, 482, 483, 484, 496, 498, 502, 505, 506, 507, 508, 511, 557, 558, 559, 561], "count_bkg": 458, "count_statist": 560, "counter": [215, 223, 226, 515], "counts_3d": 466, "counts_imag": [451, 462], "counts_min": 136, "counts_off": [97, 100, 101, 104, 105, 158, 164, 165, 168, 362, 376, 417, 428, 429, 438, 439, 440, 443, 447, 458, 462, 494, 560], "counts_on": 406, "counts_rat": 462, "countspredictor": 375, "countsspectrum": [376, 379, 406, 407, 409, 411, 420], "countsstatist": [275, 277, 388, 411, 412, 415, 426], "coupl": [372, 378, 383, 394, 412, 424, 466], "cours": [364, 367, 371, 374, 381, 400, 438, 445, 462, 466, 474, 482, 558, 561], "cousin": [406, 412, 420, 422, 557], "cousins2007": [557, 560], "coutinho": [412, 415], "cov": [242, 243, 394], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [199, 357, 425], "covar_list": 199, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 120, 121, 124, 125, 200, 201, 202, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 275, 277, 357, 382, 392, 411, 417, 425, 426, 429, 438, 482, 560], "covariance_data": [214, 222, 236, 251, 261], "covariance_opt": 201, "covariance_result": 202, "covariance_typ": 392, "covariancegaussianprior": 392, "covarianceresult": [96, 201, 202, 434, 435, 437, 438, 439, 445, 446, 447, 458, 463, 474, 482, 483], "cover": [262, 364, 366, 378, 379, 380, 388, 434, 455, 456, 462, 466, 478, 484, 499], "coverag": [373, 379, 394, 403, 407, 415, 421, 424, 456, 463], "coveral": [394, 403], "cpu": [120, 121, 124, 127, 313, 314, 377], "cpython": 369, "crab": [65, 79, 104, 105, 125, 136, 233, 267, 273, 372, 376, 384, 403, 409, 421, 423, 437, 438, 439, 446, 447, 455, 461, 462, 463, 467, 471, 474, 475, 476, 482, 483, 484, 496, 507, 511, 557], "crab_10gev_100tev_dataset": 446, "crab_3fhl": 484, "crab_3fhl_spec": 484, "crab_events_pass4": 475, "crab_fp": 438, "crab_fp_tabl": 438, "crab_hess_ecpl": 267, "crab_hess_fp": [117, 119, 135], "crab_magic_lp": 439, "crab_model": 463, "crab_posit": 507, "crab_spec": 446, "crab_spectrum": 463, "crabnebula": 455, "crabspectrum": 407, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 78, 79, 80, 82, 83, 84, 86, 87, 88, 94, 96, 97, 99, 100, 104, 105, 106, 107, 108, 110, 112, 117, 118, 119, 120, 121, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 165, 166, 167, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 273, 293, 303, 324, 328, 342, 351, 353, 358, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 407, 408, 409, 412, 415, 417, 423, 424, 426, 427, 428, 429, 430, 433, 435, 438, 439, 440, 445, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458, 460, 461, 463, 465, 468, 469, 470, 471, 473, 474, 475, 476, 480, 482, 484, 486, 493, 494, 495, 498, 502, 505, 507, 508, 509, 510, 514, 516, 517, 518, 519, 524, 534, 543, 555, 556, 558, 563], "create_crab_spectral_model": [437, 439, 446], "create_fermi_isotropic_diffuse_model": [468, 474], "create_map_dataset_from_observ": [88, 103], "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 121, 194, 373, 374, 378, 387, 390, 409, 415, 454, 469, 476], "creator": [99, 118, 367, 391, 438, 469, 482, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "creatormedadata": 391, "creatormetadata": [80, 99, 118, 391], "credit": 400, "crimson": 439, "criteria": [15, 86, 417, 465, 470, 478], "criterion": [86, 127, 291, 433, 498], "critic": 471, "criticis": 355, "crop": [82, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196], "crop_width": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196], "cross": [19, 370, 384, 486], "crowd": 461, "crpix": 194, "crpix1": 466, "crpix2": 466, "crucial": [391, 449, 450, 462], "cruft": 394, "crux": [33, 38], "crval1": 466, "crval2": 466, "cryptic": 375, "csh": 558, "csobsselect": 374, "css": [83, 86, 394], "cstat": [376, 409], "csv": 119, "ct": [349, 424, 463], "cta": [78, 79, 85, 97, 100, 104, 105, 109, 111, 112, 116, 132, 133, 138, 142, 143, 144, 153, 163, 216, 266, 352, 357, 359, 364, 368, 371, 372, 373, 377, 380, 383, 384, 393, 396, 401, 404, 405, 415, 421, 422, 423, 424, 432, 433, 438, 440, 442, 445, 447, 449, 450, 453, 457, 458, 462, 464, 468, 470, 475, 476, 477, 478, 482, 486, 495, 496, 498, 500, 503, 556, 557, 562], "cta_data_analysi": [384, 432, 447, 452], "cta_dataset": 468, "cta_north": 92, "cta_sensist": 384, "cta_sensit": [432, 433, 436], "cta_simul": 404, "cta_south": [92, 433, 440, 449, 450, 453, 457], "cta_util": 424, "ctadata": 473, "ctao": [384, 390, 473, 498], "ctapip": [367, 371, 373, 380, 381, 383, 384, 385], "ctaspectrumobserv": 424, "ctobssim": [78, 377], "ctool": [374, 377, 380, 384, 532], "cts_sigma": 463, "ctselect": 374, "ctype1": 466, "ctype2": 466, "cube": [46, 97, 100, 127, 158, 176, 183, 184, 186, 192, 195, 196, 232, 251, 364, 375, 376, 377, 383, 384, 385, 387, 396, 403, 407, 408, 411, 416, 419, 420, 421, 422, 423, 424, 441, 442, 447, 451, 474, 484, 494, 503, 505, 510, 511, 557], "cubic": 466, "cumbersom": [374, 382], "cumsum": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196], "cumul": [95, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 315, 377, 437, 449, 468, 498], "cunit1": 466, "cunit2": 466, "curat": [394, 404], "curl": [65, 381, 395, 396, 398, 473], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 81, 82, 83, 84, 85, 86, 94, 95, 96, 97, 100, 104, 105, 119, 120, 124, 146, 169, 181, 182, 183, 184, 186, 192, 193, 194, 195, 196, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 342, 358, 364, 365, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 395, 396, 397, 398, 407, 425, 438, 460, 464, 465, 466, 468, 473, 475, 476, 482, 483, 487, 494, 495, 496, 511, 555, 557, 558], "curv": [15, 19, 20, 26, 79, 124, 128, 208, 209, 212, 216, 218, 219, 220, 224, 228, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 262, 264, 283, 356, 368, 375, 377, 380, 384, 388, 396, 405, 409, 411, 412, 416, 419, 420, 422, 424, 426, 429, 430, 432, 433, 454, 459, 478, 494, 495, 496, 497, 506, 507, 510, 512, 554, 556], "curve_fit": 357, "cuspi": 486, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 85, 99, 118, 123, 373, 374, 375, 380, 382, 387, 391, 395, 409, 410, 412, 424, 433, 440, 442, 445, 447, 453, 457, 462, 464, 466, 473, 498, 543], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 469, "customis": [384, 464], "cut": [86, 116, 155, 169, 170, 374, 423, 429, 432, 433, 436, 440, 458, 462, 465, 466, 470, 473, 478, 483, 484, 494, 495, 506, 507, 510, 555], "cutoff": [218, 219, 220, 255, 256, 257, 273, 409, 429, 432, 440, 445, 512, 544], "cutout": [97, 100, 104, 105, 109, 111, 141, 142, 148, 153, 156, 159, 182, 184, 192, 194, 196, 261, 370, 376, 405, 410, 415, 421, 424, 442, 443, 445, 447, 451, 462, 465, 474, 483, 484, 494], "cutout2d": [97, 100, 141, 142, 148, 153, 156, 159, 194, 196, 261, 370], "cutout_and_mask_region": [196, 429], "cutout_info": 409, "cutout_mod": 159, "cutout_slic": 194, "cutout_width": 159, "cval": [183, 184, 186, 192, 195, 196], "cwd": 372, "cwt": [384, 409, 421, 424], "cwy98fdf": 465, "cx": 463, "cxc": [201, 384, 463], "cy": 463, "cyan": 361, "cycl": [361, 367, 368, 369, 381, 383, 397, 422, 426], "cycler": [361, 433], "cython": [367, 406, 416], "d": [19, 20, 23, 83, 85, 86, 187, 190, 193, 228, 233, 244, 262, 267, 332, 367, 382, 384, 417, 426, 435, 449, 450, 457, 466, 469, 470, 503, 510, 515, 545, 546, 547, 548, 549, 550, 551, 552, 553, 558, 561], "dai": [83, 86, 117, 119, 193, 221, 225, 227, 244, 250, 367, 378, 384, 393, 394, 466, 551, 558], "daniel": [425, 428, 430], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 384, 392, 424, 429, 430, 432, 472, 478, 487, 510, 556], "dark_matter_spectra": 26, "darkbit": 486, "darkblu": 471, "darkgreen": 471, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 246, 365, 384, 424, 460, 487], "darkmatterannihilationspectralmodel": [20, 246, 426, 460, 469], "darkmatterdecayspectralmodel": [246, 430, 460, 469], "darkorang": [437, 438], "darksusi": 486, "darwin": 400, "dash": [458, 460, 471], "dashboard": 394, "dat": [26, 83, 86, 214, 236, 438, 482, 486], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 117, 118, 119, 120, 121, 122, 123, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 163, 164, 165, 169, 176, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 278, 283, 284, 286, 287, 290, 291, 292, 301, 302, 305, 323, 331, 334, 335, 343, 352, 353, 354, 355, 357, 358, 363, 365, 368, 371, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 388, 390, 392, 393, 396, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 435, 440, 441, 442, 443, 447, 449, 450, 453, 457, 460, 461, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 480, 485, 486, 493, 494, 496, 498, 500, 501, 502, 503, 504, 505, 507, 508, 510, 511, 517, 518, 530, 533, 535, 537, 538, 543, 555, 556, 557, 560, 561, 562], "data_extend": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "data_nbyt": [181, 182, 191, 194], "data_path": 475, "data_reduct": 380, "data_shap": [96, 97, 100, 104, 105, 181, 182, 191, 194, 462, 511], "data_shape_ax": [182, 191, 194], "data_shape_imag": 194, "data_spectr": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "data_stor": [78, 91, 163, 291, 292, 380, 400, 439, 447, 449, 456, 458, 465, 470, 473, 475, 476, 480, 483, 495, 505, 507, 508], "data_storag": 495, "data_summari": 421, "dataaxi": 406, "databas": [370, 498], "dataclass": 364, "datafram": [83, 86], "dataset": [6, 15, 16, 19, 20, 26, 62, 89, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 124, 125, 126, 127, 131, 132, 133, 134, 136, 141, 142, 148, 153, 156, 158, 159, 160, 163, 164, 165, 168, 169, 170, 185, 190, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 313, 357, 360, 361, 367, 368, 370, 372, 377, 379, 380, 381, 383, 384, 388, 392, 393, 394, 396, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 422, 424, 425, 426, 427, 428, 429, 430, 432, 435, 437, 440, 441, 447, 448, 449, 451, 453, 458, 460, 461, 466, 469, 470, 472, 473, 474, 476, 478, 480, 484, 495, 496, 498, 503, 505, 506, 507, 508, 510, 518, 522, 524, 552, 553, 555, 556, 557, 558, 559, 560], "dataset1": [471, 494], "dataset1_prior": 471, "dataset2": [471, 494], "dataset2_prior": 471, "dataset_1": 496, "dataset_2": 496, "dataset_3fgl": 435, "dataset_3fhl": 435, "dataset_cta": 462, "dataset_empti": [434, 437, 439, 440, 447, 456, 462, 465, 475, 507], "dataset_energy_depend": 448, "dataset_fak": 440, "dataset_fp": 457, "dataset_gammacat": 435, "dataset_hawc": 446, "dataset_hess": [446, 463], "dataset_imag": [447, 462], "dataset_kwarg": [88, 103], "dataset_lc": 457, "dataset_mak": [437, 439, 447, 456, 465, 507], "dataset_nam": [103, 107, 124, 214, 222, 236, 386, 392, 445, 449, 450, 453, 462, 468, 483, 518], "dataset_on_off": [158, 164, 165, 168, 433, 437, 439, 440, 443, 447, 456, 465, 507, 508], "dataset_on_off1": 433, "dataset_onoff": 376, "dataset_simul": 439, "dataset_stack": [437, 445], "datasetmodel": [203, 236, 251, 386, 412, 449, 450, 453], "datasetread": 101, "datasets1": 361, "datasets2": 361, "datasets3": 361, "datasets_fil": [16, 438, 442, 443, 445, 482], "datasets_hess": 446, "datasets_in_phase_bin_3": 388, "datasets_mak": 465, "datasets_nam": [19, 20, 26, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 411, 446, 468, 482, 518], "datasets_read": [468, 474], "datasets_sl": 462, "datasetsconfig": 16, "datasetsmak": [161, 417, 429, 465, 470, 498], "datasetsmetadata": 391, "datasetwrit": 102, "datastor": [16, 85, 91, 163, 291, 292, 370, 374, 379, 396, 400, 406, 417, 418, 420, 421, 423, 429, 430, 434, 437, 438, 439, 442, 443, 445, 447, 449, 453, 456, 458, 465, 470, 475, 476, 480, 482, 498, 505, 507, 508, 558], "datastorecheck": 424, "datastoreindex": 374, "datastoreinmemori": 374, "datastoremak": [406, 417], "datastoremetadata": 391, "datastoreobserv": [164, 370, 374, 410, 423], "datastorexml": 374, "datasum": [79, 82, 84, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196], "datat": [83, 86], "date": [83, 86, 99, 118, 345, 381, 389, 390, 391, 393, 401, 423, 438, 441, 469, 476, 482, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 562], "datefmt": [16, 438, 442, 443, 445, 482, 558], "dateref": 441, "datetim": [99, 118, 391], "datetime64": [83, 86], "datfix": 441, "daughter": 391, "david": [374, 379, 404, 424, 425], "dc": [445, 473], "dc1": [373, 384, 425, 449, 458, 464, 468, 473], "dc2": 373, "ddof": 454, "de": [19, 20, 26, 65, 95, 208, 209, 212, 216, 218, 219, 220, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 290, 390, 412, 415, 418, 460, 476, 557], "deactiv": 395, "dead": [79, 82, 84, 323, 374], "dead_tim": [79, 84, 323], "deadc": 374, "deadlin": [373, 377], "deadtim": [84, 176, 440, 449, 453, 473], "deadtime_fract": 84, "deal": [82, 364, 370, 379, 380, 440, 449, 456, 478, 498], "debanjan": 406, "debian": [381, 397, 419], "debug": [11, 364, 370, 375, 380, 426, 437, 466, 498, 558], "dec": [65, 79, 81, 83, 84, 86, 89, 132, 133, 166, 364, 365, 369, 373, 375, 377, 380, 381, 384, 402, 428, 433, 437, 439, 441, 443, 447, 450, 455, 456, 458, 461, 465, 467, 473, 474, 475, 476, 483, 484, 486, 498, 502, 507, 562], "dec_pnt": 476, "dec_tru": 377, "decad": [17, 18, 21, 22, 24, 25, 27, 107, 188, 269, 430, 449], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 221, 227, 244, 387, 449, 454, 457, 469, 486, 548], "decemb": 402, "decid": [364, 370, 373, 374, 375, 376, 378, 379, 383, 386, 387, 388, 393, 438, 470, 482, 562], "decim": [83, 86, 289], "decis": [364, 365], "declar": [15, 83, 86, 251, 343, 344, 367, 371, 372, 375, 380, 381, 387, 394, 411, 497], "decor": [343, 344, 364, 391, 558], "decorrel": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "decoupl": 67, "dedic": [367, 378, 379, 388, 390, 391, 394, 410, 411, 412, 430, 437, 438, 439, 445, 458, 463, 482, 483, 495], "deduc": [388, 430], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 83, 86, 94, 95, 96, 97, 99, 100, 104, 105, 118, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 264, 265, 445], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 259, 261, 263], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 276, 343, 344, 364, 365, 375, 376, 377, 378, 387, 388, 391, 392, 445, 463, 469, 471, 480, 507, 558, 560], "def_unit": [433, 440, 442, 445, 447, 453, 457, 473], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 63, 65, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 282, 283, 284, 289, 290, 291, 293, 304, 305, 306, 311, 313, 314, 320, 321, 322, 323, 325, 326, 331, 333, 335, 341, 346, 347, 351, 353, 354, 355, 357, 358, 360, 361, 364, 370, 376, 380, 381, 387, 390, 394, 400, 406, 408, 409, 410, 412, 415, 417, 423, 424, 426, 427, 428, 429, 430, 438, 439, 441, 443, 445, 449, 450, 456, 457, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 482, 483, 484, 494, 496, 498, 505, 508, 509, 510, 511, 515, 516, 517, 524, 530, 533, 534, 558, 562], "default_alpha": [21, 27], "default_beta": 27, "default_css": [83, 86], "default_css_nb": [83, 86], "default_epoch": 347, "default_gamma": 27, "default_hdu_t": 78, "default_interp_kwarg": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 422], "default_nam": [83, 86], "default_notebook_table_class": [83, 86], "default_obs_t": 78, "default_paramet": [19, 20, 26, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 392], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [137, 138, 143, 145, 150, 155, 464], "defer": [100, 105], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 79, 80, 83, 84, 86, 90, 96, 97, 98, 99, 100, 103, 104, 105, 109, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 140, 141, 142, 144, 148, 151, 152, 153, 154, 156, 159, 160, 164, 169, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 201, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 276, 278, 284, 285, 305, 315, 320, 321, 322, 323, 326, 354, 355, 364, 365, 367, 369, 370, 373, 375, 376, 377, 378, 379, 380, 381, 385, 386, 388, 389, 390, 391, 392, 395, 396, 397, 398, 405, 406, 409, 412, 415, 418, 422, 423, 428, 429, 430, 438, 440, 441, 442, 443, 445, 446, 448, 451, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 482, 484, 494, 495, 496, 498, 500, 503, 507, 508, 510, 515, 517, 519, 520, 521, 524, 525, 528, 529, 531, 532, 534, 536, 537, 539, 540, 541, 542, 543, 553, 555, 556, 557, 558, 559, 560, 561], "definit": [79, 80, 82, 84, 95, 97, 99, 100, 104, 105, 118, 160, 191, 276, 290, 304, 364, 373, 374, 378, 385, 386, 387, 388, 391, 407, 411, 412, 428, 430, 439, 442, 451, 456, 464, 465, 482, 494, 496, 503, 504, 509, 511, 515, 516, 560], "deform": 511, "deg": [16, 33, 34, 38, 47, 65, 79, 81, 83, 86, 89, 91, 97, 100, 104, 105, 107, 108, 109, 111, 112, 116, 121, 122, 127, 132, 133, 142, 144, 145, 150, 151, 152, 153, 154, 155, 156, 158, 166, 167, 169, 171, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 214, 215, 223, 226, 236, 240, 248, 249, 251, 291, 292, 325, 359, 364, 365, 375, 378, 380, 387, 388, 391, 400, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 482, 483, 484, 495, 496, 498, 500, 502, 505, 507, 508, 509, 510, 511, 515, 516, 517, 518, 519, 520, 521, 522], "deg2": 476, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 107, 108, 114, 117, 119, 134, 182, 183, 184, 186, 189, 194, 195, 196, 214, 236, 240, 251, 262, 430, 433, 434, 438, 443, 448, 456, 461, 465, 466, 467, 473, 482, 496, 510, 511, 560, 561], "deil": [369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 403, 404, 405, 406, 407, 408, 409, 410, 416, 419, 420, 421, 422, 423, 424, 425], "deiml": 423, "dej2000": [461, 484], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 375], "delai": [385, 389], "deleg": 380, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 364, 375, 394, 395, 396, 398, 430, 468], "delete_interv": 82, "delimit": 119, "deliv": 380, "delta": [19, 20, 23, 83, 86, 116, 117, 122, 125, 127, 145, 193, 242, 243, 274, 289, 429, 463, 471, 496, 503, 504, 516, 517, 519, 560], "delta_t": [114, 274, 448], "demonstr": [380, 405, 408, 409, 410, 411, 412, 417, 429, 430, 454, 455, 466, 468, 478, 510], "denot": [97, 104, 388, 494], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 119, 145, 196, 319, 322, 357, 377, 443, 445, 460, 461, 471, 486, 488, 492, 502, 503, 504, 557], "dep": 429, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 84, 95, 97, 98, 103, 104, 114, 117, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 170, 181, 182, 191, 194, 196, 214, 228, 236, 251, 293, 344, 364, 366, 367, 368, 370, 375, 376, 377, 378, 379, 382, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 404, 408, 409, 412, 419, 421, 424, 425, 427, 429, 430, 432, 433, 436, 440, 442, 443, 452, 456, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 478, 494, 495, 498, 502, 503, 506, 507, 510, 524, 555], "deploy": 390, "deposit": 390, "deprec": [16, 79, 80, 81, 84, 99, 118, 120, 121, 124, 204, 206, 406, 415, 428, 429, 430, 522], "deprecated_argument_funct": 364, "deprecated_argument_function_kwarg": 364, "deprecated_attribut": 364, "deprecated_funct": 364, "deprecated_renamed_argu": 364, "deprecatedparseprotocol": [16, 80, 99, 118], "deprecation_polici": 389, "depriv": 505, "depth": [16, 80, 99, 118, 332, 396, 401, 454, 524], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 95, 116, 120, 124, 127, 262, 364, 376, 377, 382, 385, 388, 441, 473, 475, 496, 510, 559, 560], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 90, 119, 120, 122, 127, 152, 192, 201, 264, 285, 365, 367, 369, 370, 373, 374, 376, 377, 378, 380, 381, 383, 384, 387, 388, 389, 390, 401, 407, 415, 423, 424, 438, 441, 449, 450, 454, 463, 469, 471, 473, 475, 476, 482, 494, 498, 502, 511, 512, 557, 558, 559, 560], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 83, 86, 121, 201, 365, 369, 370, 378, 384, 389, 390, 401, 426, 430, 445, 453, 461, 463, 466, 473, 475, 482, 483, 498], "description_width": [445, 453, 466, 482, 483], "descriptionstyl": [445, 453, 466, 482, 483], "descriptor": [83, 84, 86, 97, 100, 104, 105, 261, 302, 365, 411], "desi": 476, "design": [369, 370, 373, 374, 377, 378, 380, 384, 386, 388, 389, 403, 423, 430], "desir": [16, 80, 83, 86, 99, 118, 151, 181, 182, 191, 194, 339, 340, 341, 466, 484, 511], "desktop": 401, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 95, 97, 100, 105, 119, 120, 141, 142, 148, 153, 156, 159, 182, 194, 196, 201, 204, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 261, 262, 263, 364, 365, 367, 369, 372, 373, 374, 377, 378, 379, 383, 384, 385, 389, 390, 393, 395, 399, 401, 402, 409, 413, 414, 432, 433, 437, 439, 440, 441, 442, 447, 448, 449, 452, 453, 457, 462, 463, 465, 466, 467, 468, 469, 471, 473, 475, 476, 478, 484, 494, 495, 497, 503, 507, 508, 510, 555, 556, 557, 558, 562], "detect": [59, 132, 133, 273, 354, 355, 365, 380, 383, 384, 386, 403, 409, 410, 411, 421, 423, 424, 430, 432, 444, 461, 473, 475, 478, 494, 510, 557, 560], "detect_t": 384, "detector": [79, 84, 98, 103, 145, 467, 475, 503, 557], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 107, 126, 144, 150, 152, 154, 166, 167, 169, 171, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 262, 264, 293, 315, 375, 379, 382, 390, 417, 429, 430, 433, 439, 442, 443, 448, 455, 465, 467, 488, 556], "determinist": 364, "deti": [79, 98, 103, 377, 473], "detx": [79, 98, 103, 377, 473], "dev": [11, 16, 78, 80, 99, 118, 364, 366, 367, 380, 390, 393, 394, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 522, 524, 552, 553], "dev334": [99, 118, 401, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "develop": [365, 369, 370, 372, 373, 374, 375, 377, 378, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 397, 401, 403, 416, 423, 424, 425, 473], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 120, 184, 196, 201, 280, 463, 471], "devoid": [437, 501], "devop": 390, "devot": 478, "dex": 293, "df": [83, 86, 114, 134, 448, 463, 560], "diagnosi": 373, "diagnost": 380, "diagon": [140, 141, 142, 382, 392, 474], "diagram": 562, "dialog": [396, 398], "diamet": [182, 183, 184, 434], "diamond": 470, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 114, 117, 118, 119, 120, 121, 122, 124, 125, 127, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 273, 274, 275, 276, 277, 281, 291, 305, 313, 314, 331, 332, 333, 335, 345, 346, 347, 348, 351, 352, 353, 357, 358, 359, 360, 361, 364, 379, 381, 385, 388, 391, 408, 412, 415, 423, 438, 445, 455, 456, 461, 463, 466, 470, 482, 483, 510, 515, 524], "dict_kei": 524, "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 114, 117, 118, 119, 120, 121, 124, 125, 127, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 168, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 194, 195, 196, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 275, 276, 277, 281, 303, 331, 332, 333, 335, 345, 348, 358, 381, 383, 388, 391, 392, 437, 439, 445, 463, 464, 470, 471, 553], "dictionnari": 357, "did": [371, 378, 383, 384, 385, 387, 390, 406, 433, 440, 442, 445, 447, 453, 457, 463, 471, 473], "didn": [79, 84, 371, 374, 378, 381, 486], "diff": [96, 97, 100, 104, 105, 364, 367, 372, 376, 445, 453, 483], "diff_flux": 460, "diff_flux_point": [96, 462], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 65, 76, 82, 83, 86, 89, 95, 114, 117, 119, 120, 121, 124, 125, 127, 132, 137, 138, 139, 140, 143, 145, 147, 150, 155, 165, 183, 184, 186, 189, 190, 191, 192, 194, 195, 196, 273, 274, 275, 277, 323, 327, 339, 340, 355, 364, 365, 367, 369, 370, 372, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 392, 394, 396, 398, 407, 410, 412, 422, 425, 426, 427, 429, 433, 437, 438, 439, 442, 445, 448, 449, 450, 451, 454, 455, 457, 461, 462, 463, 465, 467, 468, 469, 470, 471, 474, 475, 478, 482, 484, 486, 494, 496, 498, 503, 510, 511, 516, 517, 556, 558, 559, 560], "different": 372, "differenti": [23, 75, 117, 119, 126, 183, 184, 186, 188, 192, 195, 196, 237, 251, 266, 267, 320, 370, 375, 382, 388, 422, 466, 469, 474, 484, 496, 557], "differential_flux": 119, "difficult": [375, 378, 394], "diffus": [66, 183, 184, 186, 192, 195, 196, 268, 364, 380, 383, 424, 425, 445, 449, 461, 466, 468, 469, 473, 555], "diffuse_cub": 469, "diffuse_galactic_fermi": 468, "diffuse_iem": [468, 474], "diffuse_iso": [468, 474], "diffuse_model": 268, "difrsp0": [474, 484], "difrsp1": [474, 484], "difrsp2": [474, 484], "difrsp3": [474, 484], "difrsp4": [474, 484], "digit": 364, "dilat": [196, 415], "dim": [150, 322, 420, 421, 447, 557], "dimens": [46, 53, 97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 165, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 259, 260, 263, 293, 305, 357, 380, 412, 423, 425, 429, 463, 464, 466, 469, 478, 494, 510, 511, 516], "dimension": [31, 32, 37, 66, 83, 86, 181, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 223, 226, 269, 306, 319, 370, 378, 392, 396, 421, 441, 463, 464, 466, 469, 484, 502, 504, 510, 511, 556, 557], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 145, 256, 257, 292, 451, 469], "dimitri": [415, 417], "dipol": [51, 54], "dirac": 19, "direct": [86, 99, 155, 173, 174, 177, 179, 188, 215, 223, 226, 297, 300, 365, 370, 376, 378, 383, 385, 388, 391, 415, 432, 436, 440, 465, 478, 494, 495, 503, 504, 506, 507, 510, 515, 555, 556, 557], "directional_offset_bi": [433, 440], "directli": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 79, 83, 84, 86, 131, 155, 170, 183, 184, 186, 192, 195, 196, 259, 261, 263, 364, 366, 367, 369, 371, 372, 375, 376, 377, 378, 382, 384, 391, 396, 398, 399, 403, 405, 406, 407, 409, 423, 430, 435, 437, 438, 440, 445, 446, 447, 450, 451, 453, 454, 456, 457, 461, 462, 463, 464, 466, 467, 468, 469, 470, 473, 474, 482, 483, 484, 486, 494, 498, 503, 507, 510, 534, 560], "directori": [11, 78, 83, 364, 380, 438, 448, 476, 482, 484, 495, 498, 558], "dirk": [406, 420, 422], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 364, 415], "disable_unicode_literals_warn": 364, "disadvantag": 558, "disagr": 369, "disambigu": 369, "disc": [442, 443, 445, 450], "discard": [391, 461], "discard_on_copi": [83, 86], "discarded_ind": 461, "discarded_spati": 461, "discarded_t": 461, "disccus": 373, "discourag": 364, "discov": 558, "discret": [86, 289, 377, 463, 510], "discuss": [13, 59, 264, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 401, 423, 471, 476, 486, 487, 562], "disjoint": 378, "disk": [78, 105, 142, 145, 184, 194, 196, 215, 226, 228, 342, 363, 364, 374, 375, 376, 380, 387, 388, 432, 433, 437, 445, 446, 466, 467, 468, 469, 509, 512, 517, 521, 523], "disk_inc": 378, "diskspatialmodel": [70, 245, 387, 408, 429, 468, 469, 515], "dismiss": 95, "disp": [502, 503], "dispatch": 375, "dispers": [78, 84, 97, 98, 100, 102, 103, 104, 105, 106, 108, 110, 140, 141, 142, 145, 163, 169, 170, 173, 174, 177, 364, 370, 375, 376, 377, 409, 411, 421, 422, 423, 425, 433, 434, 437, 438, 445, 449, 465, 475, 476, 482, 483, 494, 503, 506, 557], "displac": 297, "displai": [11, 15, 78, 83, 86, 112, 124, 127, 201, 281, 314, 357, 361, 364, 365, 394, 415, 418, 429, 430, 433, 434, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 451, 453, 455, 457, 458, 461, 462, 463, 465, 466, 468, 469, 473, 474, 475, 476, 483, 498, 558], "display_length": [83, 86], "disrupt": [404, 405], "dissolv": 408, "dist": [316, 394], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 121, 132, 133, 191, 237, 263, 289, 296, 322, 378, 421, 428, 439, 441, 451, 460, 461, 463, 492, 507, 534], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 460], "distance_max": [46, 47, 322, 461], "distance_min": [47, 322, 461], "distance_refer": 461, "distinct": [379, 380, 385, 475, 561], "distinguish": [275, 277, 388, 391, 433, 466], "distort": [378, 407], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 79, 103, 134, 145, 180, 220, 231, 237, 275, 277, 315, 316, 320, 357, 360, 362, 363, 364, 368, 369, 372, 377, 382, 383, 386, 389, 390, 394, 397, 408, 417, 423, 429, 430, 433, 437, 439, 440, 443, 445, 449, 451, 453, 455, 463, 468, 471, 473, 484, 486, 498, 502, 503, 505, 511, 519, 534, 559, 560], "divers": 388, "divid": [182, 188, 193, 385, 388, 449, 470, 475, 476], "djangoproject": 384, "djuvsland": 430, "dl3": [6, 16, 78, 79, 82, 84, 86, 91, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 169, 187, 188, 291, 292, 365, 370, 372, 373, 375, 384, 391, 396, 400, 406, 409, 411, 417, 426, 430, 434, 437, 438, 439, 442, 443, 445, 455, 456, 465, 467, 470, 480, 482, 483, 494, 498, 500, 501, 502, 504, 505, 507, 508, 556, 557], "dl4": [94, 96, 97, 100, 104, 105, 112, 116, 120, 124, 127, 148, 169, 370, 391, 396, 411, 457, 462, 463, 498, 556, 557], "dl5": [112, 116, 120, 124, 127, 391, 430, 457, 463, 556, 557], "dl6": [112, 116, 120, 124, 127, 556, 557], "dm": [19, 20, 26, 393, 411, 426, 460, 469], "dm_exampl": 486, "dmfitfunct": 486, "dmpipe": 486, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 460], "dmsky": 486, "dn": [220, 231, 460], "dnde": [19, 20, 26, 65, 117, 118, 119, 126, 128, 129, 130, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 266, 388, 415, 435, 437, 438, 447, 451, 461, 462, 469, 474, 482, 484, 496], "dnde_cu": 267, "dnde_err": [117, 119, 496], "dnde_errn": [65, 117, 119, 461], "dnde_error": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "dnde_errp": [65, 117, 119, 461], "dnde_ref": [117, 119, 388], "dnde_ul": [65, 117, 119, 461, 484], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 90, 95, 99, 118, 140, 151, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 317, 357, 365, 367, 369, 370, 371, 374, 378, 379, 380, 381, 382, 383, 384, 387, 388, 391, 393, 394, 396, 398, 409, 435, 437, 438, 440, 441, 442, 443, 445, 447, 448, 449, 453, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 473, 474, 482, 483, 484, 494, 498, 510, 555, 558, 561, 562], "do_someth": 364, "doc": [11, 13, 16, 79, 80, 83, 86, 99, 118, 140, 182, 188, 191, 194, 201, 214, 236, 293, 329, 364, 365, 367, 369, 372, 378, 380, 381, 383, 384, 393, 400, 401, 403, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 486, 511, 522, 524, 530, 533, 546, 552, 553, 557, 558, 562], "docker": [381, 394], "dockerfil": [372, 393, 394], "docstr": [364, 384, 390, 415, 416, 417, 419, 422, 428, 429, 430, 469], "doctest": [151, 352, 365], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 275, 277, 301, 305, 315, 338, 351, 364, 366, 368, 369, 371, 372, 374, 378, 380, 381, 383, 385, 387, 389, 390, 394, 395, 400, 401, 402, 409, 411, 412, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 466, 468, 473, 475, 476, 498, 509, 510, 511, 558], "doe": [16, 80, 83, 86, 99, 118, 120, 124, 143, 153, 156, 190, 228, 262, 273, 364, 365, 371, 372, 374, 376, 378, 379, 381, 383, 384, 387, 388, 390, 391, 406, 415, 426, 433, 437, 440, 442, 445, 447, 448, 461, 463, 464, 465, 466, 467, 475, 486, 498, 507, 558], "doesn": [67, 364, 365, 369, 371, 372, 378, 381, 382, 384, 473, 474, 558], "dof": 560, "doi": [134, 390], "domain": [183, 184, 186, 192, 195, 196, 364, 378, 454], "domenico": 421, "dominguez": [216, 217, 387, 524], "dominquez": 216, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 140, 363, 364, 367, 369, 371, 372, 381, 391, 394, 434, 437, 442, 447, 455, 467, 469, 486, 556, 558, 561, 562], "donath": [373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 117, 120, 357, 364, 365, 367, 369, 370, 371, 375, 377, 378, 379, 380, 382, 383, 384, 387, 388, 390, 396, 400, 424, 429, 434, 440, 445, 446, 450, 451, 453, 457, 458, 462, 465, 466, 469, 470, 494, 498, 506, 507, 511, 543, 560, 562], "dos2unix": 364, "dot": [50, 51, 54, 104, 105, 183, 184, 186, 192, 195, 196, 429], "doubl": [27, 116, 128, 281, 390, 422, 430], "doubling_dict": 281, "down": [50, 51, 54, 127, 369, 371, 374, 378, 383, 407, 462, 474, 561], "downgrad": [182, 363], "download": [65, 89, 96, 119, 367, 372, 380, 381, 384, 391, 393, 395, 396, 398, 400, 404, 405, 407, 408, 415, 424, 425, 426, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 558], "downsampl": [97, 100, 104, 105, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 406, 412, 421, 462], "downsampled_energi": 462, "downsampling_factor": [127, 447], "downward": [275, 277], "dozen": 364, "dpp": 390, "dr": [17, 18, 21, 22, 24, 25, 27, 517], "dr1": [16, 63, 78, 79, 82, 84, 86, 91, 145, 163, 257, 291, 292, 365, 372, 384, 400, 432, 434, 437, 438, 443, 445, 456, 465, 470, 480, 482, 483, 495, 498, 500, 501, 502, 504, 505, 507, 508, 512, 544], "dr2": [63, 257, 415, 432, 512, 544], "dr3": [63, 256, 432, 469, 512, 544], "dr4": [63, 430], "draft": [364, 368, 369, 392, 424], "drag": 367, "draw": [33, 184, 315, 377, 471], "drawback": [379, 383], "drawn": [315, 377], "drift": [81, 89, 90, 426], "drive": 380, "driven": [11, 15, 370, 380, 382, 384, 423, 478, 497], "drop": [52, 53, 97, 100, 104, 105, 117, 119, 124, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 215, 222, 261, 349, 368, 369, 380, 381, 386, 405, 408, 409, 412, 415, 422, 425, 449, 466, 494], "ds9": [79, 182, 191, 194, 198, 214, 236, 364, 365, 378, 407, 467, 469, 511], "ds9parser": 378, "dss": 374, "dt": [83, 86], "dtime_t": 454, "dtype": [33, 38, 83, 86, 106, 110, 138, 140, 143, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 214, 236, 293, 364, 392, 439, 442, 451, 461, 462, 464, 465, 466, 473, 474, 484, 496], "duck": [16, 80, 99, 118], "due": [59, 83, 86, 364, 392, 418, 466, 471, 473, 534, 558], "dummi": [104, 105, 378, 442, 498], "dump": [16, 80, 99, 118, 380], "dumps_kwarg": [16, 80, 99, 118], "duplic": [83, 86, 95, 141, 364, 365, 367, 370, 384, 385, 388, 412, 415], "durat": [79, 82, 84, 89, 440, 449, 453, 456, 473, 495, 498], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 79, 80, 81, 84, 90, 97, 99, 100, 104, 105, 118, 160, 273, 365, 372, 376, 380, 383, 384, 386, 389, 390, 391, 392, 393, 394, 409, 412, 429, 430, 438, 439, 449, 455, 456, 462, 465, 467, 471, 483, 494, 495, 557, 561], "dust": 216, "duti": 390, "dwarf": 486, "dx": [33, 297], "dy": [33, 297], "dynam": [361, 495], "dz": 297, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 65, 66, 78, 79, 80, 81, 82, 83, 86, 90, 99, 108, 118, 119, 132, 140, 141, 142, 143, 145, 176, 182, 183, 184, 186, 188, 190, 192, 194, 195, 196, 201, 204, 206, 208, 209, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 262, 263, 264, 275, 277, 281, 293, 295, 299, 325, 332, 342, 353, 354, 359, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 400, 401, 403, 404, 405, 409, 415, 416, 417, 421, 423, 424, 425, 429, 432, 434, 435, 437, 438, 439, 440, 443, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 458, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 482, 483, 484, 486, 493, 494, 495, 496, 498, 502, 503, 508, 509, 510, 515, 516, 517, 524, 525, 527, 528, 529, 531, 532, 536, 537, 539, 540, 541, 542, 552, 555, 557, 558, 559, 560, 561, 562, 563], "e2dnd": [19, 20, 26, 117, 118, 119, 126, 128, 129, 130, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 388, 415, 422, 433, 435, 437, 438, 439, 446, 461, 484, 496, 498, 534], "e2dnde_err": [117, 119], "e2dnde_errn": [117, 119, 461], "e2dnde_errp": [117, 119, 461], "e2dnde_ref": [117, 119], "e2dnde_ul": [117, 119, 461], "e501": [19, 20, 120, 140, 176, 187, 188, 194, 216, 268, 361], "e_": [19, 20, 26, 50, 52, 53, 140, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 494, 500, 502, 503, 504, 525, 529, 537, 539, 540], "e_0": [218, 219, 220, 230, 231, 242, 243, 252, 255, 256, 257, 528, 529, 532, 534, 536, 539, 540, 541, 542], "e_b": 387, "e_cut": [65, 461], "e_cutoff": 534, "e_d": [242, 243], "e_edg": 412, "e_max": [65, 119, 388, 433, 437, 438, 439, 450, 455, 461, 462, 463, 466, 471, 484, 496], "e_min": [65, 119, 388, 433, 437, 438, 439, 450, 455, 461, 462, 463, 466, 471, 474, 484, 496], "e_peak": [220, 231], "e_reco": [106, 110, 140, 145, 458, 557], "e_ref": [65, 119, 388, 433, 437, 438, 455, 461, 482, 484, 496], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 435, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 447, "e_sn": [43, 44, 52], "e_tru": [106, 110, 145, 458, 474, 557], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 82, 83, 86, 87, 95, 97, 100, 103, 104, 105, 109, 111, 112, 114, 116, 117, 119, 120, 124, 126, 127, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 164, 165, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 223, 224, 226, 230, 231, 233, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 252, 253, 254, 255, 256, 257, 259, 260, 263, 264, 291, 329, 353, 362, 364, 367, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 384, 385, 388, 390, 394, 395, 402, 409, 412, 423, 426, 429, 434, 440, 441, 443, 445, 446, 447, 449, 450, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 476, 483, 487, 493, 494, 495, 498, 502, 503, 504, 510, 511, 518, 534, 535, 557, 558, 561, 562], "eager": 380, "earli": [378, 383, 384, 473], "earlier": [371, 390], "earth": [41, 84, 266, 474], "earth_azimuth_angl": [474, 484], "earthloc": [79, 81, 84, 89, 92, 303, 391], "easi": [364, 365, 370, 375, 378, 379, 380, 383, 384, 388, 391, 409, 415, 423, 466, 467, 474, 495, 555, 556, 558, 562], "easier": [364, 370, 375, 383, 388, 423, 426, 473], "easiest": 397, "easili": [83, 86, 119, 370, 375, 376, 380, 391, 396, 397, 455, 456, 463, 464, 466, 474, 484, 558], "ebel": 441, "ebl": [216, 217, 264, 382, 387, 409, 412, 422, 429, 432, 469, 512, 544], "ebl_data_builtin": 524, "ebl_dominguez11": [217, 524], "ebl_franceschini": [217, 264], "ebl_franceschini_2017": 217, "ebl_saldana": 217, "eblabsorbtionnormspectralmodel": 387, "eblabsorptionnormspectralmodel": [246, 387, 412, 469, 524], "ebound": [140, 188, 511], "ebreak": [208, 252, 525, 539], "ec": [458, 469, 511], "eccentr": [215, 223, 226, 515, 516, 517], "echo": 558, "eco": 390, "ecosystem": 391, "ecpl": [65, 76, 218, 219, 220, 273, 387, 421, 435, 461, 469], "ecpl_norm": 530, "ecsv": [59, 62, 376], "ecut": [218, 255, 529, 540], "edelson": [282, 454], "edelson2002": 282, "edg": [97, 100, 104, 105, 112, 114, 116, 120, 123, 124, 127, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 163, 164, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 215, 357, 378, 388, 406, 412, 415, 433, 446, 447, 448, 449, 450, 454, 464, 465, 466, 467, 474, 475, 482, 515], "edge_max": 515, "edge_min": 515, "edge_width": [215, 468, 515], "edgecolor": [361, 437, 439, 441, 447, 448, 451, 458, 460, 507, 515, 516, 517], "edges_max": [185, 187, 188, 193, 466], "edges_min": [185, 187, 188, 193, 466], "edisp": [16, 78, 83, 84, 91, 97, 100, 101, 104, 105, 106, 110, 140, 141, 142, 145, 149, 163, 169, 170, 173, 174, 251, 291, 292, 365, 374, 375, 376, 377, 380, 410, 412, 415, 421, 422, 423, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 447, 449, 450, 453, 456, 457, 462, 465, 470, 473, 474, 475, 476, 482, 494, 502, 503, 557], "edisp2d": [142, 145, 365], "edisp3d": 464, "edisp_": 494, "edisp_2d": [78, 83, 145, 473, 476], "edisp_3d": 464, "edisp_ev": 464, "edisp_kernel": [140, 462, 502], "edisp_kernel_map": [141, 475], "edisp_map": [98, 103, 141, 142, 464, 502], "edisp_new": 464, "edispersionmap": 494, "edispkernel": [100, 106, 110, 141, 145, 173, 410, 502], "edispkernelmap": [97, 100, 101, 104, 105, 108, 142, 148, 149, 153, 156, 163, 170, 173, 411, 412, 441, 465, 474, 498, 502], "edispmap": [97, 98, 100, 103, 104, 105, 141, 148, 149, 153, 156, 163, 170, 173, 174, 376, 377, 385, 405, 408, 409, 410, 412, 415, 464, 502], "edit": [365, 367, 369, 371, 372, 373, 380, 384, 393, 394, 397, 482, 558], "editor": [365, 390, 438, 482, 558], "editori": 390, "edm": 463, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 182, 191, 194, 201, 214, 233, 236, 266, 267, 276, 283, 384, 463, 511], "eemin": 534, "eff": [143, 500, 503, 516, 517], "eff_area": 464, "effarea": 464, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 78, 83, 84, 86, 100, 102, 142, 143, 169, 170, 175, 177, 178, 191, 214, 236, 354, 355, 364, 369, 374, 375, 377, 378, 388, 419, 421, 437, 449, 451, 454, 455, 471, 475, 476, 478, 482, 503, 511, 516, 517, 557], "effective_area": [149, 377, 473], "effective_livetim": 465, "effective_times_src": 465, "effectivearea3d": 464, "effectiveareat": [376, 403, 415, 419], "effectiveareatable2d": [84, 142, 149, 155, 177, 370, 419, 464, 473, 500], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 100, 105, 369, 375, 376, 377, 378, 379, 386, 435, 470, 503, 508, 560], "effort": [371, 373, 380, 381, 383, 384, 387, 406, 494], "eflux": [19, 20, 26, 117, 118, 119, 128, 129, 130, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 388, 415, 451, 469, 496], "eflux_err": [117, 119, 388], "eflux_errn": [117, 119], "eflux_errp": [117, 119], "eflux_ref": [117, 119], "eflux_ul": [117, 119], "eg": [364, 445, 453, 457, 462, 464, 468, 469], "egal": 473, "egg": 397, "einasto": [21, 486], "either": [65, 78, 83, 84, 86, 90, 105, 117, 119, 145, 160, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 228, 276, 293, 323, 353, 365, 367, 369, 371, 378, 380, 383, 386, 390, 396, 415, 429, 438, 445, 451, 457, 462, 463, 469, 471, 482, 494, 496, 498, 509, 511, 555, 558], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 460], "elabor": [390, 441], "elaps": [79, 373, 557], "electron": [50, 266, 473, 534], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 95, 97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 357, 382, 429, 461, 466, 510], "elementtre": 473, "elev": 379, "elif": [364, 378, 391], "elli": [403, 416], "ellips": [215, 378, 511, 515], "ellipseannulusskyregion": [507, 511], "ellipseskyregion": [210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263, 434, 469, 507], "ellipsoid": 463, "ellipt": [511, 517], "elong": [405, 408, 409, 515, 516], "elpas": 429, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 117, 119, 127, 190, 364, 367, 378, 381, 388, 391, 392, 394, 396, 398, 470, 558, 560], "elsewher": [109, 111], "email": [365, 367, 390, 394], "emax": [124, 241, 267, 442, 448, 537], "emax_fit": 458, "embryon": 380, "emce": [373, 381, 405, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "emerg": 374, "emeri": 424, "emin": [124, 241, 267, 442, 448, 537], "emin_fit": 458, "emiss": [52, 66, 128, 370, 375, 379, 437, 443, 445, 446, 449, 468, 473, 474, 494, 508, 534, 555], "emit": [78, 204, 205, 206, 207, 350, 364, 405, 423, 503], "emitt": 437, "emmanoulopoulo": 289, "emmanoulopoulos2010": 289, "emphasi": 463, "empir": 40, "emploi": 439, "empti": [87, 95, 97, 100, 104, 105, 132, 163, 183, 184, 186, 190, 192, 195, 196, 201, 236, 350, 372, 374, 406, 418, 445, 449, 450, 453, 457, 465, 466, 475, 487, 494, 507, 508, 511], "empty_dataset": 433, "empty_i": 457, "empty_map": [97, 100, 104, 105, 448, 465, 507], "emsembl": 88, "en": [34, 79, 83, 84, 86, 120, 176, 191, 201, 264, 293, 367, 384, 433, 440, 442, 445, 447, 453, 457, 463, 464, 467, 473, 495, 509, 511], "enabl": [373, 376, 397, 406, 415, 424, 433, 440, 442, 445, 447, 453, 457, 473], "encapsul": [194, 388, 509], "enclos": [196, 365, 434, 439, 463, 467], "enclosur": [78, 147, 439, 464], "encod": [16, 80, 83, 86, 99, 118], "encompass": [182, 509, 511], "encount": [157, 396, 397, 398, 399, 439, 449, 457, 476, 546, 558], "encourag": [364, 369, 390, 393, 423], "end": [52, 53, 82, 83, 86, 87, 89, 95, 97, 104, 117, 119, 127, 188, 228, 236, 369, 371, 373, 375, 376, 378, 379, 380, 381, 383, 384, 387, 416, 426, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 480, 482, 483, 484, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 560], "end_po": [121, 326, 451], "endswith": 364, "energet": 449, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 61, 62, 65, 69, 71, 72, 76, 78, 79, 84, 91, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 116, 117, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 163, 165, 169, 170, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 194, 195, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 271, 359, 360, 364, 370, 373, 375, 376, 377, 378, 379, 380, 382, 383, 386, 388, 392, 396, 400, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 417, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 434, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 449, 451, 452, 453, 455, 456, 457, 458, 461, 462, 465, 466, 475, 476, 478, 482, 483, 484, 493, 494, 495, 498, 503, 506, 507, 509, 510, 511, 518, 524, 530, 533, 535, 538, 543, 553, 555, 556, 557, 559], "energy_axes_are_align": 95, "energy_axi": [19, 20, 26, 97, 100, 104, 105, 106, 107, 110, 117, 119, 140, 141, 142, 153, 155, 156, 163, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 388, 433, 434, 437, 439, 440, 441, 443, 447, 449, 450, 456, 457, 462, 464, 465, 466, 469, 474, 475, 483, 502, 505, 507, 508, 510, 511], "energy_axis_new": 462, "energy_axis_tru": [97, 100, 104, 105, 106, 107, 108, 110, 140, 141, 142, 143, 145, 150, 151, 153, 163, 365, 409, 433, 434, 437, 439, 440, 441, 443, 447, 449, 450, 453, 456, 457, 458, 462, 464, 465, 474, 475, 483, 502, 505, 507, 508], "energy_bin": 380, "energy_bin_per_decade_max": 107, "energy_bound": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 378, 415, 435, 437, 439, 445, 446, 458, 460, 461, 463, 469, 474, 483, 484, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543], "energy_cent": 261, "energy_column": 388, "energy_depend": 448, "energy_dependent_estim": [432, 448, 452], "energy_edg": [16, 112, 114, 116, 120, 121, 124, 127, 132, 133, 136, 188, 313, 388, 437, 438, 441, 442, 443, 445, 446, 447, 448, 451, 455, 456, 457, 458, 475, 482, 483, 496], "energy_estim": 475, "energy_flux": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 469, 484], "energy_flux_err": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "energy_flux_error": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "energy_index": 150, "energy_integr": 51, "energy_logspac": 383, "energy_mask": [181, 182, 191, 194, 411, 439, 445, 458, 462, 463, 467, 471], "energy_max": [19, 20, 26, 79, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 140, 181, 182, 188, 191, 194, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 261, 264, 269, 378, 380, 445, 450, 458, 460, 462, 465, 469, 484], "energy_min": [19, 20, 26, 52, 53, 79, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 140, 181, 182, 188, 191, 194, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 261, 264, 269, 378, 380, 445, 450, 458, 460, 462, 465, 469, 484], "energy_nam": [153, 156], "energy_nod": [387, 469], "energy_pow": [19, 20, 26, 119, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 271, 445, 458, 463, 483, 484], "energy_rang": [64, 65, 69, 71, 72, 76, 79, 95, 97, 100, 104, 105, 415, 462, 467, 541, 542], "energy_range_fit": [97, 100, 104, 105, 462], "energy_range_saf": [97, 100, 104, 105, 462], "energy_range_tot": [97, 100, 104, 105, 467], "energy_reco": [364, 453], "energy_ref": [117, 119], "energy_resolut": 423, "energy_saf": 380, "energy_tru": [16, 91, 97, 100, 104, 105, 106, 110, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 163, 170, 173, 181, 182, 188, 191, 194, 291, 292, 364, 365, 377, 429, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 447, 449, 450, 453, 455, 456, 457, 458, 462, 464, 465, 466, 467, 469, 470, 473, 474, 475, 482, 483, 502, 503, 505, 507, 508, 510, 511], "energy_true_axi": 140, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 407, "energydependentmorphologi": 448, "energydependentmorphologyestim": [430, 448], "energydependentmultigausspsf": [149, 403, 464, 473, 504], "energydependenttablepsf": [370, 385, 404, 415], "energydispers": [140, 141, 142, 145, 376, 410, 420, 423, 424], "energydispersion2d": [84, 140, 142, 149, 155, 173, 174, 365, 370, 415, 417, 422, 464, 473, 502], "energydispersion3d": 464, "energyoffsetarrai": 420, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 367, 391], "engin": [83, 86], "english": 498, "enhanc": [369, 373, 400], "enlarg": 508, "enough": [377, 379, 380, 437, 440, 443, 453, 455, 467], "enrico": 380, "enrico_config": 380, "enrico_xml": 380, "enriqu": [372, 380, 384, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 423, 424, 425], "ensembl": 88, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 169, 189, 273, 364, 370, 375, 376, 387, 391, 397, 417, 433, 437, 456, 467, 510, 519], "enter": [205, 207, 214, 236, 400], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 97, 99, 100, 104, 105, 118, 170, 434, 445, 448, 454], "entri": [43, 44, 83, 86, 89, 114, 117, 120, 121, 124, 125, 201, 202, 214, 236, 273, 332, 364, 376, 384, 388, 391, 393, 396, 398, 415, 426, 434, 438, 461, 463, 466, 469, 470, 498, 499, 511], "entry_point": 416, "enum": [90, 146, 308, 309], "enumer": [449, 461, 468, 471], "env": [367, 381, 393, 395, 396, 398, 399, 424, 558], "envelop": [377, 463, 483], "environ": [11, 78, 330, 363, 364, 367, 371, 372, 376, 381, 384, 393, 394, 396, 397, 398, 399, 400, 404, 405, 407, 423, 424, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 558], "envis": 373, "envvar": 11, "eosc": 390, "episod": 128, "epoch": 347, "epsilon": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "epsilon_": [97, 104, 494], "epsilon_k": [97, 104, 494], "epsmch": 463, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 387, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 112, 116, 120, 124, 127, 140, 188, 364, 374, 377, 425, 437, 455, 456, 467, 471, 494, 510, 561], "equat": [27, 256, 257, 282, 520, 521, 525, 528, 529, 531, 532, 536, 537, 539, 540, 541, 542, 560, 561], "equatori": [90, 146, 182, 183, 184, 186, 189, 191, 194, 195, 196, 464], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 117, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 357, 365, 376, 377, 378, 387, 388, 429, 430, 461, 465, 466, 467, 469, 473, 482, 494, 496, 498, 509, 510, 511, 558, 559, 560], "er": [26, 460], "era": 216, "ereco": [140, 464], "erf": [224, 515], "erg": [52, 53, 65, 433, 437, 461, 484, 491, 498], "erlangen": 383, "erod": 196, "eros": [194, 196], "err": 463, "errat": 364, "errn": [116, 120, 124, 125, 127, 201, 426, 560], "errn_2sigma": 560, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 66, 75, 80, 82, 97, 99, 100, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 159, 185, 188, 193, 204, 206, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 275, 277, 281, 282, 283, 289, 342, 364, 365, 378, 379, 380, 382, 387, 388, 391, 392, 405, 409, 411, 413, 415, 416, 418, 422, 423, 426, 428, 429, 430, 434, 435, 437, 438, 440, 442, 445, 446, 447, 448, 450, 453, 454, 455, 457, 458, 461, 469, 470, 471, 473, 482, 483, 484, 486, 494, 496, 498, 516, 534, 543, 555, 558], "error_callback": 159, "errorbar": [79, 96, 97, 100, 104, 105, 188, 192, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 433, 471], "errp": [116, 120, 124, 125, 127, 201, 426, 560], "errp_2sigma": 560, "escap": [364, 390], "especi": [83, 86, 128, 367, 371, 374, 378, 384, 385, 394, 415, 421, 434, 447, 456, 461, 466, 471, 473, 474], "essenti": [374, 376, 379, 409, 410, 411, 451, 466], "establish": [364, 377], "estim": [6, 19, 20, 26, 50, 70, 96, 100, 105, 107, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 158, 164, 165, 166, 172, 181, 182, 191, 194, 196, 201, 204, 208, 209, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 273, 280, 283, 287, 313, 357, 368, 370, 373, 377, 378, 379, 380, 383, 386, 392, 396, 405, 406, 409, 410, 411, 412, 415, 416, 417, 421, 422, 423, 424, 426, 429, 430, 432, 433, 437, 439, 443, 445, 446, 447, 450, 452, 456, 457, 458, 459, 462, 463, 467, 471, 475, 478, 482, 483, 494, 498, 508, 510, 555, 556, 557, 559, 561], "estimate_best_fit": [120, 121, 124, 125], "estimate_count": [120, 121, 124, 125], "estimate_energy_depend": 114, "estimate_errn_errp": [120, 121, 124, 125], "estimate_excess_map": 116, "estimate_exposure_reco_energi": 116, "estimate_fit_input_map": 127, "estimate_flux_default": 127, "estimate_flux_map": 127, "estimate_flux_point": [120, 121, 124], "estimate_kernel": [116, 127], "estimate_map": 112, "estimate_mask_default": [116, 127], "estimate_min_e2dnd": 126, "estimate_min_excess": 126, "estimate_npr": [120, 121, 124, 125], "estimate_npred_excess": [120, 121, 124], "estimate_pad_width": 127, "estimate_scan": [120, 121, 124, 125], "estimate_t": [120, 121, 124, 125], "estimate_time_bin_flux": 124, "estimate_ul": [120, 121, 124, 125], "estimator_result": [134, 458], "et": [26, 33, 59, 128, 143, 216, 282, 283, 289, 374, 441, 448, 454, 486, 557], "eta": [226, 227, 248, 517, 521, 548], "eta_": 50, "eta_b": 50, "eta_rang": [517, 521], "etc": [100, 105, 117, 364, 369, 370, 374, 375, 376, 379, 380, 384, 385, 388, 390, 391, 412, 438, 440, 445, 453, 455, 457, 458, 462, 466, 469, 471, 474, 482, 494, 507, 557], "etru": 464, "eu": 384, "euclidean": 291, "europ": 390, "ev": [464, 498, 534], "ev2": 464, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 86, 97, 100, 103, 104, 105, 120, 124, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 170, 176, 191, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 364, 369, 373, 379, 382, 383, 386, 387, 388, 392, 404, 405, 406, 408, 411, 415, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 449, 450, 458, 464, 469, 471, 473, 474, 494, 516, 517, 524, 557, 560], "evaluate_contain": [144, 152, 154, 417], "evaluate_direct": [144, 152, 154], "evaluate_energy_flux": [242, 243], "evaluate_error": [19, 20, 26, 119, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 382], "evaluate_geom": [210, 211, 215, 222, 223, 226, 238, 240, 248, 249, 251, 253, 259, 263, 430, 469, 517], "evaluate_integr": [241, 242, 243], "evaluate_paramet": [144, 152, 154], "evaluation_bin_size_min": [210, 211, 215, 223, 226, 238, 240, 248, 249, 251, 253, 259, 263], "evaluation_radiu": [210, 211, 215, 223, 226, 238, 240, 248, 249, 251, 253, 259, 261, 263, 375, 376, 387, 469], "evaluation_region": [210, 211, 215, 223, 226, 238, 240, 248, 249, 251, 253, 259, 263], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 194, 205, 207, 364, 367, 369, 371, 372, 378, 381, 382, 390, 391, 407, 455, 458, 463, 465, 466, 467, 468, 469, 482, 494, 496, 520, 521, 558], "event": [78, 79, 80, 81, 82, 83, 84, 85, 88, 98, 99, 103, 108, 116, 126, 142, 153, 156, 157, 164, 172, 183, 184, 186, 192, 195, 196, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 323, 364, 365, 368, 370, 374, 376, 378, 379, 380, 391, 396, 400, 407, 408, 409, 411, 415, 416, 417, 422, 423, 424, 425, 426, 429, 430, 432, 434, 437, 438, 439, 443, 445, 446, 452, 457, 465, 475, 478, 480, 482, 483, 494, 498, 506, 507, 508, 556, 557, 560], "event_3fhl": 484, "event_class": [80, 474, 484], "event_det_coord": [98, 103], "event_fil": 84, "event_filt": 85, "event_filter_typ": 85, "event_id": [377, 473, 474, 484, 495], "event_list": [79, 364, 365, 377], "event_list_meta": [98, 103, 410], "event_sampl": [432, 449, 452], "event_sampling_nrg_depend_model": [432, 450, 452], "event_typ": [99, 474, 484], "eventlist": [80, 84, 98, 103, 172, 183, 184, 186, 192, 195, 196, 364, 365, 370, 377, 378, 379, 391, 400, 405, 412, 417, 419, 420, 421, 423, 424, 449, 450, 458, 466, 473, 474, 484, 498, 507], "eventlistbas": 85, "eventlistdataset": 424, "eventlistlat": 495, "eventlistmetadata": [79, 391], "events2": 79, "events_": 449, "events_0001": 449, "events_1": 495, "events_2": 495, "events_3fhl": 484, "events_bkg": 377, "events_gc_3fhl": 484, "events_list": 377, "events_new": 498, "events_path": [78, 449], "events_src": 377, "events_tot": 377, "events_vela": 458, "eventu": [364, 369, 380, 383, 384, 400, 469], "ever": 561, "everi": [182, 184, 196, 263, 364, 367, 372, 373, 374, 376, 380, 389, 391, 394, 434, 437, 466, 483, 558], "everyon": 369, "everyth": [364, 382, 383, 498], "everywher": [364, 378, 383, 384, 404], "evid": [128, 461], "evolut": [50, 52, 53, 216, 370, 384, 432, 452, 478, 491, 492, 494, 495, 503, 506, 510, 512], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 216, 381, 384, 391, 450, 464], "evt_sampl": 449, "ex": [11, 466, 468, 469], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 382, 466, 474], "exactli": [112, 116, 120, 124, 127, 188, 359, 439, 456, 458, 467, 471, 474, 494, 511], "exagger": 355, "examin": [390, 502], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 64, 65, 76, 78, 79, 81, 82, 83, 84, 85, 86, 89, 91, 94, 96, 97, 100, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 119, 121, 123, 124, 125, 126, 127, 128, 132, 133, 135, 136, 138, 140, 142, 143, 144, 145, 151, 153, 156, 163, 166, 168, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 205, 207, 228, 234, 264, 267, 273, 276, 291, 292, 313, 317, 323, 332, 343, 344, 349, 352, 354, 355, 357, 359, 361, 364, 365, 367, 369, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 387, 390, 391, 392, 396, 397, 398, 400, 404, 406, 409, 412, 415, 416, 417, 420, 422, 423, 424, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 498, 500, 501, 502, 504, 509, 511, 512, 513, 523, 544, 552, 553, 554, 558, 560, 562, 563], "example_cub": 466, "example_cube_fgst": 466, "exce": 107, "except": [65, 67, 76, 83, 86, 97, 100, 104, 105, 159, 183, 184, 186, 192, 195, 196, 293, 361, 364, 375, 379, 383, 464, 468, 511], "excerpt": 476, "excess": [15, 65, 70, 97, 100, 104, 105, 113, 116, 117, 119, 120, 121, 124, 126, 129, 130, 134, 163, 275, 277, 282, 283, 362, 376, 379, 411, 412, 418, 423, 430, 433, 437, 438, 440, 441, 442, 445, 447, 451, 453, 457, 458, 461, 462, 465, 467, 468, 475, 482, 483, 496, 498], "excess_estim": 475, "excess_estimator_integr": 475, "excess_integr": 475, "excess_map": [16, 438, 442, 443, 445, 482], "excess_map_estim": 458, "excess_matching_signific": [414, 424], "excess_min": 136, "excess_r": 462, "excessestim": 388, "excessmapconfig": 16, "excessmapestim": [113, 132, 133, 134, 388, 411, 412, 413, 415, 418, 428, 430, 443, 445, 458, 467, 475, 496], "excesspointsestim": 388, "excessprofileestim": [388, 412], "exchang": 378, "exclud": [16, 80, 96, 97, 99, 100, 104, 105, 118, 123, 164, 166, 205, 207, 214, 236, 370, 427, 465, 467, 507, 508], "exclude_default": [16, 80, 99, 118], "exclude_non": [16, 80, 99, 118], "exclude_unset": [16, 80, 99, 118], "exclus": [16, 79, 158, 160, 165, 166, 167, 168, 171, 182, 194, 370, 378, 380, 411, 413, 434, 442, 445, 465, 505, 507], "exclusion_mask": [158, 160, 165, 166, 167, 168, 171, 437, 443, 447, 465, 467, 483, 505, 507, 508], "exclusion_mask_2d": 465, "exclusion_mask_crab": [438, 482], "exclusion_radiu": 467, "exclusion_region": 437, "exclusionmask": 421, "execut": [11, 116, 120, 124, 125, 127, 364, 365, 367, 369, 371, 372, 373, 379, 380, 384, 394, 395, 396, 397, 398, 399, 400, 409, 417, 423, 432, 436, 444, 452, 459, 465, 466, 472, 474, 477, 478, 479, 481, 484, 485, 513, 523, 544, 554, 556], "exercis": [367, 380, 384, 390], "exhibit": 448, "exist": [11, 15, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 84, 86, 94, 95, 96, 97, 100, 102, 104, 105, 117, 119, 141, 142, 148, 153, 156, 168, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 202, 214, 228, 236, 259, 260, 261, 263, 348, 364, 367, 369, 372, 373, 375, 376, 377, 378, 380, 381, 383, 384, 385, 387, 388, 390, 391, 396, 397, 400, 401, 404, 408, 409, 423, 424, 426, 429, 441, 443, 462, 466, 467, 469, 470, 474, 495, 510, 511, 559], "exist_ok": [437, 438, 445, 446, 449, 482, 483], "exit": [11, 15, 83, 86, 205, 207, 214, 236, 405, 522, 558], "exot": 381, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 143, 221, 224, 231, 242, 243, 255, 365, 387, 457, 469, 516, 517, 524, 528, 529, 530, 531, 540, 541, 542, 546, 547, 548, 561], "expand": [124, 330, 374, 415], "expand_map": 124, "expans": [50, 52, 53], "expcutoffpowerlaw": 530, "expcutoffpowerlaw3fglspectralmodel": [246, 387, 435, 469, 529], "expcutoffpowerlawnormspectralmodel": [220, 246, 430, 469, 530], "expcutoffpowerlawspectralmodel": [19, 20, 26, 76, 208, 209, 212, 216, 218, 219, 224, 230, 231, 233, 237, 239, 241, 242, 243, 246, 247, 252, 254, 255, 256, 257, 260, 264, 387, 435, 437, 445, 469, 528, 530, 534], "expdecai": [221, 432, 512, 554], "expdecay_model": [449, 546], "expdecaytemporalmodel": [258, 387, 411, 415, 449, 457, 469, 546], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 103, 105, 117, 168, 173, 174, 179, 194, 275, 276, 277, 278, 280, 284, 290, 323, 364, 369, 377, 379, 380, 381, 384, 389, 391, 433, 434, 439, 440, 441, 443, 449, 450, 454, 455, 460, 463, 466, 467, 471, 474, 476, 494, 496, 559, 560, 561], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 437, 450], "experi": [367, 369, 373, 375, 379, 392, 394, 423, 486, 557, 562], "experienc": [373, 399], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 380, 558], "expert": 384, "expertis": 381, "expfactor": [256, 257, 541, 542], "expir": 377, "explain": [83, 86, 364, 367, 369, 378, 381, 383, 384, 390, 394, 396, 398, 409, 415, 433, 437, 439, 460, 463, 467, 469, 498, 556, 558], "explan": [112, 116, 120, 124, 127, 369, 401, 454, 562], "explicit": [83, 86, 182, 184, 364, 380, 382, 388, 510, 562], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 293, 374, 386, 395, 405, 450, 468, 496, 510, 562], "explor": [183, 184, 186, 192, 195, 196, 372, 380, 400, 432, 437, 442, 445, 448, 451, 452, 454, 455, 456, 461, 462, 468, 475, 476, 482, 484, 494, 495, 496, 498, 506, 507, 510, 555], "explos": 52, "expomap": 377, "expon": [387, 469], "exponenti": [28, 30, 36, 39, 40, 218, 219, 220, 221, 255, 256, 257, 365, 375, 409, 432, 445, 449, 457, 512, 544], "exponentialcutoffpowerlaw": 534, "export": [80, 83, 86, 97, 99, 100, 117, 118, 119, 367, 388, 391, 396, 398, 409, 419, 426, 427, 430, 438, 469, 475, 476, 482], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 373, 378, 379, 380, 383, 384, 428, 430, 466, 478, 496, 497, 556], "exposur": [16, 79, 84, 97, 100, 101, 103, 104, 105, 116, 127, 131, 141, 142, 148, 151, 153, 156, 158, 163, 170, 173, 174, 175, 177, 178, 179, 251, 285, 288, 290, 370, 373, 374, 375, 376, 377, 388, 407, 412, 420, 422, 423, 424, 426, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 447, 449, 450, 453, 456, 457, 462, 465, 466, 467, 475, 482, 483, 494, 503, 506, 511, 560], "exposure_geom": 142, "exposure_hdu": [141, 142, 148, 153, 156], "exposure_hdu_band": [141, 142, 148, 153, 156], "exposure_hpx": 474, "exposure_map": [141, 142, 148, 153, 156, 173, 174, 179, 464], "exposure_max": 462, "exposure_min": 462, "exposure_tim": 377, "express": [116, 128, 275, 277, 375, 387, 388, 430, 443, 463, 464, 469, 471, 494, 510, 517, 559, 560, 561], "exptest": 421, "extend": [15, 19, 20, 26, 67, 70, 83, 86, 87, 95, 158, 185, 188, 196, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 236, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 276, 371, 375, 376, 377, 378, 384, 386, 387, 388, 391, 396, 408, 410, 415, 432, 436, 437, 441, 450, 455, 461, 466, 467, 468, 469, 474, 478, 494, 495, 506, 507, 555], "extended_archive_v18": 522, "extended_source_spectral_analysi": [432, 434, 436], "extens": [41, 79, 140, 183, 184, 186, 188, 195, 196, 210, 211, 214, 215, 223, 226, 236, 238, 240, 248, 249, 253, 259, 263, 366, 369, 370, 371, 372, 373, 375, 377, 379, 380, 381, 382, 383, 384, 394, 418, 448, 449, 450, 469, 558], "extent": [194, 214, 236, 378, 441, 469], "extern": [108, 365, 390, 416, 420, 421, 424, 473, 498], "extnam": 464, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 79, 80, 99, 118, 181, 182, 187, 191, 192, 194, 200, 201, 203, 259, 260, 291, 363, 365, 371, 372, 378, 380, 381, 384, 390, 391, 420, 423, 424, 466, 467, 498, 511], "extra_term": 290, "extract": [16, 80, 95, 97, 99, 100, 104, 105, 117, 118, 119, 124, 141, 142, 148, 153, 156, 159, 164, 165, 170, 172, 180, 183, 184, 185, 186, 188, 193, 194, 195, 196, 261, 364, 374, 379, 388, 390, 391, 417, 418, 429, 430, 433, 434, 437, 438, 439, 440, 445, 446, 449, 450, 451, 453, 462, 466, 482, 494, 502, 507], "extragalact": [216, 473], "extrapol": [137, 138, 139, 163, 183, 184, 186, 192, 195, 196, 216, 264, 305, 415, 420, 422, 423, 464, 466, 473, 474, 510], "extras_requir": 381, "extrem": [364, 391, 466, 517], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 127, 136, 190, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 292, 293, 320, 364, 367, 381, 386, 387, 392, 395, 396, 398, 417, 426, 433, 434, 437, 438, 440, 446, 447, 448, 449, 450, 456, 457, 458, 460, 461, 463, 465, 467, 469, 470, 471, 474, 475, 480, 482, 483, 484, 492, 507, 524, 534, 545, 546, 547, 548, 549, 550, 551, 558, 559, 560], "f0": [262, 552], "f06": 48, "f06b": [49, 488], "f06p": 49, "f1": [262, 552], "f2": [262, 552], "f4": [138, 143, 439, 462, 464, 466, 473, 474], "f8": [464, 474], "f_": [281, 283, 292, 494], "f_0": [241, 537], "f_dead": [79, 84], "f_i": 281, "f_max": 454, "f_max_err": 454, "f_mean": 454, "f_mean_err": 454, "f_min": 454, "f_min_err": 454, "f_pp": 282, "f_var": 282, "fabio": [377, 382, 405, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 422, 424, 426, 428, 429, 430], "face": [369, 372], "facecolor": [361, 437, 439, 447, 448, 451, 458, 460, 515, 516, 517], "facil": 389, "fact": [19, 20, 92, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 390, 434, 511], "facto": 390, "factor": [19, 20, 23, 97, 98, 100, 103, 104, 105, 112, 117, 141, 142, 144, 148, 150, 151, 152, 153, 154, 156, 163, 170, 176, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 199, 204, 205, 206, 207, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 238, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 262, 263, 265, 364, 377, 379, 411, 433, 440, 442, 445, 447, 451, 453, 457, 462, 465, 469, 473, 494, 511, 524], "factor1": [19, 20, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263], "factor_max": [19, 20, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263], "factor_min": [19, 20, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263], "factori": [183, 184, 195, 196, 378, 383, 387, 509, 511], "factoris": [251, 387, 469, 555], "fail": [16, 80, 99, 118, 201, 365, 367, 378, 393, 394, 418, 446, 474], "failur": [426, 429], "faint": 559, "fair": 390, "fair4r": 390, "fake": [97, 100, 104, 105, 376, 377, 407, 439, 440, 453, 457, 471], "fall": [128, 166, 193, 214, 236, 364, 371, 373, 374, 381, 424, 425, 454], "fallback": 364, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 78, 79, 80, 82, 83, 84, 86, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 116, 117, 118, 119, 120, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 170, 173, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 293, 323, 331, 333, 361, 364, 378, 380, 387, 392, 423, 424, 430, 433, 434, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 451, 453, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 474, 482, 483, 484, 495, 505, 507, 508, 522, 534, 543], "falsifi": 471, "famili": 390, "familiar": [381, 382, 466, 467, 484], "fanci": [364, 458], "far": [372, 377, 379, 381, 385, 388, 391, 400, 415, 449, 486], "fashion": [379, 384], "fast": [364, 378, 382, 463], "faster": [83, 86, 183, 184, 186, 192, 195, 196, 342, 430, 441], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 488, "favour": [369, 377, 392, 471], "favourit": 447, "fc": [469, 511], "fcluster": [291, 470], "fcluster_kwarg": [291, 470], "fcn": 463, "fdx": 364, "fe": 266, "feasibl": [378, 383, 440, 453, 462], "featur": [6, 13, 83, 86, 91, 112, 132, 291, 292, 354, 355, 364, 367, 371, 373, 374, 375, 376, 378, 380, 381, 386, 387, 388, 390, 391, 392, 397, 402, 405, 406, 407, 408, 409, 411, 412, 415, 419, 422, 423, 424, 425, 454, 466, 467, 469, 470, 486, 496, 534], "feature_irf": 470, "features_irf": [91, 291, 292, 470], "feb": [370, 371, 381, 385, 400, 402], "februari": 402, "fed": 439, "feedback": [367, 369, 373, 378, 380, 381, 384, 385, 387, 393, 423, 464, 498], "feedstock": [393, 394], "feel": [374, 558], "feijen": [428, 429, 430], "feldman": [406, 412, 420, 422, 557], "feldman1998": [557, 560], "fellowship": 390, "felt": 364, "fermi": [55, 58, 60, 61, 63, 67, 69, 71, 72, 74, 79, 82, 120, 121, 123, 127, 183, 184, 186, 192, 193, 195, 196, 216, 266, 268, 273, 371, 372, 373, 374, 376, 377, 380, 381, 384, 394, 396, 401, 403, 404, 407, 409, 412, 416, 419, 420, 421, 422, 423, 424, 432, 435, 441, 449, 451, 461, 466, 467, 468, 469, 477, 478, 484, 486, 494, 495, 498, 503, 510, 522, 532, 537, 555, 562], "fermi_3fhl": [79, 183, 184, 186, 192, 195, 196, 468, 474, 484], "fermi_3fhl_events_select": [79, 474], "fermi_3fhl_exposure_cube_hpx": 474, "fermi_3fhl_psf_gc": 474, "fermi_bkg_model": 468, "fermi_ct": 123, "fermi_dataset": [273, 468, 474], "fermi_lat": [384, 424, 432, 474, 477], "fermi_model": 474, "fermi_prof": 121, "fermi_ts_imag": 365, "fermipi": [371, 373, 376, 380, 384, 388, 421, 423, 474, 486], "fermitool": 380, "fetch": [15, 364, 372, 403, 416, 482, 558], "few": [78, 79, 83, 84, 86, 363, 364, 365, 367, 369, 370, 371, 372, 374, 376, 378, 382, 384, 389, 393, 394, 400, 414, 425, 427, 430, 434, 438, 443, 445, 447, 461, 463, 466, 473, 482, 483, 507, 511, 563], "fewer": [378, 384], "ff": 390, "fft": 196, "fftconvolv": 196, "fgl": [193, 467], "fgst": [182, 183, 184, 186, 187, 188, 194, 195, 196, 466], "fhit": 475, "fidalgo": [374, 379, 404, 424, 425], "fiduci": 466, "field": [16, 42, 50, 51, 54, 79, 80, 83, 86, 99, 118, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 160, 222, 237, 295, 299, 351, 364, 378, 390, 391, 400, 405, 410, 417, 424, 437, 439, 443, 445, 447, 449, 464, 465, 467, 473, 474, 498, 500, 501, 502, 503, 504, 505, 507, 534, 557], "fieldinfo": [16, 80, 99, 118], "fig": [196, 352, 433, 434, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 451, 455, 457, 458, 460, 463, 467, 471, 507, 508, 517, 521, 524, 556], "figsiz": [84, 97, 100, 104, 105, 122, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 183, 184, 186, 192, 195, 196, 352, 434, 437, 440, 441, 443, 445, 446, 447, 448, 454, 455, 456, 457, 458, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 476, 507, 517, 521, 524], "figur": [84, 97, 100, 104, 105, 122, 137, 138, 140, 141, 142, 143, 144, 150, 151, 152, 153, 154, 156, 183, 184, 186, 192, 195, 196, 342, 351, 352, 358, 364, 365, 369, 384, 394, 437, 441, 445, 447, 448, 449, 451, 454, 455, 456, 460, 462, 463, 465, 466, 468, 469, 474, 475, 476, 558], "file": [11, 15, 16, 26, 63, 64, 65, 78, 79, 81, 82, 83, 84, 86, 88, 89, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 164, 169, 183, 184, 186, 190, 192, 195, 196, 202, 214, 216, 228, 236, 259, 260, 261, 262, 263, 264, 301, 331, 333, 363, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 383, 384, 385, 387, 388, 391, 392, 393, 394, 395, 396, 398, 400, 408, 409, 415, 417, 419, 421, 422, 423, 424, 426, 427, 429, 430, 432, 433, 436, 439, 440, 444, 445, 447, 449, 450, 452, 453, 457, 459, 461, 462, 465, 466, 467, 468, 469, 472, 475, 476, 477, 478, 479, 481, 484, 485, 486, 497, 498, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562], "file_dir": 301, "file_model": 449, "file_nam": 301, "filemod": [16, 438, 442, 443, 445, 482, 558], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 81, 82, 83, 86, 89, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 121, 123, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 183, 184, 186, 190, 192, 195, 196, 214, 216, 228, 236, 259, 260, 261, 262, 263, 264, 268, 270, 272, 273, 301, 331, 333, 343, 364, 365, 369, 412, 437, 438, 442, 443, 445, 446, 450, 451, 461, 462, 466, 467, 468, 469, 473, 474, 482, 483, 484, 495, 498, 500, 501, 502, 504, 522, 524, 552, 553, 558], "filename_1": 495, "filename_2": 495, "filename_arf": 102, "filename_bkg": 102, "filename_model": [95, 117, 273, 468, 474], "filename_rmf": 102, "fill": [16, 80, 81, 83, 86, 97, 99, 100, 103, 104, 105, 118, 140, 151, 182, 183, 184, 186, 192, 194, 195, 196, 264, 364, 372, 373, 377, 380, 384, 390, 393, 394, 409, 416, 423, 426, 434, 449, 450, 461, 464, 465, 467, 474, 483, 510], "fill_between": [19, 20, 26, 122, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 458], "fill_by_coord": [151, 183, 184, 186, 192, 195, 196, 466, 474, 510], "fill_by_idx": [183, 184, 186, 192, 195, 196, 510], "fill_by_pix": [183, 184, 186, 192, 195, 196, 510], "fill_ev": [183, 184, 186, 192, 195, 196, 418, 429, 439, 466, 474, 480], "fill_nan": 184, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 259, 260, 263, 264, 364, 464, 466, 474], "filled_t": [83, 86], "filter": [84, 85, 370, 374, 376, 378, 379, 424, 425, 428, 467, 470, 478, 483, 484], "filter_ev": 85, "filter_gti": 85, "filter_success_nan": [117, 119], "filtered_ev": 85, "filtered_gti": 85, "filterwarn": [457, 458], "final": [124, 364, 365, 371, 372, 374, 377, 378, 380, 381, 383, 385, 387, 389, 390, 394, 396, 398, 409, 410, 411, 433, 434, 435, 437, 445, 447, 449, 450, 455, 456, 458, 460, 462, 463, 465, 467, 470, 474, 478, 482, 483, 484, 494, 495, 496], "finalis": 368, "find": [19, 20, 26, 127, 132, 133, 140, 166, 167, 171, 198, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 285, 364, 369, 375, 377, 383, 393, 394, 395, 415, 417, 423, 424, 429, 430, 435, 437, 441, 461, 462, 466, 469, 473, 476, 484, 558, 560, 561], "find_peak": [133, 424, 441, 447], "find_peaks_in_flux_map": 441, "find_root": 415, "finder": [132, 166, 167, 415, 424, 441], "fine": [274, 306, 377, 443, 462, 474, 511, 558], "finer": [449, 462, 511], "fingertip": 363, "finish": [367, 371, 373, 393, 421, 423], "finit": [95, 97, 100, 104, 105, 141, 142, 148, 153, 169, 184, 192, 196, 261, 382], "fink": [216, 217, 524], "fir": 534, "firefox": [83, 86], "first": [57, 83, 86, 87, 89, 95, 97, 104, 117, 119, 121, 132, 140, 157, 166, 183, 184, 185, 188, 192, 193, 214, 236, 267, 326, 353, 364, 365, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 388, 389, 390, 394, 395, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 422, 424, 425, 426, 427, 429, 433, 434, 435, 437, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 478, 482, 483, 484, 495, 507, 510, 558], "firstli": [448, 449], "firstnam": [83, 86], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 63, 64, 65, 69, 71, 72, 74, 78, 79, 80, 81, 82, 83, 84, 86, 89, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 160, 163, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 200, 202, 203, 204, 206, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 261, 262, 263, 264, 273, 274, 275, 277, 278, 279, 284, 286, 290, 301, 302, 303, 346, 347, 350, 352, 357, 359, 363, 364, 365, 370, 374, 375, 376, 377, 380, 382, 383, 384, 385, 386, 387, 388, 391, 392, 396, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 420, 422, 423, 424, 425, 427, 429, 430, 432, 433, 436, 440, 441, 443, 444, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 461, 462, 464, 465, 466, 468, 469, 470, 472, 473, 475, 476, 478, 480, 484, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 510, 515, 522, 524, 534, 552, 553, 556, 557, 562], "fit2": 468, "fit_covari": [438, 482], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [434, 437, 445, 446], "fit_prior": 471, "fit_rang": [16, 438, 442, 443, 445, 482], "fit_result": [201, 273, 438, 482], "fit_results_nul": 273, "fit_scipi": 463, "fit_sherpa": 463, "fit_stat_scan": 379, "fit_statist": 364, "fit_statistics_cython": 394, "fitconfig": 16, "fitmc": 382, "fitresult": [201, 417, 429, 463, 483], "fitsfixedwarn": [441, 522], "fitspectrum": 419, "fitstepresult": [200, 203], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 422, 423, 435], "five": 484, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 84, 89, 90, 101, 102, 135, 153, 155, 170, 201, 238, 239, 244, 263, 367, 369, 370, 371, 375, 376, 379, 381, 386, 388, 389, 390, 393, 394, 396, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 433, 439, 440, 442, 443, 445, 446, 449, 453, 456, 457, 463, 464, 465, 468, 469, 470, 482, 508, 510, 518, 535], "fixed_altaz": 81, "fixed_bin": 135, "fixed_icr": [81, 153, 433, 440, 449, 450, 453, 457], "fixed_offset": [91, 169, 415], "fixed_r_in": 158, "fixed_width": 158, "fixedpointinginfo": [84, 153, 176, 429, 430, 433, 440, 449, 450, 453, 457], "fjzuyj0a": 440, "fk5": [511, 522], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 98, 103, 117, 119, 120, 121, 124, 125, 181, 182, 183, 184, 186, 188, 189, 191, 192, 194, 195, 196, 200, 201, 202, 203, 434, 445, 449, 461, 469], "flake8": 367, "flare": [128, 281, 396, 409, 410, 432, 454, 455, 457, 459, 478, 494, 495, 496, 506, 507], "flask": 423, "flat": [119, 128, 145, 155, 181, 182, 187, 189, 191, 194, 197, 198, 238, 375, 388], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 181, 182, 189, 191, 194, 454], "fledg": 392, "flexibl": [78, 317, 364, 369, 373, 374, 375, 378, 380, 384, 385, 391, 466, 498, 555], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 79, 83, 84, 86, 91, 97, 100, 104, 105, 108, 112, 116, 118, 119, 120, 122, 124, 125, 126, 127, 132, 133, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 158, 160, 169, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 197, 198, 201, 203, 204, 206, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 273, 274, 275, 277, 280, 285, 293, 304, 311, 320, 322, 353, 354, 355, 465, 471, 473, 474, 558, 562], "float32": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 442, 447, 466], "float64": [83, 86, 106, 110, 140, 143, 364, 392, 464, 466, 496], "float64float64float64": 447, "float64float64float64float64float64float64float64float32bool": 435, "float64float64float64float64float64float64float64float64": 447, "float_a": [83, 86], "flow": [391, 556, 557], "fluctuat": [275, 277, 388, 440, 453, 471, 560], "flux": [15, 19, 20, 26, 41, 46, 65, 69, 71, 72, 74, 75, 76, 79, 84, 95, 96, 97, 100, 104, 105, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 204, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 271, 280, 281, 282, 283, 289, 368, 376, 377, 379, 380, 382, 384, 385, 387, 396, 403, 406, 408, 409, 411, 415, 417, 421, 422, 423, 425, 430, 432, 436, 439, 441, 445, 447, 449, 450, 452, 454, 455, 456, 457, 458, 462, 466, 469, 474, 478, 492, 493, 494, 503, 510, 512, 519, 534, 555, 556, 560], "flux_err": [19, 20, 26, 117, 119, 127, 133, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 281, 282, 283, 289, 441, 454, 455], "flux_errn": [117, 119, 461], "flux_errp": [117, 119, 461], "flux_int_cu": 267, "flux_map": [117, 119, 388, 460], "flux_metadata_fits_kei": 118, "flux_per_omega": 469, "flux_point": [16, 64, 65, 69, 71, 72, 74, 75, 76, 93, 96, 117, 119, 120, 376, 433, 435, 437, 438, 442, 443, 445, 447, 458, 461, 462, 482, 483, 484], "flux_point_dataset": 376, "flux_points_at_tim": 388, "flux_points_ctb_37b": 119, "flux_points_dataset": [437, 447, 458], "flux_points_fermi": 446, "flux_points_hawc": 446, "flux_points_hess": 446, "flux_points_meta": [69, 71, 72, 74], "flux_points_recomput": 119, "flux_points_t": [69, 71, 72, 74, 75, 76], "flux_pr": 96, "flux_profil": [432, 451, 452], "flux_profile_estim": 451, "flux_profile_fermi": 451, "flux_quant": [128, 129, 130, 454], "flux_ref": [117, 119, 388], "flux_sensit": [117, 119], "flux_ul": [117, 119, 127, 461], "fluxestim": [117, 119, 120, 385, 411, 413, 414, 415, 417, 430], "fluxmap": [116, 118, 119, 127, 133, 415, 430, 441, 496], "fluxmapestim": 388, "fluxmapsmetadata": 391, "fluxpoint": [69, 71, 72, 74, 75, 76, 96, 117, 118, 120, 121, 124, 128, 129, 130, 135, 376, 379, 388, 391, 415, 422, 423, 429, 430, 433, 435, 446, 451, 454, 455, 461, 462, 484, 493, 494, 496, 498], "fluxpointdataset": 409, "fluxpointestim": [379, 406, 412, 425], "fluxpointfit": 376, "fluxpointfitt": 424, "fluxpointprofil": 425, "fluxpointsconfig": 16, "fluxpointsdataset": [93, 94, 97, 100, 385, 388, 391, 405, 409, 430, 435, 437, 446, 447, 457, 458, 494], "fluxpointsdatasetmetadata": 391, "fluxpointsestim": [113, 121, 124, 313, 385, 386, 388, 396, 406, 411, 412, 415, 429, 430, 437, 446, 447, 458, 482, 483], "fluxpointsetim": 388, "fluxpointsmetadata": 391, "fluxprofileestim": [113, 415, 428, 430, 451], "fly": 374, "fmt": [463, 471], "focu": [374, 384, 409, 422, 439, 558], "focus": [374, 390], "fold": [103, 388, 435, 446, 494, 496], "folder": [11, 78, 89, 96, 101, 105, 119, 329, 364, 365, 369, 372, 393, 395, 400, 405, 415, 418, 438, 445, 449, 473, 482, 483, 556, 558], "follow": [15, 19, 20, 43, 44, 76, 78, 79, 80, 86, 97, 99, 101, 102, 104, 105, 117, 118, 119, 122, 127, 132, 134, 182, 183, 184, 186, 190, 195, 196, 201, 251, 267, 273, 354, 355, 357, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 407, 408, 409, 411, 412, 415, 417, 418, 424, 425, 429, 430, 433, 434, 435, 437, 438, 440, 441, 442, 445, 446, 449, 450, 455, 456, 457, 458, 460, 461, 463, 465, 466, 467, 468, 469, 473, 478, 482, 484, 486, 488, 489, 494, 496, 498, 500, 502, 503, 507, 509, 510, 511, 512, 520, 521, 525, 528, 529, 531, 532, 536, 537, 539, 540, 541, 542, 543, 556, 559, 560, 561, 563], "font": [183, 184, 186, 192, 195, 196, 365, 466], "fontsiz": [361, 458, 463], "foo": [83, 86], "footprint": [183, 184, 186, 192, 194, 195, 196, 518], "footprint_rectangle_sky_region": 194, "forbid": [16, 80, 99, 118], "forbidden": 468, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 151, 194, 196, 293, 369, 379, 405], "forecom": [364, 389], "foremost": 558, "forens": 380, "foreseen": [374, 389], "forev": 405, "forg": [363, 381, 393, 394, 396, 397, 400, 423, 473], "forget": [438, 448, 482], "forgot": 364, "forgotten": 364, "fork": 367, "form": [16, 80, 83, 86, 97, 99, 118, 153, 156, 191, 305, 364, 370, 374, 379, 387, 389, 391, 401, 423, 467, 471, 495, 503, 516, 526, 556], "formal": [369, 392, 441], "format": [16, 79, 80, 81, 82, 83, 84, 86, 89, 97, 99, 100, 102, 104, 105, 117, 118, 119, 120, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 176, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 198, 214, 228, 236, 264, 301, 323, 345, 346, 353, 363, 365, 372, 373, 374, 375, 376, 378, 380, 388, 390, 391, 394, 403, 415, 417, 420, 424, 426, 427, 429, 430, 435, 437, 438, 439, 441, 442, 443, 445, 447, 449, 450, 451, 454, 455, 457, 461, 464, 466, 467, 469, 473, 474, 475, 476, 482, 484, 486, 492, 494, 495, 496, 497, 500, 501, 502, 503, 504, 511, 552, 553, 557, 558, 559], "format_plot_xaxi": [185, 188, 193, 464], "format_plot_yaxi": [188, 464], "formatt": [353, 466], "formatwarn": 364, "former": [390, 406, 411, 434, 468, 556, 559], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 152, 242, 243, 290, 433, 559], "forum": 393, "forward": [19, 20, 26, 79, 83, 86, 97, 100, 104, 105, 121, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 165, 187, 191, 192, 193, 201, 208, 209, 212, 213, 216, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 233, 237, 239, 241, 242, 243, 244, 247, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 268, 291, 353, 358, 365, 371, 374, 388, 435, 446, 494, 496, 511], "forwardref": [16, 80, 99, 118], "found": [19, 20, 26, 78, 82, 83, 86, 128, 166, 171, 190, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 281, 367, 368, 372, 379, 389, 390, 409, 412, 413, 414, 418, 443, 449, 454, 469, 471, 476, 495, 496, 507, 508], "four": [367, 375, 388, 455, 473, 474, 502, 504, 510, 557], "fov": [116, 137, 138, 160, 161, 175, 176, 178, 180, 222, 364, 370, 378, 420, 423, 424, 442, 464, 467, 468, 473, 506, 557], "fov_": 364, "fov_align": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 464], "fov_background": [442, 482], "fov_bkg_mak": [465, 505], "fov_lat": [138, 464, 473, 503], "fov_lat_axi": 464, "fov_lon": [138, 464, 473, 503], "fov_lon_axi": 464, "fov_theta": 364, "fovalign": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 464], "fovbackground": [392, 411], "fovbackgroundmak": [161, 410, 415, 465, 482, 483], "fovbackgroundmodel": [15, 97, 103, 104, 107, 160, 232, 392, 412, 429, 430, 445, 446, 449, 450, 453, 462, 468, 482, 483, 505, 518], "fp": [117, 119, 135, 388, 482, 496, 498], "fp_dataset": 462, "fp_dnde": 388, "fp_energy_flux": 388, "fpe": [313, 386, 388, 437, 447, 458, 483], "fpp": 282, "fpp_err": [282, 454], "fpp_tabl": 454, "fr": [390, 473], "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 100, 105, 140, 143, 199, 220, 224, 241, 243, 255, 281, 283, 292, 387, 494, 502, 503, 515, 516, 517, 520, 521, 525, 528, 529, 531, 532, 536, 537, 539, 540, 541, 542, 546, 547, 548, 550, 560, 561], "fraction": [19, 20, 26, 50, 52, 53, 79, 84, 85, 116, 126, 130, 144, 150, 152, 153, 154, 156, 191, 197, 198, 208, 209, 212, 215, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 282, 283, 374, 379, 422, 430, 433, 440, 449, 453, 462, 464, 467, 473, 474, 475], "frame": [16, 79, 81, 86, 89, 90, 91, 97, 100, 104, 105, 106, 110, 121, 132, 153, 163, 166, 176, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 210, 211, 215, 223, 226, 238, 240, 248, 249, 251, 253, 259, 263, 291, 292, 327, 340, 364, 365, 373, 375, 378, 388, 405, 406, 408, 409, 410, 434, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 462, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 482, 483, 484, 502, 507, 509, 510, 511, 515, 516, 517, 518, 519, 520, 521, 522], "framework": [375, 377, 378, 380, 382, 383, 387, 405, 406, 412, 424, 458, 469, 488, 498], "franceschini": [216, 217, 264, 429, 524], "franceschini17": [217, 524], "franceschni": 524, "frd_ab": 217, "free": [50, 52, 53, 97, 100, 104, 105, 120, 124, 125, 163, 201, 205, 207, 238, 239, 273, 369, 379, 405, 438, 440, 442, 443, 445, 447, 448, 453, 455, 457, 462, 463, 465, 468, 469, 471, 474, 478, 482, 483, 486, 496, 505, 518, 534, 535, 558, 560, 561], "free_paramet": [205, 207, 273, 463, 468], "freedom": [114, 117, 119, 134, 390, 430, 448, 496, 560, 561], "freez": [19, 20, 26, 83, 86, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 379, 390, 405, 415, 430, 442, 453, 463, 469, 534], "freeze_al": [205, 207], "frenk": 486, "frequenc": [262, 276, 490], "frequent": [188, 364, 373, 382, 390, 454, 456, 457, 467, 498, 499, 558], "frequentist": 382, "fridai": 373, "friendli": [369, 391, 426, 438, 482, 498], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 169, 170, 172, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 280, 283, 291, 292, 293, 303, 311, 313, 315, 316, 320, 323, 324, 328, 332, 343, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562], "from_align": [194, 415], "from_attribut": [16, 80, 99, 118], "from_bound": [143, 145, 153, 182, 188, 194, 388, 446, 449, 450, 462, 464, 465, 466, 476, 510, 511], "from_covariance_matrix": 392, "from_default": 187, "from_diagonal_respons": [106, 110, 140, 141, 142, 441, 474], "from_dict": [19, 20, 26, 96, 97, 100, 104, 105, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 408, 415, 471], "from_dir": [78, 85, 91, 163, 291, 292, 400, 434, 437, 439, 447, 456, 458, 465, 470, 473, 476, 480, 483, 495, 498, 505, 507, 508], "from_edg": [142, 183, 184, 186, 188, 192, 195, 196, 440, 453, 457, 464, 474, 475], "from_edisp_kernel": 141, "from_energy_bound": [97, 100, 104, 105, 106, 110, 140, 142, 143, 151, 153, 163, 181, 182, 187, 188, 191, 194, 196, 365, 433, 434, 437, 439, 446, 447, 449, 450, 456, 458, 462, 464, 465, 469, 474, 475, 483, 502, 505, 507, 508, 511], "from_energy_edg": [140, 188, 359, 462, 464], "from_events_fil": [78, 449, 473], "from_factor_matrix": 199, "from_fil": [78, 495], "from_fits_head": 81, "from_gauss": [140, 141, 145, 151, 153, 156, 502], "from_gaussian": 412, "from_geom": [97, 100, 104, 105, 141, 142, 151, 153, 156, 183, 184, 186, 190, 192, 195, 196, 409, 428, 462, 466, 467, 511, 517], "from_gti": 193, "from_gti_bound": 193, "from_hdu": [182, 184, 196], "from_hdulist": [97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 466], "from_head": [80, 99, 118, 182, 194, 391], "from_irf": 155, "from_log10": [230, 231, 532], "from_map": [117, 119], "from_map_dataset": [100, 105], "from_nam": [443, 447], "from_nod": 188, "from_orm": [16, 80, 99, 118], "from_panda": [83, 86], "from_paramet": [19, 20, 26, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265], "from_parametr": [143, 500], "from_posit": [210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263, 450], "from_refer": 387, "from_region": [191, 215, 429, 507], "from_region_map": 264, "from_spatial_model": 151, "from_spectrum_dataset": [105, 433, 440], "from_stack": [79, 82, 87, 117, 119, 183, 184, 185, 186, 188, 192, 195, 196, 199, 205, 207, 429, 430, 495], "from_tabl": [119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 185, 187, 188, 192, 193, 228, 426, 433], "from_table_hdu": [82, 187, 188], "from_time_bound": 193, "from_time_edg": [193, 454], "from_time_interv": 82, "from_wcs_til": 184, "from_yaml": [16, 214, 236, 375, 438], "fromnumer": 439, "front": [373, 393, 422], "frozen": [19, 20, 26, 96, 120, 124, 160, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 379, 387, 392, 407, 430, 434, 435, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 453, 456, 457, 461, 462, 463, 467, 468, 469, 474, 482, 483, 484, 496, 505, 534, 543], "fr\u00f6se": 430, "ftol": 463, "ftool": 379, "fulfil": [391, 466], "full": [78, 120, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 184, 202, 214, 236, 301, 360, 363, 364, 369, 373, 374, 377, 379, 380, 384, 390, 392, 395, 402, 405, 415, 417, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 480, 482, 483, 484, 498, 509, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556], "full_enclosur": [176, 464], "full_output": [19, 20, 26, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265], "fulli": [124, 181, 182, 191, 194, 262, 373, 374, 381, 385, 390, 394, 397, 407, 409, 417, 434, 454, 469, 473, 475, 476, 486], "fun": [364, 367], "func": [17, 18, 21, 22, 24, 25, 27, 183, 184, 186, 192, 195, 196, 269, 314, 318, 319, 357, 443, 445], "function": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 78, 79, 81, 83, 84, 86, 95, 96, 97, 98, 100, 103, 104, 105, 112, 117, 124, 127, 128, 129, 130, 133, 143, 144, 145, 147, 148, 150, 152, 153, 154, 156, 183, 184, 186, 188, 192, 195, 196, 201, 202, 203, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 250, 251, 252, 254, 255, 256, 257, 260, 264, 269, 275, 276, 277, 285, 289, 306, 314, 315, 317, 318, 322, 323, 332, 349, 352, 353, 357, 359, 361, 363, 367, 370, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 387, 388, 389, 391, 392, 396, 400, 401, 403, 405, 406, 407, 408, 409, 411, 412, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 433, 437, 438, 439, 440, 441, 445, 447, 448, 449, 450, 451, 462, 463, 464, 465, 466, 467, 468, 469, 471, 476, 478, 482, 483, 484, 486, 487, 488, 493, 494, 495, 497, 498, 507, 509, 511, 516, 517, 519, 546, 555, 556, 557, 558, 559, 561, 563], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [377, 386, 391], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 112, 116, 120, 121, 124, 127, 189, 317, 364, 367, 368, 370, 373, 374, 377, 378, 381, 383, 384, 385, 386, 387, 410, 411, 412, 415, 417, 443, 449, 460, 461, 462, 466, 484, 487, 488, 503, 558], "furthermor": 473, "futur": [98, 103, 120, 121, 124, 204, 206, 364, 369, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 423, 445, 449, 466, 474, 487, 496, 555], "fvar": [130, 283, 379, 422], "fvar_err": [283, 454], "fvar_tabl": 454, "fxjupid": 445, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 65, 79, 81, 82, 83, 86, 90, 108, 132, 182, 183, 184, 186, 188, 192, 194, 195, 196, 201, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 281, 293, 332, 353, 359, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 390, 391, 393, 394, 396, 397, 398, 415, 417, 421, 423, 424, 425, 426, 429, 434, 435, 438, 440, 447, 449, 451, 460, 461, 462, 463, 466, 467, 468, 469, 473, 474, 478, 484, 486, 490, 493, 494, 495, 496, 498, 503, 508, 509, 510, 517, 555, 557, 558, 560, 562, 563], "g0": [445, 474], "g0utc9u3": 469, "g28": 65, "g320": 461, "g7ckelrc": 445, "g_1": 143, "g_2": 143, "g_3": 143, "ga": 451, "gabriel": 424, "gadf": [79, 80, 81, 82, 84, 90, 97, 99, 100, 104, 105, 118, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 374, 377, 388, 391, 415, 417, 426, 429, 464, 466, 482, 494, 498, 511, 557], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 369, 381, 423], "gal_diffus": 380, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 65, 66, 79, 86, 97, 100, 104, 105, 106, 110, 120, 121, 123, 153, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 215, 223, 226, 240, 248, 249, 300, 327, 364, 365, 375, 378, 384, 403, 405, 422, 434, 437, 440, 441, 442, 445, 447, 448, 449, 451, 453, 457, 460, 461, 462, 466, 467, 468, 469, 473, 484, 486, 489, 493, 508, 509, 510, 511, 515, 516, 517, 518, 519, 520, 521, 557, 563], "galactic_median": 79, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 216, 282, 283, 403, 434], "galelli": [428, 430], "gallant": 423, "galleri": [394, 410, 412, 415, 426, 430, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 499, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555], "gallery_jupyt": 512, "gallery_python": 512, "galprop": [182, 183, 184, 186, 195, 196], "galprop2": [182, 183, 184, 186, 195, 196], "gambit": 486, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 62, 64, 65, 75, 79, 116, 120, 126, 152, 176, 183, 184, 186, 195, 196, 216, 218, 219, 220, 241, 242, 243, 264, 267, 320, 364, 370, 372, 375, 376, 377, 378, 388, 393, 394, 396, 400, 401, 406, 420, 421, 422, 423, 424, 433, 435, 437, 438, 439, 443, 446, 447, 448, 449, 451, 461, 464, 466, 467, 470, 473, 475, 476, 482, 484, 486, 488, 489, 493, 494, 495, 498, 501, 503, 505, 507, 508, 517, 524, 528, 529, 536, 537, 555, 556, 557, 558, 559, 560, 563], "gamma1": [208, 525, 539], "gamma2": [208, 525, 539], "gamma_1": [252, 255, 256, 257, 387, 540, 541, 542], "gamma_2": [252, 255, 256, 257, 387, 540, 541, 542], "gamma_min": [126, 433], "gamma_min_sensit": 116, "gammacat": [55, 64, 422, 435], "gammalib": [364, 377], "gammamc_dif": 486, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 386, 387, 388, 392, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 480, 482, 483, 484, 487, 488, 490, 491, 492, 498, 499, 500, 501, 502, 504, 508, 509, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 563], "gammapy_analysis_config": 380, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 82, 84, 85, 86, 89, 91, 96, 97, 100, 104, 105, 109, 111, 112, 116, 117, 119, 121, 123, 125, 127, 132, 133, 135, 136, 138, 142, 143, 144, 145, 153, 163, 183, 184, 186, 192, 195, 196, 217, 228, 264, 273, 291, 292, 343, 352, 357, 359, 364, 365, 367, 380, 396, 398, 400, 404, 405, 406, 415, 424, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 480, 482, 483, 484, 495, 496, 498, 500, 501, 502, 504, 505, 507, 508, 522, 552, 553], "gammapy_extra": 404, "gammapybaseconfig": 16, "gammapydeprecationwarn": [364, 530, 533], "gammmapi": [374, 381], "garcia": 424, "gather": [378, 384, 393], "gauss": [42, 51, 54, 97, 100, 122, 123, 144, 184, 196, 223, 224, 225, 226, 387, 421, 458, 466, 469, 484, 515, 516], "gauss_elong": 469, "gauss_temp": 469, "gaussian": [65, 66, 76, 77, 112, 122, 140, 141, 145, 151, 153, 156, 184, 196, 223, 224, 225, 226, 227, 282, 283, 375, 383, 387, 392, 408, 412, 432, 435, 447, 449, 453, 454, 457, 461, 463, 464, 469, 471, 473, 484, 502, 504, 512, 523, 544, 554], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 112, "gaussian_compon": [65, 461], "gaussian_filt": [122, 196], "gaussian_model": 547, "gaussian_sigma": 463, "gaussianband2d": 423, "gaussianprior": [392, 471], "gaussianspatialmodel": [76, 77, 109, 111, 245, 387, 408, 447, 448, 453, 469, 516], "gaussianspectralmodel": [246, 387, 469, 531], "gaussiantemporalmod": 415, "gaussiantemporalmodel": [258, 387, 411, 469, 547], "gb": [372, 374, 473, 475], "gb8282337f": [99, 118, 401, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "gc": [82, 97, 100, 104, 105, 109, 111, 112, 116, 121, 123, 127, 132, 133, 352, 357, 359, 367, 441, 442, 445, 447, 449, 451, 460, 462, 466, 468, 469, 473, 474, 484, 486, 495, 496], "gc_3fhl": 484, "gc_3fhl_cutout": 484, "gc_3fhl_smooth": 484, "gc_imag": 451, "gc_po": 474, "gc_sep": 468, "gcc": 400, "geminga": 59, "gen_gaussian_model": 548, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 78, 79, 80, 83, 84, 86, 87, 97, 98, 99, 100, 103, 104, 105, 118, 142, 153, 156, 183, 184, 186, 187, 188, 192, 195, 196, 201, 213, 221, 225, 226, 227, 228, 229, 244, 250, 259, 260, 262, 264, 265, 276, 315, 317, 320, 321, 322, 323, 329, 365, 367, 373, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 394, 397, 400, 406, 410, 411, 412, 415, 417, 422, 426, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 494, 498, 503, 509, 511, 512, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 549, 550, 551, 552, 553, 554, 558, 560, 561], "generalconfig": 16, "generalis": [119, 383, 409, 464], "generalized_gaussian_model": 548, "generalizedgaussianspatialmodel": [245, 412, 469, 517], "generalizedgaussiantemporalmodel": [258, 417, 469, 548], "generalrandom": 407, "generatejsonschema": [16, 80, 99, 118], "gengauss": [227, 469, 517], "geodeticloc": 89, "geolat": 434, "geom": [16, 23, 79, 97, 100, 104, 105, 106, 108, 110, 116, 117, 119, 121, 127, 141, 142, 151, 153, 156, 163, 170, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 210, 211, 214, 215, 222, 223, 226, 236, 238, 240, 248, 249, 251, 253, 259, 263, 375, 377, 379, 412, 415, 424, 430, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 475, 482, 483, 484, 496, 505, 507, 508, 509, 510, 511, 514, 516, 517, 518, 519], "geom_24_energy_bin": 511, "geom_6_energy_bin": 511, "geom_edisp": [97, 100, 104, 105, 462], "geom_energi": 511, "geom_exposur": [97, 100, 104, 105, 428, 462], "geom_imag": [443, 447, 511], "geom_irf": 377, "geom_psf": [97, 100, 104, 105, 462], "geom_tru": 409, "geomconfig": 16, "geometri": [23, 79, 95, 97, 100, 104, 105, 108, 117, 119, 141, 142, 148, 151, 153, 156, 160, 163, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 210, 211, 214, 215, 223, 226, 236, 238, 240, 248, 249, 251, 253, 259, 263, 360, 370, 376, 379, 380, 409, 415, 426, 437, 438, 439, 440, 442, 443, 445, 449, 450, 453, 462, 465, 474, 475, 494, 496, 498, 506, 510, 556, 557], "geomspac": [119, 392], "geq": [52, 53], "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 81, 83, 84, 86, 89, 91, 95, 97, 99, 101, 102, 104, 112, 116, 118, 120, 121, 124, 125, 127, 132, 135, 140, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 199, 205, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 223, 224, 226, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 266, 301, 317, 364, 365, 369, 370, 371, 372, 373, 374, 378, 379, 381, 388, 390, 391, 392, 394, 395, 397, 398, 400, 401, 404, 406, 421, 422, 423, 424, 433, 438, 440, 441, 445, 446, 447, 453, 456, 461, 462, 463, 464, 465, 467, 468, 469, 471, 473, 474, 475, 476, 478, 482, 483, 484, 486, 494, 498, 511, 557, 561], "get_altaz": [81, 89, 429], "get_bia": 140, "get_bias_energi": 140, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [183, 184, 186, 192, 195, 196, 465, 466, 474, 475, 510], "get_by_idx": [183, 184, 186, 192, 195, 196, 466, 510], "get_by_pix": [183, 184, 186, 192, 195, 196, 510], "get_cl": [435, 461, 467], "get_coord": [181, 182, 187, 191, 194, 408, 415, 424, 450, 466, 467, 507, 511], "get_dataset": [15, 438, 442, 443, 445, 455, 482, 498], "get_devel_vers": 367, "get_edges_fixed_bin": 135, "get_edges_min_t": 135, "get_edisp_kernel": [141, 142, 410, 415, 462, 474, 502], "get_events_meta_data": 377, "get_excess_map": [15, 482], "get_filenam": [101, 102], "get_flux_point": [15, 117, 119, 388, 410, 438, 482], "get_group_by_idx": 388, "get_hdu": 301, "get_icr": [81, 89, 429], "get_idx": [181, 182, 191, 194, 511], "get_image_by_coord": [183, 184, 186, 192, 195, 196, 466], "get_image_by_idx": [183, 184, 186, 192, 195, 196], "get_image_by_pix": [183, 184, 186, 192, 195, 196], "get_index_list": 182, "get_irfs_featur": [291, 292, 429, 470], "get_kernel": 112, "get_light_curv": 15, "get_mean": 140, "get_observ": [15, 78, 91, 291, 292, 406, 417, 434, 437, 438, 439, 442, 443, 445, 447, 449, 455, 456, 458, 465, 470, 475, 476, 480, 482, 483, 498, 505, 507, 508], "get_ogip_meta": 102, "get_pix": 194, "get_pointing_altaz": [84, 470], "get_pointing_icr": [84, 429, 447, 465, 483], "get_psf_kernel": [151, 153, 156, 430, 474], "get_random_st": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 276, 315, 320, 321, 322, 323, 364], "get_rebinned_axi": 456, "get_resolut": 140, "get_respons": 422, "get_scal": 112, "get_scale_model": [120, 121, 124], "get_spectrum": [183, 184, 186, 192, 195, 196], "get_subcovari": 199, "get_transform": [441, 447, 515, 516], "get_valid_path": 101, "get_wcs_coord_and_weight": 191, "getattr": 392, "getitem": 422, "getlogg": [364, 443, 447, 455, 456, 457, 480], "getter": 365, "getting_start": 384, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 71, 121, 127, 183, 184, 186, 188, 192, 195, 196, 435, 439, 441, 445, 446, 451, 453, 457, 458, 460, 461, 465, 466, 467, 468, 473, 474, 475, 484, 511, 534, 556, 557], "gev2": [19, 460], "gevgevgev1": 435, "gh": [364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394], "gidtnnld": 465, "git": [82, 251, 364, 365, 367, 369, 371, 372, 390, 397, 426], "github": [365, 367, 368, 369, 370, 372, 373, 382, 384, 390, 393, 394, 397, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 420, 421, 422, 423, 424, 425], "giuliani": 377, "giunti": [405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 426, 429], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 131, 281, 282, 364, 369, 373, 374, 378, 379, 380, 381, 384, 385, 390, 394, 405, 407, 409, 417, 430, 438, 441, 448, 450, 454, 456, 461, 463, 464, 465, 466, 469, 473, 474, 482, 498, 503, 558, 559, 561, 562], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 65, 66, 67, 76, 78, 79, 80, 81, 83, 84, 86, 89, 91, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 165, 166, 169, 171, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 273, 275, 277, 283, 291, 293, 296, 297, 304, 311, 315, 318, 319, 327, 351, 352, 357, 361, 364, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 387, 388, 390, 392, 404, 409, 415, 423, 424, 429, 433, 434, 435, 438, 441, 449, 450, 451, 453, 455, 456, 457, 460, 461, 462, 464, 465, 466, 467, 469, 473, 474, 482, 484, 494, 495, 496, 498, 502, 503, 507, 508, 510, 511, 517, 521, 524, 555, 557, 558, 559, 560], "glast": 474, "glat": [41, 65, 66, 79, 364, 437, 461, 466, 474], "glat_err": 461, "glat_pnt": [447, 473], "glimps": [475, 478], "gll_iem_v06_cutout": [183, 184, 186, 192, 195, 196], "gll_iem_v06_gc": [449, 466, 468, 469, 474], "gll_psc_v16": 60, "gll_psc_v20": 461, "gll_psc_v32": 63, "gll_psch_v09": 58, "gll_psch_v13": 61, "glob": [78, 365, 462], "global": [16, 33, 42, 45, 46, 47, 95, 97, 98, 100, 103, 104, 105, 142, 153, 156, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 201, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 276, 315, 317, 320, 321, 322, 323, 364, 368, 370, 412, 429, 437, 447, 448, 458, 468, 471, 496, 556], "global_dataset": 465, "global_to_loc": 182, "glon": [41, 65, 66, 79, 364, 437, 461, 466, 474], "glon_pnt": [447, 473], "glossari": [384, 426, 494, 511], "glue": 498, "glueviz": 381, "gmodelspatialradialprofiledmburkert": 486, "gmodelspatialradialprofiledmeinasto": 486, "gmodelspatialradialprofiledmzhao": 486, "go": [50, 83, 86, 367, 374, 384, 389, 426, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 480, 482, 483, 484, 486, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 558], "goal": [369, 378, 392, 463], "goe": [41, 52, 354, 364, 383, 394, 451], "gogia": 422, "good": [78, 79, 82, 96, 119, 286, 290, 364, 369, 371, 372, 373, 374, 375, 378, 380, 381, 382, 384, 437, 439, 440, 443, 453, 454, 456, 457, 460, 462, 463, 465, 467, 469, 474, 475, 478, 520, 521, 557, 562], "googl": [83, 86, 384, 393], "got": 473, "gov": [58, 60, 61, 63, 140, 188, 384, 393, 537], "gp": [78, 79, 85, 365, 374, 380, 442, 445, 447, 458, 473, 475], "gpl3": 364, "gps_baseline_110380": [78, 79, 473], "gradient": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "grai": [355, 507, 534], "grand": 364, "grant": [367, 390], "granular": 454, "grayify_colormap": 383, "grb": [454, 457], "great": [369, 378, 383, 421, 478], "greater": [160, 357], "green": [96, 104, 105, 423, 448, 470, 471], "grei": 458, "grep": 399, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 120, 123, 144, 152, 154, 183, 184, 186, 188, 192, 195, 196, 210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263, 269, 357, 364, 375, 380, 407, 409, 463, 510, 511, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551], "gridsearch": [201, 463], "gridspec": 351, "gridspec_kw": [441, 447, 455, 457, 524], "ground": [90, 379, 473, 559], "group": [82, 83, 86, 87, 120, 121, 124, 125, 127, 141, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 291, 370, 379, 383, 384, 385, 388, 393, 396, 406, 409, 411, 415, 421, 424, 455, 457, 478, 496, 498, 512, 558], "group_1": 470, "group_2": 470, "group_bi": [83, 86, 388], "group_by_axi": 388, "group_by_label": [87, 470], "group_high_zenith": 470, "group_low_zenith": 470, "group_siz": [135, 456], "group_tabl": [82, 188, 193], "grouped_observ": 470, "grow": [372, 383, 423], "grown": 384, "gr\u00e9aux": 429, "gsfc": [58, 60, 61, 63, 140, 188, 384, 537], "gt": 464, "gtexpcube2": 474, "gti": [78, 79, 83, 84, 85, 95, 96, 97, 100, 104, 105, 117, 119, 121, 124, 157, 193, 251, 370, 373, 374, 377, 378, 379, 388, 407, 409, 410, 412, 425, 429, 430, 449, 456, 457, 462, 465, 473, 475, 476, 494, 498, 557], "gti_1": 495, "gti_2": 495, "gti_t0": 457, "gtimetadata": 391, "gtmktime": [374, 474], "gtobsim": 377, "gtol": 463, "gtpsf": [141, 142, 148, 153, 156, 188, 441, 474], "gtselect": [374, 474], "guarante": [372, 387, 389], "guess": [119, 182, 184, 430], "guid": [367, 380, 382, 396, 397, 398, 401, 424, 478, 498, 513, 523, 544, 554], "guidelin": [364, 368, 401, 423], "guiger": [31, 39], "gz": [58, 60, 61, 63, 64, 65, 78, 79, 82, 84, 86, 89, 97, 100, 104, 105, 109, 111, 112, 116, 121, 123, 127, 132, 133, 145, 217, 264, 352, 357, 359, 365, 386, 424, 437, 438, 441, 448, 449, 450, 451, 461, 462, 464, 466, 468, 469, 473, 474, 475, 480, 482, 483, 484, 495, 496, 498, 500, 501, 502, 504, 524], "h": [26, 65, 78, 82, 83, 86, 90, 122, 142, 183, 184, 186, 192, 195, 196, 276, 354, 384, 387, 396, 400, 401, 409, 424, 432, 433, 434, 437, 438, 440, 446, 448, 455, 456, 457, 460, 464, 465, 466, 469, 473, 474, 475, 477, 478, 480, 482, 483, 493, 495, 498, 511, 546, 547, 557, 558], "h0": 448, "h05": [45, 49], "h1": 448, "h_0": [448, 560], "h_1": [448, 560], "h_i": 122, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 76, 83, 86, 96, 97, 100, 104, 105, 116, 117, 119, 155, 177, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 204, 208, 209, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 262, 263, 264, 357, 359, 361, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 411, 412, 415, 417, 418, 424, 425, 426, 428, 429, 430, 434, 437, 438, 439, 443, 448, 450, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 473, 475, 476, 482, 494, 495, 498, 503, 507, 508, 510, 511, 515, 516, 543, 555, 558, 560], "habilit": 290, "hack": 420, "had": [364, 370, 372, 390, 412, 418, 422, 423], "hadron": [266, 370, 375, 443, 462, 473, 494, 507], "hajlaoui": [412, 415], "hal": 390, "half": [153, 156, 188, 194, 263], "halo": 486, "halv": [128, 281, 430], "halving_coord": 454, "halving_err": 454, "hand": [165, 364, 367, 372, 375, 384, 390, 392, 427, 463, 478, 498], "handbook": [384, 478], "handi": 445, "handl": [3, 16, 80, 99, 118, 190, 284, 363, 365, 368, 376, 377, 378, 380, 385, 387, 388, 391, 393, 396, 398, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 437, 439, 445, 446, 447, 449, 462, 464, 466, 468, 469, 474, 475, 478, 483, 484, 494, 495, 498, 557], "handler_map": 361, "hanna": 430, "hap": 380, "happen": [78, 367, 369, 371, 372, 378, 382, 394, 438, 468, 478, 482, 483, 494, 498, 560], "happi": [367, 371, 384, 404, 405, 424], "hard": [364, 365, 387, 392, 410, 471], "harder": [371, 558], "hardli": 391, "harri": [419, 420], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 201, 233, 266, 267, 276, 283, 384, 463], "has_any_t": [117, 119], "has_energy_axi": [181, 182, 191, 194], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [83, 86], "has_masked_valu": [83, 86], "has_mixin_column": [83, 86], "has_offset_axi": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155], "has_stat_profil": [117, 119], "has_success": [117, 119], "has_ul": [117, 119], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 364, "hasn": [369, 562], "hatch": 458, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 80, 83, 86, 90, 95, 99, 102, 106, 110, 117, 118, 119, 120, 124, 132, 133, 140, 141, 142, 151, 153, 156, 163, 165, 177, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 293, 317, 323, 361, 363, 364, 365, 366, 367, 369, 370, 371, 373, 375, 377, 378, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 409, 412, 415, 417, 418, 421, 423, 424, 425, 426, 427, 429, 430, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 456, 457, 458, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 478, 482, 483, 484, 486, 494, 495, 496, 498, 509, 510, 511, 521, 532, 555, 558, 561, 562], "haven": 400, "hawc": [55, 59, 62, 70, 73, 92, 401, 409, 415, 423, 426, 427, 429, 432, 477, 478, 493, 494, 495, 506, 510, 557], "hawc19_flux_point": [119, 446, 498], "hawc_crab": [119, 446, 498], "hd": 65, "hdr": 391, "hdr_dict": 391, "hdu": [65, 78, 79, 81, 82, 83, 84, 89, 97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 301, 350, 365, 374, 403, 418, 420, 423, 426, 427, 449, 464, 466, 473, 475, 476, 494, 495, 498, 500, 501, 502, 504, 511, 553], "hdu1": 140, "hdu2": 140, "hdu_al": 449, "hdu_band": [117, 119, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196], "hdu_class": [78, 83, 301, 473, 475, 476], "hdu_class_uniqu": 83, "hdu_evt": 449, "hdu_filenam": 475, "hdu_gti": 449, "hdu_hdu": 78, "hdu_index": 78, "hdu_list": [141, 142, 144, 148, 152, 153, 154, 156, 183, 184, 195, 196], "hdu_loc": 83, "hdu_nam": 301, "hdu_ob": 78, "hdu_out": [183, 184], "hdu_region": [191, 192], "hdu_tabl": [78, 475], "hdu_table_filenam": 78, "hdu_typ": [78, 83, 473, 475, 476], "hdu_type_uniqu": 83, "hduclas2": 464, "hduclas3": 464, "hduclas4": 464, "hduclasn": 464, "hduindext": [78, 301, 475], "hdulist": [97, 100, 102, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 449, 466, 494], "hduloc": [83, 97], "he": [266, 374, 379], "hea": 379, "header": [78, 79, 80, 81, 82, 83, 84, 86, 89, 95, 96, 97, 99, 100, 101, 102, 104, 105, 117, 118, 119, 140, 141, 142, 148, 153, 156, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 263, 303, 346, 347, 350, 369, 374, 377, 391, 409, 417, 419, 424, 426, 429, 439, 449, 450, 466, 473, 562], "healpi": [182, 363, 371, 373, 381, 395, 396, 398, 407, 415, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 509], "healpix": [13, 182, 183, 184, 186, 192, 195, 196, 363, 371, 373, 378, 415, 423, 466, 474, 510], "healpix_to_imag": 416, "heapsort": [83, 86], "heart": 560, "heasarc": [140, 188], "heatmap": [353, 358], "heavi": [424, 425], "heavier": 445, "heavili": 415, "hegra": [92, 267], "heidelberg": 364, "heidt": 454, "height": [16, 29, 83, 86, 89, 121, 326, 438, 442, 443, 445, 451, 455, 458, 460, 466, 467, 469, 482, 507, 511], "heighten": 454, "helen": 421, "hello": [400, 447], "help": [11, 83, 86, 278, 284, 364, 367, 369, 371, 378, 379, 380, 384, 390, 393, 394, 395, 400, 404, 405, 406, 423, 424, 426, 461, 465, 466, 468, 474, 476, 484, 498, 558], "helper": [13, 301, 306, 371, 373, 378, 379, 380, 383, 394, 400, 406, 407, 408, 409, 415, 417, 420, 422, 423, 429, 430, 451, 461, 467, 468, 507, 556, 563], "henc": [83, 86, 380, 442, 443, 496, 511, 560], "her": 393, "here": [13, 78, 79, 83, 86, 97, 104, 119, 134, 138, 143, 152, 201, 275, 277, 280, 352, 363, 364, 365, 366, 367, 370, 371, 376, 377, 378, 379, 380, 381, 382, 383, 384, 390, 391, 392, 394, 396, 398, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 470, 471, 473, 474, 475, 478, 482, 483, 484, 488, 494, 498, 503, 505, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 558, 559, 560, 562, 563], "hereaft": 449, "herebi": 471, "heritag": 390, "herm": [270, 272, 430], "hess": [16, 55, 65, 78, 79, 82, 84, 86, 91, 92, 96, 104, 105, 120, 125, 135, 136, 143, 145, 163, 169, 273, 291, 292, 365, 372, 373, 378, 380, 384, 393, 396, 400, 403, 405, 408, 419, 420, 423, 424, 432, 434, 435, 437, 438, 439, 443, 445, 447, 448, 456, 458, 460, 461, 462, 463, 465, 470, 471, 474, 476, 477, 480, 482, 483, 486, 495, 496, 498, 500, 501, 502, 504, 505, 507, 508], "hess2": [143, 500], "hess_dl3_dr1_obs_id_020136": [84, 145, 365, 500, 501, 502, 504], "hess_dl3_dr1_obs_id_023523": [79, 82, 495], "hess_dl3_dr1_obs_id_023526": 495, "hess_ecpl": [267, 437], "hess_pl": 267, "hessian": 496, "heterogen": [391, 435, 446], "hfm": 65, "hgp": [65, 76, 77, 116, 384, 409, 421, 423, 424, 493], "hgps_catalog_v1": 65, "hgps_sourc": 65, "hgpsc": [65, 461], "hi": [364, 422], "hi_bnd": 188, "hi_threshold": 140, "hidden": 375, "hide": [13, 369, 386], "hierarch": [13, 291, 332, 373, 375, 391, 430, 498, 510], "hierarchi": [291, 375, 408], "hierarchical_clust": [429, 470], "high": [6, 15, 58, 61, 62, 79, 140, 188, 316, 364, 368, 369, 370, 377, 378, 379, 384, 391, 407, 408, 409, 410, 411, 415, 423, 424, 432, 433, 435, 438, 441, 442, 445, 451, 453, 455, 460, 461, 462, 465, 467, 473, 474, 475, 476, 478, 483, 484, 485, 493, 496, 503, 510, 556, 557, 558, 559], "high_zenith": 470, "higher": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 227, 367, 370, 375, 380, 383, 385, 397, 435, 450, 454, 464, 466, 511], "highest": [132, 169, 454, 465, 473, 484], "highli": 469, "highlight": 558, "him": 393, "hint": [391, 441, 496], "hire": [144, 384, 488, 490, 491, 492, 494, 495, 500, 501, 502, 504, 507, 511, 560, 563], "hist": [79, 104, 105, 192, 196, 357, 440, 471], "histogram": [79, 104, 105, 188, 192, 196, 357, 429, 458, 511, 557], "histori": [378, 390, 426], "hli": [377, 410, 411, 415, 426, 432, 436, 478, 497, 557], "hli_spectrum_analysi": 438, "hline": 515, "hoc": 378, "hold": [67, 78, 85, 87, 91, 95, 151, 222, 293, 373, 374, 376, 379, 558, 560], "home": [16, 329, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 522, 524, 530, 533, 546, 552, 553], "homebrew": 381, "homework": 406, "homogen": [83, 86, 412], "honk": 369, "hood": [438, 478, 482], "hook": [367, 426], "hope": 369, "hopefulli": 371, "horizont": [81, 90, 146, 334, 464, 562], "host": 364, "hour": [65, 89, 367, 380, 394, 433, 461, 465, 466, 498], "hover": 365, "how": [16, 19, 20, 78, 79, 80, 81, 94, 99, 118, 119, 121, 123, 163, 184, 194, 196, 317, 323, 366, 369, 372, 376, 378, 380, 381, 383, 386, 387, 390, 391, 394, 395, 396, 400, 401, 404, 405, 406, 409, 410, 417, 419, 422, 423, 424, 429, 430, 433, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 461, 462, 463, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 482, 484, 486, 488, 494, 496, 499, 503, 507, 509, 510, 524, 556, 558, 559, 560, 562, 563], "howev": [83, 86, 116, 282, 363, 364, 365, 367, 371, 374, 377, 378, 382, 390, 392, 397, 434, 443, 451, 458, 460, 461, 462, 463, 471, 475, 476, 478, 494, 498, 510, 511, 516, 532, 558], "howto": [384, 426, 427], "hpx": [182, 183, 184, 186, 195, 196, 378, 415, 466, 474], "hpx2wc": [183, 184], "hpx_map": [183, 184], "hpx_pixel": 378, "hpx_reg": 182, "hpxgeom": [117, 181, 183, 184, 410, 415, 426, 474, 509], "hpxmap": [184, 186, 509], "hpxndmap": [259, 415, 509], "hpxsparsemap": 409, "hpxtowcsmap": [183, 184], "hr": [449, 450, 453, 457], "hspace": 460, "hspec": [419, 420, 421], "hst": 216, "hstack": [83, 86, 377], "html": [26, 79, 83, 86, 120, 140, 176, 182, 188, 191, 194, 201, 214, 236, 264, 293, 320, 321, 364, 365, 367, 372, 384, 389, 390, 394, 402, 423, 433, 440, 442, 445, 447, 453, 457, 463, 464, 473, 495, 501, 509, 511, 537], "htmlcov": 394, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 65, 79, 80, 83, 84, 86, 99, 112, 118, 120, 128, 134, 140, 143, 169, 176, 182, 188, 191, 194, 201, 214, 233, 236, 242, 243, 256, 257, 264, 266, 267, 276, 282, 283, 289, 293, 320, 321, 332, 367, 381, 384, 389, 390, 393, 394, 395, 396, 397, 398, 402, 406, 423, 433, 437, 440, 442, 445, 446, 447, 453, 457, 460, 461, 463, 464, 465, 473, 476, 495, 509, 511, 537, 541, 542, 558], "hubert": 424, "hue": 355, "huestart": 355, "huge": [394, 516], "hugovk": 405, "human": [345, 375, 394, 417, 438, 482], "hundr": 475, "hypercub": [466, 510, 511], "hypothes": [273, 429, 498, 560], "hypothesi": [117, 119, 120, 121, 124, 125, 273, 275, 277, 435, 441, 448, 496, 498, 557, 560], "hz": [323, 484], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 290, 291, 293, 295, 299, 301, 304, 305, 306, 311, 313, 314, 317, 320, 321, 322, 323, 325, 326, 331, 333, 335, 339, 341, 342, 346, 347, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 482, 483, 484, 486, 487, 488, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563], "i0": [83, 86], "i1": [83, 86], "i4": 451, "i8": [466, 484], "i_0": [183, 184, 186, 192, 195, 196], "i_hpx": [183, 184, 186, 192, 195, 196], "i_lat": [183, 184, 186, 192, 195, 196], "i_lon": [183, 184, 186, 192, 195, 196], "i_n": [183, 184, 186, 192, 195, 196], "i_scan": 471, "iact": [78, 79, 81, 89, 163, 166, 170, 370, 373, 374, 375, 376, 378, 380, 384, 401, 406, 420, 422, 424, 435, 441, 443, 465, 466, 468, 473, 474, 476, 495, 500, 501, 502, 504, 555, 557], "iactbasicimageestim": [370, 423], "iau": [52, 403, 407], "iau2015": 52, "ic": 534, "icon": 556, "icr": [79, 81, 84, 86, 89, 90, 91, 97, 100, 104, 105, 132, 153, 163, 166, 182, 183, 184, 186, 189, 191, 194, 195, 196, 210, 211, 215, 223, 226, 240, 248, 249, 291, 292, 327, 364, 365, 388, 408, 437, 438, 439, 440, 441, 443, 446, 447, 449, 450, 453, 455, 456, 457, 458, 461, 462, 464, 465, 466, 467, 469, 470, 473, 474, 475, 476, 482, 483, 495, 498, 502, 507, 511, 515, 516, 517, 519, 520, 521], "icrc": 419, "id": [65, 76, 78, 79, 83, 84, 86, 87, 107, 377, 380, 400, 438, 440, 449, 451, 453, 458, 461, 469, 473, 474, 475, 476, 482, 495], "id_obs_vela": 458, "idea": [369, 372, 379, 383, 384, 385, 438, 464, 470, 474, 482], "ideal": [366, 367, 374, 378, 379, 388, 392, 393, 435, 474], "idempot": [16, 80, 99, 118], "ident": [339, 367, 379, 426, 437, 439], "identif": [65, 370, 461], "identifi": [65, 84, 98, 103, 182, 251, 364, 374, 375, 377, 380, 389, 390, 394, 410, 441, 449, 454, 461, 462, 469, 473, 475, 497], "identified_object": 461, "idx": [79, 83, 86, 87, 95, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 236, 440, 449, 457, 461, 463, 466, 510], "idx1": 463, "idx2": 463, "idx_glob": 182, "idx_loc": 182, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 390, 468, 469, 494, 557], "iem": [468, 474], "iem_minus_iem": 466, "iem_plus_iem": 466, "iem_times_two": 466, "ignacio": 425, "ignasi": 419, "ignor": [11, 16, 80, 83, 86, 99, 118, 147, 157, 186, 204, 206, 222, 293, 305, 365, 417, 451, 457, 458, 462, 467, 482, 498, 558], "ii": [199, 421], "ij": 199, "ilist": 182, "illustr": [104, 105, 365, 374, 376, 377, 378, 380, 383, 439, 441, 446, 451, 462, 465, 466, 468, 469, 474, 488, 494, 507, 508, 515, 516, 524, 556], "illustrate_colormap": 383, "iloc": [83, 86], "im": [353, 463], "imag": [97, 100, 104, 105, 112, 122, 123, 132, 142, 143, 144, 150, 152, 153, 154, 156, 158, 168, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 263, 285, 288, 329, 350, 352, 353, 354, 355, 359, 364, 372, 373, 375, 380, 381, 384, 385, 394, 396, 401, 403, 404, 405, 408, 409, 410, 416, 420, 421, 422, 423, 424, 432, 442, 443, 445, 451, 452, 465, 467, 469, 473, 483, 484, 494, 495, 496, 503, 506, 507, 508, 509, 510, 511, 555, 556, 557, 563], "image_analysi": [384, 404], "image_err": 123, "image_fitting_with_sherpa": [384, 425], "image_pip": 423, "image_profil": 422, "imagehdu": [183, 184, 195, 196], "imagenorm": [354, 355], "imageprofil": 123, "images_t": 447, "imagin": 558, "img": [352, 466], "iminuit": [201, 363, 381, 390, 415, 417, 424, 428, 429, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 555], "immut": 214, "impact": [371, 377, 381, 475], "imperfect": 465, "implement": [19, 20, 97, 100, 104, 105, 134, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 276, 282, 364, 369, 370, 372, 373, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 391, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 422, 423, 425, 426, 429, 430, 434, 442, 454, 456, 460, 461, 465, 466, 467, 486, 494, 496, 498, 503, 504, 505, 543, 555, 556, 557, 558, 559, 562], "implent": 364, "impli": [227, 364, 383, 494, 557], "implic": 386, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 503], "implicitli": 465, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 64, 65, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 96, 97, 99, 100, 104, 105, 106, 109, 110, 111, 112, 116, 117, 118, 119, 121, 123, 125, 127, 132, 133, 135, 136, 138, 140, 142, 143, 144, 145, 151, 153, 163, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 205, 207, 208, 209, 212, 216, 218, 219, 220, 224, 228, 230, 231, 233, 234, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 267, 273, 276, 282, 283, 291, 292, 313, 323, 332, 343, 344, 349, 352, 354, 355, 357, 359, 365, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 399, 400, 411, 421, 423, 428, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 480, 482, 483, 484, 487, 488, 490, 491, 492, 494, 495, 496, 498, 500, 501, 502, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 558, 559, 560, 562], "importantli": [388, 424, 434, 558], "importerror": [83, 86], "impos": [428, 433, 507], "improv": [103, 273, 366, 368, 369, 370, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 389, 394, 395, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 466, 473, 498, 508, 515], "imshow": [97, 100, 151, 184, 196, 352, 358, 422, 466, 484], "in2p3": [390, 473], "in_memori": [84, 498], "in_memory_gener": 87, "in_safe_data_rang": [97, 100, 104, 105], "inaccur": 364, "incex": [16, 80, 99, 118], "incid": [370, 557], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 78, 79, 80, 83, 84, 86, 99, 118, 124, 151, 157, 159, 160, 166, 167, 171, 181, 182, 191, 194, 237, 301, 363, 364, 370, 372, 375, 376, 377, 378, 380, 381, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 405, 407, 412, 423, 428, 429, 430, 433, 446, 448, 449, 451, 457, 460, 461, 463, 465, 467, 468, 469, 473, 475, 486, 488, 494, 496, 497, 508, 510, 555, 559, 562], "include_irf": [79, 84, 495], "include_ssc": 237, "inclus": [79, 191, 378], "incompat": [364, 389, 417], "incomplet": [364, 394, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "inconsist": [412, 418, 428, 429], "inconveni": [383, 424], "incorpor": [380, 384, 392, 557], "incorrect": [79, 364, 391, 399, 408, 426, 427, 465, 471], "incorrectli": [426, 467], "increas": [132, 158, 188, 193, 215, 223, 226, 364, 373, 391, 456, 465, 494, 515], "increment": [19, 20, 26, 112, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 378, 466, 510], "ind": [182, 194, 214, 236], "inde": [449, 516], "indefinit": 371, "indent": [16, 80, 99, 118], "independ": [65, 120, 124, 134, 290, 304, 364, 370, 374, 375, 376, 377, 378, 379, 382, 385, 386, 387, 388, 390, 396, 405, 415, 433, 438, 455, 461, 466, 467, 468, 469, 475, 482, 483, 493, 498, 503, 557, 561], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 95, 96, 97, 100, 104, 105, 116, 117, 119, 120, 121, 125, 126, 127, 131, 140, 141, 142, 148, 151, 153, 156, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 201, 205, 207, 208, 209, 212, 214, 216, 218, 219, 220, 224, 230, 231, 233, 234, 236, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 267, 276, 301, 315, 320, 367, 370, 373, 374, 375, 376, 379, 380, 387, 388, 389, 393, 396, 406, 420, 422, 423, 429, 430, 434, 435, 437, 438, 440, 441, 442, 445, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 461, 462, 463, 464, 468, 469, 473, 474, 475, 476, 482, 483, 484, 496, 509, 510, 511, 514, 515, 516, 517, 519, 520, 521, 522, 524, 526, 528, 529, 530, 535, 536, 537, 545, 546, 547, 548, 549, 550, 551, 552, 553], "index1": [208, 252, 525, 539], "index2": [208, 252, 525, 539], "index_1": [255, 256, 257, 540, 541, 542], "index_2": [255, 256, 257, 540, 541, 542], "index_arrai": [83, 86], "index_column": [83, 86], "index_data": 187, "index_error": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "index_mod": [83, 86], "index_scan": 471, "indexerror": [87, 95, 236], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 95, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 364, 426, 440, 450, 454, 465, 466, 470, 471, 475, 476, 498, 510, 511, 557], "indico": 373, "indirect": [460, 486], "individu": [83, 86, 103, 114, 122, 360, 370, 376, 377, 379, 384, 387, 388, 392, 434, 437, 440, 448, 451, 456, 461, 462, 463, 465, 468, 469, 484, 494, 498, 503, 557], "indiviud": 386, "indxschm": [183, 184, 195, 196], "ineffici": [83, 86, 367], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [65, 226, 392, 471], "infer": [117, 119, 181, 182, 183, 184, 186, 194, 195, 196, 216, 365, 482, 510], "inferno": 466, "infil": 364, "infin": 471, "influenc": 471, "info": [16, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 89, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 144, 150, 152, 154, 275, 277, 301, 365, 379, 380, 384, 393, 399, 409, 410, 412, 419, 420, 423, 438, 442, 443, 445, 449, 456, 460, 461, 462, 466, 474, 475, 476, 478, 480, 482, 558], "info_dict": [97, 100, 104, 105, 275, 277, 357, 412, 430, 462], "info_t": [95, 434, 437, 438, 440, 445, 457, 462, 468, 498], "infodict": 357, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 84, 86, 89, 94, 95, 96, 97, 99, 100, 104, 105, 117, 118, 119, 140, 144, 150, 152, 154, 155, 158, 163, 164, 170, 189, 201, 208, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 243, 244, 248, 249, 250, 252, 255, 256, 257, 259, 260, 263, 264, 278, 284, 301, 317, 346, 347, 364, 368, 369, 374, 376, 377, 378, 379, 380, 387, 388, 391, 392, 394, 399, 400, 401, 409, 411, 412, 415, 417, 423, 429, 430, 435, 438, 439, 446, 449, 450, 453, 454, 462, 463, 465, 466, 469, 473, 474, 475, 476, 482, 483, 484, 493, 494, 495, 496, 498, 511, 557, 558, 561], "infrar": 216, "infrastructur": [394, 415, 426, 429], "ingredi": [388, 460], "inherit": [83, 86, 276, 364, 374, 376, 379, 388, 391, 392, 410, 415, 422, 462, 464, 509, 510], "init": [19, 20, 26, 83, 86, 116, 121, 127, 160, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 305, 317, 376, 412, 427, 429, 430, 451, 461, 462, 484], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 63, 80, 83, 86, 99, 117, 118, 119, 127, 184, 187, 188, 214, 236, 238, 239, 293, 369, 374, 375, 376, 380, 417, 433, 440, 443, 445, 446, 448, 449, 450, 453, 458, 461, 462, 466, 469, 482, 483, 484, 493, 495, 543, 557], "initialis": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 276, 315, 317, 320, 321, 322, 323, 364, 386, 471], "inject": [440, 453], "inlin": [369, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 466, 467, 468, 469, 473, 474, 476, 482, 483, 484], "inner": [44, 52, 53, 121, 158, 168, 249, 443, 484, 521], "inner_height": [507, 511], "inner_width": [507, 511], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 80, 82, 83, 86, 97, 99, 100, 103, 112, 114, 116, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 133, 136, 141, 142, 144, 151, 152, 153, 154, 155, 156, 158, 160, 164, 166, 168, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 205, 207, 214, 228, 236, 262, 263, 264, 276, 293, 304, 314, 317, 334, 336, 357, 359, 370, 372, 374, 375, 376, 377, 378, 379, 380, 385, 400, 410, 415, 418, 425, 429, 440, 449, 450, 458, 466, 471, 496, 510, 511, 559], "input_map": [106, 110], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 429, "insensit": 190, "insert": [83, 86, 87, 95, 236, 390, 410, 561], "insert_row": [83, 86], "inset": 416, "insid": [50, 79, 97, 104, 109, 111, 140, 166, 182, 183, 184, 186, 191, 194, 195, 196, 214, 236, 251, 353, 357, 364, 365, 378, 380, 388, 415, 433, 437, 440, 442, 445, 447, 453, 457, 462, 465, 467, 468, 469, 473, 475, 495, 505, 507, 508, 511], "inside_geom": 467, "insight": 399, "inspect": [376, 380, 400, 437, 439, 445, 449, 450, 463, 466, 468, 473, 474], "inspir": [364, 388], "instal": [83, 86, 363, 364, 367, 371, 372, 373, 381, 393, 394, 395, 398, 400, 401, 404, 405, 415, 419, 422, 423, 424, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 478, 482, 483, 484, 498, 558], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 80, 81, 82, 83, 84, 86, 87, 99, 114, 118, 119, 120, 122, 124, 125, 155, 157, 165, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 311, 317, 351, 353, 354, 355, 358, 360, 364, 370, 375, 376, 379, 380, 386, 388, 391, 415, 435, 437, 440, 451, 461, 463, 465, 467, 468, 469, 484, 488, 498, 510, 511, 534], "instanti": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 183, 184, 186, 188, 195, 196, 375, 380, 434, 438, 461, 462, 466, 469, 471, 482], "instead": [16, 19, 20, 26, 80, 81, 83, 86, 97, 99, 100, 104, 105, 108, 118, 170, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 364, 365, 367, 369, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 395, 396, 398, 405, 408, 411, 412, 425, 429, 439, 445, 449, 453, 455, 457, 458, 461, 462, 464, 465, 466, 469, 471, 495, 502, 503, 510, 511, 558], "instruct": [364, 373, 381, 393, 395, 396, 404, 415, 419, 423, 449, 473], "instrument": [6, 79, 90, 103, 143, 147, 148, 222, 364, 374, 375, 376, 377, 379, 384, 388, 396, 400, 409, 412, 424, 425, 426, 432, 434, 435, 437, 438, 441, 445, 452, 458, 462, 463, 464, 465, 468, 469, 470, 471, 473, 474, 476, 478, 482, 483, 494, 495, 496, 500, 502, 504, 555, 556, 557], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 78, 79, 80, 81, 83, 84, 86, 88, 89, 97, 98, 99, 100, 103, 104, 105, 107, 112, 114, 118, 119, 120, 121, 124, 125, 127, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 163, 166, 170, 171, 176, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 269, 271, 273, 275, 276, 277, 281, 282, 283, 289, 293, 304, 305, 311, 315, 317, 320, 321, 322, 323, 325, 326, 351, 357, 364, 378, 422, 443, 463, 488], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 208, 209, 212, 216, 218, 219, 220, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 503, 515], "int_flux": 460, "integ": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 86, 87, 88, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 127, 132, 133, 141, 142, 148, 153, 156, 159, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 205, 207, 214, 236, 293, 311, 317, 364, 370, 378, 443, 510], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 97, 100, 104, 105, 117, 119, 122, 124, 131, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 158, 183, 184, 186, 188, 192, 195, 196, 197, 198, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 269, 304, 363, 371, 373, 375, 377, 378, 379, 381, 382, 384, 388, 390, 403, 405, 406, 410, 411, 415, 420, 421, 422, 423, 424, 425, 426, 429, 437, 439, 440, 442, 457, 460, 461, 462, 466, 467, 469, 484, 486, 494, 496, 502, 517, 537], "integral_error": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 382, 412], "integral_flux_imag": 416, "integrate_geom": [210, 211, 215, 223, 226, 238, 240, 248, 249, 251, 253, 259, 263, 415, 428, 430], "integrate_log_log": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155], "integrate_spectrum": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 406, 412], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [83, 86, 293, 374, 392, 464], "intens": [183, 184, 186, 192, 195, 196, 201, 227, 374, 466, 494], "intent": 369, "interact": [19, 20, 83, 86, 153, 156, 183, 184, 186, 192, 195, 196, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 363, 364, 365, 373, 374, 375, 376, 380, 384, 387, 400, 409, 445, 453, 463, 466, 468, 469, 478, 482, 483, 507, 510, 534, 558], "interchang": 510, "interest": [109, 111, 120, 124, 201, 273, 369, 377, 378, 382, 384, 394, 435, 445, 449, 451, 461, 462, 463, 465, 467, 470, 473, 474, 484, 495, 496, 534, 557, 560, 561], "interfac": [6, 11, 15, 19, 20, 83, 86, 199, 201, 204, 205, 206, 207, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 368, 369, 370, 374, 376, 377, 379, 381, 382, 383, 384, 405, 408, 410, 411, 412, 415, 419, 422, 423, 429, 432, 438, 441, 442, 445, 453, 455, 463, 469, 473, 478, 483, 484, 485, 498, 509, 534, 555, 556, 557, 558], "intermedi": [194, 373, 380, 390, 400, 434, 456], "intern": [15, 19, 20, 26, 83, 86, 117, 119, 128, 129, 130, 160, 166, 191, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 269, 293, 305, 364, 376, 378, 380, 383, 388, 415, 417, 426, 429, 433, 438, 445, 454, 455, 462, 464, 466, 473, 476, 482, 494, 498, 553], "interp": [19, 20, 145, 183, 184, 186, 188, 192, 193, 195, 196, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 306, 359, 387, 392, 428, 430, 440, 446, 450, 453, 457, 464, 465, 466, 469, 474, 475, 476, 510, 511, 534, 535], "interp1": 466, "interp1d": 306, "interp2": 466, "interp_by_coord": [183, 184, 186, 192, 195, 196, 263, 426, 466], "interp_by_pix": [183, 184, 186, 192, 195, 196, 259, 260, 466], "interp_kwarg": [66, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 216, 259, 260, 263, 264, 364, 464, 474], "interp_map": [183, 184, 186, 192, 195, 196], "interp_missing_data": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155], "interp_param": 364, "interp_scal": [274, 306], "interp_to_geom": [183, 184, 186, 192, 195, 196, 412, 428, 466, 474, 498], "interp_weight": 182, "interpol": [6, 26, 89, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 163, 182, 183, 184, 186, 188, 192, 193, 195, 196, 216, 228, 238, 239, 259, 260, 262, 263, 264, 274, 305, 306, 307, 363, 375, 376, 377, 405, 410, 415, 417, 420, 423, 425, 426, 427, 428, 429, 430, 450, 464, 465, 469, 474, 475, 498, 506, 510, 543], "interpolatedunivariatesplin": 262, "interpret": [86, 97, 100, 122, 132, 133, 184, 188, 194, 195, 196, 311, 382, 392, 466, 496, 511], "intersect": [85, 166, 167, 171, 191, 378, 456], "interspers": 369, "interstellar": [45, 449], "interv": [52, 53, 74, 78, 79, 82, 84, 85, 86, 87, 95, 96, 98, 103, 119, 124, 164, 188, 193, 201, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 373, 374, 378, 379, 382, 388, 396, 409, 411, 412, 415, 424, 425, 430, 455, 457, 463, 466, 475, 483, 495, 510, 557, 560], "interval_edg": 193, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 237, 283, 375, 379], "intro_map": 424, "introduc": [19, 20, 183, 184, 186, 188, 192, 195, 196, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 364, 371, 372, 374, 376, 377, 378, 379, 381, 384, 386, 389, 392, 406, 408, 409, 411, 412, 415, 417, 418, 422, 423, 424, 426, 429, 430, 448, 454, 465, 469, 511, 516, 558, 561], "introduct": [367, 385, 386, 387, 405, 409, 410, 411, 412, 435, 438, 469, 475, 476, 482, 483, 487], "introductori": 454, "introspect": 293, "intuit": [385, 561], "invalid": [350, 364, 378, 391, 392, 415, 449, 476], "invalid_pixel": 467, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 208, 209, 212, 216, 218, 219, 220, 224, 227, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 275, 276, 277, 315, 322, 377, 449, 467, 469, 471, 534], "inverse_al": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "inverse_cdf": 449, "inversecdf": 377, "inversecdfsampl": [377, 407], "inversecompton": [237, 534], "invert": [86, 182, 194, 484], "invest": 367, "investig": 448, "involv": [83, 86, 97, 100, 104, 105, 364, 369, 378, 380, 382, 386, 441, 558], "io": [13, 79, 82, 83, 86, 120, 176, 186, 191, 201, 264, 367, 373, 384, 394, 406, 409, 421, 425, 429, 449, 463, 464, 466, 473, 495, 498, 509, 511], "iop": 282, "iopscienc": 282, "ipix": 182, "ipynb": [372, 384, 406, 409, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 480, 482, 483, 484, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "ipynb_to_galleri": 364, "ipython": [83, 86, 363, 364, 380, 381, 395, 399, 407, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 478, 482, 483, 484, 497, 558], "ipython3": 397, "ipywidget": 466, "irap": 384, "irf": [6, 78, 84, 91, 97, 98, 100, 103, 104, 105, 106, 107, 108, 110, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 169, 170, 172, 173, 174, 176, 178, 179, 182, 191, 194, 251, 292, 364, 365, 370, 374, 375, 376, 377, 380, 383, 384, 385, 386, 392, 396, 404, 406, 409, 411, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 434, 435, 437, 438, 439, 440, 441, 442, 445, 449, 450, 453, 455, 457, 465, 467, 470, 471, 472, 474, 475, 476, 478, 482, 483, 494, 495, 498, 500, 501, 502, 504, 505, 510, 555, 556, 557], "irf_dict": 157, "irf_dl3_hdu_specif": 464, "irf_fil": [84, 138, 142, 143, 144, 153, 433, 440, 453, 457, 464, 473], "irf_filenam": [449, 450, 464, 473], "irf_map": [141, 142, 148, 153, 156], "irf_path": 449, "irfmap": [141, 142, 153, 156, 396, 412, 498], "irfmetadata": 391, "irfmodel": 375, "irfs1": 473, "irfs2": 473, "irfs_path": 78, "irfstack": [412, 421], "irregular": [182, 194, 510], "irrespect": [377, 445, 466, 510], "is_align": [182, 188, 193, 194], "is_all_point_sky_region": 191, "is_all_same_energy_shap": 95, "is_all_same_shap": 95, "is_all_same_typ": 95, "is_allclos": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196], "is_allski": [181, 182, 191, 194], "is_bkg": 102, "is_contigu": [193, 466], "is_convertible_to_flux_sed_typ": [117, 119], "is_energy_axi": 188, "is_energy_depend": [210, 211, 213, 215, 221, 223, 225, 226, 227, 228, 229, 238, 240, 244, 248, 249, 250, 253, 259, 262, 263, 265, 428, 469], "is_fixed_rad_max": 155, "is_flat": [181, 182, 187, 191, 194], "is_hpx": [182, 191, 194], "is_imag": [181, 182, 191, 194], "is_mask": [183, 184, 186, 192, 195, 196], "is_norm": [19, 20, 96, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 392, 417, 430, 434, 437, 438, 439, 440, 442, 445, 446, 453, 457, 461, 463, 469, 483, 484, 534, 543], "is_norm_spectral_model": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 415, 469], "is_nul": 466, "is_pointed_observ": 79, "is_pointlik": [69, 71, 72, 73, 74, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 415], "is_region": [182, 191, 194], "is_regular": [182, 191, 194], "is_ul": [65, 117, 119, 415, 430, 461, 484], "is_unidimension": 187, "isf": [463, 560], "isinst": [364, 375, 378, 387, 391, 392], "ism": [52, 53, 534], "isn": [367, 371, 378, 380, 383, 394, 447, 558], "isnan": [466, 467], "iso": [84, 119, 193, 198, 429, 457, 468, 474, 510, 552], "iso_p8r2_source_v6_v06": [468, 474], "isol": [378, 395, 467], "isot": [345, 562], "isotherm": [22, 486], "isotrop": [47, 211, 268, 468], "issu": [19, 20, 26, 83, 86, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 364, 365, 367, 372, 373, 375, 376, 378, 381, 384, 389, 390, 391, 392, 393, 396, 397, 398, 405, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 447, 467, 473, 494, 498, 558, 559], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 95, 190, 236, 384, 391], "iter": [83, 86, 87, 95, 117, 119, 183, 184, 186, 187, 188, 190, 192, 193, 195, 196, 236, 367, 370, 372, 380, 416, 441, 457], "iter_by_axi": [117, 119, 183, 184, 186, 192, 195, 196], "iter_by_axis_data": 192, "iter_by_coord": 407, "iter_by_edg": [188, 193], "iter_by_imag": [183, 184, 186, 192, 195, 196, 424], "iter_by_image_data": [183, 184, 186, 192, 195, 196, 466], "iter_by_image_index": [183, 184, 186, 192, 195, 196], "iter_by_pix": 407, "iter_with_reshap": 187, "itercol": [83, 86], "iterrow": [83, 86], "itertool": 463, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 117, 119, 159, 160, 169, 182, 188, 190, 208, 209, 212, 215, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 273, 364, 367, 370, 373, 374, 376, 379, 380, 381, 383, 388, 390, 391, 394, 397, 415, 429, 430, 434, 438, 439, 442, 449, 450, 454, 455, 456, 461, 463, 465, 466, 467, 468, 469, 471, 482, 484, 487, 503, 505, 507, 509, 510, 511, 557, 560], "itself": [83, 86, 363, 364, 379, 390, 434, 455, 456, 458, 471, 558], "ivoa": 430, "j": [19, 20, 23, 97, 104, 122, 134, 276, 365, 367, 494], "j0001": [461, 484], "j0002": [461, 484], "j0003": [461, 484], "j0006": 461, "j0007": 484, "j0008": [461, 484], "j0009": 484, "j0010": 461, "j0013": 461, "j0021": 461, "j0022": 461, "j0025": 461, "j0031": 461, "j0349": 461, "j0521": 437, "j0534": [461, 484], "j0633": 484, "j0835": [435, 484], "j0851": 461, "j1036": 461, "j1104": [461, 484], "j1506": 435, "j1507": 435, "j1513": 461, "j1514": 461, "j1555": 484, "j1653": 461, "j1713": 434, "j1731": 468, "j1732": 468, "j1741": 468, "j1744": 468, "j1745": 468, "j1746": 468, "j1747": 468, "j1748": 468, "j1753": 468, "j1800": 468, "j1801": 468, "j1802": 468, "j1809": 468, "j1811": 468, "j1824": 461, "j1825": 448, "j1843": 65, "j1844": 65, "j2028": 461, "j2158": 461, "j2347": 484, "j2350": 484, "j2351": 484, "j2352": 484, "j2356": 484, "j2357": [461, 484], "j2358": [461, 484], "j2359": [461, 484], "j_": 23, "jackson": [83, 86], "jacob": [405, 424], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 411], "jalel": [412, 415], "jan": [369, 370, 373, 376, 381, 385, 402], "jana": 430, "januari": [371, 373, 389], "jargon": 396, "jason": 405, "javascript": [83, 86], "jax": 382, "jbernet": 430, "jean": [423, 424], "jeffrei": 471, "jeltema": 486, "jep": 369, "jet": 355, "jfact": 460, "jfact_decai": 460, "jfact_map": 460, "jfactor": [19, 20, 429], "jfactori": 460, "jj": 199, "jk": [97, 104, 494], "jkl": 494, "jl": 494, "jo": [83, 86], "job": [88, 120, 121, 124, 127, 159, 417], "johann": [408, 415, 419, 420, 421, 422, 423, 424], "john": [83, 86], "join": [366, 375, 376, 473], "joint": [95, 104, 105, 114, 125, 134, 136, 273, 372, 373, 376, 380, 384, 386, 396, 405, 406, 408, 409, 424, 425, 432, 434, 435, 437, 438, 439, 441, 448, 452, 457, 462, 463, 465, 469, 470, 471, 474, 478, 482, 496, 498, 555, 556, 557], "joint_fit": 458, "joint_result": 458, "jointli": [470, 475], "jonathan": [419, 420], "jose": [415, 417, 423], "joshi": 415, "jos\u00e9": [372, 380, 384, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 423, 424, 425], "journal": 390, "jouvin": [405, 407, 408, 409, 412, 420, 421, 422, 423, 424], "jqueri": [83, 86], "jskwarg": [83, 86], "json": [16, 80, 99, 118, 393, 417, 419, 423], "json_data": [16, 80, 99, 118], "json_encod": 16, "json_schema": [16, 80, 99, 118], "jsonschema": [381, 408, 409], "jsviewer": [83, 86, 447], "juan": 430, "jul": [370, 379, 381, 383, 402], "juli": [370, 373, 378, 380, 381, 383, 387, 389, 391, 456], "julia": 430, "julian": 562, "julien": [421, 422, 423], "jun": [378, 380, 381, 386, 387], "june": [378, 382, 402], "junior": [64, 384], "jupyt": [363, 371, 380, 381, 384, 395, 396, 398, 399, 401, 406, 421, 422, 423, 425, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 558], "jupyterlab": [363, 381, 384, 400, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "jupytext": 384, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 82, 143, 339, 364, 365, 366, 367, 369, 372, 374, 378, 380, 381, 382, 384, 393, 394, 395, 397, 423, 425, 437, 438, 440, 445, 447, 449, 454, 455, 456, 458, 462, 466, 474, 475, 482, 484, 495, 511, 558], "juypter": 380, "jyear": [83, 86], "k": [19, 33, 52, 53, 97, 104, 190, 212, 262, 317, 435, 437, 439, 461, 463, 466, 468, 474, 494, 511, 515, 527, 534, 545], "kai": [423, 424], "kaori": 407, "kaspi": [31, 39, 45], "katrin": [392, 428, 429, 430], "kb": 372, "keep": [13, 83, 86, 95, 117, 151, 183, 184, 186, 192, 195, 196, 201, 364, 365, 367, 369, 370, 371, 372, 378, 381, 382, 383, 384, 387, 388, 413, 423, 442, 443, 448, 453, 463, 468, 474], "keep_byteord": [83, 86], "keep_column": [83, 86], "keep_mc_id": [98, 103], "keepdim": [151, 153, 156, 183, 184, 186, 192, 195, 196, 404, 409, 465], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 78, 80, 83, 85, 86, 97, 99, 100, 104, 105, 112, 118, 127, 134, 190, 201, 333, 350, 372, 374, 381, 386, 388, 391, 401, 424, 462, 469, 524], "kept": [85, 97, 100, 104, 105, 117, 119, 120, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 364, 370, 384, 388, 496], "kernel": [97, 100, 104, 105, 112, 116, 122, 123, 127, 140, 141, 142, 151, 153, 156, 158, 163, 168, 170, 173, 184, 194, 196, 370, 391, 410, 411, 416, 421, 425, 426, 441, 443, 458, 465, 466, 467, 474, 484, 494, 498, 502], "kernel_width": [127, 441, 447], "kernelbackgroundestim": 411, "kernelbackgroundmapestim": 385, "kev": [102, 127, 188, 441, 462, 511], "keyboard": 400, "keyerror": [86, 190, 388], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 78, 79, 80, 82, 83, 84, 86, 90, 96, 97, 99, 100, 104, 105, 118, 119, 121, 122, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 201, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 274, 276, 305, 313, 314, 333, 345, 347, 348, 351, 352, 353, 357, 358, 359, 360, 361, 391, 411, 415, 418, 426, 427, 439, 449, 450, 462, 466, 475, 496, 511, 522], "kg": 52, "khelifi": [407, 409, 412, 415, 418, 422, 423, 424, 426, 427], "kh\u00e9lifi": [390, 426, 428, 429, 430], "kind": [83, 86, 264, 339, 375, 376, 377, 382, 383, 387, 390, 424], "kinet": 44, "king": [152, 408, 419, 420, 421, 422, 423, 424, 464, 504], "kirsti": [428, 429, 430], "kl": 494, "klepser": 419, "km": [32, 37], "km2": 473, "km2a": [57, 68], "know": [365, 367, 369, 373, 378, 380, 381, 388, 394, 406, 423, 424, 425, 447, 450, 460, 464, 465, 466, 473, 475, 476, 558], "knowledg": [392, 400, 435, 440, 446, 448, 451, 453, 455, 463, 465, 466, 468, 471], "known": [275, 277, 293, 377, 437, 441, 443, 448, 455, 465, 466, 467, 484, 498, 508, 558, 559, 560], "koenig": 276, "konig": 276, "konrad": 430, "kornecki": 430, "kovalev": 454, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 237, 293, 296, 460, 461, 492, 534], "kurt": 430, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 79, 82, 83, 84, 86, 96, 97, 100, 104, 105, 119, 120, 121, 122, 124, 135, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 165, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 274, 305, 316, 339, 351, 352, 353, 356, 358, 359, 360, 361, 364, 375, 391, 392, 428, 435, 449, 458, 465, 476, 546], "kwargs_ax": [357, 443, 445], "kwargs_background": [104, 105], "kwargs_colorbar": [137, 138, 140, 143, 144, 145, 150, 152, 154, 196, 352], "kwargs_count": [104, 105], "kwargs_excess": [104, 105], "kwargs_extens": [210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263, 448], "kwargs_fit": [104, 105, 357], "kwargs_fp": 96, "kwargs_hist": [357, 443, 445], "kwargs_list": 190, "kwargs_model": 96, "kwargs_npred_sign": [104, 105], "kwargs_point": [191, 214, 236, 439], "kwargs_posit": [210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263, 448], "kwargs_residu": [96, 104, 105], "kwargs_saf": [104, 105], "kwargs_spati": [97, 100, 104, 105, 445, 483], "kwargs_spectr": [97, 100, 104, 105, 445, 483], "kwargs_spectrum": [96, 104, 105], "l": [23, 26, 51, 54, 96, 97, 104, 105, 163, 361, 365, 378, 387, 390, 434, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 453, 457, 458, 461, 462, 463, 465, 466, 467, 469, 470, 471, 473, 474, 482, 483, 484, 494, 498, 511, 534, 557, 559, 560, 561], "l06": [48, 488], "l_": [52, 53], "l_0": [51, 491, 515, 516], "l_snr": 44, "la": 421, "lab": [390, 400, 423], "label": [87, 185, 188, 193, 214, 236, 291, 352, 353, 358, 361, 364, 365, 368, 373, 377, 378, 393, 394, 415, 417, 426, 427, 429, 433, 435, 437, 439, 443, 445, 446, 450, 451, 454, 455, 456, 458, 460, 463, 466, 469, 470, 471, 484, 491, 492, 500, 524, 530, 533, 534, 538], "label_axi": [185, 466], "label_axis2": 466, "labelcolor": 433, "labelmapaxi": [415, 429], "lack": [190, 379, 458], "lafferti": [403, 557], "lafferty1994": 557, "lai": 467, "lambda": [16, 65, 219, 220, 276, 357, 461, 463, 473, 528, 560], "lambda_": [219, 220, 273, 435, 437, 445, 528, 530], "lancast": 134, "land": 394, "langl": 19, "languag": [371, 383], "laplac": [226, 517], "lar": [380, 404, 405, 406, 422, 423, 424, 427, 429], "larg": [65, 83, 86, 183, 184, 186, 192, 195, 196, 259, 261, 263, 364, 367, 369, 370, 378, 384, 385, 405, 415, 424, 425, 430, 433, 437, 443, 456, 461, 467, 473, 474, 475, 484, 494, 496, 498, 499, 511, 517, 555, 558, 563], "large_scale_compon": [65, 461], "larger": [27, 126, 273, 282, 365, 372, 383, 429, 433, 434, 437, 462, 465, 466, 467, 471, 495, 511, 517, 559, 560], "largest": [97, 100, 104, 105, 196, 364], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 89, 95, 183, 184, 185, 186, 188, 192, 195, 196, 236, 323, 361, 371, 374, 376, 386, 390, 393, 394, 396, 398, 404, 405, 454, 507], "lat": [16, 47, 58, 60, 61, 63, 67, 69, 71, 72, 74, 79, 82, 86, 89, 91, 97, 100, 104, 106, 110, 116, 120, 121, 123, 127, 141, 142, 148, 153, 156, 159, 183, 184, 186, 189, 192, 194, 195, 196, 210, 211, 215, 222, 223, 226, 238, 240, 248, 249, 251, 253, 259, 261, 263, 268, 273, 295, 296, 299, 321, 364, 365, 372, 373, 374, 375, 376, 377, 383, 384, 387, 394, 396, 401, 404, 409, 422, 423, 424, 432, 435, 438, 441, 442, 443, 445, 447, 451, 455, 456, 461, 462, 464, 465, 466, 467, 468, 469, 470, 477, 478, 482, 483, 484, 486, 493, 494, 495, 496, 498, 503, 510, 511, 515, 516, 517, 518, 519, 520, 521, 555, 562], "lat_0": [215, 223, 226, 240, 248, 249, 263, 379, 387, 442, 445, 446, 448, 449, 450, 453, 455, 461, 462, 468, 469, 474, 482, 483, 515, 516, 517, 519, 520, 521, 522], "lat_0_err": 448, "lat_pnt": [295, 299], "lat_rang": 321, "lat_t": [295, 299], "later": [364, 369, 370, 371, 375, 376, 377, 380, 381, 382, 383, 384, 385, 403, 405, 415, 416, 418, 419, 425, 437, 439, 445, 446, 462, 465, 466, 469, 474, 484, 494], "latest": [120, 176, 264, 293, 367, 371, 384, 389, 390, 397, 426, 433, 440, 442, 445, 446, 447, 453, 457, 463, 473, 495, 511], "latex": [364, 365], "latex_inlin": 429, "latitud": [89, 181, 182, 183, 184, 189, 191, 194, 195, 196, 321, 351, 408, 451, 466, 469, 503, 510, 518], "latpol": 466, "latter": [170, 201, 375, 377, 379, 385, 388, 391, 409, 439, 440, 449, 450, 453, 467, 468, 505, 507, 557, 559], "launch": [423, 558], "laura": [412, 415, 417, 418, 424, 426, 428, 429, 430], "law": [27, 96, 116, 117, 119, 121, 126, 131, 151, 153, 156, 208, 218, 219, 220, 241, 242, 243, 244, 252, 255, 256, 257, 266, 276, 320, 377, 403, 409, 423, 432, 440, 442, 445, 449, 451, 453, 456, 457, 458, 468, 469, 471, 498, 512, 524, 544, 550], "law2": 537, "layer": [83, 86, 376, 383], "layout": [415, 445, 453, 466, 482, 483], "lazi": [84, 95, 97, 100, 104, 105, 261, 302, 423, 498], "lazili": 97, "lazyfitsdata": 411, "lc": [82, 124, 193, 377, 379], "lc_1d": [117, 119, 135, 454, 455, 456, 457], "lc_3d": 455, "lc_estim": 379, "lc_maker_1d": [455, 456, 457], "lc_maker_3d": 455, "lc_new": 456, "lea": 412, "lead": [116, 364, 373, 378, 383, 385, 387, 389, 390, 408, 471, 473, 475, 486, 558], "leak": [439, 507], "leakag": 455, "learn": [138, 143, 364, 381, 384, 393, 396, 398, 400, 424, 435, 437, 441, 447, 448, 449, 451, 454, 461, 462, 463, 466, 469, 471, 473, 478, 484, 558], "least": [43, 44, 364, 367, 369, 373, 449, 454, 510], "leav": [369, 376, 378, 379, 381, 384, 393, 395, 468], "lefaucheur": [421, 422, 423], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 83, 86, 97, 104, 117, 119, 124, 127, 141, 143, 183, 184, 186, 192, 195, 196, 220, 224, 243, 255, 278, 284, 364, 372, 374, 378, 380, 383, 387, 400, 441, 447, 455, 457, 468, 496, 505, 508, 516, 517, 524, 525, 528, 529, 531, 532, 534, 536, 539, 540, 541, 542, 546, 547, 548, 550, 559, 560, 561], "legaci": [364, 423, 424], "legacy_altaz": 81, "legal": [83, 86], "legend": [361, 433, 435, 437, 439, 445, 446, 450, 454, 455, 456, 458, 460, 463, 469, 470, 471, 474, 491, 492, 500, 524, 530, 533, 534, 538], "legend_kwarg": 361, "lemi\u00e8r": 423, "len": [79, 273, 361, 441, 448, 449, 450, 454, 456, 458, 461, 463, 465, 468, 484, 498], "lenain": [423, 424], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 76, 78, 83, 86, 89, 159, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 276, 305, 357, 390, 435, 440, 447, 451, 461, 463, 466, 474, 484, 515], "lengthi": 466, "lennarz": [406, 420, 422], "leq": [515, 520, 521], "less": [182, 184, 188, 228, 262, 284, 364, 369, 371, 382, 394, 423, 463, 469, 470, 471], "let": [65, 267, 364, 367, 369, 373, 378, 381, 396, 399, 423, 424, 425, 435, 438, 439, 440, 441, 445, 446, 447, 448, 449, 451, 457, 458, 461, 462, 463, 466, 467, 469, 471, 474, 482, 484, 558], "level": [6, 11, 15, 16, 79, 80, 99, 116, 118, 201, 275, 277, 364, 365, 367, 368, 369, 375, 377, 379, 383, 384, 385, 388, 391, 396, 400, 407, 408, 409, 410, 411, 415, 423, 430, 432, 434, 435, 437, 438, 441, 442, 443, 445, 447, 449, 453, 454, 455, 456, 457, 458, 460, 463, 468, 470, 473, 474, 475, 476, 478, 480, 484, 485, 494, 495, 496, 503, 505, 506, 510, 555, 556, 557, 558, 562], "levelnam": 364, "levmar": [201, 463], "lf": 394, "lgpl": 364, "lgtm": 394, "lhaaso": [55, 57], "li": [112, 116, 166, 370, 433, 441, 443, 449, 557, 560], "lib": [329, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 522, 530, 533, 546], "librari": [83, 86, 364, 369, 370, 374, 384, 390, 401, 434, 437, 449, 469, 473, 483, 486, 495, 498, 556, 558], "licenc": 390, "licens": [390, 400], "lie": [181, 182, 188, 191, 194], "life": [371, 463], "lifetim": [20, 430], "lifetime_age_of_univers": 20, "light": [15, 124, 128, 216, 228, 283, 368, 375, 377, 380, 384, 388, 396, 409, 411, 412, 419, 422, 424, 429, 430, 432, 454, 459, 478, 494, 495, 496, 497, 506, 507, 510, 512, 554, 556], "light_curv": [16, 228, 384, 424, 432, 438, 442, 443, 445, 455, 459, 482, 553], "light_curve_flar": [432, 456, 459], "light_curve_model": 553, "light_curve_simul": [432, 457, 459], "lightcrv_pksb1222": [228, 553], "lightcurv": [69, 71, 72, 74, 113, 119, 124, 128, 129, 130, 135, 192, 193, 228, 280, 281, 283, 373, 375, 380, 383, 385, 388, 396, 407, 409, 410, 411, 415, 421, 422, 423, 424, 426, 427, 429, 430, 432, 455, 456, 459, 478, 493, 498, 553], "lightcurve_at_energi": 388, "lightcurveconfig": 16, "lightcurveestim": [113, 379, 380, 385, 388, 396, 407, 409, 411, 412, 415, 423, 424, 429, 455, 456, 457, 498], "lightcurvetablemodel": [375, 377], "lightcurvetempl": 375, "lightcurvetemplatemodel": [428, 429], "lightcurvetemplatetemporalmodel": [258, 387, 426, 429, 450, 469, 553], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 65, 76, 78, 83, 84, 86, 132, 133, 147, 155, 183, 184, 186, 190, 192, 195, 196, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 293, 313, 323, 363, 364, 365, 367, 369, 370, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 395, 396, 400, 406, 415, 417, 418, 422, 423, 425, 426, 428, 429, 433, 435, 437, 438, 439, 440, 443, 450, 451, 454, 458, 460, 462, 463, 464, 466, 470, 471, 473, 474, 478, 482, 484, 486, 487, 494, 498, 503, 511, 521, 556, 558, 559, 560, 561], "likelhood": 376, "likelihood": [95, 97, 100, 105, 116, 117, 118, 119, 121, 127, 274, 290, 364, 370, 373, 376, 377, 380, 382, 384, 385, 386, 388, 396, 403, 405, 406, 409, 416, 419, 422, 424, 425, 430, 435, 437, 438, 439, 441, 447, 451, 455, 456, 458, 462, 463, 465, 471, 474, 482, 483, 486, 494, 496, 498, 534, 556, 557, 559, 560], "likelihood_profil": [375, 405], "likelihood_typ": 410, "likewis": [184, 196], "lima": 112, "lima1983": [496, 557, 560], "lima_map": 443, "limamapestim": [385, 411], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 76, 83, 86, 96, 107, 116, 117, 118, 119, 120, 121, 124, 125, 127, 140, 155, 158, 188, 205, 207, 241, 274, 275, 277, 313, 314, 351, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 384, 385, 387, 388, 392, 405, 411, 415, 422, 423, 424, 425, 430, 433, 437, 445, 448, 451, 455, 462, 463, 466, 467, 470, 474, 482, 494, 496, 498, 507, 516, 534, 543, 556, 557, 561], "lin": [19, 20, 188, 192, 193, 196, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 274, 305, 306, 307, 392, 450, 464, 466, 476, 511, 534], "line": [6, 13, 46, 78, 79, 83, 86, 96, 97, 100, 104, 105, 144, 150, 152, 154, 191, 192, 214, 236, 325, 326, 361, 363, 365, 367, 370, 373, 375, 378, 380, 381, 388, 394, 395, 396, 398, 400, 409, 420, 423, 445, 463, 465, 469, 486, 498, 511, 556], "line2d": [191, 214, 236], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 137, 138, 139, 140, 143, 145, 147, 150, 155, 183, 184, 186, 192, 193, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 228, 229, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 259, 260, 262, 263, 264, 305, 364, 426, 432, 445, 450, 451, 453, 466, 469, 474, 482, 483, 512, 554], "linear_model": 549, "linearli": [193, 196, 466, 494], "linearsegmentedcolormap": [354, 355], "linearstretch": [354, 355], "lineartemporalmodel": [258, 469, 549], "lineno": 364, "liner": [262, 378], "linestyl": [433, 458, 460, 471, 492, 511, 515, 516], "linewidth": [361, 365], "linhoff": [427, 428, 429, 430], "link": [65, 67, 76, 96, 214, 216, 236, 273, 367, 369, 372, 373, 376, 384, 390, 394, 400, 401, 412, 415, 417, 421, 422, 423, 434, 437, 438, 439, 440, 442, 445, 446, 453, 457, 461, 463, 469, 473, 483, 484, 498, 543, 555], "linkag": 291, "linkage_kwarg": 291, "linkcheck": 365, "linspac": [79, 142, 183, 184, 186, 192, 195, 196, 449, 451, 458, 463, 464, 466, 471, 510, 515], "linux": [371, 381, 394, 397, 424, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 558], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 112, 114, 116, 117, 119, 120, 121, 124, 125, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 314, 324, 325, 326, 328, 353, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 437, 440, 441, 446, 450, 451, 453, 454, 455, 457, 462, 464, 465, 470, 471, 473, 474, 475, 476, 478, 483, 494, 498, 501, 510, 511, 555, 556, 557, 558], "list_format": [83, 86], "listen": 498, "listenv": 367, "listinfo": 393, "liter": [16, 80, 99, 118, 311, 364], "literatur": [486, 488, 557], "littl": [83, 86, 383, 385, 391, 466, 474, 503, 507, 558], "live": [79, 82, 84, 364, 369, 372, 374, 385, 425, 428], "livetim": [65, 84, 85, 100, 101, 105, 153, 175, 177, 178, 370, 433, 434, 437, 438, 440, 447, 449, 450, 453, 457, 461, 462, 464, 466, 474, 475, 484, 494, 498], "livetime_fract": 85, "ljouvin": 370, "ll": [117, 119, 127, 367, 369, 381, 397, 433, 434, 437, 439, 442, 443, 447, 454, 455, 456, 457, 458, 558, 560], "llvm": 400, "ln": [53, 463, 541], "lo": [23, 422], "lo_bnd": 188, "lo_threshold": 140, "load": [64, 65, 78, 79, 82, 83, 86, 95, 96, 97, 100, 104, 121, 123, 157, 163, 181, 182, 183, 184, 194, 301, 364, 418, 421, 423, 429, 438, 440, 442, 443, 449, 450, 453, 454, 457, 458, 467, 473, 474, 475, 476, 482, 484, 495, 498], "load_cta_irf": [425, 429], "load_irf_dict_from_fil": [153, 429, 433, 440, 449, 450, 453, 457, 473], "loc": [83, 86, 196, 357, 458, 491, 492, 500, 524, 530, 533, 534, 538], "loc_indic": [83, 86], "local": [17, 18, 21, 22, 24, 25, 27, 83, 86, 132, 133, 168, 181, 182, 191, 192, 194, 364, 365, 367, 372, 378, 393, 394, 397, 401, 405, 415, 438, 441, 442, 443, 448, 449, 460, 465, 478, 482, 498], "local_dataset": 465, "local_dens": [17, 18, 21, 22, 24, 25, 27, 460], "local_to_glob": 182, "localfold": 11, "localis": 301, "localn": [16, 80, 99, 118], "locat": [47, 78, 79, 81, 83, 84, 89, 128, 141, 142, 148, 153, 156, 194, 322, 372, 378, 382, 385, 390, 391, 396, 398, 429, 433, 440, 449, 450, 453, 457, 461, 475, 476, 495, 511, 558], "location_info": 83, "log": [16, 19, 20, 26, 42, 80, 97, 99, 117, 118, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 188, 192, 196, 204, 208, 209, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 259, 260, 262, 263, 264, 266, 269, 278, 284, 304, 305, 307, 350, 359, 376, 380, 402, 419, 426, 430, 432, 438, 440, 441, 442, 443, 445, 446, 447, 450, 453, 455, 456, 457, 460, 462, 463, 464, 465, 466, 469, 471, 474, 475, 480, 482, 483, 498, 500, 510, 511, 512, 535, 543, 544, 550, 557, 558, 559, 560, 561], "log10": 458, "log_": [230, 231, 469, 532], "log_2": 281, "log_en": 469, "log_level": 11, "log_parabola": 435, "log_parabola_norm": 387, "logarithm": [34, 466, 471, 532], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 422, "loggaussian": 375, "logger": [331, 333, 364, 447], "logic": [16, 80, 82, 99, 118, 169, 388, 466, 467], "logical_and": [183, 184, 186, 192, 195, 196], "logical_or": [183, 184, 186, 192, 195, 196, 465], "loglog": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 304, 433, 460, 490, 491, 492], "lognorm": 460, "logo": 394, "logparabola": [375, 533], "logparabolanormspectralmodel": [231, 246, 387, 412, 469, 533], "logparabolaspectralmodel": [230, 246, 387, 435, 437, 439, 446, 461, 463, 469, 526, 532, 533], "logscal": 409, "logspac": [142, 183, 184, 186, 192, 195, 196, 440, 453, 457, 458, 460, 466, 490, 491, 492, 511], "logspir": [33, 38], "lomb": [379, 423], "lon": [16, 47, 86, 89, 91, 97, 100, 104, 106, 110, 116, 121, 123, 127, 141, 142, 148, 153, 156, 159, 183, 184, 186, 189, 192, 194, 195, 196, 210, 211, 215, 222, 223, 226, 238, 240, 248, 249, 251, 253, 259, 261, 263, 295, 296, 299, 321, 364, 365, 375, 378, 383, 387, 408, 438, 442, 443, 445, 447, 451, 455, 456, 461, 462, 464, 465, 466, 469, 470, 474, 482, 483, 484, 496, 510, 511, 515, 516, 517, 518, 519, 520, 521], "lon_0": [215, 223, 226, 240, 248, 249, 263, 379, 387, 442, 445, 446, 448, 449, 450, 453, 455, 461, 462, 468, 469, 474, 482, 483, 515, 516, 517, 519, 520, 521, 522], "lon_0_err": 448, "lon_pnt": [295, 299], "lon_rang": 321, "lon_t": [295, 299], "long": [364, 367, 369, 371, 378, 380, 383, 384, 386, 389, 391, 417, 426, 461, 478, 510], "longer": [282, 364, 370, 371, 378, 379, 381, 384, 397, 415, 418, 423, 424, 426, 429, 434, 440, 455], "longest": 187, "longitud": [66, 89, 181, 182, 183, 184, 189, 191, 194, 195, 196, 321, 351, 378, 451, 466, 469, 503, 510, 518], "lonpol": 466, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 84, 97, 100, 104, 105, 119, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 323, 364, 366, 367, 369, 376, 378, 379, 381, 383, 384, 387, 400, 423, 434, 437, 438, 440, 441, 442, 443, 445, 447, 449, 451, 453, 455, 457, 458, 462, 464, 466, 469, 473, 474, 476, 478, 482, 484, 486, 495, 498, 558], "look_up": 421, "lookup": 189, "loop": [83, 86, 314, 377, 429, 437, 461, 466, 475, 482, 498], "lopez": [216, 423, 429, 524], "lopez21": [217, 524], "lopez_2021": 217, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 364, "loss": [52, 557], "lost": [95, 97, 104, 498, 511], "lot": [78, 364, 367, 369, 370, 371, 372, 375, 377, 378, 380, 384, 394, 404, 406, 407, 415, 423, 424, 438, 447, 474, 482, 483, 508], "low": [83, 86, 140, 188, 316, 364, 365, 368, 373, 393, 421, 423, 432, 434, 437, 441, 447, 449, 462, 467, 468, 473, 474, 478, 482, 485, 494, 495, 496, 505, 506, 510, 555, 559], "low_zenith": 470, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 117, 119, 140, 169, 188, 190, 193, 208, 209, 212, 213, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 233, 237, 239, 241, 242, 243, 244, 247, 250, 252, 254, 255, 256, 257, 260, 262, 264, 265, 364, 378, 383, 384, 391, 451, 465, 483], "lower_error": 119, "lowest": [383, 454], "lp": [230, 231, 387, 435, 461, 469, 526], "lp_norm": 533, "lst": [371, 473], "lt": [364, 390, 417, 426, 520, 521], "ltcube": [182, 183, 184, 186, 195, 196, 466], "lts_author": 390, "luca": [405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 426, 429], "lui": 425, "luigi": 420, "luminos": [41, 46, 51, 52, 53, 54, 237], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 492], "lvtm": 457, "lw": [439, 441, 447, 458, 463, 511, 515, 517], "ly": [415, 468], "lyne": 37, "l\u00e9a": [405, 407, 408, 409, 412, 420, 421, 422, 423, 424], "l\u00f3pez": 423, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 83, 86, 89, 92, 106, 110, 124, 181, 182, 183, 184, 186, 192, 194, 195, 196, 276, 290, 364, 365, 367, 378, 395, 396, 397, 398, 450, 460, 463, 464, 466, 469, 480, 503, 507, 509, 510, 511, 522, 558, 561], "m1": [396, 398], "m2": [97, 143, 163, 438, 440, 442, 443, 445, 447, 453, 462, 464, 465, 473, 482, 483], "m_": [20, 50, 52, 53], "m_3fhl_gc": 466, "m_4d": 466, "m__bzmd2": 465, "m_allski": 466, "m_b": 559, "m_cube": 466, "m_ejecta": [52, 491], "m_gc": 466, "m_hpx": 466, "m_i": 559, "m_iem_10gev": 466, "m_iem_cutout": 466, "m_iem_gc": 466, "m_iem_interp": 466, "m_sub": 466, "m_sun": 491, "m_wc": [183, 184, 186, 192, 195, 196, 466], "ma": [83, 86, 112, 116, 433, 441, 443, 557, 560], "mac": [83, 86, 364, 371, 394, 422, 558], "machin": [367, 371, 372, 377, 381, 394, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 445], "maco": [381, 424], "macport": [381, 422, 424], "made": [163, 170, 191, 194, 205, 207, 214, 236, 293, 325, 326, 364, 367, 369, 380, 383, 385, 388, 389, 390, 415, 426, 427, 437, 441, 445, 446, 465, 473, 511, 522, 557], "madrid": 374, "magenta": [361, 448, 470], "magic": [92, 396, 401, 417, 423, 426, 439, 474, 557], "magic_ecpl": 267, "magic_lp": [267, 439], "magnet": [42, 50, 51, 54, 534], "magnetic_field": [50, 51, 54], "magnitud": [305, 449], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 83, 86, 89, 96, 99, 118, 119, 120, 121, 124, 204, 206, 364, 365, 367, 372, 373, 377, 378, 380, 381, 389, 390, 394, 395, 397, 401, 402, 403, 442, 443, 449, 473, 497, 510, 517, 534, 555, 558, 562], "mail": [365, 367, 369, 371, 378, 380, 383, 385, 387, 390, 393, 399, 404, 405, 484, 558], "mailman": 393, "mailmap": [415, 426], "main": [86, 97, 104, 364, 367, 369, 370, 372, 376, 379, 380, 381, 384, 388, 390, 394, 405, 411, 415, 418, 423, 429, 438, 448, 449, 451, 453, 461, 464, 466, 467, 468, 480, 482, 483, 493, 495, 499, 558], "mainli": [364, 374, 375, 378, 385, 466], "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 364, 366, 381, 383, 384, 385, 389, 394, 424, 465], "mainten": [364, 371, 390, 394, 406, 428], "major": [191, 215, 223, 226, 364, 368, 369, 373, 381, 389, 417, 423, 424, 515, 516, 517], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 78, 80, 83, 86, 90, 96, 99, 118, 158, 159, 163, 164, 165, 166, 168, 169, 170, 173, 174, 179, 180, 182, 183, 184, 187, 188, 191, 193, 194, 195, 196, 262, 323, 325, 326, 335, 363, 365, 366, 369, 370, 371, 374, 376, 378, 380, 381, 382, 383, 384, 385, 388, 390, 391, 394, 400, 403, 404, 406, 409, 410, 415, 417, 420, 421, 422, 423, 426, 428, 434, 437, 439, 440, 443, 445, 449, 453, 455, 463, 464, 465, 466, 469, 473, 474, 475, 480, 484, 495, 498, 558, 559], "make_background": [163, 170], "make_background_fit": 160, "make_background_scal": 160, "make_base_catalog_galact": [423, 488], "make_concentric_annulus_sky_region": 451, "make_contour": 463, "make_count": [163, 164, 165, 170], "make_counts_off": [164, 165], "make_cub": 158, "make_dataset": 159, "make_default_fov_background_model": 160, "make_edisp": [163, 170], "make_edisp_kernel": [163, 170], "make_edisp_kernel_map": 464, "make_edisp_map": 142, "make_effective_livetime_map": 465, "make_exclusion_mask": 160, "make_exposur": [163, 170], "make_exposure_irf": [163, 170], "make_imag": 424, "make_lupton_rgb": 359, "make_map_background_irf": 418, "make_map_count": 370, "make_map_cutout": 370, "make_map_exposure_reco_energi": 370, "make_map_exposure_true_energi": [142, 370, 464], "make_map_fov_background": 370, "make_map_hadron_accept": 370, "make_map_ring_background": 370, "make_map_xxx": 370, "make_maps_off": 168, "make_mask_bkg_invalid": 169, "make_mask_energy_aeff_default": 169, "make_mask_energy_aeff_max": 169, "make_mask_energy_bkg_peak": 169, "make_mask_energy_edisp_bia": 169, "make_mask_offset_max": 169, "make_mean_edisp": 425, "make_mean_psf": 425, "make_meta_t": [163, 170], "make_model": 383, "make_more_random_stuff": 364, "make_observation_time_map": 465, "make_orthogonal_rectangle_sky_region": [121, 451], "make_path": [119, 446, 462], "make_pixel_region": 378, "make_psf": [153, 163, 170, 425], "make_psf_map": 464, "make_quant": 335, "make_random_stuff": 364, "make_region": 378, "make_sky_coord": 378, "make_some_random_stuff": 364, "make_theta_squared_t": [415, 476], "makefil": [394, 419], "maker": [6, 142, 153, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 370, 377, 379, 390, 409, 411, 412, 417, 426, 429, 430, 432, 433, 437, 439, 440, 443, 447, 449, 450, 453, 457, 458, 462, 464, 467, 472, 475, 476, 478, 494, 495, 508, 510, 557], "maker_fov": 483, "maker_safe_mask": [447, 453, 483], "mamba": [367, 395, 396, 417], "manag": [83, 86, 205, 207, 214, 236, 313, 342, 363, 364, 367, 372, 380, 381, 383, 386, 390, 391, 393, 415, 420, 422, 426, 430, 466, 468, 558], "manconi": 407, "mandatori": [169, 367, 377, 390, 450, 469], "mandatory_keyword": 464, "mani": [83, 86, 305, 364, 365, 367, 369, 371, 373, 376, 378, 379, 380, 381, 384, 385, 390, 394, 400, 406, 407, 412, 415, 421, 422, 423, 424, 425, 428, 429, 434, 437, 440, 448, 453, 454, 466, 476, 478, 486, 494, 496, 508, 511, 555, 556, 557, 558, 562], "manifest": 374, "manipul": [83, 86, 388, 391, 417, 471, 510], "manner": [428, 429], "manpow": [369, 381], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 371, 376, 386, 393, 449, 498, 506, 558, 559], "manuel": [416, 419, 420], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 79, 80, 83, 86, 91, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 127, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 211, 214, 215, 222, 223, 226, 228, 236, 238, 240, 248, 249, 251, 253, 259, 260, 261, 263, 264, 271, 276, 315, 351, 352, 357, 359, 361, 363, 364, 365, 367, 371, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 391, 396, 400, 404, 405, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 429, 430, 432, 433, 434, 437, 438, 439, 440, 444, 445, 448, 449, 450, 451, 452, 454, 455, 456, 457, 461, 462, 465, 469, 472, 473, 474, 475, 476, 478, 479, 482, 483, 486, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 507, 508, 514, 516, 517, 518, 519, 522, 553, 555, 556, 557], "map_": [197, 198, 352, 359], "map_4d": 466, "map_analysi": 383, "map_cent": 263, "map_coord": [79, 142, 153, 156], "map_dataset": [376, 458], "map_dataset_empti": 458, "map_dataset_mak": 458, "map_dataset_on_off": 458, "map_edisp": [106, 110], "map_in": [183, 184, 186, 192, 195, 196], "map_out": [100, 105, 141, 142, 148, 153, 156, 183, 184, 186, 192, 195, 196], "map_select": [16, 438, 442, 443, 445, 482], "map_typ": [183, 184, 186, 192, 195, 196, 466, 510], "mapax": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 412, 415, 417, 466], "mapaxi": [19, 20, 26, 97, 100, 104, 105, 106, 107, 108, 110, 117, 119, 121, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 163, 173, 174, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 359, 365, 379, 388, 406, 407, 409, 412, 415, 425, 429, 433, 434, 437, 439, 440, 446, 447, 449, 450, 453, 456, 457, 458, 462, 464, 465, 466, 469, 474, 475, 476, 483, 502, 505, 507, 508, 510, 511], "mapcoord": [79, 142, 153, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 238, 423, 424, 466, 511, 518], "mapdataset": [93, 94, 98, 100, 103, 104, 105, 107, 108, 109, 111, 112, 116, 121, 124, 127, 131, 132, 133, 134, 158, 159, 160, 163, 164, 168, 169, 222, 357, 360, 377, 379, 385, 386, 405, 406, 407, 408, 409, 410, 411, 412, 415, 429, 430, 441, 442, 446, 447, 448, 450, 451, 453, 455, 457, 458, 463, 465, 467, 468, 474, 482, 483, 496, 498, 505, 508, 557, 559, 560], "mapdataseteventsampl": [88, 103, 409, 410, 411, 418, 429, 449, 450], "mapdatasetmak": [153, 161, 170, 377, 409, 412, 415, 418, 426, 447, 449, 450, 453, 458, 464, 465, 475, 482, 483, 498, 505, 508], "mapdatasetmetadata": [97, 100, 391], "mapdatasetoff": 417, "mapdatasetonoff": [93, 97, 104, 105, 112, 116, 131, 158, 164, 168, 409, 410, 412, 415, 428, 429, 443, 458, 465, 494, 508, 559], "mapdatasetsampl": 377, "mapevalu": [375, 376, 408, 409, 412, 415, 426, 427, 428, 430], "mapeventsampl": [407, 408], "mapfit": [375, 376, 405, 424, 425], "mapgeom": [370, 425, 426], "mapmak": [163, 380, 405, 409, 424], "mapmakerob": [408, 409], "mappabl": 388, "mappanelplott": [385, 563], "mapper": 301, "mappingintstrani": [16, 80, 99, 118], "maps_off": 168, "mar": [381, 402, 427], "march": [371, 373, 402, 404, 425], "marcocirelli": 26, "margin": [100, 105, 109, 111, 182, 184, 194, 196, 214, 236, 251, 375, 467, 515, 557, 559], "marion": [405, 424], "mark": [86, 364, 375, 393], "marker": [96, 97, 100, 104, 105, 433, 434, 437, 439, 441, 447, 454, 455, 456, 457, 484], "markerfacecolor": [97, 100, 104, 105], "markers": [96, 97, 100, 104, 105, 471], "mask": [79, 83, 86, 94, 96, 97, 100, 104, 105, 116, 120, 121, 123, 124, 125, 127, 141, 142, 148, 153, 156, 158, 160, 165, 166, 167, 168, 169, 171, 181, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 205, 207, 214, 236, 251, 376, 392, 409, 411, 412, 413, 415, 418, 424, 426, 427, 428, 429, 432, 433, 434, 445, 447, 465, 468, 472, 475, 478, 494, 505, 507, 510, 557], "mask_1": 470, "mask_2": 470, "mask_bright": 461, "mask_contains_region": 196, "mask_data": 467, "mask_energi": [462, 467], "mask_fit": [96, 97, 100, 104, 105, 109, 111, 376, 409, 426, 439, 445, 458, 462, 463, 467, 471, 494], "mask_fit_imag": [97, 100, 104, 105], "mask_imag": [97, 100, 104, 105], "mask_map": [182, 194, 432, 467, 472], "mask_map_catalog": 467, "mask_nearest_posit": [183, 184, 186, 192, 195, 196], "mask_off": 458, "mask_roi": 461, "mask_saf": [96, 97, 100, 101, 104, 105, 169, 376, 409, 462, 465, 467, 494], "mask_safe_edisp": [97, 100, 104, 105], "mask_safe_imag": [97, 100, 104, 105, 141, 142, 148, 153, 156], "mask_safe_psf": [97, 100, 104, 105], "mask_spac": 462, "masked_ev": 79, "maskedarrai": [83, 86], "maskedcolumn": [83, 86], "mass": [19, 20, 26, 52, 377, 411, 430, 460, 486, 519], "massdm": [19, 20, 460], "master": [370, 371, 378, 393, 394, 403], "match": [83, 86, 103, 107, 181, 182, 184, 187, 188, 189, 191, 194, 196, 198, 275, 277, 364, 372, 423, 425, 430, 437, 440, 457, 474, 493, 510], "match_by_nam": 189, "math": [223, 363], "mathcal": [463, 494], "mathemat": [469, 471], "mathieu": [415, 418], "mathrm": [19, 20, 23, 97, 104, 143, 460, 463, 494, 559, 561], "mathworld": [320, 321], "matplotlib": [19, 20, 26, 64, 65, 79, 123, 137, 140, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 183, 184, 186, 192, 195, 196, 199, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 342, 352, 353, 354, 357, 358, 359, 361, 363, 364, 365, 378, 381, 390, 397, 400, 407, 415, 417, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 490, 491, 492, 498, 500, 501, 502, 504, 507, 515, 517, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 562], "matric": 199, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 110, 140, 141, 142, 145, 199, 200, 201, 205, 214, 236, 275, 277, 357, 381, 382, 392, 425, 426, 429, 463, 464, 494, 496, 502], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 378, 384, 392, 424, 429, 430, 432, 465, 472, 474, 478, 487, 510, 556, 558], "matthew": [371, 421, 423, 424], "matthia": [423, 424], "mattox": 441, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 84, 86, 97, 107, 120, 122, 124, 153, 155, 156, 159, 163, 165, 169, 196, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 262, 263, 264, 321, 372, 380, 387, 392, 400, 411, 412, 413, 415, 417, 429, 434, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 451, 453, 454, 455, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 474, 475, 482, 483, 486, 505, 507, 508, 515, 534, 537, 543, 560], "max_ag": [45, 488], "max_column": [83, 86], "max_energi": 454, "max_lin": [83, 86], "max_offset": 380, "max_percentil": 79, "max_radiu": [151, 153, 156, 194, 474], "max_region_numb": [166, 507], "max_width": [83, 86], "maxcal": 201, "maxclust": 291, "maxfev": 463, "maxim": [45, 78, 86, 107, 169, 211, 215, 223, 226, 238, 248, 249, 253, 259, 263, 427, 428, 429, 430, 507], "maxima": [132, 205, 207], "maximilian": [415, 417, 418, 427, 428, 429, 430], "maximum": [19, 20, 45, 46, 47, 79, 83, 86, 95, 117, 119, 120, 122, 124, 153, 156, 158, 166, 169, 175, 178, 182, 188, 193, 194, 204, 206, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 275, 277, 320, 322, 325, 361, 367, 370, 378, 417, 435, 441, 454, 465, 466, 471, 475, 483, 488, 496, 507, 534, 556, 557, 560], "maxmimum": 471, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 364, 372, 374, 375, 386], "mb": [181, 182, 191, 194, 372, 396, 398, 432, 436, 444, 452, 459, 472, 473, 474, 476, 477, 479, 481, 485, 513, 523, 544, 554], "mbox": [97, 104], "mc": 382, "mc_id": [79, 374, 377, 417, 449, 473], "mcerp": 382, "mckee": [53, 430], "mcmc": [382, 384, 405, 410, 412, 534], "mcmc_sampl": [384, 407], "md": [367, 384, 390], "mdm": [26, 460], "mean": [42, 66, 83, 86, 91, 97, 121, 123, 140, 141, 142, 145, 148, 153, 156, 224, 228, 262, 280, 292, 311, 364, 365, 367, 369, 371, 377, 378, 380, 381, 387, 392, 397, 400, 412, 421, 440, 450, 454, 463, 465, 469, 470, 471, 474, 475, 484, 516, 531, 558, 559], "meaning": 469, "meant": [370, 429, 433, 440, 442, 445, 447, 453, 457, 473], "measur": [27, 65, 100, 105, 123, 188, 267, 275, 277, 280, 281, 282, 283, 286, 287, 289, 290, 370, 378, 383, 388, 394, 403, 408, 416, 422, 424, 434, 437, 439, 440, 443, 446, 448, 451, 453, 454, 455, 456, 461, 474, 483, 484, 496, 503, 505, 508, 556, 557, 560, 561], "mechan": [372, 382, 388, 391], "media": 390, "median": [79, 153, 156, 400, 458, 470, 474], "median_zenith": 470, "medium": [45, 52, 364, 373], "meeseeksdev": 364, "meeseeksmachin": 364, "meet": [214, 236, 293, 370, 372, 384, 389, 394], "megabyt": [181, 182, 191, 194], "mem": [432, 436, 444, 452, 459, 472, 477, 479, 481, 485, 513, 523, 544, 554], "member": [79, 365, 369, 378, 390, 391, 423, 429, 473, 476], "memo": [140, 188], "memori": [83, 84, 86, 87, 95, 97, 98, 100, 103, 104, 105, 181, 182, 191, 194, 259, 261, 263, 342, 364, 374, 376, 377, 380, 386, 388, 409, 415, 430, 440, 453, 498, 557], "memoryobserv": 84, "mender": [428, 429, 430], "mention": [59, 135, 364, 365, 367, 371, 372, 376, 378, 381, 383, 384, 389, 390, 393, 394, 464, 468, 469, 486, 557], "mentor": [367, 384], "mere": 374, "merg": [65, 82, 83, 86, 185, 188, 214, 236, 332, 364, 367, 368, 369, 370, 377, 378, 379, 383, 384, 389, 390, 393, 394, 404, 405, 406, 407, 408, 409, 410, 411, 412, 420, 421, 422, 423, 424, 425], "merge_equ": 82, "mergesort": [83, 86], "mess": 365, "messag": [96, 200, 202, 203, 367, 378, 380, 387, 413, 428, 434, 435, 437, 438, 439, 445, 446, 447, 457, 458, 463, 474, 482, 483, 498, 558], "met": [82, 345, 429, 456, 557], "met_start": 82, "met_stop": 82, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 81, 83, 84, 86, 89, 95, 97, 98, 100, 102, 103, 104, 105, 117, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 170, 183, 184, 186, 192, 195, 196, 259, 260, 263, 264, 303, 345, 346, 347, 348, 374, 377, 378, 379, 388, 391, 411, 412, 423, 427, 429, 430, 449, 458, 466, 470, 473, 475, 495, 496, 553], "meta_t": [95, 96, 97, 100, 104, 105, 163, 170, 388, 391, 412, 434, 440, 465, 494], "metaattribut": [83, 86], "metadata": [16, 79, 80, 81, 83, 84, 86, 99, 101, 117, 118, 119, 137, 138, 139, 143, 144, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 346, 368, 370, 381, 430, 438, 449, 469, 482, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "metadata_fits_export_kei": [80, 99, 118], "metadatabas": 391, "metadatabasemodel": 391, "metapackag": 381, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 275, 277, 283, 291, 301, 305, 309, 313, 314, 315, 338, 351, 353, 363, 364, 367, 370, 373, 374, 375, 378, 379, 380, 382, 383, 384, 386, 388, 390, 391, 396, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 429, 430, 433, 434, 435, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 449, 450, 453, 456, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 493, 495, 497, 498, 502, 505, 507, 508, 509, 511, 532, 546, 555, 556, 557, 558, 560], "method_kwarg": [313, 314], "methoda": 407, "metric": 291, "mev": [71, 79, 137, 138, 139, 143, 433, 440, 442, 445, 447, 453, 457, 458, 461, 464, 466, 469, 473, 474, 484, 543], "meval": 517, "mexico": 475, "meyer": [233, 267, 446, 557], "meyer2010": 557, "mgtime": 379, "michael": [428, 430], "mid": [418, 429, 473], "middl": [353, 380], "midli": 437, "midpoint": 84, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 171, 188, 201, 364, 369, 375, 376, 378, 381, 383, 388, 390, 391, 396, 398, 405, 437, 456, 458, 462, 465, 467, 474, 475, 478, 484, 486, 494, 498, 505, 511, 558, 560], "migra": [97, 100, 104, 105, 142, 145, 174, 380, 449, 450, 464, 503], "migra_axi": [97, 100, 104, 105, 108, 142, 145, 449, 450, 464, 465], "migrad": [96, 201, 434, 435, 437, 438, 439, 445, 446, 447, 458, 463, 474, 482, 483], "migrad_opt": [201, 463], "migrat": [97, 100, 104, 105, 108, 145, 373, 408, 415, 424, 449, 465, 502, 503], "milagro": [92, 355], "mileston": [373, 393], "milki": [33, 38, 403, 488], "miller": [83, 86], "million": [364, 391], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 86, 97, 120, 122, 124, 135, 163, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 262, 263, 264, 281, 321, 379, 380, 387, 392, 400, 415, 423, 438, 440, 442, 443, 445, 446, 447, 448, 451, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 466, 469, 470, 471, 474, 482, 483, 486, 507, 534, 537, 543], "min_count": 160, "min_dist": [132, 133, 166, 441, 447, 507], "min_distance_input": [166, 507], "min_energi": 454, "min_npred_background": 160, "min_signific": 379, "min_significance_lc": 379, "minaya": 425, "mind": [367, 384, 453, 463], "mini": 384, "miniconda": 395, "minim": [19, 20, 26, 107, 126, 183, 184, 186, 191, 192, 195, 196, 197, 201, 208, 209, 211, 212, 215, 216, 218, 219, 220, 223, 224, 226, 230, 231, 233, 237, 238, 239, 240, 241, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 263, 264, 273, 376, 379, 387, 391, 417, 427, 429, 433, 449, 462, 463, 471, 483, 498, 507, 508, 511, 556, 561], "minima": [205, 207, 471], "minimis": [457, 470], "minimum": [19, 20, 26, 47, 79, 95, 116, 117, 119, 120, 122, 124, 126, 128, 132, 133, 135, 136, 158, 160, 166, 188, 191, 193, 203, 204, 206, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 262, 263, 264, 269, 274, 278, 281, 293, 320, 322, 325, 359, 381, 417, 423, 437, 441, 449, 463, 466, 471, 474, 496, 498, 507, 534, 561], "mino": [201, 463], "minor": [364, 369, 384, 387, 389, 414, 427, 516, 517], "minos_contour": [407, 425], "minu": [145, 458], "minuit": [96, 114, 201, 202, 203, 375, 382, 409, 424, 425, 429, 434, 435, 437, 438, 439, 445, 446, 447, 458, 463, 474, 482, 483], "minuit_opt": 463, "minut": [384, 394, 423, 437, 441, 443, 445, 447, 448, 449, 451, 456, 457, 460, 462, 463, 465, 471, 482], "mireia": 426, "mirror": 180, "misc": [403, 416, 420, 421, 422], "miss": [78, 83, 86, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 364, 367, 372, 373, 374, 375, 378, 384, 385, 388, 413, 415, 417, 423, 428, 466], "mission": [79, 429, 557], "mistak": [369, 389], "mix": [363, 364, 380, 462, 466], "mixin": [83, 86], "mjd": [82, 89, 119, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 346, 348, 365, 428, 429, 441, 449, 450, 454, 455, 456, 457, 466, 469, 495, 546, 547, 548, 549, 550, 551, 552, 553, 562], "mjdref": [441, 466], "mjdreff": [89, 345, 348, 450], "mjdrefi": [89, 345, 348, 450], "mkdir": [380, 437, 438, 445, 446, 449, 482, 483], "mkn": [484, 557], "mkn_421_3fhl": 484, "mncontour": 201, "mnra": [128, 289], "mnt": 426, "mock": 448, "mock_dl4": 448, "mode": [16, 80, 81, 83, 86, 89, 97, 99, 100, 104, 118, 122, 141, 142, 148, 153, 156, 159, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 261, 391, 410, 423, 426, 430, 457], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 84, 88, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 131, 134, 137, 143, 144, 151, 152, 153, 154, 156, 160, 163, 176, 183, 184, 186, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 285, 288, 290, 360, 363, 364, 365, 368, 369, 370, 376, 377, 379, 380, 382, 384, 385, 388, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 440, 441, 443, 448, 451, 453, 458, 464, 465, 466, 467, 472, 474, 475, 478, 486, 487, 493, 494, 496, 498, 499, 503, 505, 506, 510, 513, 523, 544, 554, 556, 557, 560, 561], "model1": [209, 524, 526, 530, 533, 535, 538], "model2": [209, 457, 524, 526, 530, 533, 535, 538], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 438], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [469, 526], "model_best_joint": 437, "model_best_stack": 437, "model_bkg": 462, "model_computed_field": [16, 80, 99, 118], "model_config": [16, 80, 99, 118, 442, 482], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 80, 99, 118], "model_copi": [16, 80, 99, 118, 469], "model_dump": [16, 80, 99, 118], "model_dump_json": [16, 80, 99, 118], "model_extra": [16, 80, 99, 118], "model_field": [16, 80, 99, 118], "model_fields_set": [16, 80, 99, 118], "model_fit": 457, "model_joint": 445, "model_json_schema": [16, 80, 99, 118], "model_manag": [432, 468, 472], "model_nam": [97, 100, 104, 105, 214, 236, 360, 462], "model_parametrized_nam": [16, 80, 99, 118], "model_plot": 448, "model_post_init": [16, 80, 99, 118], "model_prior": 471, "model_read": 471, "model_rebuild": [16, 80, 99, 118], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [440, 453, 457], "model_spectrum": 469, "model_str": 438, "model_typ": [214, 222, 234, 236, 251, 261, 273, 387, 468], "model_valid": [16, 80, 99, 118], "model_validate_json": [16, 80, 99, 118], "model_validate_str": [16, 80, 99, 118], "model_weak": 471, "model_weak_prior": 471, "model_without_nam": 469, "modelbas": [222, 251, 253, 254, 261, 265, 392], "modeldm": [19, 20], "modelevalu": 375, "modeling_2d": [432, 442, 444], "modelmetadata": 391, "modelmodel_dump": [16, 80, 99, 118], "modelmodel_dump_json": [16, 80, 99, 118], "models_3fhl": 468, "models_4fgl_roi": 461, "models_as_dict": [16, 80, 99, 118], "models_diffus": 449, "models_fil": [16, 438, 442, 443, 445, 482], "models_fit": 453, "models_gc": 468, "models_gp": 473, "models_joint": 445, "models_or": 468, "models_read": 469, "models_select": 468, "models_stack": 445, "models_yaml": 469, "modelsmetadata": 391, "modern": [83, 86, 382], "modernis": [381, 409], "modest": [364, 516], "modif": [16, 80, 83, 86, 99, 118, 364, 367, 386, 393, 426], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 86, 88, 97, 104, 119, 120, 121, 124, 127, 159, 201, 313, 336, 361, 374, 376, 380, 386, 390, 391, 410, 412, 413, 415, 417, 425, 428, 429, 438, 450, 465, 467, 471, 475, 482, 496, 498, 511, 562], "modul": [6, 250, 364, 365, 369, 373, 380, 385, 403, 405, 411, 423, 457, 461, 465, 468, 486, 487, 488, 489, 534, 551, 562], "modular": 370, "mohrmann": [380, 404, 405, 406, 422, 423, 424, 427, 429, 557], "mohrmann2019": 557, "moment": [15, 51, 54, 82, 90, 251, 340, 370, 378, 380, 381, 384, 389, 390, 464, 466, 503], "moncar": [201, 463], "monitor": [377, 473, 498], "monkei": 364, "mono": 372, "monoton": 188, "mont": [382, 503], "montecarlo": [98, 103, 201], "month": [74, 367, 373, 378, 381, 383, 384, 389, 393, 397, 403, 404, 405, 406, 407, 416, 419, 420, 421, 422, 423, 424, 425], "monthli": [373, 391, 396, 425], "moor": 24, "morcuend": [425, 428, 430], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 71, 72, 74, 83, 86, 94, 95, 96, 97, 100, 104, 105, 132, 140, 183, 184, 186, 195, 196, 208, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 243, 244, 248, 249, 250, 252, 255, 256, 257, 263, 264, 278, 284, 301, 339, 364, 365, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 409, 410, 411, 412, 415, 422, 424, 425, 429, 434, 437, 439, 441, 443, 445, 449, 450, 454, 457, 460, 462, 463, 465, 466, 467, 468, 469, 470, 471, 475, 476, 478, 484, 494, 495, 496, 498, 507, 508, 510, 511, 516, 555, 556, 558, 560, 562], "moreov": [380, 461, 465, 494], "morpholog": [114, 377, 432, 452, 478, 494, 510], "morphologi": [50, 52, 114, 375, 377, 387, 403, 420, 422, 434, 442, 448, 449, 450, 453, 461, 465, 512], "mosaic": 370, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 90, 112, 119, 363, 364, 365, 367, 369, 370, 371, 372, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 394, 396, 397, 415, 422, 423, 425, 426, 429, 430, 442, 443, 451, 455, 457, 461, 463, 464, 465, 466, 467, 473, 474, 478, 484, 486, 496, 497, 498, 503, 511, 555, 557, 558, 561], "mostli": [56, 67, 293, 364, 365, 370, 371, 372, 373, 378, 380, 383, 384, 385, 388, 389, 391, 393, 394, 415, 423, 461, 465, 476, 484, 560, 562], "motion": [45, 297], "motiv": [169, 369, 371, 372, 378, 381, 383, 393, 469, 498], "move": [273, 369, 370, 371, 372, 375, 378, 383, 384, 385, 388, 393, 399, 405, 406, 408, 409, 410, 411, 415, 416, 420, 421, 423, 424, 425, 426, 440], "move_axi": 429, "movement": 390, "mpatch": 451, "mpg": 65, "mpi": 65, "mpl": 364, "mpl_check_plot": 364, "mpl_kwarg": [437, 447, 451], "mpl_normal": [354, 355], "mpl_plot_check": 364, "mpl_style": 423, "msg": [433, 440, 442, 445, 447, 453, 457, 473], "msh": [443, 461, 465], "msh15": 476, "mst": 473, "mu": [26, 275, 277, 278, 357, 392, 460, 471, 502, 503, 560], "mu_": [278, 284, 559, 560, 561], "mu_background": 558, "mu_bkg": [100, 105, 275, 287, 290, 400, 558, 560], "mu_off": 560, "mu_on": [278, 284, 560], "mu_sig": [277, 287, 290, 559, 560], "mu_x": 560, "much": [184, 364, 370, 375, 378, 380, 383, 384, 408, 415, 440, 445, 451, 458, 471, 474, 484, 517], "mul": [26, 460, 469, 524, 530, 533, 535, 538, 543], "multi": [83, 86, 182, 194, 373, 378, 392, 409, 412, 416, 423, 432, 435, 441, 452, 462, 463, 464, 469, 470, 474, 478, 494, 496, 498, 510, 555, 556, 557], "multidimension": [370, 380, 392, 430, 478, 503, 556], "multinorm": 382, "multipl": [19, 20, 26, 78, 83, 86, 87, 96, 103, 107, 109, 111, 127, 132, 157, 183, 184, 186, 192, 195, 196, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 364, 365, 370, 373, 376, 377, 378, 380, 382, 385, 386, 388, 392, 396, 405, 412, 413, 415, 423, 429, 430, 439, 445, 461, 462, 465, 466, 467, 469, 474, 496, 510, 534, 543, 555, 556, 557, 558, 563], "multipli": [19, 20, 26, 119, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 223, 224, 226, 228, 230, 231, 233, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 271, 285, 288, 293, 458, 460, 469, 524, 560], "multiprocess": [13, 88, 120, 121, 124, 127, 159, 308, 313, 314, 409, 429, 430], "multithread": 13, "multivari": 382, "multivariategaussianprior": 392, "multiwavelength": 216, "muon": [84, 470], "muoneff": [84, 470], "mur": [26, 460], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 83, 84, 86, 96, 97, 100, 101, 105, 106, 110, 119, 124, 127, 132, 133, 140, 151, 159, 163, 165, 170, 177, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 282, 283, 293, 311, 359, 364, 369, 375, 376, 379, 388, 389, 390, 391, 433, 437, 442, 462, 465, 467, 468, 469, 473, 474, 483, 484, 498, 510, 557], "mutablemap": 190, "mutablesequ": [87, 95, 236], "mutipl": 396, "mutltipl": 367, "my": [364, 386, 387, 395, 449, 450, 462, 469], "my_custom_model": 469, "my_flux_map": 388, "my_ob": 85, "my_obs_filt": 85, "my_sourc": 386, "mybind": [394, 423], "myconfig": [11, 558], "mycustomgaussianmodel": [387, 469], "mycustomprior": 471, "mycustomspectralmodel": [246, 469], "n": [19, 20, 51, 78, 83, 86, 117, 119, 181, 182, 183, 184, 186, 188, 189, 192, 194, 195, 196, 204, 206, 266, 273, 364, 367, 378, 381, 395, 397, 421, 453, 456, 460, 461, 463, 466, 468, 471, 473, 474, 475, 476, 481, 503, 510, 511, 513, 516, 517, 557, 559, 561], "n_": [97, 104, 278, 284, 494, 559, 560, 561], "n_0": [224, 531], "n_bad": 474, "n_bin": 462, "n_bkg": [275, 277, 560], "n_dof": [117, 119, 496], "n_event": [183, 184, 186, 192, 195, 196, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 377], "n_event_bunch": [98, 103], "n_events_bkg": 377, "n_fit_bin": [445, 457, 462, 468], "n_free_paramet": 273, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 491, 492], "n_job": [16, 88, 120, 121, 124, 127, 159, 313, 429, 438, 442, 443, 445, 451, 465, 482], "n_jobs_default": [88, 120, 121, 124, 127, 159], "n_model": [70, 73], "n_ob": [440, 449, 457], "n_observ": 558, "n_off": [100, 105, 277, 286, 287, 290, 559, 560], "n_off_posit": 439, "n_off_region": [171, 439], "n_on": [275, 277, 278, 284, 286, 287, 290, 400, 558, 559, 560], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 208, 209, 212, 213, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 233, 237, 239, 241, 242, 243, 244, 247, 250, 252, 254, 255, 256, 257, 260, 262, 264, 265, 392, 552], "n_scale": 112, "n_sig": [275, 277, 458, 560], "n_sig_matching_signific": [275, 277], "n_sigma": [69, 71, 72, 74, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 273, 275, 277, 433, 451, 461, 462, 482, 484, 496], "n_sigma_sensit": [116, 117, 118, 119], "n_sigma_ul": [69, 71, 72, 74, 116, 117, 118, 119, 120, 121, 124, 125, 127, 451, 455, 461, 462, 482, 484, 496], "n_sourc": [45, 488], "n_spatial_ax": 187, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 86, "n_time_bin": 456, "nachiketa": [421, 422], "naima": [237, 363, 381, 382, 383, 384, 387, 406, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 498, 512, 543, 544], "naimamodel": [406, 409, 411], "naimaspectralmodel": [246, 387, 415, 469, 498, 534], "nakashima": 407, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 117, 118, 119, 120, 121, 124, 125, 128, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 164, 173, 174, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 291, 292, 314, 343, 344, 359, 365, 367, 370, 373, 374, 376, 377, 378, 379, 382, 383, 386, 387, 388, 390, 391, 392, 393, 405, 406, 407, 408, 409, 410, 411, 412, 415, 424, 426, 427, 429, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 486, 496, 498, 502, 505, 507, 508, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 560], "name1": 463, "name2": 463, "name_err": [120, 121, 124, 125], "name_scan": [120, 121, 124, 125], "name_substr": [214, 236, 468], "name_ul": [120, 121, 124, 125], "namedtupl": 364, "nameerror": 364, "namespac": [6, 16, 80, 99, 118, 364, 383, 385, 408, 411, 421, 469, 487, 562], "namibia": 476, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 86, 97, 117, 119, 163, 181, 182, 183, 184, 186, 192, 195, 196, 204, 206, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 364, 387, 392, 437, 438, 439, 442, 443, 445, 446, 451, 453, 455, 461, 462, 464, 465, 466, 467, 468, 469, 482, 483, 484, 534, 543], "nan_to_num": [95, 97, 100, 104, 105, 141, 142, 148, 153, 156, 184, 192, 196, 261], "nansum": [183, 184, 186, 195, 196], "nasa": [58, 60, 61, 63, 140, 188, 384, 393, 537], "nativ": [83, 86, 189, 376, 381, 415, 466], "natur": [83, 86, 364, 370, 387, 390, 469, 532], "nauroi": [290, 557], "naurois2012": 557, "navarro": 486, "navig": [423, 425], "naxi": 466, "naxis1": 466, "naxis2": 466, "naxis3": 466, "naxis4": 466, "nbin": [16, 106, 110, 121, 143, 145, 151, 153, 185, 188, 193, 196, 325, 326, 380, 433, 437, 438, 439, 442, 443, 445, 446, 447, 449, 450, 451, 455, 456, 458, 462, 464, 465, 466, 469, 474, 475, 476, 482, 502, 505, 507, 508, 511], "nbin_per_decad": 188, "nbstripout": 372, "ncol": [137, 138, 183, 184, 186, 192, 195, 196, 357, 361, 434, 437, 441, 443, 445, 447, 458, 462, 463, 466, 467, 507, 524], "ncp": 454, "nd": [183, 184, 186, 192, 195, 196, 259, 260, 385, 466, 511], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 86, 87, 96, 112, 120, 124, 137, 138, 139, 140, 141, 144, 145, 147, 150, 151, 152, 153, 154, 156, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 200, 204, 205, 206, 207, 214, 238, 239, 264, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 293, 304, 305, 306, 315, 320, 322, 353, 357, 358, 364, 462, 466, 484, 510, 511], "nddata": [406, 409], "nddataarrai": [407, 421, 422], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 269], "ndim": [97, 104, 106, 110, 138, 140, 143, 182, 189, 194, 439, 442, 447, 451, 462, 464, 465, 466, 473, 474, 484, 496, 511], "ndimag": [196, 378], "ndmin": 293, "ne": 376, "nearest": [26, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 183, 184, 186, 188, 192, 195, 196, 305, 417, 424, 426, 466, 496, 498, 510], "nearli": [364, 415, 434], "nebula": [50, 267, 273, 409, 437, 438, 439, 443, 446, 447, 448, 455, 463, 467, 469, 471, 474, 475, 476, 482, 483, 484, 489, 511, 557], "necess": [388, 471], "necessari": [16, 80, 99, 118, 367, 374, 379, 390, 417, 434, 437, 439, 440, 443, 449, 450, 453, 456, 457, 465, 466, 468, 469, 483, 494, 495, 498], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 379, 442], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 83, 85, 86, 89, 96, 99, 100, 116, 118, 119, 141, 142, 153, 155, 156, 191, 266, 267, 293, 363, 364, 365, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 394, 395, 400, 404, 405, 406, 423, 425, 430, 434, 438, 440, 441, 442, 443, 447, 449, 450, 454, 456, 457, 463, 464, 466, 467, 468, 469, 470, 473, 475, 482, 484, 494, 507, 509, 510, 558, 562], "need_upd": 415, "neg": [19, 20, 26, 83, 86, 117, 119, 120, 121, 124, 125, 127, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 263, 264, 275, 277, 365, 412, 430, 471, 496, 560, 561], "neglect": [122, 169, 433, 465, 496, 561], "neighbor": [144, 152, 154, 417, 424], "neighbour": [305, 519], "neither": [91, 169, 381, 389], "neldermead": 201, "nep": [369, 389], "neraest": 184, "nest": [15, 182, 183, 184, 237, 273, 293, 332, 429, 474, 509, 560], "nested_model": 237, "net": [26, 83, 86, 437], "neutrino": 52, "neutron": 36, "never": [361, 363, 364, 367, 370, 374, 378, 386, 475], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 82, 83, 84, 86, 87, 96, 97, 99, 100, 104, 105, 117, 118, 119, 120, 124, 135, 137, 138, 139, 140, 143, 145, 147, 150, 155, 166, 167, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 214, 236, 251, 261, 293, 317, 342, 349, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 416, 419, 445, 454, 461, 462, 466, 468, 469, 495, 496, 498, 543, 557], "new_attribut": 364, "new_axi": 135, "new_dataset_nam": [214, 236], "new_datasets_nam": [19, 20, 26, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265], "new_flux_map": 388, "new_funct": 364, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 543, "new_nam": [83, 86, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196], "new_ob": [84, 498], "new_observ": 87, "newaxi": 510, "newer": [381, 394, 405, 424], "newli": [409, 410, 411], "next": [83, 86, 97, 364, 365, 369, 380, 384, 385, 389, 392, 393, 421, 422, 433, 445, 448, 449, 451, 453, 461, 462, 465, 466, 469, 470, 471, 474], "nfcn": 463, "nfev": [96, 201, 202, 203, 434, 435, 437, 438, 439, 445, 446, 447, 458, 463, 474, 482, 483], "nfw": [25, 27, 486], "nfwprofil": 460, "ni": 364, "nice": [364, 369, 375, 381, 383, 391, 407, 415, 441, 445, 461, 558], "nicer": [364, 400, 463, 484], "nieto": [412, 415, 417, 418, 426, 428, 429, 430], "nieva": 426, "night": [379, 456], "nightli": [396, 455], "nightwise_lc": 455, "nigro": [412, 415, 417, 423, 424, 426, 429], "niter": [117, 119, 127, 441], "nmcid": 418, "nn": 475, "noah": [392, 430], "node": [19, 20, 26, 153, 156, 185, 188, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 238, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 406, 463, 464, 466, 473, 474, 518, 535], "node_typ": [185, 188, 193, 449, 450, 464, 474], "noeth": [412, 413], "nois": [276, 282, 382, 557], "noisi": 473, "non": [16, 80, 83, 86, 95, 97, 99, 100, 104, 105, 109, 111, 117, 118, 119, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 165, 169, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 261, 293, 354, 355, 357, 359, 370, 375, 378, 382, 384, 385, 391, 405, 409, 410, 411, 415, 423, 426, 427, 429, 430, 434, 474, 478, 494, 498, 509, 510, 534, 557], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 275, 276, 277, 290, 291, 293, 296, 301, 305, 313, 314, 315, 317, 320, 321, 322, 323, 331, 333, 339, 347, 351, 352, 353, 357, 358, 359, 360, 361, 364, 376, 378, 381, 388, 391, 392, 417, 428, 429, 434, 435, 437, 438, 440, 441, 445, 446, 447, 449, 450, 451, 453, 456, 457, 458, 460, 461, 462, 465, 466, 468, 469, 471, 474, 482, 486, 494, 510, 515, 516, 517, 558], "nonetyp": [80, 99, 118], "nonposit": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "nonposx": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 415], "nonstopmod": 365, "nonzero": 39, "nooverlaperror": 428, "noqa": [19, 20, 120, 140, 176, 187, 188, 194, 216, 268, 361], "nor": [91, 169, 374, 385, 389, 393], "norm": [19, 20, 26, 116, 117, 119, 120, 121, 124, 127, 133, 134, 160, 204, 205, 207, 208, 209, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 262, 263, 264, 265, 357, 375, 386, 388, 392, 409, 410, 412, 415, 430, 432, 437, 442, 443, 445, 446, 448, 449, 450, 451, 453, 456, 457, 458, 460, 461, 462, 463, 474, 482, 483, 484, 486, 496, 505, 512, 517, 523, 524, 531, 543, 544, 552, 560], "norm_0": [518, 535], "norm_1": [518, 535], "norm_2": [518, 535], "norm_3": [518, 535], "norm_4": 535, "norm_5": 535, "norm_err": [116, 117, 119, 121, 127, 133, 388, 451, 462, 496], "norm_errn": [117, 119, 461, 484, 496], "norm_errp": [117, 119, 461, 484, 496], "norm_max": [120, 121, 124], "norm_min": [120, 121, 124], "norm_n_valu": [120, 121, 124], "norm_only_chang": 427, "norm_paramet": [204, 205, 206, 207], "norm_prior": 392, "norm_scan": [117, 388, 437, 438, 496], "norm_sensit": [117, 119], "norm_ul": [117, 119, 388, 451, 461, 462, 484, 496], "norm_valu": [120, 121, 124], "norma": [33, 38], "normal": [42, 96, 97, 100, 104, 105, 120, 121, 122, 124, 131, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 160, 183, 184, 186, 192, 193, 195, 196, 222, 238, 239, 242, 261, 263, 266, 293, 354, 355, 364, 365, 369, 370, 374, 375, 378, 382, 388, 404, 408, 417, 443, 449, 455, 456, 458, 465, 466, 467, 468, 469, 474, 483, 484, 510, 515, 516, 517, 520, 521, 522, 543, 557, 559, 560], "normalis": [65, 76, 124, 137, 138, 139, 140, 143, 145, 147, 150, 151, 155, 160, 180, 183, 184, 186, 192, 195, 196, 238, 239, 251, 362, 438, 442, 443, 457, 467, 468, 469, 474, 482], "normed_templ": 469, "normspectralmodel": [214, 236, 387, 412, 428, 430, 469, 505], "north": [215, 223, 226, 515], "notat": [412, 500, 502, 508, 561], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 74, 78, 79, 80, 82, 83, 86, 89, 96, 97, 98, 99, 103, 112, 118, 119, 124, 127, 140, 145, 153, 155, 165, 176, 194, 198, 201, 204, 208, 209, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 262, 263, 264, 282, 283, 293, 314, 339, 355, 361, 363, 366, 367, 369, 372, 377, 378, 381, 384, 388, 389, 390, 392, 393, 394, 397, 403, 405, 425, 427, 429, 433, 434, 437, 438, 439, 441, 442, 445, 448, 450, 454, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 494, 496, 498, 510, 511, 520, 521, 532, 560, 561, 562], "notebook": [83, 86, 329, 367, 368, 373, 374, 378, 379, 380, 381, 382, 384, 394, 396, 397, 398, 401, 404, 405, 406, 407, 409, 410, 411, 413, 415, 417, 421, 422, 423, 424, 425, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 497, 498, 499, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 558], "noth": [317, 381, 471], "notic": [370, 463, 478], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [371, 376, 381, 382, 384, 388, 402, 426], "novemb": [373, 402, 412, 413, 414, 415], "now": [16, 78, 80, 84, 94, 99, 117, 118, 119, 193, 237, 364, 367, 369, 370, 371, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 388, 390, 391, 392, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 437, 438, 439, 440, 442, 443, 445, 446, 448, 449, 450, 451, 453, 455, 456, 457, 458, 462, 463, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 495, 496, 507, 545, 549, 550, 551, 558, 560, 561, 562], "np": [79, 83, 86, 106, 110, 112, 119, 142, 183, 184, 186, 192, 195, 196, 266, 364, 365, 375, 376, 379, 387, 388, 392, 426, 433, 437, 440, 441, 443, 445, 447, 449, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 475, 490, 491, 492, 496, 498, 510, 511, 515, 516, 518, 543, 551], "npanel": 351, "npix": [182, 191, 194, 195, 196, 437, 447, 464, 474, 507, 511, 514, 518], "npix_max": 182, "npoint": [276, 463], "npred": [97, 100, 104, 105, 116, 117, 119, 120, 121, 124, 125, 127, 261, 279, 375, 376, 377, 386, 388, 403, 405, 412, 415, 421, 423, 449, 451, 461, 462, 471, 474, 494, 496, 560], "npred_background": [97, 100, 104, 105, 117, 119, 412, 439, 440, 451, 462, 496, 560], "npred_background_min": 136, "npred_excess": [116, 117, 119, 121, 127, 134, 443, 451, 458, 496], "npred_excess_err": [117, 119], "npred_excess_errn": [117, 119], "npred_excess_errp": [117, 119], "npred_excess_ref": [117, 119], "npred_excess_ul": [117, 119], "npred_min": 136, "npred_off": [100, 105, 560], "npred_sig": [97, 100, 104, 105, 376], "npred_sign": [97, 100, 104, 105, 360, 415, 429, 462, 560], "npred_signal_min": 136, "npred_sourc": 462, "nrow": [434, 437, 463, 524], "nside": [182, 183, 184, 426, 474, 509], "nside2resol": 184, "nside_til": [182, 184], "nsou": 441, "nstep": 379, "nu": [19, 26], "nu_e": [26, 460], "nu_mu": [26, 460], "nu_tau": [26, 460], "nuisanc": [437, 463, 557, 561], "null": [117, 119, 120, 121, 124, 125, 273, 275, 277, 438, 442, 443, 445, 448, 469, 482, 496, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 560], "null_valu": [125, 273, 451], "nullabl": [83, 86], "num": 79, "numba": 381, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 65, 70, 73, 78, 79, 81, 82, 83, 86, 87, 88, 89, 95, 97, 98, 100, 103, 104, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 159, 160, 163, 166, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 262, 263, 264, 265, 269, 273, 275, 276, 277, 289, 293, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 325, 326, 351, 357, 368, 369, 370, 373, 375, 376, 377, 378, 379, 383, 385, 388, 390, 391, 393, 400, 405, 415, 417, 418, 419, 424, 425, 426, 429, 430, 433, 434, 437, 438, 439, 440, 442, 443, 445, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 460, 461, 462, 465, 466, 467, 469, 470, 473, 474, 475, 476, 482, 483, 484, 488, 494, 496, 498, 505, 507, 510, 511, 557, 558, 559, 560, 561], "number_of_column": [83, 86], "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 83, 86, 119, 188, 204, 208, 209, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 262, 263, 264, 265, 293, 363, 364, 377, 382, 397, 415, 433, 440, 442, 445, 447, 453, 457, 466, 473], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 87, 96, 106, 110, 112, 119, 120, 124, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 198, 199, 204, 205, 207, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 256, 257, 262, 263, 275, 277, 293, 317, 322, 358, 363, 364, 365, 367, 371, 375, 377, 381, 382, 383, 390, 392, 400, 401, 408, 409, 412, 420, 421, 422, 424, 426, 427, 428, 430, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 482, 483, 484, 490, 491, 492, 496, 498, 510, 511, 515, 516, 518, 543, 551], "numpoint": [201, 463], "numpy121": 367, "nupeak_ob": 484, "nutshel": 562, "n\u00f6the": [415, 417, 418], "o": [65, 78, 83, 86, 96, 190, 364, 373, 378, 381, 385, 388, 395, 396, 398, 407, 415, 418, 421, 422, 423, 429, 433, 434, 437, 441, 447, 454, 455, 456, 457, 466, 470, 471, 473, 498, 557, 558], "o2": 498, "ob": [40, 78, 79, 84, 85, 86, 87, 91, 153, 163, 291, 292, 376, 377, 380, 381, 386, 400, 418, 419, 428, 433, 434, 437, 440, 441, 447, 449, 453, 456, 457, 458, 465, 470, 473, 474, 475, 476, 480, 483, 495, 498, 503, 505, 507, 508], "obei": 510, "obj": [16, 80, 99, 118, 439], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 95, 96, 97, 98, 99, 100, 104, 105, 117, 118, 119, 122, 123, 124, 128, 129, 130, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 167, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 275, 277, 293, 297, 301, 302, 305, 313, 315, 317, 323, 326, 338, 339, 340, 341, 346, 351, 357, 359, 360, 361, 370, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 388, 390, 391, 396, 400, 406, 407, 409, 410, 411, 412, 415, 417, 422, 423, 424, 426, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 446, 448, 451, 453, 454, 455, 456, 457, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 476, 482, 483, 484, 488, 493, 494, 495, 496, 504, 507, 509, 510, 511, 555, 557, 558, 562], "obs_": 437, "obs_clust": [87, 470], "obs_col": 447, "obs_con": [16, 438, 442, 443, 445, 482], "obs_copi": 84, "obs_fil": [16, 438, 442, 443, 445, 482], "obs_filenam": 475, "obs_filt": [84, 85], "obs_id": [16, 78, 83, 84, 85, 86, 91, 136, 291, 292, 374, 376, 386, 391, 400, 434, 437, 438, 439, 440, 442, 443, 445, 446, 447, 449, 450, 455, 456, 457, 463, 465, 470, 473, 475, 476, 480, 482, 483, 507], "obs_id_uniqu": 83, "obs_index": 78, "obs_info": [84, 99, 391], "obs_list": [423, 425], "obs_list_vela": 458, "obs_mod": 90, "obs_muoneff": 470, "obs_po": [41, 296], "obs_tabl": [78, 86, 91, 291, 292, 417, 447, 449, 456, 465, 470, 473, 475, 476, 480, 483, 507], "obs_table_filenam": 78, "obs_tim": [16, 438, 442, 443, 445, 482], "obs_time_src": 465, "obs_zenith": 470, "obscor": 430, "observ": [6, 15, 16, 41, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 96, 97, 98, 99, 100, 103, 104, 105, 107, 153, 158, 159, 160, 163, 164, 165, 166, 168, 169, 170, 173, 174, 175, 176, 178, 179, 180, 213, 216, 221, 225, 227, 228, 229, 244, 250, 262, 265, 278, 284, 290, 292, 301, 322, 368, 370, 376, 377, 378, 379, 380, 384, 386, 388, 391, 396, 405, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 439, 440, 442, 443, 445, 446, 453, 454, 457, 458, 463, 471, 472, 473, 475, 476, 478, 480, 486, 494, 495, 498, 501, 503, 505, 507, 508, 534, 557, 558, 559, 560], "observation_clust": [432, 470, 472], "observation_dead_time_fract": [79, 84], "observation_list": 87, "observation_live_time_dur": [79, 84], "observation_time_dur": [79, 84], "observation_time_start": 79, "observation_time_stop": 79, "observationcheck": 424, "observationcta": 374, "observationeventsampl": 430, "observationfilt": [84, 374, 379, 404, 425], "observationlist": [374, 425], "observationmetadata": 391, "observations_list": 87, "observationsconfig": 16, "observationseventsampl": 430, "observationssummari": 409, "observationstat": [404, 409], "observationt": [78, 377, 378, 426, 470, 475, 483], "observationtablecheck": 424, "observationtablesummari": 421, "observatori": [57, 59, 62, 78, 79, 81, 84, 89, 377, 391, 393, 396, 416, 473, 475, 476, 493, 498], "observatory_earth_loc": [79, 84], "observatory_loc": [391, 417, 433, 440, 449, 450, 453, 457], "obsinfometadata": 99, "obstim": [81, 89, 176, 562], "obtain": [81, 97, 100, 103, 128, 281, 374, 379, 381, 382, 388, 425, 437, 438, 439, 443, 449, 450, 454, 456, 463, 466, 467, 471, 482, 484, 494, 498, 502, 503, 557, 559, 560], "obviou": [376, 383, 384, 385, 391], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 486], "occur": [183, 184, 186, 195, 196, 323, 364, 384, 385, 389, 474], "occurr": [87, 95, 187, 205, 207, 214, 236], "oct": [372, 374, 375, 379, 381, 384, 390], "octob": 373, "odd": [194, 196], "odd_npix": [194, 196], "odot": [28, 35, 39, 40, 52], "off": [97, 100, 102, 104, 105, 116, 158, 164, 165, 168, 171, 180, 277, 290, 361, 362, 367, 370, 376, 378, 379, 380, 409, 415, 417, 419, 429, 433, 434, 438, 439, 443, 447, 455, 456, 458, 462, 463, 465, 471, 494, 507, 508, 557, 559, 560, 561], "off_2": [100, 105], "off_ev": 458, "off_patch": 458, "off_phas": [164, 458], "off_phase_rang": 458, "offdatabackgroundmak": 420, "offer": [117, 367, 375, 390, 391, 396, 397, 424, 439, 463, 465, 469, 498], "offici": [390, 499, 558], "offlin": [83, 86], "offset": [79, 91, 107, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 159, 163, 169, 170, 175, 178, 183, 184, 186, 188, 192, 195, 196, 364, 370, 378, 400, 409, 419, 421, 423, 428, 429, 430, 433, 439, 440, 442, 445, 446, 447, 453, 458, 464, 465, 470, 473, 476, 483, 495, 503, 505, 508], "offset2": 79, "offset_axi": [143, 145, 150, 155], "offset_band": 79, "offset_from_median": 79, "offset_index": 150, "offset_max": [16, 79, 159, 169, 175, 178, 438, 442, 443, 445, 447, 453, 458, 465, 482, 483, 505, 508], "offset_min": 79, "ofjp": 465, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 128, 267, 354, 355, 364, 369, 378, 379, 380, 382, 422, 433, 434, 438, 442, 443, 446, 447, 453, 462, 463, 465, 467, 482, 483, 494, 557], "ogip": [90, 101, 102, 105, 140, 185, 187, 188, 191, 192, 193, 376, 379, 422, 437, 446, 494, 502, 511], "ogip_column": 192, "ogipdatasetread": 105, "ogipdatasetwrit": [105, 428, 430], "ok": [364, 378, 463], "old": [187, 349, 364, 369, 372, 376, 380, 381, 406, 407, 422, 423, 424, 454], "old_attribut": 364, "older": [371, 381, 397, 422, 461], "oldest": 384, "olga": [420, 421], "olivera": [412, 415, 417, 418, 426, 428, 429, 430], "omega": [19, 20, 23, 250, 266, 515, 551], "omit": [127, 365, 445, 473, 558], "omp": 384, "on_circl": 507, "on_ellipse_annulu": 507, "on_ev": 458, "on_patch": 458, "on_phas": [164, 458], "on_phase_rang": 458, "on_posit": 180, "on_radii": 433, "on_radiu": [447, 458], "on_rectangl": 507, "on_region": [16, 97, 100, 166, 433, 434, 437, 438, 439, 440, 442, 443, 445, 447, 449, 450, 455, 456, 458, 462, 482, 507], "on_region_radiu": [433, 437, 440, 449, 450, 456], "onc": [83, 86, 97, 194, 364, 367, 369, 374, 375, 378, 379, 380, 384, 385, 386, 388, 389, 393, 394, 395, 439, 456, 458, 465, 468, 475, 478, 495, 498, 558], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 68, 80, 83, 85, 86, 87, 88, 90, 94, 97, 99, 100, 103, 104, 105, 107, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 165, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 269, 273, 275, 276, 277, 301, 306, 322, 335, 351, 357, 358, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 394, 395, 396, 423, 426, 427, 429, 433, 434, 437, 438, 439, 442, 445, 449, 454, 455, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 482, 483, 484, 493, 494, 495, 496, 498, 503, 505, 507, 510, 511, 517, 555, 556, 558, 559, 560, 561, 562], "ones": [83, 86, 112, 116, 120, 124, 127, 140, 187, 368, 372, 376, 378, 381, 384, 392, 397, 400, 454, 457, 464, 466, 486, 505, 557, 558], "ones_lik": 458, "ongo": [367, 370, 371, 394], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 70, 71, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 95, 96, 97, 98, 99, 100, 103, 104, 105, 116, 118, 119, 120, 124, 127, 134, 141, 142, 146, 148, 153, 156, 159, 165, 170, 181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 204, 205, 207, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 256, 257, 261, 262, 263, 275, 277, 293, 313, 339, 361, 364, 365, 367, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 397, 405, 407, 411, 415, 417, 418, 423, 427, 429, 430, 434, 435, 437, 438, 439, 442, 443, 445, 446, 448, 449, 450, 451, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 483, 486, 494, 496, 498, 502, 505, 508, 511, 553, 557, 558, 559, 560], "onlin": [83, 86, 365, 369, 372, 384, 400], "onlinelibrari": 134, "onoff": [418, 494], "onserv": 88, "ontim": [176, 374, 449, 462], "onto": [183, 184, 186, 192, 194, 195, 196, 351, 370, 483, 494, 498, 510, 556], "oo": 390, "op": 380, "opac": 216, "open": [64, 83, 86, 365, 367, 369, 375, 378, 381, 383, 384, 388, 389, 390, 393, 395, 396, 398, 400, 401, 422, 438, 446, 466, 473, 475, 476, 482, 493, 557, 558], "openastronomi": 423, "oper": [83, 86, 182, 194, 209, 364, 370, 375, 378, 410, 412, 415, 424, 425, 429, 462, 468, 469, 510, 511, 524, 526, 530, 533, 535, 538, 543], "opinion": [369, 558], "oppos": [454, 534, 558], "opposit": [183, 184], "opt": [84, 85, 461, 524, 534], "opt_method": 463, "optic": [216, 378, 524], "optim": [19, 20, 26, 96, 125, 127, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 357, 363, 364, 373, 376, 377, 386, 388, 434, 435, 437, 438, 439, 440, 441, 445, 446, 447, 454, 458, 463, 471, 474, 482, 483], "optimis": [19, 20, 201, 202, 203, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 378, 380, 382, 424, 496, 555], "optimize_opt": [201, 445, 453, 463, 483], "optimize_result": [201, 202, 429], "optimizeresult": [96, 201, 202, 434, 435, 437, 438, 439, 445, 446, 447, 458, 463, 474, 482, 483], "optin": 390, "optinon": [104, 105], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 281, 282, 283, 289, 290, 291, 293, 304, 314, 317, 320, 321, 322, 323, 325, 326, 333, 335, 346, 347, 351, 352, 353, 358, 359, 360, 361, 364, 367, 369, 370, 372, 373, 375, 376, 378, 380, 382, 384, 387, 391, 394, 395, 396, 397, 398, 404, 405, 406, 409, 411, 412, 415, 417, 421, 423, 424, 425, 426, 428, 429, 430, 445, 453, 455, 457, 461, 462, 465, 466, 467, 469, 470, 473, 474, 482, 483, 494, 496, 498, 510, 511, 553, 558], "option_context": [83, 86], "optionali": 518, "optout": 390, "optpars": 369, "oral": 390, "orang": [365, 437, 445, 451, 455, 458, 460, 471, 507], "orchestr": [370, 374, 376, 380, 438, 482, 483], "orcid": 390, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 83, 86, 89, 95, 96, 97, 100, 119, 137, 138, 141, 142, 148, 153, 156, 159, 163, 170, 173, 174, 179, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 261, 273, 293, 361, 365, 370, 375, 376, 378, 379, 380, 381, 388, 389, 390, 392, 405, 406, 407, 408, 409, 410, 411, 412, 415, 437, 438, 439, 441, 445, 446, 449, 458, 461, 463, 464, 465, 466, 469, 475, 482, 483, 484, 509, 510, 511, 558, 561], "ordereddict": [370, 381, 408], "ordinari": 484, "org": [11, 34, 62, 63, 79, 83, 84, 86, 169, 201, 242, 243, 256, 257, 282, 293, 367, 372, 381, 384, 389, 390, 393, 395, 396, 398, 402, 421, 423, 433, 440, 442, 445, 446, 447, 453, 457, 460, 461, 463, 465, 473, 541, 542, 558], "organ": [368, 384, 389, 390, 415, 475, 476, 495, 510], "organis": [371, 380, 383, 390, 423], "orient": [138, 146, 147, 364, 375], "origin": [41, 83, 86, 97, 99, 104, 118, 184, 196, 259, 261, 263, 374, 378, 390, 391, 421, 438, 454, 456, 466, 469, 474, 482, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 561, 562], "orthogon": 326, "oscar": [423, 424], "osx": 411, "ot": 393, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 65, 67, 79, 80, 82, 83, 86, 97, 99, 100, 104, 105, 117, 118, 120, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 165, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 201, 205, 207, 261, 274, 293, 306, 334, 353, 358, 363, 367, 369, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 395, 423, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 494, 495, 496, 498, 503, 505, 507, 511, 526, 555, 556, 558, 562], "other_id": 434, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 83, 86, 97, 99, 100, 104, 105, 118, 151, 190, 194, 196, 198, 204, 205, 206, 207, 214, 236, 293, 357, 377, 387, 390, 468, 469, 474, 525], "oup": [128, 289], "our": [364, 367, 373, 378, 380, 381, 383, 386, 387, 388, 390, 405, 406, 422, 433, 434, 437, 438, 439, 442, 443, 445, 446, 447, 450, 456, 457, 458, 466, 467, 471, 475, 482, 483, 558], "ourself": 484, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 95, 96, 119, 183, 184, 186, 192, 195, 196, 236, 248, 249, 363, 364, 365, 367, 369, 372, 374, 376, 378, 380, 382, 383, 384, 389, 393, 400, 401, 403, 409, 423, 435, 439, 442, 443, 466, 467, 473, 474, 482, 484, 486, 487, 507, 520, 521, 555, 558, 562], "out_fold": 380, "outcom": [369, 378], "outdat": [381, 384], "outdir": [16, 78, 88, 438, 442, 443, 445, 482], "outer": [43, 44, 52, 53, 121, 158, 248, 521], "outer_height": [507, 511], "outer_width": [507, 511], "outfil": 364, "outflow": 193, "outlin": [97, 100, 104, 105, 210, 211, 215, 223, 226, 240, 248, 249, 263, 367, 369, 372, 373, 374, 375, 378, 384, 387], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 79, 80, 82, 83, 84, 86, 88, 99, 118, 132, 133, 140, 145, 183, 184, 186, 192, 195, 196, 202, 214, 228, 236, 276, 322, 365, 372, 374, 377, 380, 381, 385, 388, 391, 404, 419, 425, 428, 429, 445, 449, 450, 453, 457, 465, 466, 482, 483, 496, 498, 558, 559], "output_map": [183, 184, 186, 192, 195, 196], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [83, 86, 97, 104, 109, 111, 140, 160, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 204, 206, 216, 264, 352, 364, 378, 379, 380, 415, 443, 463, 465, 466, 467, 498, 505, 517, 543, 557], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 79, 83, 84, 86, 87, 90, 97, 100, 104, 105, 120, 127, 128, 140, 141, 151, 153, 156, 163, 170, 173, 174, 176, 177, 183, 184, 186, 187, 188, 192, 194, 195, 196, 214, 236, 266, 275, 277, 281, 304, 305, 318, 355, 364, 365, 369, 372, 373, 374, 377, 378, 379, 384, 387, 391, 395, 397, 415, 434, 437, 445, 448, 449, 457, 461, 462, 465, 466, 469, 471, 483, 484, 496, 502, 559, 560], "overal": [372, 378, 437], "overcom": 467, "overestim": [496, 560], "overflow": [193, 439, 457, 546], "overkil": 457, "overlai": 438, "overlaid": [97, 100, 104, 105, 437, 438], "overlap": [82, 86, 109, 111, 124, 171, 188, 193, 361, 379, 437], "overlap_ok": 82, "overlin": [97, 104, 494], "overload": 415, "overplot": [461, 493], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 332, 375, 437, 439, 447, 451], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 118, 191, 361], "oversampl": [98, 103, 151, 153, 156, 163, 170, 176, 182, 183, 184, 186, 191, 192, 195, 196, 211, 215, 223, 226, 227, 228, 238, 248, 249, 251, 253, 259, 263, 265, 269, 406, 465], "oversample_energy_factor": [98, 103, 450], "oversampling_factor": [184, 194, 210, 211, 215, 223, 226, 227, 228, 238, 240, 248, 249, 251, 253, 259, 263, 265], "overview": [6, 367, 394, 409, 410, 412, 415, 432, 458, 466, 469, 478, 484, 485, 498, 499, 512, 559], "overwrit": [11, 15, 16, 19, 20, 26, 78, 79, 84, 88, 95, 96, 97, 100, 102, 104, 105, 117, 119, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 188, 190, 191, 192, 193, 194, 195, 196, 202, 204, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 313, 388, 424, 426, 437, 438, 445, 446, 449, 450, 451, 464, 466, 467, 468, 469, 473, 474, 480, 482, 483, 494, 498, 511, 522, 558], "overwrite_templ": [202, 214, 236], "overwritten": [153, 156, 305], "owen": [403, 416], "own": [83, 86, 94, 117, 119, 190, 192, 367, 370, 380, 386, 390, 415, 433, 449, 469, 474, 498, 510, 511], "p": [38, 51, 54, 83, 86, 104, 105, 123, 280, 290, 364, 415, 438, 448, 460, 463, 482, 498, 503, 504, 560], "p0_birth": 43, "p90": 48, "p_": [500, 502, 503, 504], "p_0": [51, 183, 186, 192, 195, 196, 490], "p_dot": [51, 54], "p_i": [183, 186, 192, 195, 196], "p_lat": [183, 186, 192, 195, 196], "p_lon": [183, 186, 192, 195, 196], "p_mean": 42, "p_n": [183, 186, 192, 195, 196], "p_stdv": 42, "p_valu": [275, 277, 463, 558, 560], "pace": [372, 373], "packag": [6, 11, 132, 293, 329, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 378, 381, 382, 384, 389, 390, 391, 393, 395, 396, 398, 399, 400, 401, 402, 403, 405, 408, 409, 411, 412, 415, 418, 419, 420, 421, 422, 423, 424, 426, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 494, 497, 498, 499, 506, 511, 522, 530, 532, 533, 546, 558, 562], "pacman": 420, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [83, 86, 97, 100, 104, 105, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 352, 412, 415], "pad_width": [97, 104, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196], "pad_with": [183, 184, 186, 192, 195, 196], "page": [6, 83, 86, 201, 278, 284, 290, 365, 367, 369, 376, 378, 381, 384, 390, 393, 394, 396, 397, 401, 409, 410, 415, 418, 419, 422, 423, 424, 425, 463, 466, 476, 478, 496, 498, 509, 511, 559, 562], "pain": [364, 367, 371], "pair": [16, 80, 97, 99, 100, 104, 105, 117, 118, 119, 128, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 380], "panda": [83, 86, 363, 381, 424, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "panel": [84, 96, 97, 100, 104, 105, 351, 418, 449, 463], "panel_fov": 351, "panni": 415, "papadopoulo": [415, 417], "paper": [57, 59, 62, 70, 71, 120, 169, 384, 390, 424, 454, 456, 461, 465, 475, 486], "papermil": 380, "par": [375, 387, 392, 463, 471, 473], "par_000_amplitud": 463, "par_001_alpha": 463, "par_002_beta": 463, "par_00x_": 375, "par_1": [201, 463], "par_2": [201, 463], "par_alpha": 463, "par_beta": 463, "par_box": 86, "par_nam": [214, 236], "par_to_v": 473, "par_typ": [214, 236], "parabol": [274, 306, 463], "parabola": [230, 231, 432, 446, 463, 512, 544], "paragraph": 369, "parallel": [6, 88, 120, 121, 124, 127, 159, 308, 309, 310, 311, 312, 313, 314, 367, 381, 394, 417, 429, 430, 462], "parallel_backend": [88, 120, 121, 124, 127, 159, 313, 451], "parallelbackendenum": 308, "parallelmixin": [88, 120, 127, 159], "param": [16, 80, 99, 118, 216, 264, 357, 380, 410], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 295, 297, 299, 300, 302, 304, 305, 306, 307, 313, 314, 315, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 373, 376, 377, 379, 380, 382, 383, 386, 388, 390, 401, 404, 405, 406, 407, 408, 409, 411, 412, 415, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 464, 465, 470, 471, 473, 474, 483, 484, 486, 494, 496, 497, 498, 505, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561], "parameter": 469, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_name_scan": 201, "parameterestim": [113, 411, 430], "parameteris": [500, 502], "parameters_list": [205, 207], "parameters_nam": [214, 236], "parameters_stat_sum": 392, "parameters_unique_nam": [214, 236, 463], "parametr": [16, 27, 80, 96, 99, 118, 143, 144, 149, 152, 154, 230, 231, 248, 376, 380, 387, 405, 412, 415, 439, 441, 469, 473, 520, 521, 532], "parametricpsf": [144, 152, 415, 417], "parametris": [152, 387, 409, 502, 504, 515, 516, 517, 518, 525, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553], "parent": [16, 80, 99, 112, 116, 118, 120, 124, 127, 194, 364, 374, 391, 456, 496, 534], "parenthes": [375, 381, 427, 429], "parfiv": [381, 408], "parnam": 471, "pars": [16, 80, 81, 99, 118, 182, 191, 365, 378, 433, 440, 442, 445, 447, 453, 457, 467, 473, 558], "parse_arg": 558, "parse_fil": [16, 80, 99, 118], "parse_obj": [16, 80, 99, 118], "parse_raw": [16, 80, 99, 118], "parseabl": 293, "parser": 558, "part": [96, 364, 367, 370, 373, 375, 377, 378, 379, 380, 382, 383, 384, 389, 390, 405, 409, 410, 411, 419, 424, 429, 430, 433, 434, 437, 445, 453, 461, 462, 466, 467, 483, 484, 498, 503, 507], "parti": 369, "partial": [86, 97, 100, 141, 142, 148, 153, 156, 159, 182, 194, 196, 261, 378, 382, 410, 424, 509], "partial_overlap": 86, "particip": [369, 373, 384], "particl": [19, 26, 237, 266, 411, 486, 534], "particle_distribut": [237, 534], "particular": [83, 86, 364, 370, 377, 379, 386, 388, 389, 391, 412, 415, 426, 427, 434, 437, 438, 439, 440, 442, 446, 449, 454, 456, 457, 463, 465, 468, 473, 475, 476, 482, 483, 495, 498, 505, 507, 511, 560], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [367, 373, 374, 378, 384, 385], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 66, 79, 80, 81, 82, 83, 84, 85, 86, 88, 96, 97, 99, 100, 103, 104, 105, 118, 119, 122, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 168, 176, 181, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 199, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 274, 276, 293, 305, 313, 314, 315, 320, 321, 322, 323, 351, 352, 357, 359, 360, 364, 367, 374, 376, 377, 378, 379, 391, 411, 415, 417, 429, 430, 434, 435, 437, 438, 445, 446, 450, 454, 455, 456, 461, 462, 463, 464, 465, 466, 467, 469, 470, 473, 482, 483, 484, 498, 509, 510, 511, 515, 516, 558, 562], "pass4": 475, "passkwarg": 439, "past": [364, 369, 372, 380, 381, 384, 385, 387, 390, 392, 400, 421, 423, 424, 466, 558], "patch": [361, 364, 371, 390, 418, 427, 437, 439, 447, 451, 458], "path": [11, 15, 16, 64, 78, 79, 80, 82, 83, 84, 86, 88, 95, 99, 101, 102, 105, 118, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 183, 184, 186, 191, 192, 195, 196, 202, 214, 228, 236, 262, 301, 329, 330, 331, 333, 364, 367, 399, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 496, 552, 553, 558], "path_effect": [191, 214, 236], "path_to_notebook": 364, "path_to_script": 364, "patheffect": [191, 214, 236], "pathlib": [78, 79, 82, 83, 86, 140, 192, 202, 214, 236, 330, 437, 438, 445, 446, 449, 450, 473, 482, 483], "pathpatch": 451, "pattern": [364, 370, 378], "paula": 430, "paulakx": 430, "paz": [416, 419, 420], "pbar": 498, "pc": [46, 47, 50, 52, 491, 492], "pcolormesh": [79, 119, 137, 138, 140, 143, 144, 145, 150, 152, 154, 155, 422, 428, 463, 464], "pd": [83, 86], "pdf": [140, 144, 169, 242, 243, 256, 257, 315, 357, 365, 446, 449, 460, 465, 488, 490, 491, 492, 494, 495, 500, 501, 502, 504, 507, 511, 541, 542, 560, 563], "pdf_in_safe_rang": 140, "pdf_matrix": 140, "pdf_threshold": [140, 141, 145], "pdflatex": 365, "peak": [66, 122, 132, 133, 140, 169, 220, 225, 227, 231, 417, 423, 430, 441, 454, 461, 465, 521], "peak_bright": 66, "peak_brightness_error": 66, "peak_latitud": 66, "peak_latitude_error": 66, "pedant": 364, "peek": [79, 84, 97, 100, 104, 105, 122, 123, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 364, 376, 400, 412, 418, 422, 426, 434, 439, 445, 449, 450, 458, 462, 464, 473, 475, 476, 495, 498, 500, 501, 502, 504], "pend": 293, "peopl": [369, 371, 384, 390, 393, 394, 460, 486, 498, 558], "pep": 369, "pep8": 367, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 94, 96, 97, 100, 104, 105, 107, 116, 117, 119, 120, 121, 124, 125, 132, 134, 135, 136, 153, 156, 188, 221, 228, 229, 269, 278, 284, 290, 364, 370, 376, 377, 380, 388, 390, 391, 403, 411, 415, 417, 430, 433, 440, 449, 453, 455, 457, 460, 465, 466, 470, 471, 475, 476, 494, 498, 501, 557, 559], "per_decad": [188, 437, 439, 449, 450, 458, 462, 474, 502, 508], "percent": 126, "percentag": [140, 169, 465], "percentil": 79, "perfect": 140, "perfectli": [516, 558], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 83, 86, 89, 95, 99, 103, 118, 160, 168, 182, 194, 196, 211, 214, 215, 223, 226, 236, 238, 248, 249, 253, 259, 263, 275, 277, 331, 357, 364, 365, 370, 373, 374, 375, 379, 380, 388, 391, 394, 396, 405, 412, 415, 417, 420, 424, 427, 429, 430, 433, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 450, 453, 455, 456, 457, 462, 463, 465, 466, 467, 468, 470, 475, 478, 482, 494, 498, 506, 507, 510, 516, 534, 556, 557, 558, 559], "perhap": 511, "period": [42, 51, 54, 188, 262, 371, 390, 423, 470, 490], "period_dot": 51, "periodogram": [276, 379, 424], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 390], "perseu": [33, 38], "person": [364, 367, 369, 371, 372, 373, 377, 382, 385], "perspect": [83, 86], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 423, "pf": 26, "pformat": [83, 86], "pformat_al": [83, 86], "pg": 484, "ph": 349, "pha": [101, 102, 105, 192, 376, 421, 424, 437, 446], "pha_": 462, "pha_meta": 101, "pha_ob": [101, 136, 446, 463], "pha_obs23523": [104, 105, 125, 273, 471, 496], "pha_obs23592": 496, "phacountsspectrum": 407, "phacountsspectrumlist": 406, "phase": [50, 52, 53, 85, 161, 164, 262, 369, 374, 375, 378, 379, 381, 383, 388, 400, 405, 424, 426, 429, 432, 469, 487, 498, 512, 554], "phase_axi": 388, "phase_bkg_mak": 458, "phase_column_nam": [164, 458], "phase_curve_model": 552, "phase_filt": 85, "phase_max": 458, "phase_min": 458, "phase_model": 552, "phasebackgroundestim": 409, "phasebackgroundmak": [161, 409, 429, 458], "phasecurv": [262, 423, 552], "phasecurve_lsi_dc": 552, "phasecurvemodel": 387, "phasecurvetablemodel": [375, 377], "phasecurvetempl": 375, "phasogram": [262, 552], "phi": [19, 20, 26, 189, 208, 209, 212, 215, 216, 218, 219, 220, 223, 226, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 297, 387, 453, 463, 468, 469, 474, 484, 503, 515, 516, 517, 519, 520, 521, 525, 527, 528, 529, 531, 532, 536, 537, 539, 540, 541, 542], "phi_0": [208, 210, 211, 215, 218, 219, 220, 223, 226, 230, 231, 238, 240, 242, 243, 248, 249, 252, 253, 255, 256, 257, 259, 263, 387, 463, 525, 528, 529, 532, 536, 539, 540, 541, 542], "phi_ref": [262, 552], "philipp": [423, 424], "phone": 384, "photon": [44, 216, 237, 349, 379, 440, 449, 453, 467, 469, 484, 503, 534, 557], "photutil": [132, 364, 378, 424], "php": 62, "physic": [120, 121, 124, 127, 313, 314, 363, 388, 392, 406, 438, 446, 466, 469, 471, 473, 482, 496, 498, 534, 557, 560, 561], "pi": [19, 20, 30, 31, 32, 37, 54, 224, 266, 387, 469, 492, 515, 516, 517, 520, 521, 531, 551], "pick": [364, 371, 378, 389, 405, 484], "pictur": 365, "pie": 498, "piec": [364, 370, 378, 383, 392], "piecewis": [238, 239, 432, 469, 512, 523, 544], "piecewisebrokenpowerlawnormspectralmodel": 387, "piecewisebrokenpowerlawnormspectramodel": 387, "piecewisenormsectralmodel": 412, "piecewisenormspatialmodel": [245, 429, 469, 518], "piecewisenormspectralmodel": [246, 392, 412, 415, 428, 430, 469, 505, 535], "pig": [13, 364, 366, 367, 404, 405, 407, 408, 409, 411, 412, 423, 425, 426, 430], "pii": 134, "pillar": 380, "pin": 424, "pink": [104, 105], "pint": [458, 498], "pintor": [377, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 426, 428, 429, 430], "pip": [363, 367, 371, 381, 395, 396, 398, 405, 424, 473, 558], "pipe": [420, 421, 422], "pipelin": [377, 379, 411], "piron": 557, "piron2001": 557, "pivot": [19, 20, 26, 65, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 430, 461], "pivot_energi": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "pix": [181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 510], "pix_reg": 460, "pix_reg_rec": 460, "pix_to_coord": [181, 182, 185, 187, 188, 191, 193, 194, 430], "pix_to_idx": [181, 182, 185, 187, 188, 191, 193, 194], "pixcoord": 378, "pixel": [13, 79, 97, 100, 104, 105, 107, 108, 112, 122, 132, 133, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 154, 155, 166, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 211, 214, 215, 223, 226, 236, 238, 248, 249, 253, 259, 263, 375, 403, 407, 421, 424, 441, 443, 449, 451, 462, 465, 466, 474, 484, 494, 496, 508, 509, 510, 519], "pixel_area": 194, "pixel_scal": [112, 182, 194], "pixelregion": [378, 507], "pixilis": 466, "pixreg": 517, "pixregion": 196, "pk": [128, 410, 454, 456, 457, 461, 470, 484, 524], "pks2155": 456, "pks2155_hess_lc": [117, 119, 135, 454], "pl": [65, 76, 116, 121, 127, 160, 234, 241, 242, 243, 387, 435, 451, 461, 462, 469, 484], "pl_model": 550, "pl_spectrum": 471, "place": [79, 82, 83, 86, 87, 95, 97, 100, 104, 105, 132, 137, 138, 139, 140, 141, 142, 143, 147, 148, 153, 155, 156, 166, 171, 183, 184, 186, 192, 195, 196, 236, 261, 289, 337, 364, 365, 371, 372, 375, 376, 377, 378, 380, 383, 384, 385, 386, 389, 394, 408, 410, 437, 455, 466, 467, 469, 484, 494, 495, 498, 556, 562], "placehold": 369, "plai": [384, 447], "plain": [381, 466], "plan": [368, 369, 373, 374, 378, 380, 381, 384, 389, 393, 404, 421, 423, 424, 425, 555], "planar": [263, 375], "plane": [29, 65, 66, 120, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 384, 460, 461, 466, 473, 493, 508, 511, 516, 557, 563], "plate": [194, 466], "platform": [381, 390, 415], "plausibl": [391, 448], "pleas": [98, 103, 365, 367, 369, 371, 373, 399, 404, 405, 406, 415, 423, 425, 435, 437, 438, 439, 440, 442, 445, 449, 450, 454, 456, 457, 462, 482, 487, 498], "pleasant": 367, "plot": [6, 19, 20, 26, 64, 65, 79, 84, 96, 97, 100, 104, 105, 119, 122, 123, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 199, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 267, 271, 342, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 365, 378, 379, 380, 382, 383, 385, 388, 400, 403, 406, 409, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 433, 434, 435, 439, 442, 443, 445, 446, 450, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 467, 469, 470, 471, 473, 474, 475, 476, 482, 484, 488, 490, 491, 492, 494, 498, 500, 501, 502, 504, 507, 552, 553, 560, 562], "plot_absorb": [432, 524, 544], "plot_at_energi": [137, 138, 473], "plot_bia": [140, 145], "plot_broken_powerlaw": [432, 525, 544], "plot_compound": [432, 526, 544], "plot_const": [432, 514, 523], "plot_constant_spectr": [432, 527, 544], "plot_constant_tempor": [432, 545, 554], "plot_containment_radiu": [144, 150, 152, 154], "plot_containment_radius_vs_energi": [144, 150, 152, 153, 154, 156, 473, 474], "plot_contour_lin": 463, "plot_correl": [199, 463], "plot_count": [104, 105], "plot_dat": 562, "plot_disk": [432, 515, 523], "plot_distribut": [443, 445], "plot_energi": [79, 450], "plot_energy_depend": [137, 143, 473, 500], "plot_energy_offset": 79, "plot_err": 122, "plot_error": [19, 20, 26, 64, 65, 96, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 223, 224, 226, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 252, 253, 254, 255, 256, 257, 259, 260, 263, 264, 382, 435, 437, 439, 445, 446, 448, 461, 463, 483], "plot_excess": [104, 105, 418], "plot_exp_cutoff_powerlaw": [432, 528, 544], "plot_exp_cutoff_powerlaw_3fgl": [432, 529, 544], "plot_exp_cutoff_powerlaw_norm_spectr": [432, 530, 544], "plot_expdecay_tempor": [432, 546, 554], "plot_extension_error": [210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263], "plot_fit": [96, 104, 105, 434, 437, 438, 439, 447, 458, 482], "plot_gauss": [432, 516, 523], "plot_gauss_spectr": [432, 531, 544], "plot_gaussian_tempor": [432, 547, 554], "plot_gen_gauss": [432, 517, 523], "plot_generalized_gaussian_tempor": [432, 548, 554], "plot_grid": [151, 183, 184, 186, 192, 195, 196, 210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263, 388, 417, 428, 445, 462, 464, 465, 466, 467, 469, 475], "plot_heatmap": 199, "plot_hist": [192, 511], "plot_imag": 79, "plot_interact": [183, 184, 186, 192, 195, 196, 210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263, 417, 424, 445, 453, 466, 482, 483], "plot_kernel": 151, "plot_kwarg": [437, 439, 447], "plot_linear_tempor": [432, 549, 554], "plot_logparabola": [432, 532, 544], "plot_logparabola_norm_spectr": [432, 533, 544], "plot_map_rgb": 429, "plot_mask": [104, 105, 184, 192, 196, 434, 437, 438, 507], "plot_matrix": [140, 462, 474], "plot_migr": 145, "plot_naima": [432, 534, 544], "plot_npred_sign": [429, 445, 447, 483], "plot_offset2_distribut": 79, "plot_offset_depend": [137, 143], "plot_panel": 351, "plot_phasogram": 262, "plot_piecewise_norm_spati": [432, 518, 523], "plot_piecewise_norm_spectr": [432, 535, 544], "plot_point": [432, 519, 523], "plot_posit": [214, 236, 468], "plot_position_error": [210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263], "plot_powerlaw": [432, 536, 544], "plot_powerlaw2": [432, 537, 544], "plot_powerlaw_norm_spectr": [432, 538, 544], "plot_powerlaw_tempor": [432, 550, 554], "plot_profil": 122, "plot_psf_vs_rad": [144, 150, 152, 153, 154, 156, 474], "plot_rad_max_vs_energi": [155, 439], "plot_region": [191, 192, 214, 236, 361, 439, 451, 468, 507, 511], "plot_residu": [96, 97, 100, 104, 105, 413, 415, 445, 483], "plot_residuals_spati": [97, 100, 104, 105, 445, 453, 483], "plot_residuals_spectr": [97, 100, 104, 105], "plot_rgb": 429, "plot_shel": [432, 520, 523], "plot_shell2": [432, 521, 523], "plot_sine_tempor": [432, 551, 554], "plot_smooth_broken_powerlaw": [432, 539, 544], "plot_spati": 415, "plot_spectrum": [96, 137, 445, 457, 462], "plot_spectrum_datasets_off_region": [412, 428, 429, 437, 439, 447, 507], "plot_super_exp_cutoff_powerlaw_3fgl": [432, 540, 544], "plot_super_exp_cutoff_powerlaw_4fgl": [432, 541, 544], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [432, 542, 544], "plot_templ": [432, 522, 523], "plot_template_phase_tempor": [432, 552, 554], "plot_template_spectr": [432, 543, 544], "plot_template_tempor": [432, 553, 554], "plot_theta_squared_t": [475, 476], "plot_tim": 79, "plot_ts_profil": [119, 437, 438, 451, 455], "plotmixin": [104, 105], "plotter": 351, "plsuperexpcutoff3fgl": 422, "plsuperexpcutoff4fgl": 407, "plt": [19, 20, 26, 64, 65, 123, 137, 143, 144, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 352, 361, 364, 365, 400, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 490, 491, 492, 498, 500, 501, 502, 504, 507, 515, 517, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 215, 384, 390, 469], "pmf": 377, "png": [144, 372, 400, 488, 490, 491, 492, 494, 495, 500, 501, 502, 504, 507, 511, 560, 563], "po": [142, 194, 507], "point": [15, 17, 18, 21, 22, 24, 25, 27, 60, 63, 65, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 83, 84, 86, 89, 90, 91, 94, 95, 96, 97, 99, 100, 104, 105, 113, 117, 119, 120, 121, 124, 125, 126, 127, 129, 135, 142, 144, 147, 153, 155, 156, 166, 167, 169, 170, 171, 173, 174, 176, 177, 179, 180, 183, 184, 186, 191, 192, 195, 196, 201, 214, 236, 240, 251, 269, 273, 276, 282, 295, 299, 305, 311, 321, 356, 364, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 403, 406, 408, 409, 415, 417, 418, 420, 421, 422, 423, 425, 428, 429, 430, 432, 434, 436, 439, 440, 441, 445, 450, 451, 453, 455, 457, 458, 462, 463, 464, 465, 466, 469, 470, 474, 476, 478, 486, 487, 493, 494, 495, 498, 503, 506, 507, 510, 512, 516, 517, 523, 534, 555, 556, 557], "point_sourc": 375, "pointer": 372, "pointing_altaz": [391, 429], "pointing_galact": 86, "pointing_info": [81, 89, 433], "pointing_posit": [153, 440, 450, 453], "pointing_radec": [79, 86, 429, 473], "pointing_t": 89, "pointing_zen": 429, "pointinginfo": [81, 421], "pointinginfometadata": 99, "pointingmetadata": 391, "pointingmod": 81, "pointlik": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 423, 507], "points_scal": 305, "pointskyregion": [165, 170, 191, 240, 418, 439, 450], "pointsourc": [375, 486], "pointspatialmodel": [19, 20, 70, 76, 127, 245, 387, 388, 408, 428, 441, 442, 445, 446, 449, 450, 455, 461, 462, 468, 469, 474, 482, 483, 519], "pointspreadfunct": 464, "poisson": [100, 105, 275, 277, 278, 284, 286, 287, 290, 323, 376, 377, 406, 411, 435, 440, 443, 453, 557, 558, 560], "poissonian": [454, 458, 557], "poissonlikelihoodfitt": 420, "polar": [51, 54, 294, 364], "pole": [51, 378, 466], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184], "polici": 368, "pollut": 379, "polygon": [184, 198, 378], "polygonis": 378, "polygonpixelregion": 378, "polygonskyregion": [198, 378], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 233, 466], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [309, 313, 314], "pool_kwarg": [313, 314], "poolmethodenum": 309, "poon": 421, "poorli": 465, "pop": [87, 95, 190, 236], "popitem": 190, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 365, 384, 422, 487, 489, 534, 556], "popular": 558, "port": 422, "pos_ob": 447, "pos_on": 180, "pos_target": [447, 458], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 86, 89, 90, 91, 97, 98, 99, 100, 103, 117, 118, 119, 120, 121, 124, 125, 127, 141, 142, 148, 151, 153, 156, 166, 169, 171, 180, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 197, 204, 205, 206, 207, 210, 211, 214, 215, 223, 226, 236, 238, 240, 248, 249, 251, 253, 259, 261, 263, 273, 275, 277, 291, 292, 295, 296, 299, 300, 352, 364, 371, 375, 377, 378, 387, 388, 389, 390, 405, 407, 412, 415, 417, 430, 433, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 476, 484, 494, 495, 496, 498, 503, 504, 507, 508, 509, 511, 515, 516, 517, 519, 534, 560], "position_angl": 440, "position_error": [210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263, 409], "position_lonlat": [210, 211, 215, 223, 226, 238, 240, 248, 249, 251, 253, 259, 263], "position_off": 180, "positv": 426, "posixpath": [16, 329], "possibl": [33, 78, 83, 86, 146, 364, 365, 367, 371, 372, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 388, 391, 394, 396, 406, 407, 415, 422, 424, 429, 437, 441, 442, 443, 448, 451, 462, 463, 464, 465, 466, 474, 484, 496, 498, 505, 510, 511, 534, 558, 559], "possibli": [83, 86, 117, 370, 374, 375, 377, 378, 382, 383, 384, 385, 391, 393, 415, 505], "post": [52, 373, 391], "poster": [367, 390, 394, 419], "posterior": [382, 471], "posteriori": 471, "postfix": 364, "potenti": [114, 372, 380, 448, 498], "potentiel": 390, "power": [19, 20, 26, 27, 96, 116, 117, 119, 121, 126, 131, 151, 153, 156, 182, 204, 206, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 244, 247, 252, 254, 255, 256, 257, 260, 264, 266, 271, 276, 320, 375, 377, 403, 409, 421, 423, 432, 440, 442, 445, 449, 451, 453, 456, 457, 458, 468, 469, 471, 498, 512, 524, 544, 550], "power_spectrum": 276, "power_spectrum_param": 276, "powerlaw": [169, 242, 244, 276, 375, 376, 380, 421, 423, 432, 434, 442, 450, 451, 461, 469, 471, 483, 512, 538, 554], "powerlaw2spectralmodel": [234, 242, 243, 246, 387, 435, 442, 469, 484, 537], "powerlaw_with_paramet": 276, "powerlawnormspectralmodel": [65, 222, 241, 243, 246, 261, 386, 387, 392, 412, 430, 445, 446, 449, 450, 453, 462, 468, 469, 474, 482, 505, 518, 538, 543], "powerlawspectr": 127, "powerlawspectralmodel": [68, 70, 73, 76, 96, 104, 105, 109, 111, 119, 125, 127, 205, 207, 241, 242, 246, 267, 387, 388, 392, 434, 435, 438, 440, 441, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 461, 462, 468, 469, 471, 473, 474, 482, 483, 484, 496, 514, 515, 516, 517, 519, 520, 521, 522, 524, 526, 535, 536, 538, 545, 546, 547, 548, 549, 550, 551, 552, 553], "powerlawspectramodel": 392, "powerlawtemporalmodel": [258, 469, 550], "pppc4dmid": 26, "pprint": [83, 86, 559], "pprint_al": [83, 86], "pprint_exclude_nam": [83, 86], "pprint_include_nam": [83, 86], "pr": [364, 374, 376, 378, 387, 388, 390, 392, 393, 409, 410], "practic": [377, 381, 385, 388, 389, 390, 391, 437, 462, 467, 469, 483, 494, 498, 507, 557], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 96, 99, 103, 118, 119, 293, 364, 367, 373, 384, 390, 391, 395, 396, 412, 424, 426, 438, 442, 443, 446, 448, 451, 454, 461, 463, 468, 471, 494, 500], "preced": [311, 378, 380, 390, 469], "precis": [127, 144, 150, 152, 154, 211, 215, 223, 226, 238, 248, 249, 253, 259, 263, 364, 382, 389, 390, 450], "precision_factor": [153, 156, 183, 184, 186, 192, 195, 196], "precomput": [26, 96, 119, 462, 468], "pred": 494, "predefin": [417, 451, 455, 456, 482], "predic": 375, "predict": [96, 97, 100, 103, 104, 105, 116, 117, 119, 120, 121, 124, 125, 131, 160, 163, 169, 176, 240, 251, 279, 315, 360, 370, 375, 376, 377, 412, 429, 430, 438, 440, 442, 443, 445, 447, 449, 451, 453, 462, 465, 471, 482, 483, 496, 498, 502, 505, 524, 557, 560], "prefer": [83, 86, 339, 364, 369, 371, 375, 383, 384, 390, 395, 396, 400, 451, 457, 466, 467, 471, 478, 558, 560], "prefix": [188, 375], "preliminari": [373, 384, 392, 420, 422, 430, 441, 464, 474], "prepar": [78, 163, 374, 375, 393, 438, 446, 463, 465, 469, 474, 482, 506, 555], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [83, 86], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 441, 454, 466, 534, 557], "present": [15, 68, 78, 79, 81, 86, 87, 95, 101, 105, 117, 119, 157, 185, 190, 214, 222, 236, 293, 364, 365, 367, 377, 380, 384, 388, 391, 394, 415, 434, 439, 442, 443, 454, 455, 456, 460, 464, 465, 466, 468, 494, 496, 499, 511, 558, 560], "preserv": [83, 86, 100, 183, 184, 186, 188, 192, 195, 196, 381, 462, 467], "preserve_count": [183, 184, 186, 192, 195, 196, 466], "press": 473, "pretti": [378, 384, 394, 400], "prevent": [184, 216, 293, 415, 445], "preview": [367, 476], "previou": [71, 83, 86, 364, 367, 378, 384, 385, 389, 393, 406, 412, 430, 439, 448, 449, 466, 469, 470, 471, 484, 493], "previous": [273, 381, 411, 423, 424, 433, 437, 445, 446, 461, 465, 467], "primari": [26, 83, 86, 183, 184, 186, 187, 195, 196, 369, 390, 411, 426, 466], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 187, "primary_band": 466, "primary_hdu": 449, "primaryflux": [19, 20, 460, 486], "primaryhdu": [449, 466], "prime": 23, "primer": 382, "princip": 448, "principl": [390, 392, 437, 508], "print": [11, 65, 78, 79, 81, 82, 83, 84, 86, 89, 91, 96, 97, 104, 106, 110, 116, 119, 121, 127, 132, 133, 138, 140, 143, 144, 150, 152, 154, 163, 166, 205, 207, 214, 228, 236, 267, 291, 292, 301, 332, 364, 365, 375, 376, 379, 388, 391, 399, 400, 433, 434, 435, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 482, 483, 484, 496, 498, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 558, 559, 560, 562], "print0": 364, "print_level": [445, 453, 463, 483], "print_stack": 364, "printout": [364, 422, 423, 462], "prior": [19, 20, 94, 96, 97, 104, 204, 205, 206, 207, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 368, 373, 396, 398, 430, 432, 434, 437, 438, 439, 440, 442, 445, 446, 451, 453, 457, 461, 463, 469, 472, 478, 483, 484, 510, 543, 555], "prior_registri": 471, "prior_stat_sum": [204, 205, 206, 207, 392, 471], "priorfitstatist": 392, "priori": [388, 443, 467], "prioriti": [361, 373, 375, 376, 378, 390, 393], "priormodel": 392, "priorparamet": [392, 471], "privat": [364, 367, 373, 387, 423, 475, 476], "pro": [364, 380], "probabl": [13, 145, 364, 367, 370, 371, 372, 374, 377, 378, 382, 384, 386, 392, 394, 440, 453, 463, 466, 469, 471, 474, 502, 503, 504, 557, 558, 560, 561], "probe": [282, 469], "problem": [19, 20, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 289, 342, 372, 374, 378, 385, 392, 399, 427, 463], "problemat": [383, 388, 391, 456, 498], "proce": [367, 394, 396, 398, 426, 434, 437, 438, 449, 453, 456, 467, 468, 474, 482, 483], "procedur": [377, 389, 394, 441, 445], "proceed": [384, 390, 475], "process": [11, 79, 88, 120, 121, 124, 127, 159, 184, 196, 312, 313, 314, 323, 364, 365, 367, 369, 370, 372, 373, 374, 376, 377, 379, 380, 386, 389, 390, 391, 397, 401, 407, 412, 415, 417, 423, 430, 434, 437, 447, 449, 450, 461, 462, 465, 475, 480, 483, 488, 495, 497, 498, 556, 557, 558], "process_lots_of_data": 364, "processor": 384, "prod": 404, "prod3": 384, "prod3b": 473, "prod5": [449, 450], "produc": [15, 97, 100, 104, 105, 108, 117, 270, 272, 364, 365, 370, 379, 380, 388, 389, 391, 394, 409, 434, 437, 439, 441, 446, 447, 448, 449, 453, 456, 458, 460, 463, 465, 471, 473, 483, 498, 501, 503, 557, 558], "product": [103, 183, 184, 186, 189, 192, 195, 196, 262, 370, 379, 380, 390, 391, 400, 415, 429, 430, 435, 441, 450, 458, 462, 463, 465, 474, 476, 496, 503, 557], "prof_mak": 121, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 113, 117, 119, 120, 121, 122, 123, 124, 125, 144, 150, 152, 153, 154, 156, 180, 184, 192, 201, 225, 227, 274, 290, 306, 325, 326, 376, 378, 382, 383, 390, 396, 398, 403, 405, 412, 415, 420, 422, 424, 425, 430, 432, 437, 438, 447, 452, 455, 457, 463, 471, 478, 486, 494, 496, 498, 510, 515, 557, 560], "profile_err": 122, "profile_high": 451, "profile_new": 451, "profuma": 486, "program": [364, 380], "programmat": 445, "progress": [15, 78, 112, 124, 127, 201, 314, 370, 373, 380, 381, 394, 415, 422, 423, 424, 430, 498], "progress_download": 498, "prohibit": 498, "proj": [97, 100, 104, 105, 163, 182, 183, 184, 194, 195, 196, 437, 465, 466, 474, 483, 507], "project": [97, 104, 121, 160, 166, 182, 183, 184, 186, 191, 192, 194, 195, 196, 211, 214, 215, 223, 226, 236, 238, 248, 249, 253, 259, 263, 300, 326, 364, 365, 366, 367, 369, 371, 378, 380, 381, 384, 390, 407, 415, 423, 429, 438, 441, 443, 447, 451, 458, 464, 466, 467, 468, 473, 474, 480, 482, 483, 484, 486, 507, 510, 511, 520, 521, 556, 558], "projected_distance_axi": 121, "prompt": 558, "pronounc": 498, "pronunci": 498, "prop_cycl": 361, "propag": [19, 20, 26, 53, 122, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 281, 375, 382, 409, 429, 463], "proper": [45, 95, 379, 390, 428, 429, 439, 445, 498], "properli": [127, 176, 369, 379, 390, 427, 428, 437, 438, 463, 482, 494, 559], "properti": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 91, 117, 160, 194, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 283, 361, 364, 365, 375, 377, 387, 388, 391, 392, 412, 415, 417, 422, 423, 425, 428, 429, 437, 439, 447, 449, 451, 461, 467, 469, 470, 484, 495, 511, 557], "propos": [366, 368, 369, 370, 371, 373, 381, 389, 390, 392, 405, 408, 409, 411, 412, 423, 429], "proto": [16, 80, 99, 118], "proton": [266, 534], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 364, 369, 375, 377, 380, 381, 382, 384, 420, 422, 423, 430, 487], "proven": 380, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 81, 83, 84, 86, 97, 99, 100, 104, 105, 108, 118, 124, 127, 140, 141, 159, 173, 174, 179, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 276, 290, 293, 357, 364, 365, 374, 375, 377, 379, 380, 381, 384, 385, 388, 390, 391, 392, 393, 394, 395, 399, 401, 405, 408, 409, 410, 412, 415, 417, 426, 429, 433, 439, 440, 441, 450, 453, 454, 461, 462, 463, 465, 466, 467, 469, 470, 474, 475, 476, 478, 483, 484, 486, 488, 493, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 508, 509, 510, 511, 512, 519, 522, 534, 543, 555, 556, 557, 558, 560, 563], "proxi": 374, "prune": 367, "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 367, "psf": [16, 78, 83, 84, 91, 97, 98, 100, 103, 104, 105, 107, 108, 142, 144, 149, 150, 151, 152, 153, 154, 156, 163, 170, 179, 194, 214, 236, 251, 291, 292, 364, 370, 374, 375, 376, 377, 380, 403, 405, 409, 410, 411, 412, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 429, 433, 434, 437, 438, 439, 441, 442, 443, 445, 447, 449, 450, 453, 455, 462, 465, 467, 470, 473, 475, 476, 482, 483, 494, 496, 498, 503, 506, 511, 557], "psf3d": [84, 144, 149, 152, 154, 179, 405, 423, 504], "psf68": 433, "psf_": 494, "psf_3gauss": [83, 144, 473, 504], "psf_assym": 464, "psf_kernel": [153, 474], "psf_kernel_map": [151, 474], "psf_king": [83, 152, 504], "psf_map": [98, 103, 153, 156], "psf_map_reco": [156, 475], "psf_mean": 474, "psf_new": 464, "psf_out": [153, 156], "psf_r95": 467, "psf_tabl": [78, 83, 150, 464, 476], "psf_theta": 364, "psf_valu": [144, 152, 154], "psfkernel": [100, 153, 156, 184, 196, 376, 385, 424, 504], "psfking": [149, 417, 504], "psfmap": [97, 98, 100, 103, 104, 105, 141, 142, 148, 149, 151, 156, 163, 170, 179, 376, 377, 385, 405, 408, 409, 411, 412, 424, 430, 441, 462, 474, 498, 504], "psfnd": 464, "psr": [458, 461, 484], "public": [6, 354, 355, 367, 369, 378, 383, 386, 389, 394, 419, 434, 446, 455, 456, 556, 563], "publicli": [473, 475, 476], "publish": [11, 381, 394, 437, 474], "pull": [365, 368, 369, 372, 373, 374, 375, 376, 377, 378, 384, 389, 390, 394, 402], "puls": 227, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 79, 374, 384, 405, 407, 426, 429, 432, 443, 448, 459, 469, 478, 488, 489, 494, 495, 496, 498, 506, 510, 555], "pulsar_analysi": [384, 432, 458, 459], "pulsat": 250, "pulse_stat": 458, "punch": [428, 430], "pure": [364, 381, 383, 384, 507], "purpl": 511, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 317, 339, 368, 370, 376, 379, 383, 387, 389, 390, 423, 441, 462, 468, 469, 502], "push": [364, 367, 393, 426], "put": [364, 365, 367, 369, 371, 372, 375, 384, 393, 394, 400, 406, 440, 449, 467, 474, 558], "pwbpl": 387, "pwd": [367, 396, 398], "pwl": [19, 20, 26, 119, 205, 207, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 267, 375, 387, 392, 435, 449, 469, 471, 496, 514, 515, 516, 517, 519, 520, 521, 522, 524, 526], "pwl2": 469, "pwl_decai": 449, "pwl_norm": [387, 469, 538], "pwn": [43, 461, 484, 491], "pwne": 448, "py": [16, 80, 99, 118, 364, 365, 371, 378, 381, 383, 385, 393, 394, 400, 405, 407, 408, 416, 421, 425, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 482, 483, 484, 485, 498, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 558], "py310": 367, "py35": 422, "pycharm": 406, "pydant": [16, 80, 99, 118, 363, 409, 428, 430], "pydantic_cor": [16, 80, 99, 118], "pydanticserializationerror": [16, 80, 99, 118], "pydanticundefin": [16, 80, 99, 118], "pydata": 417, "pyfact": [403, 421], "pyflak": 417, "pyirf": 430, "pyjok": 363, "pymc": 382, "pymotw": 558, "pypi": [381, 391, 393, 394, 396, 397], "pyplot": [19, 20, 26, 64, 65, 79, 123, 144, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 352, 357, 400, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 490, 491, 492, 498, 500, 501, 502, 504, 507, 515, 517, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551], "pyproject": 412, "pyregion": 378, "pytest": [364, 365, 367, 394, 423], "python": [11, 16, 80, 99, 118, 132, 293, 333, 363, 367, 368, 369, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 390, 391, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 415, 417, 420, 421, 422, 423, 424, 425, 426, 429, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 486, 497, 498, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558], "python3": [329, 397, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 522, 530, 533, 546], "python_execut": [433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "python_vers": [433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "pytorch": 382, "pyx": [367, 394], "pyyaml": [363, 381, 404, 408], "q": [26, 79, 83, 86, 359, 460], "qtabl": [83, 86, 379], "quadrat": [466, 476, 484, 561], "qualiti": [192, 384, 423, 424, 429, 470, 483, 498, 556, 563], "quantifi": [430, 448, 454, 471], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 69, 71, 72, 76, 79, 82, 83, 84, 86, 89, 91, 95, 97, 98, 100, 101, 103, 104, 105, 107, 108, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 167, 168, 169, 171, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 204, 206, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 269, 275, 276, 277, 280, 281, 282, 283, 289, 292, 293, 295, 297, 299, 300, 305, 323, 325, 326, 335, 339, 364, 365, 370, 373, 375, 378, 379, 380, 382, 387, 388, 391, 392, 406, 408, 412, 415, 416, 424, 425, 426, 433, 441, 449, 450, 451, 454, 461, 462, 464, 465, 466, 467, 469, 473, 475, 476, 484, 490, 491, 492, 494, 498, 511, 537, 546, 548, 557, 560, 562], "quantity_support": [464, 515], "quasar": 128, "quentin": [382, 386, 387, 407, 408, 409, 410, 411, 412, 415, 417, 418, 426, 427, 428, 429, 430], "queri": [380, 420, 461], "question": [332, 367, 369, 371, 372, 373, 375, 376, 377, 378, 381, 383, 388, 399, 404, 405, 423, 424, 425, 447, 484, 498, 499, 558], "questionnair": [371, 423], "quetin": 409, "quick": [79, 84, 97, 100, 104, 105, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 364, 367, 384, 394, 441, 442, 445, 447, 449, 457, 462, 464, 468, 473, 475, 476, 478, 484, 486, 495], "quickest": 365, "quickli": [364, 365, 367, 369, 380, 381, 384, 390, 394, 396, 422, 437, 445, 454, 475, 502, 558], "quicklook": 79, "quickplot": 184, "quicksort": [83, 86], "quickstart": 401, "quiescent": 524, "quit": [83, 86, 364, 392, 449], "quival": 375, "quot": [71, 267, 364, 365, 460], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 82, 83, 86, 145, 180, 193, 294, 364, 365, 389, 394, 438, 446, 450, 463, 465, 482, 488, 503, 507, 515, 516, 517, 521, 524], "r68": [79, 107, 144, 153, 156], "r70": [65, 461], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 248, 249, 460, 517, 520, 521], "r_0": [30, 33, 38, 48, 215, 226, 248, 468, 515, 517, 521], "r_1": [39, 48], "r_eval": 226, "r_exp": [36, 48], "r_in": [44, 158, 168, 248, 443, 508], "r_m": 517, "r_out": 44, "r_out_max": 158, "r_out_pwn": 43, "r_sun": 38, "ra": [65, 79, 81, 83, 84, 86, 89, 132, 133, 166, 364, 365, 377, 380, 433, 437, 439, 441, 443, 447, 450, 455, 456, 458, 461, 465, 467, 473, 474, 475, 476, 483, 484, 486, 498, 502, 562], "ra_pnt": 476, "ra_tru": [364, 377], "rad": [33, 79, 84, 97, 100, 104, 105, 107, 108, 144, 150, 152, 153, 154, 155, 156, 166, 179, 250, 380, 417, 429, 439, 462, 464, 465, 474, 503, 504, 507, 551], "rad_axi": [97, 100, 104, 105, 108, 150, 153, 156, 462, 464, 465, 498], "rad_di": [45, 488], "rad_index": 150, "rad_max": [78, 79, 83, 84, 149, 155, 172, 417, 426, 428, 429, 439], "rad_max_2d": [83, 155, 165, 170, 172, 439], "radec": [79, 89, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 364, 365, 464, 466, 484], "radecsi": 522, "radesysa": 522, "radi": [237, 534], "radial": [28, 30, 35, 36, 39, 40, 45, 123, 180, 184, 319, 364, 375, 383, 388, 405, 420, 422, 430, 449, 451, 465, 473, 486, 488, 504, 507], "radian": [17, 18, 21, 22, 24, 25, 27, 189, 210, 211, 215, 223, 226, 238, 240, 248, 249, 251, 253, 259, 263], "radiat": [216, 498, 520, 521, 534], "radiative_model": [237, 534], "radii": [27, 460, 474, 516], "radio": [128, 378, 466], "radiobutton": [445, 453, 466, 482, 483], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 70, 78, 79, 86, 91, 97, 100, 104, 105, 116, 121, 122, 144, 150, 152, 153, 154, 156, 158, 166, 168, 184, 194, 196, 197, 214, 215, 223, 226, 236, 238, 240, 248, 249, 251, 253, 259, 261, 263, 291, 292, 325, 365, 378, 380, 387, 388, 405, 414, 415, 419, 429, 433, 434, 437, 438, 440, 441, 442, 443, 445, 447, 449, 450, 455, 456, 458, 460, 462, 464, 465, 467, 468, 469, 470, 473, 482, 483, 484, 491, 492, 505, 507, 508, 511, 515, 516, 517, 520, 521], "radius_inn": [52, 53], "radius_max": [325, 451], "radius_min": 325, "radius_reverse_shock": [50, 53, 491], "radmax": [417, 418, 429, 430], "radmax2d": [79, 84, 149, 172, 415, 439], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 62, 64, 79, 88, 116, 120, 121, 124, 126, 127, 128, 159, 216, 266, 267, 282, 283, 313, 314, 370, 375, 376, 378, 382, 393, 394, 396, 400, 401, 406, 422, 424, 429, 430, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 486, 488, 489, 493, 494, 495, 498, 501, 503, 505, 507, 508, 524, 555, 556, 557, 558, 559, 560, 563], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 80, 82, 83, 86, 87, 95, 99, 118, 185, 190, 214, 216, 236, 259, 260, 261, 263, 293, 342, 364, 378, 387, 388, 391, 392, 409, 426, 429, 430, 450], "raise_error": [16, 80, 99, 118], "raj2000": [461, 484], "ran": 473, "random": [6, 33, 42, 45, 46, 47, 83, 86, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 276, 315, 316, 317, 318, 319, 320, 321, 322, 323, 367, 376, 377, 380, 407, 419, 423, 449, 469, 498, 559, 560, 562], "random_se": 376, "random_st": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 276, 315, 316, 317, 320, 321, 322, 323, 364, 377, 440, 449, 450], "randomli": [46, 364], "randomnumb": 320, "randomst": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 276, 315, 317, 320, 321, 322, 323, 364], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 65, 69, 71, 72, 76, 79, 83, 86, 87, 95, 96, 97, 100, 104, 105, 120, 140, 153, 155, 156, 169, 181, 182, 185, 187, 188, 191, 192, 194, 204, 206, 208, 209, 212, 213, 215, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 233, 236, 237, 239, 241, 242, 243, 244, 247, 250, 252, 254, 255, 256, 257, 260, 261, 262, 264, 265, 269, 318, 320, 321, 322, 357, 364, 370, 376, 377, 379, 388, 406, 411, 412, 415, 423, 424, 426, 434, 437, 439, 440, 442, 445, 446, 448, 450, 454, 456, 457, 458, 461, 462, 463, 464, 466, 467, 469, 470, 471, 474, 475, 482, 483, 484, 494, 496, 498, 517, 527, 556, 560], "rangl": 19, "rapid": [128, 282, 370, 373, 388, 389], "rare": [363, 364, 383, 466], "raster": [90, 184], "rate": [44, 45, 79, 84, 137, 138, 169, 176, 276, 323, 377, 400, 424, 437, 439, 458, 465, 473, 474, 476, 488, 501, 557], "rather": [112, 116, 120, 124, 127, 369, 382, 385, 423, 426, 428, 430, 434, 463, 466, 484, 494, 516, 560], "ratio": [100, 105, 158, 182, 183, 184, 277, 290, 388, 433, 458, 473, 508, 557, 559, 560, 561, 563], "ravel": [182, 449], "raw": [117, 169, 484], "rc": [183, 184, 186, 192, 195, 196, 361, 466], "rc1": 393, "rc_context": [183, 184, 186, 192, 195, 196, 466], "rc_param": [183, 184, 186, 192, 195, 196, 466], "rcparam": 361, "rdbu": 482, "rdbu_r": [97, 100, 104, 105], "re": [83, 86, 91, 119, 120, 125, 160, 183, 184, 186, 192, 195, 196, 201, 291, 292, 357, 364, 365, 367, 369, 371, 372, 378, 379, 380, 382, 385, 386, 387, 388, 396, 398, 399, 403, 415, 417, 424, 435, 437, 438, 443, 445, 446, 447, 457, 463, 464, 468, 470, 474, 482, 484, 496, 498, 519, 558], "reach": [53, 126, 197, 369, 374, 377, 469], "reactiv": 426, "read": [15, 16, 79, 81, 82, 83, 84, 86, 89, 95, 96, 97, 100, 101, 104, 105, 109, 111, 112, 116, 117, 119, 121, 123, 125, 127, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 165, 183, 184, 186, 190, 191, 192, 195, 196, 214, 216, 228, 236, 262, 263, 264, 268, 270, 272, 273, 331, 350, 352, 357, 359, 364, 365, 367, 369, 374, 375, 376, 377, 380, 384, 386, 388, 390, 391, 392, 396, 398, 409, 412, 415, 423, 424, 426, 429, 430, 437, 438, 439, 443, 445, 448, 449, 454, 462, 463, 464, 469, 471, 473, 474, 475, 478, 482, 484, 495, 496, 498, 500, 501, 502, 504, 522, 552, 553, 558, 561], "read_arf": 101, "read_bkg": 101, "read_builtin": [216, 524], "read_covari": [214, 236], "read_dataset": 15, "read_lazi": 417, "read_model": 15, "read_pha": 101, "read_rmf": 101, "read_xspec_model": 264, "readabl": [345, 375, 417, 438, 482], "reader": [391, 433, 440, 442, 445, 447, 450, 453, 457, 473], "readi": [374, 391, 399, 557], "readili": 384, "readm": [367, 390], "readthedoc": [13, 120, 176, 191, 201, 264, 367, 384, 406, 421, 463, 464, 473, 495, 509, 511], "real": [51, 364, 367, 394, 440, 441, 443, 450, 463, 467, 494], "realis": [364, 369, 378, 390], "realist": 392, "realiz": [370, 557], "realli": [364, 371, 378, 381, 440, 453, 463], "rearrang": 384, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 364, 369, 370, 371, 372, 375, 376, 377, 379, 381, 383, 385, 390, 423, 449, 463, 471, 475, 494, 558], "reassign": [19, 20, 26, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265], "rebas": [364, 378], "rebin": [119, 135, 379, 417, 430, 454, 456, 462], "rebuild": [16, 80, 99, 118, 446], "recarrai": [83, 86, 144, 154], "receiv": [382, 384, 385, 387, 389], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 374, 378, 379, 380, 381, 384, 397, 404, 418, 424, 446, 473, 475], "recip": [366, 380, 401, 415, 458, 499, 560], "reco": [97, 100, 104, 105, 140, 173, 364, 370, 379, 388, 425, 426, 433, 462, 465, 475, 557], "reco_exposur": 116, "reco_psf": [97, 100, 104, 105, 108, 465, 475], "recogn": [433, 440, 442, 445, 447, 449, 453, 457, 473], "recognis": [375, 558], "recognit": 390, "recommend": [87, 95, 170, 214, 236, 274, 305, 306, 363, 364, 365, 367, 371, 373, 381, 390, 394, 395, 397, 400, 407, 424, 438, 439, 448, 462, 463, 465, 469, 474, 482, 498, 505, 510, 511, 558, 559, 562], "recomput": [119, 388], "recompute_ul": 119, "recon_vers": [474, 484], "reconstruct": [79, 97, 98, 100, 103, 104, 105, 107, 108, 116, 126, 127, 131, 140, 141, 142, 145, 155, 156, 169, 176, 364, 370, 375, 377, 412, 427, 433, 434, 437, 440, 442, 443, 445, 449, 453, 457, 462, 465, 467, 471, 475, 494, 496, 502, 503, 504, 511, 557], "recopsfmap": [149, 426, 429], "record": [79, 84, 364, 369, 370, 390], "recov": 380, "rectangl": [211, 215, 223, 226, 238, 248, 249, 253, 259, 263, 326, 378, 451, 507], "rectangleskyregion": [194, 210, 211, 263, 325, 326, 378, 434, 460, 467, 507, 511], "rectangular": [451, 507, 511], "recurr": 379, "recurs": [332, 391], "red": [96, 276, 282, 354, 433, 440, 443, 445, 448, 460, 470, 471, 515, 516], "redesign": 373, "redistribut": 502, "redo": 458, "redshift": [19, 20, 216, 387, 484, 524], "reduc": [6, 11, 15, 95, 97, 100, 104, 105, 151, 153, 156, 161, 171, 183, 184, 186, 188, 192, 195, 196, 370, 371, 373, 375, 376, 380, 383, 385, 390, 391, 396, 403, 408, 415, 424, 430, 432, 434, 435, 438, 439, 440, 445, 446, 449, 453, 455, 456, 457, 467, 470, 472, 475, 478, 494, 498, 503, 508, 510, 511, 516, 517, 555, 556, 557, 558], "reduce_data": 380, "reduce_over_ax": [183, 184, 186, 192, 195, 196, 442, 465, 475], "reduct": [6, 11, 159, 370, 376, 377, 380, 384, 385, 386, 391, 396, 409, 411, 429, 432, 443, 447, 448, 451, 458, 462, 464, 467, 468, 470, 472, 478, 494, 495, 498, 505, 507, 508, 510, 556, 557], "ref": [79, 89, 97, 104, 116, 121, 127, 182, 191, 194, 214, 236, 388, 447, 451, 461, 462, 464, 466, 474, 484, 511, 546, 547, 548, 549, 550, 551, 557, 558], "ref_templ": [16, 80, 99, 118], "refactor": [364, 376, 378, 379, 380, 387, 405, 406, 407, 409, 410, 411, 412, 415, 417, 419, 421, 423], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 62, 65, 67, 79, 80, 81, 82, 83, 84, 86, 89, 96, 97, 99, 100, 101, 104, 105, 107, 108, 117, 118, 119, 120, 122, 127, 128, 145, 159, 160, 163, 166, 167, 170, 171, 172, 175, 176, 178, 193, 194, 195, 196, 201, 208, 209, 212, 213, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 233, 237, 239, 241, 242, 243, 244, 247, 250, 252, 254, 255, 256, 257, 260, 262, 264, 265, 267, 276, 278, 282, 283, 284, 289, 290, 320, 321, 345, 346, 347, 348, 364, 365, 370, 372, 375, 376, 378, 380, 382, 387, 388, 389, 390, 391, 394, 401, 415, 422, 423, 434, 435, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 461, 462, 463, 465, 466, 468, 469, 471, 473, 474, 475, 482, 483, 484, 487, 494, 496, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 526, 528, 529, 530, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 560, 562], "referenc": [364, 557], "reference_flux": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "reference_map": 466, "reference_model": [117, 119, 433, 446], "reference_model_default": [117, 119], "reference_spectral_model": [117, 119], "reference_tim": [82, 84, 97, 100, 104, 105, 187, 193, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 428, 429, 450, 454, 457, 465, 466, 553], "reflect": [161, 165, 166, 167, 171, 180, 373, 378, 380, 383, 385, 396, 408, 415, 417, 420, 421, 424, 434, 437, 438, 439, 447, 456, 467, 506, 557], "reflected_bkg_mak": 465, "reflectedbgestim": 380, "reflectedregionsbackgroundmak": [161, 166, 409, 434, 437, 439, 447, 456, 465], "reflectedregionsfind": [165, 171, 407, 507], "refpix": [194, 195, 196], "refresh": [83, 86], "refus": 364, "reg": [97, 100, 104, 105, 467, 469], "reg_dataset": 462, "regard": [388, 391, 437], "regardless": [83, 86], "regeard": [427, 428, 429, 430], "regi": [370, 375, 376, 380], "region": [6, 27, 79, 86, 95, 97, 100, 102, 104, 105, 109, 111, 121, 123, 126, 128, 141, 142, 148, 153, 156, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 182, 183, 184, 186, 191, 192, 194, 195, 196, 198, 201, 210, 211, 214, 215, 223, 226, 236, 238, 240, 248, 249, 251, 253, 259, 261, 263, 264, 266, 277, 290, 324, 325, 326, 327, 328, 360, 361, 363, 365, 368, 370, 371, 379, 380, 381, 383, 386, 388, 396, 407, 408, 409, 411, 415, 417, 418, 420, 421, 423, 424, 426, 428, 429, 438, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 466, 469, 471, 473, 474, 475, 476, 482, 483, 484, 493, 494, 495, 496, 498, 505, 506, 508, 509, 510, 515, 516, 534, 556, 557, 559, 560, 561], "region_coord": 191, "region_ev": 458, "region_find": [165, 439], "region_io": 191, "region_map": [192, 196, 511], "region_map_1": 511, "region_map_2": 511, "region_mask": [79, 182, 194, 378, 437, 443, 447, 462, 465, 467, 483, 505, 507, 508], "region_nd_map": 192, "region_new": 327, "region_pix": 469, "region_weight": 194, "regionfind": [166, 167, 171], "regiongeom": [97, 100, 104, 105, 117, 121, 163, 170, 172, 173, 174, 176, 177, 192, 211, 215, 223, 226, 238, 248, 249, 251, 253, 259, 263, 378, 379, 386, 396, 411, 412, 415, 433, 434, 437, 439, 440, 447, 451, 456, 457, 458, 461, 462, 465, 474, 484, 494, 507, 510], "regionndmap": [26, 101, 104, 105, 126, 164, 165, 170, 172, 183, 184, 186, 191, 195, 196, 211, 215, 223, 226, 228, 238, 248, 249, 253, 259, 260, 263, 361, 378, 396, 411, 412, 415, 418, 426, 429, 450, 474, 494, 553], "regions_ds9": 467, "regionsfind": [165, 166, 171, 417], "regist": 469, "registri": [55, 93, 113, 149, 161, 232, 234, 245, 246, 258, 385, 392, 408, 411, 412, 415, 424, 461, 469], "regress": 367, "regul": 390, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 182, 190, 194, 373, 392, 417, 429, 453, 466, 467], "regulargridinterpol": [264, 305, 364], "regularis": 392, "regularli": [392, 476], "reichardt": 419, "reimplement": 375, "rej_sampl": 377, "reject": [368, 369, 377], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 83, 84, 86, 100, 101, 105, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 248, 267, 281, 323, 379, 390, 415, 454, 457, 475, 521, 560], "rel_reduction_of_f_": 463, "relat": [11, 13, 65, 79, 81, 199, 282, 370, 372, 375, 377, 378, 381, 383, 384, 385, 390, 394, 411, 412, 424, 430, 449, 462, 469, 473, 488, 555, 560], "relative_variability_amplitud": 454, "relative_variability_error": 454, "relative_variability_signific": 454, "relativist": 534, "releas": [11, 51, 63, 90, 366, 368, 369, 371, 372, 378, 381, 382, 391, 395, 396, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 437, 438, 446, 455, 456, 473, 475, 476, 482, 483, 486, 498, 500, 501, 502, 504], "relev": [117, 275, 277, 347, 364, 370, 379, 384, 388, 393, 437, 438, 441, 455, 456, 457, 468, 470, 473, 475, 476, 482, 483, 494, 495, 562], "reli": [117, 364, 369, 370, 374, 375, 379, 383, 388, 389, 407, 412, 415, 426, 435, 445, 467, 486, 560], "reliabl": [367, 397, 443, 463, 467, 559], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 95, 369, 370, 371, 372, 377, 381, 390, 405, 424, 439, 468, 504], "remark": 439, "rememb": [364, 378, 463, 478, 558], "remi": [386, 387, 407, 408, 409, 410, 411, 412, 415, 426, 427, 428, 429, 430], "remind": [390, 447, 562], "remnant": [28, 52, 434, 448, 469, 489], "remot": 367, "remov": [13, 83, 86, 87, 91, 95, 120, 121, 124, 153, 156, 168, 181, 182, 187, 190, 191, 194, 196, 204, 206, 236, 292, 367, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 395, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 437, 443, 458, 462, 467, 470, 473, 487, 498, 507], "remove_column": [83, 86], "remove_indic": [83, 86], "remove_row": [83, 86], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 119, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 367, 374, 375, 383, 384, 387, 403, 406, 408, 409, 410, 411, 415, 425, 426, 429, 558], "rename_ax": [181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 426], "rename_column": [83, 86, 119], "rename_dupl": [83, 86], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 342, 364, 372, 423], "renorm": [443, 505], "renormalis": 168, "reoptim": [120, 124, 125, 201, 405, 451, 455, 463, 471, 482], "reorder_ax": [183, 184, 186, 192, 195, 196, 429], "reorgan": 415, "reorganis": 384, "repeat": [365, 445, 475], "repl": 364, "replac": [15, 16, 80, 83, 86, 95, 97, 99, 100, 104, 105, 118, 141, 142, 148, 153, 181, 182, 184, 187, 191, 192, 194, 196, 261, 273, 364, 374, 375, 378, 382, 385, 391, 397, 406, 407, 409, 411, 412, 429, 430, 449, 458], "replace_axi": [181, 182, 191, 194], "replace_column": [83, 86], "repo": [365, 372, 393, 394, 403, 416], "report": [83, 367, 380, 393, 394, 403, 417, 418, 423], "repositori": [83, 86, 364, 367, 369, 372, 374, 390, 393, 415, 424, 449, 476], "repres": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 83, 86, 97, 99, 100, 104, 105, 118, 182, 184, 186, 188, 189, 191, 193, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 256, 257, 262, 263, 293, 301, 311, 364, 375, 376, 377, 378, 382, 385, 386, 387, 388, 405, 429, 450, 451, 461, 463, 465, 466, 467, 469, 474, 484, 493, 494, 496, 500, 501, 502, 504, 510, 555, 556, 557, 562], "represent": [16, 19, 20, 26, 79, 80, 82, 83, 86, 99, 118, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 364, 378, 391, 405, 407, 429, 435, 461, 466, 469, 510], "reprocess": 370, "reproduc": [89, 96, 119, 365, 380, 381, 382, 384, 390, 391, 395, 397, 424, 465, 486], "reproject": [169, 183, 184, 186, 192, 195, 196, 360, 364, 370, 378, 381, 388, 409, 416, 424, 426, 430, 466, 467], "reproject_by_imag": [183, 184, 186, 192, 195, 196, 430], "reproject_to_geom": [183, 184, 186, 192, 195, 196, 426], "request": [81, 117, 119, 365, 368, 369, 371, 372, 373, 374, 375, 376, 378, 384, 388, 389, 390, 392, 394, 402, 449, 467, 486, 496], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 78, 79, 80, 81, 83, 84, 86, 90, 97, 99, 100, 104, 105, 106, 110, 118, 119, 122, 127, 137, 138, 144, 152, 160, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 293, 339, 343, 344, 362, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 386, 387, 388, 389, 390, 392, 393, 395, 397, 403, 408, 409, 410, 411, 416, 417, 419, 420, 421, 422, 425, 426, 427, 434, 439, 443, 446, 454, 456, 457, 458, 462, 464, 466, 467, 469, 473, 483, 496, 498, 511], "require_ev": 78, "required_ax": [137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 464], "required_hdu": 418, "required_irf": [16, 78, 438, 439, 442, 443, 445, 482], "required_nam": [185, 187, 188, 193], "required_paramet": [144, 152, 154], "rerun": 379, "resampl": [97, 100, 104, 105, 119, 135, 136, 141, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 195, 196, 359, 415, 417, 454, 498], "resample_axi": [119, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 359, 412, 454, 456], "resample_energy_axi": [97, 100, 104, 105, 141, 412, 417, 462], "resample_energy_edg": [437, 498], "resampled_energy_edg": 136, "resampled_map": [183, 184, 186, 192, 195, 196], "rescal": 465, "research": [380, 390], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 222, 261, 365, 412], "reset_data_cach": [97, 100, 104, 105], "reset_to_default": 222, "reshap": [183, 184, 186, 192, 195, 196, 433, 450, 464, 466], "resid": [386, 469], "residu": [70, 96, 97, 100, 104, 105, 160, 375, 376, 380, 407, 412, 418, 425, 443, 462, 463, 474, 494, 507, 557], "resolut": [52, 140, 141, 145, 182, 194, 373, 375, 377, 378, 423, 429, 461, 474], "resolv": [16, 80, 99, 118, 365, 367, 374, 378, 379, 386, 387, 399, 405, 424], "resort": 442, "resourc": [423, 478], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 79, 80, 83, 86, 99, 101, 118, 119, 128, 182, 184, 194, 196, 274, 374, 379, 390, 392, 412, 441, 443, 457, 466, 467, 475, 496, 511, 561], "respond": 390, "respons": [6, 103, 140, 141, 142, 145, 147, 148, 166, 364, 370, 371, 373, 375, 376, 377, 379, 380, 388, 390, 396, 422, 423, 424, 425, 434, 437, 438, 439, 440, 453, 457, 464, 465, 468, 473, 476, 478, 482, 483, 494, 495, 500, 502, 504, 556, 557], "rest": [26, 367, 381, 383, 461, 493], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 468], "restore_statu": [205, 207, 214, 236, 471], "restore_valu": [205, 207, 214, 236], "restrict": [83, 86, 378, 445, 462, 467], "restructur": [365, 379, 380, 381, 383, 385, 391, 394, 409, 415, 416, 417, 418, 420, 429], "result": [16, 46, 71, 80, 82, 83, 86, 87, 96, 97, 99, 100, 104, 105, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 132, 134, 145, 151, 153, 156, 169, 173, 174, 179, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 200, 201, 202, 203, 214, 236, 263, 273, 276, 293, 357, 363, 364, 365, 367, 369, 371, 373, 374, 375, 376, 377, 380, 382, 383, 386, 390, 392, 397, 400, 407, 415, 417, 418, 423, 425, 429, 430, 435, 437, 439, 440, 445, 447, 449, 450, 453, 454, 456, 457, 458, 461, 462, 463, 466, 467, 470, 471, 474, 475, 476, 482, 483, 486, 493, 496, 511, 546, 557, 559, 560], "result2": 468, "result_ecpl": 435, "result_joint": [434, 437, 445], "result_list": 357, "result_log_parabola": 435, "result_minuit": 463, "result_pwl": 435, "result_scipi": 463, "result_stack": 437, "results_joint": 446, "results_prior": 471, "results_simplex": 463, "results_t": 448, "retain": [461, 511], "retriev": [83, 86, 388, 390, 434, 435, 437, 466, 469, 470, 475, 483, 495, 510, 511], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 295, 297, 299, 300, 304, 306, 311, 315, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 334, 335, 336, 345, 346, 347, 348, 349, 352, 354, 355, 357, 359, 360, 370, 374, 375, 376, 377, 378, 379, 387, 388, 391, 392, 408, 409, 412, 415, 418, 424, 426, 437, 439, 447, 451, 456, 457, 461, 462, 463, 465, 466, 467, 469, 471, 484, 488, 510, 511, 543, 560], "return_delta": 323, "return_diff": 323, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [380, 412, 430], "reval": 517, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 83, 86, 87, 95, 187, 236, 466, 491], "review": [367, 372, 373, 374, 377, 378, 380, 381, 383, 384, 385, 387, 388, 390, 392, 425, 426, 510], "revis": 384, "revisit": 216, "rework": 410, "rewrit": [370, 373, 380, 410, 420, 421, 423, 424, 425, 558], "rewritten": [422, 425], "rf": 460, "rgb": [359, 361, 429, 433, 437], "rglob": [78, 449, 473], "rhe": 172, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [364, 380], "rid": 370, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 83, 86, 97, 104, 117, 119, 127, 143, 220, 224, 243, 255, 278, 284, 352, 364, 378, 387, 390, 441, 447, 449, 455, 457, 473, 515, 516, 517, 524, 525, 528, 529, 531, 532, 536, 539, 540, 541, 542, 546, 547, 548, 550, 558, 559, 560, 561], "rightarrow": [521, 561], "rigid": 369, "ring": [100, 116, 158, 161, 168, 182, 183, 184, 370, 373, 380, 383, 396, 405, 409, 411, 421, 422, 423, 424, 432, 444, 448, 467, 478, 494, 497, 506, 509, 510, 557], "ring2dkernel": [158, 168], "ring_background": [432, 443, 444], "ring_bkg_mak": 508, "ring_mak": 443, "ringbackgroundestim": [370, 423], "ringbackgroundmak": [158, 161, 409, 443, 465, 508], "rise": [128, 227, 454, 548], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 367, 390], "rm": [140, 141, 145, 387, 439, 463, 500, 502, 503, 504, 517, 546, 547, 548, 549, 550, 551], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [101, 102, 105, 140, 141, 142, 421, 437], "rmf_ob": 101, "rmffile": 101, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 276, 315, 317, 320, 321, 322, 323, 364], "roadmap": [368, 371, 380, 389, 404, 425], "roberta": [423, 424], "robust": [364, 424], "roi": [65, 380, 461, 476, 557], "roi_max": 380, "role": [423, 465], "rolf": 403, "rolk": 557, "rolke2005": [557, 560], "roll": 474, "room": 374, "root": [19, 20, 26, 117, 118, 127, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 285, 288, 364, 382, 415, 441, 486, 496, 558, 560], "rosillo": 426, "rotang": 450, "rotat": [51, 54, 166, 167, 171, 176, 215, 223, 226, 450, 507, 515, 516], "rough": [70, 380], "roughli": [112, 367, 372, 378, 380, 383, 384, 422, 443], "round": [83, 86, 183, 184, 186, 188, 192, 195, 196, 437, 510], "round_to_edg": [181, 182, 191, 194], "round_trip": [16, 80, 99, 118], "routin": 403, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 86, 132, 140, 301, 335, 358, 379, 388, 391, 426, 429, 440, 450, 451, 461, 463, 466, 473, 475, 476, 484, 493], "row_idx": [65, 83], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 461], "row_label": 358, "row_specifi": [79, 83, 86], "royalblu": 458, "rpovid": 379, "rspec": [65, 461], "rst": [367, 369, 384, 390, 393, 394, 410, 415], "rtd": 424, "rtol": [127, 339, 364], "rtol_ax": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196], "rtol_wc": 194, "ruben": 423, "rub\u00e9n": 423, "ruiz": [372, 380, 384, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 423, 424, 425], "rule": [83, 86, 251, 269, 304, 390, 466, 510], "run": [16, 78, 79, 80, 84, 88, 96, 98, 99, 103, 112, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 132, 133, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 191, 194, 201, 313, 314, 338, 357, 363, 364, 365, 371, 372, 374, 377, 379, 380, 381, 384, 386, 388, 392, 393, 394, 395, 400, 406, 407, 410, 411, 422, 424, 425, 429, 433, 434, 435, 440, 441, 442, 443, 445, 446, 447, 449, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 483, 484, 494, 495, 496, 498, 503, 505, 507, 508, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "run_fit": [15, 438, 442, 482], "run_id": [474, 484], "run_multiprocess": 498, "runner": [16, 329, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 522, 524, 530, 533, 546, 552, 553], "runtim": [373, 391], "runtimewarn": [439, 449, 476, 546], "rx": 434, "rxj": 434, "rxj1713_2016_250gev": 522, "r\u00e9gi": [370, 373, 374, 378, 379, 381, 383, 385, 386, 387, 388, 389, 391, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "r\u00e9my": [382, 415, 417, 418, 426], "s0167947313003204": 134, "s180": 282, "s2": 262, "s3": 262, "s5zg5jx0": 465, "s9b": 465, "s_0": 498, "s_1": 498, "safari": [83, 86], "safe": [94, 96, 97, 100, 104, 105, 141, 142, 148, 153, 156, 161, 169, 364, 376, 378, 390, 409, 411, 412, 426, 427, 428, 429, 434, 437, 462, 467, 483, 494, 556], "safe_mask": [16, 97, 104, 438, 442, 443, 445, 482], "safe_mask_mak": [159, 434, 458, 465, 505, 507, 508], "safe_mask_mask": [437, 439, 447, 456, 465], "safemask": 475, "safemask_mak": 475, "safemaskconfig": 16, "safemaskmak": [159, 161, 385, 409, 410, 415, 417, 418, 430, 434, 437, 439, 447, 453, 456, 458, 465, 467, 475, 482, 483, 505, 506, 507, 508], "safeti": 390, "sagittariu": [33, 38], "saha": 423, "sai": [71, 369, 383, 558], "said": [364, 369, 371, 475, 476, 558], "sake": [449, 463], "saldana": [216, 217, 429, 524], "saldana21": 524, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 83, 86, 90, 95, 97, 100, 101, 104, 105, 116, 132, 133, 144, 145, 151, 152, 153, 154, 156, 157, 159, 180, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 267, 276, 282, 357, 364, 367, 372, 374, 376, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 396, 397, 407, 408, 412, 415, 429, 435, 438, 439, 440, 445, 446, 449, 453, 455, 458, 461, 462, 466, 467, 468, 469, 470, 471, 474, 475, 478, 482, 494, 495, 496, 502, 510, 511, 558], "sampl": [47, 88, 98, 103, 127, 142, 144, 150, 152, 153, 154, 156, 183, 184, 186, 192, 194, 195, 196, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 274, 276, 306, 315, 320, 321, 322, 323, 368, 376, 378, 379, 382, 384, 396, 403, 405, 407, 408, 411, 417, 424, 426, 429, 430, 432, 439, 452, 454, 462, 463, 478, 494, 495, 498, 503, 506, 510], "sample_axi": 315, "sample_background": [98, 103, 409], "sample_coord": [142, 153, 156, 183, 184, 186, 192, 195, 196, 409, 411, 426], "sample_edisp": [98, 103], "sample_powerlaw": 383, "sample_psf": [98, 103], "sample_sourc": [98, 103], "sample_spher": [419, 562], "sample_tim": [213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 415, 426], "sampler": [98, 315, 373, 377, 411, 415, 449], "sampler_kwarg": 88, "saniti": 423, "satisfi": [136, 160, 182, 183, 184, 293, 468, 498], "save": [15, 19, 20, 26, 79, 95, 127, 198, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 364, 372, 380, 388, 392, 445, 446, 449, 463, 467, 468, 475, 495], "savefig": [342, 400], "savez": 198, "saw": 401, "sbpl": [252, 387, 469], "sc": [83, 86], "scalar": [83, 86, 151, 182, 183, 184, 186, 192, 195, 196, 293, 383, 417, 428, 430, 466, 510], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 65, 82, 84, 91, 95, 99, 100, 105, 112, 118, 120, 121, 124, 144, 160, 188, 192, 193, 194, 196, 204, 206, 208, 209, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 262, 263, 264, 271, 274, 292, 305, 306, 307, 323, 345, 346, 347, 357, 365, 373, 378, 379, 382, 387, 410, 415, 416, 424, 427, 428, 429, 438, 441, 450, 451, 454, 455, 456, 457, 460, 461, 464, 465, 466, 469, 470, 471, 473, 482, 484, 486, 524, 545, 546, 547, 548, 549, 550, 551, 552, 553], "scale10": [19, 20, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 392, 534], "scale_method": [19, 20, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 392, 534], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 460], "scaled_featur": 292, "scaled_features_irf": [291, 292, 470], "scaledregulargridinterpol": [66, 216, 410, 425], "scalespectralmodel": [120, 121, 124, 246, 387, 469], "scan": [19, 20, 90, 117, 119, 120, 121, 124, 125, 201, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 379, 388, 415, 451, 456, 471, 496, 498], "scan_max": [19, 20, 120, 124, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 456, 463], "scan_min": [19, 20, 120, 124, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 463], "scan_n_sigma": [19, 20, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 463], "scan_n_valu": [19, 20, 120, 124, 125, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 463, 471], "scan_prior": 471, "scan_valu": [19, 20, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 451, 463], "scargl": [379, 423, 454], "scatter": [214, 236, 385, 441, 447, 515, 516], "scenario": [83, 86, 369, 376, 386, 396, 466, 469, 487, 559], "scengin": [83, 86], "schedul": 373, "schema": [15, 16, 80, 99, 118, 380, 383], "schema_gener": [16, 80, 99, 118], "schema_json": [16, 80, 99, 118], "scheme": [16, 80, 99, 101, 102, 118, 182, 183, 184, 193, 228, 364, 370, 374, 376, 379, 386, 387, 388, 389, 391, 408, 415, 426, 430, 450, 464, 466, 469, 498, 503, 509, 510, 512], "school": 390, "scienc": [134, 183, 184, 186, 195, 196, 371, 373, 377, 380, 381, 384, 390, 401, 423, 424, 440, 446, 457, 466, 469, 470, 473, 474, 478, 486, 498, 532, 557, 558], "sciencedirect": 134, "scientif": [365, 371, 387, 390, 397], "scikit": [132, 364, 378, 381, 384, 424, 467], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 196, 201, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 262, 264, 291, 305, 344, 357, 363, 364, 367, 373, 378, 381, 382, 384, 390, 401, 405, 406, 407, 408, 420, 421, 422, 425, 427, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 555, 560], "scipy_mvn": 199, "scipy_opt": 463, "scitool": 537, "scope": [377, 378, 379, 380, 383, 391, 487], "scratch": [143, 364, 374, 378, 394, 445, 467], "screen": [83, 86, 466, 484], "script": [6, 83, 86, 119, 329, 330, 331, 332, 333, 365, 370, 371, 373, 375, 378, 380, 383, 384, 390, 393, 394, 404, 405, 406, 407, 415, 416, 420, 423, 424, 425, 426, 430, 432, 437, 441, 443, 445, 446, 447, 448, 449, 451, 456, 457, 460, 461, 462, 463, 465, 471, 474, 479, 482, 497, 498, 558], "scriptabl": 391, "scutum": [33, 38], "sdist": 394, "seaborn": 498, "search": [83, 86, 275, 277, 329, 364, 365, 400, 423, 424, 438, 441, 447, 448, 460, 461, 470, 482, 483, 484, 486, 498, 558], "season": 384, "sebastian": 415, "sec": [54, 79, 89, 95, 124, 323], "second": [42, 58, 79, 82, 83, 84, 86, 140, 262, 323, 326, 341, 345, 348, 353, 365, 372, 374, 376, 378, 382, 388, 390, 394, 409, 428, 437, 438, 441, 443, 445, 447, 448, 449, 450, 451, 456, 457, 460, 462, 463, 465, 466, 471, 473, 478, 482, 493, 559, 562], "secpl": [255, 256, 257, 387, 469], "section": [19, 83, 86, 276, 278, 284, 364, 365, 367, 369, 378, 380, 381, 383, 387, 390, 394, 412, 425, 440, 445, 449, 450, 453, 457, 461, 463, 467, 468, 469, 484, 486, 487, 498, 511, 556, 558, 562], "secur": 467, "sed": [113, 116, 117, 118, 119, 121, 127, 192, 216, 363, 380, 382, 388, 396, 403, 422, 435, 451, 461, 462, 482, 484, 496], "sed_fit": [432, 435, 436], "sed_fitting_gammacat_fermi": 384, "sed_typ": [19, 20, 26, 117, 118, 119, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 415, 433, 435, 437, 438, 439, 446, 447, 451, 455, 457, 461, 484, 496, 498, 534], "sed_type_init": [69, 71, 72, 74, 117, 118, 119], "sed_type_plot_default": [117, 119], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 492], "sedov_taylor_end": [52, 53, 492], "sedtypeenum": 118, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 64, 78, 79, 81, 83, 85, 86, 90, 94, 95, 96, 97, 100, 104, 105, 112, 114, 116, 119, 120, 121, 124, 126, 127, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 159, 166, 168, 176, 181, 182, 184, 186, 188, 189, 191, 194, 196, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 268, 278, 284, 286, 287, 290, 293, 301, 317, 332, 354, 355, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 420, 421, 422, 423, 424, 425, 426, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 478, 482, 484, 486, 494, 495, 498, 508, 509, 511, 537, 541, 542, 555, 557, 558, 559, 560, 562], "seed": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 213, 221, 225, 227, 228, 229, 237, 244, 250, 262, 265, 276, 315, 316, 317, 320, 321, 322, 323, 364, 423, 449, 534], "seed_photon_field": [237, 534], "seem": [364, 371, 372, 375, 381, 385, 486], "seen": [364, 378, 385, 434, 441, 446, 456, 466, 469, 474], "select": [16, 78, 79, 82, 83, 84, 85, 86, 87, 91, 95, 97, 100, 104, 105, 163, 170, 183, 184, 185, 186, 188, 193, 195, 196, 205, 207, 214, 236, 251, 261, 273, 360, 361, 374, 376, 377, 378, 379, 380, 384, 386, 388, 391, 396, 398, 404, 407, 415, 419, 433, 437, 439, 440, 442, 443, 445, 446, 448, 449, 450, 453, 457, 458, 462, 463, 465, 466, 467, 470, 473, 475, 476, 478, 484, 496, 498, 502, 503, 507, 556, 558], "select_energi": [79, 495], "select_from_geom": [214, 236], "select_map_mask": 405, "select_mask": [79, 214, 236, 415, 468], "select_nested_model": 429, "select_obs_id": [86, 447], "select_observ": [86, 91, 380, 456, 470, 483, 498], "select_offset": [79, 449, 476, 495], "select_paramet": [79, 85, 458, 495], "select_phas": 374, "select_rad_max": 79, "select_rang": 86, "select_region": [79, 85, 214, 236, 378, 407, 415, 449, 450, 458, 468, 484, 495], "select_row_subset": 79, "select_sky_box": 378, "select_sky_circl": [86, 378], "select_tim": [79, 82, 84, 87, 95, 374, 388, 409, 450, 456, 495], "select_time_rang": 86, "selected_energi": 495, "selected_ev": 79, "selected_id": 495, "selected_obs_t": [86, 470, 483], "selected_offset": 495, "selected_region": 495, "selected_tim": 495, "selection_al": [112, 127], "selection_mask": [214, 236, 468], "selection_opt": [16, 112, 114, 115, 116, 120, 121, 123, 124, 125, 126, 127, 415, 437, 438, 442, 443, 445, 446, 447, 451, 455, 456, 457, 458, 467, 475, 482], "selection_vari": 86, "selectionconfig": 16, "selectionslid": [445, 453, 466, 482, 483], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 82, 83, 86, 99, 117, 118, 119, 191, 192, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 251, 252, 254, 255, 256, 257, 260, 264, 364, 365, 375, 376, 378, 381, 387, 388, 391, 392, 411, 466, 469], "semant": [378, 389], "semi": 215, "semiaxi": [215, 223, 226, 515, 516, 517], "semilogi": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 433, 450], "semimajor": 461, "semiminor": 461, "semver": 389, "send": 393, "sens": [364, 371, 374, 378, 380, 383, 384, 385, 443], "sensibl": 470, "sensit": [113, 116, 117, 118, 119, 126, 267, 377, 384, 410, 412, 422, 423, 429, 430, 432, 436, 453, 473, 478, 486, 494, 503, 506, 510], "sensitivity_estim": 433, "sensitivity_t": 433, "sensitivityestim": [113, 404, 410, 433], "sent": 369, "sentenc": [369, 384, 390], "sep": [191, 373, 381, 387, 402, 469], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 69, 70, 71, 72, 73, 74, 75, 76, 79, 86, 182, 191, 194, 289, 353, 364, 365, 370, 371, 372, 373, 376, 377, 378, 379, 380, 383, 384, 385, 386, 411, 415, 421, 423, 424, 428, 429, 440, 443, 445, 447, 453, 457, 461, 468, 469, 470, 487, 495, 503, 504, 515, 516, 520, 521, 534, 557], "septemb": [373, 381, 383, 384, 389], "sequenc": [83, 86, 87, 95, 97, 104, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 205, 214, 236, 293, 394], "sequenti": [370, 437, 483], "seri": [83, 86, 119, 276, 281, 323, 373, 378, 379, 415, 454], "serial": [16, 80, 83, 86, 94, 95, 96, 97, 99, 100, 104, 105, 118, 370, 375, 379, 380, 385, 388, 408, 411, 415, 417, 424, 426, 427, 428, 429, 430, 466, 469, 471, 486], "serialis": [20, 97, 100, 104, 105, 208, 209, 212, 214, 216, 218, 219, 220, 222, 224, 228, 230, 231, 233, 235, 236, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 376, 378, 380, 383, 385, 386, 387, 407, 409, 411, 415, 420, 423, 425, 426, 428, 429, 430, 471, 482, 498, 511, 553], "serializ": [16, 80, 99, 118], "serialize_as_ani": [16, 80, 99, 118], "serialize_method": [83, 86], "serializiaton": 376, "serilis": [26, 210, 211, 213, 215, 221, 223, 225, 226, 227, 229, 238, 240, 244, 248, 249, 250, 251, 253, 260, 263, 265], "sersic": 387, "sersic2d": 387, "sersicspatialmodel": 387, "serv": [83, 86, 364, 369, 376, 380, 388, 394, 417, 460, 502], "server": [386, 396, 398, 478], "servic": 423, "session": [380, 390, 497], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 83, 86, 90, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 134, 140, 142, 153, 156, 159, 160, 163, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 262, 263, 264, 273, 313, 315, 364, 365, 370, 373, 374, 376, 377, 379, 380, 381, 382, 384, 388, 389, 390, 391, 392, 394, 396, 398, 411, 417, 419, 421, 423, 426, 429, 430, 433, 434, 437, 439, 440, 441, 442, 445, 447, 448, 449, 450, 451, 455, 456, 458, 461, 462, 463, 465, 467, 469, 470, 471, 473, 475, 476, 478, 486, 494, 495, 498, 507, 509, 510, 511, 534, 555, 558, 561, 562], "set_by_coord": [183, 184, 186, 192, 195, 196, 466, 510], "set_by_idx": [183, 184, 186, 192, 195, 196, 466, 510], "set_by_pix": [183, 184, 186, 192, 195, 196, 510], "set_log": 16, "set_model": [15, 386, 438, 442, 455, 482], "set_models_paramet": 386, "set_parameter_factor": [205, 207], "set_parameters_bound": [214, 236], "set_prior": [236, 392], "set_prop_cycl": 433, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 199, "set_titl": [434, 437, 441, 443, 447, 458, 460, 463, 464, 465, 468, 507, 517, 521, 524], "set_unit": [435, 498], "set_xlabel": [433, 434, 437, 440, 458, 463, 470, 471], "set_xlim": [435, 438, 446, 458, 500, 524], "set_xscal": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "set_xtick": [517, 521], "set_ylabel": [433, 434, 437, 451, 458, 460, 463, 470, 524], "set_ylim": [433, 435, 437, 438, 439, 455, 458, 500, 524], "set_yscal": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 451, 460, 500], "set_ytick": [517, 521], "setdefault": 190, "seterr": 364, "setlevel": 447, "setter": [365, 392, 409, 415, 462], "settl": [390, 562], "setup": [13, 366, 367, 368, 371, 376, 377, 381, 384, 392, 421, 425, 478, 558], "setuptool": [416, 558], "sever": [83, 86, 165, 369, 370, 371, 378, 379, 380, 383, 388, 391, 409, 410, 411, 415, 418, 427, 428, 429, 440, 446, 461, 473, 474, 475, 498, 558, 560], "seyfert": 282, "sf": [289, 560], "sgr": 484, "shade": [184, 192, 196, 463, 556], "shall": 367, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 96, 97, 100, 104, 105, 106, 110, 116, 117, 121, 122, 127, 131, 132, 133, 138, 140, 143, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 199, 226, 274, 293, 306, 322, 375, 378, 382, 413, 428, 435, 437, 439, 442, 447, 450, 451, 454, 456, 461, 462, 464, 465, 466, 467, 469, 473, 474, 484, 496, 510, 511, 512, 517, 521], "shape_ax": [182, 194], "share": [183, 184, 186, 190, 192, 195, 196, 364, 369, 376, 379, 383, 386, 397, 415, 417, 429, 445, 446, 467, 468, 498, 558], "sharp": [227, 354, 355, 515], "she": [374, 379], "shear": 378, "sheet": [399, 498], "shell": [52, 53, 76, 248, 249, 375, 380, 387, 396, 398, 432, 469, 512, 521, 523, 558], "shell2": [248, 432, 469, 512, 523], "shell2d": 52, "shell2spatialmodel": [245, 249, 469, 521], "shellspatialmodel": [76, 245, 248, 387, 415, 469, 520], "sherpa": [102, 105, 140, 187, 188, 191, 192, 201, 278, 284, 363, 364, 373, 381, 382, 384, 385, 395, 396, 398, 405, 419, 420, 421, 422, 424, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 511, 532, 559], "sherpa_opt": 463, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 263, 400], "shim": 371, "shini": 349, "ship": [371, 372, 381, 404, 422, 440, 453, 458, 469, 498], "shock": [50, 52, 53, 491], "short": [364, 365, 368, 369, 373, 378, 381, 384, 387, 390, 412, 454, 456, 474, 498, 499, 557, 560, 563], "short_observ": 456, "shortcut": [78, 400, 417], "shorten": 415, "shorter": [282, 364, 365, 378, 384, 389, 412, 440, 456, 469, 558], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 97, 99, 100, 103, 104, 105, 107, 109, 111, 117, 118, 119, 120, 124, 128, 129, 130, 135, 141, 142, 145, 151, 153, 156, 168, 173, 174, 179, 181, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 293, 339, 353, 354, 355, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 389, 390, 391, 393, 394, 396, 398, 399, 400, 405, 407, 429, 439, 445, 448, 449, 450, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 475, 494, 496, 498, 503, 510, 558, 559, 561, 562], "shoulder": 266, "shouldn": [79, 364, 367], "show": [11, 78, 83, 86, 121, 122, 123, 144, 163, 228, 361, 364, 365, 367, 376, 378, 379, 383, 384, 392, 394, 404, 405, 409, 417, 422, 423, 424, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 478, 482, 483, 484, 490, 491, 492, 498, 500, 501, 502, 504, 505, 507, 509, 515, 524, 556, 558, 560, 563], "show_dtyp": [83, 86], "show_in_brows": [83, 86, 447], "show_in_notebook": [83, 86], "show_nam": [83, 86], "show_progress_bar": 498, "show_row_index": [83, 86], "show_unit": [83, 86], "showcas": 471, "shower": [419, 473, 503], "shown": [19, 20, 26, 79, 151, 191, 192, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 359, 364, 371, 381, 382, 383, 391, 392, 394, 409, 411, 434, 437, 445, 447, 448, 449, 450, 454, 457, 458, 465, 468, 469, 470, 471, 473, 483, 495], "showwarn": 364, "si": [79, 182, 191, 194, 214, 236, 266, 511], "side": [194, 196, 275, 277, 364, 378], "sider": 562, "sidereal_tim": 365, "siejkowski": 424, "sig": [357, 559, 560, 561], "sight": 486, "sigma": [19, 20, 30, 32, 48, 49, 116, 117, 118, 119, 120, 124, 125, 127, 132, 133, 140, 141, 145, 151, 152, 153, 156, 199, 201, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 273, 275, 277, 283, 387, 392, 447, 448, 453, 454, 455, 463, 467, 469, 471, 482, 496, 502, 516, 531, 547, 560], "sigma1": 31, "sigma2": 31, "sigma_": [199, 516], "sigma_1": [31, 49, 144, 464], "sigma_10tev": [387, 469], "sigma_1tev": [387, 469], "sigma_2": [31, 49, 144, 464], "sigma_3": [144, 464], "sigma_err": 448, "sigma_gauss": 226, "sigma_laplac": 226, "sigma_m": 516, "sigma_nod": 469, "sigma_to_t": 560, "sigmav": 486, "sign": [204, 206, 275, 277, 367, 390, 411, 426, 496, 560], "signal": [79, 97, 100, 103, 104, 105, 168, 196, 250, 275, 277, 290, 388, 433, 437, 438, 443, 446, 455, 467, 482, 486, 501, 505, 507, 557, 559, 560, 561], "signif_avg": 484, "signific": [112, 116, 117, 118, 119, 126, 127, 134, 135, 273, 275, 277, 281, 354, 355, 362, 369, 370, 371, 372, 379, 380, 384, 385, 388, 390, 411, 412, 420, 423, 424, 429, 430, 432, 433, 437, 438, 444, 445, 446, 447, 448, 454, 455, 458, 461, 463, 475, 478, 482, 484, 494, 496, 498, 503, 510, 556, 557, 558], "significance_lima": 411, "significance_map": [443, 445], "significance_map_off": 443, "significance_mask": 467, "significance_mask_inv": 467, "significancemapestim": 411, "significantli": [415, 449, 473, 557], "signoff": 367, "silent": 426, "silicon": [396, 398], "silvia": 407, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 355, 364, 367, 376, 377, 378, 379, 380, 383, 384, 385, 388, 415, 429, 439, 454, 466, 470, 471, 484, 494, 502, 558], "similarli": [370, 372, 388, 391, 415, 461, 463, 464, 466, 467, 469, 511], "simlat": 276, "simon": [428, 429, 430], "simpifi": 373, "simpl": [50, 52, 132, 211, 215, 223, 226, 238, 248, 249, 253, 259, 263, 266, 364, 365, 376, 377, 378, 379, 380, 383, 388, 391, 392, 405, 415, 419, 423, 424, 429, 433, 434, 435, 437, 438, 439, 440, 442, 445, 454, 458, 463, 466, 467, 470, 476, 482, 483, 484, 488, 498, 556, 557, 558], "simple_norm": 196, "simple_rebin_lc": 379, "simplefilt": 498, "simpler": [171, 372, 377, 378, 386], "simplest": [433, 437, 454], "simplex": [201, 463], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 160, 201, 205, 207, 364, 378, 379, 388, 397, 426, 429, 433, 434, 447, 462, 467, 468, 469, 484, 511, 558, 560], "simplic": [446, 449, 456, 463, 469, 471, 474], "simplif": [375, 387, 426], "simplifi": [127, 190, 371, 373, 375, 382, 388, 405, 408, 409, 410, 412, 415, 419, 426, 435, 441, 503, 561], "simu": [453, 457, 471], "simul": [45, 78, 79, 84, 88, 97, 100, 103, 104, 105, 107, 142, 153, 156, 276, 323, 374, 377, 380, 384, 391, 392, 396, 403, 407, 409, 411, 417, 420, 422, 423, 424, 429, 430, 432, 436, 442, 445, 447, 452, 458, 459, 468, 471, 473, 478, 488, 494, 496, 503, 506, 555, 556], "simulate_3d": [384, 424, 432, 452, 453], "simulate_dataset": [405, 409, 410], "simulate_observ": 88, "simulated_d": 439, "simulated_data": 88, "simulated_model": 439, "simultan": [392, 457, 462, 469, 471, 494], "sin": [515, 516, 517, 551], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 79, 83, 84, 86, 120, 121, 124, 184, 194, 204, 206, 339, 364, 365, 370, 374, 378, 380, 381, 382, 383, 384, 388, 390, 391, 392, 394, 415, 425, 426, 427, 428, 429, 430, 439, 443, 445, 457, 462, 468, 469, 471, 473, 475, 530, 533, 559, 562], "sine": [250, 375, 432, 512, 554], "sine_model": 551, "sinetemporalmodel": [258, 469, 551], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 83, 84, 85, 86, 88, 90, 116, 120, 121, 124, 127, 141, 142, 153, 155, 156, 159, 163, 165, 170, 173, 174, 179, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 214, 236, 364, 370, 371, 374, 376, 377, 378, 379, 380, 381, 385, 386, 391, 392, 396, 403, 405, 410, 411, 423, 429, 430, 433, 437, 439, 441, 442, 443, 455, 457, 461, 462, 465, 466, 468, 471, 475, 476, 482, 484, 494, 496, 508, 510, 511, 555, 557], "singleobscubemak": 370, "singleobsimagemak": 370, "singleton": 317, "sinha": [376, 379, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430], "sink": 381, "sinu": [250, 469], "sinusoid": [250, 551], "sipocz": [381, 405, 407, 409, 411, 420, 421, 422, 423, 424, 425], "sip\u0151cz": 426, "sit": 367, "site": [329, 394, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 522, 530, 533, 546, 558], "situat": [378, 379, 381, 503], "six": [383, 389], "size": [19, 20, 26, 46, 47, 65, 70, 76, 83, 84, 86, 97, 98, 100, 103, 104, 105, 107, 108, 109, 111, 122, 127, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 158, 159, 165, 166, 167, 170, 171, 172, 180, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 208, 209, 211, 212, 215, 216, 218, 219, 220, 223, 224, 226, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 315, 316, 320, 321, 322, 323, 352, 364, 372, 375, 377, 378, 396, 398, 428, 430, 433, 439, 443, 445, 449, 456, 458, 461, 465, 466, 467, 469, 473, 474, 475, 476, 484, 494, 509, 515, 516, 562], "skeleton": 380, "sketch": 380, "skill": [367, 400], "skimag": 424, "skip": [78, 151, 352, 365, 367, 376, 378, 384, 422, 468], "skip_miss": [78, 423], "sklearn": 364, "sky": [6, 13, 41, 57, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 84, 91, 97, 100, 103, 104, 105, 112, 132, 141, 142, 153, 156, 176, 182, 183, 184, 186, 191, 192, 194, 195, 196, 214, 236, 251, 263, 266, 268, 295, 299, 300, 324, 326, 328, 351, 363, 364, 365, 377, 383, 396, 405, 407, 421, 422, 424, 437, 438, 440, 441, 443, 453, 457, 458, 461, 466, 469, 473, 474, 478, 480, 482, 483, 484, 486, 493, 494, 495, 498, 503, 504, 507, 509, 511, 515, 516, 520, 521, 522, 556, 557], "sky_circl": [86, 91, 456, 470, 483], "sky_model": [68, 69, 70, 71, 72, 73, 74, 75, 76, 109, 111, 379, 455, 456, 461, 468, 469, 483, 526], "sky_model_pntpwl": 449, "sky_reg": 460, "sky_reg_rec": 460, "sky_region": 85, "skycood": 375, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 86, 89, 91, 97, 100, 104, 105, 117, 119, 121, 123, 141, 142, 148, 153, 156, 166, 167, 169, 171, 173, 174, 176, 177, 179, 180, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 197, 210, 211, 214, 215, 223, 226, 236, 238, 240, 248, 249, 251, 253, 259, 261, 263, 291, 292, 325, 326, 340, 360, 365, 375, 378, 388, 391, 433, 434, 437, 439, 440, 443, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 483, 484, 498, 502, 507, 509, 511, 519], "skycoord_from_t": 378, "skycoord_to_pixel_scale_angl": 378, "skycoordconfig": 16, "skycub": [370, 383, 421, 422, 423, 424], "skydiffusecub": [375, 387, 406, 411, 412, 424], "skydiffusemap": [375, 406], "skydir": [16, 79, 97, 100, 104, 105, 106, 110, 142, 153, 163, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 437, 438, 439, 442, 443, 445, 447, 448, 449, 450, 453, 455, 458, 460, 462, 464, 465, 466, 467, 469, 474, 475, 482, 483, 505, 507, 508, 509, 511, 516, 517, 518, 519], "skydirfunct": 486, "skydisk": 406, "skydiskelong": 375, "skyellips": [405, 406, 407, 408], "skygaussian": 405, "skygaussianelong": 375, "skyimag": [370, 383, 421, 422, 423, 424], "skyimagelist": 421, "skymap": [183, 184, 186, 192, 195, 196, 378, 420, 421, 450], "skymap_band": [450, 553], "skymap_region": 450, "skymask": 422, "skymodel": [65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 97, 100, 104, 105, 109, 111, 117, 119, 125, 127, 160, 214, 232, 236, 268, 273, 375, 376, 377, 379, 385, 387, 388, 405, 409, 410, 411, 415, 424, 430, 434, 435, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 453, 455, 456, 457, 458, 461, 462, 463, 468, 471, 474, 482, 483, 493, 494, 496, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555], "skypointsourc": 408, "skyregion": [95, 97, 100, 104, 105, 121, 141, 142, 148, 153, 156, 166, 167, 171, 186, 191, 192, 196, 214, 236, 324, 327, 378, 434, 449, 451, 467, 469, 502, 507, 511], "skyspatialmodel": [375, 424], "slack": [366, 367, 371, 387, 393, 399, 404, 405, 558], "slew": 90, "slice": [79, 83, 86, 95, 97, 100, 104, 105, 114, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 201, 210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 261, 263, 285, 370, 412, 448, 451, 462, 473, 510], "slice_by_coord": [117, 119, 430], "slice_by_energi": [95, 97, 100, 104, 105, 117, 119, 261, 412, 462], "slice_by_idx": [97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 412, 424, 426, 451, 466, 474], "slice_by_tim": [117, 119], "sliced_ax": 187, "sliced_geom": [181, 182, 191, 194], "slide": [373, 441, 461], "slider": 466, "sliderstyl": [445, 453, 466, 482, 483], "slightli": [112, 188], "slope": [27, 406], "slow": [83, 86, 201, 371, 380, 438, 463, 482, 483], "slower": [83, 86, 184, 364, 372, 382], "slowest": 394, "small": [355, 364, 370, 372, 378, 380, 381, 384, 386, 391, 394, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 429, 430, 455, 456, 466, 471, 473, 474, 475, 476, 516, 520, 521, 557, 558], "smaller": [27, 142, 153, 156, 171, 182, 183, 184, 186, 192, 195, 196, 357, 367, 405, 424, 449, 454, 456, 463, 466, 471, 516], "smallest": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 247, 252, 254, 255, 256, 257, 260, 264, 441], "smooth": [97, 100, 104, 105, 112, 122, 123, 132, 184, 196, 215, 252, 356, 359, 415, 420, 421, 422, 424, 425, 432, 443, 445, 447, 451, 453, 458, 462, 465, 466, 468, 474, 482, 483, 484, 512, 515, 544], "smooth_kernel": [97, 100], "smooth_radiu": [97, 100], "smoothbrokenpowerlawspectralmodel": [208, 246, 387, 410, 411, 469, 539], "sn": [45, 50, 52, 53], "sn_rate": [45, 488], "snippet": [365, 384, 498], "snr": [44, 50, 53, 65, 474, 491, 492], "snr_model": 492, "snrcat": [419, 461], "snrtruelovemcke": [50, 491, 492], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 90, 100, 105, 116, 120, 122, 124, 125, 127, 136, 180, 183, 184, 186, 188, 192, 195, 196, 201, 204, 206, 226, 263, 273, 339, 347, 354, 355, 364, 365, 367, 369, 370, 371, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393, 395, 396, 398, 400, 405, 407, 415, 425, 427, 428, 434, 437, 439, 441, 442, 447, 448, 449, 453, 455, 460, 461, 463, 466, 467, 469, 471, 473, 474, 475, 478, 483, 498, 507, 511, 517, 521, 558, 559, 560, 561], "social": 390, "soft": 282, "softwar": [183, 184, 186, 195, 196, 378, 379, 381, 390, 391, 394, 466], "solar": 52, "sole": [374, 390], "solid": [181, 182, 191, 194, 211, 215, 223, 226, 238, 248, 249, 253, 259, 263, 266, 380, 403, 405, 406, 407, 424, 443, 465, 466, 473, 501, 507, 557], "solid_angl": [181, 182, 191, 194, 466, 511], "solut": [19, 20, 26, 52, 140, 208, 209, 212, 216, 218, 219, 220, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 262, 264, 365, 367, 369, 371, 372, 377, 378, 380, 381, 382, 384, 386, 388, 392, 397, 494, 496, 498, 561], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 367, 372, 374, 375, 376, 377, 417, 498], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 78, 80, 83, 86, 99, 118, 169, 190, 293, 301, 367, 369, 370, 371, 372, 373, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 394, 396, 397, 398, 399, 400, 401, 403, 405, 407, 415, 416, 418, 420, 422, 423, 424, 429, 433, 434, 435, 437, 439, 441, 442, 443, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 468, 469, 471, 473, 474, 483, 484, 486, 487, 494, 495, 498, 503, 508, 510, 557, 558, 559, 560, 562], "some_class": 364, "some_map": 151, "some_map_convolv": 151, "somehow": [372, 378, 383, 486], "someon": [367, 369, 384], "someth": [83, 86, 364, 365, 366, 367, 369, 372, 378, 381, 382, 384, 394, 396, 398, 440, 461, 511, 558], "sometim": [19, 20, 79, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 342, 364, 367, 371, 378, 384, 394, 396, 463, 557, 562], "somewhat": [381, 473], "somewher": [367, 381, 394], "soon": [367, 378, 394], "sort": [78, 79, 83, 86, 96, 132, 333, 364, 381, 406, 484], "sort_kei": 333, "sortedarrai": [83, 86], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 369, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 394, 396, 401, 403, 405, 409, 410, 415, 416, 421, 422, 423, 424, 429, 430, 432, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 468, 469, 470, 472, 474, 475, 476, 478, 480, 482, 483, 486, 487, 492, 494, 495, 496, 498, 503, 506, 507, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 560], "source1": 469, "source2": 469, "source_1": [375, 380], "source_2": 375, "source_42": 380, "source_fermi_3fgl": 435, "source_fermi_3fhl": 435, "source_gammacat": 435, "source_irf_model": 375, "source_librari": 473, "source_model": 537, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 461, 484], "source_name_alia": 56, "source_name_kei": 56, "source_po": [443, 447, 465], "source_population_model": [384, 409], "source_posit": [433, 448, 470], "sourcebackground": 375, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 378, 415, 461, 467, 484, 493], "sourcecatalog1lhaaso": [55, 68, 461], "sourcecatalog2fhl": [55, 69, 461, 493], "sourcecatalog2hwc": [55, 70, 461, 493], "sourcecatalog3fgl": [55, 71, 435, 461, 493], "sourcecatalog3fhl": [55, 72, 435, 461, 468, 484], "sourcecatalog3hwc": [55, 73, 461, 493], "sourcecatalog4fgl": [55, 74, 417, 461, 493], "sourcecataloggammacat": [55, 75, 435, 461], "sourcecataloghgp": [55, 76, 77, 461, 493], "sourcecataloglargescalehgp": 65, "sourcecatalogobject": [68, 75, 76, 77, 461, 493], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject3fgl": 60, "sourcecatalogobject3fhl": 61, "sourcecatalogobject3hwc": 62, "sourcecatalogobject4fgl": 63, "sourcecatalogobjectfermibas": [69, 71, 72, 74], "sourcecatalogobjectgammacat": 64, "sourcecatalogobjecthgp": [65, 77, 404, 461], "sourcecatalogobjecthgpscompon": 65, "sourcecatalogobjecthwcbas": [70, 73], "sourceevalu": 375, "sources_flux_map": 441, "sourcetempl": 375, "south": [449, 450], "south_z20_50h": [78, 138, 142, 143, 144, 153, 433, 440, 453, 457, 464, 473], "south_z40_50h": 473, "southern": 473, "space": [83, 86, 97, 100, 104, 105, 193, 196, 259, 260, 276, 304, 322, 363, 364, 374, 380, 386, 458, 462, 463, 466, 510, 534, 543], "span": 470, "spars": [182, 183, 184, 186, 191, 194, 195, 196, 406, 415, 423, 450, 466], "sparsif": 388, "sparsifi": [183, 184, 186, 195, 196], "spatail": 127, "spatial": [1, 46, 48, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 97, 100, 104, 105, 107, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 165, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 205, 207, 210, 211, 214, 215, 222, 223, 226, 236, 238, 240, 245, 248, 249, 251, 253, 259, 261, 263, 273, 357, 359, 364, 370, 373, 376, 377, 378, 380, 382, 383, 388, 396, 404, 405, 407, 408, 409, 410, 412, 415, 423, 424, 426, 429, 430, 432, 435, 438, 440, 442, 445, 446, 448, 449, 450, 451, 453, 457, 458, 461, 462, 465, 468, 472, 474, 478, 482, 486, 487, 494, 496, 498, 499, 509, 510, 523, 555, 556, 557], "spatial_bin_s": 107, "spatial_bin_size_min": 107, "spatial_model": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 109, 111, 127, 215, 222, 251, 261, 273, 379, 409, 441, 445, 447, 448, 449, 450, 453, 455, 456, 461, 462, 468, 469, 474, 483, 514, 515, 516, 517, 518, 519, 520, 521, 522], "spatial_model_point": 449, "spatial_model_registri": 469, "spatial_par": 387, "spatial_typ": 387, "spatial_width": 107, "spatial_width_max": 107, "spatialbackground": 375, "spatialcircleconfig": 16, "spatialconst": 375, "spatialgaussian": 375, "spatialmodel": [68, 69, 70, 71, 72, 73, 74, 75, 76, 210, 211, 215, 222, 223, 226, 238, 240, 248, 249, 251, 259, 261, 263, 375, 387, 409, 424, 428, 461, 469, 483, 486, 493, 512, 555], "spatialtempl": 375, "spatiamodel": 151, "speak": 463, "spec": [76, 105, 364, 378, 420, 445, 450, 461, 473, 483], "spec_model_tru": 458, "special": [83, 86, 226, 364, 374, 376, 378, 379, 387, 390, 391, 404, 442, 449, 461, 462, 468, 469], "specialis": [378, 384], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 81, 82, 83, 86, 89, 97, 100, 105, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 159, 173, 174, 179, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 201, 228, 261, 273, 353, 363, 364, 365, 367, 369, 374, 376, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 394, 396, 397, 409, 412, 415, 417, 426, 427, 429, 434, 437, 439, 440, 443, 445, 446, 451, 453, 457, 458, 462, 463, 464, 466, 467, 470, 471, 476, 478, 484, 494, 495, 496, 498, 500, 501, 502, 504, 509, 510, 511, 562], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 83, 84, 86, 87, 91, 97, 99, 100, 104, 105, 112, 114, 117, 118, 119, 120, 122, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 158, 169, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 214, 228, 236, 273, 293, 295, 299, 304, 351, 374, 381, 386, 389, 397, 408, 411, 415, 439, 442, 445, 448, 449, 451, 453, 462, 463, 464, 465, 466, 468, 469, 473, 483, 494, 496, 509], "spectra": [26, 104, 105, 120, 125, 136, 246, 266, 273, 370, 373, 375, 377, 379, 383, 387, 403, 407, 420, 424, 434, 439, 440, 446, 450, 455, 457, 458, 462, 463, 465, 469, 471, 486, 494, 496, 498, 557], "spectral": [1, 19, 20, 26, 52, 53, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 97, 100, 104, 105, 112, 116, 117, 119, 120, 121, 124, 126, 127, 131, 151, 153, 156, 160, 205, 207, 208, 209, 212, 214, 216, 218, 219, 220, 222, 224, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 243, 246, 247, 251, 252, 254, 255, 256, 257, 260, 261, 262, 264, 266, 267, 282, 320, 370, 373, 375, 376, 377, 378, 379, 380, 382, 383, 385, 386, 388, 396, 404, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 436, 440, 442, 445, 448, 449, 450, 451, 453, 455, 456, 457, 458, 461, 462, 463, 465, 467, 468, 471, 472, 473, 474, 482, 483, 486, 487, 493, 494, 495, 496, 497, 498, 499, 505, 506, 507, 510, 514, 515, 516, 517, 518, 519, 520, 521, 522, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559], "spectral_analysi": [432, 436, 437], "spectral_analysis_hli": [432, 436, 438], "spectral_analysis_rad_max": [432, 436, 439], "spectral_cub": 416, "spectral_index": [19, 20, 26, 52, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264], "spectral_index_error": [19, 20, 26, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 429], "spectral_irf_model": 375, "spectral_model": [64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 104, 105, 109, 111, 116, 125, 127, 131, 160, 214, 222, 234, 236, 251, 261, 273, 379, 382, 386, 387, 388, 392, 412, 434, 435, 437, 439, 440, 441, 445, 446, 447, 448, 449, 450, 453, 455, 456, 457, 458, 461, 462, 463, 468, 469, 471, 474, 483, 484, 496, 505, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "spectral_model1": 457, "spectral_model2": 457, "spectral_model_pwl": 449, "spectral_model_registri": 469, "spectral_par": 387, "spectral_point": 380, "spectral_typ": 387, "spectralbackground": 375, "spectralbackgroundmodel": 376, "spectralcompoundmodel": 375, "spectralconst": 375, "spectralevalu": 375, "spectralexponentialcutoffpowerlaw3fgl": 383, "spectralgaussian": [375, 407], "spectralmodel": [19, 20, 69, 71, 72, 74, 75, 76, 96, 112, 116, 117, 119, 121, 126, 131, 151, 153, 156, 160, 208, 209, 212, 214, 216, 218, 219, 220, 222, 224, 230, 231, 233, 236, 237, 239, 241, 242, 243, 247, 251, 252, 255, 256, 257, 260, 261, 264, 266, 375, 376, 379, 382, 388, 412, 415, 422, 429, 461, 469, 483, 484, 493, 512, 555], "spectralregion": 378, "spectraltempl": 375, "spectrum": [19, 20, 26, 70, 73, 93, 95, 96, 97, 100, 101, 104, 105, 112, 117, 119, 121, 124, 126, 128, 151, 153, 156, 161, 165, 169, 170, 183, 184, 186, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 266, 267, 276, 282, 361, 370, 375, 376, 379, 380, 383, 384, 385, 396, 406, 407, 408, 409, 411, 415, 417, 420, 421, 422, 423, 424, 426, 428, 432, 433, 434, 435, 436, 438, 445, 446, 449, 450, 451, 457, 460, 461, 462, 467, 469, 473, 474, 478, 482, 484, 486, 494, 498, 503, 506, 511, 525, 528, 529, 531, 532, 536, 537, 539, 540, 541, 542, 555, 558], "spectrum_analysi": 437, "spectrum_dataset": [136, 376, 458, 462], "spectrum_dataset_1": 376, "spectrum_dataset_2": 376, "spectrum_dataset_empti": [458, 465], "spectrum_dataset_mak": [458, 465], "spectrum_dataset_on_off": 458, "spectrum_fitting_with_sherpa": 384, "spectrum_mak": 433, "spectrum_simul": [384, 432, 436, 440], "spectrumanalysisiact": [380, 408, 422], "spectrumdataset": [93, 94, 95, 97, 100, 105, 124, 126, 136, 164, 165, 169, 170, 222, 385, 406, 407, 408, 409, 410, 411, 412, 415, 418, 433, 434, 437, 439, 440, 447, 456, 457, 458, 463, 465, 471, 494, 507, 559], "spectrumdatasetmak": [161, 409, 415, 433, 434, 437, 439, 440, 447, 456, 457, 458, 465, 507], "spectrumdatasetonoff": [93, 100, 101, 102, 104, 125, 126, 136, 164, 165, 273, 361, 379, 406, 407, 408, 410, 411, 427, 428, 429, 433, 434, 437, 438, 440, 446, 447, 455, 458, 462, 463, 465, 471, 496, 559], "spectrumdatasetonoffstack": 408, "spectrumdatasetsonoff": 376, "spectrumenergygroup": 423, "spectrumevalu": 411, "spectrumextract": [379, 406, 409, 422], "spectrumfit": [406, 422, 423, 424], "spectrumobserv": [376, 406, 422], "spectrumobservationlist": [406, 421], "spectrumobservationstack": 421, "spectrumonoffdataset": 379, "spectrumresult": 406, "spectrumsimul": [407, 421, 424], "spectrumstack": 423, "spectrumstat": 407, "specutil": 378, "speed": [127, 293, 367, 397, 407, 409, 417, 423, 424, 463], "spell": [369, 498], "spend": [377, 384], "spent": [371, 465], "sphere": [47, 321, 403, 405, 510, 515, 516, 519], "spherepointpick": 321, "spheric": [47, 364, 405, 510, 556], "sphericalcircleskyregion": [383, 458, 484], "sphinx": [367, 371, 384, 394, 406, 410, 417, 423, 424, 426, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "sphinx_gallery_conf": 394, "sphinx_gallery_thumbnail_numb": [365, 437, 439, 441, 443, 448, 451, 464, 524], "spill": 465, "spin": [50, 51, 54, 407, 490], "spir": [405, 424], "spiral": [33, 34, 38, 45, 419], "spiralarm": [33, 38, 45, 423, 488], "spiralarm_index": [33, 34, 38], "spirit": 390, "split": [19, 20, 83, 86, 87, 109, 111, 117, 119, 183, 184, 186, 192, 195, 196, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 370, 372, 374, 376, 378, 379, 383, 385, 387, 396, 412, 430, 456, 469, 487, 563], "split_by_axi": [183, 184, 186, 192, 195, 196], "split_template_model": [109, 111], "sporad": 391, "spot": 364, "spread": [78, 84, 144, 153, 156, 364, 386, 412, 433, 441, 464, 503, 557], "spring": [374, 425], "sprint": [372, 373, 377, 380, 381, 382, 383, 385], "spuriou": 132, "sqrt": [19, 20, 30, 31, 32, 65, 97, 100, 104, 105, 112, 117, 119, 122, 127, 183, 184, 186, 188, 192, 195, 196, 199, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 274, 283, 305, 306, 307, 376, 434, 437, 441, 445, 451, 453, 454, 458, 461, 463, 465, 466, 468, 474, 482, 483, 484, 496, 516, 517, 520, 521, 531, 560], "sqrt_space": [383, 409], "sqrt_t": [112, 116, 117, 119, 127, 132, 136, 275, 277, 357, 388, 400, 412, 434, 437, 438, 441, 443, 445, 447, 458, 461, 462, 467, 475, 482, 484, 496, 558, 560], "sqrt_ts_min": [136, 437], "sqrt_ts_threshold_ul": [69, 71, 72, 74, 116, 117, 118, 119, 121, 127, 451, 455, 461, 462, 482, 484], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 97, 100, 117, 118, 140, 141, 142, 148, 153, 156, 159, 180, 194, 196, 261, 280, 379, 382, 412, 467, 471, 486, 496, 510, 558, 559, 560, 561], "squash": [142, 181, 182, 185, 187, 188, 191, 193, 194, 429, 433, 443, 462, 466], "squeez": [433, 464], "sr": [137, 138, 139, 150, 181, 182, 191, 194, 211, 263, 266, 433, 440, 442, 445, 447, 453, 457, 461, 462, 464, 466, 469, 473, 474, 503, 514, 522], "src": [377, 448, 494], "src_above_bkg": 448, "src_event": [449, 450], "src_posit": [449, 450], "srcmap": [182, 183, 184, 186, 195, 196, 466], "ssc": [58, 60, 61, 63, 237, 384, 537], "ssc_model": 237, "st": [53, 463, 474], "stabil": [19, 20, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 389, 453], "stabl": [11, 83, 86, 191, 201, 293, 371, 372, 373, 380, 381, 384, 389, 393, 394, 395, 397, 409, 410, 411, 417, 422, 424, 426, 463, 495], "stack": [16, 79, 82, 87, 95, 96, 97, 99, 100, 104, 105, 116, 117, 119, 141, 142, 148, 153, 156, 159, 183, 184, 185, 186, 191, 192, 195, 196, 199, 205, 207, 261, 334, 364, 376, 379, 380, 386, 391, 405, 408, 409, 412, 415, 420, 421, 426, 427, 429, 434, 438, 442, 446, 447, 455, 458, 462, 463, 465, 470, 471, 482, 483, 495, 496, 505, 508, 557], "stack_dataset": [159, 458, 465], "stack_reduc": [95, 136, 408, 434, 437, 439, 445, 446, 447, 458, 462, 463, 496], "stacked_dataset": [447, 448], "stacked_fit": 437, "stacked_on_off": 443, "stackedobscubemak": 370, "stackedobsimagemak": 370, "stackoverflow": 332, "stage": [367, 380, 443, 445, 457, 462, 494, 557], "stai": 376, "stand": 369, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 82, 83, 86, 91, 184, 196, 201, 267, 292, 346, 347, 364, 365, 367, 369, 373, 375, 376, 377, 380, 382, 388, 390, 391, 400, 407, 408, 424, 430, 433, 438, 440, 443, 446, 448, 450, 453, 456, 457, 460, 463, 466, 469, 470, 471, 473, 476, 478, 482, 494, 497, 502, 510, 556, 557, 558], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [91, 291, 470], "standardis": [336, 337, 349, 423], "standardise_unit": [336, 350], "standpoint": 364, "stapel": 430, "star": [36, 40, 216], "starmap": [309, 313, 314], "start": [16, 53, 79, 82, 84, 85, 86, 87, 89, 95, 124, 132, 193, 213, 214, 221, 225, 227, 228, 229, 236, 244, 250, 262, 265, 364, 365, 367, 369, 371, 372, 373, 374, 377, 378, 380, 381, 389, 390, 392, 393, 394, 398, 399, 400, 401, 403, 408, 417, 420, 421, 422, 423, 424, 429, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 445, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 460, 461, 466, 469, 473, 474, 478, 482, 484, 485, 498, 502, 556], "start_po": [121, 326, 451], "startswith": 364, "stat": [6, 95, 96, 100, 105, 117, 119, 120, 121, 124, 125, 127, 201, 202, 204, 206, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 357, 364, 376, 384, 392, 394, 400, 407, 409, 410, 411, 412, 415, 421, 424, 425, 426, 430, 434, 435, 437, 438, 439, 443, 445, 446, 447, 448, 451, 454, 458, 463, 471, 474, 482, 483, 496, 558, 559, 560], "stat_arrai": [94, 96, 97, 100, 104, 105, 392], "stat_contour": 201, "stat_max": [275, 277], "stat_nul": [117, 119, 120, 121, 124, 125, 127, 275, 277, 430, 441, 451, 496], "stat_per_bin": 376, "stat_profil": [201, 463, 471, 498], "stat_scan": [117, 119, 120, 121, 124, 125, 201, 274, 437, 438, 463, 471, 496], "stat_sum": [94, 95, 96, 97, 100, 104, 105, 392, 428, 429, 445, 457, 462, 468, 498], "stat_surfac": [201, 412, 498], "stat_typ": [96, 97, 100, 104, 105, 410, 445, 457, 462, 468], "state": [16, 45, 47, 193, 201, 364, 370, 374, 376, 380, 384, 386, 388, 438, 482, 503, 524], "stateless": 391, "statement": [364, 367, 371, 428, 430, 487], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 98, 101, 102, 103, 112, 116, 117, 119, 120, 121, 124, 125, 127, 144, 152, 163, 169, 170, 182, 183, 184, 186, 192, 193, 195, 196, 208, 210, 211, 212, 213, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 241, 242, 243, 244, 248, 249, 250, 252, 255, 256, 257, 262, 264, 265, 361, 372, 375, 394, 406, 423], "staticmethod": [375, 387, 392, 469, 471], "statist": [6, 19, 20, 26, 75, 94, 95, 96, 97, 100, 104, 105, 116, 117, 119, 120, 121, 124, 125, 127, 133, 136, 163, 201, 203, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 247, 252, 254, 255, 256, 257, 260, 264, 273, 274, 275, 277, 278, 279, 284, 290, 376, 379, 382, 383, 384, 386, 392, 406, 410, 411, 412, 415, 417, 429, 430, 433, 438, 440, 441, 442, 443, 445, 447, 451, 453, 454, 455, 457, 458, 462, 463, 465, 471, 482, 483, 494, 496, 498, 508, 556, 557], "statu": [19, 20, 26, 117, 119, 200, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 364, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 425, 430, 468, 469], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 292, 440, 454, 474], "stddev": 66, "stderr": 364, "stdout": [301, 364], "steep": 440, "stefan": [419, 430], "step": [19, 20, 26, 116, 120, 124, 125, 127, 201, 202, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 364, 367, 370, 371, 374, 375, 376, 378, 379, 380, 382, 385, 389, 392, 393, 394, 400, 417, 424, 425, 429, 433, 437, 439, 442, 445, 447, 448, 449, 450, 456, 457, 462, 463, 465, 469, 471, 482, 483, 484, 498, 506, 511], "stepprior": 392, "stepsiz": 158, "steradian": 191, "stewart": [127, 285, 441, 557], "stewart2009": [127, 557, 560], "stick": [367, 387, 405, 424, 463, 557], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 371, 372, 374, 377, 378, 381, 383, 384, 385, 388, 389, 391, 393, 394, 422, 423, 424, 469, 471, 484, 496, 520, 521, 558], "stipul": 390, "stone": [364, 384], "stop": [16, 52, 79, 82, 84, 85, 86, 87, 95, 124, 127, 193, 213, 214, 221, 225, 227, 228, 229, 236, 244, 250, 262, 265, 374, 400, 429, 438, 442, 443, 445, 456, 458, 463, 474, 482], "storag": [78, 498], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 78, 79, 81, 82, 83, 86, 117, 118, 119, 122, 124, 151, 164, 165, 183, 184, 186, 192, 195, 196, 201, 202, 204, 206, 214, 236, 347, 364, 367, 370, 372, 373, 374, 376, 377, 380, 382, 386, 388, 390, 391, 394, 412, 415, 416, 434, 439, 440, 449, 450, 454, 458, 462, 463, 464, 465, 466, 467, 470, 473, 474, 475, 476, 484, 494, 495, 498, 503, 504, 505, 510, 511, 534, 555, 556, 558, 562], "store_per_ob": 380, "store_trac": [201, 463], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 114, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 160, 163, 164, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 293, 305, 314, 329, 330, 346, 347, 349, 353, 357, 358, 360, 378, 391, 437, 439, 465, 469, 475], "str3": [83, 86], "straight": [365, 396, 498], "straightforward": [394, 561], "strang": 364, "strategi": [364, 371, 378, 429, 463, 561], "stream": 364, "streil": [392, 428, 429, 430], "strength": [51, 54, 392, 534], "stretch": [183, 184, 186, 192, 195, 196, 354, 355, 359, 441, 445, 451, 453, 465, 466, 468, 474, 482, 483, 484], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 97, 99, 100, 118, 141, 142, 148, 153, 156, 159, 194, 196, 261], "strict_bound": 188, "strictli": [16, 80, 99, 118, 188], "strike": 494, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 86, 88, 99, 117, 118, 119, 120, 121, 124, 127, 144, 150, 152, 154, 159, 182, 183, 184, 186, 188, 189, 191, 192, 194, 195, 196, 202, 204, 206, 214, 236, 293, 311, 353, 364, 377, 378, 381, 383, 390, 391, 403, 407, 415, 417, 438, 461, 467, 469, 482, 510, 511], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 377, 384, 437, 471], "stronger": 471, "strongli": [282, 379, 381, 390, 415, 442, 463, 471], "structur": [83, 86, 194, 289, 368, 369, 370, 373, 375, 377, 380, 384, 387, 390, 391, 402, 408, 409, 411, 415, 418, 430, 432, 451, 462, 465, 466, 467, 469, 478, 485, 486, 493, 495, 499, 510, 511, 558], "stuck": 558, "student": 367, "studi": [46, 266, 289, 377, 380, 388, 397, 424, 434, 435, 446, 447, 448, 451, 453, 456, 457, 463, 466, 469, 473, 488, 498, 507, 559], "stuff": [365, 394, 498], "stuff1": 364, "stuff2": 364, "style": [83, 86, 96, 183, 184, 186, 192, 195, 196, 361, 367, 373, 390, 419, 421, 445, 453, 464, 466, 482, 483, 498, 511], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 109, 111, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 183, 184, 185, 186, 188, 192, 193, 195, 196, 199, 364, 367, 371, 373, 374, 378, 383, 384, 385, 386, 391, 394, 403, 405, 409, 411, 412, 420, 422, 423, 447, 449, 465, 467, 469, 475, 476, 494, 497, 498, 506, 556, 558, 562], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 118, 293, 378, 421, 424, 469, 471], "subcompon": [65, 76], "subfold": [372, 415], "submit": [369, 390], "submodul": [372, 405, 406, 411, 466, 484, 496], "subok": 293, "subpackag": [385, 391, 408, 415, 419], "subplot": [64, 65, 183, 184, 186, 192, 195, 196, 433, 434, 435, 437, 438, 439, 440, 441, 443, 445, 446, 447, 451, 455, 457, 458, 460, 463, 464, 466, 467, 468, 470, 471, 498, 500, 507, 517, 521, 524], "subplot_kw": [441, 443, 447, 458, 467, 507], "subplots_adjust": 460, "subsect": [384, 466], "subsequ": [281, 373], "subset": [78, 79, 83, 86, 120, 124, 237, 391, 419, 420, 447, 458, 468, 473, 475, 497, 556], "subspac": 378, "substanti": [83, 86], "substitut": 559, "substr": [214, 236], "subtract": 439, "succed": 393, "succeed": 117, "success": [16, 80, 96, 99, 117, 118, 119, 120, 121, 124, 125, 127, 200, 201, 202, 203, 392, 415, 434, 435, 437, 438, 439, 441, 445, 446, 447, 451, 455, 458, 463, 468, 474, 482, 483, 522], "successfulli": [96, 434, 435, 437, 438, 439, 445, 446, 447, 457, 458, 463, 474, 482, 483], "sudo": 397, "suffer": [381, 458], "suffic": 457, "suffici": [367, 370, 377, 390, 429], "suffix": [96, 117, 365, 375, 387, 393, 469, 510, 512], "suggest": [367, 369, 371, 374, 378, 384, 386, 388, 392, 441, 449, 450, 498, 558], "suit": [184, 364, 511], "suitabl": 184, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 97, 100, 104, 105, 119, 120, 121, 123, 124, 125, 127, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 183, 184, 186, 192, 195, 196, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 266, 275, 277, 279, 360, 364, 374, 375, 377, 386, 388, 392, 406, 430, 445, 449, 458, 460, 462, 471, 474, 482, 483, 484, 494, 504, 557, 559], "sum_": 494, "sum_band": [183, 184], "sum_i": 122, "sum_j": 494, "sum_k": 494, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [183, 184, 186, 192, 195, 196, 352, 424, 443, 445, 451, 458, 462, 465, 467, 468, 474, 483], "sum_over_energy_group": [116, 120, 127, 447, 451], "summar": [373, 486], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 275, 277, 301, 305, 315, 338, 351, 365, 367, 384, 402, 434, 438, 456, 457, 462, 473, 482, 498], "summaris": [364, 369, 371, 384], "summat": [275, 277, 370], "summer": 372, "sun": 41, "sunpi": [381, 384, 385], "super": [182, 184, 255, 256, 257, 432, 449, 476, 512, 544, 546], "superexpcutoffpowerlaw3fglspectralmodel": [246, 387, 469, 540], "superexpcutoffpowerlaw4fgldr3spectralmodel": [246, 469, 541], "superexpcutoffpowerlaw4fglspectralmodel": [246, 387, 469, 542], "superfici": 486, "superflu": [374, 458], "supernova": [28, 52, 434, 448, 469, 488, 489], "superpixel": 182, "supersed": [182, 183, 184, 194, 195, 196], "supervisor": 380, "suppli": [19, 20, 26, 83, 86, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 457], "support": [79, 81, 82, 83, 84, 85, 86, 87, 90, 95, 97, 100, 104, 105, 108, 119, 135, 146, 151, 182, 183, 184, 185, 186, 188, 193, 194, 195, 196, 201, 214, 236, 363, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 391, 397, 401, 404, 405, 407, 408, 409, 410, 411, 412, 415, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 438, 440, 442, 445, 447, 453, 457, 460, 461, 462, 466, 471, 473, 474, 475, 476, 482, 497, 503, 510, 511, 553, 555, 556, 558], "suppos": [228, 262, 369, 376, 557, 559], "suppress": [140, 141, 145, 498], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 364, 367, 369, 380, 393, 437, 455, 466, 498, 558], "surfac": [28, 30, 35, 36, 39, 40, 45, 201, 251, 266, 319, 383, 412, 463, 469, 488], "surface_brightness_err": 461, "surprisingli": 378, "surround": [52, 311, 364], "survei": [62, 65, 120, 216, 371, 374, 384, 400, 432, 473, 478, 479, 488, 493, 498, 557], "survey_map": [432, 479, 480], "suspect": 560, "suss": [373, 390], "svg": 364, "swap": 182, "swept": 52, "swh": 390, "swhid": 390, "switch": [273, 364, 371, 374, 417, 421], "switcher": 393, "sy": [364, 399], "syllabl": 498, "symbol": 467, "symmetr": [97, 100, 104, 105, 116, 125, 127, 171, 180, 184, 223, 364, 375, 405, 417, 420, 435, 457, 465, 471, 473, 486, 496, 504, 515, 516, 560], "symmetri": [184, 405], "sync": 424, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 390, "synchrotron": [237, 411, 534], "syntact": [83, 86], "syntax": [16, 83, 86, 365, 380, 383, 409, 426, 558], "synthesi": [488, 489], "synthet": 403, "system": [11, 79, 83, 86, 138, 146, 147, 182, 183, 184, 186, 189, 191, 194, 195, 196, 214, 236, 364, 370, 375, 377, 381, 384, 385, 389, 390, 392, 397, 405, 423, 429, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 509, 510, 556, 558, 562], "systemat": [375, 388, 390, 391, 412, 437, 455, 465, 496, 557, 559], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 65, 67, 79, 80, 82, 83, 84, 86, 99, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 127, 134, 135, 140, 180, 193, 214, 228, 236, 273, 275, 276, 277, 291, 336, 340, 363, 364, 365, 367, 369, 371, 372, 374, 376, 378, 380, 381, 382, 383, 384, 387, 388, 389, 391, 394, 395, 396, 398, 400, 412, 416, 419, 420, 421, 424, 429, 433, 434, 437, 442, 445, 447, 448, 451, 453, 454, 455, 458, 460, 461, 463, 465, 466, 467, 469, 470, 471, 473, 474, 486, 490, 491, 492, 494, 496, 498, 507, 545, 546, 547, 548, 549, 550, 551, 556, 557, 558, 561, 562], "t0": [221, 244, 449, 456, 457, 546, 550], "t1": [83, 86], "t2": [83, 86], "t_": [52, 53, 281, 503, 546, 547, 548, 549, 550, 551, 559], "t_0": 550, "t_b": 559, "t_decai": [227, 548], "t_delta": [98, 103, 193, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265], "t_i": 281, "t_j": 494, "t_live": [79, 84], "t_max": [213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 377, 388], "t_min": [213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 377, 388], "t_observ": [79, 84], "t_r": 228, "t_ref": [221, 225, 227, 228, 229, 244, 250, 262, 428, 429, 449, 450, 457, 469, 546, 547, 548, 549, 550, 551, 552, 553], "t_rise": [227, 548], "t_start": [82, 495], "t_stop": [52, 82, 495], "ta": 276, "ta2": 276, "ta3": 276, "tab": [140, 369, 445, 451, 455, 471, 507], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563], "table_arrai": [83, 86], "table_associ": 65, "table_bkg_src": 448, "table_class": [83, 86], "table_compon": [65, 461], "table_filenam": 26, "table_from_row_data": 429, "table_hdu": 82, "table_identif": 65, "table_large_scale_compon": [65, 461], "table_model": [264, 387], "table_oth": 334, "tableau": 498, "tableclass": [83, 86], "tablegroup": [83, 86], "tableid": [83, 86], "tableiloc": [83, 86], "tableindic": [83, 86], "tableloc": [83, 86], "tablelocindic": [83, 86], "tablemodel": [375, 425], "tablepsf": [385, 403, 405], "tablepsfcheck": 421, "tabul": 486, "tabular": [469, 543], "tackl": 373, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 80, 83, 86, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 183, 184, 186, 192, 195, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 389, 392, 393, 412, 426, 464, 469, 471, 517, 521], "tail": [473, 558], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 97, 100, 104, 105, 116, 138, 158, 160, 192, 194, 201, 214, 236, 251, 339, 362, 364, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 388, 394, 410, 411, 412, 415, 417, 425, 426, 428, 429, 430, 433, 434, 439, 440, 449, 450, 451, 457, 458, 463, 465, 466, 467, 469, 470, 471, 473, 483, 484, 495, 498, 511, 527, 559, 560, 561], "taken": [15, 27, 83, 86, 97, 100, 104, 105, 117, 119, 143, 151, 170, 176, 178, 192, 193, 196, 201, 284, 365, 369, 373, 377, 428, 437, 445, 446, 458, 464, 467, 468, 473, 484, 494, 496, 507, 508, 560], "talk": [367, 369, 371, 381, 390], "tan": [184, 191, 378, 407, 437, 466, 474, 507], "tandem": 486, "tangent": [166, 211, 215, 223, 226, 238, 248, 249, 253, 259, 263], "tangenti": [182, 511], "tar": [394, 473], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 97, 100, 104, 105, 108, 112, 116, 118, 127, 141, 142, 153, 156, 173, 174, 178, 179, 183, 184, 186, 188, 192, 195, 196, 370, 371, 377, 390, 393, 421, 434, 439, 447, 456, 465, 467, 483], "target_nam": 507, "target_posit": [166, 434, 437, 439, 447, 455, 456, 483], "target_radec": 84, "targetmetadata": 118, "task": [314, 384, 388, 390, 391, 393, 394, 425, 438, 441, 465, 466, 474, 478, 482, 498, 506, 556, 558, 562], "task_nam": 314, "tast": 558, "tau": [26, 51, 54, 392, 460, 524], "tau_0": 51, "taul": [26, 460], "taur": [26, 460], "taylor": [52, 53], "tb00058": 134, "tbl": [83, 86], "tctypn": 449, "tcunin": 449, "tdelta_precis": 289, "team": [369, 373, 381, 384, 386, 390, 402, 423], "technic": [366, 367, 369, 377, 384, 386, 388, 390, 394, 442, 498], "techniqu": [370, 379, 380, 382, 434, 437, 445, 448, 465, 467, 505, 508, 556], "tediou": 461, "tel": [83, 86], "telescop": [78, 79, 81, 86, 90, 99, 143, 377, 378, 391, 396, 400, 401, 449, 455, 458, 470, 473, 474, 476], "tell": 439, "temp": [419, 450], "temperatur": [52, 53], "templat": [16, 26, 57, 68, 80, 99, 100, 105, 109, 111, 118, 160, 168, 182, 183, 184, 186, 187, 188, 194, 195, 196, 202, 214, 228, 236, 259, 260, 261, 262, 263, 264, 270, 272, 285, 288, 369, 375, 376, 380, 387, 412, 426, 429, 430, 432, 440, 441, 443, 450, 466, 467, 468, 469, 486, 507, 510, 512, 523, 530, 533, 538, 544, 552], "template_diffus": [468, 474], "template_model": 449, "templatelightcurvetemporalmodel": 426, "templatend": [259, 260, 469], "templatendspatialmodel": [245, 469], "templatendspectralmodel": [26, 246, 417, 428, 469], "templatenpredmodel": [232, 415], "templatephasecurvetemporalmodel": [258, 426, 469, 552], "templatespatialmodel": [65, 245, 386, 387, 412, 426, 427, 429, 430, 449, 468, 469, 474, 522], "templatespectralmodel": [214, 236, 246, 268, 387, 469, 474, 494, 530, 533, 538, 543], "templatetemporalmodel": 426, "tempo2": [458, 498], "tempor": [205, 207, 213, 214, 221, 225, 227, 228, 229, 236, 244, 250, 251, 258, 262, 265, 281, 375, 377, 387, 388, 408, 410, 411, 412, 417, 426, 428, 429, 430, 432, 435, 438, 440, 445, 446, 447, 449, 452, 453, 454, 461, 462, 468, 474, 478, 482, 494, 495, 498, 499, 503, 506, 510, 554, 555, 557], "temporal_model": [251, 377, 449, 450, 457, 469, 545, 546, 547, 548, 549, 550, 551, 552, 553], "temporal_model1": 457, "temporal_model2": 457, "temporal_model_map": 450, "temporal_model_registri": 469, "temporal_typ": 387, "temporalbackground": 375, "temporalmodel": [213, 221, 225, 227, 228, 229, 244, 250, 251, 262, 375, 388, 411, 426, 428, 429, 512], "temporari": 478, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 375], "ten": [370, 384], "tend": [364, 517], "tension": 454, "tensorflow": [382, 384], "tent": 393, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 229, 286, 290, 367, 369, 371, 373, 374, 378, 381, 384, 389, 391, 413, 417, 426, 441, 463, 464, 558, 560, 561], "termin": [83, 86, 96, 380, 395, 396, 397, 398, 399, 434, 435, 437, 438, 439, 445, 446, 447, 458, 463, 474, 482, 483, 558], "terrestri": 562, "terrier": [370, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 391, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "test": [6, 89, 96, 109, 111, 114, 116, 117, 119, 120, 121, 124, 125, 127, 133, 151, 153, 156, 183, 184, 186, 192, 195, 196, 228, 273, 274, 275, 277, 280, 323, 338, 339, 340, 341, 342, 343, 344, 365, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 389, 392, 393, 394, 404, 406, 407, 409, 411, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 429, 434, 440, 441, 450, 453, 455, 456, 457, 462, 464, 496, 498, 502, 508, 552, 553, 557, 560], "test2": 457, "test_aeff3d": 464, "test_edisp": 464, "test_events_with_gti": 495, "test_gti": 495, "test_person_txt": 364, "test_plot": 364, "test_psf": 464, "test_someth": 364, "test_using_data_fil": 343, "test_using_scipi": 344, "testcod": 365, "testoutput": 365, "testpar": 392, "teststatisticnest": 429, "tev": [16, 19, 20, 26, 44, 52, 53, 64, 65, 69, 72, 79, 91, 96, 97, 100, 104, 105, 106, 110, 112, 117, 119, 120, 132, 133, 137, 138, 140, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 163, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 251, 252, 254, 255, 256, 257, 260, 264, 266, 267, 291, 292, 313, 359, 365, 375, 387, 388, 391, 392, 400, 433, 434, 435, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 492, 495, 496, 502, 503, 505, 507, 508, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556], "tevcat": [416, 461], "tevcat_nam": 69, "tevpi": 403, "tevtevtev1": 447, "tex": 365, "texliv": 365, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 100, 105, 117, 119, 127, 248, 249, 292, 353, 365, 372, 380, 390, 394, 438, 458, 464, 473, 482, 484, 515, 516, 517, 520, 521, 525, 541, 548, 558, 560], "textcolor": 353, "textkw": 353, "th": 188, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 126, 144, 145, 152, 154, 160, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 273, 282, 342, 357, 364, 367, 369, 370, 371, 374, 377, 378, 379, 382, 383, 388, 390, 391, 394, 423, 426, 427, 428, 430, 433, 434, 445, 446, 449, 454, 455, 456, 463, 465, 467, 470, 471, 494, 511, 516, 517, 558, 560], "thank": [388, 409, 410, 415, 417, 465, 498], "thaw": 468, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 90, 99, 103, 107, 118, 124, 128, 157, 262, 281, 313, 364, 365, 367, 369, 370, 371, 372, 373, 375, 378, 380, 381, 383, 384, 387, 388, 389, 390, 391, 392, 394, 401, 412, 415, 417, 429, 430, 434, 435, 439, 460, 462, 463, 467, 468, 469, 470, 471, 473, 476, 486, 495, 496, 498, 503, 510, 511, 556, 557, 558, 559, 560, 562], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 95, 99, 118, 205, 207, 214, 236, 293, 364, 365, 367, 369, 371, 372, 378, 380, 383, 390, 391, 393, 394, 400, 407, 423, 434, 435, 437, 440, 442, 445, 446, 448, 450, 455, 461, 462, 463, 466, 467, 469, 471, 473, 475, 478, 483, 495, 498, 507, 558, 560], "theme": [417, 424], "themselv": [83, 86, 380, 465, 467, 505], "theorem": [273, 496, 560], "theoret": 471, "therefor": [100, 370, 374, 377, 378, 379, 383, 385, 387, 397, 415, 434, 455, 458, 463, 466, 467, 470, 471, 484, 496, 560, 561], "thereof": 375, "thermal": [19, 534, 557], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 144, 150, 152, 154, 158, 166, 180, 189, 294, 297, 364, 412, 439, 474, 484, 515, 516, 520, 521], "theta2": [170, 180, 362, 423], "theta2_axi": 476, "theta2_max": 362, "theta2_min": 362, "theta2_t": 476, "theta_0": [33, 38], "theta_squared_axi": [180, 476], "thew": 461, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 65, 66, 67, 78, 79, 80, 81, 82, 83, 84, 86, 95, 97, 98, 99, 100, 103, 104, 105, 108, 112, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 165, 166, 167, 169, 171, 173, 174, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 204, 206, 208, 209, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 266, 273, 275, 277, 283, 293, 301, 311, 314, 317, 322, 323, 339, 342, 349, 351, 353, 354, 355, 359, 361, 363, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 486, 487, 494, 495, 496, 498, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562], "thick": 361, "thin": [56, 305], "thing": [364, 367, 369, 372, 378, 379, 380, 381, 384, 388, 394, 403, 422, 439, 442, 457, 458, 467, 474], "think": [369, 381, 382, 384], "third": [61, 62, 83, 86, 365, 415, 461, 463, 466, 478, 484, 493], "thoma": [390, 423], "thorough": [466, 486], "those": [15, 79, 169, 183, 184, 186, 192, 195, 196, 201, 205, 207, 214, 236, 301, 353, 364, 367, 369, 371, 373, 378, 380, 383, 384, 385, 386, 387, 389, 394, 395, 396, 398, 399, 409, 412, 455, 463, 466, 467, 468, 470, 478, 484, 496, 498, 507, 562], "though": [15, 367, 372, 378, 379, 380, 382, 384, 438, 469, 482], "thought": [369, 378], "three": [83, 86, 151, 276, 364, 373, 376, 378, 390, 447, 449, 454, 455, 466, 471, 478, 503, 510, 557], "threshold": [65, 97, 104, 112, 117, 118, 119, 127, 132, 133, 140, 141, 145, 158, 169, 193, 273, 353, 354, 355, 378, 405, 411, 412, 433, 437, 439, 441, 447, 451, 455, 461, 462, 463, 465, 467, 473, 482, 494, 496], "threshold_alpha": 158, "through": [41, 83, 86, 292, 293, 361, 367, 369, 377, 378, 384, 388, 389, 397, 401, 415, 426, 450, 454, 463, 465, 466, 467, 468, 474, 475, 498, 503, 510, 557, 560], "throughout": [13, 371, 373, 374, 378, 380, 422, 461], "throught": 451, "thrown": 469, "thu": [364, 371, 378, 381, 382, 384, 419, 433, 442, 443, 447, 449, 555, 561], "thumbnail": 415, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184, 373, 457], "tibaldo": 420, "tick": [428, 429], "tick_param": 433, "ticker": 353, "tight_layout": [463, 471, 517, 521], "tightli": 383, "tikonov": 392, "tild": [182, 194], "tile": [182, 184], "tilt": [242, 261, 375, 386, 387, 392, 404, 410, 442, 445, 446, 449, 450, 453, 462, 469, 474, 482, 483, 505, 511, 518, 538, 543], "tilt_prior": 392, "tim": 430, "time": [6, 19, 20, 50, 51, 52, 53, 74, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 95, 96, 97, 98, 99, 100, 103, 104, 105, 117, 118, 119, 124, 127, 128, 135, 159, 165, 176, 178, 183, 184, 185, 186, 187, 192, 193, 195, 196, 201, 204, 206, 213, 216, 221, 225, 227, 228, 229, 244, 250, 251, 262, 265, 276, 281, 289, 323, 341, 345, 346, 347, 348, 364, 365, 367, 369, 370, 371, 372, 374, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 393, 394, 396, 400, 404, 405, 408, 409, 410, 412, 415, 419, 421, 422, 423, 424, 425, 426, 428, 429, 430, 437, 439, 440, 441, 443, 445, 447, 448, 450, 451, 455, 458, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 473, 474, 475, 482, 483, 484, 490, 491, 492, 494, 495, 496, 498, 503, 506, 511, 516, 517, 524, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 557, 558, 559, 560, 561], "time_axi": [183, 184, 186, 187, 192, 195, 196, 276, 450, 466, 511], "time_bin": 379, "time_bin_end": 379, "time_bin_s": 379, "time_bin_start": 379, "time_bound": 193, "time_box": 86, "time_column": 388, "time_delta": [82, 193, 345, 348], "time_edg": [193, 454, 466], "time_filt": 85, "time_format": [119, 193, 429, 457], "time_interv": [16, 79, 82, 84, 87, 124, 438, 442, 443, 445, 450, 455, 456, 482], "time_map_axi": [193, 466], "time_map_axis_contigu": 466, "time_max": [95, 117, 119, 193, 378, 379, 380, 450, 455, 461, 466], "time_mid": [193, 454], "time_min": [95, 117, 119, 193, 378, 379, 380, 450, 455, 461, 466], "time_rang": [86, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 450, 545, 546, 547, 548, 549, 550, 551, 552, 553], "time_ref": [79, 81, 82, 86, 89, 187], "time_ref_default": 82, "time_ref_from_dict": 562, "time_relative_to_ref": 562, "time_seri": 276, "time_start": [81, 82, 86, 379], "time_step": 379, "time_stop": [81, 82, 86, 379], "time_sum": [82, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265], "timedelta": [83, 86, 89, 193, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 323, 345, 348, 562], "timedelta64": [83, 86], "timelin": [369, 371, 423], "timemapaxi": [119, 135, 185, 187, 415, 430, 454, 456, 457], "timerangeconfig": 16, "timeref": 449, "timescal": [128, 221, 282, 389, 454], "timeseri": 379, "timesi": [89, 427, 429, 449], "timestamp": 364, "timeunit": 449, "timmer": 276, "timmer1995": 276, "tini": [447, 473], "tip": 498, "titl": [369, 451, 460], "tiziani": 421, "tke": 474, "tm": [83, 86], "tmax": 379, "tmid": [84, 429, 447, 465, 470, 483], "tmin": 379, "to_2d": [138, 476], "to_3d": [137, 428, 430], "to_bands_hdu": [181, 182, 191, 194], "to_binsz": [182, 191, 194, 415], "to_binsz_wc": 191, "to_contigu": [193, 466], "to_counts_hdulist": 102, "to_cub": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 412, 443, 511], "to_dict": [19, 20, 26, 94, 96, 97, 100, 104, 105, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 391, 471], "to_edisp_kernel": [145, 502], "to_edisp_kernel_map": [142, 415, 502], "to_energy_dependent_table_psf": 423, "to_even_npix": 194, "to_fits_head": 81, "to_fram": 189, "to_gti": [193, 430], "to_hdu": [183, 184, 195, 196], "to_hdulist": [97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 183, 184, 190, 191, 192, 195, 196, 466], "to_head": [80, 99, 118, 182, 185, 187, 188, 193, 194, 391], "to_html": 364, "to_imag": [97, 100, 104, 105, 140, 141, 151, 153, 156, 181, 182, 191, 194, 386, 409, 410, 433, 443, 447, 462, 474, 508, 511], "to_json": [16, 80, 99, 118], "to_map": [117, 119], "to_map_dataset": [100, 105], "to_mask": [97, 100, 104, 105, 460], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 415, 461], "to_node_typ": 188, "to_nsid": [182, 184], "to_odd_npix": 194, "to_panda": [83, 86], "to_parameters_t": [214, 236, 434, 437, 438, 439, 442, 445, 463, 483], "to_pixel": [378, 437, 447, 460, 465, 469, 507, 515, 516, 517], "to_polygon": 378, "to_psf3d": [144, 152, 154], "to_python": [16, 80, 99, 118], "to_region": [210, 211, 214, 215, 223, 226, 236, 240, 248, 249, 263, 378, 409, 469, 515, 516, 517], "to_region_map_dataset": [97, 100, 104, 105, 462], "to_region_nd_map": [141, 142, 148, 153, 156, 184, 192, 196, 412, 415, 474], "to_region_nd_map_histogram": [196, 429], "to_sed_typ": 388, "to_sherpa": [409, 423, 424], "to_spectrum": 415, "to_spectrum_dataset": [95, 97, 100, 104, 105, 386, 408, 410, 458, 462, 471], "to_st": 429, "to_str": [429, 433], "to_swap": [182, 183, 184], "to_tabl": [96, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 187, 188, 192, 205, 207, 228, 415, 435, 437, 438, 447, 451, 453, 455, 457, 461, 469, 484, 496], "to_table_hdu": [79, 82, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 187, 188, 466], "to_table_psf": 421, "to_template_sky_model": [214, 236], "to_template_spectral_model": [214, 236, 387], "to_unit": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196], "to_wc": [183, 184], "to_wcs_geom": [182, 191, 511], "to_wcs_til": [182, 184], "to_yaml": [16, 80, 99, 118, 202, 214, 236, 375, 391, 469, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "tob": 438, "todai": 390, "todo": [13, 75, 83, 86, 94, 151, 264, 365, 388, 406, 473, 488, 489, 562], "tof": 150, "togeth": [95, 97, 100, 104, 105, 120, 124, 214, 236, 361, 364, 377, 381, 384, 395, 407, 443, 445, 446, 451, 456, 462, 463, 465, 468, 469, 470, 471, 476, 483, 494, 495, 558], "tol": 463, "toler": [82, 95, 124, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 341, 463], "tolist": 463, "toml": 412, "ton": [282, 473], "too": [364, 369, 370, 414, 415, 428, 429, 430, 463, 467], "took": 389, "tool": [6, 13, 183, 184, 186, 195, 196, 363, 367, 371, 373, 375, 377, 380, 381, 384, 390, 401, 409, 420, 423, 424, 448, 451, 457, 462, 463, 466, 470, 473, 474, 486, 498, 532, 556, 557], "toolbox": [380, 420], "top": [104, 105, 351, 360, 364, 369, 380, 384, 386, 397, 423, 439, 441, 447, 451, 454, 455, 457, 461, 465, 484, 498, 511, 556, 558, 562], "top_five_ts_3fhl": 484, "tophat2dkernel": 116, "topic": [369, 373, 384, 392, 484], "total": [51, 65, 94, 96, 97, 100, 104, 105, 120, 121, 124, 125, 131, 163, 178, 182, 202, 213, 221, 225, 227, 228, 229, 244, 250, 262, 265, 290, 372, 388, 392, 396, 398, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 471, 472, 474, 477, 479, 481, 482, 483, 484, 485, 488, 494, 498, 503, 513, 523, 534, 544, 554, 557], "total_jfact": 460, "total_jfact_decai": 460, "total_model": 375, "total_obstim": 465, "total_stat": [202, 203, 463, 559], "touch": [82, 404], "tour": 478, "toward": [311, 371, 378, 384, 425], "tox": [329, 365, 367, 426, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 522, 530, 533, 546], "tqdm": 498, "trace": [201, 202, 203, 412, 463], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 364], "track": [81, 89, 364, 373, 379, 390, 417, 468], "tracker": [367, 378], "tradition": [469, 559], "train": 389, "traitlet": [380, 391], "traittyp": 391, "transfer": 391, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 81, 89, 151, 185, 187, 188, 193, 194, 214, 236, 295, 299, 322, 327, 364, 378, 380, 388, 392, 403, 405, 421, 424, 441, 447, 465, 471, 510, 515, 516, 562], "transit": [27, 354, 355, 371, 404, 405, 423, 475], "transit_map": 475, "transit_numb": 475, "transitsmap_crab": 475, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 380, 496], "transpar": 379, "transport": 466, "transpos": 424, "trapezoid": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 269, 304], "trapz": 304, "trapz_loglog": 410, "trash": 406, "travi": [409, 411, 415], "treat": [90, 396, 428, 429, 437, 449, 561], "treatment": [415, 445, 557], "trend": 449, "tri": [372, 378], "tributor": 390, "tricki": 378, "trigger": [342, 364, 393, 475], "trim": [97, 100, 141, 142, 148, 153, 156, 159, 194, 196, 261], "tripl": 144, "trivial": 371, "troubl": 558, "troubleshoot": [396, 397, 398], "trough": 454, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 76, 78, 79, 80, 82, 83, 84, 86, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 116, 117, 118, 119, 120, 124, 125, 127, 131, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 169, 170, 173, 174, 176, 177, 179, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 290, 293, 301, 302, 305, 323, 333, 335, 352, 357, 361, 364, 370, 377, 378, 379, 380, 387, 388, 391, 406, 410, 411, 422, 424, 425, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 475, 480, 482, 483, 484, 488, 494, 496, 498, 503, 508, 510, 511, 514, 515, 516, 519, 520, 522, 543, 557, 560, 562], "truelov": 53, "truncat": [127, 311, 415], "truncation_valu": [278, 284], "trust": [16, 80, 99, 118], "trustworthi": 392, "truth": 471, "try": [16, 80, 99, 118, 183, 184, 186, 192, 195, 196, 364, 365, 374, 378, 384, 393, 394, 400, 405, 435, 437, 439, 449, 450, 455, 461, 463, 466, 484, 558], "ts2": 276, "ts3": 276, "ts_image_estim": 447, "ts_scan": [117, 119], "ts_threshold": [135, 273], "ts_threshold_ul": [458, 496], "ts_to_sigma": [448, 560], "tsimageestim": 423, "tsmap_est": 357, "tsmapestim": [113, 134, 357, 385, 388, 410, 411, 413, 415, 429, 441, 447, 498], "tstart": [84, 86, 377, 379, 440, 449, 453, 456, 457, 473], "tstop": [84, 377, 379, 440, 449, 453, 456, 473], "tt": [82, 89, 346, 347, 390, 450, 456, 562], "tth_sec3": 188, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 79, 80, 83, 84, 86, 96, 97, 99, 100, 104, 105, 118, 122, 127, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 159, 164, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 261, 264, 275, 277, 280, 305, 315, 322, 364, 466, 510], "turn": [79, 84, 365, 367, 378, 473, 555], "tutori": [78, 94, 114, 124, 126, 168, 364, 367, 368, 373, 376, 377, 378, 379, 380, 381, 382, 385, 394, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 479, 481, 482, 483, 484, 485, 498, 499, 501, 510, 555, 558], "tutorials_jupyt": [393, 478], "tutorials_python": 478, "tweak": [380, 415, 466], "twice": [116, 510, 561], "twinx": 433, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 82, 83, 85, 86, 96, 97, 100, 104, 105, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 159, 164, 166, 182, 183, 184, 185, 186, 188, 191, 192, 194, 195, 196, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 323, 332, 353, 358, 361, 363, 364, 365, 367, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 388, 389, 390, 392, 393, 394, 396, 417, 423, 425, 429, 438, 439, 445, 446, 448, 451, 457, 461, 462, 463, 464, 466, 467, 469, 470, 471, 473, 475, 482, 483, 488, 494, 495, 496, 498, 507, 510, 511, 526, 560, 561], "txt": [119, 389, 391, 468, 474], "tyler": 417, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 85, 86, 91, 94, 95, 96, 97, 99, 108, 116, 117, 118, 119, 121, 127, 157, 163, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 293, 323, 370, 373, 374, 375, 376, 378, 379, 380, 383, 387, 388, 390, 392, 394, 395, 400, 408, 415, 421, 422, 423, 429, 434, 435, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 482, 483, 484, 486, 496, 498, 510, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 557, 558], "typeerror": [16, 80, 99, 118, 293, 378, 388, 392], "typic": [117, 370, 373, 375, 382, 386, 387, 388, 389, 391, 396, 397, 434, 439, 443, 451, 453, 455, 456, 461, 462, 464, 467, 469, 470, 486, 493, 494, 495, 503, 507, 556, 557], "typing_extens": [16, 80, 99, 118], "typo": [364, 401, 427, 428], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 64, 79, 81, 83, 86, 91, 97, 100, 104, 105, 109, 111, 112, 117, 119, 121, 123, 127, 132, 133, 140, 142, 151, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 208, 209, 212, 216, 218, 219, 220, 224, 228, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 266, 267, 276, 291, 292, 293, 313, 359, 364, 367, 371, 372, 373, 379, 380, 381, 382, 387, 388, 391, 392, 404, 405, 406, 423, 424, 425, 433, 434, 435, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 488, 495, 496, 498, 500, 505, 507, 508, 511, 515, 517, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552], "u03c3": 448, "u18": [33, 38], "uc": [83, 86], "ufunc": [183, 184, 186, 192, 195, 196, 439], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 233, 266, 267, 276, 283], "ul": [65, 116, 117, 119, 120, 121, 124, 125, 127, 274, 446, 451, 457, 461], "ultim": 364, "un": [376, 390, 412, 468], "unambigu": 469, "unbehaun": 430, "unbin": [376, 377, 424], "unboundlocalerror": 364, "uncertaint": 382, "uncertainti": [52, 97, 100, 104, 105, 275, 277, 368, 381, 422, 435, 437, 458, 463, 471, 483, 556, 557, 559], "unchang": [97, 100, 104, 105, 109, 111, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 423], "unclear": [364, 374, 375, 381, 391], "uncom": [380, 473], "undefin": 561, "under": [70, 86, 134, 364, 368, 373, 381, 390, 424, 425, 438, 478, 482, 494, 560, 561], "underestim": 496, "underflow": 193, "underli": [83, 86, 191, 377, 435, 461, 466, 471, 484, 486, 495, 498, 507, 510], "underscor": 364, "understand": [380, 401, 409, 410, 434, 437, 438, 439, 442, 449, 450, 454, 456, 457, 466, 467, 468, 473, 482, 483, 486, 558], "undertak": 384, "unexpect": 475, "unfold": 557, "unfreez": [19, 20, 26, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 534], "unfreeze_al": [205, 207, 468], "unfrozen": 505, "unheard": 558, "uni": 392, "uni_prior_stat_sum": 471, "unicod": [83, 86, 364], "unid": 65, "unidimension": 187, "unif": 409, "unifi": [83, 86, 368, 373, 378, 404, 407, 409, 410, 411, 412, 415, 424, 425, 557], "uniform": [151, 201, 322, 364, 373, 375, 376, 386, 388, 392, 406, 407, 411, 415, 434, 466, 471, 556], "uniform_filt": [122, 196], "uniformli": [377, 496], "uniformprior": [392, 471], "uninstal": 363, "union": [80, 82, 85, 97, 99, 100, 118, 191, 328, 378, 379, 390, 391, 407, 494], "uniqu": [83, 86, 95, 140, 182, 183, 184, 185, 186, 192, 194, 195, 196, 205, 207, 214, 236, 357, 374, 375, 376, 377, 387, 390, 410, 438, 462, 469, 475, 511, 555], "unique_id": 469, "unique_paramet": [205, 207], "uniquifi": [83, 86], "unit": [6, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 64, 79, 81, 83, 84, 86, 91, 96, 97, 100, 102, 104, 105, 106, 109, 110, 111, 112, 117, 119, 121, 123, 127, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 163, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 204, 206, 208, 209, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 266, 267, 276, 291, 292, 293, 323, 335, 336, 337, 339, 348, 349, 350, 353, 354, 355, 359, 365, 373, 375, 378, 380, 382, 387, 388, 392, 404, 405, 407, 415, 417, 423, 424, 426, 427, 428, 429, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 488, 490, 491, 492, 495, 496, 498, 500, 502, 503, 505, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 557], "unit_string_format": [429, 433], "unitbas": 293, "uniti": [122, 185, 263, 427, 517], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 222, 261], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [433, 440, 442, 445, 447, 453, 457, 473], "univers": [183, 184, 186, 192, 195, 196, 557], "univsers": 20, "unknown": [277, 441, 463, 557, 559, 560], "unless": [88, 90, 120, 121, 124, 127, 159, 293, 363, 370, 389, 391, 464], "unlik": [83, 86, 273, 371, 382], "unmaintain": 405, "unmask": [83, 86], "unnam": [83, 86, 189], "unnecessari": [415, 426, 445], "unneed": 429, "unphys": 561, "unrealist": 364, "unrel": 562, "unreli": 473, "unsaf": 364, "unstabl": [364, 473], "unsupport": 381, "untar": 473, "until": [364, 367, 371, 378, 389, 422], "unus": [380, 407, 409], "unusu": 369, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 121, 123, 127, 144, 150, 152, 154, 191, 293, 364, 365, 368, 369, 371, 372, 373, 376, 378, 380, 381, 382, 384, 386, 390, 392, 394, 395, 396, 398, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 415, 419, 421, 422, 423, 424, 425, 437, 438, 445, 448, 449, 471, 473, 474, 511, 558], "upcast": 293, "upcom": [372, 373], "updat": [15, 16, 80, 83, 86, 98, 99, 103, 118, 190, 204, 206, 214, 236, 273, 313, 332, 364, 367, 369, 370, 371, 372, 373, 376, 381, 386, 388, 390, 391, 393, 394, 396, 397, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 421, 422, 423, 424, 426, 429, 430, 466, 469, 509, 510, 562], "update_config": 15, "update_forward_ref": [16, 80, 99, 118], "update_from_dict": [204, 206], "update_link_label": [214, 236], "update_parameters_from_t": [214, 236], "upgrad": [182, 363, 389, 397], "upload": [381, 393, 473], "upon": [97, 100, 104, 105, 373, 442, 468, 473, 494], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 76, 96, 116, 117, 118, 119, 120, 121, 124, 125, 127, 140, 188, 193, 201, 208, 209, 212, 213, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 233, 237, 239, 241, 242, 243, 244, 247, 250, 252, 254, 255, 256, 257, 260, 262, 264, 265, 274, 275, 277, 391, 400, 411, 415, 422, 423, 424, 430, 437, 451, 455, 462, 465, 482, 494, 496], "upper_error": 119, "upsampl": [153, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 406, 426], "upsample_geom": 153, "upstream": [364, 367], "upward": [275, 277], "url": 372, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 63, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 274, 276, 278, 289, 291, 293, 301, 304, 305, 306, 313, 314, 317, 322, 323, 329, 332, 347, 348, 350, 351, 353, 354, 355, 357, 358, 359, 360, 361, 363, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 398, 399, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 445, 446, 447, 450, 451, 453, 454, 456, 457, 458, 460, 461, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 484, 487, 488, 498, 500, 501, 502, 504, 508, 509, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 562, 563], "usabl": 364, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 99, 114, 118, 124, 126, 168, 181, 182, 191, 194, 317, 370, 374, 375, 377, 379, 383, 388, 408, 429, 430, 461, 465, 467, 468, 558], "use_cach": 237, "use_center_as_plot_label": 188, "use_enum_valu": [16, 80, 99, 118], "use_evaluation_region": [214, 236], "use_fft": 196, "use_local_fil": [83, 86], "use_nullable_int": [83, 86], "use_region_cent": [163, 170, 173, 174, 176, 177, 415, 434], "useless": 473, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 84, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 364, 365, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 401, 408, 415, 416, 422, 423, 424, 426, 438, 448, 449, 450, 462, 464, 466, 467, 468, 469, 470, 478, 482, 495, 496, 497, 498, 503, 507, 510, 513, 519, 523, 544, 554, 555, 558], "userdataset": 376, "usernam": 367, "userwarn": [437, 439, 446, 447, 451, 474], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 558, "usual": [29, 78, 79, 117, 132, 137, 138, 139, 151, 192, 301, 364, 365, 367, 369, 370, 371, 372, 378, 379, 384, 390, 394, 429, 433, 434, 435, 437, 439, 440, 442, 443, 447, 449, 450, 453, 454, 455, 456, 457, 460, 462, 467, 470, 475, 483, 486, 494, 498, 500, 501, 502, 504, 507, 511, 516, 555, 557, 558, 559], "ut1": 562, "utc": [82, 84, 99, 118, 345, 449, 455, 456, 466, 469, 545, 546, 547, 548, 549, 550, 551, 552, 553, 562], "utf": [83, 86], "utf8": [16, 80, 99, 118], "util": [6, 91, 99, 106, 109, 110, 111, 118, 119, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 142, 172, 173, 174, 175, 176, 177, 178, 179, 180, 272, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 364, 373, 375, 376, 377, 378, 388, 403, 406, 407, 408, 409, 416, 417, 420, 421, 422, 423, 424, 425, 429, 430, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 486, 487, 498, 557], "utilis": [79, 133, 365, 433, 437, 441, 448, 454, 466, 470, 495, 498], "v": [26, 31, 32, 37, 83, 86, 144, 150, 152, 153, 154, 156, 165, 172, 190, 262, 273, 297, 367, 372, 379, 380, 391, 392, 393, 394, 417, 433, 455, 460, 470, 482], "v0": [90, 371, 372, 375, 376, 378, 381, 383, 384, 389, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 424, 425, 426, 449, 450, 464, 468], "v1": [13, 16, 79, 80, 84, 99, 118, 364, 371, 373, 375, 380, 381, 382, 383, 389, 390, 393, 396, 398, 409, 410, 411, 417, 422, 426, 427, 428, 429, 430, 530, 533], "v2": [390, 391, 415, 423, 430, 473], "v3": 407, "v_0": [37, 49], "v_glat": 300, "v_glon": 300, "va": 515, "vagu": 369, "vain": 367, "val": [83, 86, 183, 184, 186, 192, 195, 196, 205, 207, 466, 510], "valfmt": 353, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 101, 117, 118, 121, 134, 155, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 293, 311, 363, 364, 373, 377, 380, 381, 390, 409, 417, 426, 434, 437, 463, 465, 466, 469, 474, 496, 498, 503, 557], "valid_hdu_class": [78, 83], "valid_hdu_typ": 83, "validate_al": 391, "validate_assign": [16, 80, 99, 118, 391], "validate_default": [16, 80, 99, 118], "validate_loc": 391, "validate_zenith_angl": 391, "validationerror": [16, 80, 99, 118, 391], "valle": 38, "valleespir": 488, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 79, 80, 82, 83, 84, 86, 87, 90, 94, 95, 96, 97, 99, 100, 104, 105, 107, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 159, 163, 169, 170, 172, 173, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 273, 274, 275, 277, 278, 280, 281, 282, 293, 297, 305, 306, 320, 323, 332, 335, 350, 353, 354, 355, 365, 367, 370, 375, 376, 378, 380, 382, 384, 387, 388, 391, 406, 409, 415, 426, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 473, 474, 475, 476, 482, 483, 484, 486, 490, 491, 492, 496, 498, 502, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 558, 559, 560, 561], "value_rang": 86, "value_scan": 274, "valueerror": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 80, 83, 86, 87, 95, 99, 118, 214, 236, 364, 378, 391], "values_equ": [83, 86], "values_err": 458, "values_scal": [137, 138, 139, 192, 196, 228, 259, 263, 264, 305, 427, 429, 450, 464], "vanilla": [83, 86], "var": [283, 396, 398], "vari": [66, 98, 103, 124, 151, 201, 305, 332, 376, 378, 379, 389, 409, 412, 432, 442, 447, 448, 450, 459, 465, 469, 471, 474, 478, 494, 496, 503, 506, 555], "variability_amplitud": 454, "variability_amplitude_100": 454, "variability_amplitude_error": 454, "variability_amplitude_signific": 454, "variability_estim": [432, 454, 459], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 86, 99, 118, 128, 196, 275, 277, 280, 281, 282, 283, 289, 304, 330, 364, 365, 367, 377, 379, 380, 394, 396, 398, 404, 405, 421, 422, 423, 429, 430, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 478, 482, 483, 484, 503, 558, 559, 560], "varianc": [91, 129, 130, 282, 283, 292, 379, 430, 470], "variant": 394, "variat": [128, 229, 282, 370, 380, 433, 454, 464, 465, 508, 560], "varieti": [375, 556], "variou": [114, 120, 121, 124, 125, 127, 133, 364, 370, 374, 376, 379, 388, 391, 394, 396, 415, 416, 430, 435, 438, 441, 446, 448, 455, 463, 482, 494, 498, 556, 562], "vast": [381, 417], "vaughan": [283, 454], "vaughan2003": 283, "ve": [364, 365, 367, 558], "vector": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 466, 502, 510], "vega": 424, "vel": 458, "vel_di": [45, 488], "vela": [64, 403, 435, 458, 484], "veloc": [31, 32, 37, 45, 49, 297, 300], "ver": 466, "verbos": [11, 78, 365, 387, 558, 560], "veri": [62, 83, 86, 132, 201, 354, 363, 364, 365, 366, 369, 370, 375, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 391, 394, 425, 433, 440, 454, 461, 463, 466, 471, 474, 484, 494, 498, 511, 520, 521, 555, 557, 558, 559], "verif": [95, 214, 236, 331, 446, 474], "verifi": [205, 207, 226, 273, 364, 377, 461, 498], "verifywarn": 498, "verita": [92, 396, 401, 474], "versa": 182, "version": [11, 74, 79, 81, 83, 84, 86, 119, 120, 121, 124, 171, 204, 206, 363, 365, 367, 368, 371, 372, 373, 374, 378, 381, 384, 390, 391, 392, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 408, 409, 414, 416, 417, 419, 422, 423, 424, 426, 427, 429, 430, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 496, 558], "versu": [137, 143, 273, 275, 277, 473, 492], "vert": 243, "vertex": 378, "vhe": [434, 486], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 79, 86, 98, 103, 184, 189, 199, 363, 365, 367, 372, 376, 378, 379, 380, 381, 382, 383, 385, 387, 390, 391, 392, 393, 394, 396, 397, 404, 412, 420, 422, 423, 424, 428, 429, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 480, 482, 483, 484, 498, 502, 507, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 562], "viabil": 391, "vice": 182, "victor": 419, "view": [79, 83, 86, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 160, 183, 184, 186, 190, 192, 195, 196, 222, 295, 299, 351, 364, 378, 405, 410, 415, 417, 424, 425, 437, 439, 443, 445, 449, 462, 464, 465, 467, 473, 474, 498, 500, 501, 502, 503, 504, 505, 507, 557], "viio8tbn": 445, "vika": 415, "vin\u00edciu": 422, "viridi": [439, 460], "virtual": [367, 394, 396, 397, 398, 558], "visibl": [83, 86, 354, 355, 372, 415, 433, 449, 475, 483, 484, 557], "vision": 369, "visit": 450, "visual": [6, 184, 196, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 378, 410, 411, 429, 430, 437, 439, 443, 445, 447, 450, 463, 464, 470, 475, 476, 483, 484, 498, 507, 512, 515, 556], "visualis": [361, 376, 378, 385, 411, 426, 439, 441, 464, 469, 471, 473, 498], "vline": [492, 515, 516], "vmax": [97, 100, 104, 105, 354, 355, 442, 445, 447, 453, 462, 466, 467, 474, 475, 482, 483, 507], "vmin": [97, 100, 104, 105, 354, 355, 441, 445, 453, 462, 466, 467, 474, 475, 482, 483, 507], "volum": [27, 187, 191, 194], "vorokh": [420, 421], "voruganti": [422, 423], "vstack": [79, 82, 377], "vuillaum": [390, 423], "vx": [297, 300, 389], "vy": [297, 300], "vz": [297, 300], "w": [26, 31, 49, 82, 180, 193, 290, 365, 389, 441, 443, 451, 460, 465, 469, 471, 498, 507, 559, 561], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 80, 81, 83, 86, 88, 89, 97, 99, 112, 118, 120, 121, 124, 127, 159, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 357, 364, 367, 369, 370, 371, 372, 373, 374, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 394, 404, 407, 408, 409, 410, 411, 412, 419, 423, 424, 425, 426, 427, 428, 429, 435, 437, 443, 445, 447, 465, 471, 473, 474, 475, 476, 484, 558], "wagner": 454, "wai": [33, 38, 79, 83, 86, 188, 276, 317, 323, 363, 364, 365, 367, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 384, 385, 388, 390, 396, 397, 398, 400, 403, 407, 423, 424, 435, 437, 439, 442, 445, 454, 461, 462, 463, 465, 466, 467, 468, 470, 473, 474, 475, 476, 478, 488, 495, 497, 498, 502, 511, 556, 558, 560], "wait": [364, 393, 394], "wall": [79, 84], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 99, 102, 118, 140, 166, 191, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 364, 366, 367, 369, 370, 371, 374, 378, 379, 380, 382, 383, 384, 394, 395, 396, 397, 398, 400, 401, 404, 424, 434, 437, 438, 439, 440, 442, 449, 450, 453, 455, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 482, 483, 484, 502, 555, 558, 559, 560, 561, 562], "ward": 291, "warn": [11, 16, 26, 78, 80, 83, 86, 99, 118, 184, 204, 205, 206, 207, 259, 260, 261, 263, 350, 389, 394, 406, 423, 428, 429, 430, 433, 440, 441, 442, 445, 446, 447, 449, 450, 453, 457, 458, 473, 474, 498, 522, 530, 533, 558], "warn_miss": 83, "warn_with_traceback": 364, "wasn": [371, 424], "watch": [474, 562], "water": [396, 475], "watson": 405, "wavelength": 383, "wavelet": [403, 421], "wc": [13, 16, 79, 97, 100, 104, 121, 158, 166, 167, 171, 182, 183, 184, 186, 191, 192, 194, 195, 196, 211, 214, 215, 223, 226, 236, 238, 248, 249, 253, 259, 263, 326, 359, 364, 370, 378, 383, 405, 406, 407, 409, 415, 423, 424, 428, 430, 437, 438, 441, 442, 443, 445, 447, 451, 455, 458, 460, 462, 464, 465, 467, 468, 469, 474, 482, 483, 484, 507, 510, 515, 516, 517, 522], "wcda": [57, 68], "wcs_geom": [191, 214, 236, 466, 511], "wcs_geom_3d": 466, "wcs_geom_cel": 466, "wcs_map": [195, 196, 357], "wcs_tile": [182, 184], "wcsax": [97, 100, 104, 105, 184, 191, 192, 196, 214, 236, 359, 361, 445, 466, 484, 514, 518, 519, 520], "wcsconfig": 16, "wcsgeom": [23, 79, 97, 100, 104, 105, 106, 108, 110, 116, 117, 127, 142, 151, 153, 163, 176, 177, 181, 182, 191, 195, 196, 210, 211, 215, 223, 226, 238, 240, 248, 249, 253, 259, 263, 365, 370, 378, 405, 408, 409, 410, 415, 428, 430, 437, 442, 447, 449, 450, 451, 453, 458, 460, 462, 464, 465, 466, 467, 469, 474, 475, 476, 483, 484, 494, 496, 505, 507, 508, 511, 514, 516, 517, 518, 519], "wcslib": 364, "wcsmap": [183, 184, 186, 196, 426], "wcsndmap": [97, 100, 106, 110, 112, 127, 132, 151, 153, 156, 158, 160, 165, 166, 167, 168, 171, 176, 177, 182, 183, 184, 186, 192, 194, 195, 197, 198, 214, 236, 251, 259, 351, 357, 359, 370, 408, 409, 410, 412, 415, 417, 424, 426, 429, 430, 441, 442, 451, 460, 462, 465, 466, 474, 484, 494, 496, 504, 507], "wcsprm": 522, "wcsshape": 466, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 63, 79, 83, 84, 85, 86, 90, 165, 191, 194, 204, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 267, 339, 364, 365, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 390, 391, 393, 394, 395, 396, 397, 398, 400, 403, 404, 405, 406, 411, 415, 417, 422, 423, 424, 425, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 480, 482, 483, 484, 495, 502, 503, 505, 507, 510, 521, 524, 534, 555, 558, 559, 560, 561, 562], "weak": [383, 471], "weaker": 273, "weakli": 467, "web": [83, 86, 372, 390, 393, 394, 400, 401, 415, 423, 461], "webpag": [366, 372, 384, 390, 393, 423, 426], "wedg": 378, "week": [367, 372, 382, 384, 389, 393], "weekli": [370, 373, 377, 378, 455], "wegen": [423, 424], "weigh": [153, 156, 471], "weight": [65, 141, 142, 148, 151, 153, 156, 182, 183, 184, 186, 191, 192, 194, 195, 196, 261, 392, 425, 429, 448, 471, 494, 510], "weighted_chi2_paramet": 448, "weighted_kernel": 151, "welcom": [369, 378, 474], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 65, 79, 83, 86, 100, 105, 109, 111, 116, 117, 125, 182, 186, 188, 192, 194, 204, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 354, 355, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 400, 401, 404, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 423, 424, 425, 429, 430, 434, 440, 443, 448, 450, 455, 457, 462, 463, 464, 465, 466, 467, 469, 473, 474, 478, 482, 483, 484, 494, 495, 496, 507, 510, 511, 555, 556, 558, 560], "went": 404, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 128, 281, 364, 369, 370, 371, 372, 377, 379, 380, 381, 382, 383, 384, 385, 387, 389, 392, 394, 404, 407, 408, 409, 410, 411, 412, 415, 418, 423, 424, 427, 446, 458, 467, 471, 473, 561], "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 267, 323, 365, 370, 378, 381, 383, 384, 391, 394, 402, 451, 460, 461, 463, 473, 474, 478, 483, 486, 494, 511, 543, 558, 559, 562], "whatev": [378, 380, 381, 558], "whatsnew": 393, "wheel": 381, "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 79, 80, 82, 83, 84, 85, 86, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 116, 117, 118, 119, 131, 141, 142, 148, 153, 155, 156, 166, 169, 183, 184, 186, 188, 190, 192, 195, 196, 201, 202, 208, 209, 212, 214, 216, 218, 219, 220, 224, 228, 230, 231, 233, 236, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 263, 264, 305, 363, 364, 365, 367, 369, 370, 371, 374, 376, 378, 379, 381, 384, 389, 390, 391, 392, 397, 409, 417, 418, 423, 425, 428, 429, 430, 439, 443, 447, 450, 451, 455, 456, 458, 461, 463, 465, 466, 469, 470, 473, 474, 494, 496, 498, 503, 505, 509, 510, 557, 559, 560, 561, 562], "whenev": [83, 86], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 67, 79, 80, 83, 84, 86, 99, 117, 118, 119, 122, 127, 140, 141, 142, 148, 153, 156, 158, 169, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 278, 281, 284, 285, 293, 329, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 391, 392, 394, 396, 398, 400, 406, 418, 424, 433, 437, 442, 449, 450, 461, 465, 466, 467, 469, 471, 473, 474, 475, 484, 486, 494, 495, 498, 503, 510, 515, 516, 517, 520, 521, 524, 557, 558, 559, 560, 561, 562], "wherea": [370, 378, 381, 558], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 82, 83, 84, 86, 95, 97, 99, 100, 102, 104, 105, 117, 118, 119, 120, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 169, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 201, 204, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 293, 302, 331, 333, 361, 369, 371, 378, 381, 383, 384, 391, 429, 440, 453, 465, 466, 484, 510, 559, 560], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 65, 68, 70, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 95, 96, 97, 99, 100, 102, 104, 105, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 132, 133, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 159, 163, 164, 169, 170, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 201, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 223, 224, 226, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 267, 273, 275, 277, 281, 282, 283, 289, 291, 305, 315, 325, 326, 342, 351, 353, 358, 360, 363, 365, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 399, 401, 405, 406, 407, 409, 410, 411, 412, 415, 418, 424, 426, 429, 433, 434, 437, 440, 441, 442, 443, 445, 448, 449, 450, 451, 454, 455, 457, 458, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 482, 483, 484, 488, 489, 494, 495, 496, 498, 500, 501, 502, 504, 505, 507, 509, 510, 511, 512, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 558, 559, 560, 561], "whichev": [182, 183, 184], "while": [83, 86, 100, 183, 184, 186, 188, 192, 195, 196, 364, 367, 369, 370, 371, 373, 376, 377, 379, 383, 385, 386, 388, 389, 390, 393, 394, 396, 433, 437, 439, 442, 450, 457, 458, 462, 464, 465, 466, 468, 469, 494, 496, 498, 509, 511, 558], "whilst": [365, 470, 478], "whippl": 92, "whirlwind": 478, "white": [282, 353, 354, 447, 458, 463, 468, 486, 511], "whitespac": 311, "who": [390, 460, 486], "whole": [90, 112, 160, 163, 170, 173, 174, 176, 177, 182, 183, 184, 186, 195, 196, 237, 266, 275, 277, 364, 370, 376, 379, 390, 434, 437, 445, 450, 455, 458, 462, 469, 474, 476, 555], "whose": [390, 394, 450, 504, 516], "why": [364, 365, 369, 371, 378, 463, 511], "wide": [371, 390, 391, 405, 424, 435, 446, 557], "wider": [456, 467], "widget": [183, 184, 186, 192, 195, 196, 445, 453, 466, 482, 483], "width": [16, 27, 66, 79, 83, 86, 97, 100, 104, 105, 106, 107, 109, 110, 111, 112, 122, 127, 140, 141, 142, 145, 148, 151, 153, 156, 158, 163, 168, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 211, 214, 215, 223, 225, 226, 236, 238, 248, 249, 251, 253, 259, 261, 263, 354, 355, 380, 387, 425, 438, 439, 442, 443, 445, 447, 448, 449, 450, 451, 453, 455, 458, 460, 461, 462, 464, 465, 466, 467, 469, 474, 475, 482, 483, 484, 505, 507, 508, 509, 510, 511, 515, 516, 517, 519, 520, 521], "width_err": 461, "width_error": 66, "width_min": 191, "width_pix": [182, 183, 184], "widthconfig": 16, "wiki": [34, 79, 84, 415, 473], "wikipedia": [34, 79, 84, 322, 378, 382], "wilei": 134, "wilk": [273, 496, 560], "willing": 367, "wind": [50, 443, 448, 469, 489], "window": [107, 363, 364, 371, 381, 394, 395, 396, 398, 404, 420, 424, 441, 461, 557, 558, 560], "wise": [19, 20, 26, 83, 86, 132, 133, 184, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 392, 417, 443, 445, 494], "wish": [191, 367, 382, 448, 463], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [374, 375, 376, 379, 386, 388], "withdrawn": [368, 369, 374, 375, 376, 379, 386, 388], "within": [120, 123, 132, 182, 196, 213, 214, 215, 221, 225, 226, 227, 228, 229, 236, 244, 248, 250, 251, 262, 265, 363, 364, 365, 369, 373, 378, 380, 381, 382, 383, 384, 387, 389, 390, 392, 394, 395, 396, 398, 418, 421, 423, 427, 429, 438, 439, 445, 448, 455, 456, 457, 461, 464, 465, 466, 469, 470, 474, 478, 484, 494, 497, 498, 557], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 124, 143, 181, 182, 187, 191, 194, 361, 364, 367, 369, 372, 374, 378, 379, 380, 381, 383, 388, 394, 405, 406, 410, 438, 441, 445, 446, 460, 465, 466, 467, 482, 498, 509, 510, 511, 553, 558, 560], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 460], "wo": 458, "wobbl": [90, 457, 473], "wobbleregionfind": 417, "wobbleregionsfind": 439, "wolfram": [320, 321], "women": 420, "won": [83, 86, 112, 116, 120, 124, 127, 336, 389, 445, 466, 473, 561], "wong": 407, "wood": [371, 421, 423, 424], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 498], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 95, 119, 193, 329, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 389, 390, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 416, 419, 420, 421, 422, 423, 424, 425, 426, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484, 494, 498, 508, 510, 522, 524, 530, 533, 546, 552, 553, 558], "workaround": 381, "workflow": [367, 372, 373, 380, 385, 389, 394, 409, 438, 443, 478, 482, 483, 499], "workshop": 373, "workspac": 367, "world": [79, 194, 214, 236, 364, 370, 447, 484, 510], "worst": 367, "worth": [364, 486], "would": [16, 80, 83, 86, 90, 99, 118, 183, 184, 186, 192, 195, 196, 364, 367, 370, 371, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 388, 390, 391, 406, 415, 435, 437, 440, 441, 453, 463, 466, 467, 469, 471, 474, 511], "wouldn": 378, "wp": [393, 473], "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 188, 247, 301, 378, 408], "wrap_at": 375, "wrap_coord": 188, "wrapper": [56, 237, 247, 305, 378, 379, 406, 409, 486, 498], "write": [11, 15, 16, 26, 78, 79, 82, 83, 84, 86, 95, 96, 97, 100, 102, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 183, 184, 186, 190, 192, 195, 196, 202, 214, 228, 236, 259, 260, 261, 262, 263, 333, 342, 365, 367, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 390, 391, 392, 394, 400, 403, 409, 412, 417, 419, 422, 423, 424, 425, 430, 433, 437, 445, 446, 449, 451, 464, 468, 469, 473, 474, 480, 482, 483, 498, 503, 559, 561], "write_arf": 102, "write_bkg": 102, "write_covari": [15, 95, 214, 236], "write_dataset": 15, "write_ds9": 469, "write_model": 15, "write_pha": 102, "write_rmf": 102, "writeabl": 392, "writer": [83, 86, 384, 391], "writeto": [82, 137, 138, 139, 143, 144, 145, 147, 150, 152, 154, 155, 449], "written": [79, 84, 95, 96, 97, 100, 102, 104, 105, 117, 119, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196, 198, 364, 365, 367, 369, 373, 374, 384, 390, 392, 427, 433, 450, 468, 471, 486, 494, 495, 498, 511, 557, 562], "wrong": [364, 413, 427, 428, 429], "wrote": 390, "wrt": [79, 153, 156, 364, 382, 457, 553], "wstat": [100, 105, 286, 287, 376, 403, 421, 422, 437, 438, 440, 443, 447, 458, 462, 471, 494, 557], "wstatcountsstatist": [458, 560], "wt": [26, 460], "wun": 407, "www": [26, 65, 83, 86, 134, 384, 473], "wyatt": [403, 557], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 65, 66, 83, 86, 97, 104, 122, 132, 133, 134, 138, 188, 192, 193, 201, 204, 206, 208, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 276, 282, 283, 285, 296, 297, 298, 300, 304, 306, 311, 320, 353, 356, 357, 364, 365, 369, 371, 372, 373, 378, 389, 393, 435, 440, 441, 447, 450, 454, 458, 461, 463, 464, 466, 471, 474, 484, 492, 498, 515, 516, 558, 560], "x27": 464, "x86_64": [433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "x_": 122, "x_0": [183, 184, 186, 192, 195, 196], "x_1": 305, "x_2": 305, "x_3": 305, "x_bkg": 458, "x_edg": 123, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [183, 184, 186, 192, 195, 196], "x_j": 122, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [122, 318, 320, 451], "x_min": [122, 318, 320, 451], "x_n": [183, 184, 186, 192, 195, 196], "x_r_0": 226, "x_ref": [122, 451], "x_sigma": 223, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [201, 463], "xarg": 364, "xaxi": 498, "xerr": [433, 471], "xf": 473, "xfail": 364, "xlabel": [365, 429, 443, 457, 463, 471, 474, 490, 491, 492, 515, 552], "xlim": [351, 445, 471, 474, 492], "xmax": [17, 18, 21, 22, 24, 25, 27, 192, 392], "xmin": [17, 18, 21, 22, 24, 25, 27, 192, 392], "xml": [373, 374, 375, 408, 422, 424, 473, 486], "xmltodict": [416, 473], "xref": 122, "xspec": [216, 264, 290, 422, 559], "xunit": [439, 524], "xviii": 384, "xx": [375, 390], "xxx": [83, 86, 369, 390], "xxx_by_coord": 466, "xxxx": 498, "xy": [437, 447, 451, 515], "xy_posit": [33, 34, 38], "xytext": 515, "xyz": 393, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 66, 83, 86, 132, 133, 138, 188, 201, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 296, 297, 298, 300, 304, 306, 356, 364, 378, 389, 429, 433, 441, 447, 450, 463, 471, 492, 498], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [201, 463], "yaml": [11, 15, 16, 20, 26, 80, 94, 95, 96, 97, 99, 100, 104, 105, 117, 118, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 273, 331, 333, 363, 372, 373, 375, 376, 377, 380, 381, 386, 391, 392, 394, 395, 407, 408, 409, 412, 417, 426, 430, 433, 434, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 483, 484, 497, 555, 556, 557, 558], "yaml_str": [214, 236, 438], "yaxi": [435, 498], "ye": 394, "year": [45, 60, 63, 74, 364, 369, 371, 372, 374, 381, 384, 385, 389, 391, 394, 421, 423, 424, 446, 448, 461, 473, 490, 491, 492, 493], "yearli": [397, 422], "yellow": 354, "yerr": 458, "yet": [85, 363, 364, 367, 369, 371, 378, 381, 384, 385, 431, 435, 438, 482, 562], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 84, 87, 183, 184, 186, 192, 195, 196, 329, 371, 377, 378, 383, 385, 387, 392, 467, 559, 560, 561], "yk04": [45, 48], "yk04b": 48, "ylabel": [365, 457, 463, 471, 474, 490, 491, 492, 515, 552], "ylim": [351, 443, 471, 474, 490, 492, 531, 540, 541, 542], "ymax": [515, 516], "ymin": [515, 516], "yml": [367, 381, 393, 394, 395, 396, 398, 423], "you": [16, 19, 20, 26, 65, 78, 79, 80, 83, 86, 89, 96, 99, 102, 118, 119, 132, 138, 140, 143, 166, 183, 184, 186, 192, 195, 196, 201, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 266, 273, 363, 364, 365, 366, 367, 369, 371, 374, 378, 381, 382, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 415, 423, 424, 425, 434, 435, 437, 438, 439, 440, 442, 443, 445, 447, 449, 450, 453, 456, 457, 458, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 478, 482, 483, 484, 494, 495, 498, 501, 509, 532, 555, 558, 559, 560, 561, 562], "your": [16, 19, 20, 26, 80, 94, 99, 118, 208, 209, 212, 216, 218, 219, 220, 224, 230, 231, 233, 237, 239, 241, 242, 243, 247, 252, 254, 255, 256, 257, 260, 264, 363, 364, 365, 367, 369, 371, 394, 395, 396, 397, 398, 400, 401, 404, 405, 406, 409, 410, 415, 424, 425, 433, 434, 435, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 482, 483, 484, 493, 498, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 557, 560], "yourself": [558, 559], "yr": [45, 52, 53, 488, 490, 491, 492], "yscale": [443, 550], "yt": 364, "yu": 407, "yunit": [437, 439, 460, 461, 474, 535], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 423, "yy": 390, "yyyi": 390, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 83, 86, 296, 297, 300, 389, 390, 460, 488, 524], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 419, "zanin": [423, 424], "zd": 79, "zen": 470, "zen_pnt": 470, "zenith": [433, 446, 470, 473, 474, 475, 503], "zenith_angl": [79, 391, 474, 484], "zenodo": [390, 417], "zero": [52, 53, 65, 83, 86, 95, 97, 100, 104, 105, 127, 132, 140, 141, 142, 145, 148, 153, 169, 183, 184, 186, 192, 195, 196, 240, 261, 263, 264, 305, 311, 323, 364, 408, 411, 426, 461, 465, 466, 471, 561], "zhao": [27, 430], "zhen": 134, "zip": [379, 392, 393, 437, 456, 460, 463, 468, 478, 492, 512, 517, 521, 534], "zl": [26, 460], "zone": 458, "zsh": 365, "zt": [26, 460], "z\u00e9": 422, "\u00e0": 421, "\u0261\u00e6m\u0259pa\u026a": 498, "\u03b3": [128, 486, 557], "\u03c3": 448}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (unreleased)", "Computation times", "Point source sensitivity", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Estimation of time variability in a lightcurve", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTA with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 438, 450, 476, 482], "0": [373, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "1": [369, 373, 392, 402, 403, 410, 411, 413, 418, 426, 427, 428, 429, 430, 431, 471], "10": [378, 402, 404], "10th": 426, "11": [379, 402, 405], "12": [380, 402, 406], "12th": 417, "13": [381, 402, 407, 416, 419], "13th": 429, "14": [382, 402, 408], "14th": 427, "15": [402, 409], "16": [383, 402, 410], "16th": 418, "17": [402, 411], "18": [384, 402, 412, 413, 414], "19": [385, 402, 415], "19th": 414, "1d": [438, 440, 446, 455, 456, 478], "1dc": 473, "2": [370, 371, 392, 402, 414, 416, 428, 430, 471, 537], "20": [386, 402, 417, 418, 420], "2014": 403, "2015": [416, 419], "2016": [420, 421], "2017": 422, "2018": [423, 424, 425], "2019": [404, 405, 406, 407, 408, 409], "2020": [410, 411, 412, 413, 414], "2021": 415, "2022": [417, 418, 426], "2023": [427, 428, 429], "2024": 430, "21": 387, "22": [388, 421], "22nd": 415, "23": [389, 424], "24": 390, "25": [391, 403], "26": [392, 407], "28": [404, 422, 423], "29": [405, 425], "29th": 430, "2d": [442, 478], "3": [371, 392, 402, 409, 419, 431], "30": [406, 408], "32": 364, "3955": 392, "3d": [445, 446, 453, 455, 478], "3fgl": [529, 540], "3fhl": 446, "4": [372, 402, 420], "4122": 392, "4fgl": [541, 542], "4th": 412, "5": [373, 402, 421], "6": [374, 402, 422], "64": 364, "6th": [413, 428], "7": [371, 375, 402, 423], "8": [376, 402, 424], "9": [377, 402, 425], "As": 504, "In": 365, "ON": [434, 439, 446], "On": 440, "The": [370, 394, 446, 448, 463, 471, 495, 507], "To": [364, 365, 384, 498], "about": 471, "abov": 448, "absolute_tim": 345, "absorpt": [387, 524], "abstract": [369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "accept": 367, "access": [462, 466, 475, 495], "accessor": 510, "action": [364, 384], "ad": 466, "adapt": 441, "adaptiveringbackgroundmak": 158, "add": [375, 468], "add_colorbar": 352, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [387, 392, 504, 556], "aeff_2d": 500, "against": 439, "aim": 468, "alia": 387, "all": 456, "along": 391, "altern": [372, 375, 377, 378, 379, 380, 381, 382, 384, 385, 388, 391], "amplitud": [392, 471], "an": [364, 433, 449, 450, 462, 467], "anaconda": 397, "analysi": [0, 11, 15, 370, 373, 433, 434, 437, 438, 439, 440, 445, 446, 447, 455, 458, 478, 482, 494, 497, 556], "analysisconfig": 16, "angl": [500, 501, 502, 504], "angular": 511, "annihil": 460, "annotate_heatmap": 353, "api": [6, 364, 365, 386, 388, 391, 392, 426, 429, 430, 478, 483], "apply_edisp": [106, 110], "approach": [379, 434, 435, 438, 440, 441, 442, 443, 446, 449, 450, 451, 453, 454, 455, 456, 457, 463, 467, 468, 470, 482, 483], "apr": [411, 416, 420, 422], "arbitrari": 391, "area": [464, 473, 500], "argument": [364, 378], "arm": 488, "asmoothmapestim": 112, "assert": 364, "assert_quantity_allclos": 339, "assert_skycoord_allclos": 340, "assert_time_allclos": 341, "assess": [445, 463], "assign": [456, 468], "astro": [1, 486, 489], "astronomi": 379, "astrophys": [1, 487, 488, 489], "astropi": [364, 389], "asymmetr": 464, "attribut": [364, 365, 375], "aug": [403, 419], "author": 390, "authorship": 390, "avail": 461, "ax": [466, 511], "axi": [364, 503], "backend_default": 308, "background": [375, 379, 383, 386, 392, 443, 448, 449, 465, 468, 473, 474, 482, 501, 505, 506, 507, 508, 559], "background2d": 137, "background3d": 138, "backgroundirf": 139, "backgroundirfmodel": 375, "backgroundmodel": 375, "backport": 364, "base": [388, 391, 509], "basic": [447, 466], "bayesian": 454, "between": 386, "bin": [379, 433, 448, 511], "binder": 394, "bit": 364, "bkg_2d": 501, "bkg_3d": 501, "block": 454, "boundari": 467, "branch": 393, "break": 364, "broken": [365, 525, 539], "brokenpowerlawspectralmodel": 208, "bsd": 364, "bug": [417, 426, 429, 430], "bugfix": 393, "build": [365, 367, 394, 455, 456], "built": 555, "bundl": 364, "burkertprofil": 17, "butterfli": 483, "call": 375, "candid": [393, 441], "caplog": 364, "cartesian": 294, "case": [370, 374, 392, 561], "casebattacharya1998": 28, "cash": [278, 559, 560], "cash_sum_cython": 279, "cashcountsstatist": 275, "catalog": [2, 461, 467, 468, 484, 493], "catalog_registri": 55, "caveat": 559, "cell": 364, "certif": 367, "cff": 390, "chain": [437, 439], "chang": [364, 385, 426, 429, 430], "changelog": 384, "character": 454, "check": [11, 364, 365, 399, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "checker": 338, "chi": 448, "choos": 365, "citat": 390, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 364, 365, 374, 375, 388, 391, 483, 504, 560], "clean": 383, "cli": 558, "click": 364, "clobber": 364, "clumpi": 486, "cluster": [13, 470], "code": [364, 365, 370, 373, 394], "codemeta": 390, "collect": 390, "colormap": 563, "colormap_hess": 354, "colormap_milagro": 355, "combin": [468, 495], "command": [11, 364, 558], "compar": [439, 455], "compound": [469, 526], "compound_region_to_region": 324, "compoundspectralmodel": 209, "comput": [432, 433, 436, 437, 438, 443, 444, 447, 452, 459, 463, 472, 477, 479, 481, 483, 485, 513, 523, 544, 554], "compute_chisq": 280, "compute_flux_doubl": 281, "compute_fpp": 282, "compute_fvar": 283, "compute_lightcurve_doublingtim": 128, "compute_lightcurve_fpp": 129, "compute_lightcurve_fvar": 130, "conda": 395, "confer": 390, "confid": 463, "config": [11, 442, 443, 558], "configur": [438, 445, 451, 455, 482, 556], "constant": [514, 527, 545], "constantfluxspatialmodel": 210, "constantspatialmodel": 211, "constantspectralmodel": 212, "constanttemporalmodel": 213, "contain": 391, "containment_radiu": 197, "containment_region": 198, "content": [462, 511], "context": [434, 435, 437, 438, 439, 440, 441, 442, 443, 446, 448, 449, 451, 453, 454, 455, 456, 457, 467, 470, 471, 482, 483], "contigu": 466, "continu": 394, "contour": 463, "contribut": [367, 390, 468], "contributor": [390, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "conveni": 376, "convent": 364, "convers": 364, "convert": 364, "coordin": [13, 364, 375, 501, 511], "correl": 443, "count": [468, 474, 494, 560], "covari": [199, 463], "covarianceresult": 200, "creat": [434, 437, 442, 443, 450, 462, 464, 466, 467, 483, 511], "create_cosmic_ray_spectral_model": 266, "create_crab_spectral_model": 267, "create_fermi_isotropic_diffuse_model": 268, "create_map_dataset_from_observ": 107, "create_map_dataset_geom": 108, "creation": [434, 438, 456], "cstat": 284, "cta": [374, 473], "cube": [370, 466, 478], "cumul": 434, "current": 389, "curv": [379, 455, 456, 457, 552, 553], "custom": [469, 471, 555], "cut": [435, 439], "cutoff": [528, 529, 530, 540, 541, 542], "cutout": 466, "cycl": 389, "cython": [389, 394], "d_sun_to_galactic_cent": 293, "dark": [460, 486], "darkmatt": [1, 486], "darkmatterannihilationspectralmodel": [19, 486], "darkmatterdecayspectralmodel": 20, "data": [3, 8, 364, 370, 372, 373, 379, 391, 394, 434, 437, 438, 439, 445, 446, 448, 451, 455, 456, 458, 462, 465, 466, 475, 478, 482, 483, 484, 495, 506, 558, 559], "dataflow": 391, "dataset": [4, 11, 94, 95, 364, 373, 376, 385, 386, 391, 433, 434, 438, 439, 442, 443, 445, 446, 450, 455, 456, 457, 462, 463, 465, 467, 468, 471, 475, 482, 483, 494, 497], "dataset_registri": 93, "datasetmodel": 214, "datasetsmak": 159, "datastor": [78, 473, 483, 495], "dco": [367, 390], "deal": 365, "dec": 409, "decai": 460, "decemb": 428, "decis": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "default": 375, "defin": [433, 434, 437, 439, 447, 449, 450, 455, 456, 467, 483, 511], "definit": [390, 455, 506], "depend": [363, 381, 387, 417, 439, 448, 450, 469], "deprec": [364, 389], "deriv": 561, "detail": [371, 445], "detect": [385, 441, 447, 503], "detector": 501, "develop": [364, 366, 367, 371], "diagram": 374, "differ": [446, 466, 562], "diffus": 474, "dilat": 467, "direct": 439, "discuss": 379, "disk": [438, 450, 482, 483, 515], "diskspatialmodel": 215, "dispers": [464, 473, 474, 502], "dissolv": 383, "distribut": [381, 476, 488], "dl3": [3, 446, 476, 495, 503, 506], "dl4": [464, 494, 496, 506, 510, 555], "dl5": [496, 555], "dl6": 496, "dmprofil": 18, "do": 364, "doc": 394, "docstr": 365, "document": [365, 367, 373, 384, 430], "doubl": 454, "download": [11, 394], "downsampl": 511, "dr1": [476, 542], "dr2": 542, "dr3": 541, "draw": 316, "driven": 558, "drop": 371, "durat": 465, "e": 476, "each": 448, "earli": 367, "earth_location_from_dict": 303, "ebl": 524, "ebl_data_builtin": 217, "eblabsorptionnormspectralmodel": 216, "edg": 496, "edisp": 464, "edisp_2d": 502, "edispkernel": 140, "edispkernelmap": [141, 503], "edispmap": 142, "effect": [464, 465, 473, 500], "effectiveareatable2d": 143, "einastoprofil": 21, "elaps": 562, "empti": 462, "encourag": 471, "end": 364, "energi": [387, 433, 439, 448, 450, 464, 467, 469, 473, 474, 496, 500, 501, 502, 504], "energydependentmorphologyestim": 114, "energydependentmultigausspsf": 144, "energydispersion2d": 145, "environ": 395, "eros": 467, "error": [463, 560], "estim": [5, 115, 382, 385, 388, 391, 438, 441, 448, 451, 454, 455, 465, 496, 506, 507, 560], "estimate_exposure_reco_energi": 131, "estimator_registri": 113, "evalu": [375, 376, 377], "event": [373, 377, 449, 450, 458, 466, 473, 474, 476, 484, 495, 503], "eventlist": [79, 495], "eventlistmetadata": 80, "evolut": 450, "exampl": [394, 471, 486, 493, 494, 495, 496, 497, 503, 505, 506, 507, 510, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 555, 559], "excess": [388, 434, 443, 454, 560], "excessmapestim": 116, "exclus": [437, 438, 443, 467, 482], "execut": 558, "exemplari": 392, "exercis": [433, 435, 437, 440, 445, 447, 449, 450, 457, 473, 474, 475, 476, 484], "exist": 370, "expcutoffpowerlaw3fglspectralmodel": 218, "expcutoffpowerlawnormspectralmodel": 219, "expcutoffpowerlawspectralmodel": 220, "expdecai": 546, "expdecaytemporalmodel": 221, "expect": 503, "explor": [434, 438, 447, 478], "exponenti": [29, 435, 528, 529, 530, 540, 541, 542], "expos": 375, "exposur": [464, 474], "extend": [434, 449], "extens": 365, "extern": 364, "extra": 394, "extract": [443, 455, 456, 457], "extrapol": 364, "f_cash_root_cython": 285, "factor": 460, "factori": 466, "factoris": 503, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 392, "featur": [14, 389, 393, 426, 429, 430], "feb": [410, 423], "februari": 430, "fermi": [446, 474], "fermist": 486, "file": [365, 390, 438, 442, 443, 446, 473, 482, 495, 511], "fill": [466, 511], "filter": 456, "final": [369, 393, 438, 561], "find_peak": 132, "find_peaks_in_flux_map": 133, "finder": 507, "first": [393, 438], "fit": [10, 13, 201, 373, 379, 434, 435, 437, 438, 439, 442, 445, 446, 447, 453, 457, 463, 467, 471, 474, 482, 483, 511, 555, 559, 560, 561], "fitresult": 202, "fix": [364, 417, 426, 429, 430], "fixedpointinginfo": 81, "fixtur": 364, "flare": 456, "float": 364, "flux": [388, 392, 433, 435, 437, 438, 446, 451, 460, 461, 482, 483, 484, 496], "fluxestim": 388, "fluxmap": [117, 388], "fluxmetadata": 118, "fluxpoint": 119, "fluxpointscollect": 388, "fluxpointsdataset": [96, 376, 462], "fluxpointsestim": [120, 496], "fluxprofileestim": 121, "fold": 375, "folder": 394, "follow": 385, "format": [364, 562], "formula": 561, "forward": 375, "found": 558, "fov": [465, 505], "fov_to_ski": 295, "fovalign": 146, "fovbackgroundmak": [160, 505], "fovbackgroundmodel": 222, "fraction": 454, "freez": [389, 393, 468], "from": [364, 456, 466, 467, 468, 511], "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 364, 365, 473, 500, 501, 502, 503, 504, 560, 562], "further": [379, 559], "galact": [296, 474], "galactocentr": 488, "galleri": [364, 365, 512], "gamlik": 486, "gamma": [379, 460], "gammalib": 486, "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 364, 367, 370, 373, 381, 383, 384, 385, 389, 390, 391, 393, 394, 400, 401, 464, 473, 474, 475, 476, 486, 489, 493, 494, 495, 496, 497, 503, 505, 506, 507, 510, 555, 556, 562], "gaussian": [516, 517, 531, 547, 548], "gaussianspatialmodel": 223, "gaussianspectralmodel": 224, "gaussiantemporalmodel": 225, "gener": [364, 370, 374, 379, 390, 391, 496, 517, 548], "generalist": 388, "generalizedgaussianspatialmodel": 226, "generalizedgaussiantemporalmodel": 227, "geom": 181, "geometri": [434, 447, 455, 456, 466, 467, 482, 483, 509, 511], "get": [367, 384, 396, 442, 443, 466, 487, 488, 489, 495, 510], "get_combined_significance_map": 134, "get_images_path": 329, "get_irfs_featur": 91, "get_random_st": 317, "get_rebinned_axi": 135, "get_wstat_gof_term": 286, "get_wstat_mu_bkg": 287, "github": 364, "given": 468, "global": 386, "glossari": 557, "good": 561, "gpl": 364, "group": 470, "gti": [82, 495], "guid": [366, 499], "guidelin": [365, 369, 370, 384], "h": 476, "halv": 454, "handl": [364, 373, 374, 375, 386, 390, 465, 562], "have": [372, 374, 379, 380, 388], "hawc": [446, 475], "hduindext": 83, "hduloc": 301, "healpix": 509, "help": 399, "helper": 376, "hess": 446, "hgp": 461, "hierarch": 470, "hierarchi": 391, "hierarchical_clust": 291, "high": [0, 5, 373, 380, 482, 497], "hli": 438, "how": [364, 365, 367, 384, 393, 466, 498], "hpxgeom": 182, "hpxmap": 183, "hpxndmap": [184, 510], "hstack_column": 334, "i": [364, 367, 369, 451], "idea": 374, "imag": [365, 370, 378, 383, 441, 447, 466, 478], "imageprofil": 122, "imageprofileestim": 123, "implement": [374, 375, 384, 390, 392, 469, 471], "import": [364, 453], "improv": [375, 387, 417, 426, 429, 430], "inbuilt": 464, "includ": [365, 471], "index": [466, 471, 495], "info": [11, 364], "inform": [390, 461, 471, 502], "input": [364, 391, 441], "inspect": 483, "instal": [384, 396, 397, 399], "instrument": [7, 446, 503], "integr": [13, 394, 433], "integrate_spectrum": 269, "interact": 386, "interest": 448, "interfac": [0, 373, 375, 380, 482, 497, 510], "interpol": [13, 364, 466], "interpolate_profil": 306, "interpolation_scal": 307, "interv": 456, "introduc": [375, 383, 385, 387, 388, 451], "introduct": [375, 378, 379, 381, 382, 384, 388, 390, 391, 433, 437, 439, 447, 458, 460, 461, 462, 465, 466, 473, 474, 478, 484, 486, 488, 489, 559], "inversecdfsampl": 315, "ipython": 400, "irf": [7, 147, 373, 391, 433, 462, 464, 473, 503], "irf_registri": 149, "irfmap": 148, "isothermalprofil": 22, "isotrop": 474, "issu": 399, "iter": 466, "j": 460, "jan": 404, "jfactori": 23, "joint": [445, 446, 494], "json": 390, "jul": 407, "june": [418, 429], "jupyt": [364, 400], "kernel": 464, "labelmapaxi": [185, 466], "lat": [446, 474], "law": [435, 525, 528, 529, 530, 536, 537, 538, 539, 540, 541, 542], "lazi": 376, "lazyfitsdata": 302, "lc": 455, "let": 450, "level": [0, 5, 370, 373, 380, 482, 483, 497], "li": 458, "licens": 364, "light": [379, 455, 456, 457, 553], "lightcurv": [379, 449, 454, 457, 461], "lightcurveestim": [124, 496], "lightcurvetemplatetemporalmodel": 228, "like": 449, "likelihood": 561, "limit": 374, "line": [11, 364, 558], "linear": 549, "lineartemporalmodel": 229, "link": 365, "list": [375, 376, 377, 378, 379, 380, 381, 449, 456, 461, 466, 467, 468, 469, 484, 495], "literatur": 439, "livetim": 465, "load": [376, 433, 435, 437, 439, 461, 468], "load_irf_dict_from_fil": [157, 503], "locat": 364, "log": [11, 364, 435, 532, 533], "logparabolanormspectralmodel": 230, "logparabolaspectralmodel": 231, "logspir": 34, "long": 390, "loop": [434, 465, 483], "lorimer2006": 35, "low": [370, 483], "lt": 389, "ma": 458, "mai": [406, 417], "maintain": [371, 390], "mainten": 373, "major": 393, "make": [364, 367, 393, 447, 450, 458, 483], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 325, "make_counts_rad_max": 172, "make_edisp_kernel_map": 173, "make_edisp_map": 174, "make_effective_livetime_map": 175, "make_map_background_irf": 176, "make_map_exposure_true_energi": 177, "make_observation_time_map": 178, "make_orthogonal_rectangle_sky_region": 326, "make_path": 330, "make_psf_map": 179, "make_theta_squared_t": 180, "maker": [8, 162, 385, 391, 434, 456, 465, 482, 483, 505, 506, 507], "maker_registri": 161, "mamba": 397, "manag": [373, 397], "manual": [467, 470], "map": [9, 186, 190, 370, 373, 374, 441, 442, 443, 446, 447, 453, 458, 460, 464, 466, 467, 468, 480, 484, 496, 509, 510, 511], "mapax": 187, "mapaxi": 188, "mapcoord": [189, 510], "mapdataset": [97, 376, 445, 449, 462, 475, 494], "mapdataseteventsampl": [98, 377], "mapdatasetmak": [163, 506], "mapdatasetmetadata": 99, "mapdatasetonoff": [100, 376], "mappanelplott": 351, "mar": 405, "march": 427, "mask": [378, 437, 438, 443, 462, 467, 482], "materi": 390, "matter": [460, 486], "measur": 559, "meet": 373, "messag": 364, "met": 562, "metadata": [390, 391], "method": [365, 376, 377, 392, 454, 466, 496, 510], "method_default": 309, "method_kwargs_default": 310, "meyercrabspectralmodel": 233, "miniconda": 397, "minor": 385, "mission": 562, "model": [10, 234, 236, 373, 375, 383, 386, 387, 391, 392, 434, 437, 438, 439, 442, 445, 446, 447, 449, 450, 455, 456, 457, 460, 461, 462, 463, 468, 469, 471, 473, 482, 483, 484, 488, 489, 490, 491, 492, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 559], "model_registri": 232, "modelbas": 235, "modif": 467, "modifi": [364, 466, 469], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 448, "morphologi": 469, "motion_since_birth": 297, "motiv": 392, "mpl_plot_check": 342, "multi": 446, "multipl": [449, 468, 471, 494], "multiprocessing_manag": 313, "n_jobs_default": 311, "naima": 534, "naimaspectralmodel": 237, "name": [364, 375, 503], "nebula": 491, "new": [364, 375, 379, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 429, 430, 456], "next": [435, 437, 438, 441, 447, 455, 473, 475, 476, 482, 484], "nfwprofil": 25, "night": 455, "non": [364, 466, 511], "norm": [387, 469, 518, 530, 533, 535, 538], "norm_bounds_cython": 288, "normal": [318, 482], "notat": 560, "note": [364, 402, 559], "notebook": [11, 364, 372, 400], "nov": [412, 413, 414, 415, 421, 425], "novemb": 426, "now": 379, "nuisanc": 392, "number": [364, 389, 503], "numpi": 389, "o": 451, "object": [364, 365, 374, 386, 442, 443, 449, 450, 461, 470], "observ": [3, 84, 87, 373, 374, 437, 438, 447, 449, 450, 455, 456, 465, 470, 482, 483], "observationeventsampl": 103, "observationfilt": 85, "observationseventssampl": 88, "observationt": 86, "observatory_loc": 92, "obtain": [433, 448, 457, 470], "off": [435, 437, 440, 446], "offset": [500, 501, 502, 504], "ogipdatasetread": 101, "ogipdatasetwrit": 102, "old": 394, "onto": 466, "open": 458, "oper": [466, 467], "optimizeresult": 203, "option": [363, 381, 463], "org": 394, "organ": [370, 379], "origin": [364, 367], "other": [364, 365, 374, 394, 397, 486], "outlin": 392, "outlook": [376, 377, 378, 380, 381, 383, 384, 385, 388], "output": 364, "over": 458, "overview": [384, 396, 448, 473, 505, 507, 508], "overwrit": 364, "own": 558, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 383, 385, 394, 397, 417, 478, 486, 487, 556], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 563, "paper": 373, "parabola": [435, 532, 533], "parallel": [13, 376], "paramet": [204, 205, 375, 387, 392, 438, 448, 463, 468, 469, 482], "parameterestim": 125, "parametr": 375, "parametricpsf": 154, "pdf": 319, "perform": [377, 434, 473, 483], "person": 390, "perspect": 371, "phase": [458, 552], "phasebackgroundmak": 164, "phasogram": 458, "piecewis": [518, 535], "piecewisenormspatialmodel": 238, "piecewisenormspectralmodel": 239, "pig": [368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "pip": 397, "pixel": [364, 378, 467], "plan": 371, "plot": [14, 364, 437, 438, 441, 447, 448, 451, 466, 468, 483, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 563], "plot_contour_lin": 356, "plot_distribut": 357, "plot_heatmap": 358, "plot_map_rgb": 359, "plot_npred_sign": 360, "plot_spectrum_datasets_off_region": 361, "plot_theta_squared_t": 362, "png": 365, "point": [392, 433, 435, 437, 438, 446, 447, 449, 454, 461, 473, 482, 483, 484, 496, 504, 519], "pointinginfo": 89, "pointingmod": 90, "pointspatialmodel": 240, "poisson": 559, "polar": 298, "polici": 390, "pool_kwargs_default": 312, "popul": [1, 488], "posit": [392, 471, 502], "possibl": 390, "post": 393, "power": [435, 525, 528, 529, 530, 536, 537, 538, 539, 540, 541, 542], "powerlaw": [435, 550], "powerlaw2spectralmodel": 241, "powerlawnormspectralmodel": 242, "powerlawspectralmodel": 243, "powerlawtemporalmodel": 244, "precis": 377, "predict": 494, "prepar": [379, 389, 433, 434, 450, 483], "prerequisit": [434, 435, 437, 438, 439, 440, 442, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 463, 467, 468, 471, 482, 483], "pretti": 461, "primaryflux": 26, "print": 461, "prior": [392, 471], "priorparamet": [206, 207], "produc": 475, "product": [460, 464], "profil": [451, 460, 561], "project": [373, 394], "propag": 391, "propos": [372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 434, 435, 438, 440, 441, 442, 443, 446, 449, 450, 451, 453, 454, 455, 456, 457, 463, 467, 468, 470, 482, 483], "psf": [464, 474, 504], "psf3d": 150, "psf_tabl": 504, "psfkernel": 151, "psfking": 152, "psfmap": [153, 464, 503], "public": 390, "pull": [364, 367, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "pulsar": [51, 458, 490, 491], "purpos": 369, "pwn": 50, "pydant": 391, "python": [364, 365, 371, 389, 400], "qualiti": [373, 394, 437, 439, 445, 463], "quantiti": [470, 496], "radial": 501, "radial_distribut": 48, "radmax2d": 155, "rai": [379, 460], "random": [13, 364], "rang": [465, 506], "read": [441, 446, 450, 451, 466, 467, 468, 511], "read_hermes_cub": [270, 272], "read_yaml": 331, "recommend": [396, 398], "reconstruct": 501, "recopsfmap": 156, "recursive_merge_dict": 332, "reduc": [4, 442, 443, 462, 482, 483], "reduct": [8, 373, 379, 434, 437, 438, 439, 445, 455, 456, 465, 475, 482, 483, 506, 558], "refer": [6, 384, 557, 558, 559], "reflect": [465, 507], "reflectedregionsbackgroundmak": [165, 507], "reflectedregionsfind": 166, "region": [13, 375, 378, 433, 434, 437, 439, 465, 467, 468, 507, 511], "region_to_fram": 327, "regiongeom": [191, 511], "regionndmap": [192, 510, 511], "regions_to_compound_region": 328, "regionsfind": 167, "relat": 511, "releas": [364, 373, 389, 390, 393, 394, 402], "remark": 369, "remnant": 492, "remov": [364, 468], "renam": 364, "repositori": 394, "repr": 364, "represent": [387, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "request": [364, 367, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "requir": [363, 364, 381, 391], "requires_data": 343, "requires_depend": 344, "resampl": 462, "resample_energy_edg": 136, "residu": [437, 439, 445, 483], "resolv": [385, 458], "respons": [7, 503], "restructur": 384, "result": [379, 388, 433, 434, 438, 441, 448, 451, 455, 561], "return": [364, 365], "review": 369, "ring": [443, 465, 508], "ringbackgroundmak": 168, "rmf": 502, "road": 374, "roadmap": 373, "rotat": 378, "rst": 365, "run": [11, 367, 437, 438, 439, 448, 450, 451, 455, 482, 558], "run_multiprocess": 314, "safe": [465, 506], "safemaskmak": 169, "sampl": [377, 449, 450], "sample_powerlaw": 320, "sample_spher": 321, "sample_sphere_dist": 322, "sample_tim": 323, "sampler": 450, "save": [438, 482, 483], "scale": 562, "scale_plot_flux": 271, "scaledregulargridinterpol": 305, "scalespectralmodel": 247, "scenario": 374, "schedul": 389, "scheme": [375, 390], "script": [11, 13, 364, 400, 478, 480], "section": 384, "select": [434, 438, 447, 455, 456, 461, 468, 482, 483, 495], "select_nested_model": 273, "sensit": 433, "sensitivityestim": 126, "sep": [408, 424], "serial": [376, 391, 446], "serialis": [392, 438, 451, 464, 468, 469, 474, 494], "seril": 375, "set": [367, 438, 466, 482], "setup": [372, 394, 396, 398, 399, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 482, 483, 484], "sever": 364, "share": 469, "shell": 520, "shell2": 521, "shell2spatialmodel": 248, "shellspatialmodel": 249, "shorter": 387, "should": 364, "show": [447, 448, 470], "signal": 448, "signific": [434, 441, 443, 467, 560], "simplepulsar": 54, "simplifi": 387, "simul": [373, 376, 439, 440, 449, 450, 453, 457], "sine": 551, "sinetemporalmodel": 250, "singl": [365, 440], "size": 511, "skip": 364, "sky": [9, 375, 378, 447, 449, 467, 502, 510], "sky_to_fov": 299, "skycoord": 510, "skymodel": [251, 469], "slice": 466, "small": 367, "smooth": [441, 539], "smoothbrokenpowerlawspectralmodel": 252, "snr": 52, "snrtruelovemcke": 53, "solut": 391, "some": [364, 374, 467], "sourc": [1, 2, 433, 434, 437, 441, 447, 448, 449, 450, 457, 461, 467, 471, 473, 484, 488, 489, 490, 491, 493], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog3fgl": 60, "sourcecatalog3fhl": [61, 493], "sourcecatalog3hwc": 62, "sourcecatalog4fgl": 63, "sourcecataloggammacat": [64, 493], "sourcecataloghgp": 65, "sourcecataloglargescalehgp": 66, "sourcecatalogobject": 67, "sourcecatalogobject1lhaaso": 68, "sourcecatalogobject2fhl": 69, "sourcecatalogobject2hwc": 70, "sourcecatalogobject3fgl": 71, "sourcecatalogobject3fhl": 72, "sourcecatalogobject3hwc": 73, "sourcecatalogobject4fgl": 74, "sourcecatalogobjectgammacat": 75, "sourcecatalogobjecthgp": 76, "sourcecatalogobjecthgpscompon": 77, "sourceirfmodel": 375, "sourcemodel": 375, "spatial": [375, 387, 447, 460, 466, 469, 488, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522], "spatial_model_registri": 245, "spatialirfmodel": 375, "spatialmodel": 253, "special": 561, "specif": [375, 384, 461], "spectra": 460, "spectral": [387, 392, 434, 435, 437, 438, 439, 446, 447, 460, 469, 478, 484, 512, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 543], "spectral_model_registri": 246, "spectralirfmodel": 375, "spectralmodel": 254, "spectrum": [437, 439, 440, 447, 458, 465, 483], "spectrumdataset": [104, 376, 462], "spectrumdatasetmak": [170, 506], "spectrumdatasetonoff": [105, 376, 494], "sphinx": [364, 365], "spiral": 488, "split_dataset": [109, 111], "spread": [473, 504], "squar": [448, 476], "stack": [437, 443, 445, 494], "standard_scal": 292, "standardise_unit": 349, "start": [384, 396, 487, 488, 489, 495, 510], "stat": 12, "stat_contour": 463, "stat_profile_ul_scipi": 274, "stat_surfac": 463, "statist": [12, 437, 467, 559, 560], "statu": [369, 374, 383, 389], "step": [438, 473, 475, 476, 556], "store": [379, 438, 502], "str": 364, "structur": [383, 385, 417, 484, 556], "structure_funct": 289, "studi": 379, "style": 370, "sub": [466, 487], "subclass": 392, "subpackag": 370, "subset": 461, "suggest": 390, "summari": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 445, 474], "super": [540, 541, 542], "superexpcutoffpowerlaw3fglspectralmodel": 255, "superexpcutoffpowerlaw4fgldr3spectralmodel": 256, "superexpcutoffpowerlaw4fglspectralmodel": 257, "supernova": 492, "support": [364, 371, 389, 390, 392, 464, 494], "survei": [480, 563], "symmetr": 501, "systemat": 392, "t": [441, 560], "tabl": [13, 448, 461, 495], "table_row_to_dict": 335, "table_standardise_units_copi": 336, "table_standardise_units_inplac": 337, "tag": 387, "target": 437, "task": [375, 376, 377, 378, 379, 380, 381], "templat": [449, 522, 543], "templatendspatialmodel": 259, "templatendspectralmodel": 260, "templatenpredmodel": 261, "templatephasecurvetemporalmodel": 262, "templatespatialmodel": 263, "templatespectralmodel": 264, "tempor": [450, 457, 469, 512, 545, 546, 547, 548, 549, 550, 551, 552, 553], "temporal_model_registri": 258, "temporalmodel": 265, "term": 390, "terminologi": 374, "test": [13, 364, 367, 448, 458], "text": 364, "theta": 476, "thi": 367, "thumbnail": 365, "time": [13, 373, 379, 432, 436, 444, 449, 452, 454, 456, 457, 459, 472, 477, 478, 479, 481, 485, 513, 523, 544, 554, 562], "time_ref_from_dict": 346, "time_ref_to_dict": 347, "time_relative_to_ref": 348, "timemapaxi": [193, 466], "timmerkonig_lightcurve_simul": 276, "tool": [11, 364, 558], "tooltip": 365, "touch": 367, "trapz_loglog": 304, "troubleshoot": [399, 558], "true": [500, 502, 504], "tsmapestim": 127, "tutori": [365, 372, 384, 396, 448, 473, 478], "two": 468, "type": [364, 391, 494], "uncertainti": 382, "underli": 511, "unfold": 392, "unfreez": 468, "unif": 388, "unifi": [375, 388], "unit": [13, 364], "unit_from_fits_image_hdu": 350, "unix": 364, "unreleas": 431, "up": [367, 383, 385], "upsampl": 511, "us": [364, 374, 392, 397, 400, 438, 448, 449, 455, 462, 463, 464, 466, 482, 483, 486, 489, 493, 494, 495, 496, 497, 503, 505, 506, 507, 510, 529, 540, 541, 542, 555], "user": [371, 499], "util": [4, 5, 8, 10, 13, 383, 556, 560, 562], "valid": 391, "valleespir": 38, "valu": [364, 392, 448, 466, 471], "vari": 457, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 449, 454], "varianc": 454, "variou": 470, "veloc": 488, "velocity_distribut": 49, "velocity_glon_glat": 300, "venv": 395, "version": [364, 389, 393, 402, 453], "virtual": 395, "visual": [14, 385, 466, 511, 563], "volum": 511, "warn": 364, "wc": [466, 511], "wcsgeom": 194, "wcsmap": 195, "wcsndmap": [196, 510], "we": [372, 379, 380, 388, 475], "webpag": 394, "what": [364, 367, 369, 372, 374, 379, 380, 388, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 435, 437, 438, 441, 447, 455, 482, 484], "where": 364, "which": 364, "wind": 491, "wise": 455, "without": 471, "wobbleregionsfind": 171, "work": 495, "workflow": 556, "write": [364, 369, 438, 450, 466, 467, 495, 511, 558], "write_yaml": 333, "wstat": [290, 559, 560, 561], "wstatcountsstatist": 277, "yaml": [387, 438, 482, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553], "your": [399, 438, 558], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})