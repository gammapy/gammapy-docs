Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[409, "aug-25-2014"]], "0.10 (Jan 28, 2019)": [[410, "jan-28-2019"]], "0.11 (Mar 29, 2019)": [[411, "mar-29-2019"]], "0.12 (May 30, 2019)": [[412, "may-30-2019"]], "0.13 (Jul 26, 2019)": [[413, "jul-26-2019"]], "0.14 (Sep 30, 2019)": [[414, "sep-30-2019"]], "0.15 (Dec 3, 2019)": [[415, "dec-3-2019"]], "0.16 (Feb 1, 2020)": [[416, "feb-1-2020"]], "0.17 (Apr 1, 2020)": [[417, "apr-1-2020"]], "0.18 (Nov 4th, 2020)": [[418, "nov-4th-2020"]], "0.18.1 (Nov 6th, 2020)": [[419, "nov-6th-2020"]], "0.18.2 (Nov 19th, 2020)": [[420, "nov-19th-2020"]], "0.19 (Nov 22nd, 2021)": [[421, "nov-22nd-2021"]], "0.2 (Apr 13, 2015)": [[422, "apr-13-2015"]], "0.20 (May 12th, 2022)": [[423, "may-12th-2022"]], "0.20.1 (June 16th, 2022)": [[424, "june-16th-2022"]], "0.3 (Aug 13, 2015)": [[425, "aug-13-2015"]], "0.4 (Apr 20, 2016)": [[426, "apr-20-2016"]], "0.5 (Nov 22, 2016)": [[427, "nov-22-2016"]], "0.6 (Apr 28, 2017)": [[428, "apr-28-2017"]], "0.7 (Feb 28, 2018)": [[429, "feb-28-2018"]], "0.8 (Sep 23, 2018)": [[430, "sep-23-2018"]], "0.9 (Nov 29, 2018)": [[431, "nov-29-2018"]], "1.0 (November 10th, 2022)": [[432, "november-10th-2022"]], "1.0.1 (March 14th, 2023)": [[433, "march-14th-2023"]], "1.0.2 (December 6th, 2023)": [[434, "december-6th-2023"]], "1.1 (June 13th 2023)": [[435, "june-13th-2023"]], "1.2 (February 29th 2024)": [[436, "february-29th-2024"]], "1.3 (unreleased)": [[437, "unreleased"]], "1D Spectral": [[485, "d-spectral"]], "1D spectrum simulation": [[447, "d-spectrum-simulation"]], "2D Image": [[485, "d-image"]], "2D map fitting": [[449, "d-map-fitting"]], "3D Cube": [[485, "d-cube"]], "3D detailed analysis": [[452, "d-detailed-analysis"]], "3D map simulation": [[460, "d-map-simulation"]], "A note on statistics": [[444, "a-note-on-statistics"]], "API Links": [[371, "api-links"]], "API changes": [[432, "api-changes"], [435, "api-changes"], [436, "api-changes"]], "API reference": [[6, "api-reference"]], "ASmoothMapEstimator": [[116, "asmoothmapestimator"]], "Abstract": [[375, "abstract"], [376, "abstract"], [377, "abstract"], [378, "abstract"], [379, "abstract"], [380, "abstract"], [382, "abstract"], [383, "abstract"], [384, "abstract"], [385, "abstract"], [386, "abstract"], [387, "abstract"], [388, "abstract"], [389, "abstract"], [390, "abstract"], [391, "abstract"], [392, "abstract"], [393, "abstract"], [394, "abstract"], [395, "abstract"], [396, "abstract"], [397, "abstract"], [398, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[373, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[473, "accessing-data"]], "Accessing contents of a dataset": [[469, "accessing-contents-of-a-dataset"]], "Accessor methods": [[517, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[440, "account-for-spectral-absorption-due-to-the-ebl"]], "Adaptive smoothing": [[448, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[162, "adaptiveringbackgroundmaker"]], "Add a model on multiple datasets": [[475, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[381, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[473, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[473, "adding-non-contiguous-axes"]], "Additional Models": [[393, "additional-models"]], "Additional PSF classes": [[511, "additional-psf-classes"]], "Additional utilities": [[563, "additional-utilities"]], "Aim": [[475, "aim"]], "Alternative": [[394, "alternative"]], "Alternatives": [[378, "alternatives"], [381, "alternatives"], [384, "alternatives"], [386, "alternatives"], [387, "alternatives"], [388, "alternatives"], [390, "alternatives"], [391, "alternatives"], [397, "alternatives"]], "Alternatives / Outlook": [[383, "alternatives-outlook"]], "Analysis": [[15, "analysis"]], "Analysis configuration": [[445, "analysis-configuration"], [452, "analysis-configuration"], [462, "analysis-configuration"], [489, "analysis-configuration"]], "Analysis steps": [[563, "analysis-steps"]], "Analysis workflow": [[563, "analysis-workflow"]], "AnalysisConfig": [[16, "analysisconfig"]], "As a function of of true energy and offset angle (PSF_TABLE)": [[511, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[370, "assert-convention"]], "Assign to model to all datasets": [[463, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[475, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[496, "astrophysical-source-models"]], "Astrophysical source population models": [[495, "astrophysical-source-population-models"]], "Astrophysics": [[494, "astrophysics"]], "Authorship policy": [[396, "authorship-policy"]], "BACKEND_DEFAULT": [[312, "backend-default"]], "BSD or GPL license?": [[370, "bsd-or-gpl-license"]], "Background": [[480, "background"], [508, "background"]], "Background / What we have now": [[385, "background-what-we-have-now"]], "Background Model Handling": [[392, "background-model-handling"]], "Background estimation": [[472, "background-estimation"], [513, "background-estimation"]], "Background2D": [[141, "background2d"]], "Background3D": [[142, "background3d"]], "BackgroundIRF": [[143, "backgroundirf"]], "BackgroundIRFModel": [[381, "backgroundirfmodel"]], "BackgroundModel": [[381, "backgroundmodel"]], "Basic image exploration and fitting": [[454, "basic-image-exploration-and-fitting"]], "Basic operators": [[473, "basic-operators"]], "Bayesian blocks": [[461, "bayesian-blocks"]], "Bin volume and angular size": [[518, "bin-volume-and-angular-size"]], "Boundary mask": [[474, "boundary-mask"]], "Broken power law spectral model": [[532, "broken-power-law-spectral-model"]], "BrokenPowerLawSpectralModel": [[212, "brokenpowerlawspectralmodel"]], "Bug fixes and improvements": [[423, "bug-fixes-and-improvements"], [432, "bug-fixes-and-improvements"], [435, "bug-fixes-and-improvements"], [436, "bug-fixes-and-improvements"]], "Build": [[400, "build"]], "Building 1D datasets from the new observations": [[463, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[462, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[462, "building-the-3d-analysis-configuration"]], "Built-in models": [[562, "built-in-models"]], "Bundled gammapy.extern code": [[370, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, "burkertprofile"]], "CATALOG_REGISTRY": [[55, "catalog-registry"]], "CITATION.cff": [[396, "citation-cff"]], "CLUMPY": [[493, "clumpy"]], "CTA 1DC": [[480, "cta-1dc"]], "CTA performance files": [[480, "cta-performance-files"]], "CTA with Gammapy": [[480, "cta-with-gammapy"]], "Caplog fixture": [[370, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[398, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[398, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[398, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, "casebattacharya1998"]], "Cash : Poisson data with background model": [[566, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[567, "cash-counts-statistic"]], "CashCountsStatistic": [[279, "cashcountsstatistic"]], "Catalog table": [[468, "catalog-table"]], "Caveat": [[566, "caveat"]], "Changelog": [[390, "changelog"]], "Check Python code": [[371, "check-python-code"]], "Check broken links": [[371, "check-broken-links"]], "Check setup": [[439, "check-setup"], [441, "check-setup"], [444, "check-setup"], [445, "check-setup"], [446, "check-setup"], [447, "check-setup"], [448, "check-setup"], [449, "check-setup"], [450, "check-setup"], [452, "check-setup"], [453, "check-setup"], [454, "check-setup"], [455, "check-setup"], [456, "check-setup"], [457, "check-setup"], [458, "check-setup"], [462, "check-setup"], [463, "check-setup"], [464, "check-setup"], [465, "check-setup"], [467, "check-setup"], [468, "check-setup"], [469, "check-setup"], [470, "check-setup"], [472, "check-setup"], [473, "check-setup"], [474, "check-setup"], [475, "check-setup"], [476, "check-setup"], [478, "check-setup"], [480, "check-setup"], [481, "check-setup"], [482, "check-setup"], [483, "check-setup"], [489, "check-setup"], [490, "check-setup"], [491, "check-setup"]], "Check the dataset we produced": [[482, "check-the-dataset-we-produced"]], "Check your setup": [[405, "check-your-setup"]], "Checker": [[344, "checker"]], "Choose a thumbnail and tooltip for the tutorial gallery": [[371, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[396, "citation-scheme"]], "Class attributes": [[371, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[389, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[370, "clobber-or-overwrite"]], "Code in RST files": [[371, "code-in-rst-files"]], "Code in docstrings in Python files": [[371, "code-in-docstrings-in-python-files"]], "Code quality": [[400, "code-quality"]], "Collection of the personal information of authors": [[396, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[570, "colormaps"]], "Combining event lists and GTIs": [[502, "combining-event-lists-and-gtis"]], "Combining two Models": [[475, "combining-two-models"]], "Command line tools": [[565, "command-line-tools"]], "Command line tools using click": [[370, "command-line-tools-using-click"]], "Command not found": [[565, "command-not-found"]], "Compare against the literature": [[446, "compare-against-the-literature"]], "Compare results": [[462, "compare-results"]], "Compound Spectral Model": [[476, "compound-spectral-model"]], "Compound spectral model": [[533, "compound-spectral-model"]], "CompoundSpectralModel": [[213, "compoundspectralmodel"]], "Computation times": [[438, "computation-times"], [443, "computation-times"], [451, "computation-times"], [459, "computation-times"], [466, "computation-times"], [479, "computation-times"], [484, "computation-times"], [486, "computation-times"], [488, "computation-times"], [492, "computation-times"], [520, "computation-times"], [530, "computation-times"], [551, "computation-times"], [561, "computation-times"]], "Compute Flux Points": [[444, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[450, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[454, "compute-images"]], "Compute sensitivity": [[439, "compute-sensitivity"]], "Computing contours using stat_contour": [[470, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[470, "computing-contours-using-stat-surface"]], "Computing flux points": [[490, "computing-flux-points"]], "Conda Environments": [[401, "conda-environments"]], "Confidence contours": [[470, "confidence-contours"]], "Configurable analysis": [[563, "configurable-analysis"]], "Configuration": [[458, "configuration"]], "Configuration for stacked and joint analysis": [[452, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[445, "configuration-of-the-analysis"]], "Constant spatial model": [[521, "constant-spatial-model"]], "Constant spectral model": [[534, "constant-spectral-model"]], "Constant temporal model": [[552, "constant-temporal-model"]], "ConstantFluxSpatialModel": [[214, "constantfluxspatialmodel"]], "ConstantSpatialModel": [[215, "constantspatialmodel"]], "ConstantSpectralModel": [[216, "constantspectralmodel"]], "ConstantTemporalModel": [[217, "constanttemporalmodel"]], "Context": [[441, "context"], [442, "context"], [444, "context"], [445, "context"], [446, "context"], [447, "context"], [448, "context"], [449, "context"], [450, "context"], [453, "context"], [455, "context"], [456, "context"], [458, "context"], [460, "context"], [461, "context"], [462, "context"], [463, "context"], [464, "context"], [474, "context"], [477, "context"], [478, "context"], [489, "context"], [490, "context"]], "Continuous integration": [[400, "continuous-integration"]], "Contribution in conferences": [[396, "contribution-in-conferences"]], "Contributors": [[409, "contributors"], [410, "contributors"], [411, "contributors"], [412, "contributors"], [413, "contributors"], [414, "contributors"], [415, "contributors"], [416, "contributors"], [417, "contributors"], [418, "contributors"], [421, "contributors"], [422, "contributors"], [423, "contributors"], [424, "contributors"], [425, "contributors"], [426, "contributors"], [427, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"], [435, "contributors"], [436, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[370, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[370, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[518, "coordinates-defined-by-the-regiongeom"]], "Counts": [[481, "counts"]], "Counts and fit statistics": [[567, "counts-and-fit-statistics"]], "Counts statistics classes": [[567, "counts-statistics-classes"]], "Covariance": [[203, "covariance"]], "Covariance and parameters errors": [[470, "covariance-and-parameters-errors"]], "CovarianceResult": [[204, "covarianceresult"]], "Create DL4 product - PSFMap": [[471, "create-dl4-product-psfmap"]], "Create a mask in energy": [[474, "create-a-mask-in-energy"]], "Create a stacked dataset": [[450, "create-a-stacked-dataset"]], "Create edisp kernel map": [[471, "create-edisp-kernel-map"]], "Create exclusion mask": [[444, "create-exclusion-mask"], [450, "create-exclusion-mask"]], "Create exposure map": [[471, "create-exposure-map"]], "Create the energy-dependent temporal model": [[457, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[490, "create-the-maker-classes-to-be-used"]], "Create the makers": [[441, "create-the-makers"]], "Create the mask from a catalog of sources": [[474, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[474, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[474, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[474, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[457, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[473, "creating-wcs-maps"]], "Creating a RegionGeom": [[518, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[518, "creating-a-regionndmap"]], "Creating a mask for fitting": [[474, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[474, "creating-a-mask-manually"]], "Creating an empty dataset": [[469, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[474, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[473, "creating-from-a-map-geometry"]], "Creating the config file": [[449, "creating-the-config-file"], [450, "creating-the-config-file"]], "Creation of the Flux points": [[445, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[463, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[463, "creation-of-the-datasets"]], "Creation of the model": [[445, "creation-of-the-model"]], "Cube plotting": [[473, "cube-plotting"]], "Cumulative excess and significance": [[441, "cumulative-excess-and-significance"]], "Current status": [[395, "current-status"]], "Custom models": [[562, "custom-models"]], "Cutouts": [[473, "cutouts"]], "Cython": [[400, "cython"]], "DATASET_REGISTRY": [[97, "dataset-registry"]], "DCO implementation": [[396, "dco-implementation"]], "DL3 DR1": [[483, "dl3-dr1"]], "DMProfile": [[18, "dmprofile"]], "D_SUN_TO_GALACTIC_CENTER": [[297, "d-sun-to-galactic-center"]], "Dark matter": [[493, "dark-matter"]], "Dark matter spatial and spectral models": [[467, "dark-matter-spatial-and-spectral-models"]], "DarkMatterAnnihilationSpectralModel": [[19, "darkmatterannihilationspectralmodel"]], "DarkMatterDecaySpectralModel": [[20, "darkmatterdecayspectralmodel"]], "Data Fitting": [[385, "data-fitting"]], "Data access and selection (DL3)": [[502, "data-access-and-selection-dl3"]], "Data analysis": [[485, "data-analysis"]], "Data analysis subpackages in gammapy": [[376, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[379, "data-and-observation-handling"]], "Data and models files": [[453, "data-and-models-files"]], "Data exploration": [[485, "data-exploration"]], "Data reduction": [[385, "data-reduction"], [452, "data-reduction"], [452, "id1"], [489, "data-reduction"], [490, "data-reduction"]], "Data reduction (DL3 to DL4)": [[513, "data-reduction-dl3-to-dl4"]], "Data reduction into a MapDataset": [[482, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[472, "data-reduction-loop"]], "Data structures": [[491, "data-structures"]], "DataStore": [[82, "datastore"]], "Dataset": [[98, "dataset"], [382, "dataset"], [472, "dataset"]], "Dataset helper / convenience methods": [[382, "dataset-helper-convenience-methods"]], "Dataset serialization": [[382, "dataset-serialization"]], "Dataset simulations": [[446, "dataset-simulations"]], "DatasetModels": [[218, "datasetmodels"]], "Datasets": [[99, "datasets"], [379, "datasets"], [382, "datasets"], [397, "datasets"], [469, "datasets"]], "Datasets (DL4)": [[501, "datasets-dl4"]], "Datasets - Reduced data, IRFs, models": [[469, "datasets-reduced-data-irfs-models"]], "Datasets serialization": [[453, "datasets-serialization"]], "DatasetsMaker": [[163, "datasetsmaker"]], "Datastore": [[480, "datastore"]], "Dealing with links": [[371, "dealing-with-links"]], "Decision": [[375, "decision"], [376, "decision"], [377, "decision"], [378, "decision"], [379, "decision"], [380, "decision"], [381, "decision"], [382, "decision"], [383, "decision"], [384, "decision"], [385, "decision"], [386, "decision"], [387, "decision"], [388, "decision"], [389, "decision"], [390, "decision"], [391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"], [397, "decision"], [398, "decision"]], "Define Target Region": [[444, "define-target-region"]], "Define an Observation": [[456, "define-an-observation"]], "Define an observation and make a dataset": [[457, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[439, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[454, "define-map-geometry"]], "Define the MapDataset": [[456, "define-the-mapdataset"]], "Define the Model": [[463, "define-the-model"]], "Define the ON region": [[446, "define-the-on-region"]], "Define the Sky model: a point-like source": [[456, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[441, "define-the-geometries"]], "Define the geometry": [[474, "define-the-geometry"]], "Define the model": [[490, "define-the-model"]], "Define the model to be used": [[462, "define-the-model-to-be-used"], [462, "id3"]], "Define the simulation source model": [[457, "define-the-simulation-source-model"]], "Define time intervals": [[463, "define-time-intervals"]], "Defining the datastore and selecting observations": [[490, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[463, "defining-the-geometry"]], "Definition of a Contributor": [[396, "definition-of-a-contributor"]], "Definition of the Maintainer": [[396, "definition-of-the-maintainer"]], "Definition of the data selection": [[462, "definition-of-the-data-selection"], [462, "id1"]], "Definition of the dataset geometry": [[462, "definition-of-the-dataset-geometry"], [462, "id2"]], "Dependencies": [[369, "dependencies"], [387, "dependencies"]], "Deprecating a function or a class": [[370, "deprecating-a-function-or-a-class"]], "Deprecation": [[395, "deprecation"]], "Derivation of the WStat formula": [[568, "derivation-of-the-wstat-formula"]], "Detailed plan": [[377, "detailed-plan"]], "Developer How To": [[370, "developer-how-to"]], "Developer guide": [[372, "developer-guide"]], "Discussion / Alternatives": [[385, "discussion-alternatives"]], "Disk spatial model": [[522, "disk-spatial-model"]], "DiskSpatialModel": [[219, "diskspatialmodel"]], "Dissolve gammapy.background": [[389, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[389, "dissolve-gammapy-image"]], "Distributions": [[387, "distributions"], [387, "id1"]], "Documentation": [[379, "documentation"], [436, "documentation"]], "Documentation How To": [[371, "documentation-how-to"]], "Documentation building": [[371, "documentation-building"]], "Documentation guidelines": [[371, "documentation-guidelines"]], "Download": [[400, "download"]], "EBL absorption spectral model": [[531, "ebl-absorption-spectral-model"]], "EBLAbsorptionNormSpectralModel": [[220, "eblabsorptionnormspectralmodel"]], "EBL_DATA_BUILTIN": [[221, "ebl-data-builtin"]], "EDispKernel": [[144, "edispkernel"]], "EDispKernelMap": [[145, "edispkernelmap"]], "EDispMap": [[146, "edispmap"]], "ESTIMATOR_REGISTRY": [[117, "estimator-registry"]], "Effective Area": [[471, "effective-area"]], "Effective area": [[480, "effective-area"], [507, "effective-area"]], "EffectiveAreaTable2D": [[147, "effectiveareatable2d"]], "EinastoProfile": [[21, "einastoprofile"]], "Energy Dependent Spatial Models": [[393, "energy-dependent-spatial-models"]], "Energy Dispersion": [[471, "energy-dispersion"], [481, "energy-dispersion"], [509, "energy-dispersion"]], "Energy dispersion": [[480, "energy-dispersion"]], "Energy edges": [[503, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[118, "energydependentmorphologyestimator"]], "EnergyDependentMultiGaussPSF": [[148, "energydependentmultigausspsf"]], "EnergyDispersion2D": [[149, "energydispersion2d"]], "Estimating TS": [[567, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[461, "estimation-of-time-variability-in-a-lightcurve"]], "Estimator": [[119, "estimator"]], "Estimators": [[397, "estimators"]], "Estimators (DL4 to DL5, and DL6)": [[503, "estimators-dl4-to-dl5-and-dl6"]], "Event Simulation": [[379, "event-simulation"]], "Event lists": [[491, "event-lists"]], "Event sampling": [[456, "event-sampling"]], "EventList": [[83, "eventlist"]], "EventListMetaData": [[84, "eventlistmetadata"]], "Events": [[480, "events"], [481, "events"]], "Example": [[566, "example"], [566, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[478, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[478, "example-2-encouraging-positive-amplitude-values"]], "Example plot": [[521, "example-plot"], [522, "example-plot"], [523, "example-plot"], [524, "example-plot"], [525, "example-plot"], [526, "example-plot"], [527, "example-plot"], [528, "example-plot"], [529, "example-plot"], [531, "example-plot"], [532, "example-plot"], [533, "example-plot"], [534, "example-plot"], [535, "example-plot"], [536, "example-plot"], [537, "example-plot"], [538, "example-plot"], [539, "example-plot"], [540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"], [549, "example-plot"], [550, "example-plot"], [552, "example-plot"], [553, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"], [557, "example-plot"], [558, "example-plot"]], "Examples using gammapy.analysis.Analysis": [[504, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[493, "examples-using-gammapy-astro-darkmatter-darkmatterannihilationspectralmodel"]], "Examples using gammapy.catalog.SourceCatalog3FHL": [[500, "examples-using-gammapy-catalog-sourcecatalog3fhl"]], "Examples using gammapy.catalog.SourceCatalogGammaCat": [[500, "examples-using-gammapy-catalog-sourcecataloggammacat"]], "Examples using gammapy.data.DataStore": [[502, "examples-using-gammapy-data-datastore"]], "Examples using gammapy.data.EventList": [[502, "examples-using-gammapy-data-eventlist"]], "Examples using gammapy.datasets.MapDataset": [[501, "examples-using-gammapy-datasets-mapdataset"]], "Examples using gammapy.datasets.SpectrumDatasetOnOff": [[501, "examples-using-gammapy-datasets-spectrumdatasetonoff"]], "Examples using gammapy.estimators.FluxPointsEstimator": [[503, "examples-using-gammapy-estimators-fluxpointsestimator"]], "Examples using gammapy.estimators.LightCurveEstimator": [[503, "examples-using-gammapy-estimators-lightcurveestimator"]], "Examples using gammapy.irf.EDispKernelMap": [[510, "examples-using-gammapy-irf-edispkernelmap"]], "Examples using gammapy.irf.PSFMap": [[510, "examples-using-gammapy-irf-psfmap"]], "Examples using gammapy.irf.load_irf_dict_from_file": [[510, "examples-using-gammapy-irf-load-irf-dict-from-file"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[512, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.MapDatasetMaker": [[513, "examples-using-gammapy-makers-mapdatasetmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[514, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Examples using gammapy.makers.SpectrumDatasetMaker": [[513, "examples-using-gammapy-makers-spectrumdatasetmaker"]], "Examples using gammapy.maps.HpxNDMap": [[517, "examples-using-gammapy-maps-hpxndmap"]], "Examples using gammapy.maps.RegionNDMap": [[517, "examples-using-gammapy-maps-regionndmap"]], "Examples using gammapy.maps.WcsNDMap": [[517, "examples-using-gammapy-maps-wcsndmap"]], "Examples using gammapy.modeling.Fit": [[562, "examples-using-gammapy-modeling-fit"]], "Excess and Significance": [[567, "excess-and-significance"], [567, "id2"]], "Excess errors": [[567, "excess-errors"], [567, "id4"]], "Excess estimators": [[394, "excess-estimators"]], "ExcessMapEstimator": [[120, "excessmapestimator"]], "Exclusion masks": [[474, "exclusion-masks"]], "Execution": [[565, "execution"]], "Exemplary additional prior subclasses:": [[398, "exemplary-additional-prior-subclasses"]], "Exercises": [[439, "exercises"], [442, "exercises"], [444, "exercises"], [447, "exercises"], [452, "exercises"], [454, "exercises"], [456, "exercises"], [457, "exercises"], [464, "exercises"], [480, "exercises"], [481, "exercises"], [482, "exercises"], [483, "exercises"], [491, "exercises"], [491, "id1"], [491, "id2"], [491, "id3"]], "Existing code": [[376, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[222, "expcutoffpowerlaw3fglspectralmodel"]], "ExpCutoffPowerLawNormSpectralModel": [[223, "expcutoffpowerlawnormspectralmodel"]], "ExpCutoffPowerLawSpectralModel": [[224, "expcutoffpowerlawspectralmodel"]], "ExpDecay temporal model": [[553, "expdecay-temporal-model"]], "ExpDecayTemporalModel": [[225, "expdecaytemporalmodel"]], "Expected number of detected events": [[510, "expected-number-of-detected-events"]], "Exploration of the fit results": [[445, "exploration-of-the-fit-results"]], "Explore the fit results": [[441, "explore-the-fit-results"]], "Explore the results": [[441, "explore-the-results"]], "Exponential": [[29, "exponential"]], "Exponential Cut-Off Powerlaw Fit": [[442, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[537, "exponential-cutoff-power-law-norm-spectral-model"]], "Exponential cutoff power law spectral model": [[535, "exponential-cutoff-power-law-spectral-model"]], "Exponential cutoff power law spectral model used for 3FGL": [[536, "exponential-cutoff-power-law-spectral-model-used-for-3fgl"]], "Expose model parameters as attributes": [[381, "expose-model-parameters-as-attributes"]], "Exposure": [[481, "exposure"]], "Extended source using a template": [[456, "extended-source-using-a-template"]], "Extract the light curve": [[463, "extract-the-light-curve"]], "Extract the lightcurve": [[464, "extract-the-lightcurve"]], "Extracting the light curve": [[462, "extracting-the-light-curve"]], "Extracting the ring background": [[450, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[510, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, "faucherkaspi2006"]], "FaucherKaspi2006VelocityBimodal": [[31, "faucherkaspi2006velocitybimodal"]], "FaucherKaspi2006VelocityMaxwellian": [[32, "faucherkaspi2006velocitymaxwellian"]], "FaucherSpiral": [[33, "faucherspiral"]], "Feature Freeze and Branching": [[399, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[453, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[481, "fermi-lat-with-gammapy"]], "FermiST": [[493, "fermist"]], "Files": [[480, "files"]], "Filling a RegionNDMap": [[518, "filling-a-regionndmap"]], "Filling maps from event lists": [[473, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[473, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[463, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[375, "final-remarks"]], "Final result": [[568, "final-result"]], "Fit": [[205, "fit"], [460, "fit"], [481, "fit"]], "Fit quality and model residuals": [[444, "fit-quality-and-model-residuals"], [446, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[470, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[452, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[452, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[444, "fit-spectrum"], [446, "fit-spectrum"]], "Fit statistics": [[566, "fit-statistics"]], "Fit the datasets": [[464, "fit-the-datasets"]], "Fit the model": [[490, "fit-the-model"]], "FitResult": [[206, "fitresult"]], "Fitting": [[379, "fitting"], [470, "fitting"]], "Fitting Multiple Datasets with and without the Prior": [[478, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[478, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[470, "fitting-options"]], "Fitting temporal models": [[464, "fitting-temporal-models"]], "Fitting the obtained light curve": [[464, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[370, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, "fixedpointinginfo"]], "Float data type: 32 bit or 64 bit?": [[370, "float-data-type-32-bit-or-64-bit"]], "Flux Profile Estimation": [[458, "flux-profile-estimation"]], "Flux maps": [[503, "flux-maps"]], "Flux maps for annihilation": [[467, "flux-maps-for-annihilation"]], "Flux maps for decay": [[467, "flux-maps-for-decay"]], "Flux point fitting": [[442, "flux-point-fitting"]], "Flux points": [[468, "flux-points"], [489, "flux-points"], [503, "flux-points"]], "Flux quantities": [[503, "flux-quantities"]], "FluxMaps": [[121, "fluxmaps"]], "FluxMetaData": [[122, "fluxmetadata"]], "FluxPoints": [[123, "fluxpoints"]], "FluxPointsDataset": [[100, "fluxpointsdataset"], [382, "fluxpointsdataset"], [469, "fluxpointsdataset"]], "FluxPointsEstimator": [[124, "fluxpointsestimator"]], "FluxProfileEstimator": [[125, "fluxprofileestimator"]], "FoV background": [[472, "fov-background"], [512, "fov-background"]], "FoVAlignment": [[150, "fovalignment"]], "FoVBackgroundMaker": [[164, "fovbackgroundmaker"]], "FoVBackgroundModel": [[226, "fovbackgroundmodel"]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[461, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[475, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[371, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[370, "functions-returning-several-values"]], "Further extensions": [[440, "further-extensions"]], "Further references": [[566, "further-references"]], "GTI": [[86, "gti"]], "Galactic diffuse background": [[481, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[495, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[467, "gamma-ray-spectra-at-production"]], "GammaLib": [[493, "gammalib"]], "Gammapy": [[407, "gammapy"]], "Gammapy Binder": [[400, "id1"]], "Gammapy analysis workflow and package structure": [[563, "gammapy-analysis-workflow-and-package-structure"]], "Gammapy overview": [[390, "gammapy-overview"]], "Gammapy repository": [[400, "gammapy-repository"]], "Gammapy webpages": [[400, "gammapy-webpages"]], "Gaussian spatial model": [[523, "gaussian-spatial-model"]], "Gaussian spectral model": [[538, "gaussian-spectral-model"]], "Gaussian temporal model": [[554, "gaussian-temporal-model"]], "GaussianSpatialModel": [[227, "gaussianspatialmodel"]], "GaussianSpectralModel": [[228, "gaussianspectralmodel"]], "GaussianTemporalModel": [[229, "gaussiantemporalmodel"]], "General Gammapy publications": [[396, "general-gammapy-publications"]], "General code style guidelines": [[376, "general-code-style-guidelines"]], "General conventions": [[370, "general-conventions"]], "General idea and class diagram": [[380, "general-idea-and-class-diagram"]], "General method": [[503, "general-method"]], "General organization of the new approach": [[385, "general-organization-of-the-new-approach"]], "Generalist estimators": [[394, "generalist-estimators"]], "Generalized Gaussian temporal model": [[555, "generalized-gaussian-temporal-model"]], "Generalized gaussian spatial model": [[524, "generalized-gaussian-spatial-model"]], "GeneralizedGaussianSpatialModel": [[230, "generalizedgaussianspatialmodel"]], "GeneralizedGaussianTemporalModel": [[231, "generalizedgaussiantemporalmodel"]], "Generating log messages": [[370, "generating-log-messages"]], "Geom": [[185, "geom"]], "Get a fit stat profile for the redshift": [[440, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[373, "get-in-touch-early"]], "Get set up": [[373, "get-set-up"]], "Get the flux points": [[440, "get-the-flux-points"]], "Getting started": [[390, "getting-started"], [402, "getting-started"], [494, "getting-started"], [495, "getting-started"], [496, "getting-started"]], "Getting started section restructuring": [[390, "getting-started-section-restructuring"]], "Getting started with data": [[502, "getting-started-with-data"]], "Getting started with maps": [[517, "getting-started-with-maps"]], "Getting the reduced dataset": [[449, "getting-the-reduced-dataset"], [450, "getting-the-reduced-dataset"]], "Global Model Handling": [[392, "global-model-handling"]], "Glossary": [[564, "glossary"]], "Glossary and references": [[564, "glossary-and-references"]], "Goodness of fit": [[568, "goodness-of-fit"]], "Guidelines and specific actions": [[390, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[483, "h-e-s-s-with-gammapy"]], "HAWC data access and reduction": [[482, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[482, "hawc-with-gammapy"]], "HAWC: 1D dataset for flux point fitting": [[453, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, "hduindextable"]], "HDULocation": [[305, "hdulocation"]], "HEALPix geometry": [[516, "healpix-geometry"]], "HEALPix-based maps": [[516, "healpix-based-maps"]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[453, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[396, "handling-of-conference-material"]], "Help!?": [[405, "help"]], "Hierarchical clustering of observations": [[477, "hierarchical-clustering-of-observations"]], "Hierarchy": [[397, "hierarchy"]], "High Level Analysis Interface": [[504, "high-level-analysis-interface"]], "High level interface": [[379, "high-level-interface"], [489, "high-level-interface"]], "How To": [[390, "how-to"], [505, "how-to"]], "How to contribute to Gammapy": [[373, "how-to-contribute-to-gammapy"]], "How to get data values": [[473, "how-to-get-data-values"]], "How to handle API breaking changes?": [[370, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[399, "how-to-make-a-gammapy-release"]], "How to make a pull request": [[370, "how-to-make-a-pull-request"]], "How to set data values": [[473, "how-to-set-data-values"]], "How to use logging": [[370, "how-to-use-logging"]], "How to use random numbers": [[370, "how-to-use-random-numbers"]], "How to write code": [[370, "how-to-write-code"]], "How to write tests": [[370, "how-to-write-tests"]], "HpxGeom": [[186, "hpxgeom"]], "HpxMap": [[187, "hpxmap"]], "HpxNDMap": [[188, "hpxndmap"]], "IPython": [[406, "id3"]], "IRF": [[151, "irf"], [397, "irf"]], "IRF axis naming": [[510, "irf-axis-naming"]], "IRFMap": [[152, "irfmap"]], "IRF_REGISTRY": [[153, "irf-registry"]], "IRFs": [[379, "irfs"], [480, "irfs"]], "Image Plotting": [[473, "image-plotting"]], "ImageProfile": [[126, "imageprofile"]], "ImageProfileEstimator": [[127, "imageprofileestimator"]], "Images and masks": [[384, "images-and-masks"]], "Implement default parameters": [[381, "implement-default-parameters"]], "Implement evaluation region specifications": [[381, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[381, "implement-sky-coordinate-handling"]], "Implementation": [[390, "implementation"], [398, "implementation"]], "Implementation Outline": [[398, "implementation-outline"]], "Implementation road map": [[380, "implementation-road-map"]], "Implementing a custom model": [[476, "implementing-a-custom-model"]], "Implementing a custom prior": [[478, "implementing-a-custom-prior"]], "Imports and versions": [[460, "imports-and-versions"]], "Improve SourceModels class": [[381, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[381, "improve-and-implement-model-serilization"]], "Improve spatial models": [[381, "improve-spatial-models"]], "In the RST files": [[371, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[471, "inbuilt-gammapy-irfs"]], "Include png files as images": [[371, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[473, "indexing-and-slicing-sub-maps"]], "Inspect the reduced dataset": [[490, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[490, "inspecting-residuals"]], "Install issues": [[405, "install-issues"]], "Installation": [[390, "installation"], [402, "installation"], [403, "installation"]], "Instrument Response Functions (DL3)": [[510, "instrument-response-functions-dl3"]], "Interaction Between Models and Dataset Objects": [[392, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[517, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[473, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[370, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[393, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[394, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[394, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[394, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[391, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[391, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[391, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[389, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[391, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[381, "introduce-naming-scheme-for-models"]], "Introduction": [[381, "introduction"], [384, "introduction"], [385, "introduction"], [387, "introduction"], [388, "introduction"], [390, "introduction"], [394, "introduction"], [396, "introduction"], [397, "introduction"], [439, "introduction"], [444, "introduction"], [446, "introduction"], [454, "introduction"], [465, "introduction"], [467, "introduction"], [468, "introduction"], [469, "introduction"], [472, "introduction"], [473, "introduction"], [480, "introduction"], [481, "introduction"], [485, "introduction"], [491, "introduction"], [493, "introduction"], [495, "introduction"], [496, "introduction"], [566, "introduction"]], "Introduction of background models": [[381, "introduction-of-background-models"]], "Introduction of model name attributes": [[381, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[381, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[319, "inversecdfsampler"]], "IsothermalProfile": [[22, "isothermalprofile"]], "Isotropic diffuse background": [[481, "isotropic-diffuse-background"]], "Iterating by image": [[473, "iterating-by-image"]], "J Factors": [[467, "j-factors"]], "JFactory": [[23, "jfactory"]], "Joint Analysis": [[501, "joint-analysis"]], "Joint analysis": [[452, "joint-analysis"], [453, "joint-analysis"]], "Jupyter notebooks": [[406, "jupyter-notebooks"]], "LabelMapAxis": [[189, "labelmapaxis"], [473, "labelmapaxis"]], "Lazy loading of Datasets": [[382, "lazy-loading-of-datasets"]], "LazyFitsData": [[306, "lazyfitsdata"]], "Let\u2019s simulate the model": [[457, "let-s-simulate-the-model"]], "Light Curve Fitting": [[385, "light-curve-fitting"]], "Light Curve estimation by observation": [[462, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[560, "light-curve-temporal-model"]], "Light curves": [[462, "light-curves"]], "Light curves for flares": [[463, "light-curves-for-flares"]], "LightCurveEstimator": [[128, "lightcurveestimator"]], "LightCurveTemplateTemporalModel": [[232, "lightcurvetemplatetemporalmodel"]], "Lightcurve": [[385, "lightcurve"]], "Lightcurves": [[468, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[385, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[380, "limitations"]], "Linear temporal model": [[556, "linear-temporal-model"]], "LinearTemporalModel": [[233, "lineartemporalmodel"]], "Links to other tutorials": [[371, "links-to-other-tutorials"]], "List available catalogs": [[468, "list-available-catalogs"]], "Load Data": [[444, "load-data"]], "Load IRFs and prepare dataset": [[439, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[468, "load-catalogs"]], "Load data": [[446, "load-data"]], "Load spectral points": [[442, "load-spectral-points"]], "Load the data": [[440, "load-the-data"]], "Loading models from a catalog": [[475, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[370, "locate-origin-of-warnings"]], "Log parabola spectral model": [[539, "log-parabola-spectral-model"]], "Log parabola spectral norm model": [[540, "log-parabola-spectral-norm-model"]], "Log-Parabola Fit": [[442, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[234, "logparabolanormspectralmodel"]], "LogParabolaSpectralModel": [[235, "logparabolaspectralmodel"]], "LogSpiral": [[34, "logspiral"]], "Long Term Support releases": [[396, "long-term-support-releases"]], "Lorimer2006": [[35, "lorimer2006"]], "Low level API": [[490, "low-level-api"]], "Low level map and cube analysis": [[376, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[165, "maker-registry"]], "METHOD_DEFAULT": [[313, "method-default"]], "METHOD_KWARGS_DEFAULT": [[314, "method-kwargs-default"]], "MODEL_REGISTRY": [[236, "model-registry"]], "Maintainer and developer perspective": [[377, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[379, "maintenance-and-code-quality"]], "Make a Bugfix release": [[399, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[465, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[454, "make-sky-images"]], "Make small pull requests": [[373, "make-small-pull-requests"]], "Maker": [[166, "maker"]], "Makers": [[397, "makers"]], "Makers - Data reduction": [[472, "makers-data-reduction"]], "Making a butterfly plot": [[490, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[370, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[370, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[370, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[477, "manual-grouping-of-observations"]], "Map": [[190, "map"]], "Map Analysis / Data Reduction": [[379, "map-analysis-data-reduction"]], "MapAxes": [[191, "mapaxes"]], "MapAxis": [[192, "mapaxis"]], "MapCoord": [[193, "mapcoord"], [517, "mapcoord"]], "MapDataset": [[101, "mapdataset"], [382, "mapdataset"], [469, "mapdataset"]], "MapDatasetEventSampler": [[102, "mapdataseteventsampler"], [383, "mapdataseteventsampler"]], "MapDatasetMaker": [[167, "mapdatasetmaker"]], "MapDatasetMetaData": [[103, "mapdatasetmetadata"]], "MapDatasetOnOff": [[104, "mapdatasetonoff"], [382, "mapdatasetonoff"]], "MapPanelPlotter": [[357, "mappanelplotter"]], "Maps": [[194, "maps"], [379, "maps"], [473, "maps"], [491, "maps"]], "Maps operations": [[473, "maps-operations"]], "Mask dilation and erosion": [[474, "mask-dilation-and-erosion"]], "Mask maps": [[474, "mask-maps"]], "Mask modifications": [[474, "mask-modifications"]], "Mask some sky regions": [[474, "mask-some-sky-regions"]], "Masks for fitting": [[474, "masks-for-fitting"]], "Masks operations": [[474, "masks-operations"]], "Meetings": [[379, "meetings"]], "Metadata API": [[397, "metadata-api"]], "Metadata files": [[396, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[397, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[461, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[237, "meyercrabspectralmodel"]], "Minor changes": [[391, "minor-changes"]], "Mission elapsed times (MET)": [[569, "mission-elapsed-times-met"]], "Model": [[238, "model"]], "Model and dataset": [[470, "model-and-dataset"], [478, "model-and-dataset"]], "Model fit": [[454, "model-fit"]], "Model fitting": [[445, "model-fitting"], [489, "model-fitting"]], "Model gallery": [[519, "model-gallery"]], "Model lists and serialisation": [[476, "model-lists-and-serialisation"]], "Model the observed spectrum": [[440, "model-the-observed-spectrum"]], "ModelBase": [[239, "modelbase"]], "Modeling": [[379, "modeling"], [397, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[562, "modeling-and-fitting-dl4-to-dl5"]], "Modeling and fitting": [[452, "modeling-and-fitting"]], "Modelling": [[449, "modelling"], [475, "modelling"]], "Models": [[240, "models"], [476, "models"]], "Models with energy dependent morphology": [[476, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[476, "models-with-shared-parameter"]], "Modifying Data": [[473, "modifying-data"]], "Modifying model parameters": [[476, "modifying-model-parameters"]], "MooreProfile": [[24, "mooreprofile"]], "Morphological energy dependence estimation": [[455, "morphological-energy-dependence-estimation"]], "Motivation": [[398, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[453, "multi-instrument-joint-3d-and-1d-analysis"]], "NFWProfile": [[25, "nfwprofile"]], "N_JOBS_DEFAULT": [[315, "n-jobs-default"]], "Naima spectral model": [[541, "naima-spectral-model"]], "NaimaSpectralModel": [[241, "naimaspectralmodel"]], "New features": [[432, "new-features"], [435, "new-features"], [436, "new-features"]], "Next steps": [[480, "next-steps"], [482, "next-steps"], [483, "next-steps"]], "Night-wise LC estimation": [[462, "night-wise-lc-estimation"]], "Norm Spectral Models": [[476, "norm-spectral-models"]], "Notations": [[567, "notations"]], "Notes": [[566, "notes"]], "OGIPDatasetReader": [[105, "ogipdatasetreader"]], "OGIPDatasetWriter": [[106, "ogipdatasetwriter"]], "Object text repr, str and info": [[370, "object-text-repr-str-and-info"]], "Objective": [[449, "objective"], [450, "objective"], [456, "objective"], [457, "objective"], [477, "objective"]], "Objectives": [[380, "objectives"]], "Observation": [[88, "observation"]], "Observation duration and effective livetime": [[472, "observation-duration-and-effective-livetime"]], "Observation selection": [[445, "observation-selection"], [489, "observation-selection"]], "ObservationEventSampler": [[107, "observationeventsampler"]], "ObservationFilter": [[89, "observationfilter"]], "ObservationTable": [[90, "observationtable"]], "Observational clustering": [[477, "observational-clustering"]], "Observations": [[91, "observations"]], "ObservationsEventsSampler": [[92, "observationseventssampler"]], "Obtain the data to use": [[455, "obtain-the-data-to-use"]], "Obtain the observations": [[477, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[439, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[400, "old-example-data"]], "On-Off analysis": [[447, "on-off-analysis"]], "Opening the data": [[465, "opening-the-data"]], "OptimizeResult": [[207, "optimizeresult"]], "Optional dependencies": [[369, "optional-dependencies"], [387, "optional-dependencies"]], "Other folders": [[400, "other-folders"]], "Other packages": [[493, "other-packages"]], "Other repositories": [[400, "other-repositories"]], "Others": [[370, "others"], [400, "others"]], "Outlook": [[382, "outlook"], [384, "outlook"], [386, "outlook"], [387, "outlook"], [389, "outlook"], [390, "outlook"], [391, "outlook"], [394, "outlook"]], "Output in Jupyter notebook cells": [[370, "output-in-jupyter-notebook-cells"]], "Overview": [[512, "overview"], [514, "overview"], [515, "overview"]], "PIG 1 - PIG purpose and guidelines": [[375, "pig-1-pig-purpose-and-guidelines"]], "PIG 10 - Regions": [[384, "pig-10-regions"]], "PIG 11 - Light curves": [[385, "pig-11-light-curves"]], "PIG 12 - High level interface": [[386, "pig-12-high-level-interface"]], "PIG 13 - Gammapy dependencies and distribution": [[387, "pig-13-gammapy-dependencies-and-distribution"]], "PIG 14 - Uncertainty estimation": [[388, "pig-14-uncertainty-estimation"]], "PIG 16 - Gammapy package structure": [[389, "pig-16-gammapy-package-structure"]], "PIG 18 - Documentation": [[390, "pig-18-documentation"]], "PIG 19 - Gammapy package structure follow up": [[391, "pig-19-gammapy-package-structure-follow-up"]], "PIG 2 - Organization of low level analysis code": [[376, "pig-2-organization-of-low-level-analysis-code"]], "PIG 20 - Global Model API": [[392, "pig-20-global-model-api"]], "PIG 21 - Models improvements": [[393, "pig-21-models-improvements"]], "PIG 22 - Unified flux estimators API": [[394, "pig-22-unified-flux-estimators-api"]], "PIG 23 - Gammapy release cycle and version numbering": [[395, "pig-23-gammapy-release-cycle-and-version-numbering"]], "PIG 24 - Authorship policy": [[396, "pig-24-authorship-policy"]], "PIG 25 - Metadata container for Gammapy": [[397, "pig-25-metadata-container-for-gammapy"]], "PIG 26 - Model Priors API": [[398, "pig-26-model-priors-api"]], "PIG 3 - Plan for dropping Python 2.7 support": [[377, "pig-3-plan-for-dropping-python-2-7-support"]], "PIG 4 - Setup for tutorial notebooks and data": [[378, "pig-4-setup-for-tutorial-notebooks-and-data"]], "PIG 5 - Gammapy 1.0 roadmap": [[379, "pig-5-gammapy-1-0-roadmap"]], "PIG 6 - CTA observation handling": [[380, "pig-6-cta-observation-handling"]], "PIG 7 - Models": [[381, "pig-7-models"]], "PIG 8 - Datasets": [[382, "pig-8-datasets"]], "PIG 9 - Event sampling": [[383, "pig-9-event-sampling"]], "PIG review": [[375, "pig-review"]], "PIG status": [[375, "pig-status"]], "PIGs": [[374, "pigs"]], "POOL_KWARGS_DEFAULT": [[316, "pool-kwargs-default"]], "PSF": [[471, "psf"], [481, "psf"]], "PSF3D": [[154, "psf3d"]], "PSFKernel": [[155, "psfkernel"]], "PSFKing": [[156, "psfking"]], "PSFMap": [[157, "psfmap"]], "PWN": [[50, "pwn"]], "Package / API": [[485, "package-api"]], "Package and docs": [[400, "package-and-docs"]], "Package structure and dependencies": [[423, "package-structure-and-dependencies"]], "Paczynski1990": [[36, "paczynski1990"]], "Paczynski1990Velocity": [[37, "paczynski1990velocity"]], "Papers": [[379, "papers"]], "Parallel evaluation of datasets": [[382, "parallel-evaluation-of-datasets"]], "Parameter": [[208, "parameter"]], "ParameterEstimator": [[129, "parameterestimator"]], "Parameters": [[209, "parameters"]], "ParametricPSF": [[158, "parametricpsf"]], "Perform spectral model fitting": [[441, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[490, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[441, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[383, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[559, "phase-curve-temporal-model"]], "Phase-resolved map": [[465, "phase-resolved-map"]], "Phase-resolved spectrum": [[465, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[168, "phasebackgroundmaker"]], "Phasogram": [[465, "phasogram"]], "Piecewise  norm spectral model": [[542, "piecewise-norm-spectral-model"]], "Piecewise norm spatial model": [[525, "piecewise-norm-spatial-model"]], "PiecewiseNormSpatialModel": [[242, "piecewisenormspatialmodel"]], "PiecewiseNormSpectralModel": [[243, "piecewisenormspectralmodel"]], "Pixel coordinate convention": [[370, "pixel-coordinate-convention"]], "Plot": [[454, "plot"]], "Plot off regions": [[444, "plot-off-regions"]], "Plot resulting images": [[448, "plot-resulting-images"]], "Plot the fitted spectrum": [[490, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[440, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[458, "plotting-results"]], "Plotting a RegionGeom": [[518, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[475, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[445, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[518, "plotting-the-map-content"]], "Plotting the results": [[455, "plotting-the-results"]], "Plotting the underlying region": [[518, "plotting-the-underlying-region"]], "Point Spread Function": [[511, "point-spread-function"]], "Point source sensitivity": [[439, "point-source-sensitivity"]], "Point spatial model": [[526, "point-spatial-model"]], "Point spread function": [[480, "point-spread-function"]], "PointSpatialModel": [[244, "pointspatialmodel"]], "PointingInfo": [[93, "pointinginfo"]], "PointingMode": [[94, "pointingmode"]], "Possible implementations": [[396, "possible-implementations"]], "Post release": [[399, "post-release"]], "Power Law Fit": [[442, "power-law-fit"]], "Power law 2 spectral model": [[544, "power-law-2-spectral-model"]], "Power law norm spectral model": [[545, "power-law-norm-spectral-model"]], "Power law spectral model": [[543, "power-law-spectral-model"]], "PowerLaw temporal model": [[557, "powerlaw-temporal-model"]], "PowerLaw2SpectralModel": [[245, "powerlaw2spectralmodel"]], "PowerLawNormSpectralModel": [[246, "powerlawnormspectralmodel"]], "PowerLawSpectralModel": [[247, "powerlawspectralmodel"]], "PowerLawTemporalModel": [[248, "powerlawtemporalmodel"]], "Predicted counts": [[501, "predicted-counts"]], "Prepare and run the event sampler": [[457, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[441, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[490, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[441, "prerequisites"], [442, "prerequisites"], [444, "prerequisites"], [445, "prerequisites"], [446, "prerequisites"], [447, "prerequisites"], [449, "prerequisites"], [453, "prerequisites"], [455, "prerequisites"], [456, "prerequisites"], [457, "prerequisites"], [458, "prerequisites"], [460, "prerequisites"], [461, "prerequisites"], [462, "prerequisites"], [463, "prerequisites"], [464, "prerequisites"], [470, "prerequisites"], [474, "prerequisites"], [475, "prerequisites"], [478, "prerequisites"], [489, "prerequisites"], [490, "prerequisites"]], "Pretty-print source information": [[468, "pretty-print-source-information"]], "PrimaryFlux": [[26, "primaryflux"]], "PriorParameter": [[210, "priorparameter"]], "PriorParameters": [[211, "priorparameters"]], "Priors": [[478, "priors"]], "Profile Estimation": [[458, "profile-estimation"]], "Profile Likelihood": [[568, "profile-likelihood"]], "Profiles": [[467, "profiles"]], "Project Management": [[379, "project-management"]], "Project setup": [[400, "project-setup"]], "Projects": [[379, "projects"]], "Proposal": [[378, "proposal"], [380, "proposal"], [381, "proposal"], [382, "proposal"], [383, "proposal"], [384, "proposal"], [385, "proposal"], [386, "proposal"], [388, "proposal"], [389, "proposal"], [390, "proposal"], [391, "proposal"], [392, "proposal"], [393, "proposal"]], "Proposal of API for flux estimate results": [[394, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[458, "proposed-approach"]], "Proposed approach": [[441, "proposed-approach"], [442, "proposed-approach"], [445, "proposed-approach"], [447, "proposed-approach"], [448, "proposed-approach"], [449, "proposed-approach"], [450, "proposed-approach"], [453, "proposed-approach"], [456, "proposed-approach"], [457, "proposed-approach"], [460, "proposed-approach"], [461, "proposed-approach"], [462, "proposed-approach"], [463, "proposed-approach"], [464, "proposed-approach"], [470, "proposed-approach"], [474, "proposed-approach"], [475, "proposed-approach"], [477, "proposed-approach"], [489, "proposed-approach"], [490, "proposed-approach"]], "Proposed class diagram": [[380, "proposed-class-diagram"]], "Proposed metadata classes": [[397, "proposed-metadata-classes"]], "Proposed solution": [[397, "proposed-solution"]], "Pull Requests": [[423, "pull-requests"], [424, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"], [436, "pull-requests"]], "Pull requests": [[409, "pull-requests"], [410, "pull-requests"], [411, "pull-requests"], [412, "pull-requests"], [413, "pull-requests"], [414, "pull-requests"], [415, "pull-requests"], [416, "pull-requests"], [417, "pull-requests"], [418, "pull-requests"], [419, "pull-requests"], [420, "pull-requests"], [421, "pull-requests"], [422, "pull-requests"], [425, "pull-requests"], [426, "pull-requests"], [427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"], [431, "pull-requests"]], "Pulsar": [[51, "pulsar"]], "Pulsar Source Models": [[497, "pulsar-source-models"]], "Pulsar Wind Nebula Source Models": [[498, "pulsar-wind-nebula-source-models"]], "Pulsar analysis": [[465, "pulsar-analysis"]], "Python": [[406, "id2"]], "Python scripts": [[406, "python-scripts"]], "Python version support": [[370, "python-version-support"]], "RadMax2D": [[159, "radmax2d"]], "Read and Introduce Data": [[458, "read-and-introduce-data"]], "Read in input images": [[448, "read-in-input-images"]], "Read the datasets": [[475, "read-the-datasets"]], "Read the energy-dependent model": [[457, "read-the-energy-dependent-model"]], "Reading Maps": [[473, "reading-maps"]], "Reading and Writing": [[473, "reading-and-writing"]], "Reading and writing masks": [[474, "reading-and-writing-masks"]], "Reading different datasets": [[453, "reading-different-datasets"]], "RecoPSFMap": [[160, "recopsfmap"]], "Recommended Setup": [[402, "recommended-setup"], [404, "recommended-setup"]], "Reference": [[390, "reference"], [565, "reference"]], "References": [[564, "publications"]], "Reflected regions background": [[472, "reflected-regions-background"], [514, "reflected-regions-background"]], "ReflectedRegionsBackgroundMaker": [[169, "reflectedregionsbackgroundmaker"]], "ReflectedRegionsFinder": [[170, "reflectedregionsfinder"]], "Region arguments": [[384, "region-arguments"]], "RegionGeom": [[195, "regiongeom"], [518, "regiongeom"]], "RegionGeom and RegionNDMap": [[518, "regiongeom-and-regionndmap"]], "RegionGeom and coordinates": [[518, "regiongeom-and-coordinates"]], "RegionNDMap": [[196, "regionndmap"], [518, "regionndmap"]], "RegionsFinder": [[171, "regionsfinder"]], "Relation to WCS geometries": [[518, "relation-to-wcs-geometries"]], "Release notes": [[370, "release-notes"], [408, "release-notes"]], "Release preparation, feature freeze": [[395, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[395, "release-scheduling-and-lts"]], "Releases": [[379, "releases"], [396, "releases"], [400, "releases"]], "Releasing the final version of the major release": [[399, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[399, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[475, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[370, "removing-an-attribute"]], "Renaming an argument": [[370, "renaming-an-argument"]], "Required dependencies": [[369, "required-dependencies"], [387, "required-dependencies"]], "Requirements": [[397, "requirements"]], "Resampling datasets": [[469, "resampling-datasets"]], "Resolve gammapy.detect": [[391, "resolve-gammapy-detect"]], "Results": [[439, "results"]], "Results exploration": [[445, "results-exploration"]], "Ring background": [[472, "ring-background"], [515, "ring-background"]], "Ring background map": [[450, "ring-background-map"]], "RingBackgroundMaker": [[172, "ringbackgroundmaker"]], "Rotated regions": [[384, "rotated-regions"]], "Run Estimation": [[458, "run-estimation"]], "Run Estimator": [[455, "run-estimator"]], "Run data reduction chain": [[444, "run-data-reduction-chain"], [446, "run-data-reduction-chain"]], "Run the 1D data reduction": [[462, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[462, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[565, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[373, "running-tests-building-documentation"]], "Running the Data Reduction": [[445, "running-the-data-reduction"]], "Running the analysis": [[489, "running-the-analysis"]], "Running the estimation": [[445, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[445, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[445, "running-the-fit"]], "Running the light curve extraction in 1D": [[462, "running-the-light-curve-extraction-in-1d"]], "SNR": [[52, "snr"]], "SNRTrueloveMcKee": [[53, "snrtruelovemckee"]], "SPATIAL_MODEL_REGISTRY": [[249, "spatial-model-registry"]], "SPECTRAL_MODEL_REGISTRY": [[250, "spectral-model-registry"]], "Safe data range definition": [[513, "safe-data-range-definition"]], "Safe data range handling": [[472, "safe-data-range-handling"]], "SafeMaskMaker": [[173, "safemaskmaker"]], "Sample a source with energy-dependent temporal evolution": [[457, "sample-a-source-with-energy-dependent-temporal-evolution"]], "Sampling methods": [[383, "sampling-methods"]], "Sampling the source and background events": [[456, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[445, "save-dataset-to-disk"], [489, "save-dataset-to-disk"], [490, "save-dataset-to-disk"]], "ScaleSpectralModel": [[251, "scalespectralmodel"]], "ScaledRegularGridInterpolator": [[309, "scaledregulargridinterpolator"]], "Scripts": [[485, "scripts"]], "Select a catalog subset": [[468, "select-a-catalog-subset"]], "Select a source": [[468, "select-a-source"]], "Select observations": [[454, "select-observations"]], "Select the ON region": [[441, "select-the-on-region"]], "Select the data": [[441, "select-the-data"], [463, "select-the-data"]], "Selecting models contributing to a given region": [[475, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[475, "selecting-models-from-a-list"]], "SensitivityEstimator": [[130, "sensitivityestimator"]], "Serialisation": [[398, "serialisation"], [471, "serialisation"], [471, "id1"], [471, "id2"], [481, "serialisation"]], "Serialisation and I/O": [[458, "serialisation-and-i-o"]], "Serialisation of datasets": [[501, "serialisation-of-datasets"]], "Serialisation of the fit result": [[445, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[445, "serialisation-of-the-results"]], "Serialising models": [[475, "serialising-models"]], "Serialization": [[397, "serialization"]], "Setting fitting parameters": [[445, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[489, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[489, "setting-the-background-normalization-maker"]], "Setting the data to use": [[489, "setting-the-data-to-use"]], "Setting the exclusion mask": [[445, "setting-the-exclusion-mask"], [489, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[489, "setting-the-reduced-datasets-geometry"]], "Setup": [[439, "setup"], [440, "setup"], [441, "setup"], [442, "setup"], [444, "setup"], [445, "setup"], [446, "setup"], [447, "setup"], [448, "setup"], [449, "setup"], [450, "setup"], [454, "setup"], [455, "setup"], [456, "setup"], [457, "setup"], [458, "setup"], [461, "setup"], [462, "setup"], [463, "setup"], [464, "setup"], [467, "setup"], [469, "setup"], [472, "setup"], [473, "setup"], [474, "setup"], [475, "setup"], [476, "setup"], [480, "setup"], [481, "setup"], [489, "setup"], [490, "setup"], [491, "setup"]], "Shell spatial model": [[527, "shell-spatial-model"]], "Shell2 spatial model": [[528, "shell2-spatial-model"]], "Shell2SpatialModel": [[252, "shell2spatialmodel"]], "ShellSpatialModel": [[253, "shellspatialmodel"]], "Show images": [[454, "show-images"]], "Show the results tables": [[455, "show-the-results-tables"]], "Show various observation quantities": [[477, "show-various-observation-quantities"]], "SimplePulsar": [[54, "simplepulsar"]], "Simplify YAML Parameter Representation": [[393, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[393, "simplify-yaml-representation"]], "Simulate multiple event lists": [[456, "simulate-multiple-event-lists"]], "Simulating a light curve": [[464, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[464, "simulating-and-fitting-a-time-varying-source"]], "Simulation": [[460, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[382, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[447, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[558, "sine-temporal-model"]], "SineTemporalModel": [[254, "sinetemporalmodel"]], "Skip unit tests for some Astropy versions": [[370, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[384, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[517, "sky-maps-dl4"]], "SkyModel": [[255, "skymodel"], [476, "skymodel"]], "Smooth broken power law spectral model": [[546, "smooth-broken-power-law-spectral-model"]], "SmoothBrokenPowerLawSpectralModel": [[256, "smoothbrokenpowerlawspectralmodel"]], "Some terminology": [[380, "some-terminology"]], "Source Detection": [[454, "source-detection"]], "Source candidates": [[448, "source-candidates"]], "Source catalogs": [[468, "source-catalogs"], [491, "source-catalogs"], [500, "source-catalogs"]], "Source detection and significance maps": [[448, "source-detection-and-significance-maps"]], "Source information": [[468, "source-information"]], "Source models": [[468, "source-models"], [480, "source-models"]], "Source object": [[468, "source-object"]], "Source statistic": [[444, "source-statistic"]], "SourceCatalog": [[56, "sourcecatalog"]], "SourceCatalog1LHAASO": [[57, "sourcecatalog1lhaaso"]], "SourceCatalog2FHL": [[58, "sourcecatalog2fhl"]], "SourceCatalog2HWC": [[59, "sourcecatalog2hwc"]], "SourceCatalog2PC": [[60, "sourcecatalog2pc"]], "SourceCatalog3FGL": [[61, "sourcecatalog3fgl"]], "SourceCatalog3FHL": [[62, "sourcecatalog3fhl"]], "SourceCatalog3HWC": [[63, "sourcecatalog3hwc"]], "SourceCatalog3PC": [[64, "sourcecatalog3pc"]], "SourceCatalog4FGL": [[65, "sourcecatalog4fgl"]], "SourceCatalogGammaCat": [[66, "sourcecataloggammacat"]], "SourceCatalogHGPS": [[67, "sourcecataloghgps"]], "SourceCatalogLargeScaleHGPS": [[68, "sourcecataloglargescalehgps"]], "SourceCatalogObject": [[69, "sourcecatalogobject"]], "SourceCatalogObject1LHAASO": [[70, "sourcecatalogobject1lhaaso"]], "SourceCatalogObject2FHL": [[71, "sourcecatalogobject2fhl"]], "SourceCatalogObject2HWC": [[72, "sourcecatalogobject2hwc"]], "SourceCatalogObject2PC": [[73, "sourcecatalogobject2pc"]], "SourceCatalogObject3FGL": [[74, "sourcecatalogobject3fgl"]], "SourceCatalogObject3FHL": [[75, "sourcecatalogobject3fhl"]], "SourceCatalogObject3HWC": [[76, "sourcecatalogobject3hwc"]], "SourceCatalogObject3PC": [[77, "sourcecatalogobject3pc"]], "SourceCatalogObject4FGL": [[78, "sourcecatalogobject4fgl"]], "SourceCatalogObjectGammaCat": [[79, "sourcecatalogobjectgammacat"]], "SourceCatalogObjectHGPS": [[80, "sourcecatalogobjecthgps"]], "SourceCatalogObjectHGPSComponent": [[81, "sourcecatalogobjecthgpscomponent"]], "SourceIRFModel": [[381, "sourceirfmodel"]], "Spatial analysis": [[454, "spatial-analysis"]], "Spatial models": [[476, "spatial-models"], [519, "spatial-models"]], "SpatialIRFModel": [[381, "spatialirfmodel"]], "SpatialModel": [[257, "spatialmodel"]], "Special cases": [[568, "special-cases"]], "Specificities of the HGPS catalog": [[468, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[393, "spectral-absorption-model"]], "Spectral Norm Models": [[393, "spectral-norm-models"]], "Spectral analysis": [[444, "spectral-analysis"]], "Spectral analysis of extended sources": [[441, "spectral-analysis-of-extended-sources"]], "Spectral analysis with energy-dependent directional cuts": [[446, "spectral-analysis-with-energy-dependent-directional-cuts"]], "Spectral analysis with the HLI": [[445, "spectral-analysis-with-the-hli"]], "Spectral models": [[476, "spectral-models"], [519, "spectral-models"]], "Spectral models and flux points": [[491, "spectral-models-and-flux-points"]], "Spectral points": [[454, "spectral-points"]], "SpectralIRFModel": [[381, "spectralirfmodel"]], "SpectralModel": [[258, "spectralmodel"]], "Spectrum": [[454, "spectrum"]], "Spectrum dataset": [[472, "spectrum-dataset"]], "SpectrumDataset": [[108, "spectrumdataset"], [382, "spectrumdataset"], [469, "spectrumdataset"]], "SpectrumDatasetMaker": [[174, "spectrumdatasetmaker"]], "SpectrumDatasetOnOff": [[109, "spectrumdatasetonoff"], [382, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[371, "sphinx-gallery-extension"]], "Spiral arm models": [[495, "spiral-arm-models"]], "Stack observations": [[444, "stack-observations"]], "Stacked analysis": [[452, "stacked-analysis"]], "Stacking Multiple Datasets": [[501, "stacking-multiple-datasets"]], "Statistical utility functions": [[567, "statistical-utility-functions"]], "Status": [[380, "status"], [389, "status"]], "Storing the energy dispersion information as a function of sky position": [[509, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[385, "storing-the-results-and-further-studies"]], "Sub-packages": [[494, "sub-packages"]], "Suggestions": [[396, "suggestions"]], "Summary": [[409, "summary"], [410, "summary"], [411, "summary"], [412, "summary"], [413, "summary"], [414, "summary"], [415, "summary"], [416, "summary"], [417, "summary"], [418, "summary"], [419, "summary"], [420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [452, "summary"], [481, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[549, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr1-and-dr2"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[548, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr3"]], "Super exponential cutoff power law model used for 3FGL": [[547, "super-exponential-cutoff-power-law-model-used-for-3fgl"]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[259, "superexpcutoffpowerlaw3fglspectralmodel"]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[260, "superexpcutoffpowerlaw4fgldr3spectralmodel"]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[261, "superexpcutoffpowerlaw4fglspectralmodel"]], "Supernova Remnant Models": [[499, "supernova-remnant-models"]], "Support for Asymmetric IRFs": [[471, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[395, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[487, "survey-map-script"]], "Survey panel plots": [[570, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[262, "temporal-model-registry"]], "TS map estimation": [[448, "ts-map-estimation"]], "TSMapEstimator": [[131, "tsmapestimator"]], "Task List": [[382, "task-list"]], "Task list": [[381, "task-list"], [383, "task-list"], [384, "task-list"], [385, "task-list"], [386, "task-list"], [387, "task-list"]], "Template spatial model": [[529, "template-spatial-model"]], "Template spectral model": [[550, "template-spectral-model"]], "TemplateNDSpatialModel": [[263, "templatendspatialmodel"]], "TemplateNDSpectralModel": [[264, "templatendspectralmodel"]], "TemplateNPredModel": [[265, "templatenpredmodel"]], "TemplatePhaseCurveTemporalModel": [[266, "templatephasecurvetemporalmodel"]], "TemplateSpatialModel": [[267, "templatespatialmodel"]], "TemplateSpectralModel": [[268, "templatespectralmodel"]], "Temporal models": [[476, "temporal-models"], [519, "temporal-models"]], "TemporalModel": [[269, "temporalmodel"]], "Testing of plotting functions": [[370, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[376, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[455, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[400, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[400, "the-gammapy-extra-repository"]], "The index tables": [[502, "the-index-tables"]], "The reflected region finder": [[514, "the-reflected-region-finder"]], "The results for testing energy dependence": [[455, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[455, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[453, "the-setup"], [470, "the-setup"], [478, "the-setup"]], "Theta squared event distribution": [[483, "theta-squared-event-distribution"]], "Time": [[485, "time"]], "Time bin preparation": [[385, "time-bin-preparation"]], "Time bins": [[385, "time-bins"]], "Time differences": [[569, "time-differences"]], "Time format and scale": [[569, "time-format-and-scale"]], "Time handling in Gammapy": [[569, "time-handling-in-gammapy"]], "Time variable source using a lightcurve": [[456, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[197, "timemapaxis"], [473, "timemapaxis"]], "Timing Analysis": [[379, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[280, "timmerkonig-lightcurve-simulator"]], "Troubleshooting": [[405, "troubleshooting"], [565, "troubleshooting"]], "Tutorial overview": [[455, "tutorial-overview"], [480, "tutorial-overview"]], "Tutorials": [[390, "tutorials"], [485, "tutorials"]], "Tutorials Overview": [[402, "tutorials-overview"]], "Type validation": [[397, "type-validation"]], "Types of supported datasets": [[501, "types-of-supported-datasets"]], "Unification of flux estimators?": [[394, "unification-of-flux-estimators"]], "Unify calling interface for models": [[381, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[518, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[398, "use-cases"]], "Use cases / scenarios": [[380, "use-cases-scenarios"]], "User guide": [[506, "user-guide"]], "User perspective": [[377, "user-perspective"]], "Using Anaconda / Miniconda": [[403, "using-anaconda-miniconda"]], "Using Factory Methods": [[473, "using-factory-methods"]], "Using Gammapy": [[406, "using-gammapy"]], "Using Gammapy IRFs": [[471, "using-gammapy-irfs"]], "Using Mamba": [[403, "using-mamba"]], "Using YAML configuration files": [[489, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[445, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[445, "using-data-stored-into-your-computer"]], "Using gammapy.astro.source": [[496, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[500, "using-gammapy-catalog"]], "Using gammapy.data": [[502, "using-gammapy-data"]], "Using gammapy.datasets": [[501, "using-gammapy-datasets"], [504, "using-gammapy-datasets"]], "Using gammapy.estimators": [[503, "using-gammapy-estimators"]], "Using gammapy.irf": [[510, "using-gammapy-irf"]], "Using gammapy.makers": [[513, "using-gammapy-makers"]], "Using gammapy.maps": [[517, "using-gammapy-maps"]], "Using gammapy.modeling": [[562, "using-gammapy-modeling"]], "Using masks": [[469, "using-masks"]], "Using other package managers": [[403, "using-other-package-managers"]], "Using pip": [[403, "using-pip"]], "Using regions": [[514, "using-regions"]], "Using the reflected background estimator": [[514, "using-the-reflected-background-estimator"]], "Utility functions": [[569, "utility-functions"]], "ValleeSpiral": [[38, "valleespiral"]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[495, "velocity-distributions"]], "Venv Environments": [[401, "venv-environments"]], "Version 0.1": [[408, "version-0-1"]], "Version 0.10": [[408, "version-0-10"]], "Version 0.11": [[408, "version-0-11"]], "Version 0.12": [[408, "version-0-12"]], "Version 0.13": [[408, "version-0-13"]], "Version 0.14": [[408, "version-0-14"]], "Version 0.15": [[408, "version-0-15"]], "Version 0.16": [[408, "version-0-16"]], "Version 0.17": [[408, "version-0-17"]], "Version 0.18": [[408, "version-0-18"]], "Version 0.19": [[408, "version-0-19"]], "Version 0.2": [[408, "version-0-2"]], "Version 0.20": [[408, "version-0-20"]], "Version 0.20.1": [[408, "version-0-20-1"]], "Version 0.3": [[408, "version-0-3"]], "Version 0.4": [[408, "version-0-4"]], "Version 0.5": [[408, "version-0-5"]], "Version 0.6": [[408, "version-0-6"]], "Version 0.7": [[408, "version-0-7"]], "Version 0.8": [[408, "version-0-8"]], "Version 0.9": [[408, "version-0-9"]], "Version 1.0": [[408, "version-1-0"]], "Version 1.0.1": [[408, "version-1-0-1"]], "Version 1.0.2": [[408, "version-1-0-2"]], "Version 1.1": [[408, "version-1-1"]], "Version 1.2": [[408, "version-1-2"]], "Version numbering": [[395, "version-numbering"]], "Virtual Environments": [[401, "virtual-environments"]], "Visualing a RegionNDMap": [[518, "visualing-a-regionndmap"]], "Visualization": [[570, "visualization"]], "Visualizing and Plotting": [[473, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[566, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[567, "wstat-counts-statistic"]], "WStatCountsStatistic": [[281, "wstatcountsstatistic"]], "WcsGeom": [[198, "wcsgeom"]], "WcsMap": [[199, "wcsmap"]], "WcsNDMap": [[200, "wcsndmap"]], "What checks and conversions should I do for inputs?": [[370, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[375, "what-is-a-pig"]], "What is this?": [[373, "what-is-this"]], "What next?": [[442, "what-next"], [444, "what-next"], [448, "what-next"], [454, "what-next"], [462, "what-next"], [491, "what-next"]], "What others have": [[380, "what-others-have"]], "What we have": [[378, "what-we-have"], [386, "what-we-have"], [394, "what-we-have"]], "What\u2019s new?": [[410, "what-s-new"], [411, "what-s-new"], [412, "what-s-new"], [413, "what-s-new"], [414, "what-s-new"], [415, "what-s-new"], [416, "what-s-new"], [417, "what-s-new"], [418, "what-s-new"], [419, "what-s-new"], [420, "what-s-new"], [421, "what-s-new"], [423, "what-s-new"], [424, "what-s-new"], [426, "what-s-new"], [427, "what-s-new"], [428, "what-s-new"], [429, "what-s-new"], [430, "what-s-new"], [431, "what-s-new"]], "What\u2019s next": [[489, "whats-next"]], "What\u2019s next?": [[445, "whats-next"]], "Where should I import from?": [[370, "where-should-i-import-from"]], "WobbleRegionsFinder": [[175, "wobbleregionsfinder"]], "Working with event lists": [[502, "working-with-event-lists"]], "Write your own CLI": [[565, "write-your-own-cli"]], "Writing Maps": [[473, "writing-maps"]], "Writing a PIG": [[375, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[518, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[502, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[521, "yaml-representation"], [522, "yaml-representation"], [523, "yaml-representation"], [524, "yaml-representation"], [525, "yaml-representation"], [526, "yaml-representation"], [527, "yaml-representation"], [528, "yaml-representation"], [529, "yaml-representation"], [531, "yaml-representation"], [532, "yaml-representation"], [533, "yaml-representation"], [534, "yaml-representation"], [535, "yaml-representation"], [536, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [539, "yaml-representation"], [540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [550, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [557, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [560, "yaml-representation"]], "YusifovKucuk2004": [[39, "yusifovkucuk2004"]], "YusifovKucuk2004B": [[40, "yusifovkucuk2004b"]], "ZhaoProfile": [[27, "zhaoprofile"]], "absolute_time": [[351, "absolute-time"]], "add_colorbar": [[358, "add-colorbar"]], "add_observed_parameters": [[41, "add-observed-parameters"]], "add_pulsar_parameters": [[42, "add-pulsar-parameters"]], "add_pwn_parameters": [[43, "add-pwn-parameters"]], "add_snr_parameters": [[44, "add-snr-parameters"]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, "analysis-high-level-interface"]], "annotate_heatmap": [[359, "annotate-heatmap"]], "apply_edisp": [[110, "apply-edisp"], [114, "apply-edisp"]], "arbitrary type input and validation": [[397, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[509, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[508, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[508, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[509, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[507, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[345, "assert-quantity-allclose"]], "assert_skycoord_allclose": [[346, "assert-skycoord-allclose"]], "assert_time_allclose": [[347, "assert-time-allclose"]], "astro - Astrophysics": [[1, "astro-astrophysics"]], "cartesian": [[298, "cartesian"]], "cash": [[282, "cash"]], "cash_sum_cython": [[283, "cash-sum-cython"]], "catalog - Source catalogs": [[2, "catalog-source-catalogs"]], "check": [[11, "gammapy-check"]], "codemeta.json": [[396, "codemeta-json"]], "colormap_hess": [[360, "colormap-hess"]], "colormap_milagro": [[361, "colormap-milagro"]], "compound_region_to_regions": [[328, "compound-region-to-regions"]], "compute_chisq": [[284, "compute-chisq"]], "compute_flux_doubling": [[285, "compute-flux-doubling"]], "compute_fpp": [[286, "compute-fpp"]], "compute_fvar": [[287, "compute-fvar"]], "compute_lightcurve_doublingtime": [[132, "compute-lightcurve-doublingtime"]], "compute_lightcurve_fpp": [[133, "compute-lightcurve-fpp"]], "compute_lightcurve_fvar": [[134, "compute-lightcurve-fvar"]], "config": [[11, "gammapy-analysis-config"]], "containment_radius": [[201, "containment-radius"]], "containment_region": [[202, "containment-region"]], "create_cosmic_ray_spectral_model": [[270, "create-cosmic-ray-spectral-model"]], "create_crab_spectral_model": [[271, "create-crab-spectral-model"]], "create_fermi_isotropic_diffuse_model": [[272, "create-fermi-isotropic-diffuse-model"]], "create_map_dataset_from_observation": [[111, "create-map-dataset-from-observation"]], "create_map_dataset_geoms": [[112, "create-map-dataset-geoms"]], "cstat": [[288, "cstat"]], "data": [[397, "data"]], "data - DL3 data and observations": [[3, "data-dl3-data-and-observations"]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, "datasets-reduced-datasets"]], "docs.gammapy.org": [[400, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[320, "draw"]], "earth_location_from_dict": [[307, "earth-location-from-dict"]], "estimate_exposure_reco_energy": [[135, "estimate-exposure-reco-energy"]], "estimators - High level estimators": [[5, "estimators-high-level-estimators"]], "f_cash_root_cython": [[289, "f-cash-root-cython"]], "find_peaks": [[136, "find-peaks"]], "find_peaks_in_flux_map": [[137, "find-peaks-in-flux-map"]], "fov_to_sky": [[299, "fov-to-sky"]], "from_yaml": [[333, "from-yaml"]], "galactic": [[300, "galactic"]], "gamLike": [[493, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[400, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_significance_maps": [[138, "get-combined-significance-maps"]], "get_images_paths": [[334, "get-images-paths"]], "get_irfs_features": [[95, "get-irfs-features"]], "get_random_state": [[321, "get-random-state"]], "get_rebinned_axis": [[139, "get-rebinned-axis"]], "get_wstat_gof_terms": [[290, "get-wstat-gof-terms"]], "get_wstat_mu_bkg": [[291, "get-wstat-mu-bkg"]], "hierarchical_clustering": [[295, "hierarchical-clustering"]], "hstack_columns": [[340, "hstack-columns"]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[273, "integrate-spectrum"]], "interpolate_profile": [[310, "interpolate-profile"]], "interpolation_scale": [[311, "interpolation-scale"]], "irf - Instrument response functions": [[7, "irf-instrument-response-functions"]], "load_irf_dict_from_file": [[161, "load-irf-dict-from-file"]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, "make-base-catalog-galactic"]], "make_catalog_random_positions_cube": [[46, "make-catalog-random-positions-cube"]], "make_catalog_random_positions_sphere": [[47, "make-catalog-random-positions-sphere"]], "make_concentric_annulus_sky_regions": [[329, "make-concentric-annulus-sky-regions"]], "make_counts_rad_max": [[176, "make-counts-rad-max"]], "make_edisp_kernel_map": [[177, "make-edisp-kernel-map"]], "make_edisp_map": [[178, "make-edisp-map"]], "make_effective_livetime_map": [[179, "make-effective-livetime-map"]], "make_map_background_irf": [[180, "make-map-background-irf"]], "make_map_exposure_true_energy": [[181, "make-map-exposure-true-energy"]], "make_observation_time_map": [[182, "make-observation-time-map"]], "make_orthogonal_rectangle_sky_regions": [[330, "make-orthogonal-rectangle-sky-regions"]], "make_path": [[335, "make-path"]], "make_psf_map": [[183, "make-psf-map"]], "make_theta_squared_table": [[184, "make-theta-squared-table"]], "makers - Data reduction": [[8, "makers-data-reduction"]], "maps - Sky maps": [[9, "maps-sky-maps"]], "modeling - Models and fitting": [[10, "modeling-models-and-fitting"]], "motion_since_birth": [[301, "motion-since-birth"]], "mpl_plot_check": [[348, "mpl-plot-check"]], "multiprocessing_manager": [[317, "multiprocessing-manager"]], "norm_bounds_cython": [[292, "norm-bounds-cython"]], "normalize": [[322, "normalize"]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[96, "observatory-locations"]], "pdf": [[323, "pdf"]], "plot_contour_line": [[362, "plot-contour-line"]], "plot_distribution": [[363, "plot-distribution"]], "plot_heatmap": [[364, "plot-heatmap"]], "plot_map_rgb": [[365, "plot-map-rgb"]], "plot_npred_signal": [[366, "plot-npred-signal"]], "plot_spectrum_datasets_off_regions": [[367, "plot-spectrum-datasets-off-regions"]], "plot_theta_squared_table": [[368, "plot-theta-squared-table"]], "polar": [[302, "polar"]], "pydantic": [[397, "pydantic"]], "radial_distributions": [[48, "radial-distributions"]], "read_hermes_cube": [[274, "read-hermes-cube"], [276, "read-hermes-cube"]], "read_yaml": [[336, "read-yaml"]], "recursive_merge_dicts": [[337, "recursive-merge-dicts"]], "region_to_frame": [[331, "region-to-frame"]], "regions_to_compound_region": [[332, "regions-to-compound-region"]], "requires_data": [[349, "requires-data"]], "requires_dependency": [[350, "requires-dependency"]], "resample_energy_edges": [[140, "resample-energy-edges"]], "run": [[11, "gammapy-analysis-run"]], "run_multiprocessing": [[318, "run-multiprocessing"]], "sample_powerlaw": [[324, "sample-powerlaw"]], "sample_sphere": [[325, "sample-sphere"]], "sample_sphere_distance": [[326, "sample-sphere-distance"]], "sample_times": [[327, "sample-times"]], "scale_plot_flux": [[275, "scale-plot-flux"]], "scripts - Command line tools": [[11, "scripts-command-line-tools"]], "select_nested_models": [[277, "select-nested-models"]], "sky_to_fov": [[303, "sky-to-fov"]], "split_dataset": [[113, "split-dataset"], [115, "split-dataset"]], "standard_scaler": [[296, "standard-scaler"]], "standardise_unit": [[355, "standardise-unit"]], "stat_profile_ul_scipy": [[278, "stat-profile-ul-scipy"]], "stats - Statistics": [[12, "stats-statistics"]], "structure_function": [[293, "structure-function"]], "table_row_to_dict": [[341, "table-row-to-dict"]], "table_standardise_units_copy": [[342, "table-standardise-units-copy"]], "table_standardise_units_inplace": [[343, "table-standardise-units-inplace"]], "the base class": [[397, "the-base-class"]], "time_ref_from_dict": [[352, "time-ref-from-dict"]], "time_ref_to_dict": [[353, "time-ref-to-dict"]], "time_relative_to_ref": [[354, "time-relative-to-ref"]], "to_yaml": [[338, "to-yaml"]], "trapz_loglog": [[308, "trapz-loglog"]], "unit_from_fits_image_hdu": [[356, "unit-from-fits-image-hdu"]], "utils - Utilities": [[13, "utils-utilities"]], "velocity_distributions": [[49, "velocity-distributions"]], "velocity_glon_glat": [[304, "velocity-glon-glat"]], "visualization - Plotting features": [[14, "visualization-plotting-features"]], "write_yaml": [[339, "write-yaml"]], "wstat": [[294, "wstat"]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/Variability_estimation", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/Variability_estimation.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[564, "term-1D-Analysis", true]], "3d analysis": [[564, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[309, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[351, "gammapy.utils.time.absolute_time", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[162, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[358, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[564, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[121, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[123, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[150, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[93, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[359, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[110, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[114, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[193, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[116, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[345, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[346, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[347, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[164, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[173, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[167, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[174, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[204, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[312, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[141, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[142, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[143, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[564, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[163, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[298, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[564, "term-Cash", true]], "cash() (in module gammapy.stats)": [[282, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[283, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[279, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[344, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[360, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[361, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.ColumnClass", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[328, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[213, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[284, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[285, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[286, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[287, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[132, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[133, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[116, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[119, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[120, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[127, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[129, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[130, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[215, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[216, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[217, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[201, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[202, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[98, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[116, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[119, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[120, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[127, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[130, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[193, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[239, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[203, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[120, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[203, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[239, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[204, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[101, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[108, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[186, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[187, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[188, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[190, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[193, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[195, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[196, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[198, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[199, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[200, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[238, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[255, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[270, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[271, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[272, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[111, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[112, "gammapy.datasets.create_map_dataset_geoms", false]], "crop() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[288, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[297, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[155, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[203, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[564, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[98, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[97, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[99, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[163, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.dict", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[219, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[564, "term-DL3", true]], "dl4": [[564, "term-DL4", true]], "dl5": [[564, "term-DL5", true]], "dl6": [[564, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[320, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[94, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[307, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[221, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[564, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[145, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[146, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[144, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[145, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[146, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[147, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[149, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[163, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[120, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[120, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[120, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[116, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[120, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[130, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[130, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[564, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[119, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[117, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[219, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[233, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[253, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[254, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[156, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[156, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[102, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[107, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[102, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[107, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[128, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[289, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[205, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[206, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[121, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[122, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[123, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[100, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[124, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[564, "term-FoV", true]], "fov background": [[564, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[299, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[150, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[164, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[239, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[198, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[191, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[144, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[146, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[100, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[101, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[108, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[218, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[219, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[233, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[238, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[239, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[240, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[244, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[253, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[254, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[255, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[257, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[258, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[265, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[269, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[209, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[211, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[203, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[144, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[149, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[155, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[157, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[160, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[146, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[157, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[160, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[187, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[188, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[190, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[194, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[196, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[199, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[200, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[101, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[108, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[197, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[197, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[186, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[188, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[200, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[101, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[108, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[121, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[123, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[141, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[142, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[143, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[144, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[146, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[147, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[149, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[151, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[152, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[158, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[154, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[156, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[157, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[159, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[160, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[185, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[186, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[187, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[188, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[190, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[194, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[195, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[196, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[198, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[199, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[200, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[186, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[198, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[159, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[121, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[123, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[90, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[219, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[233, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[239, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[244, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[253, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[254, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[255, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[257, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[258, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[265, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[269, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[147, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[219, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[244, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[253, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[257, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[219, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[195, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[155, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[91, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[121, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[123, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[187, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[188, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[189, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[190, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[196, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[199, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[200, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[203, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[209, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[211, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[123, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[141, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[142, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[143, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[144, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[147, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[149, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[151, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[158, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[154, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[156, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[159, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[189, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[191, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[196, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[197, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[191, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[197, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[197, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[188, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[218, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[240, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[333, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[239, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[564, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[300, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[185, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[194, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[93, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[105, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[106, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[305, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[93, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[334, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[186, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[95, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[116, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[321, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[116, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[203, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[105, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[290, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[291, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.groups", false]], "gti": [[564, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[145, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[146, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[152, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[305, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[295, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[564, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[186, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[187, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[188, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[340, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[91, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[126, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[127, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[305, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[273, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[310, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[311, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[319, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[564, "term-IRF", true]], "irf (class in gammapy.irf)": [[151, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[153, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[152, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.is_norm", false]], "is_norm (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.is_norm", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[564, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[172, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[162, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[189, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[306, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[128, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[305, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[161, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "lon (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[167, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[164, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[164, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[329, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[167, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[168, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[168, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[169, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[176, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[162, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[163, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[164, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[167, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[167, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[177, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[178, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[179, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[164, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[167, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[167, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[180, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[181, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[172, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[167, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[182, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[330, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[335, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[167, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[183, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[184, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[564, "term-Maker", true]], "maker (class in gammapy.makers)": [[166, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[165, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[190, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[191, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[192, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[193, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[101, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[102, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[167, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[357, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[194, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[98, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[145, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[146, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[152, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[204, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.max", false]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[204, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.message", false]], "met": [[564, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[164, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[204, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[313, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[314, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[236, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[301, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[348, "gammapy.utils.testing.mpl_plot_check", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[317, "gammapy.utils.parallel.multiprocessing_manager", false]], "muoneff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.muoneff", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[92, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[163, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[315, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[98, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[292, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_max (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.norm_max", false]], "norm_max (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.norm_max", false]], "norm_max (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.norm_max", false]], "norm_min (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.norm_min", false]], "norm_min (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.norm_min", false]], "norm_min (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.norm_min", false]], "norm_n_values (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.norm_n_values", false]], "norm_parameters (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.norm_parameters", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm_ul", false]], "norm_values (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.norm_values", false]], "norm_values (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.norm_values", false]], "norm_values (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.norm_values", false]], "normalize() (gammapy.estimators.imageprofile method)": [[126, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[322, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "obs_info (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.obs_info", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[107, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observations (class in gammapy.data)": [[91, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[92, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[90, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[96, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[163, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[105, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[106, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[207, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[92, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[163, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[208, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[209, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[239, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[239, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[158, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[305, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[323, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[126, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[168, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[197, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[126, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[357, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[362, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[203, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[363, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[126, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[364, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[365, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[366, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[357, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[367, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[368, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[94, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[93, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[94, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[302, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[316, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[210, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[211, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[126, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[126, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.projection", false]], "psf": [[564, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[154, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[155, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[155, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[156, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[157, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[150, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[159, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[90, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[93, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[99, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[100, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[101, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[105, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[108, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[121, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[123, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[141, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[142, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[143, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[144, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[146, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[147, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[149, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[151, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[152, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[158, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[154, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[155, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[156, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[157, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[159, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[160, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[187, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[188, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[190, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[194, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[196, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[199, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[200, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[218, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[240, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[105, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[105, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[274, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[276, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[105, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[105, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[336, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[239, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.reassign", false]], "reco energy": [[564, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[160, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[337, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[564, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[169, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[170, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[331, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[195, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[196, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[332, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[171, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[145, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[146, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[152, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[349, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[350, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.reverse", false]], "ring background": [[564, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[172, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[564, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[92, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[102, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[107, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[116, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[119, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[120, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[127, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[130, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[162, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[163, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[164, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[166, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[167, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[168, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[169, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[170, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[171, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[172, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[173, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[175, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[344, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[318, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[163, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[173, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[319, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[319, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[102, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[107, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[102, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[107, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[324, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[102, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[107, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[102, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[107, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[325, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[326, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[327, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[275, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[309, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[203, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[277, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[116, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[116, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[119, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[120, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[127, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[129, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[130, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[130, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[203, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[203, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[92, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[303, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[126, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[249, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[250, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[108, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[174, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[109, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[113, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[115, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[564, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[296, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[355, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[98, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[278, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[98, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[293, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[204, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[341, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[342, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[343, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[98, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[105, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[106, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[116, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[119, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[120, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[127, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[129, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[130, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[145, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[146, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[152, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[162, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[163, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[164, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[166, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[167, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[168, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[169, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[172, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[173, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[174, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[262, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[352, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[353, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[354, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[233, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[254, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[269, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[197, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[280, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[98, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[204, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[239, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[207, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[193, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[338, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[308, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[564, "term-True-Energy", true]], "ts": [[564, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[239, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[239, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[356, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[304, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[198, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[199, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[200, "gammapy.maps.WcsNDMap", false]], "width (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[175, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[206, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[339, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[564, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[294, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[281, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[126, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[126, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[126, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationTable"], [91, 1, 1, "", "Observations"], [92, 1, 1, "", "ObservationsEventsSampler"], [93, 1, 1, "", "PointingInfo"], [94, 1, 1, "", "PointingMode"], [95, 4, 1, "", "get_irfs_features"], [96, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"], [83, 3, 1, "", "write"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "muoneff"], [88, 2, 1, "", "obs_info"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationTable": [[90, 2, 1, "", "ColumnClass"], [90, 3, 1, "", "add_column"], [90, 3, 1, "", "add_columns"], [90, 3, 1, "", "add_index"], [90, 3, 1, "", "add_row"], [90, 3, 1, "", "argsort"], [90, 3, 1, "", "as_array"], [90, 2, 1, "", "colnames"], [90, 3, 1, "", "convert_bytestring_to_unicode"], [90, 3, 1, "", "convert_unicode_to_bytestring"], [90, 3, 1, "", "copy"], [90, 2, 1, "", "dtype"], [90, 3, 1, "", "field"], [90, 3, 1, "", "filled"], [90, 3, 1, "", "from_pandas"], [90, 3, 1, "", "group_by"], [90, 2, 1, "", "groups"], [90, 2, 1, "", "has_masked_columns"], [90, 2, 1, "", "has_masked_values"], [90, 2, 1, "", "has_mixin_columns"], [90, 2, 1, "", "iloc"], [90, 3, 1, "", "index_column"], [90, 3, 1, "", "index_mode"], [90, 2, 1, "", "indices"], [90, 2, 1, "", "info"], [90, 3, 1, "", "insert_row"], [90, 3, 1, "", "items"], [90, 3, 1, "", "itercols"], [90, 3, 1, "", "iterrows"], [90, 3, 1, "", "keep_columns"], [90, 3, 1, "", "keys"], [90, 2, 1, "", "loc"], [90, 2, 1, "", "loc_indices"], [90, 2, 1, "", "mask"], [90, 2, 1, "", "masked"], [90, 2, 1, "", "meta"], [90, 3, 1, "", "more"], [90, 3, 1, "", "pformat"], [90, 3, 1, "", "pformat_all"], [90, 2, 1, "", "pointing_galactic"], [90, 2, 1, "", "pointing_radec"], [90, 3, 1, "", "pprint"], [90, 3, 1, "", "pprint_all"], [90, 2, 1, "", "pprint_exclude_names"], [90, 2, 1, "", "pprint_include_names"], [90, 3, 1, "", "read"], [90, 3, 1, "", "remove_column"], [90, 3, 1, "", "remove_columns"], [90, 3, 1, "", "remove_indices"], [90, 3, 1, "", "remove_row"], [90, 3, 1, "", "remove_rows"], [90, 3, 1, "", "rename_column"], [90, 3, 1, "", "rename_columns"], [90, 3, 1, "", "replace_column"], [90, 3, 1, "", "reverse"], [90, 3, 1, "", "round"], [90, 3, 1, "", "select_obs_id"], [90, 3, 1, "", "select_observations"], [90, 3, 1, "", "select_range"], [90, 3, 1, "", "select_sky_circle"], [90, 3, 1, "", "select_time_range"], [90, 3, 1, "", "show_in_browser"], [90, 3, 1, "", "show_in_notebook"], [90, 3, 1, "", "sort"], [90, 3, 1, "", "summary"], [90, 2, 1, "", "time_ref"], [90, 2, 1, "", "time_start"], [90, 2, 1, "", "time_stop"], [90, 3, 1, "", "to_pandas"], [90, 3, 1, "", "update"], [90, 3, 1, "", "values"], [90, 3, 1, "", "values_equal"], [90, 2, 1, "", "write"]], "gammapy.data.Observations": [[91, 3, 1, "", "append"], [91, 3, 1, "", "clear"], [91, 3, 1, "", "count"], [91, 3, 1, "", "extend"], [91, 3, 1, "", "from_stack"], [91, 3, 1, "", "group_by_label"], [91, 2, 1, "", "ids"], [91, 3, 1, "", "in_memory_generator"], [91, 3, 1, "", "index"], [91, 3, 1, "", "insert"], [91, 3, 1, "", "pop"], [91, 3, 1, "", "remove"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[92, 2, 1, "", "n_jobs"], [92, 2, 1, "", "parallel_backend"], [92, 3, 1, "", "run"], [92, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[93, 2, 1, "", "altaz"], [93, 2, 1, "", "altaz_frame"], [93, 2, 1, "", "altaz_from_table"], [93, 3, 1, "", "altaz_interpolate"], [93, 2, 1, "", "duration"], [93, 3, 1, "", "get_altaz"], [93, 3, 1, "", "get_icrs"], [93, 2, 1, "", "location"], [93, 2, 1, "", "radec"], [93, 3, 1, "", "read"], [93, 2, 1, "", "time"], [93, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[94, 2, 1, "", "DRIFT"], [94, 2, 1, "", "POINTING"]], "gammapy.datasets": [[97, 5, 1, "", "DATASET_REGISTRY"], [98, 1, 1, "", "Dataset"], [99, 1, 1, "", "Datasets"], [100, 1, 1, "", "FluxPointsDataset"], [101, 1, 1, "", "MapDataset"], [102, 1, 1, "", "MapDatasetEventSampler"], [103, 1, 1, "", "MapDatasetMetaData"], [104, 1, 1, "", "MapDatasetOnOff"], [105, 1, 1, "", "OGIPDatasetReader"], [106, 1, 1, "", "OGIPDatasetWriter"], [107, 1, 1, "", "ObservationEventSampler"], [108, 1, 1, "", "SpectrumDataset"], [109, 1, 1, "", "SpectrumDatasetOnOff"], [110, 4, 1, "", "apply_edisp"], [111, 4, 1, "", "create_map_dataset_from_observation"], [112, 4, 1, "", "create_map_dataset_geoms"], [113, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[98, 3, 1, "", "copy"], [98, 2, 1, "", "mask"], [98, 2, 1, "", "name"], [98, 3, 1, "", "stat_array"], [98, 3, 1, "", "stat_sum"], [98, 2, 1, "", "tag"], [98, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[99, 3, 1, "", "append"], [99, 3, 1, "", "clear"], [99, 2, 1, "", "contributes_to_stat"], [99, 3, 1, "", "copy"], [99, 3, 1, "", "count"], [99, 2, 1, "", "energy_axes_are_aligned"], [99, 2, 1, "", "energy_ranges"], [99, 3, 1, "", "extend"], [99, 2, 1, "", "gti"], [99, 3, 1, "", "index"], [99, 3, 1, "", "info_table"], [99, 3, 1, "", "insert"], [99, 2, 1, "", "is_all_same_energy_shape"], [99, 2, 1, "", "is_all_same_shape"], [99, 2, 1, "", "is_all_same_type"], [99, 2, 1, "", "meta_table"], [99, 2, 1, "", "models"], [99, 2, 1, "", "names"], [99, 2, 1, "", "parameters"], [99, 3, 1, "", "pop"], [99, 3, 1, "", "read"], [99, 3, 1, "", "remove"], [99, 3, 1, "", "reverse"], [99, 3, 1, "", "select_time"], [99, 3, 1, "", "slice_by_energy"], [99, 3, 1, "", "stack_reduce"], [99, 3, 1, "", "stat_sum"], [99, 3, 1, "", "to_spectrum_datasets"], [99, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[100, 2, 1, "", "available_stat_type"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "data_shape"], [100, 3, 1, "", "flux_pred"], [100, 3, 1, "", "from_dict"], [100, 2, 1, "", "gti"], [100, 2, 1, "", "mask"], [100, 2, 1, "", "mask_safe"], [100, 2, 1, "", "mask_valid"], [100, 2, 1, "", "models"], [100, 2, 1, "", "name"], [100, 3, 1, "", "plot_fit"], [100, 3, 1, "", "plot_residuals"], [100, 3, 1, "", "plot_spectrum"], [100, 3, 1, "", "read"], [100, 3, 1, "", "residuals"], [100, 3, 1, "", "stat_array"], [100, 3, 1, "", "stat_sum"], [100, 2, 1, "", "stat_type"], [100, 2, 1, "", "tag"], [100, 3, 1, "", "to_dict"], [100, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[101, 2, 1, "", "background"], [101, 2, 1, "", "background_model"], [101, 3, 1, "", "copy"], [101, 2, 1, "", "counts"], [101, 3, 1, "", "create"], [101, 3, 1, "", "cutout"], [101, 2, 1, "", "data_shape"], [101, 3, 1, "", "downsample"], [101, 2, 1, "", "edisp"], [101, 2, 1, "", "energy_range"], [101, 2, 1, "", "energy_range_fit"], [101, 2, 1, "", "energy_range_safe"], [101, 2, 1, "", "energy_range_total"], [101, 2, 1, "", "evaluators"], [101, 2, 1, "", "excess"], [101, 2, 1, "", "exposure"], [101, 3, 1, "", "fake"], [101, 3, 1, "", "from_dict"], [101, 3, 1, "", "from_geoms"], [101, 3, 1, "", "from_hdulist"], [101, 2, 1, "", "geoms"], [101, 2, 1, "", "gti"], [101, 3, 1, "", "info_dict"], [101, 2, 1, "", "mask"], [101, 2, 1, "", "mask_fit"], [101, 2, 1, "", "mask_fit_image"], [101, 2, 1, "", "mask_image"], [101, 2, 1, "", "mask_safe"], [101, 2, 1, "", "mask_safe_edisp"], [101, 2, 1, "", "mask_safe_image"], [101, 2, 1, "", "mask_safe_psf"], [101, 2, 1, "", "meta"], [101, 2, 1, "", "meta_table"], [101, 2, 1, "", "models"], [101, 2, 1, "", "name"], [101, 3, 1, "", "npred"], [101, 3, 1, "", "npred_background"], [101, 3, 1, "", "npred_signal"], [101, 3, 1, "", "pad"], [101, 3, 1, "", "peek"], [101, 3, 1, "", "plot_residuals"], [101, 3, 1, "", "plot_residuals_spatial"], [101, 3, 1, "", "plot_residuals_spectral"], [101, 2, 1, "", "psf"], [101, 3, 1, "", "read"], [101, 3, 1, "", "resample_energy_axis"], [101, 3, 1, "", "reset_data_cache"], [101, 3, 1, "", "residuals"], [101, 3, 1, "", "slice_by_energy"], [101, 3, 1, "", "slice_by_idx"], [101, 3, 1, "", "stack"], [101, 3, 1, "", "stat_array"], [101, 3, 1, "", "stat_sum"], [101, 2, 1, "", "stat_type"], [101, 2, 1, "", "tag"], [101, 3, 1, "", "to_dict"], [101, 3, 1, "", "to_hdulist"], [101, 3, 1, "", "to_image"], [101, 3, 1, "", "to_masked"], [101, 3, 1, "", "to_region_map_dataset"], [101, 3, 1, "", "to_spectrum_dataset"], [101, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[102, 3, 1, "", "event_det_coords"], [102, 3, 1, "", "event_list_meta"], [102, 3, 1, "", "run"], [102, 3, 1, "", "sample_background"], [102, 3, 1, "", "sample_edisp"], [102, 3, 1, "", "sample_psf"], [102, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[103, 3, 1, "", "construct"], [103, 3, 1, "", "copy"], [103, 3, 1, "", "dict"], [103, 3, 1, "", "from_header"], [103, 3, 1, "", "from_orm"], [103, 3, 1, "", "json"], [103, 2, 1, "", "model_computed_fields"], [103, 2, 1, "", "model_config"], [103, 3, 1, "", "model_construct"], [103, 3, 1, "", "model_copy"], [103, 3, 1, "", "model_dump"], [103, 3, 1, "", "model_dump_json"], [103, 2, 1, "", "model_extra"], [103, 2, 1, "", "model_fields"], [103, 2, 1, "", "model_fields_set"], [103, 3, 1, "", "model_json_schema"], [103, 3, 1, "", "model_parametrized_name"], [103, 3, 1, "", "model_post_init"], [103, 3, 1, "", "model_rebuild"], [103, 3, 1, "", "model_validate"], [103, 3, 1, "", "model_validate_json"], [103, 3, 1, "", "model_validate_strings"], [103, 3, 1, "", "parse_file"], [103, 3, 1, "", "parse_obj"], [103, 3, 1, "", "parse_raw"], [103, 3, 1, "", "schema"], [103, 3, 1, "", "schema_json"], [103, 3, 1, "", "stack"], [103, 2, 1, "", "tag"], [103, 3, 1, "", "to_header"], [103, 3, 1, "", "to_yaml"], [103, 3, 1, "", "update_forward_refs"], [103, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[104, 2, 1, "", "alpha"], [104, 2, 1, "", "background"], [104, 2, 1, "", "background_model"], [104, 3, 1, "", "copy"], [104, 2, 1, "", "counts"], [104, 3, 1, "", "create"], [104, 3, 1, "", "cutout"], [104, 2, 1, "", "data_shape"], [104, 3, 1, "", "downsample"], [104, 2, 1, "", "edisp"], [104, 2, 1, "", "energy_range"], [104, 2, 1, "", "energy_range_fit"], [104, 2, 1, "", "energy_range_safe"], [104, 2, 1, "", "energy_range_total"], [104, 2, 1, "", "evaluators"], [104, 2, 1, "", "excess"], [104, 2, 1, "", "exposure"], [104, 3, 1, "", "fake"], [104, 3, 1, "", "from_dict"], [104, 3, 1, "", "from_geoms"], [104, 3, 1, "", "from_hdulist"], [104, 3, 1, "", "from_map_dataset"], [104, 2, 1, "", "geoms"], [104, 2, 1, "", "gti"], [104, 3, 1, "", "info_dict"], [104, 2, 1, "", "mask"], [104, 2, 1, "", "mask_fit"], [104, 2, 1, "", "mask_fit_image"], [104, 2, 1, "", "mask_image"], [104, 2, 1, "", "mask_safe"], [104, 2, 1, "", "mask_safe_edisp"], [104, 2, 1, "", "mask_safe_image"], [104, 2, 1, "", "mask_safe_psf"], [104, 2, 1, "", "meta"], [104, 2, 1, "", "meta_table"], [104, 2, 1, "", "models"], [104, 2, 1, "", "name"], [104, 3, 1, "", "npred"], [104, 3, 1, "", "npred_background"], [104, 3, 1, "", "npred_off"], [104, 3, 1, "", "npred_signal"], [104, 3, 1, "", "pad"], [104, 3, 1, "", "peek"], [104, 3, 1, "", "plot_residuals"], [104, 3, 1, "", "plot_residuals_spatial"], [104, 3, 1, "", "plot_residuals_spectral"], [104, 2, 1, "", "psf"], [104, 3, 1, "", "read"], [104, 3, 1, "", "resample_energy_axis"], [104, 3, 1, "", "reset_data_cache"], [104, 3, 1, "", "residuals"], [104, 3, 1, "", "slice_by_energy"], [104, 3, 1, "", "slice_by_idx"], [104, 3, 1, "", "stack"], [104, 3, 1, "", "stat_array"], [104, 3, 1, "", "stat_sum"], [104, 2, 1, "", "stat_type"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_dict"], [104, 3, 1, "", "to_hdulist"], [104, 3, 1, "", "to_image"], [104, 3, 1, "", "to_map_dataset"], [104, 3, 1, "", "to_masked"], [104, 3, 1, "", "to_region_map_dataset"], [104, 3, 1, "", "to_spectrum_dataset"], [104, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[105, 3, 1, "", "get_filenames"], [105, 3, 1, "", "get_valid_path"], [105, 3, 1, "", "read"], [105, 3, 1, "", "read_arf"], [105, 3, 1, "", "read_bkg"], [105, 3, 1, "", "read_pha"], [105, 3, 1, "", "read_rmf"], [105, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[106, 3, 1, "", "get_filenames"], [106, 3, 1, "", "get_ogip_meta"], [106, 2, 1, "", "tag"], [106, 3, 1, "", "to_counts_hdulist"], [106, 3, 1, "", "write"], [106, 3, 1, "", "write_arf"], [106, 3, 1, "", "write_bkg"], [106, 3, 1, "", "write_pha"], [106, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[107, 3, 1, "", "event_det_coords"], [107, 3, 1, "", "event_list_meta"], [107, 3, 1, "", "run"], [107, 3, 1, "", "sample_background"], [107, 3, 1, "", "sample_edisp"], [107, 3, 1, "", "sample_psf"], [107, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[108, 2, 1, "", "background"], [108, 2, 1, "", "background_model"], [108, 3, 1, "", "copy"], [108, 2, 1, "", "counts"], [108, 3, 1, "", "create"], [108, 3, 1, "", "cutout"], [108, 2, 1, "", "data_shape"], [108, 3, 1, "", "downsample"], [108, 2, 1, "", "edisp"], [108, 2, 1, "", "energy_range"], [108, 2, 1, "", "energy_range_fit"], [108, 2, 1, "", "energy_range_safe"], [108, 2, 1, "", "energy_range_total"], [108, 2, 1, "", "evaluators"], [108, 2, 1, "", "excess"], [108, 2, 1, "", "exposure"], [108, 3, 1, "", "fake"], [108, 3, 1, "", "from_dict"], [108, 3, 1, "", "from_geoms"], [108, 3, 1, "", "from_hdulist"], [108, 2, 1, "", "geoms"], [108, 2, 1, "", "gti"], [108, 3, 1, "", "info_dict"], [108, 2, 1, "", "mask"], [108, 2, 1, "", "mask_fit"], [108, 2, 1, "", "mask_fit_image"], [108, 2, 1, "", "mask_image"], [108, 2, 1, "", "mask_safe"], [108, 2, 1, "", "mask_safe_edisp"], [108, 2, 1, "", "mask_safe_image"], [108, 2, 1, "", "mask_safe_psf"], [108, 2, 1, "", "meta"], [108, 2, 1, "", "meta_table"], [108, 2, 1, "", "models"], [108, 2, 1, "", "name"], [108, 3, 1, "", "npred"], [108, 3, 1, "", "npred_background"], [108, 3, 1, "", "npred_signal"], [108, 3, 1, "", "pad"], [108, 3, 1, "", "peek"], [108, 3, 1, "", "plot_counts"], [108, 3, 1, "", "plot_excess"], [108, 3, 1, "", "plot_fit"], [108, 3, 1, "", "plot_masks"], [108, 3, 1, "", "plot_residuals"], [108, 3, 1, "", "plot_residuals_spatial"], [108, 3, 1, "", "plot_residuals_spectral"], [108, 2, 1, "", "psf"], [108, 3, 1, "", "read"], [108, 3, 1, "", "resample_energy_axis"], [108, 3, 1, "", "reset_data_cache"], [108, 3, 1, "", "residuals"], [108, 3, 1, "", "slice_by_energy"], [108, 3, 1, "", "slice_by_idx"], [108, 3, 1, "", "stack"], [108, 3, 1, "", "stat_array"], [108, 3, 1, "", "stat_sum"], [108, 2, 1, "", "stat_type"], [108, 2, 1, "", "tag"], [108, 3, 1, "", "to_dict"], [108, 3, 1, "", "to_hdulist"], [108, 3, 1, "", "to_image"], [108, 3, 1, "", "to_masked"], [108, 3, 1, "", "to_region_map_dataset"], [108, 3, 1, "", "to_spectrum_dataset"], [108, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[109, 2, 1, "", "alpha"], [109, 2, 1, "", "background"], [109, 2, 1, "", "background_model"], [109, 3, 1, "", "copy"], [109, 2, 1, "", "counts"], [109, 3, 1, "", "create"], [109, 3, 1, "", "cutout"], [109, 2, 1, "", "data_shape"], [109, 3, 1, "", "downsample"], [109, 2, 1, "", "edisp"], [109, 2, 1, "", "energy_range"], [109, 2, 1, "", "energy_range_fit"], [109, 2, 1, "", "energy_range_safe"], [109, 2, 1, "", "energy_range_total"], [109, 2, 1, "", "evaluators"], [109, 2, 1, "", "excess"], [109, 2, 1, "", "exposure"], [109, 3, 1, "", "fake"], [109, 3, 1, "", "from_dict"], [109, 3, 1, "", "from_geoms"], [109, 3, 1, "", "from_hdulist"], [109, 3, 1, "", "from_map_dataset"], [109, 3, 1, "", "from_spectrum_dataset"], [109, 2, 1, "", "geoms"], [109, 2, 1, "", "gti"], [109, 3, 1, "", "info_dict"], [109, 2, 1, "", "mask"], [109, 2, 1, "", "mask_fit"], [109, 2, 1, "", "mask_fit_image"], [109, 2, 1, "", "mask_image"], [109, 2, 1, "", "mask_safe"], [109, 2, 1, "", "mask_safe_edisp"], [109, 2, 1, "", "mask_safe_image"], [109, 2, 1, "", "mask_safe_psf"], [109, 2, 1, "", "meta"], [109, 2, 1, "", "meta_table"], [109, 2, 1, "", "models"], [109, 2, 1, "", "name"], [109, 3, 1, "", "npred"], [109, 3, 1, "", "npred_background"], [109, 3, 1, "", "npred_off"], [109, 3, 1, "", "npred_signal"], [109, 3, 1, "", "pad"], [109, 3, 1, "", "peek"], [109, 3, 1, "", "plot_counts"], [109, 3, 1, "", "plot_excess"], [109, 3, 1, "", "plot_fit"], [109, 3, 1, "", "plot_masks"], [109, 3, 1, "", "plot_residuals"], [109, 3, 1, "", "plot_residuals_spatial"], [109, 3, 1, "", "plot_residuals_spectral"], [109, 2, 1, "", "psf"], [109, 3, 1, "", "read"], [109, 3, 1, "", "resample_energy_axis"], [109, 3, 1, "", "reset_data_cache"], [109, 3, 1, "", "residuals"], [109, 3, 1, "", "slice_by_energy"], [109, 3, 1, "", "slice_by_idx"], [109, 3, 1, "", "stack"], [109, 3, 1, "", "stat_array"], [109, 3, 1, "", "stat_sum"], [109, 2, 1, "", "stat_type"], [109, 2, 1, "", "tag"], [109, 3, 1, "", "to_dict"], [109, 3, 1, "", "to_hdulist"], [109, 3, 1, "", "to_image"], [109, 3, 1, "", "to_map_dataset"], [109, 3, 1, "", "to_masked"], [109, 3, 1, "", "to_region_map_dataset"], [109, 3, 1, "", "to_spectrum_dataset"], [109, 3, 1, "", "write"]], "gammapy.datasets.utils": [[114, 4, 1, "", "apply_edisp"], [115, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[116, 1, 1, "", "ASmoothMapEstimator"], [117, 5, 1, "", "ESTIMATOR_REGISTRY"], [118, 1, 1, "", "EnergyDependentMorphologyEstimator"], [119, 1, 1, "", "Estimator"], [120, 1, 1, "", "ExcessMapEstimator"], [121, 1, 1, "", "FluxMaps"], [122, 1, 1, "", "FluxMetaData"], [123, 1, 1, "", "FluxPoints"], [124, 1, 1, "", "FluxPointsEstimator"], [125, 1, 1, "", "FluxProfileEstimator"], [126, 1, 1, "", "ImageProfile"], [127, 1, 1, "", "ImageProfileEstimator"], [128, 1, 1, "", "LightCurveEstimator"], [129, 1, 1, "", "ParameterEstimator"], [130, 1, 1, "", "SensitivityEstimator"], [131, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[116, 2, 1, "", "config_parameters"], [116, 3, 1, "", "copy"], [116, 3, 1, "", "estimate_maps"], [116, 3, 1, "", "get_kernels"], [116, 3, 1, "", "get_scales"], [116, 3, 1, "", "run"], [116, 3, 1, "", "selection_all"], [116, 2, 1, "", "selection_optional"], [116, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[118, 2, 1, "", "config_parameters"], [118, 3, 1, "", "copy"], [118, 3, 1, "", "estimate_energy_dependence"], [118, 3, 1, "", "run"], [118, 2, 1, "", "selection_optional"], [118, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[119, 2, 1, "", "config_parameters"], [119, 3, 1, "", "copy"], [119, 3, 1, "", "run"], [119, 2, 1, "", "selection_optional"], [119, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 2, 1, "", "correlation_radius"], [120, 3, 1, "", "estimate_excess_map"], [120, 3, 1, "", "estimate_exposure_reco_energy"], [120, 3, 1, "", "estimate_kernel"], [120, 3, 1, "", "estimate_mask_default"], [120, 3, 1, "", "run"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[121, 3, 1, "", "all_quantities"], [121, 2, 1, "", "available_quantities"], [121, 3, 1, "", "copy"], [121, 2, 1, "", "counts"], [121, 2, 1, "", "dnde"], [121, 2, 1, "", "dnde_err"], [121, 2, 1, "", "dnde_errn"], [121, 2, 1, "", "dnde_errp"], [121, 2, 1, "", "dnde_ref"], [121, 2, 1, "", "dnde_scan_values"], [121, 2, 1, "", "dnde_ul"], [121, 2, 1, "", "e2dnde"], [121, 2, 1, "", "e2dnde_err"], [121, 2, 1, "", "e2dnde_errn"], [121, 2, 1, "", "e2dnde_errp"], [121, 2, 1, "", "e2dnde_ref"], [121, 2, 1, "", "e2dnde_ul"], [121, 2, 1, "", "eflux"], [121, 2, 1, "", "eflux_err"], [121, 2, 1, "", "eflux_errn"], [121, 2, 1, "", "eflux_errp"], [121, 2, 1, "", "eflux_ref"], [121, 2, 1, "", "eflux_ul"], [121, 2, 1, "", "energy_axis"], [121, 2, 1, "", "energy_max"], [121, 2, 1, "", "energy_min"], [121, 2, 1, "", "energy_ref"], [121, 2, 1, "", "filter_success_nan"], [121, 2, 1, "", "flux"], [121, 2, 1, "", "flux_err"], [121, 2, 1, "", "flux_errn"], [121, 2, 1, "", "flux_errp"], [121, 2, 1, "", "flux_ref"], [121, 2, 1, "", "flux_sensitivity"], [121, 2, 1, "", "flux_ul"], [121, 3, 1, "", "from_hdulist"], [121, 3, 1, "", "from_maps"], [121, 3, 1, "", "from_stack"], [121, 2, 1, "", "geom"], [121, 3, 1, "", "get_flux_points"], [121, 2, 1, "", "has_any_ts"], [121, 2, 1, "", "has_stat_profiles"], [121, 2, 1, "", "has_success"], [121, 2, 1, "", "has_ul"], [121, 2, 1, "", "is_convertible_to_flux_sed_type"], [121, 2, 1, "", "is_ul"], [121, 3, 1, "", "iter_by_axis"], [121, 2, 1, "", "n_dof"], [121, 2, 1, "", "n_sigma"], [121, 2, 1, "", "n_sigma_ul"], [121, 2, 1, "", "niter"], [121, 2, 1, "", "norm"], [121, 2, 1, "", "norm_err"], [121, 2, 1, "", "norm_errn"], [121, 2, 1, "", "norm_errp"], [121, 2, 1, "", "norm_sensitivity"], [121, 2, 1, "", "norm_ul"], [121, 2, 1, "", "npred"], [121, 2, 1, "", "npred_background"], [121, 2, 1, "", "npred_excess"], [121, 2, 1, "", "npred_excess_err"], [121, 2, 1, "", "npred_excess_errn"], [121, 2, 1, "", "npred_excess_errp"], [121, 2, 1, "", "npred_excess_ref"], [121, 2, 1, "", "npred_excess_ul"], [121, 3, 1, "", "read"], [121, 2, 1, "", "reference_model"], [121, 2, 1, "", "reference_model_default"], [121, 2, 1, "", "reference_spectral_model"], [121, 2, 1, "", "sed_type_init"], [121, 2, 1, "", "sed_type_plot_default"], [121, 3, 1, "", "slice_by_coord"], [121, 3, 1, "", "slice_by_energy"], [121, 3, 1, "", "slice_by_idx"], [121, 3, 1, "", "slice_by_time"], [121, 2, 1, "", "sqrt_ts"], [121, 2, 1, "", "sqrt_ts_threshold_ul"], [121, 2, 1, "", "stat"], [121, 2, 1, "", "stat_null"], [121, 2, 1, "", "stat_scan"], [121, 2, 1, "", "success"], [121, 3, 1, "", "to_hdulist"], [121, 3, 1, "", "to_maps"], [121, 2, 1, "", "ts"], [121, 2, 1, "", "ts_scan"], [121, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[122, 3, 1, "", "construct"], [122, 3, 1, "", "copy"], [122, 3, 1, "", "dict"], [122, 3, 1, "", "from_header"], [122, 3, 1, "", "from_orm"], [122, 3, 1, "", "json"], [122, 2, 1, "", "model_computed_fields"], [122, 2, 1, "", "model_config"], [122, 3, 1, "", "model_construct"], [122, 3, 1, "", "model_copy"], [122, 3, 1, "", "model_dump"], [122, 3, 1, "", "model_dump_json"], [122, 2, 1, "", "model_extra"], [122, 2, 1, "", "model_fields"], [122, 2, 1, "", "model_fields_set"], [122, 3, 1, "", "model_json_schema"], [122, 3, 1, "", "model_parametrized_name"], [122, 3, 1, "", "model_post_init"], [122, 3, 1, "", "model_rebuild"], [122, 3, 1, "", "model_validate"], [122, 3, 1, "", "model_validate_json"], [122, 3, 1, "", "model_validate_strings"], [122, 3, 1, "", "parse_file"], [122, 3, 1, "", "parse_obj"], [122, 3, 1, "", "parse_raw"], [122, 3, 1, "", "schema"], [122, 3, 1, "", "schema_json"], [122, 2, 1, "", "tag"], [122, 3, 1, "", "to_header"], [122, 3, 1, "", "to_yaml"], [122, 3, 1, "", "update_forward_refs"], [122, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[123, 3, 1, "", "all_quantities"], [123, 2, 1, "", "available_quantities"], [123, 3, 1, "", "copy"], [123, 2, 1, "", "counts"], [123, 2, 1, "", "dnde"], [123, 2, 1, "", "dnde_err"], [123, 2, 1, "", "dnde_errn"], [123, 2, 1, "", "dnde_errp"], [123, 2, 1, "", "dnde_ref"], [123, 2, 1, "", "dnde_scan_values"], [123, 2, 1, "", "dnde_ul"], [123, 2, 1, "", "e2dnde"], [123, 2, 1, "", "e2dnde_err"], [123, 2, 1, "", "e2dnde_errn"], [123, 2, 1, "", "e2dnde_errp"], [123, 2, 1, "", "e2dnde_ref"], [123, 2, 1, "", "e2dnde_ul"], [123, 2, 1, "", "eflux"], [123, 2, 1, "", "eflux_err"], [123, 2, 1, "", "eflux_errn"], [123, 2, 1, "", "eflux_errp"], [123, 2, 1, "", "eflux_ref"], [123, 2, 1, "", "eflux_ul"], [123, 2, 1, "", "energy_axis"], [123, 2, 1, "", "energy_max"], [123, 2, 1, "", "energy_min"], [123, 2, 1, "", "energy_ref"], [123, 2, 1, "", "filter_success_nan"], [123, 2, 1, "", "flux"], [123, 2, 1, "", "flux_err"], [123, 2, 1, "", "flux_errn"], [123, 2, 1, "", "flux_errp"], [123, 2, 1, "", "flux_ref"], [123, 2, 1, "", "flux_sensitivity"], [123, 2, 1, "", "flux_ul"], [123, 3, 1, "", "from_hdulist"], [123, 3, 1, "", "from_maps"], [123, 3, 1, "", "from_stack"], [123, 3, 1, "", "from_table"], [123, 2, 1, "", "geom"], [123, 3, 1, "", "get_flux_points"], [123, 2, 1, "", "has_any_ts"], [123, 2, 1, "", "has_stat_profiles"], [123, 2, 1, "", "has_success"], [123, 2, 1, "", "has_ul"], [123, 2, 1, "", "is_convertible_to_flux_sed_type"], [123, 2, 1, "", "is_ul"], [123, 3, 1, "", "iter_by_axis"], [123, 2, 1, "", "n_dof"], [123, 2, 1, "", "n_sigma"], [123, 2, 1, "", "n_sigma_ul"], [123, 2, 1, "", "niter"], [123, 2, 1, "", "norm"], [123, 2, 1, "", "norm_err"], [123, 2, 1, "", "norm_errn"], [123, 2, 1, "", "norm_errp"], [123, 2, 1, "", "norm_sensitivity"], [123, 2, 1, "", "norm_ul"], [123, 2, 1, "", "npred"], [123, 2, 1, "", "npred_background"], [123, 2, 1, "", "npred_excess"], [123, 2, 1, "", "npred_excess_err"], [123, 2, 1, "", "npred_excess_errn"], [123, 2, 1, "", "npred_excess_errp"], [123, 2, 1, "", "npred_excess_ref"], [123, 2, 1, "", "npred_excess_ul"], [123, 3, 1, "", "plot"], [123, 3, 1, "", "plot_ts_profiles"], [123, 3, 1, "", "read"], [123, 3, 1, "", "recompute_ul"], [123, 2, 1, "", "reference_model"], [123, 2, 1, "", "reference_model_default"], [123, 2, 1, "", "reference_spectral_model"], [123, 3, 1, "", "resample_axis"], [123, 2, 1, "", "sed_type_init"], [123, 2, 1, "", "sed_type_plot_default"], [123, 3, 1, "", "slice_by_coord"], [123, 3, 1, "", "slice_by_energy"], [123, 3, 1, "", "slice_by_idx"], [123, 3, 1, "", "slice_by_time"], [123, 2, 1, "", "sqrt_ts"], [123, 2, 1, "", "sqrt_ts_threshold_ul"], [123, 2, 1, "", "stat"], [123, 2, 1, "", "stat_null"], [123, 2, 1, "", "stat_scan"], [123, 2, 1, "", "success"], [123, 3, 1, "", "to_hdulist"], [123, 3, 1, "", "to_maps"], [123, 3, 1, "", "to_table"], [123, 2, 1, "", "ts"], [123, 2, 1, "", "ts_scan"], [123, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 3, 1, "", "estimate_best_fit"], [124, 3, 1, "", "estimate_counts"], [124, 3, 1, "", "estimate_errn_errp"], [124, 3, 1, "", "estimate_flux_point"], [124, 3, 1, "", "estimate_npred"], [124, 3, 1, "", "estimate_npred_excess"], [124, 3, 1, "", "estimate_scan"], [124, 3, 1, "", "estimate_ts"], [124, 3, 1, "", "estimate_ul"], [124, 3, 1, "", "get_scale_model"], [124, 2, 1, "", "n_jobs"], [124, 2, 1, "", "norm_max"], [124, 2, 1, "", "norm_min"], [124, 2, 1, "", "norm_n_values"], [124, 2, 1, "", "norm_values"], [124, 2, 1, "", "parallel_backend"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 3, 1, "", "estimate_best_fit"], [125, 3, 1, "", "estimate_counts"], [125, 3, 1, "", "estimate_errn_errp"], [125, 3, 1, "", "estimate_flux_point"], [125, 3, 1, "", "estimate_npred"], [125, 3, 1, "", "estimate_npred_excess"], [125, 3, 1, "", "estimate_scan"], [125, 3, 1, "", "estimate_ts"], [125, 3, 1, "", "estimate_ul"], [125, 3, 1, "", "get_scale_model"], [125, 2, 1, "", "n_jobs"], [125, 2, 1, "", "norm_max"], [125, 2, 1, "", "norm_min"], [125, 2, 1, "", "norm_n_values"], [125, 2, 1, "", "norm_values"], [125, 2, 1, "", "parallel_backend"], [125, 2, 1, "", "projected_distance_axis"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[126, 3, 1, "", "normalize"], [126, 3, 1, "", "peek"], [126, 3, 1, "", "plot"], [126, 3, 1, "", "plot_err"], [126, 2, 1, "", "profile"], [126, 2, 1, "", "profile_err"], [126, 3, 1, "", "smooth"], [126, 2, 1, "", "x_max"], [126, 2, 1, "", "x_min"], [126, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[127, 2, 1, "", "config_parameters"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "run"], [127, 2, 1, "", "selection_optional"], [127, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[128, 2, 1, "", "config_parameters"], [128, 3, 1, "", "copy"], [128, 3, 1, "", "estimate_best_fit"], [128, 3, 1, "", "estimate_counts"], [128, 3, 1, "", "estimate_errn_errp"], [128, 3, 1, "", "estimate_flux_point"], [128, 3, 1, "", "estimate_npred"], [128, 3, 1, "", "estimate_npred_excess"], [128, 3, 1, "", "estimate_scan"], [128, 3, 1, "", "estimate_time_bin_flux"], [128, 3, 1, "", "estimate_ts"], [128, 3, 1, "", "estimate_ul"], [128, 3, 1, "", "expand_map"], [128, 3, 1, "", "get_scale_model"], [128, 2, 1, "", "n_jobs"], [128, 2, 1, "", "norm_max"], [128, 2, 1, "", "norm_min"], [128, 2, 1, "", "norm_n_values"], [128, 2, 1, "", "norm_values"], [128, 2, 1, "", "parallel_backend"], [128, 3, 1, "", "run"], [128, 2, 1, "", "selection_optional"], [128, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[130, 2, 1, "", "config_parameters"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "estimate_min_e2dnde"], [130, 3, 1, "", "estimate_min_excess"], [130, 3, 1, "", "run"], [130, 2, 1, "", "selection_optional"], [130, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "estimate_fit_input_maps"], [131, 3, 1, "", "estimate_flux_default"], [131, 3, 1, "", "estimate_flux_map"], [131, 3, 1, "", "estimate_kernel"], [131, 3, 1, "", "estimate_mask_default"], [131, 3, 1, "", "estimate_pad_width"], [131, 2, 1, "", "n_jobs"], [131, 2, 1, "", "parallel_backend"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_all"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[132, 4, 1, "", "compute_lightcurve_doublingtime"], [133, 4, 1, "", "compute_lightcurve_fpp"], [134, 4, 1, "", "compute_lightcurve_fvar"], [135, 4, 1, "", "estimate_exposure_reco_energy"], [136, 4, 1, "", "find_peaks"], [137, 4, 1, "", "find_peaks_in_flux_map"], [138, 4, 1, "", "get_combined_significance_maps"], [139, 4, 1, "", "get_rebinned_axis"], [140, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[141, 1, 1, "", "Background2D"], [142, 1, 1, "", "Background3D"], [143, 1, 1, "", "BackgroundIRF"], [144, 1, 1, "", "EDispKernel"], [145, 1, 1, "", "EDispKernelMap"], [146, 1, 1, "", "EDispMap"], [147, 1, 1, "", "EffectiveAreaTable2D"], [148, 1, 1, "", "EnergyDependentMultiGaussPSF"], [149, 1, 1, "", "EnergyDispersion2D"], [150, 1, 1, "", "FoVAlignment"], [151, 1, 1, "", "IRF"], [152, 1, 1, "", "IRFMap"], [153, 5, 1, "", "IRF_REGISTRY"], [154, 1, 1, "", "PSF3D"], [155, 1, 1, "", "PSFKernel"], [156, 1, 1, "", "PSFKing"], [157, 1, 1, "", "PSFMap"], [158, 1, 1, "", "ParametricPSF"], [159, 1, 1, "", "RadMax2D"], [160, 1, 1, "", "RecoPSFMap"], [161, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[141, 2, 1, "", "axes"], [141, 3, 1, "", "cumsum"], [141, 2, 1, "", "data"], [141, 2, 1, "", "default_interp_kwargs"], [141, 2, 1, "", "default_unit"], [141, 3, 1, "", "evaluate"], [141, 2, 1, "", "fov_alignment"], [141, 3, 1, "", "from_hdulist"], [141, 3, 1, "", "from_table"], [141, 2, 1, "", "has_offset_axis"], [141, 3, 1, "", "integral"], [141, 3, 1, "", "integrate_log_log"], [141, 3, 1, "", "interp_missing_data"], [141, 3, 1, "", "is_allclose"], [141, 2, 1, "", "is_pointlike"], [141, 3, 1, "", "normalize"], [141, 3, 1, "", "pad"], [141, 3, 1, "", "peek"], [141, 3, 1, "", "plot"], [141, 3, 1, "", "plot_at_energy"], [141, 3, 1, "", "plot_energy_dependence"], [141, 3, 1, "", "plot_offset_dependence"], [141, 3, 1, "", "plot_spectrum"], [141, 2, 1, "", "quantity"], [141, 3, 1, "", "read"], [141, 2, 1, "", "required_axes"], [141, 3, 1, "", "slice_by_idx"], [141, 2, 1, "", "tag"], [141, 3, 1, "", "to_3d"], [141, 3, 1, "", "to_hdulist"], [141, 3, 1, "", "to_table"], [141, 3, 1, "", "to_table_hdu"], [141, 3, 1, "", "to_unit"], [141, 2, 1, "", "unit"], [141, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[142, 2, 1, "", "axes"], [142, 3, 1, "", "cumsum"], [142, 2, 1, "", "data"], [142, 2, 1, "", "default_interp_kwargs"], [142, 2, 1, "", "default_unit"], [142, 3, 1, "", "evaluate"], [142, 2, 1, "", "fov_alignment"], [142, 3, 1, "", "from_hdulist"], [142, 3, 1, "", "from_table"], [142, 2, 1, "", "has_offset_axis"], [142, 3, 1, "", "integral"], [142, 3, 1, "", "integrate_log_log"], [142, 3, 1, "", "interp_missing_data"], [142, 3, 1, "", "is_allclose"], [142, 2, 1, "", "is_pointlike"], [142, 3, 1, "", "normalize"], [142, 3, 1, "", "pad"], [142, 3, 1, "", "peek"], [142, 3, 1, "", "plot_at_energy"], [142, 2, 1, "", "quantity"], [142, 3, 1, "", "read"], [142, 2, 1, "", "required_axes"], [142, 3, 1, "", "slice_by_idx"], [142, 2, 1, "", "tag"], [142, 3, 1, "", "to_2d"], [142, 3, 1, "", "to_hdulist"], [142, 3, 1, "", "to_table"], [142, 3, 1, "", "to_table_hdu"], [142, 3, 1, "", "to_unit"], [142, 2, 1, "", "unit"], [142, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[143, 2, 1, "", "axes"], [143, 3, 1, "", "cumsum"], [143, 2, 1, "", "data"], [143, 2, 1, "", "default_interp_kwargs"], [143, 3, 1, "", "evaluate"], [143, 2, 1, "", "fov_alignment"], [143, 3, 1, "", "from_hdulist"], [143, 3, 1, "", "from_table"], [143, 2, 1, "", "has_offset_axis"], [143, 3, 1, "", "integral"], [143, 3, 1, "", "integrate_log_log"], [143, 3, 1, "", "interp_missing_data"], [143, 3, 1, "", "is_allclose"], [143, 2, 1, "", "is_pointlike"], [143, 3, 1, "", "normalize"], [143, 3, 1, "", "pad"], [143, 2, 1, "", "quantity"], [143, 3, 1, "", "read"], [143, 2, 1, "", "required_axes"], [143, 3, 1, "", "slice_by_idx"], [143, 2, 1, "", "tag"], [143, 3, 1, "", "to_hdulist"], [143, 3, 1, "", "to_table"], [143, 3, 1, "", "to_table_hdu"], [143, 3, 1, "", "to_unit"], [143, 2, 1, "", "unit"], [143, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[144, 2, 1, "", "axes"], [144, 3, 1, "", "cumsum"], [144, 2, 1, "", "data"], [144, 2, 1, "", "default_interp_kwargs"], [144, 3, 1, "", "evaluate"], [144, 2, 1, "", "fov_alignment"], [144, 3, 1, "", "from_diagonal_response"], [144, 3, 1, "", "from_gauss"], [144, 3, 1, "", "from_hdulist"], [144, 3, 1, "", "from_table"], [144, 3, 1, "", "get_bias"], [144, 3, 1, "", "get_bias_energy"], [144, 3, 1, "", "get_mean"], [144, 3, 1, "", "get_resolution"], [144, 2, 1, "", "has_offset_axis"], [144, 3, 1, "", "integral"], [144, 3, 1, "", "integrate_log_log"], [144, 3, 1, "", "interp_missing_data"], [144, 3, 1, "", "is_allclose"], [144, 2, 1, "", "is_pointlike"], [144, 3, 1, "", "normalize"], [144, 3, 1, "", "pad"], [144, 3, 1, "", "pdf_in_safe_range"], [144, 2, 1, "", "pdf_matrix"], [144, 3, 1, "", "peek"], [144, 3, 1, "", "plot_bias"], [144, 3, 1, "", "plot_matrix"], [144, 2, 1, "", "quantity"], [144, 3, 1, "", "read"], [144, 2, 1, "", "required_axes"], [144, 3, 1, "", "slice_by_idx"], [144, 2, 1, "", "tag"], [144, 3, 1, "", "to_hdulist"], [144, 3, 1, "", "to_image"], [144, 3, 1, "", "to_table"], [144, 3, 1, "", "to_table_hdu"], [144, 3, 1, "", "to_unit"], [144, 2, 1, "", "unit"], [144, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[145, 3, 1, "", "copy"], [145, 3, 1, "", "cutout"], [145, 3, 1, "", "downsample"], [145, 2, 1, "", "edisp_map"], [145, 3, 1, "", "from_diagonal_response"], [145, 3, 1, "", "from_edisp_kernel"], [145, 3, 1, "", "from_gauss"], [145, 3, 1, "", "from_geom"], [145, 3, 1, "", "from_hdulist"], [145, 3, 1, "", "get_edisp_kernel"], [145, 2, 1, "", "has_single_spatial_bin"], [145, 2, 1, "", "mask_safe_image"], [145, 3, 1, "", "peek"], [145, 3, 1, "", "read"], [145, 2, 1, "", "required_axes"], [145, 3, 1, "", "resample_energy_axis"], [145, 3, 1, "", "slice_by_idx"], [145, 3, 1, "", "stack"], [145, 2, 1, "", "tag"], [145, 3, 1, "", "to_hdulist"], [145, 3, 1, "", "to_image"], [145, 3, 1, "", "to_region_nd_map"], [145, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[146, 3, 1, "", "copy"], [146, 3, 1, "", "cutout"], [146, 3, 1, "", "downsample"], [146, 2, 1, "", "edisp_map"], [146, 3, 1, "", "from_diagonal_response"], [146, 3, 1, "", "from_geom"], [146, 3, 1, "", "from_hdulist"], [146, 3, 1, "", "get_edisp_kernel"], [146, 2, 1, "", "has_single_spatial_bin"], [146, 2, 1, "", "mask_safe_image"], [146, 3, 1, "", "normalize"], [146, 3, 1, "", "peek"], [146, 3, 1, "", "read"], [146, 2, 1, "", "required_axes"], [146, 3, 1, "", "sample_coord"], [146, 3, 1, "", "slice_by_idx"], [146, 3, 1, "", "stack"], [146, 2, 1, "", "tag"], [146, 3, 1, "", "to_edisp_kernel_map"], [146, 3, 1, "", "to_hdulist"], [146, 3, 1, "", "to_region_nd_map"], [146, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[147, 2, 1, "", "axes"], [147, 3, 1, "", "cumsum"], [147, 2, 1, "", "data"], [147, 2, 1, "", "default_interp_kwargs"], [147, 2, 1, "", "default_unit"], [147, 3, 1, "", "evaluate"], [147, 2, 1, "", "fov_alignment"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "from_parametrization"], [147, 3, 1, "", "from_table"], [147, 2, 1, "", "has_offset_axis"], [147, 3, 1, "", "integral"], [147, 3, 1, "", "integrate_log_log"], [147, 3, 1, "", "interp_missing_data"], [147, 3, 1, "", "is_allclose"], [147, 2, 1, "", "is_pointlike"], [147, 3, 1, "", "normalize"], [147, 3, 1, "", "pad"], [147, 3, 1, "", "peek"], [147, 3, 1, "", "plot"], [147, 3, 1, "", "plot_energy_dependence"], [147, 3, 1, "", "plot_offset_dependence"], [147, 2, 1, "", "quantity"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "slice_by_idx"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_table"], [147, 3, 1, "", "to_table_hdu"], [147, 3, 1, "", "to_unit"], [147, 2, 1, "", "unit"], [147, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[148, 2, 1, "", "axes"], [148, 3, 1, "", "containment"], [148, 3, 1, "", "containment_radius"], [148, 3, 1, "", "cumsum"], [148, 2, 1, "", "data"], [148, 2, 1, "", "default_interp_kwargs"], [148, 3, 1, "", "evaluate"], [148, 3, 1, "", "evaluate_containment"], [148, 3, 1, "", "evaluate_direct"], [148, 3, 1, "", "evaluate_parameters"], [148, 2, 1, "", "fov_alignment"], [148, 3, 1, "", "from_hdulist"], [148, 3, 1, "", "from_table"], [148, 2, 1, "", "has_offset_axis"], [148, 3, 1, "", "info"], [148, 3, 1, "", "integral"], [148, 3, 1, "", "integrate_log_log"], [148, 3, 1, "", "interp_missing_data"], [148, 3, 1, "", "is_allclose"], [148, 2, 1, "", "is_pointlike"], [148, 3, 1, "", "normalize"], [148, 3, 1, "", "pad"], [148, 3, 1, "", "peek"], [148, 3, 1, "", "plot_containment_radius"], [148, 3, 1, "", "plot_containment_radius_vs_energy"], [148, 3, 1, "", "plot_psf_vs_rad"], [148, 2, 1, "", "quantity"], [148, 3, 1, "", "read"], [148, 2, 1, "", "required_axes"], [148, 2, 1, "", "required_parameters"], [148, 3, 1, "", "slice_by_idx"], [148, 2, 1, "", "tag"], [148, 3, 1, "", "to_hdulist"], [148, 3, 1, "", "to_psf3d"], [148, 3, 1, "", "to_table"], [148, 3, 1, "", "to_table_hdu"], [148, 3, 1, "", "to_unit"], [148, 2, 1, "", "unit"], [148, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[149, 2, 1, "", "axes"], [149, 3, 1, "", "cumsum"], [149, 2, 1, "", "data"], [149, 2, 1, "", "default_interp_kwargs"], [149, 2, 1, "", "default_unit"], [149, 3, 1, "", "evaluate"], [149, 2, 1, "", "fov_alignment"], [149, 3, 1, "", "from_gauss"], [149, 3, 1, "", "from_hdulist"], [149, 3, 1, "", "from_table"], [149, 2, 1, "", "has_offset_axis"], [149, 3, 1, "", "integral"], [149, 3, 1, "", "integrate_log_log"], [149, 3, 1, "", "interp_missing_data"], [149, 3, 1, "", "is_allclose"], [149, 2, 1, "", "is_pointlike"], [149, 3, 1, "", "normalize"], [149, 3, 1, "", "pad"], [149, 3, 1, "", "peek"], [149, 3, 1, "", "plot_bias"], [149, 3, 1, "", "plot_migration"], [149, 2, 1, "", "quantity"], [149, 3, 1, "", "read"], [149, 2, 1, "", "required_axes"], [149, 3, 1, "", "slice_by_idx"], [149, 2, 1, "", "tag"], [149, 3, 1, "", "to_edisp_kernel"], [149, 3, 1, "", "to_hdulist"], [149, 3, 1, "", "to_table"], [149, 3, 1, "", "to_table_hdu"], [149, 3, 1, "", "to_unit"], [149, 2, 1, "", "unit"], [149, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[150, 2, 1, "", "ALTAZ"], [150, 2, 1, "", "RADEC"]], "gammapy.irf.IRF": [[151, 2, 1, "", "axes"], [151, 3, 1, "", "cumsum"], [151, 2, 1, "", "data"], [151, 2, 1, "", "default_interp_kwargs"], [151, 3, 1, "", "evaluate"], [151, 2, 1, "", "fov_alignment"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "from_table"], [151, 2, 1, "", "has_offset_axis"], [151, 3, 1, "", "integral"], [151, 3, 1, "", "integrate_log_log"], [151, 3, 1, "", "interp_missing_data"], [151, 3, 1, "", "is_allclose"], [151, 2, 1, "", "is_pointlike"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "pad"], [151, 2, 1, "", "quantity"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "slice_by_idx"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_table"], [151, 3, 1, "", "to_table_hdu"], [151, 3, 1, "", "to_unit"], [151, 2, 1, "", "unit"], [151, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[152, 3, 1, "", "copy"], [152, 3, 1, "", "cutout"], [152, 3, 1, "", "downsample"], [152, 3, 1, "", "from_hdulist"], [152, 2, 1, "", "has_single_spatial_bin"], [152, 2, 1, "", "mask_safe_image"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 3, 1, "", "stack"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_region_nd_map"], [152, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "containment"], [154, 3, 1, "", "containment_radius"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 2, 1, "", "default_unit"], [154, 3, 1, "", "evaluate"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "info"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_containment_radius"], [154, 3, 1, "", "plot_containment_radius_vs_energy"], [154, 3, 1, "", "plot_psf_vs_rad"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[155, 2, 1, "", "data"], [155, 3, 1, "", "from_gauss"], [155, 3, 1, "", "from_spatial_model"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "plot_kernel"], [155, 2, 1, "", "psf_kernel_map"], [155, 3, 1, "", "read"], [155, 3, 1, "", "slice_by_idx"], [155, 3, 1, "", "to_image"], [155, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[156, 2, 1, "", "axes"], [156, 3, 1, "", "containment"], [156, 3, 1, "", "containment_radius"], [156, 3, 1, "", "cumsum"], [156, 2, 1, "", "data"], [156, 2, 1, "", "default_interp_kwargs"], [156, 3, 1, "", "evaluate"], [156, 3, 1, "", "evaluate_containment"], [156, 3, 1, "", "evaluate_direct"], [156, 3, 1, "", "evaluate_parameters"], [156, 2, 1, "", "fov_alignment"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "from_table"], [156, 2, 1, "", "has_offset_axis"], [156, 3, 1, "", "info"], [156, 3, 1, "", "integral"], [156, 3, 1, "", "integrate_log_log"], [156, 3, 1, "", "interp_missing_data"], [156, 3, 1, "", "is_allclose"], [156, 2, 1, "", "is_pointlike"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "pad"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot_containment_radius"], [156, 3, 1, "", "plot_containment_radius_vs_energy"], [156, 3, 1, "", "plot_psf_vs_rad"], [156, 2, 1, "", "quantity"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 2, 1, "", "required_parameters"], [156, 3, 1, "", "slice_by_idx"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_psf3d"], [156, 3, 1, "", "to_table"], [156, 3, 1, "", "to_table_hdu"], [156, 3, 1, "", "to_unit"], [156, 2, 1, "", "unit"], [156, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[157, 3, 1, "", "containment"], [157, 3, 1, "", "containment_radius"], [157, 3, 1, "", "containment_radius_map"], [157, 3, 1, "", "copy"], [157, 3, 1, "", "cutout"], [157, 3, 1, "", "downsample"], [157, 2, 1, "", "energy_name"], [157, 3, 1, "", "from_gauss"], [157, 3, 1, "", "from_geom"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "get_psf_kernel"], [157, 2, 1, "", "has_single_spatial_bin"], [157, 2, 1, "", "mask_safe_image"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot_containment_radius_vs_energy"], [157, 3, 1, "", "plot_psf_vs_rad"], [157, 2, 1, "", "psf_map"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 3, 1, "", "sample_coord"], [157, 3, 1, "", "slice_by_idx"], [157, 3, 1, "", "stack"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_image"], [157, 3, 1, "", "to_region_nd_map"], [157, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[158, 2, 1, "", "axes"], [158, 3, 1, "", "containment"], [158, 3, 1, "", "containment_radius"], [158, 3, 1, "", "cumsum"], [158, 2, 1, "", "data"], [158, 2, 1, "", "default_interp_kwargs"], [158, 3, 1, "", "evaluate"], [158, 3, 1, "", "evaluate_containment"], [158, 3, 1, "", "evaluate_direct"], [158, 3, 1, "", "evaluate_parameters"], [158, 2, 1, "", "fov_alignment"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "from_table"], [158, 2, 1, "", "has_offset_axis"], [158, 3, 1, "", "info"], [158, 3, 1, "", "integral"], [158, 3, 1, "", "integrate_log_log"], [158, 3, 1, "", "interp_missing_data"], [158, 3, 1, "", "is_allclose"], [158, 2, 1, "", "is_pointlike"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "pad"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_containment_radius"], [158, 3, 1, "", "plot_containment_radius_vs_energy"], [158, 3, 1, "", "plot_psf_vs_rad"], [158, 2, 1, "", "quantity"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 2, 1, "", "required_parameters"], [158, 3, 1, "", "slice_by_idx"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_psf3d"], [158, 3, 1, "", "to_table"], [158, 3, 1, "", "to_table_hdu"], [158, 3, 1, "", "to_unit"], [158, 2, 1, "", "unit"], [158, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[159, 2, 1, "", "axes"], [159, 3, 1, "", "cumsum"], [159, 2, 1, "", "data"], [159, 2, 1, "", "default_interp_kwargs"], [159, 2, 1, "", "default_unit"], [159, 3, 1, "", "evaluate"], [159, 2, 1, "", "fov_alignment"], [159, 3, 1, "", "from_hdulist"], [159, 3, 1, "", "from_irf"], [159, 3, 1, "", "from_table"], [159, 2, 1, "", "has_offset_axis"], [159, 3, 1, "", "integral"], [159, 3, 1, "", "integrate_log_log"], [159, 3, 1, "", "interp_missing_data"], [159, 3, 1, "", "is_allclose"], [159, 2, 1, "", "is_fixed_rad_max"], [159, 2, 1, "", "is_pointlike"], [159, 3, 1, "", "normalize"], [159, 3, 1, "", "pad"], [159, 3, 1, "", "plot_rad_max_vs_energy"], [159, 2, 1, "", "quantity"], [159, 3, 1, "", "read"], [159, 2, 1, "", "required_axes"], [159, 3, 1, "", "slice_by_idx"], [159, 2, 1, "", "tag"], [159, 3, 1, "", "to_hdulist"], [159, 3, 1, "", "to_table"], [159, 3, 1, "", "to_table_hdu"], [159, 3, 1, "", "to_unit"], [159, 2, 1, "", "unit"], [159, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[160, 3, 1, "", "containment"], [160, 3, 1, "", "containment_radius"], [160, 3, 1, "", "containment_radius_map"], [160, 3, 1, "", "copy"], [160, 3, 1, "", "cutout"], [160, 3, 1, "", "downsample"], [160, 2, 1, "", "energy_name"], [160, 3, 1, "", "from_gauss"], [160, 3, 1, "", "from_geom"], [160, 3, 1, "", "from_hdulist"], [160, 3, 1, "", "get_psf_kernel"], [160, 2, 1, "", "has_single_spatial_bin"], [160, 2, 1, "", "mask_safe_image"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "peek"], [160, 3, 1, "", "plot_containment_radius_vs_energy"], [160, 3, 1, "", "plot_psf_vs_rad"], [160, 2, 1, "", "psf_map"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 3, 1, "", "sample_coord"], [160, 3, 1, "", "slice_by_idx"], [160, 3, 1, "", "stack"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_image"], [160, 3, 1, "", "to_region_nd_map"], [160, 3, 1, "", "write"]], "gammapy.makers": [[162, 1, 1, "", "AdaptiveRingBackgroundMaker"], [163, 1, 1, "", "DatasetsMaker"], [164, 1, 1, "", "FoVBackgroundMaker"], [165, 5, 1, "", "MAKER_REGISTRY"], [166, 1, 1, "", "Maker"], [167, 1, 1, "", "MapDatasetMaker"], [168, 1, 1, "", "PhaseBackgroundMaker"], [169, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [170, 1, 1, "", "ReflectedRegionsFinder"], [171, 1, 1, "", "RegionsFinder"], [172, 1, 1, "", "RingBackgroundMaker"], [173, 1, 1, "", "SafeMaskMaker"], [174, 1, 1, "", "SpectrumDatasetMaker"], [175, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[162, 3, 1, "", "kernels"], [162, 3, 1, "", "make_cubes"], [162, 3, 1, "", "run"], [162, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[163, 3, 1, "", "callback"], [163, 3, 1, "", "error_callback"], [163, 3, 1, "", "make_dataset"], [163, 2, 1, "", "n_jobs"], [163, 2, 1, "", "offset_max"], [163, 2, 1, "", "parallel_backend"], [163, 3, 1, "", "run"], [163, 2, 1, "", "safe_mask_maker"], [163, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[164, 2, 1, "", "available_methods"], [164, 3, 1, "", "make_background_fit"], [164, 3, 1, "", "make_background_scale"], [164, 3, 1, "", "make_default_fov_background_model"], [164, 3, 1, "", "make_exclusion_mask"], [164, 2, 1, "", "method"], [164, 3, 1, "", "run"], [164, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[166, 3, 1, "", "run"], [166, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[167, 2, 1, "", "available_selection"], [167, 3, 1, "", "make_background"], [167, 3, 1, "", "make_counts"], [167, 3, 1, "", "make_edisp"], [167, 3, 1, "", "make_edisp_kernel"], [167, 3, 1, "", "make_exposure"], [167, 3, 1, "", "make_exposure_irf"], [167, 3, 1, "", "make_meta_table"], [167, 3, 1, "", "make_psf"], [167, 3, 1, "", "run"], [167, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[168, 3, 1, "", "make_counts"], [168, 3, 1, "", "make_counts_off"], [168, 3, 1, "", "run"], [168, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[169, 3, 1, "", "make_counts_off"], [169, 3, 1, "", "run"], [169, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[170, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[171, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[172, 3, 1, "", "kernel"], [172, 3, 1, "", "make_maps_off"], [172, 3, 1, "", "run"], [172, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[173, 2, 1, "", "available_methods"], [173, 3, 1, "", "make_mask_bkg_invalid"], [173, 3, 1, "", "make_mask_energy_aeff_default"], [173, 3, 1, "", "make_mask_energy_aeff_max"], [173, 3, 1, "", "make_mask_energy_bkg_peak"], [173, 3, 1, "", "make_mask_energy_edisp_bias"], [173, 3, 1, "", "make_mask_offset_max"], [173, 3, 1, "", "run"], [173, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[174, 2, 1, "", "available_selection"], [174, 3, 1, "", "make_background"], [174, 3, 1, "", "make_counts"], [174, 3, 1, "", "make_edisp"], [174, 3, 1, "", "make_edisp_kernel"], [174, 3, 1, "", "make_exposure"], [174, 3, 1, "", "make_exposure_irf"], [174, 3, 1, "", "make_meta_table"], [174, 3, 1, "", "make_psf"], [174, 3, 1, "", "run"], [174, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[175, 3, 1, "", "run"]], "gammapy.makers.utils": [[176, 4, 1, "", "make_counts_rad_max"], [177, 4, 1, "", "make_edisp_kernel_map"], [178, 4, 1, "", "make_edisp_map"], [179, 4, 1, "", "make_effective_livetime_map"], [180, 4, 1, "", "make_map_background_irf"], [181, 4, 1, "", "make_map_exposure_true_energy"], [182, 4, 1, "", "make_observation_time_map"], [183, 4, 1, "", "make_psf_map"], [184, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[185, 1, 1, "", "Geom"], [186, 1, 1, "", "HpxGeom"], [187, 1, 1, "", "HpxMap"], [188, 1, 1, "", "HpxNDMap"], [189, 1, 1, "", "LabelMapAxis"], [190, 1, 1, "", "Map"], [191, 1, 1, "", "MapAxes"], [192, 1, 1, "", "MapAxis"], [193, 1, 1, "", "MapCoord"], [194, 1, 1, "", "Maps"], [195, 1, 1, "", "RegionGeom"], [196, 1, 1, "", "RegionNDMap"], [197, 1, 1, "", "TimeMapAxis"], [198, 1, 1, "", "WcsGeom"], [199, 1, 1, "", "WcsMap"], [200, 1, 1, "", "WcsNDMap"], [201, 4, 1, "", "containment_radius"], [202, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[185, 2, 1, "", "as_energy_true"], [185, 2, 1, "", "center_coord"], [185, 2, 1, "", "center_pix"], [185, 2, 1, "", "center_skydir"], [185, 3, 1, "", "contains"], [185, 3, 1, "", "contains_pix"], [185, 3, 1, "", "coord_to_idx"], [185, 3, 1, "", "coord_to_pix"], [185, 3, 1, "", "copy"], [185, 3, 1, "", "crop"], [185, 3, 1, "", "data_nbytes"], [185, 2, 1, "", "data_shape"], [185, 3, 1, "", "downsample"], [185, 3, 1, "", "drop"], [185, 3, 1, "", "energy_mask"], [185, 3, 1, "", "from_hdulist"], [185, 3, 1, "", "get_coord"], [185, 3, 1, "", "get_idx"], [185, 2, 1, "", "has_energy_axis"], [185, 2, 1, "", "is_allsky"], [185, 2, 1, "", "is_flat"], [185, 2, 1, "", "is_image"], [185, 3, 1, "", "pad"], [185, 3, 1, "", "pix_to_coord"], [185, 3, 1, "", "pix_to_idx"], [185, 3, 1, "", "rename_axes"], [185, 3, 1, "", "replace_axis"], [185, 3, 1, "", "resample_axis"], [185, 3, 1, "", "slice_by_idx"], [185, 3, 1, "", "solid_angle"], [185, 3, 1, "", "squash"], [185, 3, 1, "", "to_bands_hdu"], [185, 3, 1, "", "to_cube"], [185, 3, 1, "", "to_image"], [185, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[186, 2, 1, "", "as_energy_true"], [186, 2, 1, "", "axes"], [186, 2, 1, "", "axes_names"], [186, 2, 1, "", "center_coord"], [186, 2, 1, "", "center_pix"], [186, 2, 1, "", "center_skydir"], [186, 3, 1, "", "contains"], [186, 3, 1, "", "contains_pix"], [186, 3, 1, "", "coord_to_idx"], [186, 3, 1, "", "coord_to_pix"], [186, 3, 1, "", "copy"], [186, 3, 1, "", "create"], [186, 3, 1, "", "crop"], [186, 3, 1, "", "cutout"], [186, 3, 1, "", "data_nbytes"], [186, 2, 1, "", "data_shape"], [186, 2, 1, "", "data_shape_axes"], [186, 3, 1, "", "downsample"], [186, 3, 1, "", "drop"], [186, 3, 1, "", "energy_mask"], [186, 2, 1, "", "frame"], [186, 3, 1, "", "from_hdu"], [186, 3, 1, "", "from_hdulist"], [186, 3, 1, "", "from_header"], [186, 3, 1, "", "get_coord"], [186, 3, 1, "", "get_idx"], [186, 3, 1, "", "get_index_list"], [186, 3, 1, "", "global_to_local"], [186, 2, 1, "", "has_energy_axis"], [186, 3, 1, "", "interp_weights"], [186, 2, 1, "", "ipix"], [186, 3, 1, "", "is_aligned"], [186, 3, 1, "", "is_allclose"], [186, 2, 1, "", "is_allsky"], [186, 2, 1, "", "is_flat"], [186, 2, 1, "", "is_hpx"], [186, 2, 1, "", "is_image"], [186, 2, 1, "", "is_region"], [186, 2, 1, "", "is_regular"], [186, 3, 1, "", "local_to_global"], [186, 2, 1, "", "ndim"], [186, 2, 1, "", "nest"], [186, 2, 1, "", "npix"], [186, 2, 1, "", "npix_max"], [186, 2, 1, "", "nside"], [186, 2, 1, "", "order"], [186, 2, 1, "", "ordering"], [186, 3, 1, "", "pad"], [186, 3, 1, "", "pix_to_coord"], [186, 3, 1, "", "pix_to_idx"], [186, 2, 1, "", "pixel_scales"], [186, 2, 1, "", "projection"], [186, 2, 1, "", "region"], [186, 3, 1, "", "region_mask"], [186, 3, 1, "", "rename_axes"], [186, 3, 1, "", "replace_axis"], [186, 3, 1, "", "resample_axis"], [186, 3, 1, "", "separation"], [186, 2, 1, "", "shape_axes"], [186, 3, 1, "", "slice_by_idx"], [186, 3, 1, "", "solid_angle"], [186, 3, 1, "", "squash"], [186, 3, 1, "", "to_bands_hdu"], [186, 3, 1, "", "to_binsz"], [186, 3, 1, "", "to_cube"], [186, 3, 1, "", "to_header"], [186, 3, 1, "", "to_image"], [186, 3, 1, "", "to_nside"], [186, 3, 1, "", "to_swapped"], [186, 3, 1, "", "to_wcs_geom"], [186, 3, 1, "", "to_wcs_tiles"], [186, 3, 1, "", "upsample"], [186, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[187, 3, 1, "", "coadd"], [187, 3, 1, "", "copy"], [187, 3, 1, "", "create"], [187, 3, 1, "", "crop"], [187, 3, 1, "", "cumsum"], [187, 2, 1, "", "data"], [187, 3, 1, "", "dot"], [187, 3, 1, "", "downsample"], [187, 3, 1, "", "fill_by_coord"], [187, 3, 1, "", "fill_by_idx"], [187, 3, 1, "", "fill_by_pix"], [187, 3, 1, "", "fill_events"], [187, 3, 1, "", "from_geom"], [187, 3, 1, "", "from_hdulist"], [187, 3, 1, "", "from_stack"], [187, 2, 1, "", "geom"], [187, 3, 1, "", "get_by_coord"], [187, 3, 1, "", "get_by_idx"], [187, 3, 1, "", "get_by_pix"], [187, 3, 1, "", "get_image_by_coord"], [187, 3, 1, "", "get_image_by_idx"], [187, 3, 1, "", "get_image_by_pix"], [187, 3, 1, "", "get_spectrum"], [187, 3, 1, "", "integral"], [187, 3, 1, "", "interp_by_coord"], [187, 3, 1, "", "interp_by_pix"], [187, 3, 1, "", "interp_to_geom"], [187, 3, 1, "", "is_allclose"], [187, 2, 1, "", "is_mask"], [187, 3, 1, "", "iter_by_axis"], [187, 3, 1, "", "iter_by_image"], [187, 3, 1, "", "iter_by_image_data"], [187, 3, 1, "", "iter_by_image_index"], [187, 3, 1, "", "mask_nearest_position"], [187, 2, 1, "", "meta"], [187, 3, 1, "", "normalize"], [187, 3, 1, "", "pad"], [187, 3, 1, "", "plot_grid"], [187, 3, 1, "", "plot_interactive"], [187, 2, 1, "", "quantity"], [187, 3, 1, "", "read"], [187, 3, 1, "", "reduce"], [187, 3, 1, "", "reduce_over_axes"], [187, 3, 1, "", "rename_axes"], [187, 3, 1, "", "reorder_axes"], [187, 3, 1, "", "reproject_by_image"], [187, 3, 1, "", "reproject_to_geom"], [187, 3, 1, "", "resample"], [187, 3, 1, "", "resample_axis"], [187, 3, 1, "", "sample_coord"], [187, 3, 1, "", "set_by_coord"], [187, 3, 1, "", "set_by_idx"], [187, 3, 1, "", "set_by_pix"], [187, 3, 1, "", "slice_by_idx"], [187, 3, 1, "", "split_by_axis"], [187, 3, 1, "", "sum_over_axes"], [187, 2, 1, "", "tag"], [187, 3, 1, "", "to_cube"], [187, 3, 1, "", "to_hdu"], [187, 3, 1, "", "to_hdulist"], [187, 3, 1, "", "to_swapped"], [187, 3, 1, "", "to_unit"], [187, 3, 1, "", "to_wcs"], [187, 2, 1, "", "unit"], [187, 3, 1, "", "upsample"], [187, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[188, 3, 1, "", "coadd"], [188, 3, 1, "", "convolve"], [188, 3, 1, "", "convolve_full"], [188, 3, 1, "", "convolve_wcs"], [188, 3, 1, "", "copy"], [188, 3, 1, "", "create"], [188, 3, 1, "", "crop"], [188, 3, 1, "", "cumsum"], [188, 3, 1, "", "cutout"], [188, 2, 1, "", "data"], [188, 3, 1, "", "dot"], [188, 3, 1, "", "downsample"], [188, 3, 1, "", "fill_by_coord"], [188, 3, 1, "", "fill_by_idx"], [188, 3, 1, "", "fill_by_pix"], [188, 3, 1, "", "fill_events"], [188, 3, 1, "", "from_geom"], [188, 3, 1, "", "from_hdu"], [188, 3, 1, "", "from_hdulist"], [188, 3, 1, "", "from_stack"], [188, 3, 1, "", "from_wcs_tiles"], [188, 2, 1, "", "geom"], [188, 3, 1, "", "get_by_coord"], [188, 3, 1, "", "get_by_idx"], [188, 3, 1, "", "get_by_pix"], [188, 3, 1, "", "get_image_by_coord"], [188, 3, 1, "", "get_image_by_idx"], [188, 3, 1, "", "get_image_by_pix"], [188, 3, 1, "", "get_spectrum"], [188, 3, 1, "", "integral"], [188, 3, 1, "", "interp_by_coord"], [188, 3, 1, "", "interp_by_pix"], [188, 3, 1, "", "interp_to_geom"], [188, 3, 1, "", "is_allclose"], [188, 2, 1, "", "is_mask"], [188, 3, 1, "", "iter_by_axis"], [188, 3, 1, "", "iter_by_image"], [188, 3, 1, "", "iter_by_image_data"], [188, 3, 1, "", "iter_by_image_index"], [188, 3, 1, "", "mask_nearest_position"], [188, 2, 1, "", "meta"], [188, 3, 1, "", "normalize"], [188, 3, 1, "", "pad"], [188, 3, 1, "", "plot"], [188, 3, 1, "", "plot_grid"], [188, 3, 1, "", "plot_interactive"], [188, 3, 1, "", "plot_mask"], [188, 2, 1, "", "quantity"], [188, 3, 1, "", "read"], [188, 3, 1, "", "reduce"], [188, 3, 1, "", "reduce_over_axes"], [188, 3, 1, "", "rename_axes"], [188, 3, 1, "", "reorder_axes"], [188, 3, 1, "", "reproject_by_image"], [188, 3, 1, "", "reproject_to_geom"], [188, 3, 1, "", "resample"], [188, 3, 1, "", "resample_axis"], [188, 3, 1, "", "sample_coord"], [188, 3, 1, "", "set_by_coord"], [188, 3, 1, "", "set_by_idx"], [188, 3, 1, "", "set_by_pix"], [188, 3, 1, "", "slice_by_idx"], [188, 3, 1, "", "smooth"], [188, 3, 1, "", "split_by_axis"], [188, 3, 1, "", "stack"], [188, 3, 1, "", "sum_over_axes"], [188, 2, 1, "", "tag"], [188, 3, 1, "", "to_cube"], [188, 3, 1, "", "to_hdu"], [188, 3, 1, "", "to_hdulist"], [188, 3, 1, "", "to_nside"], [188, 3, 1, "", "to_region_nd_map"], [188, 3, 1, "", "to_swapped"], [188, 3, 1, "", "to_unit"], [188, 3, 1, "", "to_wcs"], [188, 3, 1, "", "to_wcs_tiles"], [188, 2, 1, "", "unit"], [188, 3, 1, "", "upsample"], [188, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[189, 2, 1, "", "as_plot_center"], [189, 2, 1, "", "as_plot_edges"], [189, 2, 1, "", "as_plot_labels"], [189, 2, 1, "", "as_plot_xerr"], [189, 3, 1, "", "assert_name"], [189, 2, 1, "", "bin_width"], [189, 2, 1, "", "center"], [189, 3, 1, "", "concatenate"], [189, 3, 1, "", "coord_to_idx"], [189, 3, 1, "", "coord_to_pix"], [189, 3, 1, "", "copy"], [189, 3, 1, "", "downsample"], [189, 2, 1, "", "edges"], [189, 2, 1, "", "edges_max"], [189, 2, 1, "", "edges_min"], [189, 3, 1, "", "format_plot_xaxis"], [189, 3, 1, "", "from_stack"], [189, 3, 1, "", "from_table"], [189, 3, 1, "", "is_allclose"], [189, 2, 1, "", "name"], [189, 2, 1, "", "nbin"], [189, 2, 1, "", "node_type"], [189, 3, 1, "", "pad"], [189, 3, 1, "", "pix_to_coord"], [189, 3, 1, "", "pix_to_idx"], [189, 3, 1, "", "resample"], [189, 3, 1, "", "slice"], [189, 3, 1, "", "squash"], [189, 3, 1, "", "to_header"], [189, 2, 1, "", "unit"], [189, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[190, 3, 1, "", "coadd"], [190, 3, 1, "", "copy"], [190, 3, 1, "", "create"], [190, 3, 1, "", "crop"], [190, 3, 1, "", "cumsum"], [190, 2, 1, "", "data"], [190, 3, 1, "", "dot"], [190, 3, 1, "", "downsample"], [190, 3, 1, "", "fill_by_coord"], [190, 3, 1, "", "fill_by_idx"], [190, 3, 1, "", "fill_by_pix"], [190, 3, 1, "", "fill_events"], [190, 3, 1, "", "from_geom"], [190, 3, 1, "", "from_hdulist"], [190, 3, 1, "", "from_stack"], [190, 2, 1, "", "geom"], [190, 3, 1, "", "get_by_coord"], [190, 3, 1, "", "get_by_idx"], [190, 3, 1, "", "get_by_pix"], [190, 3, 1, "", "get_image_by_coord"], [190, 3, 1, "", "get_image_by_idx"], [190, 3, 1, "", "get_image_by_pix"], [190, 3, 1, "", "get_spectrum"], [190, 3, 1, "", "integral"], [190, 3, 1, "", "interp_by_coord"], [190, 3, 1, "", "interp_by_pix"], [190, 3, 1, "", "interp_to_geom"], [190, 3, 1, "", "is_allclose"], [190, 2, 1, "", "is_mask"], [190, 3, 1, "", "iter_by_axis"], [190, 3, 1, "", "iter_by_image"], [190, 3, 1, "", "iter_by_image_data"], [190, 3, 1, "", "iter_by_image_index"], [190, 3, 1, "", "mask_nearest_position"], [190, 2, 1, "", "meta"], [190, 3, 1, "", "normalize"], [190, 3, 1, "", "pad"], [190, 3, 1, "", "plot_grid"], [190, 3, 1, "", "plot_interactive"], [190, 2, 1, "", "quantity"], [190, 3, 1, "", "read"], [190, 3, 1, "", "reduce"], [190, 3, 1, "", "reduce_over_axes"], [190, 3, 1, "", "rename_axes"], [190, 3, 1, "", "reorder_axes"], [190, 3, 1, "", "reproject_by_image"], [190, 3, 1, "", "reproject_to_geom"], [190, 3, 1, "", "resample"], [190, 3, 1, "", "resample_axis"], [190, 3, 1, "", "sample_coord"], [190, 3, 1, "", "set_by_coord"], [190, 3, 1, "", "set_by_idx"], [190, 3, 1, "", "set_by_pix"], [190, 3, 1, "", "slice_by_idx"], [190, 3, 1, "", "split_by_axis"], [190, 3, 1, "", "sum_over_axes"], [190, 2, 1, "", "tag"], [190, 3, 1, "", "to_cube"], [190, 3, 1, "", "to_unit"], [190, 2, 1, "", "unit"], [190, 3, 1, "", "upsample"], [190, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[191, 3, 1, "", "assert_names"], [191, 3, 1, "", "bin_volume"], [191, 2, 1, "", "center_coord"], [191, 3, 1, "", "coord_to_idx"], [191, 3, 1, "", "coord_to_pix"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "count"], [191, 3, 1, "", "downsample"], [191, 3, 1, "", "drop"], [191, 3, 1, "", "from_default"], [191, 3, 1, "", "from_table"], [191, 3, 1, "", "from_table_hdu"], [191, 3, 1, "", "get_coord"], [191, 3, 1, "", "index"], [191, 3, 1, "", "index_data"], [191, 3, 1, "", "is_allclose"], [191, 2, 1, "", "is_flat"], [191, 2, 1, "", "is_unidimensional"], [191, 2, 1, "", "iter_with_reshape"], [191, 2, 1, "", "names"], [191, 3, 1, "", "pad"], [191, 3, 1, "", "pix_to_coord"], [191, 3, 1, "", "pix_to_idx"], [191, 2, 1, "", "primary_axis"], [191, 3, 1, "", "rename_axes"], [191, 3, 1, "", "replace"], [191, 3, 1, "", "resample"], [191, 2, 1, "", "reverse"], [191, 2, 1, "", "shape"], [191, 3, 1, "", "slice_by_idx"], [191, 3, 1, "", "squash"], [191, 3, 1, "", "to_header"], [191, 3, 1, "", "to_table"], [191, 3, 1, "", "to_table_hdu"], [191, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[192, 2, 1, "", "as_plot_center"], [192, 2, 1, "", "as_plot_edges"], [192, 2, 1, "", "as_plot_labels"], [192, 2, 1, "", "as_plot_scale"], [192, 2, 1, "", "as_plot_xerr"], [192, 3, 1, "", "assert_name"], [192, 2, 1, "", "bin_width"], [192, 2, 1, "", "bounds"], [192, 2, 1, "", "center"], [192, 3, 1, "", "concatenate"], [192, 3, 1, "", "coord_to_idx"], [192, 3, 1, "", "coord_to_pix"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "downsample"], [192, 2, 1, "", "edges"], [192, 2, 1, "", "edges_max"], [192, 2, 1, "", "edges_min"], [192, 3, 1, "", "format_plot_xaxis"], [192, 3, 1, "", "format_plot_yaxis"], [192, 3, 1, "", "from_bounds"], [192, 3, 1, "", "from_edges"], [192, 3, 1, "", "from_energy_bounds"], [192, 3, 1, "", "from_energy_edges"], [192, 3, 1, "", "from_nodes"], [192, 3, 1, "", "from_stack"], [192, 3, 1, "", "from_table"], [192, 3, 1, "", "from_table_hdu"], [192, 3, 1, "", "group_table"], [192, 2, 1, "", "interp"], [192, 3, 1, "", "is_aligned"], [192, 3, 1, "", "is_allclose"], [192, 2, 1, "", "is_energy_axis"], [192, 2, 1, "", "iter_by_edges"], [192, 2, 1, "", "name"], [192, 2, 1, "", "nbin"], [192, 2, 1, "", "nbin_per_decade"], [192, 2, 1, "", "node_type"], [192, 3, 1, "", "pad"], [192, 3, 1, "", "pix_to_coord"], [192, 3, 1, "", "pix_to_idx"], [192, 3, 1, "", "rename"], [192, 3, 1, "", "round"], [192, 3, 1, "", "slice"], [192, 3, 1, "", "squash"], [192, 3, 1, "", "to_header"], [192, 3, 1, "", "to_node_type"], [192, 3, 1, "", "to_table"], [192, 3, 1, "", "to_table_hdu"], [192, 2, 1, "", "unit"], [192, 3, 1, "", "upsample"], [192, 2, 1, "", "use_center_as_plot_labels"], [192, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[193, 3, 1, "", "apply_mask"], [193, 2, 1, "", "axis_names"], [193, 2, 1, "", "broadcasted"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "create"], [193, 2, 1, "", "flat"], [193, 2, 1, "", "frame"], [193, 2, 1, "", "lat"], [193, 2, 1, "", "lon"], [193, 2, 1, "", "match_by_name"], [193, 2, 1, "", "ndim"], [193, 2, 1, "", "phi"], [193, 2, 1, "", "shape"], [193, 2, 1, "", "size"], [193, 2, 1, "", "skycoord"], [193, 2, 1, "", "theta"], [193, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[194, 3, 1, "", "clear"], [194, 3, 1, "", "from_geom"], [194, 3, 1, "", "from_hdulist"], [194, 2, 1, "", "geom"], [194, 3, 1, "", "get"], [194, 3, 1, "", "items"], [194, 3, 1, "", "keys"], [194, 3, 1, "", "pop"], [194, 3, 1, "", "popitem"], [194, 3, 1, "", "read"], [194, 3, 1, "", "setdefault"], [194, 3, 1, "", "to_hdulist"], [194, 3, 1, "", "update"], [194, 3, 1, "", "values"], [194, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[195, 2, 1, "", "as_energy_true"], [195, 2, 1, "", "axes"], [195, 2, 1, "", "axes_names"], [195, 3, 1, "", "bin_volume"], [195, 2, 1, "", "binsz_wcs"], [195, 2, 1, "", "center_coord"], [195, 2, 1, "", "center_pix"], [195, 2, 1, "", "center_skydir"], [195, 3, 1, "", "contains"], [195, 3, 1, "", "contains_pix"], [195, 3, 1, "", "contains_wcs_pix"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "data_nbytes"], [195, 2, 1, "", "data_shape"], [195, 2, 1, "", "data_shape_axes"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "drop"], [195, 3, 1, "", "energy_mask"], [195, 2, 1, "", "frame"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_regions"], [195, 3, 1, "", "get_coord"], [195, 3, 1, "", "get_idx"], [195, 3, 1, "", "get_wcs_coord_and_weights"], [195, 2, 1, "", "has_energy_axis"], [195, 2, 1, "", "is_all_point_sky_regions"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_allsky"], [195, 2, 1, "", "is_flat"], [195, 2, 1, "", "is_hpx"], [195, 2, 1, "", "is_image"], [195, 2, 1, "", "is_region"], [195, 2, 1, "", "is_regular"], [195, 2, 1, "", "npix"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 3, 1, "", "plot_region"], [195, 2, 1, "", "projection"], [195, 2, 1, "", "region"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "replace_axis"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "separation"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "solid_angle"], [195, 3, 1, "", "squash"], [195, 3, 1, "", "to_bands_hdu"], [195, 3, 1, "", "to_binsz"], [195, 3, 1, "", "to_binsz_wcs"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_hdulist"], [195, 3, 1, "", "to_image"], [195, 3, 1, "", "to_wcs_geom"], [195, 3, 1, "", "union"], [195, 3, 1, "", "upsample"], [195, 2, 1, "", "wcs"], [195, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[196, 3, 1, "", "coadd"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 3, 1, "", "cutout"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 3, 1, "", "from_table"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_axis_data"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_hist"], [196, 3, 1, "", "plot_interactive"], [196, 3, 1, "", "plot_mask"], [196, 3, 1, "", "plot_region"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "stack"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_region_nd_map"], [196, 3, 1, "", "to_table"], [196, 3, 1, "", "to_unit"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[197, 2, 1, "", "as_plot_center"], [197, 2, 1, "", "as_plot_edges"], [197, 2, 1, "", "as_plot_labels"], [197, 2, 1, "", "as_plot_xerr"], [197, 3, 1, "", "assert_name"], [197, 2, 1, "", "bin_width"], [197, 2, 1, "", "bounds"], [197, 2, 1, "", "center"], [197, 3, 1, "", "coord_to_idx"], [197, 3, 1, "", "coord_to_pix"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "downsample"], [197, 2, 1, "", "edges"], [197, 2, 1, "", "edges_max"], [197, 2, 1, "", "edges_min"], [197, 3, 1, "", "format_plot_xaxis"], [197, 3, 1, "", "from_gti"], [197, 3, 1, "", "from_gti_bounds"], [197, 3, 1, "", "from_table"], [197, 3, 1, "", "from_time_bounds"], [197, 3, 1, "", "from_time_edges"], [197, 3, 1, "", "group_table"], [197, 2, 1, "", "interp"], [197, 3, 1, "", "is_aligned"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_contiguous"], [197, 2, 1, "", "iter_by_edges"], [197, 2, 1, "", "name"], [197, 2, 1, "", "nbin"], [197, 2, 1, "", "node_type"], [197, 3, 1, "", "pix_to_coord"], [197, 3, 1, "", "pix_to_idx"], [197, 2, 1, "", "reference_time"], [197, 3, 1, "", "slice"], [197, 3, 1, "", "squash"], [197, 2, 1, "", "time_bounds"], [197, 2, 1, "", "time_delta"], [197, 2, 1, "", "time_edges"], [197, 2, 1, "", "time_format"], [197, 2, 1, "", "time_max"], [197, 2, 1, "", "time_mid"], [197, 2, 1, "", "time_min"], [197, 3, 1, "", "to_contiguous"], [197, 3, 1, "", "to_gti"], [197, 3, 1, "", "to_header"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[198, 2, 1, "", "as_energy_true"], [198, 2, 1, "", "axes"], [198, 2, 1, "", "axes_names"], [198, 3, 1, "", "bin_volume"], [198, 3, 1, "", "binary_structure"], [198, 3, 1, "", "boundary_mask"], [198, 2, 1, "", "center_coord"], [198, 2, 1, "", "center_pix"], [198, 2, 1, "", "center_skydir"], [198, 3, 1, "", "contains"], [198, 3, 1, "", "contains_pix"], [198, 3, 1, "", "coord_to_idx"], [198, 3, 1, "", "coord_to_pix"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "create"], [198, 3, 1, "", "crop"], [198, 3, 1, "", "cutout"], [198, 3, 1, "", "cutout_slices"], [198, 3, 1, "", "data_nbytes"], [198, 2, 1, "", "data_shape"], [198, 2, 1, "", "data_shape_axes"], [198, 2, 1, "", "data_shape_image"], [198, 3, 1, "", "downsample"], [198, 3, 1, "", "drop"], [198, 3, 1, "", "energy_mask"], [198, 2, 1, "", "footprint"], [198, 2, 1, "", "footprint_rectangle_sky_region"], [198, 2, 1, "", "frame"], [198, 3, 1, "", "from_aligned"], [198, 3, 1, "", "from_hdulist"], [198, 3, 1, "", "from_header"], [198, 3, 1, "", "get_coord"], [198, 3, 1, "", "get_idx"], [198, 3, 1, "", "get_pix"], [198, 2, 1, "", "has_energy_axis"], [198, 3, 1, "", "is_aligned"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "is_allsky"], [198, 2, 1, "", "is_flat"], [198, 2, 1, "", "is_hpx"], [198, 2, 1, "", "is_image"], [198, 2, 1, "", "is_region"], [198, 2, 1, "", "is_regular"], [198, 2, 1, "", "ndim"], [198, 2, 1, "", "npix"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "pix_to_coord"], [198, 3, 1, "", "pix_to_idx"], [198, 2, 1, "", "pixel_area"], [198, 2, 1, "", "pixel_scales"], [198, 2, 1, "", "projection"], [198, 3, 1, "", "region_mask"], [198, 3, 1, "", "region_weights"], [198, 3, 1, "", "rename_axes"], [198, 3, 1, "", "replace_axis"], [198, 3, 1, "", "resample_axis"], [198, 3, 1, "", "separation"], [198, 2, 1, "", "shape_axes"], [198, 3, 1, "", "slice_by_idx"], [198, 3, 1, "", "solid_angle"], [198, 3, 1, "", "squash"], [198, 3, 1, "", "to_bands_hdu"], [198, 3, 1, "", "to_binsz"], [198, 3, 1, "", "to_cube"], [198, 3, 1, "", "to_even_npix"], [198, 3, 1, "", "to_header"], [198, 3, 1, "", "to_image"], [198, 3, 1, "", "to_odd_npix"], [198, 3, 1, "", "upsample"], [198, 2, 1, "", "wcs"], [198, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[199, 3, 1, "", "coadd"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "create"], [199, 3, 1, "", "crop"], [199, 3, 1, "", "cumsum"], [199, 2, 1, "", "data"], [199, 3, 1, "", "dot"], [199, 3, 1, "", "downsample"], [199, 3, 1, "", "fill_by_coord"], [199, 3, 1, "", "fill_by_idx"], [199, 3, 1, "", "fill_by_pix"], [199, 3, 1, "", "fill_events"], [199, 3, 1, "", "from_geom"], [199, 3, 1, "", "from_hdulist"], [199, 3, 1, "", "from_stack"], [199, 2, 1, "", "geom"], [199, 3, 1, "", "get_by_coord"], [199, 3, 1, "", "get_by_idx"], [199, 3, 1, "", "get_by_pix"], [199, 3, 1, "", "get_image_by_coord"], [199, 3, 1, "", "get_image_by_idx"], [199, 3, 1, "", "get_image_by_pix"], [199, 3, 1, "", "get_spectrum"], [199, 3, 1, "", "integral"], [199, 3, 1, "", "interp_by_coord"], [199, 3, 1, "", "interp_by_pix"], [199, 3, 1, "", "interp_to_geom"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "is_mask"], [199, 3, 1, "", "iter_by_axis"], [199, 3, 1, "", "iter_by_image"], [199, 3, 1, "", "iter_by_image_data"], [199, 3, 1, "", "iter_by_image_index"], [199, 3, 1, "", "mask_nearest_position"], [199, 2, 1, "", "meta"], [199, 3, 1, "", "normalize"], [199, 3, 1, "", "pad"], [199, 3, 1, "", "plot_grid"], [199, 3, 1, "", "plot_interactive"], [199, 2, 1, "", "quantity"], [199, 3, 1, "", "read"], [199, 3, 1, "", "reduce"], [199, 3, 1, "", "reduce_over_axes"], [199, 3, 1, "", "rename_axes"], [199, 3, 1, "", "reorder_axes"], [199, 3, 1, "", "reproject_by_image"], [199, 3, 1, "", "reproject_to_geom"], [199, 3, 1, "", "resample"], [199, 3, 1, "", "resample_axis"], [199, 3, 1, "", "sample_coord"], [199, 3, 1, "", "set_by_coord"], [199, 3, 1, "", "set_by_idx"], [199, 3, 1, "", "set_by_pix"], [199, 3, 1, "", "slice_by_idx"], [199, 3, 1, "", "split_by_axis"], [199, 3, 1, "", "sum_over_axes"], [199, 2, 1, "", "tag"], [199, 3, 1, "", "to_cube"], [199, 3, 1, "", "to_hdu"], [199, 3, 1, "", "to_hdulist"], [199, 3, 1, "", "to_unit"], [199, 2, 1, "", "unit"], [199, 3, 1, "", "upsample"], [199, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[200, 3, 1, "", "binary_dilate"], [200, 3, 1, "", "binary_erode"], [200, 3, 1, "", "coadd"], [200, 3, 1, "", "convolve"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "create"], [200, 3, 1, "", "crop"], [200, 3, 1, "", "cumsum"], [200, 3, 1, "", "cutout"], [200, 3, 1, "", "cutout_and_mask_region"], [200, 2, 1, "", "data"], [200, 3, 1, "", "dot"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "fill_by_coord"], [200, 3, 1, "", "fill_by_idx"], [200, 3, 1, "", "fill_by_pix"], [200, 3, 1, "", "fill_events"], [200, 3, 1, "", "from_geom"], [200, 3, 1, "", "from_hdu"], [200, 3, 1, "", "from_hdulist"], [200, 3, 1, "", "from_stack"], [200, 2, 1, "", "geom"], [200, 3, 1, "", "get_by_coord"], [200, 3, 1, "", "get_by_idx"], [200, 3, 1, "", "get_by_pix"], [200, 3, 1, "", "get_image_by_coord"], [200, 3, 1, "", "get_image_by_idx"], [200, 3, 1, "", "get_image_by_pix"], [200, 3, 1, "", "get_spectrum"], [200, 3, 1, "", "integral"], [200, 3, 1, "", "interp_by_coord"], [200, 3, 1, "", "interp_by_pix"], [200, 3, 1, "", "interp_to_geom"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_mask"], [200, 3, 1, "", "iter_by_axis"], [200, 3, 1, "", "iter_by_image"], [200, 3, 1, "", "iter_by_image_data"], [200, 3, 1, "", "iter_by_image_index"], [200, 3, 1, "", "mask_contains_region"], [200, 3, 1, "", "mask_nearest_position"], [200, 2, 1, "", "meta"], [200, 3, 1, "", "normalize"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "plot"], [200, 3, 1, "", "plot_grid"], [200, 3, 1, "", "plot_interactive"], [200, 3, 1, "", "plot_mask"], [200, 2, 1, "", "quantity"], [200, 3, 1, "", "read"], [200, 3, 1, "", "reduce"], [200, 3, 1, "", "reduce_over_axes"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "reorder_axes"], [200, 3, 1, "", "reproject_by_image"], [200, 3, 1, "", "reproject_to_geom"], [200, 3, 1, "", "resample"], [200, 3, 1, "", "resample_axis"], [200, 3, 1, "", "sample_coord"], [200, 3, 1, "", "set_by_coord"], [200, 3, 1, "", "set_by_idx"], [200, 3, 1, "", "set_by_pix"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "smooth"], [200, 3, 1, "", "split_by_axis"], [200, 3, 1, "", "stack"], [200, 3, 1, "", "sum_over_axes"], [200, 2, 1, "", "tag"], [200, 3, 1, "", "to_cube"], [200, 3, 1, "", "to_hdu"], [200, 3, 1, "", "to_hdulist"], [200, 3, 1, "", "to_region_nd_map"], [200, 3, 1, "", "to_region_nd_map_histogram"], [200, 3, 1, "", "to_unit"], [200, 2, 1, "", "unit"], [200, 3, 1, "", "upsample"], [200, 3, 1, "", "write"]], "gammapy.modeling": [[203, 1, 1, "", "Covariance"], [204, 1, 1, "", "CovarianceResult"], [205, 1, 1, "", "Fit"], [206, 1, 1, "", "FitResult"], [207, 1, 1, "", "OptimizeResult"], [208, 1, 1, "", "Parameter"], [209, 1, 1, "", "Parameters"], [210, 1, 1, "", "PriorParameter"], [211, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [277, 4, 1, "", "select_nested_models"], [278, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[203, 2, 1, "", "correlation"], [203, 2, 1, "", "data"], [203, 3, 1, "", "from_factor_matrix"], [203, 3, 1, "", "from_stack"], [203, 3, 1, "", "get_subcovariance"], [203, 3, 1, "", "plot_correlation"], [203, 2, 1, "", "scipy_mvn"], [203, 3, 1, "", "set_subcovariance"], [203, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[204, 2, 1, "", "backend"], [204, 2, 1, "", "matrix"], [204, 2, 1, "", "message"], [204, 2, 1, "", "method"], [204, 2, 1, "", "success"], [204, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[205, 3, 1, "", "confidence"], [205, 3, 1, "", "covariance"], [205, 3, 1, "", "optimize"], [205, 3, 1, "", "run"], [205, 3, 1, "", "stat_contour"], [205, 3, 1, "", "stat_profile"], [205, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[206, 2, 1, "", "backend"], [206, 2, 1, "", "covariance_result"], [206, 2, 1, "", "message"], [206, 2, 1, "", "method"], [206, 2, 1, "", "minuit"], [206, 2, 1, "", "models"], [206, 2, 1, "", "nfev"], [206, 2, 1, "", "optimize_result"], [206, 2, 1, "", "parameters"], [206, 2, 1, "", "success"], [206, 2, 1, "", "total_stat"], [206, 2, 1, "", "trace"], [206, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[207, 2, 1, "", "backend"], [207, 2, 1, "", "message"], [207, 2, 1, "", "method"], [207, 2, 1, "", "minuit"], [207, 2, 1, "", "models"], [207, 2, 1, "", "nfev"], [207, 2, 1, "", "parameters"], [207, 2, 1, "", "success"], [207, 3, 1, "", "to_dict"], [207, 2, 1, "", "total_stat"], [207, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[208, 3, 1, "", "autoscale"], [208, 3, 1, "", "check_limits"], [208, 2, 1, "", "conf_max"], [208, 2, 1, "", "conf_min"], [208, 3, 1, "", "copy"], [208, 2, 1, "", "error"], [208, 2, 1, "", "factor"], [208, 2, 1, "", "factor_max"], [208, 2, 1, "", "factor_min"], [208, 2, 1, "", "frozen"], [208, 2, 1, "", "is_norm"], [208, 2, 1, "", "max"], [208, 2, 1, "", "min"], [208, 2, 1, "", "name"], [208, 2, 1, "", "norm_parameters"], [208, 2, 1, "", "prior"], [208, 3, 1, "", "prior_stat_sum"], [208, 2, 1, "", "quantity"], [208, 2, 1, "", "scale"], [208, 2, 1, "", "scale_method"], [208, 2, 1, "", "scan_max"], [208, 2, 1, "", "scan_min"], [208, 2, 1, "", "scan_n_sigma"], [208, 2, 1, "", "scan_values"], [208, 3, 1, "", "to_dict"], [208, 2, 1, "", "type"], [208, 2, 1, "", "unit"], [208, 3, 1, "", "update_from_dict"], [208, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[209, 3, 1, "", "autoscale"], [209, 3, 1, "", "check_limits"], [209, 3, 1, "", "copy"], [209, 3, 1, "", "count"], [209, 2, 1, "", "free_parameters"], [209, 3, 1, "", "freeze_all"], [209, 3, 1, "", "from_dict"], [209, 3, 1, "", "from_stack"], [209, 3, 1, "", "index"], [209, 2, 1, "", "max"], [209, 2, 1, "", "min"], [209, 2, 1, "", "names"], [209, 2, 1, "", "norm_parameters"], [209, 2, 1, "", "prior"], [209, 3, 1, "", "prior_stat_sum"], [209, 3, 1, "", "restore_status"], [209, 3, 1, "", "select"], [209, 3, 1, "", "set_parameter_factors"], [209, 3, 1, "", "to_dict"], [209, 3, 1, "", "to_table"], [209, 2, 1, "", "types"], [209, 3, 1, "", "unfreeze_all"], [209, 2, 1, "", "unique_parameters"], [209, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[210, 3, 1, "", "autoscale"], [210, 3, 1, "", "check_limits"], [210, 2, 1, "", "conf_max"], [210, 2, 1, "", "conf_min"], [210, 3, 1, "", "copy"], [210, 2, 1, "", "error"], [210, 2, 1, "", "factor"], [210, 2, 1, "", "factor_max"], [210, 2, 1, "", "factor_min"], [210, 2, 1, "", "frozen"], [210, 2, 1, "", "is_norm"], [210, 2, 1, "", "max"], [210, 2, 1, "", "min"], [210, 2, 1, "", "name"], [210, 2, 1, "", "norm_parameters"], [210, 2, 1, "", "prior"], [210, 3, 1, "", "prior_stat_sum"], [210, 2, 1, "", "quantity"], [210, 2, 1, "", "scale"], [210, 2, 1, "", "scale_method"], [210, 2, 1, "", "scan_max"], [210, 2, 1, "", "scan_min"], [210, 2, 1, "", "scan_n_sigma"], [210, 2, 1, "", "scan_values"], [210, 3, 1, "", "to_dict"], [210, 2, 1, "", "type"], [210, 2, 1, "", "unit"], [210, 3, 1, "", "update_from_dict"], [210, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[211, 3, 1, "", "autoscale"], [211, 3, 1, "", "check_limits"], [211, 3, 1, "", "copy"], [211, 3, 1, "", "count"], [211, 2, 1, "", "free_parameters"], [211, 3, 1, "", "freeze_all"], [211, 3, 1, "", "from_dict"], [211, 3, 1, "", "from_stack"], [211, 3, 1, "", "index"], [211, 2, 1, "", "max"], [211, 2, 1, "", "min"], [211, 2, 1, "", "names"], [211, 2, 1, "", "norm_parameters"], [211, 2, 1, "", "prior"], [211, 3, 1, "", "prior_stat_sum"], [211, 3, 1, "", "restore_status"], [211, 3, 1, "", "select"], [211, 3, 1, "", "set_parameter_factors"], [211, 3, 1, "", "to_dict"], [211, 3, 1, "", "to_table"], [211, 2, 1, "", "types"], [211, 3, 1, "", "unfreeze_all"], [211, 2, 1, "", "unique_parameters"], [211, 2, 1, "", "value"]], "gammapy.modeling.models": [[212, 1, 1, "", "BrokenPowerLawSpectralModel"], [213, 1, 1, "", "CompoundSpectralModel"], [214, 1, 1, "", "ConstantFluxSpatialModel"], [215, 1, 1, "", "ConstantSpatialModel"], [216, 1, 1, "", "ConstantSpectralModel"], [217, 1, 1, "", "ConstantTemporalModel"], [218, 1, 1, "", "DatasetModels"], [219, 1, 1, "", "DiskSpatialModel"], [220, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [221, 5, 1, "", "EBL_DATA_BUILTIN"], [222, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [223, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [224, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [225, 1, 1, "", "ExpDecayTemporalModel"], [226, 1, 1, "", "FoVBackgroundModel"], [227, 1, 1, "", "GaussianSpatialModel"], [228, 1, 1, "", "GaussianSpectralModel"], [229, 1, 1, "", "GaussianTemporalModel"], [230, 1, 1, "", "GeneralizedGaussianSpatialModel"], [231, 1, 1, "", "GeneralizedGaussianTemporalModel"], [232, 1, 1, "", "LightCurveTemplateTemporalModel"], [233, 1, 1, "", "LinearTemporalModel"], [234, 1, 1, "", "LogParabolaNormSpectralModel"], [235, 1, 1, "", "LogParabolaSpectralModel"], [236, 5, 1, "", "MODEL_REGISTRY"], [237, 1, 1, "", "MeyerCrabSpectralModel"], [238, 1, 1, "", "Model"], [239, 1, 1, "", "ModelBase"], [240, 1, 1, "", "Models"], [241, 1, 1, "", "NaimaSpectralModel"], [242, 1, 1, "", "PiecewiseNormSpatialModel"], [243, 1, 1, "", "PiecewiseNormSpectralModel"], [244, 1, 1, "", "PointSpatialModel"], [245, 1, 1, "", "PowerLaw2SpectralModel"], [246, 1, 1, "", "PowerLawNormSpectralModel"], [247, 1, 1, "", "PowerLawSpectralModel"], [248, 1, 1, "", "PowerLawTemporalModel"], [249, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [250, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [251, 1, 1, "", "ScaleSpectralModel"], [252, 1, 1, "", "Shell2SpatialModel"], [253, 1, 1, "", "ShellSpatialModel"], [254, 1, 1, "", "SineTemporalModel"], [255, 1, 1, "", "SkyModel"], [256, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [257, 1, 1, "", "SpatialModel"], [258, 1, 1, "", "SpectralModel"], [259, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [260, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [261, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [262, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [263, 1, 1, "", "TemplateNDSpatialModel"], [264, 1, 1, "", "TemplateNDSpectralModel"], [265, 1, 1, "", "TemplateNPredModel"], [266, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [267, 1, 1, "", "TemplateSpatialModel"], [268, 1, 1, "", "TemplateSpectralModel"], [269, 1, 1, "", "TemporalModel"], [270, 4, 1, "", "create_cosmic_ray_spectral_model"], [271, 4, 1, "", "create_crab_spectral_model"], [272, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [273, 4, 1, "", "integrate_spectrum"], [274, 4, 1, "", "read_hermes_cube"], [275, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[212, 3, 1, "", "__call__"], [212, 2, 1, "", "amplitude"], [212, 3, 1, "", "copy"], [212, 2, 1, "", "covariance"], [212, 2, 1, "", "default_parameters"], [212, 2, 1, "", "ebreak"], [212, 3, 1, "", "energy_flux"], [212, 3, 1, "", "energy_flux_error"], [212, 3, 1, "", "evaluate"], [212, 3, 1, "", "evaluate_error"], [212, 3, 1, "", "freeze"], [212, 3, 1, "", "from_dict"], [212, 3, 1, "", "from_parameters"], [212, 2, 1, "", "frozen"], [212, 2, 1, "", "index1"], [212, 2, 1, "", "index2"], [212, 3, 1, "", "integral"], [212, 3, 1, "", "integral_error"], [212, 3, 1, "", "inverse"], [212, 3, 1, "", "inverse_all"], [212, 2, 1, "", "is_norm_spectral_model"], [212, 2, 1, "", "parameters"], [212, 2, 1, "", "parameters_unique_names"], [212, 2, 1, "", "pivot_energy"], [212, 3, 1, "", "plot"], [212, 3, 1, "", "plot_error"], [212, 3, 1, "", "reassign"], [212, 3, 1, "", "reference_fluxes"], [212, 3, 1, "", "spectral_index"], [212, 3, 1, "", "spectral_index_error"], [212, 2, 1, "", "tag"], [212, 3, 1, "", "to_dict"], [212, 2, 1, "", "type"], [212, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[213, 3, 1, "", "__call__"], [213, 3, 1, "", "copy"], [213, 2, 1, "", "covariance"], [213, 2, 1, "", "default_parameters"], [213, 3, 1, "", "energy_flux"], [213, 3, 1, "", "energy_flux_error"], [213, 3, 1, "", "evaluate"], [213, 3, 1, "", "evaluate_error"], [213, 3, 1, "", "freeze"], [213, 3, 1, "", "from_dict"], [213, 3, 1, "", "from_parameters"], [213, 2, 1, "", "frozen"], [213, 3, 1, "", "integral"], [213, 3, 1, "", "integral_error"], [213, 3, 1, "", "inverse"], [213, 3, 1, "", "inverse_all"], [213, 2, 1, "", "is_norm_spectral_model"], [213, 2, 1, "", "parameters"], [213, 2, 1, "", "parameters_unique_names"], [213, 2, 1, "", "pivot_energy"], [213, 3, 1, "", "plot"], [213, 3, 1, "", "plot_error"], [213, 3, 1, "", "reassign"], [213, 3, 1, "", "reference_fluxes"], [213, 3, 1, "", "spectral_index"], [213, 3, 1, "", "spectral_index_error"], [213, 2, 1, "", "tag"], [213, 3, 1, "", "to_dict"], [213, 2, 1, "", "type"], [213, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[214, 3, 1, "", "__call__"], [214, 3, 1, "", "copy"], [214, 2, 1, "", "covariance"], [214, 2, 1, "", "default_parameters"], [214, 3, 1, "", "evaluate"], [214, 3, 1, "", "evaluate_geom"], [214, 2, 1, "", "evaluation_bin_size_min"], [214, 2, 1, "", "evaluation_radius"], [214, 2, 1, "", "evaluation_region"], [214, 2, 1, "", "frame"], [214, 3, 1, "", "freeze"], [214, 3, 1, "", "from_dict"], [214, 3, 1, "", "from_parameters"], [214, 3, 1, "", "from_position"], [214, 2, 1, "", "frozen"], [214, 3, 1, "", "integrate_geom"], [214, 2, 1, "", "is_energy_dependent"], [214, 2, 1, "", "parameters"], [214, 2, 1, "", "parameters_unique_names"], [214, 2, 1, "", "phi_0"], [214, 3, 1, "", "plot"], [214, 3, 1, "", "plot_error"], [214, 3, 1, "", "plot_grid"], [214, 3, 1, "", "plot_interactive"], [214, 3, 1, "", "plot_position_error"], [214, 2, 1, "", "position"], [214, 2, 1, "", "position_error"], [214, 2, 1, "", "position_lonlat"], [214, 3, 1, "", "reassign"], [214, 2, 1, "", "tag"], [214, 3, 1, "", "to_dict"], [214, 3, 1, "", "to_region"], [214, 2, 1, "", "type"], [214, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[215, 3, 1, "", "__call__"], [215, 3, 1, "", "copy"], [215, 2, 1, "", "covariance"], [215, 2, 1, "", "default_parameters"], [215, 3, 1, "", "evaluate"], [215, 3, 1, "", "evaluate_geom"], [215, 2, 1, "", "evaluation_bin_size_min"], [215, 2, 1, "", "evaluation_radius"], [215, 2, 1, "", "evaluation_region"], [215, 2, 1, "", "frame"], [215, 3, 1, "", "freeze"], [215, 3, 1, "", "from_dict"], [215, 3, 1, "", "from_parameters"], [215, 3, 1, "", "from_position"], [215, 2, 1, "", "frozen"], [215, 3, 1, "", "integrate_geom"], [215, 2, 1, "", "is_energy_dependent"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "parameters_unique_names"], [215, 2, 1, "", "phi_0"], [215, 3, 1, "", "plot"], [215, 3, 1, "", "plot_error"], [215, 3, 1, "", "plot_grid"], [215, 3, 1, "", "plot_interactive"], [215, 3, 1, "", "plot_position_error"], [215, 2, 1, "", "position"], [215, 2, 1, "", "position_error"], [215, 2, 1, "", "position_lonlat"], [215, 3, 1, "", "reassign"], [215, 2, 1, "", "tag"], [215, 3, 1, "", "to_dict"], [215, 3, 1, "", "to_region"], [215, 2, 1, "", "type"], [215, 3, 1, "", "unfreeze"], [215, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[216, 3, 1, "", "__call__"], [216, 2, 1, "", "const"], [216, 3, 1, "", "copy"], [216, 2, 1, "", "covariance"], [216, 2, 1, "", "default_parameters"], [216, 3, 1, "", "energy_flux"], [216, 3, 1, "", "energy_flux_error"], [216, 3, 1, "", "evaluate"], [216, 3, 1, "", "evaluate_error"], [216, 3, 1, "", "freeze"], [216, 3, 1, "", "from_dict"], [216, 3, 1, "", "from_parameters"], [216, 2, 1, "", "frozen"], [216, 3, 1, "", "integral"], [216, 3, 1, "", "integral_error"], [216, 3, 1, "", "inverse"], [216, 3, 1, "", "inverse_all"], [216, 2, 1, "", "is_norm_spectral_model"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "parameters_unique_names"], [216, 2, 1, "", "pivot_energy"], [216, 3, 1, "", "plot"], [216, 3, 1, "", "plot_error"], [216, 3, 1, "", "reassign"], [216, 3, 1, "", "reference_fluxes"], [216, 3, 1, "", "spectral_index"], [216, 3, 1, "", "spectral_index_error"], [216, 2, 1, "", "tag"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "type"], [216, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[217, 3, 1, "", "__call__"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "covariance"], [217, 2, 1, "", "default_parameters"], [217, 3, 1, "", "evaluate"], [217, 3, 1, "", "freeze"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_parameters"], [217, 2, 1, "", "frozen"], [217, 3, 1, "", "integral"], [217, 2, 1, "", "is_energy_dependent"], [217, 2, 1, "", "parameters"], [217, 2, 1, "", "parameters_unique_names"], [217, 3, 1, "", "plot"], [217, 3, 1, "", "reassign"], [217, 2, 1, "", "reference_time"], [217, 3, 1, "", "sample_time"], [217, 2, 1, "", "tag"], [217, 3, 1, "", "time_sum"], [217, 3, 1, "", "to_dict"], [217, 2, 1, "", "type"], [217, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[218, 3, 1, "", "copy"], [218, 3, 1, "", "count"], [218, 2, 1, "", "covariance"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_yaml"], [218, 2, 1, "", "frozen"], [218, 3, 1, "", "index"], [218, 2, 1, "", "names"], [218, 2, 1, "", "parameters"], [218, 2, 1, "", "parameters_unique_names"], [218, 3, 1, "", "plot_positions"], [218, 3, 1, "", "plot_regions"], [218, 2, 1, "", "positions"], [218, 3, 1, "", "read"], [218, 3, 1, "", "read_covariance"], [218, 3, 1, "", "reassign"], [218, 3, 1, "", "restore_status"], [218, 3, 1, "", "select"], [218, 3, 1, "", "select_from_geom"], [218, 3, 1, "", "select_mask"], [218, 3, 1, "", "select_region"], [218, 3, 1, "", "selection_mask"], [218, 3, 1, "", "set_parameters_bounds"], [218, 3, 1, "", "to_dict"], [218, 3, 1, "", "to_parameters_table"], [218, 3, 1, "", "to_regions"], [218, 3, 1, "", "to_template_sky_model"], [218, 3, 1, "", "to_template_spectral_model"], [218, 3, 1, "", "to_yaml"], [218, 3, 1, "", "unfreeze"], [218, 3, 1, "", "update_link_label"], [218, 3, 1, "", "update_parameters_from_table"], [218, 2, 1, "", "wcs_geom"], [218, 3, 1, "", "write"], [218, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[219, 3, 1, "", "__call__"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "covariance"], [219, 2, 1, "", "default_parameters"], [219, 2, 1, "", "e"], [219, 2, 1, "", "edge_width"], [219, 3, 1, "", "evaluate"], [219, 3, 1, "", "evaluate_geom"], [219, 2, 1, "", "evaluation_bin_size_min"], [219, 2, 1, "", "evaluation_radius"], [219, 2, 1, "", "evaluation_region"], [219, 3, 1, "", "freeze"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_parameters"], [219, 3, 1, "", "from_position"], [219, 3, 1, "", "from_region"], [219, 2, 1, "", "frozen"], [219, 3, 1, "", "integrate_geom"], [219, 2, 1, "", "is_energy_dependent"], [219, 2, 1, "", "lat_0"], [219, 2, 1, "", "lon_0"], [219, 2, 1, "", "parameters"], [219, 2, 1, "", "parameters_unique_names"], [219, 2, 1, "", "phi"], [219, 2, 1, "", "phi_0"], [219, 3, 1, "", "plot"], [219, 3, 1, "", "plot_error"], [219, 3, 1, "", "plot_grid"], [219, 3, 1, "", "plot_interactive"], [219, 3, 1, "", "plot_position_error"], [219, 2, 1, "", "position"], [219, 2, 1, "", "position_error"], [219, 2, 1, "", "position_lonlat"], [219, 2, 1, "", "r_0"], [219, 3, 1, "", "reassign"], [219, 2, 1, "", "tag"], [219, 3, 1, "", "to_dict"], [219, 3, 1, "", "to_region"], [219, 2, 1, "", "type"], [219, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[220, 3, 1, "", "__call__"], [220, 2, 1, "", "alpha_norm"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 3, 1, "", "energy_flux"], [220, 3, 1, "", "energy_flux_error"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_error"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 2, 1, "", "frozen"], [220, 3, 1, "", "integral"], [220, 3, 1, "", "integral_error"], [220, 3, 1, "", "inverse"], [220, 3, 1, "", "inverse_all"], [220, 2, 1, "", "is_norm_spectral_model"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "parameters_unique_names"], [220, 2, 1, "", "pivot_energy"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "read"], [220, 3, 1, "", "read_builtin"], [220, 3, 1, "", "reassign"], [220, 2, 1, "", "redshift"], [220, 3, 1, "", "reference_fluxes"], [220, 3, 1, "", "spectral_index"], [220, 3, 1, "", "spectral_index_error"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[222, 3, 1, "", "__call__"], [222, 2, 1, "", "amplitude"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 2, 1, "", "ecut"], [222, 3, 1, "", "energy_flux"], [222, 3, 1, "", "energy_flux_error"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_error"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 2, 1, "", "index"], [222, 3, 1, "", "integral"], [222, 3, 1, "", "integral_error"], [222, 3, 1, "", "inverse"], [222, 3, 1, "", "inverse_all"], [222, 2, 1, "", "is_norm_spectral_model"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "parameters_unique_names"], [222, 2, 1, "", "pivot_energy"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "plot_error"], [222, 3, 1, "", "reassign"], [222, 2, 1, "", "reference"], [222, 3, 1, "", "reference_fluxes"], [222, 3, 1, "", "spectral_index"], [222, 3, 1, "", "spectral_index_error"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[223, 3, 1, "", "__call__"], [223, 2, 1, "", "alpha"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 3, 1, "", "energy_flux"], [223, 3, 1, "", "energy_flux_error"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_error"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 2, 1, "", "frozen"], [223, 2, 1, "", "index"], [223, 3, 1, "", "integral"], [223, 3, 1, "", "integral_error"], [223, 3, 1, "", "inverse"], [223, 3, 1, "", "inverse_all"], [223, 2, 1, "", "is_norm_spectral_model"], [223, 2, 1, "", "lambda_"], [223, 2, 1, "", "norm"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 2, 1, "", "pivot_energy"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "reference"], [223, 3, 1, "", "reference_fluxes"], [223, 3, 1, "", "spectral_index"], [223, 3, 1, "", "spectral_index_error"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[224, 3, 1, "", "__call__"], [224, 2, 1, "", "alpha"], [224, 2, 1, "", "amplitude"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 2, 1, "", "e_peak"], [224, 3, 1, "", "energy_flux"], [224, 3, 1, "", "energy_flux_error"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_error"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 2, 1, "", "index"], [224, 3, 1, "", "integral"], [224, 3, 1, "", "integral_error"], [224, 3, 1, "", "inverse"], [224, 3, 1, "", "inverse_all"], [224, 2, 1, "", "is_norm_spectral_model"], [224, 2, 1, "", "lambda_"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "pivot_energy"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "reassign"], [224, 2, 1, "", "reference"], [224, 3, 1, "", "reference_fluxes"], [224, 3, 1, "", "spectral_index"], [224, 3, 1, "", "spectral_index_error"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integral"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "reference_time"], [225, 3, 1, "", "sample_time"], [225, 2, 1, "", "t0"], [225, 2, 1, "", "t_ref"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "time_sum"], [225, 3, 1, "", "to_dict"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[226, 3, 1, "", "contributes"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_geom"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 2, 1, "", "name"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 3, 1, "", "reassign"], [226, 3, 1, "", "reset_to_default"], [226, 2, 1, "", "spatial_model"], [226, 2, 1, "", "spectral_model"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpatialModel": [[227, 3, 1, "", "__call__"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 2, 1, "", "e"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "evaluate_geom"], [227, 2, 1, "", "evaluation_bin_size_min"], [227, 2, 1, "", "evaluation_radius"], [227, 2, 1, "", "evaluation_region"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 3, 1, "", "from_position"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integrate_geom"], [227, 2, 1, "", "is_energy_dependent"], [227, 2, 1, "", "lat_0"], [227, 2, 1, "", "lon_0"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 2, 1, "", "phi"], [227, 2, 1, "", "phi_0"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "plot_error"], [227, 3, 1, "", "plot_grid"], [227, 3, 1, "", "plot_interactive"], [227, 3, 1, "", "plot_position_error"], [227, 2, 1, "", "position"], [227, 2, 1, "", "position_error"], [227, 2, 1, "", "position_lonlat"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "sigma"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "to_dict"], [227, 3, 1, "", "to_region"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[228, 3, 1, "", "__call__"], [228, 2, 1, "", "amplitude"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 3, 1, "", "energy_flux"], [228, 3, 1, "", "energy_flux_error"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_error"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integral"], [228, 3, 1, "", "integral_error"], [228, 3, 1, "", "inverse"], [228, 3, 1, "", "inverse_all"], [228, 2, 1, "", "is_norm_spectral_model"], [228, 2, 1, "", "mean"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 2, 1, "", "pivot_energy"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "reassign"], [228, 3, 1, "", "reference_fluxes"], [228, 2, 1, "", "sigma"], [228, 3, 1, "", "spectral_index"], [228, 3, 1, "", "spectral_index_error"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[229, 3, 1, "", "__call__"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "integral"], [229, 2, 1, "", "is_energy_dependent"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "reference_time"], [229, 3, 1, "", "sample_time"], [229, 2, 1, "", "sigma"], [229, 2, 1, "", "t_ref"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "time_sum"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[230, 3, 1, "", "__call__"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 2, 1, "", "e"], [230, 2, 1, "", "eta"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_geom"], [230, 2, 1, "", "evaluation_bin_size_min"], [230, 2, 1, "", "evaluation_radius"], [230, 2, 1, "", "evaluation_region"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 3, 1, "", "from_position"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integrate_geom"], [230, 2, 1, "", "is_energy_dependent"], [230, 2, 1, "", "lat_0"], [230, 2, 1, "", "lon_0"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 2, 1, "", "phi"], [230, 2, 1, "", "phi_0"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "plot_grid"], [230, 3, 1, "", "plot_interactive"], [230, 3, 1, "", "plot_position_error"], [230, 2, 1, "", "position"], [230, 2, 1, "", "position_error"], [230, 2, 1, "", "position_lonlat"], [230, 2, 1, "", "r_0"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "to_dict"], [230, 3, 1, "", "to_region"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[231, 3, 1, "", "__call__"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 2, 1, "", "eta"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integral"], [231, 2, 1, "", "is_energy_dependent"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "reference_time"], [231, 3, 1, "", "sample_time"], [231, 2, 1, "", "t_decay"], [231, 2, 1, "", "t_ref"], [231, 2, 1, "", "t_rise"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "time_sum"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[232, 3, 1, "", "__call__"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 3, 1, "", "from_table"], [232, 2, 1, "", "frozen"], [232, 3, 1, "", "integral"], [232, 2, 1, "", "is_energy_dependent"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "read"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "reference_time"], [232, 3, 1, "", "sample_time"], [232, 2, 1, "", "t_ref"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "time_sum"], [232, 3, 1, "", "to_dict"], [232, 3, 1, "", "to_table"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"], [232, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[233, 3, 1, "", "__call__"], [233, 2, 1, "", "alpha"], [233, 2, 1, "", "beta"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "integral"], [233, 2, 1, "", "is_energy_dependent"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference_time"], [233, 3, 1, "", "sample_time"], [233, 2, 1, "", "t_ref"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "time_sum"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[234, 3, 1, "", "__call__"], [234, 2, 1, "", "alpha"], [234, 2, 1, "", "beta"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "energy_flux"], [234, 3, 1, "", "energy_flux_error"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_error"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_log10"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 3, 1, "", "integral"], [234, 3, 1, "", "integral_error"], [234, 3, 1, "", "inverse"], [234, 3, 1, "", "inverse_all"], [234, 2, 1, "", "is_norm_spectral_model"], [234, 2, 1, "", "norm"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 2, 1, "", "pivot_energy"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "plot_error"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference"], [234, 3, 1, "", "reference_fluxes"], [234, 3, 1, "", "spectral_index"], [234, 3, 1, "", "spectral_index_error"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "alpha"], [235, 2, 1, "", "amplitude"], [235, 2, 1, "", "beta"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 2, 1, "", "e_peak"], [235, 3, 1, "", "energy_flux"], [235, 3, 1, "", "energy_flux_error"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_error"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_log10"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integral"], [235, 3, 1, "", "integral_error"], [235, 3, 1, "", "inverse"], [235, 3, 1, "", "inverse_all"], [235, 2, 1, "", "is_norm_spectral_model"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 2, 1, "", "pivot_energy"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "reference"], [235, 3, 1, "", "reference_fluxes"], [235, 3, 1, "", "spectral_index"], [235, 3, 1, "", "spectral_index_error"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[237, 3, 1, "", "__call__"], [237, 2, 1, "", "coefficients"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "energy_flux"], [237, 3, 1, "", "energy_flux_error"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "evaluate_error"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integral"], [237, 3, 1, "", "integral_error"], [237, 3, 1, "", "inverse"], [237, 3, 1, "", "inverse_all"], [237, 2, 1, "", "is_norm_spectral_model"], [237, 2, 1, "", "norm"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 2, 1, "", "pivot_energy"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "plot_error"], [237, 3, 1, "", "reassign"], [237, 3, 1, "", "reference_fluxes"], [237, 3, 1, "", "spectral_index"], [237, 3, 1, "", "spectral_index_error"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[238, 3, 1, "", "create"], [238, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 3, 1, "", "reassign"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[240, 3, 1, "", "append"], [240, 3, 1, "", "clear"], [240, 3, 1, "", "copy"], [240, 3, 1, "", "count"], [240, 2, 1, "", "covariance"], [240, 3, 1, "", "extend"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_yaml"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "index"], [240, 3, 1, "", "insert"], [240, 2, 1, "", "names"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 3, 1, "", "plot_positions"], [240, 3, 1, "", "plot_regions"], [240, 3, 1, "", "pop"], [240, 2, 1, "", "positions"], [240, 3, 1, "", "read"], [240, 3, 1, "", "read_covariance"], [240, 3, 1, "", "reassign"], [240, 3, 1, "", "remove"], [240, 3, 1, "", "restore_status"], [240, 3, 1, "", "reverse"], [240, 3, 1, "", "select"], [240, 3, 1, "", "select_from_geom"], [240, 3, 1, "", "select_mask"], [240, 3, 1, "", "select_region"], [240, 3, 1, "", "selection_mask"], [240, 3, 1, "", "set_parameters_bounds"], [240, 3, 1, "", "set_prior"], [240, 3, 1, "", "to_dict"], [240, 3, 1, "", "to_parameters_table"], [240, 3, 1, "", "to_regions"], [240, 3, 1, "", "to_template_sky_model"], [240, 3, 1, "", "to_template_spectral_model"], [240, 3, 1, "", "to_yaml"], [240, 3, 1, "", "unfreeze"], [240, 3, 1, "", "update_link_label"], [240, 3, 1, "", "update_parameters_from_table"], [240, 2, 1, "", "wcs_geom"], [240, 3, 1, "", "write"], [240, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[241, 3, 1, "", "__call__"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 3, 1, "", "energy_flux"], [241, 3, 1, "", "energy_flux_error"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "evaluate_error"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 2, 1, "", "include_ssc"], [241, 3, 1, "", "integral"], [241, 3, 1, "", "integral_error"], [241, 3, 1, "", "inverse"], [241, 3, 1, "", "inverse_all"], [241, 2, 1, "", "is_norm_spectral_model"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 2, 1, "", "particle_distribution"], [241, 2, 1, "", "pivot_energy"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "plot_error"], [241, 3, 1, "", "reassign"], [241, 3, 1, "", "reference_fluxes"], [241, 3, 1, "", "spectral_index"], [241, 3, 1, "", "spectral_index_error"], [241, 2, 1, "", "ssc_model"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[242, 3, 1, "", "__call__"], [242, 2, 1, "", "coords"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "evaluate_geom"], [242, 2, 1, "", "evaluation_bin_size_min"], [242, 2, 1, "", "evaluation_radius"], [242, 2, 1, "", "evaluation_region"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 3, 1, "", "from_position"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integrate_geom"], [242, 2, 1, "", "is_energy_dependent"], [242, 2, 1, "", "norms"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 2, 1, "", "phi_0"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "plot_error"], [242, 3, 1, "", "plot_grid"], [242, 3, 1, "", "plot_interactive"], [242, 3, 1, "", "plot_position_error"], [242, 2, 1, "", "position"], [242, 2, 1, "", "position_error"], [242, 2, 1, "", "position_lonlat"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "to_dict"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[243, 3, 1, "", "__call__"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 2, 1, "", "energy"], [243, 3, 1, "", "energy_flux"], [243, 3, 1, "", "energy_flux_error"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "evaluate_error"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integral"], [243, 3, 1, "", "integral_error"], [243, 3, 1, "", "inverse"], [243, 3, 1, "", "inverse_all"], [243, 2, 1, "", "is_norm_spectral_model"], [243, 2, 1, "", "norms"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 2, 1, "", "pivot_energy"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "plot_error"], [243, 3, 1, "", "reassign"], [243, 3, 1, "", "reference_fluxes"], [243, 3, 1, "", "spectral_index"], [243, 3, 1, "", "spectral_index_error"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[244, 3, 1, "", "__call__"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "evaluate_geom"], [244, 2, 1, "", "evaluation_bin_size_min"], [244, 2, 1, "", "evaluation_radius"], [244, 2, 1, "", "evaluation_region"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 3, 1, "", "from_position"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integrate_geom"], [244, 2, 1, "", "is_energy_dependent"], [244, 2, 1, "", "lat_0"], [244, 2, 1, "", "lon_0"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 2, 1, "", "phi_0"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "plot_error"], [244, 3, 1, "", "plot_grid"], [244, 3, 1, "", "plot_interactive"], [244, 3, 1, "", "plot_position_error"], [244, 2, 1, "", "position"], [244, 2, 1, "", "position_error"], [244, 2, 1, "", "position_lonlat"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "to_dict"], [244, 3, 1, "", "to_region"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[245, 3, 1, "", "__call__"], [245, 2, 1, "", "amplitude"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 2, 1, "", "emax"], [245, 2, 1, "", "emin"], [245, 3, 1, "", "energy_flux"], [245, 3, 1, "", "energy_flux_error"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "evaluate_error"], [245, 3, 1, "", "evaluate_integral"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 2, 1, "", "index"], [245, 3, 1, "", "integral"], [245, 3, 1, "", "integral_error"], [245, 3, 1, "", "inverse"], [245, 3, 1, "", "inverse_all"], [245, 2, 1, "", "is_norm_spectral_model"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 2, 1, "", "pivot_energy"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "reassign"], [245, 3, 1, "", "reference_fluxes"], [245, 3, 1, "", "spectral_index"], [245, 3, 1, "", "spectral_index_error"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[246, 3, 1, "", "__call__"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "energy_flux"], [246, 3, 1, "", "energy_flux_error"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "evaluate_energy_flux"], [246, 3, 1, "", "evaluate_error"], [246, 3, 1, "", "evaluate_integral"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "integral"], [246, 3, 1, "", "integral_error"], [246, 3, 1, "", "inverse"], [246, 3, 1, "", "inverse_all"], [246, 2, 1, "", "is_norm_spectral_model"], [246, 2, 1, "", "norm"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 2, 1, "", "pivot_energy"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "plot_error"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "reference"], [246, 3, 1, "", "reference_fluxes"], [246, 3, 1, "", "spectral_index"], [246, 3, 1, "", "spectral_index_error"], [246, 2, 1, "", "tag"], [246, 2, 1, "", "tilt"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[247, 3, 1, "", "__call__"], [247, 2, 1, "", "amplitude"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "energy_flux"], [247, 3, 1, "", "energy_flux_error"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_energy_flux"], [247, 3, 1, "", "evaluate_error"], [247, 3, 1, "", "evaluate_integral"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 2, 1, "", "index"], [247, 3, 1, "", "integral"], [247, 3, 1, "", "integral_error"], [247, 3, 1, "", "inverse"], [247, 3, 1, "", "inverse_all"], [247, 2, 1, "", "is_norm_spectral_model"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 2, 1, "", "pivot_energy"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "reassign"], [247, 2, 1, "", "reference"], [247, 3, 1, "", "reference_fluxes"], [247, 3, 1, "", "spectral_index"], [247, 3, 1, "", "spectral_index_error"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[248, 3, 1, "", "__call__"], [248, 2, 1, "", "alpha"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integral"], [248, 2, 1, "", "is_energy_dependent"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 3, 1, "", "plot"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "reference_time"], [248, 3, 1, "", "sample_time"], [248, 2, 1, "", "t0"], [248, 2, 1, "", "t_ref"], [248, 2, 1, "", "tag"], [248, 3, 1, "", "time_sum"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ScaleSpectralModel": [[251, 3, 1, "", "__call__"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 3, 1, "", "energy_flux"], [251, 3, 1, "", "energy_flux_error"], [251, 3, 1, "", "evaluate"], [251, 3, 1, "", "evaluate_error"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "integral"], [251, 3, 1, "", "integral_error"], [251, 3, 1, "", "inverse"], [251, 3, 1, "", "inverse_all"], [251, 2, 1, "", "is_norm_spectral_model"], [251, 2, 1, "", "norm"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 2, 1, "", "pivot_energy"], [251, 3, 1, "", "plot"], [251, 3, 1, "", "plot_error"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "reference_fluxes"], [251, 3, 1, "", "spectral_index"], [251, 3, 1, "", "spectral_index_error"], [251, 2, 1, "", "tag"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[252, 3, 1, "", "__call__"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 2, 1, "", "eta"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "evaluate_geom"], [252, 2, 1, "", "evaluation_bin_size_min"], [252, 2, 1, "", "evaluation_radius"], [252, 2, 1, "", "evaluation_region"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 3, 1, "", "from_position"], [252, 2, 1, "", "frozen"], [252, 3, 1, "", "integrate_geom"], [252, 2, 1, "", "is_energy_dependent"], [252, 2, 1, "", "lat_0"], [252, 2, 1, "", "lon_0"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 2, 1, "", "phi_0"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "plot_grid"], [252, 3, 1, "", "plot_interactive"], [252, 3, 1, "", "plot_position_error"], [252, 2, 1, "", "position"], [252, 2, 1, "", "position_error"], [252, 2, 1, "", "position_lonlat"], [252, 2, 1, "", "r_0"], [252, 2, 1, "", "r_in"], [252, 3, 1, "", "reassign"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "to_dict"], [252, 3, 1, "", "to_region"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[253, 3, 1, "", "__call__"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_geom"], [253, 2, 1, "", "evaluation_bin_size_min"], [253, 2, 1, "", "evaluation_radius"], [253, 2, 1, "", "evaluation_region"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 3, 1, "", "from_position"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "integrate_geom"], [253, 2, 1, "", "is_energy_dependent"], [253, 2, 1, "", "lat_0"], [253, 2, 1, "", "lon_0"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 2, 1, "", "phi_0"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "plot_grid"], [253, 3, 1, "", "plot_interactive"], [253, 3, 1, "", "plot_position_error"], [253, 2, 1, "", "position"], [253, 2, 1, "", "position_error"], [253, 2, 1, "", "position_lonlat"], [253, 2, 1, "", "radius"], [253, 3, 1, "", "reassign"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 3, 1, "", "to_region"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"], [253, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[254, 3, 1, "", "__call__"], [254, 2, 1, "", "amp"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integral"], [254, 2, 1, "", "is_energy_dependent"], [254, 2, 1, "", "omega"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "reassign"], [254, 2, 1, "", "reference_time"], [254, 3, 1, "", "sample_time"], [254, 2, 1, "", "t_ref"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "time_sum"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[255, 3, 1, "", "__call__"], [255, 3, 1, "", "contributes"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 3, 1, "", "create"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_geom"], [255, 2, 1, "", "evaluation_bin_size_min"], [255, 2, 1, "", "evaluation_radius"], [255, 2, 1, "", "evaluation_region"], [255, 2, 1, "", "frame"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 2, 1, "", "frozen"], [255, 3, 1, "", "integrate_geom"], [255, 2, 1, "", "name"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "position"], [255, 2, 1, "", "position_lonlat"], [255, 3, 1, "", "reassign"], [255, 2, 1, "", "spatial_model"], [255, 2, 1, "", "spectral_model"], [255, 2, 1, "", "tag"], [255, 2, 1, "", "temporal_model"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[256, 3, 1, "", "__call__"], [256, 2, 1, "", "amplitude"], [256, 2, 1, "", "beta"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 2, 1, "", "ebreak"], [256, 3, 1, "", "energy_flux"], [256, 3, 1, "", "energy_flux_error"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_error"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 2, 1, "", "index1"], [256, 2, 1, "", "index2"], [256, 3, 1, "", "integral"], [256, 3, 1, "", "integral_error"], [256, 3, 1, "", "inverse"], [256, 3, 1, "", "inverse_all"], [256, 2, 1, "", "is_norm_spectral_model"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 2, 1, "", "pivot_energy"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "reference"], [256, 3, 1, "", "reference_fluxes"], [256, 3, 1, "", "spectral_index"], [256, 3, 1, "", "spectral_index_error"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "evaluate_geom"], [257, 2, 1, "", "evaluation_bin_size_min"], [257, 2, 1, "", "evaluation_radius"], [257, 2, 1, "", "evaluation_region"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 3, 1, "", "from_position"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integrate_geom"], [257, 2, 1, "", "is_energy_dependent"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "phi_0"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "plot_grid"], [257, 3, 1, "", "plot_interactive"], [257, 3, 1, "", "plot_position_error"], [257, 2, 1, "", "position"], [257, 2, 1, "", "position_error"], [257, 2, 1, "", "position_lonlat"], [257, 3, 1, "", "reassign"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[258, 3, 1, "", "__call__"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 3, 1, "", "energy_flux"], [258, 3, 1, "", "energy_flux_error"], [258, 3, 1, "", "evaluate_error"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 3, 1, "", "integral"], [258, 3, 1, "", "integral_error"], [258, 3, 1, "", "inverse"], [258, 3, 1, "", "inverse_all"], [258, 2, 1, "", "is_norm_spectral_model"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "pivot_energy"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "reassign"], [258, 3, 1, "", "reference_fluxes"], [258, 3, 1, "", "spectral_index"], [258, 3, 1, "", "spectral_index_error"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[259, 3, 1, "", "__call__"], [259, 2, 1, "", "amplitude"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 2, 1, "", "ecut"], [259, 3, 1, "", "energy_flux"], [259, 3, 1, "", "energy_flux_error"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_error"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 2, 1, "", "index_1"], [259, 2, 1, "", "index_2"], [259, 3, 1, "", "integral"], [259, 3, 1, "", "integral_error"], [259, 3, 1, "", "inverse"], [259, 3, 1, "", "inverse_all"], [259, 2, 1, "", "is_norm_spectral_model"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 2, 1, "", "pivot_energy"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference"], [259, 3, 1, "", "reference_fluxes"], [259, 3, 1, "", "spectral_index"], [259, 3, 1, "", "spectral_index_error"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[260, 3, 1, "", "__call__"], [260, 2, 1, "", "amplitude"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "energy_flux"], [260, 3, 1, "", "energy_flux_error"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "evaluate_error"], [260, 2, 1, "", "expfactor"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 2, 1, "", "index_1"], [260, 2, 1, "", "index_2"], [260, 3, 1, "", "integral"], [260, 3, 1, "", "integral_error"], [260, 3, 1, "", "inverse"], [260, 3, 1, "", "inverse_all"], [260, 2, 1, "", "is_norm_spectral_model"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 2, 1, "", "pivot_energy"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "reassign"], [260, 2, 1, "", "reference"], [260, 3, 1, "", "reference_fluxes"], [260, 3, 1, "", "spectral_index"], [260, 3, 1, "", "spectral_index_error"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[261, 3, 1, "", "__call__"], [261, 2, 1, "", "amplitude"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "energy_flux"], [261, 3, 1, "", "energy_flux_error"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "evaluate_error"], [261, 2, 1, "", "expfactor"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 2, 1, "", "index_1"], [261, 2, 1, "", "index_2"], [261, 3, 1, "", "integral"], [261, 3, 1, "", "integral_error"], [261, 3, 1, "", "inverse"], [261, 3, 1, "", "inverse_all"], [261, 2, 1, "", "is_norm_spectral_model"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 2, 1, "", "pivot_energy"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "plot_error"], [261, 3, 1, "", "reassign"], [261, 2, 1, "", "reference"], [261, 3, 1, "", "reference_fluxes"], [261, 3, 1, "", "spectral_index"], [261, 3, 1, "", "spectral_index_error"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[263, 3, 1, "", "__call__"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 3, 1, "", "evaluate"], [263, 3, 1, "", "evaluate_geom"], [263, 2, 1, "", "evaluation_bin_size_min"], [263, 2, 1, "", "evaluation_radius"], [263, 2, 1, "", "evaluation_region"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 3, 1, "", "from_position"], [263, 2, 1, "", "frozen"], [263, 3, 1, "", "integrate_geom"], [263, 2, 1, "", "is_energy_dependent"], [263, 2, 1, "", "map"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 2, 1, "", "phi_0"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "plot_error"], [263, 3, 1, "", "plot_grid"], [263, 3, 1, "", "plot_interactive"], [263, 3, 1, "", "plot_position_error"], [263, 2, 1, "", "position"], [263, 2, 1, "", "position_error"], [263, 2, 1, "", "position_lonlat"], [263, 3, 1, "", "reassign"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"], [263, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 3, 1, "", "energy_flux"], [264, 3, 1, "", "energy_flux_error"], [264, 3, 1, "", "evaluate"], [264, 3, 1, "", "evaluate_error"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integral"], [264, 3, 1, "", "integral_error"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "inverse_all"], [264, 2, 1, "", "is_norm_spectral_model"], [264, 2, 1, "", "map"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "parameters_unique_names"], [264, 2, 1, "", "pivot_energy"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_error"], [264, 3, 1, "", "reassign"], [264, 3, 1, "", "reference_fluxes"], [264, 3, 1, "", "spectral_index"], [264, 3, 1, "", "spectral_index_error"], [264, 2, 1, "", "tag"], [264, 3, 1, "", "to_dict"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"], [264, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 3, 1, "", "cutout"], [265, 2, 1, "", "default_parameters"], [265, 2, 1, "", "energy_center"], [265, 3, 1, "", "evaluate"], [265, 2, 1, "", "evaluation_radius"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 2, 1, "", "frozen"], [265, 2, 1, "", "map"], [265, 2, 1, "", "name"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "position"], [265, 3, 1, "", "reassign"], [265, 3, 1, "", "slice_by_energy"], [265, 2, 1, "", "spectral_model"], [265, 3, 1, "", "stack"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"], [265, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "evaluate"], [266, 2, 1, "", "f0"], [266, 2, 1, "", "f1"], [266, 2, 1, "", "f2"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integral"], [266, 2, 1, "", "is_energy_dependent"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "phi_ref"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_phasogram"], [266, 3, 1, "", "read"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "reference_time"], [266, 3, 1, "", "sample_time"], [266, 2, 1, "", "t_ref"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "time_sum"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"], [266, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[267, 3, 1, "", "__call__"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_geom"], [267, 2, 1, "", "evaluation_bin_size_min"], [267, 2, 1, "", "evaluation_radius"], [267, 2, 1, "", "evaluation_region"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 3, 1, "", "from_position"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integrate_geom"], [267, 2, 1, "", "is_energy_dependent"], [267, 2, 1, "", "lat_0"], [267, 2, 1, "", "lon_0"], [267, 2, 1, "", "map"], [267, 2, 1, "", "map_center"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "phi_0"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "plot_error"], [267, 3, 1, "", "plot_grid"], [267, 3, 1, "", "plot_interactive"], [267, 3, 1, "", "plot_position_error"], [267, 2, 1, "", "position"], [267, 2, 1, "", "position_error"], [267, 2, 1, "", "position_lonlat"], [267, 3, 1, "", "read"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "to_dict"], [267, 3, 1, "", "to_region"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"], [267, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[268, 3, 1, "", "__call__"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 3, 1, "", "energy_flux"], [268, 3, 1, "", "energy_flux_error"], [268, 3, 1, "", "evaluate"], [268, 3, 1, "", "evaluate_error"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 3, 1, "", "from_region_map"], [268, 2, 1, "", "frozen"], [268, 3, 1, "", "integral"], [268, 3, 1, "", "integral_error"], [268, 3, 1, "", "inverse"], [268, 3, 1, "", "inverse_all"], [268, 2, 1, "", "is_norm_spectral_model"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "pivot_energy"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "plot_error"], [268, 3, 1, "", "read_xspec_model"], [268, 3, 1, "", "reassign"], [268, 3, 1, "", "reference_fluxes"], [268, 3, 1, "", "spectral_index"], [268, 3, 1, "", "spectral_index_error"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[269, 3, 1, "", "__call__"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integral"], [269, 2, 1, "", "is_energy_dependent"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "reassign"], [269, 2, 1, "", "reference_time"], [269, 3, 1, "", "sample_time"], [269, 3, 1, "", "time_sum"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.utils": [[276, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[279, 1, 1, "", "CashCountsStatistic"], [280, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [281, 1, 1, "", "WStatCountsStatistic"], [282, 4, 1, "", "cash"], [283, 4, 1, "", "cash_sum_cython"], [284, 4, 1, "", "compute_chisq"], [285, 4, 1, "", "compute_flux_doubling"], [286, 4, 1, "", "compute_fpp"], [287, 4, 1, "", "compute_fvar"], [288, 4, 1, "", "cstat"], [289, 4, 1, "", "f_cash_root_cython"], [290, 4, 1, "", "get_wstat_gof_terms"], [291, 4, 1, "", "get_wstat_mu_bkg"], [292, 4, 1, "", "norm_bounds_cython"], [293, 4, 1, "", "structure_function"], [294, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[279, 3, 1, "", "compute_errn"], [279, 3, 1, "", "compute_errp"], [279, 3, 1, "", "compute_upper_limit"], [279, 2, 1, "", "error"], [279, 3, 1, "", "info_dict"], [279, 2, 1, "", "n_bkg"], [279, 2, 1, "", "n_sig"], [279, 3, 1, "", "n_sig_matching_significance"], [279, 2, 1, "", "p_value"], [279, 2, 1, "", "sqrt_ts"], [279, 2, 1, "", "stat_max"], [279, 2, 1, "", "stat_null"], [279, 3, 1, "", "sum"], [279, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[281, 3, 1, "", "compute_errn"], [281, 3, 1, "", "compute_errp"], [281, 3, 1, "", "compute_upper_limit"], [281, 2, 1, "", "error"], [281, 3, 1, "", "info_dict"], [281, 2, 1, "", "n_bkg"], [281, 2, 1, "", "n_sig"], [281, 3, 1, "", "n_sig_matching_significance"], [281, 2, 1, "", "p_value"], [281, 2, 1, "", "sqrt_ts"], [281, 2, 1, "", "stat_max"], [281, 2, 1, "", "stat_null"], [281, 3, 1, "", "sum"], [281, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[295, 4, 1, "", "hierarchical_clustering"], [296, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[297, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [298, 4, 1, "", "cartesian"], [299, 4, 1, "", "fov_to_sky"], [300, 4, 1, "", "galactic"], [301, 4, 1, "", "motion_since_birth"], [302, 4, 1, "", "polar"], [303, 4, 1, "", "sky_to_fov"], [304, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[305, 1, 1, "", "HDULocation"], [306, 1, 1, "", "LazyFitsData"], [307, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[305, 3, 1, "", "get_hdu"], [305, 3, 1, "", "info"], [305, 3, 1, "", "load"], [305, 3, 1, "", "path"]], "gammapy.utils.integrate": [[308, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[309, 1, 1, "", "ScaledRegularGridInterpolator"], [310, 4, 1, "", "interpolate_profile"], [311, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[309, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[312, 5, 1, "", "BACKEND_DEFAULT"], [313, 5, 1, "", "METHOD_DEFAULT"], [314, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [315, 5, 1, "", "N_JOBS_DEFAULT"], [316, 5, 1, "", "POOL_KWARGS_DEFAULT"], [317, 1, 1, "", "multiprocessing_manager"], [318, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[319, 1, 1, "", "InverseCDFSampler"], [320, 4, 1, "", "draw"], [321, 4, 1, "", "get_random_state"], [322, 4, 1, "", "normalize"], [323, 4, 1, "", "pdf"], [324, 4, 1, "", "sample_powerlaw"], [325, 4, 1, "", "sample_sphere"], [326, 4, 1, "", "sample_sphere_distance"], [327, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[319, 3, 1, "", "sample"], [319, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[328, 4, 1, "", "compound_region_to_regions"], [329, 4, 1, "", "make_concentric_annulus_sky_regions"], [330, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [331, 4, 1, "", "region_to_frame"], [332, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[333, 4, 1, "", "from_yaml"], [334, 4, 1, "", "get_images_paths"], [335, 4, 1, "", "make_path"], [336, 4, 1, "", "read_yaml"], [337, 4, 1, "", "recursive_merge_dicts"], [338, 4, 1, "", "to_yaml"], [339, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[340, 4, 1, "", "hstack_columns"], [341, 4, 1, "", "table_row_to_dict"], [342, 4, 1, "", "table_standardise_units_copy"], [343, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[344, 1, 1, "", "Checker"], [345, 4, 1, "", "assert_quantity_allclose"], [346, 4, 1, "", "assert_skycoord_allclose"], [347, 4, 1, "", "assert_time_allclose"], [348, 4, 1, "", "mpl_plot_check"], [349, 4, 1, "", "requires_data"], [350, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[344, 3, 1, "", "run"]], "gammapy.utils.time": [[351, 4, 1, "", "absolute_time"], [352, 4, 1, "", "time_ref_from_dict"], [353, 4, 1, "", "time_ref_to_dict"], [354, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[355, 4, 1, "", "standardise_unit"], [356, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[357, 1, 1, "", "MapPanelPlotter"], [358, 4, 1, "", "add_colorbar"], [359, 4, 1, "", "annotate_heatmap"], [360, 4, 1, "", "colormap_hess"], [361, 4, 1, "", "colormap_milagro"], [362, 4, 1, "", "plot_contour_line"], [363, 4, 1, "", "plot_distribution"], [364, 4, 1, "", "plot_heatmap"], [365, 4, 1, "", "plot_map_rgb"], [366, 4, 1, "", "plot_npred_signal"], [367, 4, 1, "", "plot_spectrum_datasets_off_regions"], [368, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[357, 3, 1, "", "plot"], [357, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 94, 99, 100, 101, 102, 103, 104, 107, 108, 109, 122, 123, 128, 131, 136, 137, 141, 142, 143, 147, 167, 194, 200, 212, 216, 217, 222, 224, 225, 228, 229, 231, 232, 233, 235, 238, 240, 241, 245, 247, 248, 254, 255, 256, 259, 260, 261, 266, 269, 270, 271, 277, 287, 305, 355, 359, 360, 367, 370, 371, 373, 375, 380, 381, 382, 384, 386, 387, 388, 389, 390, 393, 396, 399, 400, 402, 403, 405, 406, 407, 408, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 485, 487, 490, 491, 497, 498, 499, 500, 502, 503, 505, 510, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 567, 569], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 83, 85, 87, 88, 89, 90, 93, 95, 101, 102, 104, 107, 108, 109, 110, 111, 112, 114, 116, 118, 120, 121, 123, 124, 125, 126, 128, 130, 131, 136, 137, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 162, 164, 167, 170, 171, 175, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 205, 208, 210, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 275, 277, 279, 280, 281, 282, 285, 286, 287, 288, 295, 296, 315, 319, 326, 327, 347, 358, 360, 361, 365, 367, 370, 371, 373, 374, 377, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 403, 406, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 497, 499, 503, 507, 509, 512, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 565, 566, 567, 568], "00": [67, 87, 88, 89, 90, 100, 191, 371, 385, 438, 439, 440, 441, 443, 444, 445, 446, 447, 449, 451, 452, 453, 456, 457, 459, 460, 463, 464, 466, 468, 469, 470, 471, 472, 473, 475, 476, 479, 480, 481, 482, 484, 486, 488, 489, 490, 491, 492, 520, 530, 550, 551, 561, 569], "000": [67, 87, 88, 90, 123, 385, 440, 442, 444, 445, 447, 452, 453, 454, 456, 457, 460, 463, 464, 468, 469, 473, 475, 476, 481, 488, 489, 491, 520], "0000": 396, "000000": 468, "000000000000002": 473, "00000000000001": 447, "00000000000003": 465, "00000000000004": 468, "0000000000016": 86, "0000000000018": 93, "000000000002": 456, "000000000006": 456, "000000000007": 468, "00000000001": 468, "00000000e": [470, 471], "00000001": 86, "0000000e": 471, "00000143": [371, 569], "0000e": [100, 440, 441, 444, 445, 446, 447, 449, 452, 460, 464, 470, 476, 490, 550], "0001": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 361, 454], "00010298": 469, "000150": 442, "0002": [442, 491], "00020": 442, "0002000": 442, "0003": 454, "0004": 100, "00050": 442, "000500": 442, "0006": 442, "00074287037": [93, 457], "000742870370370241": 93, "0008": 468, "0009": 442, "000e": [440, 444, 447, 453, 460, 464, 468, 476, 491, 550], "000true": 442, "001": [50, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200, 347, 456, 470, 528], "0016288e": 471, "001e": 67, "002": [438, 479], "002018": 481, "0025508e": 471, "0028272e": 471, "0029": 395, "0029202684427718766": 489, "002e": [67, 445], "003": [465, 475, 481], "003026327991562108": 453, "0031052863692021915": 489, "0033": 567, "0036925550381217": 447, "00375698": 232, "0037e": 460, "004": 67, "00422666667": 461, "00449161": 237, "00490": 454, "00490483": 454, "0049409": 480, "005": 468, "00521472221220211": 453, "005909017160171437": 455, "0064830e": 471, "0065e": 464, "00688029": 232, "007": 468, "0076540e": 471, "008": [468, 566], "008166963876141447": 455, "008891944789387447": 455, "00894": 491, "009": 468, "00931e": 439, "009433226692021113": 455, "0095e": 460, "00e": [83, 439, 445, 456, 460, 464, 465, 469, 471, 472, 481, 489], "01": [39, 52, 75, 83, 87, 88, 90, 93, 101, 104, 108, 109, 111, 125, 131, 170, 171, 175, 185, 186, 191, 195, 198, 219, 225, 229, 231, 233, 248, 254, 371, 406, 438, 439, 440, 443, 444, 446, 448, 449, 452, 453, 456, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 481, 482, 483, 489, 490, 491, 492, 497, 502, 512, 514, 515, 518, 522, 524, 526, 548, 549, 551, 553, 554, 555, 561, 566, 569], "010": 475, "010e": 67, "011": 475, "011872336272724": 489, "012": 475, "0122385e": 471, "01235137e": 471, "012733796525585": 477, "0129e": 464, "013640": 540, "0139252e": 471, "014": [85, 101, 104, 108, 109, 167, 445, 452, 468, 472, 489, 490, 514], "0143724": 232, "0143764": 480, "01449": 83, "0145": 474, "01450": [462, 490], "0149044e": 471, "015": 468, "01551196351647377": 232, "0163": 454, "01648855015875024": 565, "0168e": 464, "01700709977114979": 461, "017442925431194484": 461, "018": [67, 438, 469, 479], "018182745349064267": 453, "0183519e": 471, "01960784313726": 458, "019899368286133": 453, "01e": [167, 406, 439, 460, 468], "01t00": [87, 90, 93, 191, 371, 448, 456, 569], "01t01": 90, "01t02": 90, "02": [16, 67, 83, 93, 101, 104, 108, 109, 110, 114, 155, 162, 167, 185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 406, 438, 439, 440, 442, 444, 445, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 468, 470, 471, 472, 473, 474, 475, 476, 479, 481, 486, 489, 490, 491, 512, 514, 515, 522, 523, 524, 530], "020": [453, 468], "020420144596410953": 477, "021": [67, 468], "0225e": 468, "02288737": 232, "023": 468, "023472814714293713": 489, "023637": 452, "023e": 448, "024": 468, "02432": 468, "024715584699834": 489, "024e": 491, "025": [438, 468, 481, 551], "0251191219844263": 454, "025e": [137, 464], "026": [53, 67, 468], "02653": [448, 454], "026891": 468, "026914": 468, "027": 67, "028854": 474, "029e": [440, 468], "02e": 83, "02t23": 86, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 87, 89, 90, 197, 383, 398, 438, 439, 440, 442, 453, 454, 456, 459, 460, 464, 468, 471, 473, 475, 476, 477, 478, 479, 483, 484, 490, 525], "031450": 452, "032": 468, "0322": 67, "0322775e": 471, "033": [67, 468], "033176650892097": 95, "03383": 480, "034": 566, "0344": 67, "034e": 442, "0354700e": 471, "0356": 439, "0356551": 439, "036": 67, "036e": 468, "037": 475, "03745318352059925": 559, "0375512e": 471, "0376213e": 471, "039": [452, 453], "039215686274545": 458, "03921700077803329": 453, "0395135e": 471, "03978226e": 476, "04": [30, 67, 93, 438, 443, 445, 447, 448, 450, 453, 456, 464, 465, 468, 471, 473, 476, 480, 481], "040": 444, "0401193713376": 464, "041": 481, "0414": 448, "0415": 491, "041882": 468, "042": 468, "0423761": 439, "042e": 468, "043": 67, "04357249662280083": 444, "04454": 481, "044576": 560, "0454683": 480, "046": 67, "0462798e": 471, "047": 67, "0473174": 237, "0474750e": 471, "048": [452, 481], "0482342e": 471, "04897634344908595": 95, "048e": 67, "049": [442, 452], "04939e": 439, "049676": 468, "04d": 456, "04e": 472, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 87, 90, 120, 121, 123, 130, 198, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 329, 398, 438, 439, 440, 441, 442, 443, 444, 448, 451, 452, 453, 454, 457, 460, 463, 467, 468, 469, 470, 471, 472, 475, 478, 480, 482, 484, 489, 490, 517, 522], "050": 475, "05019": 137, "0503641": 439, "0505949e": 471, "05075": 471, "0508075688763": 468, "05088486522436142": 444, "051": [19, 20, 26, 475], "051c": [17, 21, 22, 24, 25, 27], "052": 468, "0520119e": 471, "0521419985089": 455, "05227": 468, "053": 452, "053212009682775": 477, "054833602905273e": 453, "05487060546875": 444, "0548e": 453, "054e": 67, "055": 468, "055e": 442, "0560": 491, "056130": 468, "05628243": 491, "05637e": 439, "05673": 491, "057": [468, 530], "05762513693893088": 453, "057e": 448, "058": 67, "058201": 468, "05853": 448, "058823529411775": 458, "059": 67, "05901956e": 471, "0598579": 439, "05deg": 198, "06": [141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200, 438, 443, 452, 453, 454, 459, 466, 468, 469, 470, 471, 472, 473, 479, 481, 484, 551], "061": 491, "062": [456, 475, 476, 481], "0625": 476, "0628": 491, "063": 67, "0631757e": 471, "06334488877417636": 477, "064108e": 468, "06430": 454, "0643032": 454, "06450": 137, "065071": 468, "065119": 491, "06549": 137, "066": 444, "066442": 468, "067": 448, "068245": 468, "0689": 470, "068e": 442, "069": 67, "069e": 448, "07": [101, 103, 122, 167, 345, 385, 406, 438, 442, 443, 445, 449, 450, 452, 454, 463, 465, 466, 468, 469, 471, 473, 475, 476, 481, 484, 489, 492, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "07022": 137, "070483": 468, "0711412": 439, "072": 67, "073": 67, "0739282e": 471, "074": [468, 481], "07454639": 454, "07455": 454, "0746": 491, "0748": [468, 491], "075": 67, "07512322002655547": 453, "0756e": 439, "076": 491, "077": 439, "078": 442, "07843137254903": 458, "07871368968": 469, "07943648658692837": 477, "07944657408": 468, "079464e": 491, "0799109224230051": 477, "07e": 465, "08": [86, 365, 406, 446, 447, 449, 450, 452, 453, 460, 468, 469, 470, 472, 481, 489, 490, 531], "0800792e": 471, "080339": 532, "08075": 471, "08081469527619482": 447, "08088": [173, 472], "0811551760882139": 477, "08142": 467, "08191603310406206": 477, "08192": 454, "08192101": 454, "082": 468, "082691868487906": 461, "08269984": 491, "082e": 123, "083": [67, 468], "08328557573258877": 477, "0833333358168602": 444, "0833333432674408": 444, "08342": 137, "08388624433428049": 477, "084": 67, "08447355125099419": 477, "0845515": 439, "085": 468, "08529426": 96, "0855013383552432": 477, "08675": 469, "086e": 468, "087": [438, 443, 491], "087104": 528, "08795162606984375": 477, "087e": 468, "088742": 468, "08880368117243051": 477, "08894569035619496": 477, "089": [132, 438, 479], "0894640e": 471, "0897868126630783": 477, "089881": 468, "08e": [460, 475], "09": [33, 103, 122, 123, 167, 438, 440, 445, 448, 450, 452, 459, 468, 469, 471, 472, 489, 490, 491, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 567], "0902437e": 471, "0907128e": 471, "0910": [246, 247], "0914": [52, 53], "093477": 454, "09348": 454, "09426693227142095": 477, "094834": 468, "095": 551, "095232": 468, "09562941": 491, "095707": 491, "096": 445, "0960": 491, "09607": 491, "09610314778983592": 477, "09623312838375568": 477, "09740295372903346": 477, "097e": 67, "09805": 137, "098903": 468, "09907043184188653": 477, "09e": 472, "0b100": 315, "0d": [125, 458, 469, 526], "0e": [393, 445, 447, 449, 453, 456, 460, 464, 469, 471, 473, 475, 476, 481, 489, 521, 522, 523, 524, 526, 527, 528, 529, 532, 533, 535, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "0f": [470, 481, 491], "0rc": 399, "0rc1": 399, "0true": 454, "0x105fd0cf8": 370, "0x105fe3b70": 370, "0x129602550": 370, "0x7faf4a11d130": 477, "0x7faf4a5734f0": 469, "0x7faf4bf9e4f0": 458, "0x7faf4bf9ef70": 458, "0x7faf507acc40": 461, "0x7faf53246df0": 469, "0x7faf53308250": 476, "0x7faf533f0640": 477, "0x7faf53501d60": 480, "0x7faf535064f0": 480, "0x7faf5352d2b0": 480, "0x7faf539618b0": 477, "0x7faf53b16a30": 480, "0x7faf53b5d580": [469, 478], "0x7faf53b5dac0": 469, "0x7faf91814c70": 477, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 90, 94, 95, 100, 101, 103, 104, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 125, 126, 128, 129, 131, 132, 136, 137, 141, 142, 143, 144, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 162, 167, 170, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 205, 208, 210, 212, 213, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 243, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 270, 271, 277, 279, 280, 281, 285, 286, 295, 296, 308, 309, 315, 316, 317, 326, 327, 329, 330, 355, 357, 360, 361, 365, 367, 370, 371, 373, 374, 377, 378, 380, 381, 382, 384, 385, 387, 390, 392, 393, 394, 395, 396, 397, 399, 400, 403, 406, 407, 410, 411, 413, 414, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 486, 489, 490, 491, 493, 497, 498, 499, 502, 503, 505, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 566, 567, 568], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 86, 87, 88, 89, 90, 100, 101, 102, 104, 107, 108, 109, 110, 114, 116, 120, 121, 123, 124, 125, 129, 130, 131, 136, 137, 138, 141, 142, 144, 146, 148, 154, 155, 156, 157, 158, 160, 167, 173, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 205, 208, 210, 219, 222, 234, 235, 237, 238, 259, 271, 280, 286, 315, 317, 327, 358, 363, 365, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 386, 387, 392, 393, 394, 398, 400, 406, 411, 413, 424, 426, 429, 433, 435, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 489, 490, 491, 493, 499, 503, 509, 512, 514, 515, 516, 517, 527, 528, 531, 533, 536, 537, 539, 540, 541, 542, 544, 545, 547, 548, 549, 553, 554, 555, 565, 566, 569], "100": [19, 20, 26, 46, 47, 74, 93, 123, 131, 146, 147, 157, 198, 200, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 271, 273, 327, 370, 371, 373, 378, 389, 409, 439, 441, 444, 447, 452, 453, 454, 456, 457, 458, 460, 461, 465, 467, 468, 469, 471, 472, 473, 476, 478, 480, 481, 482, 491, 495, 497, 498, 499, 503, 514, 517, 518, 521, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 566], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 188, 193, 370, 373, 442, 468, 469, 471, 478, 481, 491, 517], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 102, 107, 146, 157, 160, 170, 468, 481], "100000": [74, 468, 489], "1000000": [51, 52, 54, 468, 550], "10000000": 550, "1001": [428, 456, 457], "1002": 428, "10041": 136, "10045": [65, 261, 549], "10049": 439, "1006": 428, "1007": 464, "101": [414, 465, 468], "1012": 467, "1013": 429, "1014": 429, "101430": 465, "10172": 476, "102": [167, 445, 448, 566, 567], "1021": 429, "1025": 429, "1026": 429, "10262943822890519": [95, 477], "1027": 429, "102877228833871": 477, "1029": 429, "10295505": 491, "102e": 468, "103": [136, 409, 432], "103000133": 482, "1030e": 464, "1031": 429, "1032": 429, "1032531953505502": 489, "1034": 491, "1035": 429, "10350021860740599": 445, "1036": 448, "1038": 429, "104": 454, "1040": 429, "10409": 454, "10409446": 454, "1043": 429, "104317": [101, 469, 475], "1044": 448, "1045": 429, "1046": 388, "10470702368766069": 477, "10477": 491, "105": [82, 483], "1051": 429, "1052": 468, "1053": 429, "1054": 429, "1054498": 132, "1057": 429, "10592": 569, "105953": 491, "106": 447, "1061971e": 471, "106217": 83, "1062535e": 471, "1064": 468, "1065": 429, "1067": 429, "1069": 429, "107": [439, 473], "1070": [429, 491], "1072542e": 471, "1073": 429, "10752883769757363": 477, "1076": 429, "1078": 429, "107e": 468, "108": [426, 438, 561], "108034597491956e": 476, "108043": 452, "1082": 429, "1083": 429, "1084": 429, "1085": 429, "1085000": 452, "1086": 286, "1087": 429, "1088": [100, 429], "1089": 429, "109": [409, 440, 473], "1090": 429, "1092": [429, 448], "1093": [429, 448], "1098": 429, "1099306e": 471, "109e": 454, "10d": 458, "10e": [167, 468, 471], "10k": 188, "10th": [397, 408], "11": [67, 87, 90, 93, 123, 124, 128, 129, 208, 329, 374, 377, 379, 387, 394, 398, 409, 410, 431, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 454, 456, 457, 458, 460, 462, 463, 464, 465, 468, 469, 470, 472, 474, 475, 478, 479, 481, 489, 490, 491, 514, 516, 567], "110": [468, 481], "1100": 429, "110000": [469, 472], "1102": 429, "1102e": 441, "1103": 429, "110380": [83, 386, 449, 452, 454, 480], "1104": 429, "1105": 429, "110663": 445, "1107": 429, "1108": 429, "111": [358, 377, 429, 438, 452, 468, 561], "1110": 429, "1111": [138, 468, 491], "111140": [386, 449, 452, 454], "111159": [386, 449, 452, 454, 480], "11132": 64, "1115": 429, "111507416": 465, "111630": [89, 465, 480], "111797": 468, "11184": [65, 260, 548], "112": [439, 444], "11208": 65, "1127": 429, "11291820875721864": 477, "113": [438, 491, 561], "1131": 378, "1133": 429, "1134": 429, "1136": 429, "114": [438, 464, 561], "114416978060046": 464, "1149": 469, "115": 67, "1150": 429, "11517": 491, "11553325504064559": [95, 477], "11587179071752986": 95, "116": [409, 440], "1160": 468, "11610": 491, "1162": 429, "1162290917256776e": 462, "1166": 429, "1167": [377, 384], "1169": 429, "116e": 67, "117": [409, 531], "1170": 429, "1172": 384, "1173775": 468, "1176": 429, "117877e": 468, "1179": 429, "118": [136, 452], "1183": 429, "118355": 468, "119": [440, 448, 452], "1190": 429, "119432": 439, "1195": 429, "11af4c": 409, "11e": [450, 468], "12": [17, 38, 42, 67, 86, 87, 90, 101, 104, 111, 123, 137, 157, 160, 186, 187, 188, 190, 196, 199, 200, 212, 216, 222, 224, 228, 235, 245, 247, 256, 259, 260, 261, 271, 374, 376, 377, 378, 379, 381, 382, 387, 390, 393, 409, 413, 414, 415, 427, 432, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 461, 462, 463, 464, 468, 469, 470, 473, 475, 476, 478, 479, 481, 489, 491, 503, 514, 517, 518, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 535, 538, 539, 542, 543, 544, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560], "120": [53, 385, 446, 481, 525], "120000": 449, "120154": 468, "1204": 429, "1207": 429, "120e": [67, 444, 491], "121": [67, 454, 475], "1210": 429, "1211": [429, 468], "121241": 452, "12148": 448, "1215": 429, "1216": 441, "12186": 491, "1219": 468, "122": [67, 136, 409, 442, 475], "1220": 429, "1226": 429, "1227": 429, "12276676166802643": 477, "122e": 453, "123": [87, 90, 382, 438, 448, 561], "1231": 430, "1234": 88, "123456789": [191, 371, 569], "1235": 429, "1237": 378, "1238": 429, "123890826": 86, "123892513": 86, "1239": 375, "123944": 83, "124": [136, 382, 438, 448, 468, 470, 475, 479], "1240": 429, "12423250e": 471, "1243": 491, "1244969200533408": 296, "1246": 429, "12493874": 471, "124e": [67, 448], "125": [67, 123, 136, 438, 444, 454, 473, 481, 491, 561, 566], "12518": 453, "12525306": 461, "12546": 65, "126": [67, 442, 468, 470], "12611": 137, "1264500e": 471, "126585": 439, "1266": 429, "1268": 429, "12688": 83, "1269263e": 471, "12697": 453, "127": 448, "12704": [136, 137], "1271v": 287, "12751": 439, "1277": 376, "1278": 377, "12794487": 476, "128": [409, 465, 493], "12809": [101, 469, 475], "1281": 429, "12816": 491, "12856": 481, "1287": 429, "1289": 429, "128e": 442, "129": [435, 490], "1290": 429, "1291": 429, "1294": 429, "1299": 468, "12nan5": 442, "12r_": 53, "12th": [395, 408], "13": [67, 100, 103, 122, 123, 137, 197, 295, 374, 375, 379, 384, 389, 398, 414, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 499, 521, 567], "130": 514, "1300": 429, "1301v": 38, "13030": 491, "1305": 429, "13061": 476, "131": 442, "1310": 491, "1312": 429, "13133": 491, "13152": 454, "1316": 429, "1317": 430, "1318": 429, "1319": [93, 429], "13197": 452, "132": 448, "13226": 491, "1323e": 453, "132472": 454, "132e": [444, 448], "133": 137, "1331": 430, "1334": 430, "1337": 430, "1339": 430, "133e": 442, "134": [137, 445, 448, 454], "1341": 430, "1342a": 147, "1343": 430, "1344": 468, "1345": 430, "1346": 430, "1347": 430, "13499879586502125": 455, "135": [38, 100, 137, 442, 468, 470], "13500212963": 468, "1351e": 468, "135386": 445, "1354": 430, "135498046875": 444, "1357": 430, "1359316": 491, "135e": 123, "136": 468, "1360": 430, "1361": 468, "1362": 430, "1367": 430, "1369": [378, 430], "136e": 448, "137": [448, 455], "1372": 430, "137254901960785": 458, "1373": 430, "1374": 430, "137521287529426e": 489, "1376": 430, "1376407570489014e": 462, "1377": 430, "1378": 430, "137880": 547, "1379190199428797": 296, "137990": 468, "138": [409, 442, 456, 491], "1381": 430, "1386": 430, "1387": 430, "138e": 454, "139": [444, 448, 481], "13911": 491, "1395": 430, "1396": [370, 445], "13960": 491, "1397": 430, "1397412321592923": 477, "13e": 469, "13nan6": 442, "13th": 408, "14": [28, 65, 67, 86, 371, 374, 379, 382, 387, 389, 390, 428, 438, 439, 442, 444, 445, 448, 452, 465, 468, 469, 470, 472, 474, 475, 476, 479, 490, 491, 522, 523, 524, 566], "140": 482, "1401": 430, "1402": 537, "1406": 430, "14079": 136, "1408": [430, 491], "141": [294, 454, 468], "1411180": 452, "1412": 430, "14121": 454, "1412536400000000": 491, "14149953611195087": [95, 477], "14150": 454, "1419": [378, 431], "141945": 439, "142": [67, 409, 442, 468, 491], "14201": 136, "1421": 430, "14210": 442, "1426": 430, "142e": 468, "1432": 430, "1433": 430, "1435": 430, "1438": 170, "1438465e": 471, "1439110308062257": 477, "1439216075521": 464, "144": [438, 442, 475, 491, 530], "14419991": 96, "1442739329466746e": 476, "1443": 430, "1444": 430, "1445": 384, "14457": 491, "1446": 430, "1447": 430, "145": 468, "1451": 385, "14531053887243": 454, "145500": 525, "1456": 430, "1456479e": 471, "146": 491, "14610": 569, "146472": 468, "1467": 138, "147": [428, 468, 473], "1470": [430, 491], "1474": 430, "1475": 430, "1476": 430, "14773": 481, "147e": 468, "148": 448, "1482": 468, "1485314": 96, "1486415e": 471, "1489": [430, 454], "149": [444, 472, 475], "1492": 430, "1494": 454, "149445429667434": 455, "1495": 430, "1499472780781963": 296, "149e": 468, "14e": [449, 467], "14msts37sst": [456, 457], "14nan3": 442, "14nan5": 442, "14th": [394, 397, 408], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 90, 144, 145, 146, 147, 148, 149, 154, 155, 156, 158, 197, 360, 361, 365, 379, 387, 409, 413, 418, 423, 426, 427, 428, 430, 438, 439, 444, 448, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 465, 468, 469, 470, 472, 473, 475, 476, 481, 491, 514, 522, 525, 526, 527], "150": [129, 136, 137, 409, 442, 444, 456, 457, 473, 491], "1505": 430, "15076259": 96, "151": [409, 475], "1510": 132, "1510240e": 471, "1514": 464, "15140": 448, "1515": 430, "15154854": 96, "1517": 430, "152": [448, 454], "1520": 493, "1521": 454, "1523": 456, "15246": 456, "152477": 481, "1527": 430, "153": 468, "1530": 469, "15319": 456, "153600": 469, "154": [409, 439, 468], "1543": 430, "154e": 454, "155": 409, "15518": 491, "1552": 450, "1553": [468, 491], "1554": 430, "1554106e": 471, "1556": [430, 468, 491], "1556008e": 471, "1558": 430, "156": [409, 444, 445, 448, 454, 475], "1562": 430, "15621": 491, "1564": 430, "156525": 468, "1567629e": 471, "1568": 430, "15686274509804": 458, "156e": 448, "157": [409, 438, 489, 491, 492], "1573": 430, "1576": 430, "158": [137, 439, 445, 452], "1582": 430, "1586": 93, "15899": 448, "1594": 430, "1597317": 96, "159t": 52, "15h14m00": 468, "15nan8": 442, "16": [16, 24, 53, 67, 93, 108, 109, 186, 374, 378, 387, 390, 391, 414, 429, 434, 436, 438, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 492, 516, 528, 529, 558, 566, 567], "160": [31, 123, 409, 418, 458, 475], "1600": 457, "1600e": 440, "1605": 430, "16056": 448, "1606": 430, "1607": 467, "160e": 67, "161": [136, 378, 444, 454, 468], "1610e": [440, 468], "161250": 460, "1613279491744304": 477, "1616": 430, "1618850e": 471, "1619e": 100, "162": 67, "16227766": 473, "1622776601683795": [472, 473, 489], "16240": 490, "1626e": 449, "16287": 491, "1629219e": 471, "163": [458, 566], "1630": [430, 491], "16303": 454, "16303044": 454, "1634": 430, "164": 468, "1642": 439, "165": 475, "1650": 491, "16506": 439, "16511": 454, "16511148": 454, "1658": 430, "166": [409, 454, 468], "1660": 430, "16650390625": 441, "1665478": 96, "167": [409, 454, 460], "167219": 468, "1675": 430, "168": [100, 468, 491], "1681": 430, "1685": 430, "1686": 468, "1687": 86, "168702": 439, "169": 454, "1691": 439, "1695": 430, "169526": 460, "1696": 430, "1697": 430, "169871": 460, "16th": 408, "17": [20, 21, 40, 67, 86, 103, 122, 381, 384, 387, 407, 418, 435, 438, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 489, 490, 491, 531, 567], "170": 441, "17016482e": 470, "1702": 430, "17020": 448, "1710": 431, "1711": 430, "1713": [441, 540], "1715": 384, "1717": 491, "171749": 491, "1719": 540, "1719502": 96, "1719610": 96, "1719670": 96, "171b": 270, "172": 458, "17229679": 96, "173": 468, "1731": [430, 475], "1732": 468, "17320": 468, "1736": 448, "1737799900000000": 491, "173962": 550, "174": [444, 464], "1742": 67, "17445": 491, "174500": 522, "1746": [430, 491], "1748": [430, 475], "175": [438, 450, 451], "1750": 430, "1751": 430, "1753": 491, "1755": 430, "1759": 430, "175e": 468, "176": [137, 409, 465, 468], "1760": 430, "1761": 430, "1762": 493, "1763": [431, 468], "1764": [430, 454], "176470588235294": 458, "1766": 431, "1768896e": 471, "177": [409, 481, 482], "17776": 439, "177e": 468, "178": 429, "178442": 67, "1785": [430, 439], "179": [438, 530], "1791": 430, "179475": 237, "1799": 430, "17a": [60, 468], "17e": 475, "17g": 50, "17t13": [445, 449, 450, 452, 476, 489, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "17th": 424, "18": [11, 87, 90, 136, 197, 374, 389, 395, 415, 421, 438, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 532, 533, 534], "180": [384, 402, 404, 409, 468, 473], "1800": [430, 457, 473, 480], "180000": [456, 457], "1804": 468, "180458": 452, "18046952655570045": 296, "1805": 384, "1807": 431, "1808": [430, 468, 491], "181": 448, "1811": 447, "1812": 430, "1813": 468, "1818": 430, "1821": 430, "1822": 430, "1825": 468, "18257": 448, "183": 444, "1830e": 444, "1831": 464, "183139597": 86, "1834": 441, "1835": 93, "1836": 431, "1836544903987521": 477, "1837": 431, "18385658": 454, "18386": 454, "18392464": 505, "184": [86, 93, 423, 427, 448, 452, 456, 463, 474, 475], "18400002": 463, "1841": 379, "1845": 431, "1846": 431, "18465": 491, "1849": 431, "184989894219835": 461, "184e": 448, "185": [438, 474, 530], "1854": [431, 468], "1855": 431, "1857": 431, "1859": 431, "186": [422, 454, 468], "1861": 431, "1862": 431, "186484131475074": 327, "1866": 472, "186643": 491, "187": [415, 422, 438, 454, 455, 459], "1871": [431, 464], "1877": 380, "187e": 464, "188": [422, 439, 468], "1883": 431, "1884": 431, "18842983819716610": 454, "1888": 431, "188e": 442, "189": [444, 464, 471], "1890": 431, "1891": 431, "18921591": 471, "1893": 431, "1893e": [440, 468], "1894": 431, "1895": 431, "1896e": 440, "1898": 431, "18988": 491, "1899070e": 471, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 197, 374, 386, 388, 390, 409, 417, 418, 420, 432, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 535, 536, 537], "190": 468, "1902": [65, 261, 549], "1903": 431, "1904": 431, "1905": 453, "1908": 431, "1909": 431, "190e": 444, "191": [136, 422], "1910": [173, 472], "1912": 431, "1917": 491, "1918": 431, "1919": 431, "1920": 491, "1921": 431, "19214093": 96, "1922": 431, "1926": 431, "1926520e": 471, "1927": 431, "1928": 468, "1929": 431, "193": [448, 464], "1930": 431, "1933": 431, "1934": 431, "19354": 454, "1936925": 96, "1937": [431, 468], "193e": 445, "194": [422, 448], "1943186": 96, "1947565": 96, "1949": 431, "195": [232, 444], "1950rspsa": 52, "1951": 410, "1953830": 96, "1955810e": 471, "1958e": 470, "196": [67, 439, 475], "1960784313725492": 458, "1961": 138, "1962": 410, "1963": 468, "19644": 481, "1965tralm": 21, "1966": 410, "1969": 410, "196991563774588": 271, "197": [67, 438, 454, 460, 481, 561], "1971": 381, "19736017641361556": 455, "1975": 410, "1976572e": 471, "1978": 468, "1979": [282, 288, 410, 564], "1979892": 454, "1980": 468, "1982": 37, "1983": 564, "1986": 382, "1986027": 491, "1987": 454, "19879005": 170, "1988": 410, "1989": 410, "199": [454, 475], "1990": [37, 410], "1990apj": [36, 37], "1991": 410, "1991mnra": 22, "19932878": 471, "1994": [410, 564], "1994a": [52, 53], "1995": [409, 410], "1995a": 280, "1995apj": 17, "1996": [27, 448, 461, 564], "1996mnra": 27, "1997": 489, "1997apj": 25, "1998": [87, 90, 410, 564], "1998apj": 28, "1999": [53, 191, 371, 569], "19991": 489, "199999809265137": 468, "19999999999999998": 447, "1999apj": 53, "19e": 472, "19th": 408, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 90, 108, 109, 125, 145, 146, 155, 169, 186, 188, 322, 363, 376, 380, 381, 383, 384, 385, 386, 389, 390, 391, 402, 412, 414, 415, 416, 417, 421, 423, 426, 430, 432, 433, 436, 438, 439, 441, 442, 443, 444, 446, 448, 452, 459, 464, 469, 470, 472, 474, 476, 477, 478, 480, 481, 489, 501, 503, 505, 510, 513, 518, 562, 564], "1dc": [82, 83, 89, 101, 104, 108, 109, 113, 115, 116, 120, 136, 137, 142, 146, 147, 148, 157, 358, 363, 365, 378, 380, 386, 390, 411, 439, 447, 449, 452, 454, 460, 464, 465, 469, 471, 475, 503], "1deg": 198, "1e": [19, 20, 26, 86, 99, 128, 129, 131, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 238, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 271, 282, 288, 329, 345, 347, 370, 381, 440, 442, 444, 446, 448, 450, 452, 454, 456, 457, 460, 462, 464, 465, 468, 470, 476, 478, 481, 482, 499, 503, 507, 531, 532, 533, 535, 538, 539, 543, 544, 546, 547, 548, 549], "1e0": 497, "1e10": [51, 147], "1e12": [497, 507], "1e2": [442, 497, 499], "1e3": [481, 507], "1e30": 541, "1e4": [470, 481, 482], "1e40": 498, "1e5": [446, 481, 499, 517, 518], "1e51": 52, "1e6": [45, 481, 495, 550], "1e7": [125, 550], "1f": 445, "1fhl": [415, 428], "1fhl_name": 71, "1h": [124, 157], "1k": [101, 108], "1kpc": 499, "1lhaaso": [57, 70, 436, 468], "1lhaaso_catalog": 57, "1rc1": 399, "1tev": [52, 53, 129, 457], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 100, 101, 103, 104, 108, 109, 112, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 137, 139, 140, 144, 145, 146, 147, 149, 155, 157, 160, 167, 170, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 200, 205, 208, 209, 210, 211, 212, 216, 220, 222, 224, 228, 230, 231, 235, 238, 245, 246, 247, 252, 253, 255, 256, 259, 260, 261, 266, 270, 271, 277, 279, 280, 281, 282, 287, 288, 293, 295, 315, 317, 355, 358, 363, 365, 367, 370, 371, 374, 375, 379, 381, 382, 384, 385, 386, 387, 390, 393, 394, 395, 396, 397, 399, 402, 404, 406, 409, 410, 411, 412, 413, 414, 421, 426, 427, 428, 429, 430, 431, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 489, 490, 491, 493, 499, 502, 503, 505, 510, 511, 512, 514, 515, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 567, 568], "20": [16, 38, 83, 87, 89, 90, 101, 104, 108, 109, 148, 149, 154, 156, 158, 167, 187, 188, 190, 196, 199, 200, 205, 280, 295, 371, 374, 375, 376, 378, 383, 385, 388, 390, 395, 432, 438, 439, 440, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 458, 459, 461, 462, 463, 464, 465, 467, 468, 470, 472, 473, 475, 476, 478, 480, 483, 489, 490, 491, 493, 512, 514, 515, 516, 522, 523, 524, 527, 528, 537, 538, 539, 540, 545, 551, 566], "200": [52, 87, 90, 131, 198, 394, 422, 438, 444, 445, 448, 454, 458, 460, 468, 473, 476, 491, 530, 566], "2000": [88, 101, 104, 108, 109, 125, 225, 229, 231, 233, 248, 254, 410, 456, 457, 458, 472, 481, 491, 564], "2000000": 452, "20000000000000004": 447, "20009124": 471, "2000apj": 271, "2000e": 476, "2001": [93, 410, 448, 564], "2002": [87, 90, 286, 461], "2003": [287, 461], "2003mnra": 287, "2004": [86, 93, 461, 483], "2004a": [39, 40], "2004aph": [83, 88], "2004mnra": 24, "2005": [65, 564], "200503": 439, "2005a": 468, "2006": [31, 33, 385, 448, 455, 463], "200638": 491, "2006a": 271, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 116], "2007": [388, 564], "20072608": 471, "2008": [38, 86, 220, 268, 440, 481, 493, 531], "2008aj": 38, "2009": [131, 289, 411, 448, 564], "20097159": 471, "2009851": 471, "20099855": 471, "201": [52, 473], "2010": [125, 147, 220, 237, 293, 371, 531, 564, 569], "2010a": [237, 271], "2010mnra": 147, "2011": [220, 440, 493, 531], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [90, 411, 564], "2013": [100, 132, 390, 396, 400, 409, 461], "20136": [82, 296, 483], "20137": [296, 483], "2013aph": 270, "2013apj": 60, "2014": [138, 408, 493], "2015": [52, 86, 384, 387, 408, 481], "20151": 296, "2015apj": [61, 124], "2015jheap": 271, "2016": [26, 384, 387, 408, 411, 461, 472], "2016apj": 58, "2017": [220, 375, 377, 387, 390, 406, 408, 411, 454, 480, 531], "2017apj": [59, 62], "2017icrc": 480, "2018": [52, 375, 376, 377, 378, 379, 380, 381, 385, 387, 389, 390, 408, 435, 480, 483, 564], "2018a": 124, "2019": [377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 408, 430, 431, 455, 480, 564], "202": 454, "2020": [197, 379, 390, 391, 392, 393, 394, 408, 455, 456, 464, 473, 553, 554, 555], "2021": [89, 220, 392, 394, 408, 435, 476, 531], "2021345e": 471, "2022": [395, 396, 408, 411, 482], "2023": [382, 397, 398, 408, 411], "2023arxiv230517030c": 57, "2024": [103, 122, 407, 408, 445, 449, 450, 452, 476, 489, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "2024e": 490, "2026": [382, 411], "2028": 411, "203": [438, 484], "2030": [382, 411], "2031": 411, "20326": [295, 441], "20327": [295, 441], "2033": 411, "20339": 295, "2034": 411, "20343": 295, "20344": 295, "20345": 295, "20346": 295, "20349": 441, "2035": [121, 123, 411], "20350": 441, "2036": [121, 123], "2037": 411, "20372": 480, "2038": 411, "2039": 411, "20396": 441, "20397": 441, "204": [136, 438, 551], "2040469e": 471, "2041222e": 471, "20421": 441, "20422": 441, "204352": 553, "2045": 382, "2046": 411, "2049": [411, 468, 491], "205": [422, 438, 454, 473, 551], "2050": 411, "20508075688775": 468, "2051": 411, "20517": 441, "20518": 441, "20519": 441, "205192": 468, "20521": 441, "2053315944536949e": 480, "205357": 468, "2054": 411, "20559": 491, "2058705e": 471, "206": 468, "2061": 468, "2062580e": 471, "2064": 411, "2064335": 96, "2065": 411, "2066": 411, "2068682e": 471, "2069": 411, "207": [454, 458, 475], "2071": [382, 411], "2075": 398, "207520865": 463, "207521465": 463, "2076": 411, "2077": 411, "2079930e": 471, "208": 60, "2085": 411, "2089": [384, 413], "20898": 441, "20899": 441, "209": [438, 454, 551], "20900": 441, "2093": 411, "2095": 454, "2097": [411, 439, 447, 449, 452, 454, 460, 464, 480], "2097e": 444, "2098": 411, "20deg": [456, 457], "20e": 471, "20th": 396, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 125, 142, 373, 374, 418, 424, 433, 438, 439, 440, 447, 448, 450, 454, 456, 459, 463, 464, 467, 468, 471, 473, 491, 518, 540, 541, 542, 566], "210": [422, 438, 443, 468, 551], "2103": 468, "2104": 412, "2104353e": 471, "2106": 412, "2108": 412, "211": [468, 469], "2111": 412, "2112": [412, 490], "2114": 412, "2115": 412, "211770556360534": 465, "2118": 412, "2119": 412, "211e": 468, "212": [67, 422, 444, 468], "2121": 412, "2121164e": 471, "2123": 412, "21236e": 439, "2124": 412, "2126": 412, "2128": 412, "2129": [384, 413], "213": [438, 446, 530], "2130": [412, 464], "2131": [412, 468], "2132": 412, "21325": 481, "2133": 412, "2136": [383, 414], "2139": 412, "214": [442, 448], "2140": 412, "2141": 412, "2142": 412, "2145": 412, "2146": 412, "21464892": 491, "214e": 444, "215": [67, 422, 436, 468], "21500000000003": 525, "2151": 412, "2152": 412, "21525804550772332": 455, "2153": [412, 468], "2154": [412, 468], "2155": [416, 440, 461, 463, 464, 468, 477, 491, 531], "215686274509824": 458, "2157": 412, "2159e": 100, "215e": 468, "216": [232, 438, 443, 444, 473, 475, 560], "2160": 412, "2162670e": 471, "2163": 412, "2164425e": 471, "2166": 412, "2169": 412, "217": [444, 468], "2171": 412, "21731921e": 473, "21733761e": 473, "21735587e": 473, "218": [61, 124], "218804": 489, "2190": 388, "2192": 413, "21t19": 93, "21t20": 93, "22": [67, 83, 85, 88, 101, 104, 108, 109, 131, 162, 167, 170, 185, 186, 195, 198, 374, 408, 421, 444, 445, 446, 447, 448, 453, 462, 464, 468, 469, 472, 473, 474, 482, 483, 489, 490, 491, 502, 509, 512, 514, 515, 518, 543, 544], "220": [468, 475, 566, 567], "2200": 413, "2201": [65, 260, 468, 491, 548], "2202e": 491, "2204": 413, "2206": 413, "220e": 468, "221": [384, 422], "22149": 448, "2217": 413, "2217412e": 471, "2218": [387, 414], "2219": [386, 414], "222": [58, 468, 475], "2221": 468, "22245374e": 123, "2227134679628": 464, "22271346796282": 464, "22271346796283": 464, "2229": [383, 413], "223": [438, 475, 551], "2230": 413, "2231": 468, "2235": 413, "2237": [413, 491], "2238": 413, "2239": 413, "224": [438, 551], "2240": 413, "2243": 413, "2244": 413, "224436": 491, "225": [95, 295, 296, 394, 422, 468], "2250": 413, "22500": 450, "2254": 413, "2255": [388, 477], "225575051666": 468, "2255890": [463, 477], "2257": 413, "2259": 413, "226": [438, 454, 481, 530, 551], "22608": 469, "2262": 413, "22635140877790516": 470, "2264": [382, 413], "22646133647326874": 470, "2264827111476982": 470, "22648881839710966": 470, "2265163003209506": 470, "22662622801631419": 470, "227": 444, "2270": 387, "2272": 413, "2274": [389, 414, 439], "2276": 413, "2277": 413, "2278": 413, "2278975306934438": 470, "2279": [387, 414], "227e": 468, "228": [282, 288, 378, 384, 438, 445, 450, 468, 472, 483, 530], "2287": 413, "2289": 413, "229": [67, 468], "2290": 389, "2292": 414, "2294": 413, "2296": 413, "2297": 413, "22974080e": 481, "2298": 413, "22e": 472, "22nd": 408, "23": [93, 170, 370, 374, 396, 408, 432, 441, 446, 448, 453, 464, 468, 470, 473, 475, 477, 484, 491, 514, 545, 546], "230": [422, 448], "2300": 413, "2304": 388, "2305": 413, "230542e": 468, "2307": [64, 65], "2308": 414, "231": 422, "2310": 413, "2313": 414, "2314": 414, "232": 62, "2320": [414, 468, 469], "2321": 414, "2323": 414, "2326": 414, "2327": [468, 475], "23273": 481, "233": 445, "2330": 414, "23306": 448, "2332": 475, "2334": 414, "2335": 414, "2338": 414, "2339": [441, 468, 491], "234": [422, 438, 458, 459, 465], "234132519034915": 473, "23413252": 473, "2342": 414, "2343": 414, "234359264373779": 472, "2343e": 475, "2344": 414, "2345": 414, "2346": 414, "2347": 414, "235": 422, "2350": 415, "2351": 414, "23523": [140, 167, 205, 406, 444, 445, 453, 462, 469, 470, 472, 483, 489, 490, 502, 505, 565], "23526": [140, 205, 444, 445, 453, 462, 469, 470, 472, 483, 489, 490, 565], "235294117647083": 458, "2354": 414, "23559": [444, 445, 462, 469, 472, 489, 490, 512, 514, 515, 565], "2356": 414, "2357": 475, "2358": 414, "2359": 414, "23592": [444, 445, 462, 469, 472, 489, 490, 512, 514, 515, 565], "236": [422, 468], "2360": 414, "2362506e": 471, "23628": 481, "2365": 414, "2366": 414, "2367": 414, "2368": 414, "237": [438, 439, 459], "23734": 491, "2375": 414, "2376e": 446, "2377": 414, "2378": 414, "2379": 414, "2381": 414, "238298": 439, "2384": 439, "2385": 414, "239": [67, 454], "23905561": 471, "239439": 491, "239557417": 86, "2399": 468, "239e": 468, "23a": [61, 124], "24": [25, 27, 52, 53, 86, 87, 90, 93, 373, 374, 387, 391, 425, 430, 439, 445, 448, 464, 468, 469, 473, 475, 480, 481, 489, 514, 531, 538, 547, 548, 549], "240": [101, 104, 108, 109, 120, 438, 468, 469, 503, 551], "2400": 414, "2401": 414, "2404": 414, "2405": 415, "240e": 444, "241": 468, "2412": 414, "2414": 468, "2419": 439, "242835": 67, "243": 444, "2431": 468, "2432": 448, "2433": 415, "2435": 415, "244": [67, 422, 444], "2440": 468, "2441": 415, "244140625": 475, "2443672e": 471, "2444": 415, "2446": [415, 475], "2448": 415, "2449": 415, "245": 422, "2450": [415, 475], "245152": 454, "245313": 535, "2454": 415, "2455": 415, "2459": 415, "246": 422, "2461": 415, "24611324074": 468, "2463": [390, 415], "2464": 415, "2465055e": 471, "2468": 415, "24685677e": 471, "247": [67, 422], "2470": 415, "2471938975366008": 295, "2472": 415, "247201": 489, "2475": 415, "2476": 415, "2477": 415, "2478": 415, "2479": [415, 490], "248": 422, "2481": 415, "248122": 468, "2483": 415, "2485": 489, "2486": 415, "249": [22, 422], "2490": 415, "2491": 415, "2492": 415, "2493": 415, "2496": 415, "24968": 439, "2497": 415, "2498": 415, "2499": 415, "249965667724609": 472, "249e": 137, "24e": [468, 475], "25": [33, 52, 87, 90, 100, 136, 146, 157, 170, 282, 288, 374, 387, 394, 408, 429, 436, 439, 440, 444, 445, 448, 454, 464, 465, 468, 471, 473, 475, 491, 492, 523, 528, 550, 552], "250": [473, 564], "2501": 415, "250185": 472, "2502": [415, 454], "2505": 415, "2505121": 96, "2505703": 465, "2509": 468, "251": [448, 452], "2510": 415, "251185": 491, "2511884200000000": 491, "25162e": 439, "2518": 468, "251932": 468, "252": [422, 454, 468], "2520": 415, "2521": 415, "2523": 415, "2525": 415, "2528": 415, "253": [447, 475], "2535": 415, "2536": [415, 475], "2537": 475, "2538": 415, "254": 422, "2540": 415, "2546": 415, "254901960784338": 458, "25496": 491, "2551": 415, "2552": [415, 468], "2553": 415, "2555": 391, "2557": 415, "255750516626": 468, "2558": 415, "2559": 415, "256": [67, 425], "2560538e": 471, "2561": 415, "2562": 415, "2563": 415, "2564": 415, "2567": 415, "2568710719919036": 455, "257": [136, 438, 447, 479], "2574": 415, "25743553e": 470, "25763": 448, "257642": 468, "2579999": 480, "258": [447, 529], "2580": 415, "2585": 415, "2587": 415, "2589254117941673": 489, "259": [447, 491], "2591e": [440, 468], "2594": 415, "2595": 415, "2595e": 452, "259e": 137, "25b": 17, "25e": 475, "25t_": 53, "25th": 396, "26": [19, 87, 90, 374, 408, 436, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 493, 541, 553, 554, 555, 556, 559], "260": [425, 491], "2604": 415, "2609": 475, "261": [425, 491], "2616": 415, "26173": 448, "2619": 415, "262": [425, 448, 475, 491], "2620": 415, "262554796103245": 489, "2625818241224747": 470, "2627": 415, "262728": 480, "26272868097919794": 477, "2628525e": 471, "263": [136, 137, 448, 475], "2633e": 453, "2635": 415, "2635108e": 471, "2637": 415, "26392": 450, "2639554729438709": 477, "264": [136, 425, 454], "2645": 415, "2648150": 96, "2649e": 470, "265": [32, 137, 384, 439, 448, 454, 475, 491], "2651": 415, "2654": 415, "265e": 448, "266": [136, 137, 384, 447, 448, 454, 456, 460, 473, 475, 491], "2660": 415, "266192": 439, "26665050077722524": 477, "2667": 416, "267": [67, 137, 447, 448, 454, 475, 480], "2672": 416, "2673": 416, "26739753": 96, "2674": 416, "268": [396, 448, 454, 468, 475, 489, 491], "2681": 416, "2684": 416, "2685": 416, "268663733018811": 477, "2687": 416, "26883694": 491, "26887783978974283": 477, "2689": 454, "269": 491, "2692": 416, "269385": 468, "269627": 480, "2697": 416, "2699878e": 471, "26a": [39, 40, 50, 52, 53, 124, 237, 271, 280, 468], "26e": [468, 475], "26th": 392, "27": [137, 376, 436, 438, 444, 448, 454, 467, 469, 479, 491, 557, 558, 559, 566], "270": [441, 448, 468, 475, 491], "2703": 416, "2705": 416, "27057337686547633": 477, "2707": 416, "2708": 237, "2709": 416, "27093776e": 471, "271": [444, 447, 448, 452, 491], "2711": 416, "2712": 416, "2713": 416, "2715": 416, "271777777777796": 441, "27177778": 93, "2718": 416, "2719": 416, "272": [447, 448, 468, 475], "2720": [391, 417], "27209": 491, "2723": 416, "2725": 416, "2726": 416, "2726e": 491, "2727": 416, "2727693": 480, "2727e": 444, "2728": 416, "2729": 416, "273": [83, 425, 442, 448, 491], "2730": 416, "2731": 416, "2733": 416, "2734": 123, "2735": 416, "2737": 416, "2738": 416, "2739": 416, "274": 473, "27409496735322464": 477, "2741": 416, "2742": 416, "2743": 416, "274509803921596": 458, "2746": 416, "2747": 416, "27473": 454, "275": [438, 447, 468, 551, 559], "2750": 416, "2751": 416, "2752": 416, "2753": 416, "2755": 416, "2756": 416, "2759": 417, "276": 425, "2761": 417, "2762": 417, "2764": 417, "2765": 417, "2767": 417, "2768": 417, "277": 447, "2771": 417, "2772": 417, "27727": 475, "2775": 417, "277522283785622": 455, "2776": 417, "2777": 417, "2777074437073429": 477, "2778": 417, "2779": 417, "278": [27, 425, 447, 460, 468, 475], "2781": 417, "2782": 417, "2783": 417, "278332": 538, "2784": 417, "2785": 417, "2785e": 444, "2787": 417, "2788": 417, "2789": 417, "279": 425, "2790": 417, "2791": 417, "2792": 417, "2793": 417, "2794": 417, "2796": 417, "2797": 417, "2798": 417, "2799": 417, "27e": 468, "27t20": 89, "28": [21, 24, 67, 93, 136, 137, 379, 408, 442, 444, 446, 447, 448, 454, 456, 460, 468, 472, 473, 475, 480, 491, 560], "280": [67, 425, 444, 447, 473], "2800": [456, 475, 491], "2801": 417, "2802": 417, "2803": 417, "2804": 417, "2805": 417, "2808": 417, "2809": 417, "281": [447, 468], "2810": 417, "281096": 557, "2811": 417, "28118133544922": 468, "2812": 417, "28120079": 468, "2815": 417, "2816": [417, 475], "2817": 417, "2818": 417, "2818047723094509": 477, "282": [136, 137], "2820": 417, "2822": [417, 475], "2823": 417, "2825456e": 471, "2827": 417, "2827988e": 471, "2828": 417, "2829": 417, "282e": 468, "283": [425, 447], "2832": 417, "283218": 439, "283487": 468, "2837": 417, "28382603": 471, "2838398": 480, "28385358839966657": 477, "2839": 417, "284": [447, 468, 569], "2841": 417, "2842": 417, "28429": 454, "2845": 417, "2846": [417, 454], "285": [425, 447], "2852": 475, "28551": 137, "285e": 448, "285f": [83, 88], "286": [425, 447], "286081": 476, "2861432787940619": 477, "286e": 468, "287": [52, 53], "2872": 418, "28720322": 96, "2874": [418, 491], "28755283551095173": 477, "2878662980210884": 296, "288": 123, "2880470e": 471, "2885": 418, "288e": 442, "289": [425, 447], "28905": 481, "2891": 418, "28958": 448, "2896": 418, "2897": 418, "28e": [101, 442, 452, 454, 469, 481], "29": [67, 137, 266, 385, 395, 408, 436, 439, 442, 445, 447, 448, 454, 460, 463, 468, 473, 475, 476, 480, 489, 491], "290": [426, 447, 455], "2900": 475, "2903": [418, 475], "2903e": 446, "2907": 418, "291": [425, 438, 443, 551], "2912": 418, "29170324": 469, "291e": 491, "292": [438, 443, 444], "2922477": 96, "2924": 418, "2927": 418, "2929": 418, "292e": 448, "293": 447, "2930": 468, "2931": 418, "2932": 418, "29355238360800506": 477, "2938": 418, "2939": 418, "2942": 392, "2943": 418, "2944": [393, 418], "2945": 418, "2947": 418, "2948": 418, "294e": 448, "295": [425, 464], "2950": 418, "2951": 418, "2953": 454, "2956": 418, "29585273e": 481, "2959": 475, "295e": 468, "296": [425, 464], "2965": 418, "2966": 418, "2967": 418, "296e": 460, "297": [439, 460], "2971e": 468, "2974": 418, "2976": 418, "2978e": 440, "298": [447, 454, 468], "2981": 418, "2984": 418, "29882214027996945": 477, "299": [425, 447, 468], "2990": 418, "2991": 418, "2992": 418, "2993": 418, "2995484265169": 461, "2996": 491, "2998": 418, "2999": [418, 468], "299940468335294": 454, "299995937905366": 454, "299e": 468, "299t": 53, "29t20": 463, "29th": 408, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 167, 177, 178, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 205, 227, 376, 381, 386, 389, 390, 391, 402, 410, 416, 429, 430, 431, 438, 448, 450, 451, 454, 473, 474, 491, 501, 504, 515, 516, 517, 529], "2degx2deg": 456, "2e": [192, 439, 441, 442, 456, 457, 463, 468, 470, 475], "2e3": [192, 473], "2e6": 481, "2f": [359, 439, 445, 477, 490, 567], "2fhl": [58, 71, 415, 427, 428, 468, 491, 500], "2hwc": [59, 72, 415, 421, 429, 468, 500], "2k": [101, 108], "2m": [237, 271], "2nd": [60, 395], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 468], "2pc_catalog_ve": 440, "3001": 418, "30015e": 439, "3002": 418, "3003": 475, "3004625872247901": 453, "3005": 418, "3006": 491, "3006942": 96, "3007": 418, "301": [425, 447], "3011061699260256": 477, "3012": 418, "3013": 468, "301668796295": 468, "302": 447, "3020791585772495": 295, "30287": 448, "3028e": 475, "302e": 468, "303": [444, 447, 468], "3030": 418, "3032": 418, "3034": 468, "3035": 418, "3037": 418, "3037632e": 471, "3038": [418, 491], "3039": 418, "304": [440, 461, 463, 464, 468, 477, 491, 531], "3041": 418, "3042": 418, "3043": 475, "3045": 418, "3046875": [469, 475], "3049664466089965": 296, "304_steadi": 440, "305": [67, 447], "3051": 418, "3051827": 96, "3051852": 96, "3051856": 96, "3052": 418, "3053": 418, "30535345877453707": 477, "3054": 418, "3054538213469855": 455, "30561": 137, "3058": 418, "3058422e": 471, "305e": 468, "306": [425, 464, 566], "3060": 418, "306196370000000": 491, "3063": 418, "3069": 418, "306e": 468, "307": 447, "3070": 418, "3071": 468, "3072": 418, "3074": 418, "3075": 394, "3076": 418, "307e": 468, "308": [447, 454, 525], "3080": 418, "3081": 418, "3083": 418, "3085": 418, "3086": 418, "3088": 418, "3089": 418, "3091": 418, "3092": 418, "30997": 491, "30a": 271, "30d00m00": 397, "30e": [440, 450, 471, 475], "30th": 382, "31": [136, 137, 379, 380, 393, 394, 406, 433, 440, 442, 445, 447, 448, 452, 455, 458, 463, 464, 468, 469, 472, 473, 475, 478, 482, 489, 491], "310": 464, "3100": 418, "3106": 418, "31067517": 468, "3107": [468, 491], "311": [525, 567], "3110": 419, "3111": 419, "3112": 419, "3113": 419, "31139074e": 470, "3114": 419, "311489174710791e": 491, "3116": 419, "3117988e": 471, "31186857659616535": 477, "3119611261122878": 477, "312": 425, "3122": 420, "3123": 420, "3124": 420, "3125": 420, "3126": 420, "3127": 420, "3129": 420, "312e": 448, "313": [447, 453], "3130": 420, "3131": [421, 475], "3135914081482271": 477, "3136": 421, "313714614138": 469, "3138": 421, "314": 430, "3140": 421, "314008": 545, "3141": 421, "3145": 421, "3148": 421, "315": 468, "3152": 421, "3153": 421, "3155": 421, "315767542862533": 489, "3158": 421, "316": [447, 481, 482], "3162": 421, "316227": 468, "316227766016838": 472, "3165": 421, "3168": 421, "3169": 421, "317": [425, 447], "3173": 421, "3178": 421, "317a": 271, "317e": [440, 468], "318": [425, 438, 530], "3180": 421, "3182": 421, "31834": 137, "3185": 421, "319": [426, 438, 481, 551], "3191": 421, "3195": 491, "3197": 421, "319725": 480, "3199": 421, "32": [83, 136, 186, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "320": [101, 104, 108, 109, 120, 468, 469, 475, 503], "3202": 421, "3207": 421, "3208": 421, "32095": 491, "321": [447, 458], "3211": 421, "3216": 421, "3217": 421, "3219": 421, "322": 447, "3222": 421, "3228": 421, "3229": 454, "323": [447, 484], "3230": 421, "3232943": 337, "3233356": 337, "32377509405904137": 95, "323779": 286, "3237948931463171": 477, "3238": 421, "324": [438, 551], "3241": 421, "3243": 421, "3246": 421, "32465247": 476, "3254": 421, "3257": 421, "3258": 421, "325e": 445, "326": [425, 464], "3262": 421, "32684": 491, "32684833": 480, "327": [438, 454, 551], "3272": 421, "327217467763": 464, "3276": 421, "3277": 421, "3278": 421, "3279": 421, "3279955e": 471, "328": [438, 454, 475, 479, 551], "3281": 421, "3283": 421, "3284": 421, "32843": 491, "32847": 439, "3285": 421, "329": [95, 295, 296, 463, 468, 477, 505], "3293": 421, "3299": 468, "329e": [444, 468], "33": [438, 451, 461, 463, 466, 467, 470, 473, 491, 505], "330": [426, 438, 447, 475, 551], "3301": 421, "33013e": 439, "3302": 421, "3302565e": 471, "3303": 421, "330376": 67, "3304": 421, "3305": 421, "330505": 480, "33055e": 439, "3306": 421, "3307": 421, "3308": 421, "3309": 421, "3310": 421, "3314": 421, "33164865722698683": 477, "3319": 421, "3319831545301117": 295, "332": [67, 426], "3320": 421, "3323": [421, 469], "332525": 468, "3328": 421, "332e": 454, "332f": [30, 31, 32, 33], "3330487": 96, "3331": 491, "3331761": 96, "3333": 421, "33333333": 370, "3333333333333344": 458, "3335": 421, "33368e": 439, "3337": 421, "3338": 421, "334": [123, 481], "3342": 421, "3343": 421, "3346": 421, "3347": 421, "33484": 439, "3349": 421, "334e": 468, "335": [426, 452], "3353": 421, "3357": 421, "3358": 421, "335e": 442, "336": [458, 464, 468], "3363": 421, "3364130e": 471, "336444e": 468, "336606": 439, "3368855e": 471, "3369": 421, "337": [426, 447], "3374": 421, "3377": 421, "33787": [95, 477], "33788": [95, 477], "33789": [95, 477], "3379": 421, "33790": 477, "33791": 477, "33792": 477, "33793": 477, "33794": 477, "33795": 477, "33796": 477, "33797": 477, "33798": 477, "33799": 477, "338": [426, 468], "33800": 477, "33800122": 96, "33801": 477, "3380311e": 471, "3381": 421, "339": [426, 444, 458], "3390": 421, "3392": 421, "3393": 421, "3395": 421, "3397": 421, "339835555384604": 477, "3398360": 471, "33983991887701287": 95, "3399": 421, "33e": 465, "34": [52, 53, 67, 409, 439, 454, 469, 473, 475, 491], "34005": 439, "3402": 421, "3403": 421, "340391": 491, "3404": 421, "34047": 439, "3406": 421, "3409": [93, 421], "341": 439, "3413": 421, "3416": 421, "3418": 421, "342": 426, "3420": 421, "3423": 421, "3426": 421, "3428": 421, "3434": 421, "3438": 421, "3439": 421, "343e": 442, "344": 468, "344238": 491, "3443842": 480, "3445": 421, "3446": 421, "3447": 421, "3449": 421, "344e": 67, "345": [287, 439, 475], "3453": 421, "3454": 421, "345692": 491, "3458": 421, "346": [475, 492], "34613054105945": 455, "346488e": 468, "3466": 421, "3468": 421, "346e": 448, "347": [426, 441], "3471": 421, "3474": 421, "348": [36, 37, 426, 444], "3480": 421, "3481e": 452, "3488": 421, "348e": [67, 468], "3491": [421, 448], "3493": 136, "349530550405035": 470, "349530725254468": 470, "34953073943366": 470, "34953075819191": 470, "34953077463306": 470, "34953079334042": 470, "349530807529028": 470, "349535814693404": 470, "349536723056637": 470, "349537158300407": 470, "349537804239922": 470, "34953807814367": 470, "34953910575007": 470, "34953932636892": 470, "349542158419318": 470, "349559366703698": 470, "34971209244579": 470, "349724940685938": 470, "3499075e": 471, "34e": [468, 475], "35": [67, 387, 394, 406, 444, 463, 468, 470, 478, 480], "350": [458, 465], "350105": 454, "3502": 468, "35030398537787": 470, "3503706026275275": 477, "3504": 491, "35052105086856": 470, "350556388466543": 470, "350d": 458, "351": [426, 468, 491], "3514e": 490, "3515": 421, "352": [426, 468], "3521": 441, "3523": 421, "3529": 421, "3529411764705888": 458, "353": [24, 426, 491], "3535": 423, "353592500058824e": 489, "3536": 439, "353e": 454, "354": 458, "3544": 421, "35524421402927": 464, "35569283": 471, "355804": 491, "3559": 421, "356": 491, "3561": 421, "3568": 421, "357": [468, 491], "35722435185": 468, "3576e": 441, "357e": 448, "358": [454, 468, 491], "3583": 454, "3584": 421, "359": [426, 454, 468, 491], "3590188e": 471, "3592": 421, "3599": 456, "359e": 491, "36": [67, 86, 142, 315, 454, 456, 468, 469, 471, 491], "360": [384, 473, 493], "3600": [447, 456, 457, 473], "36014": 452, "36073833513766157": 477, "361": [67, 426], "3619e": 490, "362": [438, 463, 466], "36228879": 491, "36273": 491, "363472509034498": 477, "3639946": 465, "364": [426, 438, 466], "365": [438, 530], "365156": 489, "3659253e": 471, "366": [438, 459, 490, 492], "36669663417038234": 477, "3669": 423, "367": [426, 458, 475], "3674884": 468, "368": 116, "36834038301420274": 477, "368346217294295": 95, "3684": 423, "3689322e": 471, "369": 426, "3690": 491, "3699": 423, "36e": [467, 468], "37": [438, 439, 440, 445, 447, 452, 459, 470, 481, 567], "370": [458, 468, 475], "37058": 137, "371": 426, "3710784e": 471, "3712": 423, "3713": 423, "3715810e": 471, "3718745": 96, "372": [35, 123, 491], "3720": 423, "3722": 423, "3725490196078436": 458, "3728": 423, "373": [444, 454], "3733": 423, "3739292e": 471, "374": [456, 458], "3740": 423, "37455141": 491, "3748": 423, "375": [426, 473], "3750": 454, "37506": 491, "37517": 448, "3752": 423, "3759377929871826": 477, "376": 67, "3760": 423, "3761": 423, "3765": 439, "3777": 423, "37773": 448, "3779": 491, "3783": 423, "3784": 136, "379": [426, 438, 444, 466], "3792": 475, "3796": 423, "3797": 423, "38": [22, 67, 439, 441, 464, 468, 473, 475, 489, 491, 550], "3802": 423, "3804": 423, "3806": 423, "381": 475, "3810": 423, "3812": [468, 491], "3812120e": 471, "3812160e": 471, "38143003": 96, "3817": 423, "3829": 491, "382e": 444, "383": [67, 426, 468, 473], "3833": 423, "3837": 423, "383e": 67, "3842": 423, "3846": 423, "3848912826152664e": 491, "3856": 423, "385e": 137, "3860": 423, "3862": 432, "387": [426, 491], "3872": 468, "3873": 423, "3874": 423, "3876": 423, "387834": 491, "388": 529, "388405": 491, "3885947175689592": 477, "3886270e": 471, "3887": 423, "389": 375, "3892": 423, "3895": 423, "3898": 423, "389e": 491, "39": [17, 18, 21, 22, 24, 25, 27, 59, 464, 467, 468, 473, 481, 529, 550], "390": 421, "3904": 423, "39042": 86, "3905": 423, "3906": 423, "391": 468, "3915": 423, "39151": 450, "3918": 423, "3919677734375": 444, "392": [426, 445], "392156862745098": 458, "39224": 448, "3925": 432, "393": [201, 202], "3933": 423, "3935": 441, "3936": 423, "394": 426, "3941": 423, "3945": [441, 468], "3947637541758": 464, "394765638937866": 489, "3948": 424, "395": 426, "3950": [395, 432], "395004": 491, "3956": 432, "3959": 424, "396": 426, "3962942e": 471, "3966": 424, "397": 444, "3970": 396, "39728": 491, "3975": 424, "3979": [424, 565], "397918129147546": [406, 565], "39791813": [406, 565], "398": [426, 452], "3981": 491, "3981075200000000": 491, "3983": 424, "3986": 424, "3987": 424, "3988": 424, "398e": 468, "3990": 424, "39e": 468, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 142, 148, 155, 156, 158, 167, 274, 276, 376, 379, 380, 381, 385, 386, 389, 390, 391, 402, 410, 411, 412, 414, 415, 416, 417, 428, 429, 430, 438, 439, 440, 442, 444, 445, 448, 449, 450, 454, 455, 456, 457, 458, 459, 463, 464, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 489, 490, 501, 503, 504, 505, 510, 512, 513, 517, 562, 564], "3d33m15": 67, "3dataset": 453, "3e": [20, 123, 129, 454, 457, 460, 462, 465, 468, 475], "3e4": 481, "3e5": 481, "3e6": 550, "3e7": 550, "3f": [123, 455, 566, 567], "3fgl": [61, 67, 74, 222, 259, 393, 422, 425, 427, 428, 429, 438, 442, 468, 476, 491, 500, 519, 551], "3fgl_name": 71, "3fhl": [62, 75, 86, 125, 127, 131, 277, 390, 428, 429, 442, 448, 456, 458, 468, 473, 474, 475, 476, 481, 491, 500, 502], "3fhl_data_fermi": 453, "3fhl_dataset": [277, 453, 474], "3fhl_model": [277, 453, 475], "3g": [467, 468], "3hwc": [63, 76, 421, 432, 468, 500], "3ml": [388, 481], "3pc": [64, 69, 77, 468], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 90, 100, 101, 104, 108, 109, 113, 115, 126, 131, 137, 139, 144, 147, 155, 167, 170, 186, 187, 188, 189, 190, 191, 196, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 232, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 270, 277, 278, 315, 357, 370, 371, 373, 374, 382, 384, 387, 390, 394, 395, 406, 409, 418, 420, 421, 422, 425, 427, 428, 431, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 489, 490, 491, 493, 498, 499, 500, 514, 517, 518, 522, 523, 526, 531, 536, 549, 550, 558, 564, 565, 566, 567, 568], "40": [59, 108, 109, 377, 422, 441, 442, 444, 445, 447, 452, 454, 463, 464, 473, 476, 480, 491, 514, 537, 540, 545, 566], "400": [131, 449, 454, 458, 468, 473, 491, 559], "4000": 432, "40000": [167, 490], "400056": 439, "40050506591797": 468, "40051": 450, "40051035": 468, "40071076": 96, "400x200": 458, "401": 445, "40112": 491, "4013": 432, "4014": 432, "4015": 432, "4017": 432, "4018": 432, "402": 147, "4022": 432, "40235": 452, "4024": 432, "4025": 432, "4026": 432, "402712": 468, "403": [426, 454, 475], "4035": 491, "4037": 432, "404": 293, "4043": 432, "4044": 432, "40481": 452, "405": 378, "4051": 432, "40525": 452, "4054": 432, "4058": 432, "406": 491, "40611": 491, "4067": 432, "407": 468, "4071": 432, "4073": 432, "4073799600000000": 491, "4075": 432, "4076": 432, "4079": 432, "408": [444, 473], "4080": 432, "4080942e": 471, "40822469e": 476, "4083": 432, "4084": 432, "4088": 432, "4089": 432, "40919": 448, "4093": 432, "409416": 491, "4095": 432, "4098": 432, "40a": 59, "41": [67, 86, 93, 384, 468, 469, 473, 481, 491], "410": 458, "41009347393684": 469, "4103": 432, "4105": 432, "4106": 432, "4107": 432, "4108": 432, "411": 491, "4110e": 468, "4112": [123, 432], "4113": 432, "4115": 432, "41176470588239": 458, "4119": 432, "411e": 442, "4120719e": 471, "412165": 454, "412779907405": 468, "413": 454, "414": 426, "4140541880588": 455, "41415047": 96, "4142135623730951": 116, "41449": 448, "415": [426, 541], "4151e": 452, "4155": [468, 491], "41584196": 461, "416": [67, 452, 468, 472], "4161e": 452, "417": 468, "418007850646973": 406, "41866": 481, "419": 475, "4191": 435, "41924": 136, "4198250e": 471, "41995": 448, "419e": 468, "41e19": [19, 20], "42": [25, 27, 93, 147, 337, 384, 447, 449, 454, 468, 471, 472, 473, 477, 480, 518, 521], "42050348": 469, "4208": 435, "4209": [435, 448], "421": [426, 458, 491, 564], "4210": 435, "4212": 435, "4212028e": 471, "4213": 435, "4215": 435, "4216": 435, "4217": 436, "4219": 435, "422": [39, 40], "4220": 452, "4221": 433, "4225498e": 471, "4225631e": 471, "42267": 454, "4226731": 454, "423": 444, "4231": [433, 435], "42361": 448, "42399798": 454, "423e": [123, 448], "42400": 454, "4242": 435, "4243": 435, "4245": 435, "424582": 543, "42463": 481, "424650": 469, "42474": 491, "425": 491, "4252": 435, "426": 468, "4264": 435, "4268": 433, "427": 445, "4275": [433, 435], "4277": 435, "4280": 435, "4281": 468, "4282": 435, "4288": 435, "429": 444, "429389": 529, "4294": 435, "42e": [470, 475], "43": [270, 337, 384, 445, 454, 464, 469, 473, 491, 518], "430": 468, "43000": [52, 53], "4301": [433, 435], "4303606e": 471, "4305": 435, "431": [132, 378, 458, 469], "431023787974766e": 489, "43113": 439, "43137254901962": 458, "4313847458879893": 477, "4319": 491, "43197": 448, "4324": [433, 435], "4326": 435, "432878": 468, "432e": 468, "433": 448, "4336": [433, 435], "43366": 559, "4338e": 440, "434": 468, "43416595": 465, "4344": 433, "4346": 435, "435": 426, "4350": 435, "4351637481047363": 477, "4352": 435, "4359": [433, 435], "435e": 444, "435l": 468, "436": [426, 444], "4360750e": 471, "4369": 435, "437": [468, 475], "4370": 435, "4373240195300975": 477, "437e": 448, "438": 475, "4380": [434, 435], "4381": [398, 436], "4382": 434, "439": 444, "4393": [434, 435], "4394": 434, "4395": 435, "4397": [434, 435], "439e": 468, "43e": 475, "44": [21, 50, 86, 337, 440, 447, 463, 465, 473], "4402": 435, "44055555555555603": 93, "4406": 435, "4408": 436, "4409": 435, "4412": [434, 435], "4417": 435, "4418": 435, "4420073e": 471, "4420222e": 471, "4428": 435, "4428634e": 471, "4430": 435, "44319": 469, "4432": 436, "4435": [434, 435], "4444": 435, "444e": 453, "445": 448, "4450": 491, "44528685": 491, "4453": [434, 435], "44573": 93, "4458": 435, "4459": 435, "446": [451, 475, 567], "4466": [435, 452], "4466832000000000": 491, "447": 426, "44742": 491, "44749e": 439, "447552": 439, "447e": [454, 468], "447l": 17, "448": 458, "4480056e": 471, "44802852": 491, "4481": 468, "44822732501": 556, "448230159214": 557, "44823393513": 558, "4485": 436, "4486": [434, 435], "448e": 137, "4491": [397, 436], "4495": 435, "4498": 136, "44e": 406, "45": [51, 54, 447, 453, 465, 469, 473, 474, 476, 493, 518, 523, 524], "450": [445, 475], "4500": [434, 435], "4501": 436, "4504": 435, "4506": 435, "4508": 435, "4509803921569": 458, "4510": [435, 452, 491], "4515": 467, "4517490659800822": 462, "4520": 434, "4521": 435, "452327": 554, "4524": 434, "453": [440, 475], "454": 444, "4540": 436, "4545": 435, "4546": 436, "455": [426, 442], "45515263080596924": 441, "4558750": 454, "455e": 67, "456": 426, "4561": 436, "45646095": 465, "4567": 436, "457": [271, 426, 475], "457251": 491, "4574": [434, 436], "4575": 93, "4578": 434, "4579e": 439, "458": [458, 468], "4584": 436, "45856": 491, "4586649826004114": 295, "459": [426, 469, 475], "4593": 434, "45935": 491, "4595": 436, "4599": 436, "45\u00ba": 482, "46": [53, 67, 108, 109, 384, 464, 468, 473], "460249999": 86, "4608": 436, "461": [426, 438, 551], "4615": 436, "4618695378303528": 441, "4619": 434, "462": [426, 444], "4620": [398, 436], "4620e": 468, "46225": 448, "4628": 436, "463": 491, "4631": 434, "4635": 436, "4638": 436, "4638e": 449, "464": 460, "4642048e": 471, "4647544e": 471, "465": [444, 468, 475], "4653": 434, "4657": [434, 436], "465784": 491, "4660": 436, "4664": 436, "4668": 436, "4669": 436, "4671": 436, "46711": 448, "467577": 476, "4677": [434, 436], "468": [465, 468], "4681": 434, "4684": 441, "468805426856864e": 52, "468e": 67, "4697": 436, "46e": [83, 449, 454], "47": [67, 464, 468, 473, 491], "4703": 436, "470588235294144": 458, "4711": 491, "4712": 448, "4714": 436, "471e": 464, "4721": 434, "4726": 436, "4728": 434, "4729": 436, "473": [426, 444], "4738": 436, "474": 426, "4740": 436, "4741": 436, "474592": 526, "474e": 468, "475": [426, 475], "4750": 436, "4753": [434, 436], "475468": 439, "4755": 434, "4759": 436, "4770": 436, "4772": 434, "47797": 448, "477e": 468, "478": 426, "47802": 477, "47803": 477, "47804": 477, "47827": 477, "47828": 477, "47829": [82, 477, 483], "4783": 436, "4785": 436, "47e": 468, "48": [33, 167, 409, 450, 452, 453, 473, 475, 481], "480": [441, 468, 475], "4802": 436, "4805": 436, "480554966147": 452, "48068": 448, "4808": 436, "480e": 468, "481": [375, 426], "4810": 436, "4814": [436, 491], "4817": 436, "48180882997916e": 489, "4819444e": 471, "482": 439, "48215685": 96, "4822": 436, "48248": 468, "4825": [468, 491], "4828": 436, "4829": 436, "4834": 436, "4834488e": 471, "4835": 436, "4837": 436, "484": 426, "48442": 266, "4845": 436, "4847": 436, "4848653": 468, "4849": [436, 468, 491], "484e": 137, "485": 426, "4850": 436, "4851": 436, "4854": 436, "485p": [36, 37], "48602294921875": 441, "487": [426, 489], "4875723e": 471, "4876": 434, "4879": 436, "488068": 548, "4881": [246, 247], "4886": 436, "48871": 439, "488z": 27, "489e": 468, "48e": [468, 475, 490], "49": [53, 448, 452, 468, 475, 481, 489, 517], "490": 25, "4902": 436, "4904": 436, "4904078e": 471, "49078e": 439, "4913": 434, "49152": 481, "4917": 436, "493": 25, "4930435940405": 452, "4933657e": 471, "4936": [434, 436], "4937": [434, 436], "4940": 436, "49417615": 86, "4942": 436, "49447596": 450, "494e": 444, "4958277": 96, "496": [438, 486], "496021": 480, "4963": 491, "4966": 491, "4968236e": 471, "4970": 436, "4971": 436, "4971704e": 471, "4973": 436, "4975": 436, "4978": 436, "498": 491, "498784": 468, "4989": 436, "498e": [468, 491], "499": [67, 468], "49919925926": [232, 560], "4992": 436, "4994": 436, "49972277488662115": 477, "4999833830074": 454, "4d": 389, "4e": [465, 468, 475, 550], "4f": [565, 566, 567], "4fgl": [65, 78, 260, 261, 393, 413, 415, 421, 423, 436, 438, 440, 453, 468, 474, 476, 500, 519, 551], "4th": [382, 408], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 90, 101, 102, 104, 107, 108, 109, 116, 120, 123, 124, 126, 128, 130, 136, 137, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 167, 170, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 212, 213, 216, 219, 220, 222, 223, 224, 227, 228, 230, 232, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 271, 293, 297, 329, 360, 361, 365, 367, 370, 371, 374, 375, 377, 381, 382, 384, 385, 386, 387, 389, 393, 394, 395, 401, 406, 409, 411, 413, 414, 421, 423, 425, 426, 428, 429, 430, 434, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 493, 498, 499, 502, 509, 512, 514, 515, 516, 517, 518, 522, 523, 524, 525, 527, 531, 532, 537, 539, 540, 541, 545, 546, 553, 554, 555, 556, 558, 564, 566, 567], "50": [87, 90, 93, 110, 114, 337, 377, 397, 439, 445, 446, 452, 460, 463, 464, 465, 468, 469, 471, 473, 475, 476, 477, 480, 481, 483, 489, 490, 491, 514, 517, 525, 567], "500": [187, 188, 190, 196, 199, 200, 448, 454, 456, 457, 473, 480, 481, 491, 517, 522], "5000": [19, 20, 87, 90, 493, 517], "5000056568267741": 454, "5000e": 447, "50022222": 93, "500249": 468, "5004": 454, "5015": 436, "502": 426, "5029747": 446, "503": 426, "5030": 491, "504": 28, "5040": 436, "5044": 436, "5049": 491, "505": [67, 468, 469], "505523195905": 452, "506": 426, "5066": 468, "507": 426, "5074834": 96, "5078068": 96, "50807568877": 468, "509e": 468, "50e": [447, 475], "51": [52, 53, 67, 452, 458, 489], "510": 426, "5106": 491, "51095676": 465, "510e": 464, "511": [67, 426], "51179": [371, 569], "512": 444, "5126": 67, "512e": 464, "513": [406, 473], "51312": 454, "513664": 523, "5144": [93, 439], "514854": 480, "51544": [447, 456, 457, 460], "516": [438, 479], "5162628e": 471, "518": [426, 475], "5188338e": 471, "51910": 93, "5192420e": 471, "5194769e": 471, "51948705e": 476, "52": [53, 123, 167, 439, 441, 448, 450, 452, 464, 468, 480, 483, 491], "5205": 481, "52074074074": 83, "521": 427, "522669": 558, "523": [427, 473], "5230376e": 471, "52318414": 96, "5237647004325865": 477, "52389101852": 468, "523a": [237, 271], "523b": 22, "523e": 445, "524": [427, 468, 475], "5248": 491, "524807800000000": 491, "52587": 448, "526": 427, "52607": 491, "527": [427, 481], "527e": 445, "528": [444, 475], "52826166": 468, "5283": [468, 491], "52839183495354": 464, "529": 427, "529102055927": 464, "5292": 469, "529411764705883": 458, "5297030e": 471, "52e": [465, 489], "53": [28, 454, 478, 522, 531], "530": 427, "53025": 93, "531": [427, 458], "53213": 454, "532431": 533, "5324402": 96, "5326744": 96, "5326841": 96, "5326859": 96, "533": 468, "53343": [406, 462], "53344": 462, "53345": 462, "53346": 462, "53347": 462, "53348": 462, "5345275e": 471, "53482e": 439, "535": [427, 443, 468], "535058216604496": 271, "53566": 439, "53616": 237, "539": [271, 475], "5390438": 96, "539397": 468, "53945": 463, "53946": 461, "539e": 468, "53e": [406, 447], "54": [67, 444, 468, 471], "5400": 469, "5407363826067": 502, "5407363826070": 502, "541": 427, "5411": 439, "5427520e": 471, "54282": 448, "5438860e": 471, "544": [427, 468, 481], "545": 427, "54566271": 566, "545y": [39, 40], "546": 427, "5461745": 96, "54676837e": 470, "54682": [448, 468, 481, 491], "547": [427, 439, 468], "54721e": 439, "5477": 468, "54772": 468, "54892": 448, "548e": 468, "549": 427, "549007644529844e": 489, "549019607843138": 458, "54e": 475, "55": [39, 42, 87, 90, 205, 464, 465, 470, 474, 478], "550": 444, "55027": 137, "55045": 468, "551": [468, 529], "55197": [371, 569], "552": 468, "55275": 481, "553": [440, 468], "5531e": 440, "553337": 491, "5538": 491, "5538942e": 471, "554": 67, "55410": 468, "5545130e": 471, "554e": 442, "556": [427, 444, 567], "5561760e": 471, "557": [427, 475], "55775": 468, "558": 427, "558338072878877": 489, "559": 427, "5594": 83, "56": [439, 445, 465, 473, 482], "560": [37, 468], "5606985": 465, "5607778e": 471, "5607e": 446, "56093766": 96, "56141": 468, "562": 468, "562065": 460, "5622482": 96, "56353481": 566, "563e": [444, 454], "564": [286, 427, 444, 475], "564139576925786": 455, "5644": 469, "565": 427, "56506": 468, "565095": 439, "566e": 444, "56711": 491, "5686274509803928": 458, "56871": 468, "569": 427, "56922612": 566, "5692809e": 471, "56973": 491, "57": [33, 448, 450, 454, 465, 473, 479], "57011": 454, "571": 468, "57185": 502, "5719922e": 471, "571e": 468, "572": 445, "57233": 491, "57236": [448, 468, 481, 491], "572e": 442, "573": [67, 444, 491], "57300957": 170, "574739": 536, "575": [438, 466], "5754970e": 471, "576": 475, "5760": 491, "57602": 468, "5763635e": 471, "5768262e": 471, "577398": 481, "5779092e": 471, "578": [468, 566], "579": 468, "57944657408": 468, "57967": 468, "57e": 468, "58": [406, 409, 447, 452, 455, 468, 472, 473, 475, 483, 489], "580": [438, 448, 451, 567], "581": 445, "5819e": 446, "582": 427, "5821e": 446, "582e": 448, "58332": 468, "5833e": 468, "5835918e": 471, "5842497e": 471, "585": 468, "58540702": 96, "5867488e": 471, "58693695": 465, "58698": 468, "5882352941176467": 458, "588e": 468, "58909": 464, "58926": 448, "5892966e": 471, "5895": 441, "58999": 232, "58e": [460, 468], "59": [83, 450, 460, 468, 472, 483, 491], "590": 444, "59000": [232, 560], "59001": 232, "590605": 531, "59063": 468, "5908": 468, "590835686434463": 477, "591": [427, 468], "59100": [559, 560], "59123": [553, 554, 555], "5915030546513255": 461, "5915e": 468, "59200": 559, "59233": 476, "59235": [83, 480], "59240": 476, "5924e": 490, "59250": 476, "59254e": 439, "59265": 439, "593": 427, "59300": 465, "59344": 491, "59348": 491, "59365": 560, "594": 427, "59400008": 96, "59428": 468, "59451": 448, "5951631e": 471, "596": 475, "59696": 448, "596e": 468, "597774": 471, "59793": 468, "598": 491, "5985": 491, "5987726": 96, "598e": 448, "599": [427, 458, 463, 475], "599625": 480, "59976": 468, "599999904632568": 468, "59d09m41": 468, "59e": [468, 475, 481], "5a": 58, "5e": [447, 457, 468, 475], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 90, 99, 101, 108, 110, 114, 123, 128, 137, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 158, 159, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 232, 271, 358, 361, 374, 377, 382, 386, 387, 390, 395, 403, 406, 419, 421, 423, 429, 430, 434, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 493, 497, 514, 518, 524, 528, 548, 564, 566], "60": [67, 90, 149, 434, 445, 448, 468, 470, 481], "600": [445, 448, 453], "6000": 517, "6000000000000001": 476, "600661": 471, "60075": 471, "60090769e": 476, "600e": 444, "6018166e": 471, "601e": 468, "6024e": 490, "603": [438, 475, 484, 491], "6033": 439, "60350": 442, "603625": 471, "604": 444, "6046689e": 471, "60508": [556, 557, 558], "605e": 448, "60603928": 476, "607666": 541, "607843137254942": 458, "608e": 448, "60e": 468, "61": [67, 416, 452, 468, 475, 481, 567], "610": 475, "61051": 481, "6105760e": 471, "611": [448, 566], "6116853": 468, "611e": 468, "6125": 483, "612866": 445, "612a": 124, "613114": 461, "613870": 539, "61422433": 96, "61453755944866": 455, "61489": 471, "615316": 491, "617835": 471, "6181862e": 471, "61862": 232, "619": 468, "6194453e": 471, "61975454954816": 489, "62": [450, 468, 482, 490], "620": 468, "620398": 471, "6205": 491, "62111": 448, "621499": 491, "6218742e": 471, "6219": 442, "622": [427, 442], "62258": 468, "6227766": 473, "62277660168379": 473, "6228e": 442, "623": [468, 491], "62320": 442, "623397": 471, "62341325": 473, "623413251903492": 473, "624": 475, "624122": 454, "624d": 24, "62503": 468, "62514628": 471, "6253652e": 471, "6259962e": 471, "6266": 491, "6267247": 491, "627450980392158": 458, "628": 427, "62842028": 469, "63": [185, 186, 195, 198, 439, 444, 446, 469, 472, 482, 483, 489, 490, 512, 514, 515, 518], "630": [82, 475, 483, 489], "6309576500000000": 491, "630e": 67, "631": [427, 452], "631155605": 456, "631159205": 456, "631170005": 456, "631173605": 456, "631177205": 456, "631180805": 456, "6318811e": 471, "632627": 491, "633": [85, 101, 104, 108, 109, 167, 445, 453, 472, 489, 490, 514], "63307": 83, "63308": [462, 490], "633083": 474, "63310241699219": 453, "63326": 448, "6333": 93, "63342": 491, "633600": 475, "635": 427, "63500212963": 468, "6354": 491, "63541": 480, "636688324856333": 464, "637956": 450, "637x": 100, "638": [438, 475], "639": 468, "6390": 439, "63902": 439, "6395e": 449, "6397": 491, "63e": 469, "64": [39, 67, 83, 123, 186, 409, 460, 464, 468, 481], "640": 427, "6402822e": 471, "641": [427, 491], "64103": 480, "6413": 454, "6417": 454, "6419578e": 471, "642": 491, "6423836025257211": 455, "6429005895278312": 477, "642e": 444, "643": [30, 31, 32, 33], "64323": 448, "64438": 481, "6444": 439, "645": 469, "6451": 454, "6464": 439, "647": [427, 466], "647058823529452": 458, "6471115e": 471, "64794383e": 476, "648": 427, "648e": 67, "649": [427, 438, 561], "64987376": 96, "64e": 445, "65": [63, 394, 409, 411, 469], "650": 469, "6509": 439, "650e": 448, "651": [468, 561], "651058": 491, "6514": 491, "652": 453, "6522806": 491, "652368617859867": 453, "653": [427, 441], "65357608e": 471, "654": [439, 468], "65412": 454, "654e": 468, "655": 448, "655283": 448, "6554088e": 471, "6556248e": 471, "6558": 448, "655e": [67, 445], "656": 566, "65603222222": 481, "65603794185": 468, "6561e": 452, "6577182894355391": 477, "658": 475, "658909145253801e": 491, "6589622747787678": 477, "659": [444, 448], "65e": 116, "66": [52, 53, 409, 412, 447, 453, 469, 470, 475, 478, 481, 489], "660": 427, "6604475": 454, "660e": 491, "660fals": 442, "661": 427, "66104": 439, "662": 468, "663": [444, 566], "663742400000000": 491, "664502403": 480, "664502405": 480, "664502408": 480, "664502409": 480, "664502414": 480, "6652219e": 471, "6656409356335768": 455, "666": [438, 484], "66650390625": 441, "6666666666583865": 463, "6666666666666666": 555, "666666666666696": 458, "6678": 448, "66813": 454, "66984341": 471, "669e": 137, "66e": [452, 469], "67": [17, 409, 468, 491], "670": 468, "6705024680435898": 295, "671616": 439, "6728": [468, 491], "673": [456, 483, 553], "67304": 96, "67375": 439, "67457342435522e": 491, "675": 444, "6761": 464, "676836990188792": 445, "6768e": 445, "677": [427, 479], "6772235e": 471, "67759236e": 471, "678": [86, 455], "67824": 469, "6784": 566, "67861": 471, "678684049503813e": 445, "679": 427, "679478012854058e": 445, "6795e": 445, "67992517": 96, "67e21": 467, "68": [67, 83, 95, 148, 154, 156, 157, 158, 160, 227, 409, 439, 468, 470, 471, 473, 480, 491, 567], "680": 475, "6803": 491, "680937840140089": 464, "6812310184489": 464, "68125": 471, "6823": 439, "684": 167, "68542112": 96, "68628538586": 469, "687": 475, "687214": 472, "687500": 472, "687685": 468, "68e": [440, 452, 468], "69": [101, 436, 448, 460, 468, 469], "690": 67, "690557685186": 468, "6909290e": 471, "691": [438, 451, 468], "691299354164691": 455, "69138": 448, "691680": [101, 469, 475], "692": 448, "692e": 445, "69314486": 474, "693940": 452, "694": [438, 459], "6953125": 469, "695337": 450, "69543812": 96, "6959369197218669": 477, "697317": 481, "69735": 471, "697508": 103, "697e": 442, "697fals": 442, "6985": 441, "6992": 454, "699e": 448, "6e": [442, 468, 475], "6h": 482, "6th": 408, "7": [30, 31, 38, 52, 53, 67, 87, 90, 123, 129, 136, 167, 170, 197, 205, 230, 360, 361, 370, 374, 375, 382, 386, 387, 390, 406, 410, 411, 413, 414, 420, 421, 426, 427, 428, 430, 431, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 518, 522, 523, 559, 566, 567], "70": [67, 90, 101, 454, 468, 469, 566], "700": [378, 457, 474], "70000000e": 476, "7000e": 476, "70016": 454, "7007": 454, "701": 514, "70181": 137, "702": [462, 468, 481, 490], "702e": 448, "703": [406, 438, 452, 454, 459], "70358483e": 476, "704": 475, "704148": 555, "70428": 491, "70437": 471, "705": 491, "70546": 448, "70634e": 439, "706e": [453, 468], "707t": 280, "708": [444, 445], "709": 427, "7097381e": 471, "70e": 476, "71": [33, 445, 447, 462, 475, 567], "710": 427, "71067811865478": 468, "7116851": 476, "712": 455, "71220672": 469, "7123895e": 471, "712e": [448, 462, 490], "713": [427, 468], "7132e": 491, "714": 468, "715": 491, "716": [95, 295, 296, 438, 459, 473], "716062": 480, "71693826": [463, 477, 505], "717": 468, "71795506": 491, "7184": 491, "719": [427, 475], "7190994e": 471, "71944e": 439, "7195": 468, "719e": 468, "72": [413, 468, 472, 491], "720": [457, 468], "7200": 460, "721e": 448, "722": 475, "72217": 491, "722557505166": 468, "723": 448, "723e": 468, "7240965e": 471, "725": 468, "725490196078432": 458, "727": 475, "72775": 491, "7284447e": 471, "729": [438, 443], "73": [439, 491], "7303": 491, "731": 427, "731202": 521, "731589446928548e": 489, "732e": [67, 468], "733": [67, 427, 438, 479], "734": 491, "7350250533013533": 477, "7350380e": 471, "7351418e": 471, "735e": 468, "736": [444, 566, 567], "737": 444, "738": [427, 468], "7385727e": 471, "739": 427, "7395744e": 471, "739e": 67, "73e": [468, 489], "74": [439, 450, 491], "740": 427, "740e": 448, "742": 475, "743e": [440, 468], "744": 454, "74427": 454, "74465974e": 471, "74479": 448, "745098039215687": 458, "74542e": 439, "746": 427, "7471700e": 471, "7479085e": 471, "748": 468, "748259": 452, "75": [67, 363, 440, 444, 491], "750": 567, "750e": 448, "751643891117176": 489, "75267735": 491, "753": [427, 445], "7537086e": 471, "754": [427, 481], "75408483": 491, "7555": 472, "7559": 491, "756": 468, "7567": 439, "7580410e": 471, "759": 427, "7596682e": 471, "75dtoka9": 452, "75e": [468, 490], "76": [455, 473], "7613": 406, "761918": 122, "761c": 28, "762": 427, "762199399999986": 529, "763": 427, "7637308880733709": 477, "7638": 448, "76419591747674": 464, "7647": 491, "764705882352942": 458, "76473": 448, "7652512e": 471, "766": [427, 448], "7660168382": 468, "766d": 480, "767": 427, "76739": 468, "768000": [101, 469], "768048": 96, "7681656e": 471, "76837444": 465, "7684028": 491, "768871": 449, "7692170e": 471, "76e": 475, "77": 447, "770": 67, "771667": 483, "77174": 448, "7718272408581743": 295, "771e": 468, "772": [427, 439], "77200569361551": 464, "77206": 491, "77218": 448, "773": [100, 468], "7733e": [440, 468], "77351": 448, "77358627319336": 441, "773e": 448, "774": [427, 460], "7743835449219": 444, "774e": 468, "775": [67, 475], "7752244878226383": 454, "7755386e": 471, "7760": 491, "7763307219821931": 295, "7765957e": 471, "77678": 439, "7769775": 480, "777": 427, "7771617763704126": 295, "77751797": 96, "777e": [67, 442], "777l": 35, "778": [427, 444, 468], "77827941": 473, "778279410038923": 473, "779": [445, 468], "7796942": 491, "779803": 546, "779e": 444, "77e": [447, 468], "78": [473, 474, 482, 490], "780": [31, 123], "780033": 527, "7800e": 444, "7804888e": 471, "78083": [136, 137], "780e": 123, "78188": 448, "78188096": 96, "782": 481, "7827941": 473, "78279410038923": 473, "783": [427, 468, 491], "783067": 559, "78332719": 454, "78333": 454, "783587001383003": 480, "783e": [454, 464], "784": [428, 445], "7843137254901955": 458, "78499999999997": 525, "785": 525, "7853981633974483": 558, "787": [67, 167], "787169465401243e": 462, "7875405607868806": 477, "7876233e": 471, "788": 468, "7887840e": 471, "788e": 468, "789": 427, "78910994": 96, "7894": 454, "78952750835169": 464, "78e": 475, "79": [441, 468], "790": 427, "791": 428, "7913e": 444, "7922": 439, "793": [428, 448], "7931758980912": 464, "79432823": 476, "79469899": 454, "79470": 454, "796": [428, 475], "796e": 460, "797": 428, "7972": 472, "798": 428, "798218": 439, "799": 444, "7990194e": 471, "7997221e": 471, "799999952316284": 468, "7c": 473, "7d": 468, "7e": [468, 475, 476], "7e955f": 409, "8": [16, 17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 84, 87, 89, 90, 101, 103, 104, 108, 109, 110, 114, 122, 126, 137, 141, 142, 191, 198, 230, 232, 297, 370, 374, 377, 378, 387, 410, 411, 414, 416, 417, 421, 422, 423, 426, 427, 428, 431, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 498, 500, 509, 514, 518, 522, 531, 542, 550, 566], "80": [170, 446, 447, 448, 469, 473, 481, 514, 541], "800932": 468, "801": [491, 514], "801668796295": 468, "802": [475, 491], "803": [444, 448, 529], "8031431e": 471, "8037638e": 471, "803921568627494": 458, "804": 475, "804492": 460, "80492": 137, "80571": 136, "8062607e": 471, "80683246": 471, "8071": 448, "807201": 491, "8075": [468, 491], "8075185": 468, "80807791444975": 464, "8084e": 452, "808687936570502e": 470, "80871364": 96, "8090746": 480, "809505": 468, "80982039": 471, "80e": 440, "81": [417, 440, 462, 531], "810": [428, 468], "810000": 460, "8100e": 440, "810e": 468, "811": 428, "8115337251905373e": 470, "812": 428, "812075194992371e": 470, "8122169596532167e": 470, "8122425483643125e": 470, "8122e": 470, "812358724314062e": 470, "8129257829574434e": 470, "812951371538087e": 470, "813": 428, "814": [428, 464], "815": [438, 443], "8150": 491, "8157971601581226e": 470, "816": 428, "8160964882165554": 295, "81699e": 439, "816e": 468, "818388e": 491, "81847286": 465, "818e": 442, "819": 468, "81e": 531, "82": [67, 409, 438, 452, 468, 490, 518], "820": 428, "8205513": 480, "820562952023891": 295, "8222980e": 471, "823": [438, 444, 492], "82352941176471": 458, "824": [132, 428, 475], "8241471833009617": 477, "825": [428, 439, 455, 468], "8256": 491, "826": 428, "826414166666": 93, "827": 428, "8272": 493, "82739": 448, "8275": 460, "827e": 137, "8290458e": 471, "8293": 491, "82946153": 491, "82e": 453, "83": [30, 67, 83, 85, 93, 101, 104, 108, 109, 167, 170, 185, 186, 195, 198, 444, 445, 446, 448, 453, 462, 469, 472, 473, 474, 482, 483, 489, 490, 509, 512, 514, 515, 518], "830": 428, "8300": 491, "831": 428, "832": 428, "83242471": 471, "832e": 448, "833": [428, 445, 448], "833333333336": 465, "834": 428, "8341884287660133": 477, "8349780e": 471, "835": [428, 464], "835e": [445, 454], "835fals": 442, "836": [428, 465, 468], "836731": 468, "8369650e": 471, "837": [428, 475], "8377268e": 471, "838": 448, "8383396349722769": 295, "84": [24, 409, 444, 446, 454, 468, 475, 518], "840": [428, 448], "841": 468, "841252": 549, "84196311": 96, "842": [428, 468], "84233": 448, "842x": 138, "843": [59, 439, 465], "843137254902004": 458, "843863242310971e": 489, "843e": 67, "8441040e": 471, "844770648146": 93, "8449575657133206": 295, "845": 429, "84529": 468, "8455480e": 471, "845693": 439, "846": [448, 468, 566], "847": 428, "8475576e": 471, "8475650e": 471, "84e": 452, "85": [87, 90, 435, 454, 522, 523], "850": [438, 484], "851": 428, "85157506": 491, "8515948e": 471, "85188496e": 471, "85202": 491, "85287": 481, "852e": 468, "854": 428, "854166666664": 465, "85416667": 463, "85469291": 96, "854e": 460, "855": 428, "85527": 454, "85527359": 454, "8555500e": 471, "85624": 449, "85625": 449, "8568": 491, "856e": 468, "8570719e": 471, "85722435185": 468, "858": 428, "858e": 468, "859": [428, 444], "85900": 454, "85900392": 454, "85925": 491, "8593054": 468, "85e": 468, "86": [442, 444, 445, 448, 473, 491, 502], "860": 468, "861": 491, "86111111": 463, "861150": 442, "8613613e": 471, "86178": 136, "8620": 460, "8623": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "862745098039234": 458, "864": [428, 491], "865": [428, 448], "86676": 481, "8669": 439, "8672": 454, "868": [428, 468], "86831929": 96, "8699": 439, "8699165e": 471, "87": [67, 454, 473], "870": [67, 428], "8704": 448, "871": 428, "871e": 448, "872": [428, 448], "873": 445, "8733348": 480, "8736082200157": 455, "873659477745188": 477, "874": 441, "875": 428, "8754543886403": 464, "876": 475, "8769240e": 471, "87710186": 96, "877563": 468, "878": [468, 475], "87897": 454, "87897418": 454, "879800": 524, "8799800e": 471, "87e": 21, "88": [409, 431, 446, 454, 455, 464, 468, 473, 491], "881": [428, 439, 448], "88113384": 450, "8815212313941426": 477, "882": 67, "882352941176466": 458, "883": 428, "8834862e": 471, "883e": 67, "884": 428, "88470839": 476, "885": [428, 438, 479], "886": 468, "8865": 491, "886695": 544, "88781": 448, "888": 428, "8885138e": 471, "888e": 448, "889": [438, 468, 478, 479], "8893600e": 471, "88e": [442, 468], "89": [33, 473], "8908866e": 471, "8909e": 464, "890e": 67, "892": 475, "89243456": 491, "8926": 491, "89287": 439, "893": [428, 438, 456, 459], "894": 442, "8943121e": 471, "89492144e": 470, "8949e": 464, "895": 465, "8954039e": 471, "89595846": 476, "896": [438, 443], "89709472": 491, "898": 428, "8986348363207728": 477, "89873": 454, "8989213": 454, "898e": 468, "899": [67, 450], "8999": 454, "899a": 271, "89e": 469, "8e": [442, 452, 455, 457, 475, 481, 550], "8hxrqirh": 472, "9": [31, 33, 35, 67, 83, 87, 90, 136, 191, 230, 232, 327, 334, 367, 374, 375, 379, 387, 406, 412, 414, 425, 428, 430, 433, 435, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 517, 524, 528, 529, 530, 537, 540, 553, 561, 566], "90": [57, 67, 393, 447, 453, 454, 468, 473, 476, 493], "900": 468, "9002269877996247": 465, "900269": 471, "9023670e": 471, "90242058e": 469, "9032163": 86, "9034e": 464, "904": 491, "905": 468, "9053655e": 471, "9053906e": 471, "906": [428, 468], "90605275e": 481, "90685": 448, "907": 468, "9074812e": 471, "907522": 534, "9077294": 480, "90e": [101, 445, 452, 469], "91": [447, 473, 478, 518], "911": [428, 438, 467, 479], "911552434768802e": 462, "912": 468, "912525e": 491, "912779907405": 468, "913196574074": 462, "914": 67, "915": 468, "91507": [101, 469], "9163195e": 471, "916e": 448, "91719": 469, "918": 67, "918365": 468, "919": 428, "919e": 468, "91e": 475, "92": [137, 447, 448, 473, 480], "920": 444, "9205875e": 471, "921": 445, "9215375e": 471, "92234009259": [406, 462], "923710": 537, "924": 445, "9240e": 476, "92490": 448, "924e": 448, "925": [438, 472, 479], "925106": 454, "9269494e": 471, "9277492e": 471, "928": 468, "9280475e": 471, "929": [439, 445], "92960065298276": 489, "93": [67, 121, 123, 447, 448, 473, 480], "93026": 468, "9303": [468, 491], "930e": 460, "931": 293, "93128e": 439, "932": 428, "93271046296": 462, "933": 428, "9332549000000": 491, "9343": 439, "935826709880043": 461, "93702": 481, "9382336444241555": 477, "938e": [454, 468], "939": [282, 288], "9391360e": 471, "93988308": 96, "93e": 468, "94": [447, 468, 473, 480, 489, 491], "940e": 468, "940fals": 442, "94111838": 96, "941176470588236": 458, "94186555556": [406, 462], "943282347242818": 489, "9441e": 449, "944e": 460, "9453950989269149": 477, "945e": 448, "946188": 556, "9462": 454, "946923": 266, "94722599": 454, "94723": 454, "948683": 439, "9489822e": 471, "949": 475, "9499210e": 471, "94e": [454, 468], "95": [33, 67, 148, 154, 156, 157, 158, 160, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 447, 448, 454, 460, 468, 469, 470, 473, 474, 480, 522, 567], "950": 428, "9500979841335693": 295, "95024543e": 470, "950e": 444, "952": 67, "952749": 552, "9529719e": 471, "953": 475, "95421509259": 462, "95451985e": 123, "9546285068162436": 477, "95615": 439, "957": 67, "9580e": 446, "95883": 491, "959198": 468, "959d": [52, 53], "96": [409, 440, 447, 469, 473, 531], "9606540e": 471, "960784313725491": 458, "9608912e": 471, "9619812963": 462, "964e": 448, "966": [428, 438, 464, 466], "96602": 449, "9667e": 460, "967546": 448, "9677107409819438": 295, "968": [444, 454], "96814": 491, "96833546296": [468, 481], "968488": 293, "969": 468, "9692e": 440, "9696e": 460, "96e": 442, "96r": 473, "97": [447, 468, 471, 477, 490], "97003": 491, "970346": 542, "97054": 448, "970e": 468, "97116": 454, "973": 468, "9730e": 453, "97369425926": 462, "974e": 468, "975": 428, "97529": 136, "97596": 448, "976": 428, "97749": 454, "97749371": 454, "9776920e": 471, "979": [67, 428, 473], "97934": 448, "97978": 83, "97e": 468, "98": [83, 337, 446, 447, 448, 452, 462, 464, 471, 489], "980": 67, "9803921568627443": 458, "98049": 448, "98149518519": 462, "9816452e": 471, "982": 464, "982075849517389e": 476, "98258": 448, "983": 460, "9831e": 460, "9833462074166": 468, "9834338e": 471, "98359208475904647": 454, "98429": 448, "9845": 439, "9847406e": 471, "985": [428, 442], "985502122122975": 477, "9868440049211211": 489, "9876": 439, "98772": 136, "988": [428, 468, 475], "988409870698051e": 52, "9890": 491, "98e": 468, "99": [337, 447, 448, 449, 460, 464, 490, 491], "991": 468, "9910796e": 471, "9912648e": 471, "9912712e": 471, "993": 441, "9931": 491, "994": 428, "994e": 468, "995": 475, "9952623149688797": 489, "9969731e": 471, "997": 428, "9977859e": 471, "9978": 491, "998": 455, "99848e": 481, "999": [50, 157, 160, 468], "99919925926": 232, "99996948242188": 444, "9999912037958": 454, "999999": 468, "99999994": 86, "9999999995": 468, "9999999997835": 441, "999999999997": 456, "9999999999977": 468, "9999999999978": 463, "9999999999998": 468, "99999999999994": 468, "99999999999999": [447, 468], "99e": 468, "9e": [440, 442, 468, 550], "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 98, 99, 100, 101, 103, 104, 107, 108, 109, 121, 122, 123, 131, 136, 137, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208, 209, 211, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 263, 264, 265, 266, 267, 268, 279, 281, 289, 297, 306, 359, 360, 361, 363, 364, 371, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 408, 410, 414, 415, 416, 417, 418, 421, 423, 424, 427, 428, 429, 430, 432, 434, 435, 436, 439, 441, 446, 448, 452, 454, 455, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 488, 490, 491, 493, 501, 502, 503, 505, 506, 514, 515, 517, 518, 520, 522, 559, 560, 563, 564, 567], "AND": [474, 475], "And": [271, 370, 373, 388, 390, 396, 401, 441, 442, 444, 445, 452, 456, 458, 464, 469, 470, 473, 474, 476, 480, 482, 489, 490, 491], "As": [83, 297, 327, 370, 371, 373, 378, 382, 383, 384, 386, 388, 396, 397, 399, 406, 411, 430, 439, 440, 441, 444, 445, 446, 448, 449, 450, 454, 456, 457, 461, 462, 463, 464, 467, 468, 469, 470, 472, 473, 476, 478, 481, 483, 489, 491, 505, 514, 567], "At": [255, 384, 387, 396, 397, 400, 414, 456, 473, 480, 510, 563], "But": [370, 375, 378, 384, 389, 397, 400, 406, 430, 444, 445, 470, 478, 480, 489, 493, 565], "By": [19, 20, 26, 50, 65, 87, 90, 100, 101, 104, 108, 109, 120, 124, 128, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 164, 167, 174, 184, 186, 187, 188, 190, 196, 199, 200, 212, 213, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 367, 370, 396, 397, 398, 415, 416, 418, 456, 457, 461, 463, 470, 473, 478, 490, 512, 516, 522, 523, 524, 568], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 82, 87, 88, 90, 94, 98, 100, 101, 104, 108, 109, 116, 118, 120, 121, 123, 124, 125, 128, 129, 130, 131, 144, 145, 146, 152, 157, 160, 167, 172, 174, 177, 178, 180, 181, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 240, 241, 242, 243, 244, 245, 247, 248, 252, 253, 254, 256, 257, 259, 260, 261, 263, 267, 268, 280, 282, 286, 288, 294, 300, 315, 369, 370, 371, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 411, 412, 413, 415, 416, 417, 418, 421, 428, 432, 435, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 485, 489, 490, 491, 493, 500, 501, 503, 505, 515, 517, 518, 523, 528, 560, 564, 565, 567, 568, 569], "IN": [91, 99, 240], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 95, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 118, 120, 121, 122, 123, 124, 126, 128, 131, 135, 136, 139, 144, 145, 146, 152, 155, 157, 160, 161, 163, 164, 167, 169, 170, 173, 174, 177, 178, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 205, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 278, 294, 297, 309, 310, 315, 356, 359, 363, 364, 365, 366, 370, 371, 372, 373, 375, 377, 378, 383, 384, 386, 387, 388, 391, 392, 393, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412, 429, 430, 431, 439, 441, 442, 444, 446, 447, 449, 452, 454, 457, 460, 462, 463, 464, 465, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 491, 503, 505, 516, 518, 524, 526, 539, 565, 566, 567, 568], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 90, 93, 100, 102, 107, 123, 144, 163, 186, 188, 191, 194, 200, 208, 210, 267, 278, 310, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 406, 411, 412, 413, 414, 415, 416, 417, 418, 421, 432, 435, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 481, 482, 489, 490, 491, 501, 503, 505, 510, 513, 514, 515, 517, 518, 519, 522, 523, 528, 541, 560, 563, 564, 565, 566, 567, 568, 569], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 90, 101, 104, 108, 109, 110, 112, 114, 121, 136, 144, 148, 155, 156, 157, 158, 160, 170, 173, 177, 178, 183, 187, 188, 190, 192, 195, 196, 199, 200, 202, 212, 213, 216, 219, 220, 222, 223, 224, 228, 232, 234, 235, 237, 241, 243, 245, 251, 255, 256, 258, 259, 260, 261, 264, 268, 280, 284, 286, 287, 305, 319, 324, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 405, 407, 411, 412, 413, 414, 418, 421, 423, 424, 425, 430, 432, 434, 435, 436, 439, 445, 450, 453, 455, 457, 460, 461, 465, 468, 469, 470, 472, 473, 474, 476, 478, 480, 481, 482, 483, 489, 490, 491, 493, 494, 501, 502, 504, 505, 509, 510, 512, 514, 518, 532, 535, 536, 538, 539, 543, 544, 546, 547, 548, 549, 562, 563, 564, 565, 566, 567, 569], "Its": [144, 382, 396, 397, 421, 423, 458, 463, 478, 490, 507, 508, 509, 511], "NOT": 474, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 381, 391, 394, 395, 429, 431, 437, 458, 468, 470, 472, 473, 491], "Not": [104, 108, 109, 189, 195, 197, 378], "ON": [101, 104, 130, 174, 175, 176, 184, 368, 376, 423, 439, 440, 444, 447, 450, 454, 462, 463, 465, 470, 472, 478, 505, 514, 564, 566, 568], "OR": [101, 108, 469, 474, 475], "Of": [370, 373, 406, 452, 469, 473, 481, 565, 568], "On": [59, 162, 168, 169, 172, 280, 287, 293, 370, 371, 376, 378, 385, 386, 399, 401, 402, 403, 404, 425, 452, 453, 470, 485, 567], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 101, 104, 108, 109, 218, 240, 323, 370, 371, 376, 378, 379, 380, 381, 384, 386, 387, 388, 396, 435, 441, 445, 450, 462, 472, 473, 474, 489, 491, 514, 518, 541, 565, 567], "Ones": 297, "Or": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 371, 389, 390, 445, 452, 469, 473, 480, 481, 503], "Such": [382, 471, 509], "That": [16, 19, 20, 84, 103, 122, 205, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 370, 371, 375, 384, 387, 390, 470, 491, 565], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 164, 168, 169, 173, 174, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 297, 309, 315, 317, 318, 321, 337, 353, 354, 356, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 407, 410, 411, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 485, 489, 490, 491, 493, 494, 495, 496, 500, 501, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 522, 524, 526, 527, 528, 531, 537, 539, 540, 541, 550, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570], "Their": 474, "Then": [67, 101, 106, 108, 373, 375, 380, 383, 385, 386, 387, 388, 394, 403, 441, 444, 452, 453, 456, 460, 462, 470, 474, 476, 478, 490], "There": [87, 90, 136, 370, 371, 375, 376, 377, 379, 384, 385, 386, 387, 388, 389, 390, 391, 394, 397, 400, 402, 403, 429, 454, 458, 461, 467, 468, 469, 470, 471, 472, 474, 475, 482, 493, 501, 502, 505, 518], "These": [94, 192, 270, 370, 371, 375, 376, 381, 383, 384, 385, 386, 390, 391, 396, 413, 415, 416, 417, 421, 429, 435, 439, 453, 455, 456, 461, 464, 467, 469, 471, 473, 476, 477, 482, 485, 493, 510, 515, 517, 518, 566, 567, 568], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 99, 103, 107, 120, 122, 124, 128, 186, 198, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 270, 280, 360, 361, 372, 373, 377, 378, 381, 382, 383, 385, 386, 391, 392, 393, 394, 395, 396, 400, 401, 403, 405, 406, 407, 411, 412, 413, 416, 417, 421, 423, 429, 430, 432, 435, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 485, 489, 491, 501, 502, 503, 506, 510, 512, 514, 515, 522, 563, 565, 566, 567], "With": [83, 370, 379, 380, 396, 417, 430, 478, 501, 567], "_": [101, 108, 126, 228, 247, 370, 384, 394, 396, 444, 447, 450, 467, 468, 470, 475, 478, 501, 514], "_0": [50, 51], "_1": [104, 109, 502], "_2": [104, 109], "__all__": 370, "__array__": 297, "__array_ufunc__": [456, 483, 553], "__attributes__": [87, 90], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 309, 376, 381, 398, 417], "__class__": [370, 394, 467, 499], "__dict__": [16, 84, 103, 122, 370], "__enter__": 348, "__eq__": 423, "__exit__": 348, "__fields__": [16, 84, 103, 122, 397], "__getitem__": [380, 381, 382], "__init__": [16, 84, 103, 122, 195, 267, 370, 376, 382, 394, 432], "__int__": 315, "__len__": 380, "__main__": [250, 370, 478, 487, 565], "__name__": [370, 450, 462, 463, 464, 467, 487, 499, 565], "__neq__": 423, "__pydantic_extra__": [16, 84, 103, 122], "__pydantic_fields_set__": [16, 84, 103, 122], "__repr__": [370, 416, 430], "__str__": [370, 382, 397, 413], "__subclasses__": 467, "__version__": 405, "_basemodel__context": [16, 84, 103, 122], "_build": [371, 400, 505], "_check_interv": 435, "_compute_flux_spati": 421, "_covari": [218, 240], "_data": 394, "_dom_class": [452, 460, 473, 489, 490], "_energy_t": 394, "_errn": [124, 125, 128, 129], "_errp": [124, 125, 128, 129], "_evaluate_timevar_sourc": 435, "_f_cash_root_cython": 292, "_factr": 470, "_fields_set": [16, 84, 103, 122], "_i": 126, "_k": [101, 108, 501], "_l": 501, "_lat": 370, "_lon": 370, "_map": 363, "_model": 121, "_new_attribut": 370, "_old_attribut": 370, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 103, 122], "_phi": 370, "_prior": 398, "_propagate_error": 420, "_reco": 370, "_repr_html_": 370, "_row_index": 69, "_sample_coord_time_energi": 435, "_scan": 470, "_time_group": 394, "_time_t": 394, "_true": 370, "_type": [398, 478], "_types_namespac": [16, 84, 103, 122], "_was_": [16, 84, 103, 122], "_wc": 529, "_weight": 398, "a_": [104, 109, 147, 507, 510, 567], "a_off": 567, "a_on": 567, "a_scan": 478, "aa": [87, 90, 297, 396], "aaguasca": 432, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 64, 65, 83, 88, 116, 124, 138, 147, 200, 208, 210, 237, 270, 271, 280, 287, 467, 468], "abc": [18, 56, 98, 119, 166, 185, 190, 472], "abcmeta": 472, "abdalla2018": [514, 515, 564], "abeysekara": 59, "abil": [394, 478], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 380, 385, 388, 441, 460, 462, 463, 478, 485, 565], "about": [11, 13, 16, 84, 103, 122, 142, 147, 227, 232, 327, 370, 373, 375, 379, 386, 387, 389, 390, 391, 395, 396, 398, 399, 400, 405, 406, 425, 426, 430, 431, 432, 440, 442, 448, 449, 450, 453, 454, 456, 468, 471, 473, 476, 481, 490, 491, 493, 501, 502, 565, 568], "abov": [29, 44, 52, 53, 83, 120, 122, 123, 126, 130, 131, 136, 137, 162, 197, 359, 361, 370, 371, 376, 379, 380, 382, 384, 386, 387, 388, 389, 390, 394, 402, 403, 406, 439, 454, 456, 457, 458, 462, 465, 470, 472, 473, 474, 476, 477, 478, 480, 481, 482, 489, 499, 501, 502, 509, 512, 518, 564, 565, 566, 567, 568], "abramowski": 147, "abruptli": [370, 395], "abs_path": 305, "absenc": [385, 450, 472, 474, 514, 566], "absolut": [82, 90, 105, 141, 142, 143, 144, 147, 149, 151, 154, 159, 187, 188, 190, 192, 196, 199, 200, 301, 327, 347, 351, 503], "absolute_tim": 569, "absopt": 388, "absorb": [268, 380, 393, 428, 531], "absorbedspectralmodel": [415, 428], "absorbt": 393, "absorpt": [220, 388, 418, 428, 438, 443, 485, 501, 503, 519, 551, 562], "abstract": [56, 57, 59, 98, 119, 158, 166, 171, 185, 187, 190, 199, 280, 381, 417, 517], "abstractsetintstr": [16, 84, 103, 122], "acada": 396, "academ": [132, 293], "accept": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 103, 104, 105, 109, 122, 162, 179, 184, 186, 187, 188, 190, 198, 199, 200, 218, 240, 281, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 422, 426, 435, 439, 440, 445, 446, 447, 450, 454, 457, 469, 472, 473, 481, 501, 517, 523, 541, 566, 567], "acceptance_off": [104, 105, 109, 162, 172, 382, 439, 441, 444, 447, 450, 501, 567], "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 87, 88, 90, 101, 155, 185, 186, 195, 198, 287, 305, 370, 378, 379, 380, 381, 383, 386, 394, 400, 402, 405, 410, 411, 418, 425, 426, 428, 429, 435, 436, 442, 444, 445, 446, 452, 468, 470, 471, 475, 476, 480, 483, 489, 490, 491, 500, 505, 516, 517, 518, 563], "accessor": 473, "accident": [481, 565], "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 87, 90, 101, 104, 108, 109, 116, 121, 139, 145, 155, 162, 186, 192, 208, 210, 294, 359, 380, 381, 384, 385, 388, 394, 396, 415, 424, 436, 450, 462, 469, 472, 476, 477, 485, 501, 502, 505], "accordingli": [382, 396, 412, 418, 474], "account": [101, 104, 108, 109, 120, 164, 180, 218, 240, 255, 279, 281, 287, 345, 378, 383, 386, 394, 396, 417, 434, 436, 438, 439, 441, 443, 444, 446, 450, 452, 458, 464, 465, 470, 472, 474, 485, 490, 501, 503, 562, 566, 567], "accur": [388, 431, 452, 470, 512], "accuraci": [384, 470, 505], "aceptance_off": 382, "acero": [388, 411, 413, 415, 418, 421, 423, 428, 430, 436], "achiev": [16, 84, 103, 116, 122, 162, 360, 361, 370, 379, 380, 381, 382, 383, 384, 386, 393, 396, 418, 473, 476, 477, 515], "acknowledg": [373, 396, 407], "acquir": 406, "acquisit": 564, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 116, 370, 379, 382, 400, 455, 464, 475, 481, 501, 517, 526, 564], "act": [90, 386, 475, 528], "action": [162, 375, 380, 386, 396, 400, 421, 464], "activ": [90, 287, 373, 387, 401, 402, 404, 405, 406, 415, 432, 461, 505], "actual": [175, 345, 346, 347, 369, 370, 371, 375, 379, 381, 383, 385, 386, 394, 395, 397, 399, 447, 457, 460, 463, 469, 470, 472, 473, 474, 478, 481, 482, 490, 491, 512, 514, 564, 565, 567, 569], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 82, 83, 84, 87, 90, 101, 103, 104, 108, 109, 112, 113, 115, 122, 123, 187, 188, 190, 195, 196, 199, 200, 370, 371, 373, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 394, 396, 410, 411, 412, 414, 415, 416, 418, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 446, 452, 453, 471, 472, 475, 476, 477, 478, 482, 501, 518, 568], "adapt": [116, 162, 205, 379, 380, 383, 384, 389, 390, 392, 393, 396, 399, 406, 411, 412, 414, 415, 416, 418, 419, 421, 424, 427, 428, 430, 432, 434, 435, 436, 469, 471, 473, 474, 512, 515], "adaptiveringbackgroundestim": [172, 376], "adaptiveringbackgroundmak": [165, 415, 515], "adass": 390, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 83, 84, 87, 88, 90, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 121, 122, 123, 141, 142, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 164, 187, 188, 190, 194, 196, 199, 200, 206, 218, 240, 255, 294, 339, 358, 367, 369, 370, 371, 373, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 396, 398, 399, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 447, 452, 453, 456, 460, 462, 465, 469, 471, 472, 473, 474, 476, 478, 480, 491, 495, 496, 505, 518, 533, 565, 568], "add_artist": [476, 522, 523], "add_cbar": [101, 104, 108, 109, 123, 141, 142, 144, 147, 148, 149, 154, 155, 156, 158, 187, 188, 190, 196, 199, 200, 358, 448, 449, 450, 452, 454, 460, 465, 467, 469, 471, 472, 473, 475, 476, 481, 482, 489, 490, 518, 521, 522, 523, 526, 527, 529], "add_column": [87, 90], "add_enabled_unit": [439, 447, 449, 452, 454, 460, 464, 480], "add_index": [87, 90], "add_loc": 370, "add_row": [87, 90], "add_subplot": 358, "addit": [16, 19, 20, 26, 43, 84, 87, 88, 90, 101, 103, 104, 108, 109, 112, 120, 122, 124, 129, 159, 187, 188, 190, 193, 196, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 370, 373, 374, 375, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 412, 413, 415, 417, 418, 421, 422, 429, 430, 432, 435, 436, 442, 446, 458, 465, 468, 469, 470, 473, 475, 476, 478, 480, 481, 490, 491, 501, 503, 505, 512, 517, 518, 562, 568], "addition": [129, 382, 469, 470, 473, 475, 476], "address": [379, 382, 383, 384, 386, 396, 478, 504], "adequ": 195, "adher": 373, "adjac": [139, 192, 421, 463, 473, 514], "adjust": [16, 67, 187, 188, 190, 196, 199, 200, 379, 381, 393, 445, 461, 469, 476, 477, 489, 505, 512], "admit": 390, "adonath": 376, "adopt": [37, 383, 386, 391, 446, 456, 457, 467], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 116, 124, 147, 237, 270, 271, 280, 287], "adult": 370, "advanc": [382, 386, 387, 390, 398, 402, 471, 473, 505, 564, 565], "advantag": [378, 384, 387, 394, 421, 473, 478, 541, 565], "advanteg": 382, "advertis": 399, "advic": [370, 396], "advis": [371, 396, 470, 478, 485], "advoc": 370, "aeff": [16, 82, 87, 88, 104, 109, 147, 173, 181, 380, 382, 383, 417, 418, 441, 444, 445, 446, 449, 450, 452, 454, 463, 471, 472, 480, 482, 483, 489, 490, 507, 512, 514, 515, 564], "aeff2d": 146, "aeff_2d": [82, 87, 147, 480, 483], "aeff_3d": 471, "aeff_ev": 471, "aeff_new": 471, "aeff_perc": [173, 441, 444, 445, 454, 463, 472, 482, 514], "aegi": 220, "af": 366, "affect": [370, 378, 382, 384, 395, 412, 413, 424, 433, 440, 478], "affili": [384, 396, 432], "afmhot": [475, 491], "aforement": 396, "after": [16, 45, 50, 51, 52, 53, 84, 90, 99, 101, 103, 104, 108, 122, 157, 160, 287, 309, 327, 351, 354, 370, 373, 375, 378, 379, 381, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 406, 410, 417, 419, 420, 421, 423, 429, 431, 432, 433, 442, 452, 461, 463, 470, 473, 475, 480, 482, 483, 505, 565, 569], "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 301, 370, 495], "again": [101, 104, 108, 109, 157, 373, 380, 382, 384, 386, 391, 397, 401, 416, 417, 420, 427, 432, 442, 444, 445, 452, 457, 458, 473, 476, 478, 481, 489, 491, 518, 565], "against": [16, 84, 103, 122, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200, 371, 373, 387, 393, 400, 468, 481, 489, 500, 503], "agent": 386, "agglom": 13, "aggreg": 397, "agil": 383, "agn": [132, 285, 384, 444, 461, 462, 464, 480], "agnost": 470, "ago": 377, "agre": [189, 192, 373, 375, 384, 396], "agreement": [370, 373, 391, 465], "aguasca": [423, 432, 433, 434, 435], "aharonian": 455, "ahead": [384, 410], "ahelp": 205, "aim": [379, 380, 396, 452, 456, 467, 477, 493, 564], "air": 480, "ait": [186, 187, 188, 487], "aitoff": 384, "aka": 491, "al": [26, 33, 59, 100, 132, 147, 220, 286, 287, 293, 380, 448, 455, 461, 493, 564], "albert": 564, "albert2007": 564, "alexi": [418, 421], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 90, 116, 131, 162, 205, 280, 370, 376, 382, 383, 384, 389, 397, 413, 418, 426, 427, 428, 448, 461, 470, 482, 503, 517, 563, 567], "alia": [16, 56, 84, 103, 122, 373, 491], "alias": [16, 56, 84, 103, 122], "align": [87, 90, 99, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 156, 158, 159, 186, 187, 188, 190, 192, 196, 198, 199, 200, 370, 471, 474, 476], "alisha": 423, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 99, 101, 102, 103, 104, 106, 107, 108, 109, 120, 121, 122, 123, 124, 128, 129, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 161, 167, 174, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 277, 342, 343, 344, 345, 346, 347, 357, 366, 369, 370, 371, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 444, 445, 446, 449, 450, 452, 454, 455, 456, 460, 462, 464, 465, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 495, 501, 503, 505, 514, 516, 517, 518, 519, 541, 562, 565, 566, 567], "all_quant": [121, 123], "allclos": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 189, 190, 192, 196, 197, 199, 200, 345], "alloc": [188, 196, 200], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 103, 116, 121, 122, 123, 130, 131, 157, 160, 186, 191, 193, 320, 370, 371, 373, 375, 376, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 412, 414, 415, 416, 417, 418, 421, 423, 430, 431, 432, 435, 439, 444, 455, 464, 469, 470, 471, 472, 473, 474, 490, 501, 503, 505, 512, 517, 518, 562, 563, 565, 570], "allow_extra": 191, "allow_pickl": [16, 84, 103, 122], "allowed_channel": [26, 467], "allski": [83, 473], "alma": 389, "almeida": 418, "almost": [369, 371, 373, 384, 481, 491], "alon": 375, "along": [68, 100, 121, 123, 127, 139, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 158, 159, 187, 188, 190, 196, 198, 199, 200, 285, 286, 287, 308, 309, 319, 329, 330, 379, 380, 394, 432, 435, 449, 458, 468, 469, 471, 472, 475, 476, 502, 517, 518, 534, 564], "alpha": [21, 27, 28, 48, 101, 104, 108, 109, 162, 184, 205, 223, 224, 233, 234, 235, 248, 281, 291, 294, 367, 368, 382, 393, 395, 421, 428, 439, 440, 441, 442, 444, 446, 447, 450, 452, 453, 457, 465, 468, 470, 478, 522, 531, 533, 535, 537, 539, 540, 541, 556, 557, 566, 567, 568], "alpha_": [104, 109], "alpha_1": [104, 109], "alpha_2": [104, 109], "alpha_norm": [220, 393, 440, 531], "alphabet": [387, 396, 411, 412, 413, 414, 415, 416, 417, 418, 421], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 103, 122, 205, 263, 264, 265, 267, 370, 376, 377, 378, 381, 382, 383, 384, 385, 387, 390, 391, 392, 394, 397, 399, 400, 430, 440, 442, 446, 448, 457, 465, 467, 468, 469, 473, 474, 475, 476, 480, 481, 482, 491, 493, 518, 529], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 94, 116, 120, 121, 123, 124, 136, 138, 159, 164, 170, 185, 192, 194, 195, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 278, 297, 305, 310, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 421, 429, 430, 431, 435, 439, 440, 441, 444, 445, 446, 447, 448, 452, 454, 455, 456, 457, 458, 461, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 489, 490, 493, 501, 502, 503, 504, 505, 512, 514, 517, 518, 541, 544, 562, 564, 565, 566, 567, 569], "alt": [83, 85, 88, 93, 94, 370, 569], "alt_pnt": 90, "altaz": [83, 85, 93, 150, 370, 471, 569], "altaz_fram": [83, 93], "altaz_from_t": [83, 93], "altaz_interpol": 93, "altern": [82, 277, 369, 370, 373, 375, 379, 403, 421, 440, 444, 446, 448, 455, 468, 470, 471, 473, 475, 480, 501, 502, 565], "although": [370, 383, 384, 385, 387, 390, 394, 470, 480, 527, 528, 562, 569], "altitud": 441, "alwai": [83, 87, 90, 144, 192, 195, 202, 208, 210, 226, 370, 371, 373, 376, 377, 378, 380, 381, 382, 384, 387, 395, 396, 403, 410, 417, 432, 433, 435, 447, 448, 452, 460, 467, 470, 472, 473, 475, 477, 478, 485, 503, 517, 518], "am": 379, "ambigu": [384, 429], "amend": 373, "among": [82, 87, 90, 101, 104, 108, 109, 386, 390, 391, 393, 398, 418, 470, 564], "amount": [377, 384, 398, 505], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 254, 558], "ampl_2": [148, 471], "ampl_3": [148, 471], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 100, 124, 129, 131, 187, 188, 190, 199, 200, 205, 212, 219, 222, 224, 228, 235, 238, 245, 246, 247, 254, 256, 259, 260, 261, 271, 277, 289, 381, 382, 385, 393, 440, 441, 442, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 468, 469, 470, 475, 476, 480, 481, 489, 490, 491, 503, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 535, 536, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 567], "amplitude_maximum_signific": 461, "amplitude_maximum_vari": 461, "amplitude_ref": 465, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 114, 121, 122, 123, 124, 125, 126, 128, 129, 131, 135, 136, 137, 142, 144, 145, 146, 147, 149, 152, 155, 157, 159, 160, 163, 167, 170, 172, 175, 177, 178, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 273, 280, 285, 287, 295, 297, 301, 315, 326, 330, 348, 354, 360, 361, 363, 366, 369, 371, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 406, 407, 410, 411, 414, 415, 416, 417, 418, 421, 423, 424, 425, 428, 429, 430, 432, 433, 435, 436, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 458, 460, 461, 462, 463, 464, 465, 468, 470, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 493, 495, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 514, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568], "anaconda": [387, 401, 402], "analog": [87, 90, 187, 188, 190, 196, 199, 200, 518], "analogi": 391, "analys": [82, 369, 370, 379, 380, 381, 382, 384, 388, 390, 392, 393, 398, 406, 407, 413, 414, 415, 417, 418, 428, 430, 433, 444, 445, 452, 463, 464, 467, 468, 474, 476, 480, 481, 489, 490, 493, 501, 565], "analysi": [6, 16, 57, 67, 70, 72, 74, 83, 101, 103, 104, 108, 109, 113, 115, 145, 146, 152, 157, 160, 169, 173, 369, 370, 371, 374, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 397, 399, 400, 401, 402, 403, 406, 407, 410, 411, 412, 414, 415, 416, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 438, 440, 442, 443, 448, 449, 450, 451, 455, 456, 458, 459, 460, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 490, 491, 493, 502, 503, 505, 506, 510, 512, 513, 514, 515, 517, 518, 544, 562, 564, 565, 567], "analysis3d": 431, "analysis_1": [438, 489, 492], "analysis_1d": 462, "analysis_2": [371, 438, 490, 492], "analysis_3d": [430, 438, 452, 459, 462], "analysis_joint": 452, "analysis_mwl": [438, 453, 459], "analysis_stack": 452, "analysisconfig": [15, 371, 445, 449, 450, 452, 462, 489], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 147, 148, 156, 158, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 383, 388, 436, 471, 476, 503, 524, 568], "analyz": [380, 482, 564], "andrea": 383, "andrew": 430, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 90, 95, 101, 104, 113, 115, 116, 120, 127, 131, 141, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 163, 170, 171, 173, 175, 185, 186, 188, 193, 195, 198, 200, 201, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 265, 267, 270, 325, 357, 370, 376, 384, 386, 393, 397, 409, 411, 412, 413, 430, 439, 441, 444, 447, 453, 456, 457, 463, 468, 473, 474, 476, 477, 480, 481, 505, 510, 514, 517, 518, 522, 523, 524, 527, 528, 564], "angle_incr": 170, "angular": [23, 101, 104, 113, 115, 126, 145, 146, 152, 157, 160, 163, 188, 195, 198, 200, 219, 227, 230, 265, 301, 304, 370, 386, 434, 446, 457, 465, 510, 511, 564], "angular_extens": 41, "angular_s": 518, "angular_separ": [393, 434, 436, 476], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 103, 118, 122, 128, 146, 169, 187, 188, 190, 195, 196, 198, 199, 200, 297, 320, 355, 369, 370, 371, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 396, 397, 399, 402, 403, 404, 405, 406, 410, 411, 429, 430, 431, 436, 445, 454, 455, 458, 462, 465, 469, 472, 473, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 493, 502, 503, 515, 517, 518, 533, 565, 569], "ann": [23, 429], "anna": 370, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 432, 476, 493], "annoi": [370, 565], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 359, 397, 522], "announc": [370, 375, 377, 384, 386, 389, 391, 393, 395, 396, 399, 400], "annuli": [458, 518], "annulu": [125, 329, 518], "anonym": 373, "anoth": [19, 20, 26, 83, 86, 87, 90, 101, 104, 108, 109, 145, 146, 147, 152, 157, 159, 160, 189, 192, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 370, 384, 385, 386, 388, 390, 391, 394, 397, 401, 406, 415, 430, 465, 469, 473, 474, 476, 518, 565], "another_posit": 514, "answer": [470, 505], "anti": [473, 474], "anticip": 379, "anymor": 432, "anyon": [375, 377, 480], "anyth": [144, 386, 565], "anytim": [373, 412], "anywai": [373, 384], "anywher": [384, 387, 389, 501], "ap": [375, 387, 395], "apart": 385, "apertur": 564, "api": [226, 374, 376, 379, 380, 381, 382, 383, 384, 386, 389, 390, 391, 395, 396, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 421, 425, 429, 430, 438, 441, 444, 445, 448, 454, 456, 463, 469, 473, 474, 475, 476, 479, 480, 481, 489, 491, 492, 501, 502, 503, 504, 512, 513, 517, 562, 563, 564, 565], "apj": [282, 288], "aplpi": 430, "apologis": [410, 411, 430], "app": [87, 90, 400, 406, 429], "appear": [87, 90, 370, 371, 378, 384, 397, 424, 435, 468], "append": [87, 90, 91, 99, 140, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 205, 240, 382, 383, 385, 416, 435, 441, 444, 446, 447, 452, 453, 454, 456, 463, 464, 465, 469, 470, 472, 475, 476, 477, 478, 514], "append_ax": [141, 142, 144, 147, 148, 149, 154, 156, 158, 200, 358], "appendix": [30, 131, 147, 237, 271, 289, 448], "appl": [402, 404, 406], "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 90, 100, 101, 102, 104, 108, 109, 110, 113, 114, 115, 116, 120, 123, 124, 128, 131, 144, 145, 146, 152, 157, 159, 160, 164, 170, 173, 174, 187, 188, 190, 191, 195, 196, 198, 199, 200, 208, 210, 218, 226, 240, 255, 268, 278, 279, 280, 281, 309, 310, 355, 359, 367, 370, 376, 377, 380, 381, 383, 385, 388, 394, 395, 396, 418, 423, 428, 429, 430, 431, 435, 439, 444, 446, 456, 463, 464, 465, 469, 472, 473, 474, 475, 476, 478, 480, 483, 490, 491, 503, 505, 512, 550, 563, 566], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 90, 370, 381, 396, 398, 417, 461, 470, 517, 564], "apply_async": [317, 318], "apply_edisp": 436, "apply_hysteresis_threshold": 474, "apply_irf": [255, 417], "apply_mask": 193, "apply_psf": [381, 414], "apply_standard_scal": 95, "apply_threshold_sensit": 120, "apply_union": 202, "approach": [87, 90, 131, 370, 376, 378, 382, 386, 391, 394, 395, 397, 435, 439, 444, 472, 485, 564, 567], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 186, 187, 188, 190, 199, 200, 297, 305, 371, 446, 450, 452, 473, 565], "approv": [376, 377, 378], "approx": [52, 53], "approxim": [100, 131, 173, 174, 186, 187, 188, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 279, 281, 308, 381, 384, 412, 439, 444, 470, 480, 503, 514, 523, 524, 527, 528, 564], "appveyor": 426, "apr": [392, 408], "april": [390, 397, 417], "apt": 403, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 95, 99, 100, 101, 103, 104, 107, 108, 109, 111, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 167, 168, 173, 174, 175, 180, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 277, 280, 285, 293, 297, 309, 315, 317, 329, 330, 345, 359, 361, 366, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 489, 490, 491, 493, 494, 495, 496, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 522, 523, 531, 541, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570], "arakelian": 286, "arang": [116, 385, 448, 463, 517], "arb": 478, "arbitrari": [193, 195, 196, 381, 393, 416, 429, 456, 469, 473, 478, 517, 518], "arbitrary_types_allow": [16, 84, 103, 122, 397], "arbitrarytypemetadata": 397, "architectur": [402, 404], "archiv": [396, 483, 490], "arcsec": 170, "arctan": 384, "area": [82, 88, 104, 106, 146, 147, 162, 173, 174, 181, 188, 196, 198, 200, 370, 371, 381, 425, 427, 439, 444, 456, 465, 472, 482, 483, 510, 517, 518, 564], "areasc": [428, 430], "aren": [346, 370, 384, 389, 390, 401, 402, 404], "arf": [105, 106, 109, 191, 192, 195, 196, 444, 518], "arf_ob": 105, "arffil": 105, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 103, 108, 109, 122, 141, 142, 143, 147, 148, 149, 151, 154, 155, 156, 158, 159, 188, 189, 196, 213, 226, 238, 245, 246, 247, 320, 565], "arg_in_kwarg": 370, "argmax": 461, "argmin": 461, "argpars": [375, 565], "argsort": [87, 90], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 99, 100, 101, 103, 104, 107, 108, 109, 122, 123, 124, 126, 128, 131, 140, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 163, 173, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 278, 295, 297, 309, 315, 317, 318, 357, 358, 359, 363, 364, 365, 366, 367, 373, 376, 382, 385, 417, 418, 421, 423, 429, 435, 436, 448, 452, 457, 470, 472, 473, 476, 477, 490, 503, 505, 516, 517, 518, 541, 565], "aris": [375, 386], "arithmet": [213, 381, 431, 473, 474, 476, 533], "arjun": [428, 429], "arm": [33, 34, 38, 45, 425], "arm64": [402, 404], "armstrong": 429, "arnau": [423, 432, 433, 434, 435], "around": [56, 136, 163, 186, 188, 198, 200, 309, 384, 385, 446, 465, 467, 470, 474, 482, 491, 505, 514, 517, 518], "arpit": 428, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 90, 91, 93, 98, 99, 100, 101, 108, 109, 116, 121, 123, 124, 125, 128, 129, 131, 136, 137, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 208, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 265, 266, 267, 268, 269, 278, 279, 281, 283, 293, 297, 308, 309, 310, 324, 325, 326, 330, 363, 364, 369, 370, 383, 384, 388, 394, 397, 406, 416, 429, 432, 434, 436, 447, 456, 457, 465, 468, 469, 470, 471, 473, 475, 476, 478, 480, 482, 483, 491, 517, 518, 525, 550, 553, 566, 567], "array_lik": [101, 108, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 282, 288, 294], "array_shap": [434, 436], "arriba": [422, 425, 426], "arriv": [217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 375, 383, 415, 416, 417, 456, 564, 568], "arrow": 563, "arrowprop": 522, "arrowstyl": 522, "artefact": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "arthmet": 381, "articl": [100, 132, 138, 286, 293, 375, 441, 463], "artifact": [120, 188], "artifici": 456, "artist": [195, 218, 240, 522, 523], "arxiv": [64, 65, 173, 246, 247, 260, 261, 453, 467, 468, 472, 548, 549], "as_arrai": [87, 90], "as_artist": [195, 196, 476, 518, 522, 523], "as_energy_tru": [185, 186, 195, 198], "as_plot_cent": [189, 192, 197], "as_plot_edg": [189, 192, 197], "as_plot_label": [189, 192, 197], "as_plot_scal": 192, "as_plot_xerr": [189, 192, 197], "asanyarrai": 370, "ascii": [87, 90, 123, 370], "asimov": 478, "asinh": 448, "asinha": 82, "ask": [371, 373, 375, 377, 384, 386, 387, 390, 396, 405, 462, 491, 505, 506, 565], "asmooth": [116, 117, 389, 416, 427, 430], "asmoothestim": 391, "asmoothmapestim": [117, 391, 416, 418, 421, 448, 505], "aspect": [373, 396, 506, 565, 570], "assert": [189, 191, 192, 197, 345, 346, 347, 373, 381, 393, 473], "assert_allclos": 370, "assert_equ": 370, "assert_nam": [189, 191, 192, 197], "assert_quantity_allclos": [370, 425], "assess": [444, 446, 461], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 102, 107, 108, 186, 255, 265, 366, 370, 379, 382, 385, 397, 399, 441, 460, 462, 469, 473, 476, 478, 490, 491, 517], "assist": 386, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 468, 491], "assoc2": [74, 75, 78, 491], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 468, "assoc_prob_lr": 468, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 87, 90, 99, 101, 104, 121, 130, 132, 133, 134, 145, 146, 157, 160, 177, 178, 183, 196, 266, 297, 376, 386, 394, 395, 396, 397, 398, 435, 436, 440, 441, 442, 444, 448, 453, 468, 469, 472, 473, 475, 476, 482, 491, 502, 503, 505, 518, 567], "association_catalog": [67, 468], "association_nam": [67, 468], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 94, 100, 120, 121, 123, 131, 135, 138, 147, 159, 170, 184, 186, 187, 188, 190, 193, 197, 199, 200, 205, 261, 267, 270, 277, 324, 327, 370, 373, 382, 383, 385, 393, 394, 398, 406, 407, 439, 440, 441, 444, 446, 447, 450, 456, 457, 458, 460, 463, 467, 471, 473, 476, 478, 481, 495, 501, 503, 510, 562, 567], "assumpt": [72, 94, 101, 104, 108, 109, 116, 130, 138, 384, 394, 440, 510, 514, 566], "astri": 96, "astrisim": 383, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 124, 180, 187, 188, 190, 199, 200, 250, 268, 370, 371, 382, 389, 390, 394, 399, 413, 422, 426, 430, 432, 436, 446, 467, 471, 473, 480, 494, 495, 497, 498, 499, 502, 564], "astro_dark_matt": [390, 438, 467, 479], "astromodel": 493, "astronom": [13, 384, 391, 429, 564], "astronomi": [11, 271, 369, 380, 384, 388, 400, 407, 428, 441, 444, 450, 454, 472, 480, 505, 514, 515, 562, 563, 564, 565, 566, 567, 569, 570], "astrophys": [6, 23, 301, 385, 505, 563, 564], "astropi": [13, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 90, 91, 93, 95, 101, 104, 108, 109, 113, 115, 116, 121, 123, 125, 127, 128, 131, 136, 137, 144, 146, 155, 157, 170, 184, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 231, 232, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 255, 256, 258, 259, 260, 261, 264, 266, 268, 269, 271, 280, 295, 296, 297, 327, 346, 347, 356, 360, 361, 365, 369, 371, 372, 373, 375, 376, 377, 381, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 406, 407, 409, 413, 414, 415, 416, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 489, 490, 491, 495, 497, 498, 499, 501, 502, 503, 505, 507, 509, 512, 514, 515, 516, 517, 518, 522, 523, 524, 525, 526, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 569], "astropy_healpix": 379, "astropy_help": [370, 411, 412, 413], "astropy_introduct": 412, "astropy_timeseri": 385, "astropy_vers": 370, "astropydeprecationwarn": 456, "astyp": [87, 90], "asymetr": [100, 444], "asymmetr": [120, 124, 125, 128, 129, 131, 388, 411, 417, 436, 444, 478, 489, 503, 523], "asymmetri": 471, "asymptot": [567, 568], "atmospher": [385, 402, 407, 480], "atnf": 429, "atol": [86, 99, 128, 192, 197, 345, 347, 370], "atol_ax": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200], "atom": 386, "atproduction_gamma": 26, "atreye": [382, 385, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 93, 218, 226, 240, 255, 265, 381, 391, 434, 464, 470, 475, 476, 565], "attempt": [16, 84, 103, 122, 373, 384, 387], "attenu": 440, "attr": 370, "attract": 390, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 297, 380, 382, 392, 397, 398, 411, 412, 415, 416, 417, 418, 421, 423, 425, 427, 429, 434, 435, 436, 442, 446, 456, 470, 472, 473, 474, 476, 491, 501, 517, 518, 567], "attributeerror": 370, "attrribut": 473, "aug": [383, 386, 387, 389, 408], "august": [377, 383, 386, 389, 454], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399], "authoris": 396, "authorship": 374, "auto": [187, 188, 190, 199, 200, 371, 373, 381, 390, 416, 430, 470, 565], "autodiff": 388, "autogener": 390, "autograd": [381, 388], "autom": [11, 378, 386, 396, 399, 400, 423, 470, 565], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 103, 111, 122, 124, 128, 131, 157, 160, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 369, 370, 371, 373, 377, 378, 380, 381, 387, 390, 392, 396, 399, 410, 411, 417, 446, 454, 456, 470, 473, 565, 569], "automatis": 504, "autopep8": 370, "autoscal": [208, 209, 210, 211], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 78, 83, 87, 88, 90, 100, 101, 104, 108, 109, 120, 121, 123, 124, 128, 129, 131, 140, 161, 167, 173, 174, 192, 205, 208, 210, 214, 215, 219, 220, 227, 230, 242, 244, 252, 253, 257, 263, 265, 267, 271, 321, 358, 370, 373, 376, 377, 378, 379, 381, 382, 383, 384, 387, 388, 390, 397, 400, 401, 402, 403, 404, 405, 411, 415, 416, 417, 421, 424, 428, 430, 432, 435, 440, 444, 445, 448, 470, 472, 474, 476, 480, 481, 485, 489, 491, 493, 495, 496, 502, 504, 505, 507, 508, 509, 511, 519, 531, 563, 565, 567], "available_hdu": 88, "available_irf": 88, "available_method": [164, 173], "available_quant": [121, 123], "available_select": [167, 174], "available_stat_typ": 100, "averag": [19, 101, 104, 108, 109, 167, 174, 177, 178, 180, 181, 421, 440, 441, 444, 501, 564], "averageaz": [456, 457], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 120, 167, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 280, 370, 371, 376, 377, 378, 380, 384, 388, 389, 392, 393, 395, 396, 398, 421, 423, 432, 434, 435, 444, 474, 478, 502, 514, 565], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 279, 281], "awar": [370, 375, 382, 390, 396], "ax": [16, 19, 20, 26, 66, 67, 83, 100, 101, 104, 108, 109, 110, 111, 112, 114, 120, 121, 123, 125, 126, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 167, 174, 177, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 279, 281, 357, 358, 362, 363, 364, 365, 366, 367, 370, 379, 389, 412, 416, 421, 427, 428, 429, 432, 435, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 482, 489, 490, 491, 501, 503, 505, 507, 512, 514, 515, 516, 517, 522, 523, 524, 528, 531, 559, 560, 564], "ax1": [439, 448, 450, 454, 465, 474, 475], "ax2": [439, 448, 450, 454, 465, 474, 475], "ax3": [448, 454], "ax_crab_3fhl": 491, "ax_ebl": 531, "ax_excess": [441, 444], "ax_model": 531, "ax_residu": [100, 108, 109, 441, 444, 445, 446, 465, 489], "ax_s": [445, 489], "ax_spati": [101, 104, 108, 109], "ax_spectr": [101, 104, 108, 109], "ax_spectrum": [100, 108, 109, 441, 444, 445, 446, 465], "ax_sqrt_t": [441, 444], "axcols1": 473, "axcols2": 473, "axel": [379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "axes0": [187, 188, 190, 196, 199, 200], "axes_loc": [141, 142, 144, 147, 148, 149, 154, 156, 158, 200, 358], "axes_nam": [186, 187, 188, 190, 195, 196, 198, 199, 200], "axesimag": [358, 359], "axesn": [187, 188, 190, 196, 199, 200], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 99, 100, 101, 104, 108, 109, 110, 111, 112, 114, 116, 120, 121, 123, 124, 125, 127, 128, 131, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 240, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 265, 266, 268, 269, 275, 279, 280, 281, 285, 286, 287, 308, 309, 319, 358, 363, 364, 365, 366, 376, 379, 392, 394, 413, 416, 417, 418, 421, 423, 428, 430, 431, 432, 435, 439, 441, 444, 445, 446, 447, 449, 450, 452, 454, 456, 457, 458, 460, 461, 463, 464, 468, 469, 471, 472, 473, 480, 481, 482, 489, 490, 491, 501, 503, 505, 509, 514, 517, 518, 560, 564], "axis0": 517, "axis1": 473, "axis2": 473, "axis_edg": 363, "axis_nam": [100, 101, 104, 108, 109, 121, 123, 132, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 458, 462, 463, 464, 469], "axis_new": [123, 139, 461, 463], "axis_origin": 461, "axis_rgb": 365, "axis_tru": 454, "axisymmetr": 436, "axvlin": [447, 467, 477, 478], "axvspan": [196, 465], "az": [83, 85, 88, 93, 94, 370, 569], "azimuth": 481, "azur": 417, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 84, 87, 90, 103, 122, 147, 205, 337, 370, 371, 384, 393, 396, 444, 455, 467, 468, 470, 473, 474, 476, 481, 491, 497, 501, 518], "b1509": 468, "b_0": [522, 523], "b_1": [87, 90], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 87, 90, 188, 309, 373, 380, 381, 384, 390, 444, 445, 447, 473, 476, 489, 565], "backend": [92, 100, 118, 124, 125, 128, 129, 131, 163, 204, 205, 206, 207, 277, 312, 317, 318, 369, 379, 381, 411, 430, 431, 435, 441, 442, 444, 445, 446, 452, 453, 454, 465, 470, 481, 489, 490, 562, 563], "backend_default": [125, 128, 131], "background": [16, 67, 82, 83, 88, 92, 101, 102, 104, 105, 107, 108, 109, 111, 112, 116, 120, 121, 123, 130, 141, 142, 143, 153, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 180, 220, 226, 265, 272, 279, 281, 289, 290, 291, 292, 294, 366, 370, 376, 379, 382, 383, 384, 386, 390, 391, 394, 402, 407, 410, 411, 412, 414, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 451, 452, 454, 457, 458, 460, 462, 463, 464, 465, 468, 469, 470, 471, 473, 474, 478, 482, 483, 485, 490, 501, 503, 504, 517, 563, 564, 565, 567, 568], "background2d": [142, 143, 153, 417, 424, 432, 434, 436, 508], "background3d": [88, 141, 153, 180, 376, 417, 421, 429, 430, 431, 471, 480, 508], "background_estim": 389, "background_interp_missing_data": 167, "background_map": [265, 381], "background_min": 140, "background_model": [101, 104, 108, 109, 131, 382, 383, 390, 392, 417, 449, 490, 508], "background_oversampl": [167, 174, 472], "background_pad_offset": 167, "background_r": [389, 469], "backgroundconfig": 16, "backgroundestim": [385, 415], "backgroundevalu": 381, "backgroundirf": [141, 142], "backgroundirfmodel": 392, "backgroundmodel": [382, 392, 393, 414, 416, 417, 418, 421], "backgroundtempl": 381, "backport": [377, 395, 399], "backround": 379, "backscal": 196, "backward": [370, 375, 384, 393, 394, 395, 413, 503], "bad": [86, 370, 384], "badli": 400, "balanc": 501, "band": [19, 20, 26, 68, 83, 89, 118, 121, 123, 126, 145, 146, 149, 152, 157, 160, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 376, 388, 389, 393, 394, 402, 410, 442, 444, 445, 453, 454, 455, 465, 467, 468, 476, 481, 483, 500, 501, 503, 563], "bandshdu": 473, "banner": 400, "bar": [15, 82, 87, 90, 101, 104, 108, 109, 116, 128, 131, 141, 142, 200, 205, 228, 287, 318, 364, 387, 421, 424, 425, 431, 436, 465, 478, 505, 538], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 296, 305, 306, 309, 315, 317, 319, 344, 357, 365, 370, 371, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391, 393, 398, 400, 402, 403, 410, 412, 413, 415, 417, 418, 421, 423, 426, 427, 428, 429, 430, 436, 440, 444, 446, 447, 449, 452, 453, 454, 455, 456, 458, 461, 465, 468, 471, 473, 474, 476, 477, 478, 480, 481, 490, 491, 493, 502, 503, 505, 515, 517, 529, 539, 563, 564, 566, 567], "base_dir": [82, 87, 305, 480, 482, 483, 493], "baselin": [82, 83, 233, 480], "basement": 412, "basemodel": [16, 84, 103, 122, 397], "baseradi": 241, "bash": [402, 404, 565], "basi": [375, 376, 386, 389, 399, 423, 425, 465, 467], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 104, 109, 123, 232, 373, 376, 380, 381, 382, 383, 384, 386, 390, 394, 397, 406, 418, 428, 430, 438, 441, 444, 446, 459, 461, 462, 467, 468, 474, 485, 491, 493, 495, 496, 501, 502, 503, 513, 514, 517, 562, 564, 565], "basicconfig": [16, 454, 487], "bayesian": 388, "bayesian_block": 461, "bayesian_edg": 461, "baysian": 379, "bb": [87, 90, 396], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [142, 146, 147, 148, 157, 439, 447, 460, 464, 471, 480], "becam": 377, "becaus": [16, 84, 103, 122, 187, 188, 190, 194, 196, 199, 200, 370, 371, 373, 375, 377, 381, 382, 384, 385, 389, 393, 394, 397, 400, 421, 423, 441, 442, 445, 458, 463, 465, 472, 473, 474, 475, 480, 481, 482, 489, 490, 491, 501, 505, 565, 568], "becom": [370, 378, 380, 381, 384, 389, 397, 456, 463, 476, 505, 565, 568], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 99, 103, 120, 121, 122, 123, 159, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 297, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 397, 398, 401, 403, 417, 418, 421, 423, 424, 430, 431, 432, 433, 434, 435, 436, 440, 445, 455, 463, 464, 465, 473, 476, 477, 480, 482, 489, 502, 517, 550, 569], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 99, 103, 121, 122, 187, 188, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 309, 365, 370, 371, 373, 375, 377, 378, 379, 380, 384, 385, 386, 388, 389, 395, 399, 400, 406, 424, 430, 440, 445, 447, 462, 463, 470, 473, 476, 482, 485, 489, 541, 565], "begin": [52, 87, 90, 101, 108, 121, 123, 131, 390, 393, 396, 444, 446, 473, 476, 522, 527, 528, 532, 548, 567], "behav": [370, 380, 435, 449, 568], "behavior": [16, 84, 87, 90, 94, 103, 122, 394, 420, 424, 435, 482], "behaviour": [345, 370, 392, 393, 418, 423, 429, 436, 463, 474, 481, 501, 566], "being": [120, 130, 188, 370, 375, 378, 384, 391, 394, 400, 446, 455, 461, 474, 478, 494, 518, 565], "belief": 478, "believ": [405, 478], "belong": [86, 394, 417], "below": [52, 53, 87, 90, 186, 190, 197, 198, 359, 360, 361, 365, 367, 371, 373, 374, 379, 380, 384, 386, 387, 390, 393, 394, 396, 397, 398, 400, 401, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 444, 448, 465, 468, 470, 472, 474, 476, 477, 478, 480, 481, 502, 505, 523, 567], "benchmark": [386, 396, 400], "benefit": 387, "benn": 386, "berg": 564, "berge2007": [384, 514, 515, 564], "bernet": 436, "besancon": 495, "besid": [120, 131, 384, 385, 394, 445, 446, 473, 481, 489, 490, 518], "best": [67, 71, 74, 75, 78, 80, 100, 121, 123, 124, 125, 128, 129, 136, 206, 207, 277, 279, 281, 363, 370, 373, 380, 383, 388, 396, 402, 404, 440, 442, 444, 445, 446, 449, 452, 455, 465, 468, 470, 478, 489, 503, 505, 507, 531, 537, 540, 541, 545, 567, 568, 569], "best_fit_model": 446, "beta": [27, 28, 48, 205, 233, 234, 235, 256, 393, 395, 417, 440, 442, 446, 453, 468, 470, 533, 539, 540, 541, 546, 556], "better": [370, 373, 375, 376, 377, 378, 379, 383, 384, 389, 390, 391, 394, 411, 428, 429, 452, 453, 456, 465, 470, 473, 474, 481, 501], "between": [19, 20, 26, 67, 87, 88, 90, 93, 104, 109, 118, 125, 126, 128, 136, 137, 148, 154, 156, 157, 158, 160, 170, 184, 186, 187, 188, 189, 190, 192, 195, 196, 197, 198, 199, 200, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 271, 277, 294, 327, 360, 361, 368, 370, 371, 378, 380, 381, 382, 383, 384, 386, 387, 389, 390, 391, 394, 395, 397, 398, 408, 418, 421, 424, 435, 439, 446, 448, 453, 455, 458, 461, 464, 465, 470, 472, 473, 474, 475, 478, 481, 482, 491, 501, 503, 510, 511, 514, 523, 524, 564, 567, 569], "bewar": [266, 441, 463], "bexcub": 191, "bexpcub": [186, 187, 188, 190, 199, 200, 473], "beyond": [191, 384, 394, 397, 417, 472, 493], "bfg": 470, "bgstat": 427, "bi": [428, 431], "bia": [95, 144, 145, 149, 173, 429, 435, 472, 478, 509], "bias": [446, 566], "bias_energi": 144, "bias_perc": 173, "bibliographi": 564, "biederbeck": [398, 436], "big": [377, 380, 387, 399, 431, 481, 566, 568], "bigger": 188, "biggest": 389, "billion": 370, "bimod": 31, "bin": [19, 20, 26, 83, 86, 88, 101, 104, 107, 108, 109, 111, 116, 118, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 138, 139, 140, 144, 145, 146, 147, 149, 152, 155, 157, 159, 160, 167, 169, 170, 171, 173, 175, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 273, 282, 288, 294, 363, 365, 368, 376, 381, 382, 383, 384, 386, 389, 390, 394, 401, 402, 412, 413, 415, 416, 418, 420, 421, 423, 426, 427, 428, 429, 430, 435, 436, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 501, 503, 505, 509, 512, 513, 563, 564, 565, 566, 568], "bin_cent": 465, "bin_edg": 465, "bin_volum": [191, 195, 198, 518], "bin_width": [189, 192, 197, 465], "binari": [198, 200, 378, 384, 387, 396, 400, 421], "binary_dil": [200, 474], "binary_erod": [200, 474], "binary_eros": [200, 421], "binary_structur": 198, "bind": 373, "binder": [378, 399, 429, 432, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "binlik": 123, "binned_likelihood": 124, "binneddataaxi": [412, 428], "binnedtimeseri": [123, 385], "bins_axi": 200, "binsiz": [16, 445, 449, 450, 452, 462, 489, 490], "binsize_irf": [16, 445, 449, 450, 452, 462, 489], "binsz": [101, 104, 108, 109, 110, 114, 146, 155, 157, 167, 170, 171, 175, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 386, 444, 454, 455, 456, 457, 460, 465, 467, 469, 471, 472, 473, 474, 476, 481, 482, 490, 512, 514, 515, 517, 518, 521, 523, 524, 525, 526], "binsz_irf": [101, 104, 108, 109, 112, 469, 472, 505], "binsz_irf_default": [101, 104, 108, 109, 472], "binsz_wc": [195, 196], "bintabl": [186, 187, 188, 190, 199, 200], "bintablehdu": [83, 86, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 191, 192, 198, 199, 200, 456, 473, 501], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [83, 136, 371, 373, 377, 378, 384, 388, 389, 397, 465, 473, 518], "bitpix": 473, "bkg": [16, 82, 87, 88, 101, 105, 106, 108, 109, 141, 142, 143, 173, 180, 226, 392, 416, 418, 423, 439, 444, 445, 449, 450, 452, 453, 456, 457, 460, 465, 469, 471, 472, 475, 480, 482, 483, 489, 490, 501, 508, 564, 566, 567, 568], "bkg_": [101, 108], "bkg_2d": [87, 141], "bkg_3d": [82, 87, 142, 480, 483], "bkg_err": 465, "bkg_maker": [392, 441, 444, 446, 454, 463, 514], "bkg_model": [382, 392, 398, 452, 456, 457, 460, 475, 490, 525], "bkg_ob": 105, "bkg_sy": 130, "bkg_syst_fract": [130, 439], "bkg_syst_fraction_sensit": 120, "bkgfile": 105, "black": [108, 109, 359, 360, 367, 388, 430, 432, 439, 465, 467, 472, 477, 514], "blackground": 439, "blanch": [429, 430], "blanklin": [232, 406, 503, 518], "blazar": [293, 440], "blind": [432, 505], "bll": 491, "blob": 409, "block": [371, 373, 376, 383, 390, 400, 409, 429], "block_reduc": 430, "blue": [100, 101, 104, 108, 109, 360, 440, 444, 450, 452, 455, 477, 514], "blur": 33, "board": [379, 390], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 370, "boller": 461, "boni": [421, 424], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 92, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 120, 121, 122, 123, 124, 128, 129, 131, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 167, 174, 177, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 206, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 264, 265, 266, 267, 280, 294, 297, 306, 309, 310, 327, 333, 336, 338, 339, 341, 367, 370, 384, 454, 468, 472, 473], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 121, 124, 125, 128, 129, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 205, 218, 240, 255, 386, 418, 452, 468, 473, 474, 475], "boost": 456, "bootstrap": [87, 90], "border": 90, "bose": 412, "bot": 376, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 82, 83, 86, 87, 88, 90, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 144, 145, 146, 152, 157, 160, 184, 187, 188, 190, 192, 194, 195, 196, 198, 199, 200, 208, 210, 370, 375, 376, 381, 382, 383, 384, 385, 390, 395, 399, 411, 415, 417, 418, 421, 424, 445, 446, 456, 460, 469, 473, 474, 475, 477, 478, 502, 503, 505, 517, 518, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 567], "bother": 449, "bottom": [390, 392, 440, 456, 462, 464, 468], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 101, 104, 108, 109, 121, 123, 124, 125, 128, 192, 195, 197, 205, 212, 213, 216, 217, 218, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 240, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 265, 266, 268, 269, 292, 379, 473, 478], "boundari": [192, 198, 267, 398, 426, 470, 476, 517], "boundary_mask": [198, 474], "boundary_typ": 192, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 370, 471], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 90, 101, 104, 125, 126, 195, 198, 200, 329, 330, 379, 384, 388, 394, 428, 474, 476, 518], "bpl": [212, 393, 476], "bpwl_norm": 393, "bracket": [144, 205, 433, 435], "brake": 51, "branch": [370, 373, 377, 384, 395, 400, 409], "branchnam": 370, "bratio": 493, "break": [212, 256, 376, 384, 386, 395, 415, 416, 417, 532, 546], "brent": 448, "brentq": [19, 20, 26, 123, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 278], "breviti": [452, 505], "brief": 569, "briefli": [482, 483], "bright": [68, 125, 255, 270, 450, 462, 463, 474, 476, 499, 514], "brighter": 456, "brightest": 468, "brigitta": [387, 411, 413, 415, 417, 426, 427, 428, 429, 430, 431, 432], "bring": 375, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 187, 188, 190, 193, 196, 199, 200, 255, 309, 457, 471, 473, 517], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [212, 256, 396, 438, 519, 551], "brokenpowerlaw": 393, "brokenpowerlawspectralmodel": [250, 256, 393, 418, 476, 532], "brown": [132, 461], "brown2013": 132, "brows": [87, 90, 371, 406, 491], "browser": [87, 90, 373, 400, 406, 426, 429, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 487, 489, 490, 491, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "bruno": [396, 413, 415, 418, 421, 424, 428, 429, 430, 432, 433, 434, 435, 436], "br\u00fcgge": [429, 430], "bsd": 396, "bst": [87, 90], "buchner": 421, "budget": 505, "buffer": 348, "bug": [370, 373, 376, 377, 395, 396, 399, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 433, 434], "bugfix": [377, 379, 395, 428, 429], "build": [16, 84, 103, 122, 186, 220, 370, 376, 377, 378, 383, 384, 386, 390, 394, 395, 396, 397, 399, 417, 423, 432, 448, 452, 465, 472, 474, 502, 505, 565], "build_doc": [334, 371, 373, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 529, 537, 540, 553], "built": [10, 174, 220, 337, 354, 369, 370, 371, 381, 382, 384, 386, 387, 389, 397, 400, 407, 430, 435, 468, 475, 481, 485, 501], "builtin": 491, "bullet": 375, "bump": [384, 428], "bunch": [102, 107, 371, 565], "bundl": [100, 101, 104, 108, 109, 379, 382, 400, 422, 430, 454, 469, 472, 501, 518, 563, 564], "bunit": [356, 430, 473], "bureaucrat": 375, "burkert": [17, 493], "burst": 461, "butterfli": [429, 470, 491], "button": [432, 473], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 103, 122], "byte": [16, 84, 87, 90, 103, 122, 315, 348, 370], "bytearrai": [16, 84, 103, 122, 315], "bytestr": [87, 90], "b\u00fchler": 409, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 90, 193, 203, 222, 259, 282, 288, 297, 337, 369, 370, 387, 402, 403, 405, 422, 429, 444, 465, 467, 470, 478, 481, 493, 517, 536, 547, 565, 566, 568], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 100, "c_": 203, "c_0": [185, 186, 195, 198], "c_i": [185, 186, 195, 198], "c_n": [185, 186, 195, 198], "cach": [87, 88, 90, 99, 101, 104, 108, 109, 265, 305, 306, 379, 380, 382, 389, 392, 400, 414, 418, 421, 436], "cahil": 423, "cal_gen_92_002": [144, 192], "cal_gen_92_002_summari": 144, "calcul": [13, 15, 19, 20, 26, 95, 104, 109, 132, 133, 134, 173, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 251, 256, 258, 259, 260, 261, 264, 267, 268, 284, 286, 287, 294, 296, 319, 352, 360, 361, 380, 383, 411, 417, 421, 422, 423, 429, 434, 436, 439, 461, 465, 467, 478, 489, 490, 493, 505, 564, 568], "caldb": [82, 142, 144, 146, 147, 148, 157, 192, 423, 439, 447, 456, 457, 460, 464, 471, 480], "calendar": [395, 399], "calib_vers": [481, 491], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 100, 101, 103, 104, 108, 109, 122, 132, 133, 134, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 169, 185, 186, 195, 198, 205, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 309, 321, 342, 348, 356, 359, 367, 370, 371, 373, 375, 376, 379, 382, 383, 384, 385, 386, 388, 390, 392, 394, 396, 398, 400, 402, 406, 417, 421, 435, 444, 445, 454, 468, 469, 470, 472, 473, 476, 481, 483, 489, 490, 491, 501, 505, 514, 515, 516, 517, 518, 565, 566, 567, 568], "callabl": [16, 45, 84, 103, 122, 273], "callback": [163, 565], "caller": [370, 381], "camera": [464, 471, 472], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 82, 83, 84, 87, 90, 92, 101, 103, 104, 107, 108, 109, 112, 116, 121, 122, 123, 128, 129, 131, 136, 142, 147, 155, 157, 160, 164, 170, 173, 185, 186, 187, 188, 190, 192, 193, 195, 196, 197, 198, 199, 200, 202, 205, 209, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 230, 232, 234, 235, 237, 240, 241, 242, 243, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 278, 280, 285, 297, 309, 310, 315, 318, 327, 346, 348, 363, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 413, 415, 417, 418, 421, 423, 424, 428, 429, 430, 431, 432, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 489, 490, 491, 493, 495, 496, 501, 502, 503, 505, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 539, 541, 550, 560, 562, 563, 564, 565, 566, 567, 568], "candel": 220, "candid": [395, 423, 468], "candl": [271, 564], "cannot": [16, 67, 84, 87, 90, 94, 103, 111, 121, 122, 123, 202, 288, 337, 367, 373, 383, 384, 435, 471, 475, 476, 503, 518], "cap": [51, 54], "capabl": [380, 481, 493], "capsiz": 478, "captur": [370, 386], "car": [101, 104, 108, 109, 167, 198, 199, 200, 218, 240, 384, 413, 454, 471, 472, 473, 490, 491], "card": [83, 86, 88, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 144, 145, 146, 152, 157, 160, 187, 188, 190, 194, 196, 199, 200, 473], "care": [121, 123, 297, 370, 379, 386, 395, 441, 446, 452, 473, 565], "carefulli": [396, 456, 457, 478], "carina": [33, 38], "carlo": [388, 510], "carri": [385, 393, 395, 397, 421, 442, 490], "carr\u00e9": 198, "cartesian": [41, 46, 188, 199, 200, 300, 302, 434, 491, 517], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 83, 87, 90, 100, 144, 163, 175, 186, 188, 194, 195, 198, 200, 205, 208, 210, 230, 241, 263, 265, 267, 278, 288, 310, 327, 365, 370, 371, 373, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 402, 410, 411, 414, 417, 423, 424, 429, 435, 436, 439, 441, 444, 445, 446, 447, 449, 450, 452, 456, 457, 460, 461, 462, 464, 465, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 483, 485, 489, 491, 500, 503, 504, 505, 515, 518, 522, 523, 524, 527, 528, 532, 541, 548, 563, 565, 567], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [101, 104, 108, 109, 167, 283, 288, 370, 382, 421, 447, 449, 452, 460, 464, 469, 472, 475, 478, 489, 490, 501, 564], "cash1979": [564, 567], "cashcountsstatist": [406, 436, 565, 567], "cast": 90, "cat": [66, 67, 79, 378, 400, 428, 429, 442, 468, 476, 500, 564, 565], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 120, 124, 384, 390, 409, 413, 415, 417, 421, 422, 423, 426, 427, 428, 429, 430, 432, 436, 438, 440, 442, 448, 453, 469, 476, 479, 481, 485, 495, 529, 563, 564], "catalog_3fgl": 442, "catalog_3fhl": [442, 468], "catalog_3fhl_bright": 468, "catalog_4fgl": 468, "catalog_4fgl_roi": 468, "catalog_gammacat": [442, 468], "catalog_hgp": 468, "catalog_registri": [442, 468, 474], "catalogimageestim": 430, "catalogu": [78, 421, 428], "catch_warn": 505, "categori": [370, 381, 394, 421, 474, 476, 519], "caus": [377, 384, 430, 433, 505], "cautious": 455, "caveat": [205, 293, 436, 523], "cax": 471, "cb98": 48, "cbar": 358, "cbar_kw": 364, "cbarlabel": 364, "cc": [379, 384, 386, 389, 391, 393, 396, 398], "ccube": [186, 187, 188, 190, 191, 192, 198, 199, 200, 473], "cd": [370, 371, 373, 386, 402, 403, 404], "cdelt": [198, 200], "cdelt1": 473, "cdelt2": 473, "cdf": [319, 383, 456, 470], "cdot": [51, 52, 53, 54, 101, 108, 245, 259, 393, 476, 501, 522, 527, 528, 532, 535, 536, 543, 544, 546, 547, 548, 549, 554, 555, 556, 558, 566], "celesti": [473, 517, 522, 526, 569], "celfix": 529, "cell": [378, 406, 432, 453, 465, 473, 480, 481, 491], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 90, 95, 101, 104, 108, 109, 121, 123, 125, 126, 127, 131, 144, 145, 146, 147, 148, 149, 152, 156, 157, 158, 160, 167, 170, 171, 173, 174, 175, 177, 178, 180, 181, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 265, 267, 299, 303, 329, 370, 371, 384, 386, 393, 394, 411, 412, 421, 423, 436, 439, 441, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 463, 464, 465, 467, 471, 472, 473, 474, 475, 476, 480, 481, 490, 491, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 522, 523, 526], "center_coord": [185, 186, 191, 195, 198], "center_pix": [185, 186, 195, 198], "center_ski": 518, "center_skydir": [185, 186, 195, 198, 472, 473, 481, 482, 512, 514, 515], "centr": [467, 474, 493], "central": [382, 391, 442, 491], "cern": 493, "certain": [50, 83, 87, 90, 205, 285, 369, 384, 386, 388, 394, 439, 467, 472, 473, 481, 500, 518], "certainli": 373, "certif": 396, "certifi": 396, "cfa": [205, 470], "cff": 399, "cg": 497, "ch": 53, "chain": [163, 383, 386, 415, 472, 505, 515], "chainer": 388, "chakraborti": [427, 428], "challeng": [377, 379, 383, 428, 450, 452, 454, 480], "chanc": 375, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 103, 121, 122, 123, 186, 195, 198, 212, 213, 216, 220, 222, 223, 224, 228, 232, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 345, 355, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 394, 395, 396, 399, 400, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 427, 428, 429, 430, 431, 433, 437, 446, 447, 448, 454, 456, 457, 461, 462, 469, 470, 474, 476, 478, 480, 489, 501, 505, 512, 514, 518, 529, 537, 540, 565], "changelog": [370, 399, 422, 430], "channel": [19, 20, 26, 369, 372, 373, 387, 429, 457, 467, 473, 483, 493], "channel0": 493, "channel1": 493, "channel_registri": [19, 20, 26], "chapter": 467, "charact": [87, 90, 370, 475], "character": [287, 394, 456], "characterist": [21, 25, 27, 51, 52, 53, 54, 132, 285, 381, 435, 461, 564], "charg": [396, 541], "chatti": [370, 454], "cheat": 405, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 90, 101, 104, 105, 108, 109, 121, 123, 144, 145, 146, 152, 157, 160, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 209, 211, 218, 240, 255, 293, 344, 346, 373, 386, 392, 396, 399, 400, 402, 403, 404, 407, 416, 421, 429, 442, 460, 471, 485, 493, 505, 509, 518, 562, 565, 566], "check_limit": [208, 209, 210, 211], "check_random_st": 370, "check_tutorials_setup": [439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "checker": [427, 430], "checklist": 400, "checkout": [370, 373, 412, 452, 456, 476], "checksum": [83, 86, 88, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 144, 145, 146, 152, 157, 160, 187, 188, 190, 194, 196, 199, 200, 206, 218, 240, 333, 336, 339, 436, 453, 481], "chen": 430, "cherenkov": [147, 383, 402, 407, 441, 444, 450, 462, 472, 480, 482, 514, 515, 564], "cherri": [370, 377, 384, 395], "chi": [284, 385, 566, 567, 568], "chi2": [100, 138, 382, 412, 444, 455, 464, 470, 501, 567], "chi2assym": 415, "child": 380, "children": [452, 460, 473, 489, 490], "chime": 373, "chisq": 284, "chisquar": 284, "chmod": 565, "choic": [383, 387, 389, 396, 444, 445, 447, 449, 470, 482, 489, 506, 562, 565], "choos": [45, 185, 186, 189, 191, 192, 195, 198, 268, 311, 370, 382, 384, 386, 390, 402, 421, 442, 444, 448, 452, 454, 464, 469, 470, 472, 473, 475, 476, 477, 481, 490, 505, 565], "chose": [456, 481, 482, 567, 569], "chosen": [26, 144, 157, 160, 186, 187, 188, 196, 199, 200, 218, 227, 240, 370, 373, 385, 386, 389, 445, 463, 472, 473, 477, 478, 482, 489, 503, 513, 514, 518], "christoph": [375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 409, 410, 411, 412, 413, 414, 415, 416, 422, 425, 426, 427, 428, 429, 430, 431], "chrome": [87, 90], "chromei": 423, "chunk": [146, 157, 160], "chunk_siz": [146, 157, 160], "ci": [370, 373, 377, 396, 400, 415, 421, 423, 426, 432], "circl": [83, 175, 367, 371, 384, 423, 444, 454, 464, 467, 472, 474, 477, 480, 490, 491, 502, 512, 514, 515, 518], "circle_area": 371, "circleannulusskyregion": [252, 253, 514], "circledast": 501, "circlepixelregion": 384, "circleskyregion": [101, 104, 108, 109, 169, 170, 174, 198, 219, 371, 384, 439, 441, 444, 446, 447, 450, 452, 454, 456, 457, 463, 467, 469, 472, 474, 475, 490, 512, 514, 515, 518], "circular": [90, 101, 104, 174, 186, 188, 198, 381, 389, 391, 441, 446, 469, 477, 514, 518], "circumv": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "cirelli": [26, 493], "citat": 399, "cite": [373, 396], "cl": [16, 84, 101, 103, 108, 122, 397], "clabel": 470, "clang": 406, "clarif": 375, "clarifi": [394, 435], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 279, 281, 305, 306, 309, 317, 319, 344, 357, 373, 376, 379, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 398, 402, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 442, 444, 445, 446, 447, 448, 449, 450, 454, 456, 457, 460, 462, 465, 468, 469, 470, 471, 472, 473, 476, 478, 480, 481, 482, 489, 491, 496, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 513, 515, 516, 517, 518, 519, 541, 550, 562, 563, 564, 565, 570], "class1": 468, "class2": 468, "classic": [379, 388, 402, 411, 441, 444, 450, 454, 469, 472, 503, 505, 514, 515, 564, 567], "classifi": 482, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 99, 100, 101, 103, 104, 108, 109, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 397], "classproperti": 421, "classvar": [16, 84, 103, 122], "claudio": [434, 436], "claus": [370, 396], "clean": [370, 371, 373, 378, 379, 384, 386, 388, 409, 411, 412, 413, 414, 415, 416, 417, 418, 421, 428, 429, 430, 431], "cleaner": 432, "cleanup": [377, 389, 400, 409, 414, 415, 420, 421, 422, 426, 427, 429], "clear": [91, 99, 194, 240, 370, 375, 377, 381, 384, 385, 389, 390, 391, 429, 455, 569], "clearer": 414, "clearli": [132, 370, 375, 376, 384, 387, 395], "cli": [11, 386, 431, 563], "click": [369, 386, 387, 406, 414, 429, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 565], "clip": [19, 20, 26, 185, 186, 189, 191, 192, 195, 197, 198, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 267, 268, 309, 414, 415, 448], "clockwis": [219, 227, 230, 522], "clone": [373, 403, 430], "close": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 267, 345, 346, 347, 379, 384, 399, 424, 435, 436, 470, 550], "closer": 491, "closest": [116, 120, 124, 128, 131, 186, 187, 188, 190, 196, 199, 200, 474, 503], "cloud": [400, 485], "cluster": [6, 95, 295, 296, 383, 435, 436, 438, 479, 485, 502, 505], "clutter": [452, 505], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 100, 123, 129, 131, 212, 216, 222, 224, 228, 235, 238, 245, 247, 255, 256, 259, 260, 261, 270, 355, 381, 393, 440, 441, 442, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 460, 464, 465, 467, 468, 470, 476, 478, 480, 481, 489, 491, 498, 499, 503, 505, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564], "cm2": [51, 54, 67, 106, 123, 137, 147, 200, 271, 355, 439, 440, 442, 444, 445, 447, 448, 452, 453, 454, 456, 457, 460, 462, 463, 464, 465, 467, 468, 469, 473, 475, 476, 478, 481, 489, 490, 491, 503, 518, 534, 537, 540, 545, 550], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 467], "cm5": 467, "cmap": [101, 104, 108, 109, 360, 361, 446, 452, 467, 473, 475, 481, 482, 489, 490, 514], "cmb": 541, "co": [53, 193, 395, 396, 439, 522, 523, 524], "coadd": [187, 188, 190, 196, 199, 200], "coars": 469, "coarser": [192, 197, 469], "codaci": 400, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 90, 144, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 365, 373, 374, 375, 377, 378, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 403, 406, 409, 412, 413, 415, 416, 417, 418, 421, 423, 426, 427, 428, 429, 430, 432, 435, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 493, 505, 512, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 565], "codebas": [371, 387, 409, 428, 430], "codemeta": 423, "codespel": 421, "codestyl": 373, "coeffici": [126, 233, 237, 531], "coerce_numbers_to_str": 103, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coincid": 461, "col": [87, 90, 421], "col0": [87, 90], "col1": [87, 90], "col2": [87, 90], "col_b": [87, 90], "col_c": [87, 90], "col_d": [87, 90], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 364, "collabor": [360, 361, 375, 377, 379, 383, 423, 455, 481, 564], "colleagu": [373, 565], "collect": [194, 240, 370, 372, 397, 400, 428, 429, 445, 469, 475, 493, 502, 506, 510, 564, 569], "collis": 50, "colnam": [87, 90, 187, 188, 190, 196, 199, 200, 481, 491], "color": [100, 108, 109, 141, 142, 200, 359, 360, 361, 364, 367, 371, 439, 440, 442, 444, 445, 446, 447, 448, 450, 452, 454, 455, 458, 462, 465, 467, 470, 472, 475, 477, 478, 505, 514, 518, 522, 523, 541], "colorbar": [123, 141, 142, 144, 147, 148, 149, 154, 155, 156, 158, 200, 358, 364, 470, 473], "colorblind": 505, "colorblind10": 505, "colormap": [359, 360, 361, 409, 422, 491], "colormap_hess": [391, 570], "colormap_milagro": 570, "colour": 432, "column": [41, 43, 44, 46, 47, 56, 83, 87, 90, 102, 107, 121, 123, 126, 136, 141, 142, 144, 168, 187, 188, 189, 190, 191, 192, 196, 197, 199, 200, 266, 287, 295, 340, 341, 342, 343, 363, 364, 367, 368, 370, 383, 385, 394, 432, 435, 436, 439, 456, 457, 465, 468, 473, 476, 480, 502, 505], "column_nam": 471, "column_prefix": 192, "columnclass": [87, 90], "columnspac": 367, "com": [132, 138, 293, 324, 325, 337, 373, 390, 399, 400, 403], "combin": [98, 100, 101, 104, 108, 109, 139, 173, 181, 187, 188, 190, 195, 196, 199, 200, 213, 255, 370, 376, 380, 381, 382, 383, 384, 385, 390, 393, 402, 414, 429, 435, 442, 447, 452, 453, 460, 464, 469, 470, 471, 472, 473, 474, 476, 482, 490, 491, 493, 495, 505, 512, 517, 533, 563, 564], "combined_ev": 502, "combining_and_defin": [439, 447, 449, 452, 454, 460, 464, 480], "come": [69, 373, 376, 377, 378, 379, 380, 384, 385, 386, 387, 389, 390, 395, 397, 399, 400, 417, 418, 421, 430, 431, 435, 444, 452, 460, 476, 480, 489, 565], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 468], "command": [6, 13, 93, 100, 123, 148, 154, 156, 158, 369, 371, 373, 378, 379, 381, 386, 387, 400, 401, 402, 403, 404, 405, 411, 415, 426, 429, 430, 432, 456, 504, 563], "commensur": 200, "comment": [123, 370, 371, 375, 379, 383, 384, 386, 387, 389, 391, 393, 395, 396], "commit": [370, 373, 378, 384, 395, 396, 408, 409, 432], "committe": [375, 377, 395, 396], "commod": 396, "common": [94, 369, 370, 371, 373, 375, 376, 384, 386, 390, 391, 393, 394, 396, 403, 405, 406, 421, 423, 445, 446, 458, 468, 471, 474, 476, 489, 490, 493, 500, 503, 504, 518, 523, 565], "common_irf_head": 471, "commonli": [29, 83, 384, 388, 430, 458, 493, 562, 563, 565, 567, 570], "commun": [386, 392, 396, 399, 401, 407, 483], "comp": 468, "compact": [16, 84, 87, 90, 103, 122], "compar": [87, 90, 124, 125, 128, 129, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200, 205, 277, 370, 384, 387, 390, 418, 434, 435, 439, 440, 441, 444, 448, 452, 455, 458, 460, 463, 468, 470, 472, 478, 481, 489, 500, 564, 566], "comparison": [86, 87, 90, 99, 128, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 327, 426, 495], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 187, 188, 190, 199, 200, 226, 375, 377, 381, 384, 393, 395, 397, 398, 406, 409, 411, 413, 430, 436, 473, 517], "compil": [373, 422], "complain": 373, "complaint": 388, "complement": 390, "complementari": [100, 444], "complet": [13, 16, 84, 103, 122, 327, 370, 376, 380, 381, 382, 383, 384, 387, 388, 390, 394, 395, 396, 403, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 426, 427, 428, 429, 430, 431, 452, 457, 470, 477, 485, 505, 510], "complex": [370, 371, 376, 380, 384, 385, 386, 392, 394, 406, 441, 444, 454, 457, 461, 464, 469, 473, 474, 476, 477, 481, 514], "complianc": [396, 432], "compliant": [187, 188, 190, 199, 200, 436, 564], "complic": [384, 518], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 101, 102, 104, 107, 108, 109, 128, 132, 159, 161, 195, 218, 240, 241, 255, 270, 381, 382, 383, 386, 392, 393, 411, 415, 417, 421, 429, 430, 440, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 468, 469, 475, 476, 480, 481, 489, 490, 493, 501, 503, 505, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564], "component_1": 381, "component_2": 381, "component_class": 468, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 376, 396], "composit": [57, 70, 80, 308, 396, 428], "compound": [195, 202, 213, 328, 332, 384, 393, 438, 440, 458, 519, 551], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 423], "compoundpixelregion": 332, "compoundskymodel": 381, "compoundskyregion": [202, 328, 332], "compoundsourcemodel": 381, "compoundspectralmodel": [250, 393, 435, 440, 476, 481, 531, 533, 537, 540, 542, 545, 550], "compress": 378, "compris": 482, "compromis": [370, 375, 383, 478], "compton": [241, 417, 541], "compulsori": 476, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 93, 95, 99, 100, 101, 103, 104, 108, 109, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 173, 174, 176, 179, 180, 181, 182, 184, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 201, 205, 212, 213, 216, 218, 220, 222, 223, 224, 228, 232, 234, 235, 237, 240, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 270, 271, 277, 278, 279, 281, 284, 285, 286, 287, 292, 293, 296, 300, 301, 304, 370, 379, 380, 381, 382, 383, 384, 385, 388, 390, 391, 392, 393, 394, 398, 400, 402, 403, 407, 409, 411, 412, 413, 414, 417, 418, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 446, 448, 452, 453, 457, 458, 461, 462, 463, 465, 467, 469, 472, 475, 476, 477, 478, 481, 482, 483, 489, 491, 493, 501, 503, 505, 510, 514, 541, 563, 564, 565, 566, 567, 568, 569], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 205, 383, 384, 501], "compute_chisq": 428, "compute_differential_jfactor": 23, "compute_errn": [279, 281, 432, 567], "compute_errp": [279, 281, 567], "compute_flux_doubl": 132, "compute_fpp": 133, "compute_fvar": [134, 286], "compute_jfactor": [23, 467], "compute_lightcurve_doublingtim": 461, "compute_lightcurve_fpp": 461, "compute_lightcurve_fvar": 461, "compute_lima_map": 417, "compute_npr": 383, "compute_upper_limit": [279, 281], "computedfieldinfo": [16, 84, 103, 122], "con": [370, 386], "concaten": [83, 86, 91, 189, 192, 382, 386, 392, 435, 473], "concentr": 329, "concept": [16, 84, 103, 122, 390, 391, 397, 407, 467, 473, 506], "conception": [383, 392], "concern": [373, 375, 384, 386, 387, 389, 391, 393, 396, 421, 431, 482, 567], "conclud": 379, "concret": [16, 84, 103, 122, 387, 390], "conda": [369, 373, 377, 378, 387, 390, 395, 399, 400, 402, 403, 404, 405, 406, 411, 413, 429, 430, 565], "condit": [52, 53, 140, 192, 209, 211, 218, 240, 394, 398, 418, 439, 444, 447, 457, 468, 474, 475, 477, 482, 501, 510], "conduct": [432, 464], "cone": [90, 384, 445, 477, 489, 490, 505], "conesearch": 386, "conf": [87, 90, 370, 371, 400, 412, 427], "conf_1d": 462, "conf_3d": 462, "conf_max": [208, 210], "conf_min": [208, 210], "confid": [120, 205, 208, 210, 279, 281, 381, 388, 412, 417, 431, 564, 567], "confidence_opt": 205, "config": [15, 16, 84, 103, 122, 369, 371, 376, 378, 379, 386, 387, 390, 397, 402, 404, 414, 415, 416, 421, 429, 445, 452, 489, 562], "config_dict": 489, "config_joint": 452, "config_paramet": [116, 118, 119, 120, 124, 125, 127, 128, 129, 130, 131], "config_stack": 452, "config_str": 16, "configdict": [16, 84, 103, 122], "configpars": 427, "configur": [11, 15, 16, 46, 84, 87, 90, 100, 103, 108, 109, 116, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 317, 370, 371, 373, 379, 381, 385, 386, 390, 391, 397, 400, 406, 414, 416, 417, 421, 423, 432, 435, 436, 444, 446, 454, 456, 457, 480, 485, 504, 510, 564, 565], "confirm": 373, "conflict": [87, 90, 370, 373, 396], "confluenc": 483, "conform": [16, 84, 103, 122, 473], "confus": [370, 371, 376, 389], "connect": [380, 444, 458, 460, 474, 490, 562], "consant": [187, 188, 190, 196, 199, 200], "consciou": 375, "consecut": [170, 327, 370, 395], "consensu": [375, 396], "consent": 370, "consequ": [396, 457, 518], "conserv": [501, 526], "consid": [19, 20, 59, 95, 167, 174, 177, 178, 180, 181, 188, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 277, 366, 375, 376, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 396, 398, 441, 444, 446, 452, 456, 457, 461, 471, 474, 502, 510, 568], "consider": [386, 411, 421, 429, 452], "consist": [74, 90, 94, 121, 123, 145, 146, 157, 160, 187, 188, 190, 199, 200, 227, 230, 370, 380, 381, 383, 384, 385, 390, 397, 414, 415, 416, 417, 418, 425, 429, 430, 432, 434, 435, 436, 445, 446, 447, 448, 455, 460, 464, 470, 472, 473, 476, 478, 489, 539, 541, 566], "consol": [370, 565], "consortium": [397, 480], "const": [214, 215, 216, 217, 393, 457, 476, 534, 552], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 393, "constant": [50, 51, 52, 53, 101, 108, 116, 147, 187, 188, 190, 196, 198, 199, 200, 214, 215, 216, 217, 219, 231, 233, 326, 383, 384, 389, 429, 438, 462, 481, 498, 501, 519, 530, 551, 561, 564, 568], "constant_model": 552, "constantmodel": 431, "constantnormspectralmodel": 393, "constantspatialmodel": [249, 393, 476, 481, 521], "constantspectralmodel": [250, 393, 457, 476, 534], "constanttemporalmodel": [262, 393, 414, 476, 552], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 469, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 396, 440, 449, 453, 472, 478, 512], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 505], "construct": [16, 84, 103, 122, 192, 234, 235, 335, 518, 564], "constructor": [185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 435, 490, 516], "consult": 405, "consum": [470, 505], "contact": [372, 377, 379, 396, 405, 407, 410, 411, 412, 426, 429], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 82, 83, 84, 86, 87, 88, 90, 91, 94, 95, 99, 100, 101, 103, 104, 107, 108, 109, 111, 121, 122, 123, 131, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 169, 172, 174, 179, 182, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 285, 295, 296, 363, 365, 367, 368, 370, 373, 374, 376, 378, 379, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 396, 399, 400, 407, 411, 415, 416, 417, 418, 420, 421, 423, 424, 427, 428, 429, 430, 431, 435, 436, 439, 442, 444, 445, 446, 449, 452, 453, 456, 457, 460, 462, 463, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 493, 494, 496, 501, 502, 503, 505, 509, 513, 514, 517, 518, 519, 562, 564, 566, 567, 568], "containment_correct": [16, 101, 104, 174, 439, 444, 445, 446, 449, 450, 452, 454, 462, 463, 465, 469, 472, 489], "containment_fract": 95, "containment_radiu": [148, 154, 156, 157, 158, 160, 439, 469, 471, 474], "containment_radius_map": [157, 160], "contains_pix": [185, 186, 195, 198], "contains_wcs_pix": 195, "contamin": [67, 450, 468, 474, 514], "content": [84, 103, 122, 123, 187, 188, 190, 196, 199, 200, 333, 336, 370, 373, 375, 379, 385, 390, 397, 400, 415, 424, 429, 441, 473, 474, 480, 482, 502, 505, 516, 517], "content_typ": [16, 84, 103, 122], "context": [16, 84, 87, 90, 103, 122, 209, 211, 218, 240, 317, 348, 370, 385, 396, 400, 436, 473, 495], "contigu": [192, 197, 421], "continu": [192, 377, 379, 380, 383, 384, 386, 387, 389, 390, 395, 406, 409, 410, 413, 421, 426, 427, 428, 430, 444, 457, 474, 517, 564], "continuous_upd": [452, 460, 473, 489, 490], "contour": [202, 205, 362, 379, 431], "contour_": 470, "contourf": 200, "contract": 396, "contrari": [371, 378], "contrast": [390, 564], "contrera": 431, "contribut": [99, 113, 115, 218, 226, 240, 255, 366, 370, 372, 379, 384, 392, 394, 400, 407, 410, 421, 423, 425, 472, 506, 541, 562, 565, 566], "contributes_to_stat": 99, "contributor": [370, 373, 390, 400, 408, 419, 420], "control": [83, 87, 90, 101, 104, 108, 109, 370, 383, 401, 403, 439, 467, 473, 478, 505, 567], "controversi": [370, 375, 376, 390], "conveni": [13, 121, 369, 370, 373, 380, 384, 392, 394, 401, 411, 413, 418, 421, 423, 428, 454, 467, 468, 469, 473, 474, 475, 476, 480, 482, 491, 500, 504, 563], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 186, 187, 188, 190, 198, 199, 200, 392, 394, 413, 414, 417, 418, 432, 469, 472, 473, 476, 501, 503, 510, 517, 567], "converg": [398, 412, 433, 444, 446, 452, 470, 501, 505, 512, 522], "convers": [84, 87, 90, 103, 121, 122, 123, 375, 394, 397, 402, 404, 421, 434, 435, 436, 439, 518], "conversion_typ": [481, 491], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 90, 98, 100, 101, 104, 106, 108, 109, 121, 123, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 170, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 207, 208, 209, 210, 211, 218, 232, 240, 277, 294, 297, 298, 302, 315, 331, 351, 353, 354, 371, 376, 384, 385, 394, 397, 400, 422, 434, 435, 436, 439, 450, 455, 463, 464, 469, 470, 474, 475, 480, 491, 503, 509, 514, 517, 567, 569], "convert_bytestring_to_unicod": [87, 90], "convert_unicode_to_bytestr": [87, 90], "convinc": 491, "convolut": [116, 120, 126, 131, 155, 188, 200, 369, 382, 388, 409, 416, 418, 427, 429, 430, 436, 450, 473, 501, 518], "convolution_method": 188, "convolv": [104, 110, 114, 131, 155, 188, 200, 381, 409, 418, 421, 430, 447, 448, 450, 473, 511, 541], "convolve_ful": 188, "convolve_wc": 188, "cookiecutt": 386, "coolwarm": [452, 481, 482, 490], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 242, 285, 381, 414, 457, 473, 474, 514, 517, 518, 525], "coord_to_idx": [185, 186, 189, 191, 192, 195, 197, 198, 473], "coord_to_pix": [185, 186, 189, 191, 192, 195, 197, 198, 473], "coordiant": 471, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 90, 93, 94, 95, 101, 102, 104, 107, 108, 109, 121, 123, 125, 126, 127, 132, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 170, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 218, 219, 227, 230, 232, 240, 242, 244, 252, 253, 255, 267, 285, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 319, 325, 329, 330, 346, 371, 375, 376, 377, 379, 383, 384, 389, 390, 393, 395, 396, 409, 411, 414, 416, 427, 429, 430, 432, 439, 441, 444, 446, 447, 450, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 469, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 490, 491, 501, 509, 514, 516, 517, 522, 523, 526, 563, 564, 569], "coordsi": 416, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 98, 99, 100, 101, 103, 104, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 145, 146, 149, 152, 157, 160, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 297, 342, 370, 375, 378, 380, 384, 386, 392, 399, 400, 406, 421, 423, 430, 431, 432, 435, 440, 441, 444, 446, 447, 452, 454, 460, 463, 464, 468, 470, 472, 476, 478, 481, 505, 514, 518, 529, 565], "copy_data": [87, 90, 218, 226, 240, 255, 263, 265, 267], "copy_indic": [87, 90], "copy_ob": [82, 505], "copy_on_getitem": [87, 90], "copyright": 406, "core": [16, 53, 84, 103, 122, 153, 369, 370, 377, 383, 384, 391, 395, 396, 407, 410, 427, 431, 435, 439, 446, 447, 449, 452, 454, 456, 458, 460, 464, 475, 480, 493, 503, 565], "corner": [384, 387, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "corr_coord": [157, 160], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 101, 102, 104, 146, 157, 160, 174, 179, 180, 193, 226, 242, 243, 267, 370, 382, 383, 395, 396, 397, 399, 413, 416, 418, 419, 420, 421, 424, 427, 428, 430, 432, 433, 434, 435, 436, 439, 440, 444, 445, 446, 447, 456, 460, 462, 468, 469, 470, 472, 474, 475, 476, 478, 482, 489, 491, 502, 503, 512, 525, 537, 540, 542, 545, 550], "correctli": [19, 20, 26, 145, 146, 152, 157, 160, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 371, 373, 396, 397, 411, 413, 418, 423, 424, 433, 471, 472, 473, 474, 475, 478, 517, 523], "correl": [19, 20, 26, 120, 126, 203, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 251, 256, 258, 259, 260, 261, 264, 268, 388, 393, 394, 421, 431, 455, 458, 470, 474, 476, 478, 489, 503, 562], "correlate_off": 120, "correlation_radiu": [16, 120, 136, 137, 445, 449, 450, 452, 465, 482, 489, 503], "correspond": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 84, 87, 89, 90, 99, 101, 103, 104, 108, 109, 121, 122, 123, 124, 125, 126, 128, 129, 131, 144, 145, 146, 152, 155, 157, 159, 160, 161, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 212, 213, 216, 220, 222, 223, 224, 227, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 295, 363, 380, 381, 382, 383, 390, 391, 394, 396, 398, 415, 418, 441, 442, 444, 445, 446, 452, 456, 457, 462, 468, 470, 472, 473, 476, 477, 478, 480, 481, 482, 489, 491, 501, 502, 503, 505, 517, 518, 528, 531, 563, 564, 569], "cosimo": [418, 421, 423, 429, 430, 432, 435], "cosmic": [52, 220, 270, 388, 480], "cost": 564, "costom": 478, "costomprior": 478, "costum": 478, "coto": 429, "could": [16, 84, 103, 122, 371, 373, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 397, 400, 441, 444, 452, 454, 468, 480, 481, 489, 504], "count": [16, 83, 91, 99, 101, 104, 105, 106, 107, 108, 109, 112, 116, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 135, 162, 164, 167, 168, 169, 174, 176, 180, 184, 187, 188, 190, 191, 192, 196, 199, 200, 209, 211, 218, 240, 279, 281, 282, 283, 288, 289, 292, 294, 319, 355, 357, 366, 368, 376, 378, 381, 382, 383, 385, 386, 390, 394, 412, 413, 416, 418, 421, 423, 424, 430, 431, 435, 436, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 454, 456, 458, 460, 462, 463, 464, 465, 469, 470, 472, 473, 474, 478, 482, 487, 489, 490, 491, 503, 505, 509, 512, 513, 514, 515, 518, 564, 565, 566, 568], "count_bkg": 465, "count_statist": 567, "counter": [219, 227, 230, 522], "counts_3d": 473, "counts_imag": [458, 469], "counts_min": 140, "counts_off": [101, 104, 105, 108, 109, 162, 168, 169, 172, 368, 382, 423, 434, 435, 440, 445, 446, 447, 450, 454, 465, 469, 501, 567], "counts_on": 412, "counts_rat": 469, "countspredictor": 381, "countsspectrum": [382, 385, 412, 413, 415, 417, 426], "countsstatist": [279, 281, 394, 417, 418, 421, 432], "coupl": [378, 384, 389, 400, 418, 430, 473], "cours": [370, 373, 377, 380, 387, 406, 445, 452, 469, 473, 481, 489, 565, 568], "cousin": [412, 418, 426, 428, 564], "cousins2007": [564, 567], "coutinho": [418, 421], "cov": [246, 247, 400], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [203, 363, 431], "covar_list": 203, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 124, 125, 128, 129, 204, 205, 206, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 363, 388, 398, 417, 423, 431, 432, 435, 445, 489, 567], "covariance_data": [218, 226, 240, 255, 265], "covariance_opt": 205, "covariance_result": 206, "covariance_typ": 398, "covariancegaussianprior": 398, "covariancemixin": [213, 218, 255], "covarianceresult": [100, 205, 206, 441, 442, 444, 445, 446, 452, 453, 454, 465, 470, 481, 489, 490], "cover": [266, 370, 372, 384, 385, 386, 394, 441, 462, 463, 469, 473, 485, 491, 506], "coverag": [379, 385, 400, 409, 413, 421, 427, 430, 463, 470], "coveral": [400, 409], "cpu": [124, 125, 128, 131, 317, 318, 383], "cpython": 375, "crab": [67, 83, 108, 109, 129, 140, 205, 237, 271, 277, 378, 382, 390, 409, 415, 427, 429, 444, 445, 446, 453, 454, 462, 468, 469, 470, 474, 478, 481, 482, 483, 489, 490, 491, 503, 514, 518, 564], "crab_10gev_100tev_dataset": 453, "crab_3fhl": 491, "crab_3fhl_spec": 491, "crab_events_pass4": 482, "crab_fp": 445, "crab_fp_tabl": 445, "crab_hess_ecpl": 271, "crab_hess_fp": [121, 123, 139], "crab_magic_lp": 446, "crab_model": 470, "crab_posit": 514, "crab_spec": 453, "crab_spectrum": 470, "crabnebula": 462, "crabspectrum": 413, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 98, 100, 101, 103, 104, 108, 109, 110, 111, 112, 114, 116, 121, 122, 123, 124, 125, 128, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 167, 169, 170, 171, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 277, 297, 307, 328, 332, 348, 357, 359, 364, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 413, 414, 415, 418, 421, 423, 429, 430, 432, 433, 434, 435, 436, 439, 440, 442, 445, 446, 447, 452, 454, 455, 456, 458, 460, 461, 462, 463, 464, 465, 467, 468, 470, 472, 475, 476, 477, 478, 480, 481, 482, 483, 487, 489, 491, 493, 500, 501, 502, 505, 509, 512, 514, 515, 516, 517, 521, 523, 524, 525, 526, 531, 541, 550, 562, 563, 565, 570], "create_crab_spectral_model": [444, 446, 453], "create_fermi_isotropic_diffuse_model": [475, 481], "create_map_dataset_from_observ": [92, 107], "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 125, 198, 379, 380, 384, 393, 396, 415, 421, 461, 476, 483], "creator": [103, 122, 373, 397, 445, 449, 450, 452, 476, 489, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "creatormedadata": 397, "creatormetadata": [84, 103, 122, 397], "credit": 406, "crimson": 446, "criteria": [15, 90, 423, 472, 477, 485], "criterion": [90, 131, 295, 439, 505], "critic": 478, "criticis": 361, "crop": [86, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200], "crop_width": [185, 186, 187, 188, 190, 195, 196, 198, 199, 200], "cross": [19, 376, 390, 493], "crowd": 468, "crpix": 198, "crpix1": 473, "crpix2": 473, "crucial": [397, 456, 457, 469], "cruft": 400, "crux": [33, 38], "crval1": 473, "crval2": 473, "cryptic": 381, "csh": 565, "csobsselect": 380, "css": [87, 90, 400], "cstat": [382, 415], "csv": 123, "ct": [355, 430], "cta": [82, 83, 89, 101, 104, 108, 109, 113, 115, 116, 120, 136, 137, 142, 146, 147, 148, 157, 167, 220, 270, 358, 363, 365, 370, 374, 377, 378, 379, 383, 386, 389, 390, 399, 402, 407, 410, 411, 421, 427, 428, 429, 430, 438, 439, 445, 447, 449, 452, 454, 456, 457, 460, 464, 465, 469, 471, 475, 477, 482, 483, 484, 485, 489, 493, 502, 503, 505, 507, 510, 563, 564, 569], "cta_data_analysi": [390, 438, 454, 459], "cta_dataset": 475, "cta_north": 96, "cta_sensist": 390, "cta_sensit": [438, 439, 443], "cta_simul": 410, "cta_south": [96, 439, 447, 456, 457, 460, 464], "cta_util": 430, "ctadata": 480, "ctao": [390, 396, 480, 505], "ctapip": [373, 377, 379, 386, 387, 389, 390, 391], "ctaspectrumobserv": 430, "ctobssim": [82, 383], "ctool": [380, 383, 386, 390, 539], "cts_sigma": 470, "ctselect": 380, "ctype1": 473, "ctype2": 473, "cube": [46, 101, 104, 131, 162, 180, 187, 188, 190, 196, 199, 200, 236, 255, 370, 381, 382, 383, 389, 390, 391, 393, 402, 409, 413, 414, 417, 422, 425, 426, 427, 428, 429, 430, 448, 449, 454, 458, 481, 491, 501, 510, 512, 517, 518, 564], "cubic": 473, "cumbersom": [380, 388], "cumsum": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200], "cumul": [99, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200, 319, 383, 444, 456, 475, 505], "cunit1": 473, "cunit2": 473, "curat": [400, 410], "curl": [67, 387, 401, 402, 404, 480], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 90, 98, 99, 100, 101, 104, 108, 109, 123, 124, 128, 150, 173, 185, 186, 187, 188, 190, 196, 197, 198, 199, 200, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 348, 364, 370, 371, 373, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 401, 402, 403, 404, 413, 431, 445, 467, 471, 472, 473, 475, 480, 482, 483, 489, 490, 494, 501, 502, 503, 518, 562, 564, 565], "curv": [15, 19, 20, 26, 73, 77, 83, 128, 132, 212, 213, 216, 220, 222, 223, 224, 228, 232, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 287, 362, 374, 381, 383, 386, 390, 394, 402, 411, 415, 417, 418, 422, 425, 426, 428, 430, 432, 435, 436, 438, 439, 461, 466, 485, 501, 502, 503, 504, 513, 514, 517, 519, 561, 563], "curve_fit": 363, "cuspi": 493, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 103, 122, 127, 379, 380, 381, 386, 388, 393, 397, 401, 415, 416, 418, 430, 439, 447, 449, 452, 454, 460, 464, 469, 471, 473, 480, 505, 550], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 476, "customis": [390, 471], "cut": [90, 120, 159, 173, 174, 380, 429, 435, 438, 439, 443, 447, 465, 469, 472, 473, 477, 480, 485, 490, 491, 501, 502, 513, 514, 517, 562], "cutoff": [222, 223, 224, 259, 260, 261, 277, 415, 435, 438, 447, 452, 519, 551], "cutout": [101, 104, 108, 109, 113, 115, 145, 146, 152, 157, 160, 163, 186, 188, 196, 198, 200, 265, 376, 382, 411, 416, 421, 427, 430, 449, 450, 452, 454, 458, 469, 472, 481, 490, 491, 501], "cutout2d": [101, 104, 145, 146, 152, 157, 160, 163, 198, 200, 265, 376], "cutout_and_mask_region": [200, 435], "cutout_info": 415, "cutout_mod": 163, "cutout_slic": 198, "cutout_width": 163, "cval": [187, 188, 190, 196, 199, 200], "cwd": 378, "cwt": [390, 415, 427, 430], "cxc": [205, 390, 470], "cyan": 367, "cycl": [367, 373, 374, 375, 387, 389, 403, 428, 432], "cycler": [367, 439], "cython": [373, 412, 422], "d": [19, 20, 23, 87, 89, 90, 191, 194, 197, 232, 237, 248, 266, 271, 337, 373, 388, 390, 423, 432, 442, 456, 457, 464, 473, 476, 477, 510, 517, 522, 552, 553, 554, 555, 556, 557, 558, 559, 560, 565, 568], "dai": [87, 90, 121, 123, 197, 225, 229, 231, 248, 254, 373, 384, 390, 399, 400, 473, 558, 565], "daniel": [431, 434, 436], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 390, 398, 430, 435, 436, 438, 479, 485, 494, 517, 563], "dark_matter_spectra": 26, "darkbit": 493, "darkblu": 478, "darkgreen": 478, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 250, 371, 390, 430, 467, 494], "darkmatterannihilationspectralmodel": [20, 250, 432, 467, 476], "darkmatterdecayspectralmodel": [250, 436, 467, 476], "darkorang": [444, 445], "darksusi": 493, "darwin": 406, "dash": [465, 467, 478], "dashboard": 400, "dat": [26, 87, 90, 218, 240, 445, 489, 493], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 124, 125, 126, 127, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 167, 168, 169, 173, 180, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 282, 287, 288, 290, 291, 294, 295, 296, 305, 306, 309, 327, 333, 336, 340, 341, 349, 358, 359, 360, 361, 363, 364, 369, 371, 374, 377, 380, 381, 382, 383, 384, 386, 389, 390, 391, 392, 393, 394, 396, 398, 399, 402, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 435, 436, 438, 439, 442, 447, 448, 449, 450, 454, 456, 457, 460, 464, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 487, 492, 493, 500, 501, 503, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 524, 525, 537, 540, 542, 544, 545, 550, 562, 563, 564, 567, 568, 569], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [185, 186, 195, 198], "data_path": 482, "data_reduct": 386, "data_shap": [100, 101, 104, 108, 109, 185, 186, 195, 198, 469, 518], "data_shape_ax": [186, 195, 198], "data_shape_imag": 198, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 95, 167, 295, 296, 386, 406, 446, 454, 456, 463, 465, 472, 477, 480, 482, 483, 487, 490, 502, 512, 514, 515], "data_storag": 502, "data_summari": 427, "dataaxi": 412, "databas": [376, 505], "dataclass": 370, "datafram": [87, 90], "dataset": [6, 15, 16, 19, 20, 26, 63, 93, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 138, 140, 145, 146, 152, 157, 160, 162, 163, 164, 167, 168, 169, 172, 173, 174, 189, 194, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 317, 363, 366, 367, 373, 374, 376, 378, 383, 385, 386, 387, 389, 390, 394, 398, 399, 400, 402, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 428, 430, 431, 432, 433, 434, 435, 436, 438, 440, 442, 444, 447, 448, 454, 455, 456, 458, 460, 465, 467, 468, 473, 476, 477, 479, 480, 481, 483, 485, 487, 491, 502, 503, 505, 510, 512, 513, 514, 515, 517, 525, 529, 531, 559, 560, 562, 563, 564, 565, 566, 567], "dataset1": [478, 501], "dataset1_prior": 478, "dataset2": [478, 501], "dataset2_prior": 478, "dataset_1": 503, "dataset_2": 503, "dataset_3fgl": 442, "dataset_3fhl": 442, "dataset_cta": 469, "dataset_empti": [441, 444, 446, 447, 454, 463, 469, 472, 482, 514], "dataset_energy_depend": 455, "dataset_fak": 447, "dataset_fp": 464, "dataset_gammacat": 442, "dataset_hawc": 453, "dataset_hess": [453, 470], "dataset_imag": [454, 469], "dataset_kwarg": [92, 107], "dataset_lc": 464, "dataset_mak": [444, 446, 454, 463, 472, 514], "dataset_nam": [107, 111, 128, 218, 226, 240, 392, 398, 452, 456, 457, 460, 469, 475, 490, 525], "dataset_on_off": [162, 168, 169, 172, 439, 444, 446, 447, 450, 454, 463, 472, 514, 515], "dataset_on_off1": 439, "dataset_onoff": 382, "dataset_simul": 446, "dataset_stack": [444, 452], "datasetmodel": [207, 240, 255, 392, 418, 456, 457, 460], "datasetread": 105, "datasets1": 367, "datasets2": 367, "datasets3": 367, "datasets_fil": [16, 445, 449, 450, 452, 489], "datasets_hess": 453, "datasets_in_phase_bin_3": 394, "datasets_mak": 472, "datasets_nam": [19, 20, 26, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 417, 453, 475, 489, 525], "datasets_read": [475, 481], "datasets_sl": 469, "datasetsconfig": 16, "datasetsmak": [165, 423, 435, 472, 477, 505], "datasetsmetadata": 397, "datasetwrit": 106, "datastor": [16, 89, 95, 167, 295, 296, 376, 380, 385, 402, 406, 412, 423, 424, 426, 427, 429, 435, 436, 441, 444, 445, 446, 449, 450, 452, 454, 456, 460, 463, 465, 472, 477, 482, 483, 487, 489, 505, 512, 514, 515, 565], "datastorecheck": 430, "datastoreindex": 380, "datastoreinmemori": 380, "datastoremak": [412, 423], "datastoremetadata": 397, "datastoreobserv": [168, 376, 380, 416, 429], "datastorexml": 380, "datasum": [83, 86, 88, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 144, 145, 146, 152, 157, 160, 187, 188, 190, 194, 196, 199, 200], "datat": [87, 90], "date": [87, 90, 103, 122, 351, 387, 395, 396, 397, 399, 407, 429, 445, 448, 449, 450, 452, 476, 483, 489, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 569], "datefmt": [16, 445, 449, 450, 452, 489, 565], "dateref": 448, "datetim": [103, 122, 397], "datetime64": [87, 90], "datfix": 448, "daughter": 397, "david": [380, 385, 410, 430, 431], "dc": [452, 480], "dc1": [379, 390, 431, 456, 465, 471, 475, 480], "dc2": 379, "ddof": 461, "de": [19, 20, 26, 67, 99, 212, 213, 216, 220, 222, 223, 224, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 294, 396, 418, 421, 424, 467, 483, 564], "deabsorb": 440, "deactiv": 401, "dead": [83, 86, 88, 327, 380], "dead_tim": [83, 88, 327], "deadc": 380, "deadlin": [379, 383], "deadtim": [88, 180, 447, 456, 460, 480], "deadtime_fract": 88, "deal": [86, 370, 376, 385, 386, 447, 456, 463, 485, 505], "debanjan": 412, "debian": [387, 403, 425], "debug": [11, 370, 376, 381, 386, 432, 444, 473, 505, 565], "dec": [67, 83, 85, 87, 88, 90, 93, 136, 137, 170, 370, 371, 375, 379, 381, 383, 386, 387, 390, 408, 434, 439, 444, 446, 448, 450, 454, 457, 462, 463, 465, 468, 472, 474, 480, 481, 482, 483, 490, 491, 493, 505, 509, 514, 569], "dec_pnt": 483, "dec_tru": 383, "decad": [17, 18, 21, 22, 24, 25, 27, 111, 192, 273, 436, 456], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 225, 231, 248, 393, 456, 461, 464, 476, 493, 555], "decemb": 408, "decid": [370, 376, 379, 380, 381, 382, 384, 385, 389, 392, 393, 394, 399, 445, 477, 489, 569], "decim": [87, 90, 293], "decis": [370, 371], "declar": [15, 87, 90, 255, 349, 350, 373, 377, 378, 381, 386, 387, 393, 400, 417, 504], "decor": [349, 350, 370, 397, 565], "decorrel": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "decoupl": 69, "dedic": [373, 384, 385, 394, 396, 397, 400, 416, 417, 418, 436, 444, 445, 446, 452, 465, 470, 489, 490, 502], "deduc": [394, 436], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 98, 99, 100, 101, 103, 104, 108, 109, 121, 122, 123, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 268, 269, 452], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 263, 265, 267], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 280, 349, 350, 370, 371, 381, 382, 383, 384, 393, 394, 397, 398, 444, 452, 470, 476, 478, 487, 514, 565, 567], "def_unit": [439, 447, 449, 452, 454, 460, 464, 480], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 280, 281, 282, 286, 287, 288, 293, 294, 295, 297, 308, 309, 310, 315, 317, 318, 324, 325, 326, 327, 329, 330, 333, 336, 338, 339, 341, 347, 352, 353, 357, 359, 360, 361, 363, 364, 366, 367, 370, 376, 382, 386, 387, 393, 396, 400, 406, 412, 414, 415, 416, 418, 421, 423, 429, 430, 432, 433, 434, 435, 436, 444, 445, 446, 448, 450, 452, 456, 457, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 481, 489, 490, 491, 501, 503, 505, 512, 515, 516, 517, 518, 522, 523, 524, 531, 537, 540, 541, 565, 569], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 90], "default_css_nb": [87, 90], "default_epoch": 353, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 428], "default_nam": [87, 90], "default_notebook_table_class": [87, 90], "default_obs_t": 82, "default_paramet": [19, 20, 26, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 398], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [141, 142, 147, 149, 154, 159, 471], "defer": [104, 109], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 94, 100, 101, 102, 103, 104, 107, 108, 109, 113, 115, 120, 121, 122, 123, 124, 125, 127, 128, 131, 144, 145, 146, 148, 152, 155, 156, 157, 158, 160, 163, 164, 168, 173, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 280, 282, 288, 289, 309, 319, 324, 325, 326, 327, 330, 360, 361, 370, 371, 373, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 391, 392, 394, 395, 396, 397, 398, 401, 402, 403, 404, 411, 412, 415, 418, 421, 424, 428, 429, 434, 435, 436, 440, 445, 447, 448, 449, 450, 452, 453, 455, 458, 460, 461, 464, 465, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 489, 491, 501, 502, 503, 505, 507, 510, 514, 515, 517, 522, 524, 526, 527, 528, 531, 532, 535, 536, 538, 539, 541, 543, 544, 546, 547, 548, 549, 550, 560, 562, 563, 564, 565, 566, 567, 568], "definit": [83, 84, 86, 88, 99, 101, 103, 104, 108, 109, 122, 164, 195, 280, 294, 308, 370, 379, 380, 384, 391, 392, 393, 394, 397, 413, 417, 418, 434, 436, 444, 446, 449, 458, 463, 471, 472, 489, 501, 503, 510, 511, 516, 518, 522, 523, 567], "deform": 518, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 90, 93, 95, 101, 104, 108, 109, 111, 112, 113, 115, 116, 120, 125, 126, 131, 136, 137, 146, 148, 149, 154, 155, 156, 157, 158, 159, 160, 162, 170, 171, 173, 175, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 218, 219, 227, 230, 240, 244, 252, 253, 255, 295, 296, 329, 365, 370, 371, 381, 384, 386, 393, 394, 397, 406, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 489, 490, 491, 502, 503, 505, 507, 509, 512, 514, 515, 516, 517, 518, 522, 523, 524, 525, 526, 527, 528, 529], "deg2": 483, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 108, 109, 111, 112, 118, 121, 123, 138, 186, 187, 188, 190, 193, 198, 199, 200, 218, 240, 244, 255, 266, 436, 439, 441, 445, 450, 455, 463, 468, 472, 473, 474, 480, 489, 503, 517, 518, 567, 568], "deil": [375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 409, 410, 411, 412, 413, 414, 415, 416, 422, 425, 426, 427, 428, 429, 430, 431], "deiml": 429, "dej2000": [468, 491], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 381], "delai": [391, 395], "deleg": 386, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 370, 381, 400, 401, 402, 404, 436, 475], "delete_interv": 86, "delimit": 123, "deliv": 386, "delta": [19, 20, 23, 87, 90, 120, 121, 126, 129, 131, 149, 197, 246, 247, 278, 293, 435, 440, 470, 478, 503, 510, 511, 523, 524, 526, 567], "delta_t": [118, 278, 455], "demonstr": [386, 411, 414, 415, 416, 417, 418, 423, 435, 436, 461, 462, 473, 475, 485, 517], "denot": [101, 108, 394, 501], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 100, 123, 149, 200, 323, 326, 363, 383, 450, 452, 467, 468, 478, 493, 495, 499, 509, 510, 511, 564], "dep": 435, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 99, 101, 102, 107, 108, 118, 121, 123, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 174, 185, 186, 195, 198, 200, 218, 232, 240, 255, 297, 350, 370, 372, 373, 374, 376, 381, 382, 383, 384, 385, 388, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 410, 414, 415, 418, 425, 427, 430, 431, 433, 435, 436, 438, 439, 443, 447, 449, 450, 459, 463, 468, 470, 471, 472, 473, 474, 475, 477, 478, 480, 481, 485, 501, 502, 505, 509, 510, 513, 514, 517, 531, 562], "deploy": 396, "deposit": 396, "deprec": [16, 83, 84, 85, 88, 103, 122, 124, 125, 128, 208, 210, 412, 421, 434, 435, 436, 529], "deprecated_argument_funct": 370, "deprecated_argument_function_kwarg": 370, "deprecated_attribut": 370, "deprecated_funct": 370, "deprecated_renamed_argu": 370, "deprecatedparseprotocol": [16, 84, 103, 122], "deprecation_polici": 395, "depriv": 512, "depth": [16, 84, 103, 122, 337, 402, 407, 440, 461, 531], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 99, 120, 124, 128, 131, 266, 370, 382, 383, 388, 391, 394, 448, 480, 482, 503, 517, 566, 567], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 94, 123, 124, 126, 131, 156, 196, 205, 268, 289, 371, 373, 375, 376, 379, 380, 382, 383, 384, 386, 387, 389, 390, 393, 394, 395, 396, 407, 413, 421, 429, 430, 445, 448, 456, 457, 461, 470, 476, 478, 480, 482, 483, 489, 501, 505, 509, 518, 519, 564, 565, 566, 567], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 90, 125, 205, 371, 375, 376, 384, 390, 395, 396, 407, 432, 436, 452, 460, 468, 470, 473, 480, 482, 489, 490, 505], "description_width": [452, 460, 473, 489, 490], "descriptionstyl": [452, 460, 473, 489, 490], "descriptor": [87, 88, 90, 101, 104, 108, 109, 265, 306, 371, 417], "desi": 483, "design": [375, 376, 379, 380, 383, 384, 386, 390, 392, 394, 395, 409, 429, 436], "desir": [16, 84, 87, 90, 103, 122, 155, 185, 186, 195, 198, 280, 345, 346, 347, 473, 491, 518], "desktop": 407, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 99, 101, 104, 109, 123, 124, 145, 146, 152, 157, 160, 163, 186, 198, 200, 205, 208, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 265, 266, 267, 370, 371, 373, 375, 378, 379, 380, 383, 384, 385, 389, 390, 391, 395, 396, 399, 401, 405, 407, 408, 415, 419, 420, 438, 439, 440, 444, 446, 447, 448, 449, 454, 455, 456, 459, 460, 464, 469, 470, 472, 473, 474, 475, 476, 478, 480, 482, 483, 485, 490, 491, 501, 502, 504, 510, 514, 515, 517, 562, 563, 564, 565, 569], "detect": [59, 136, 137, 277, 360, 361, 371, 386, 389, 390, 392, 409, 415, 416, 417, 427, 429, 430, 436, 438, 451, 468, 480, 482, 485, 501, 517, 564, 567], "detect_t": 390, "detector": [83, 88, 102, 107, 149, 474, 482, 510, 564], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 111, 130, 148, 154, 156, 158, 170, 171, 173, 175, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 297, 319, 381, 385, 388, 396, 423, 435, 436, 439, 446, 449, 450, 455, 462, 472, 474, 495, 563], "determinist": 370, "deti": [83, 102, 107, 383, 480], "detx": [83, 102, 107, 383, 480], "dev": [11, 16, 82, 84, 103, 122, 370, 372, 373, 386, 396, 399, 400, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 529, 531, 559, 560], "dev727": [103, 122, 407, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "develop": [371, 375, 376, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 403, 407, 409, 422, 429, 430, 431, 480], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 124, 188, 200, 205, 280, 284, 470, 478], "devoid": [444, 508], "devop": 396, "devot": 485, "dex": 297, "df": [87, 90, 118, 138, 455, 470, 567], "diagnosi": 379, "diagnost": 386, "diagon": [144, 145, 146, 388, 398, 481], "diagram": 569, "dialog": [402, 404], "diamet": [186, 187, 188, 441], "diamond": 477, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 116, 118, 121, 122, 123, 124, 125, 126, 128, 129, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 172, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 277, 278, 279, 280, 281, 285, 295, 309, 317, 318, 333, 336, 337, 338, 341, 351, 352, 353, 354, 357, 358, 359, 363, 364, 365, 366, 367, 370, 385, 387, 391, 394, 397, 414, 418, 421, 429, 445, 452, 462, 463, 468, 470, 473, 477, 489, 490, 517, 522, 531], "dict_kei": [440, 531], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 118, 121, 122, 123, 124, 125, 128, 129, 131, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 172, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 198, 199, 200, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 279, 280, 281, 285, 307, 333, 336, 337, 338, 341, 351, 354, 364, 387, 389, 394, 397, 398, 444, 446, 452, 470, 471, 477, 478, 560], "dictionnari": 363, "did": [377, 384, 389, 390, 391, 393, 396, 412, 439, 447, 449, 452, 454, 460, 464, 470, 478, 480], "didn": [83, 88, 377, 380, 384, 387, 493], "diff": [100, 101, 104, 108, 109, 370, 373, 378, 382, 452, 460, 490], "diff_flux": 467, "diff_flux_point": [100, 469], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 80, 86, 87, 90, 93, 99, 118, 121, 123, 124, 125, 128, 129, 131, 136, 141, 142, 143, 144, 147, 149, 151, 154, 159, 169, 187, 188, 190, 193, 194, 195, 196, 198, 199, 200, 277, 278, 279, 281, 327, 331, 345, 346, 361, 370, 371, 373, 375, 376, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 396, 398, 400, 402, 404, 413, 416, 418, 428, 431, 432, 433, 435, 439, 444, 445, 446, 449, 452, 455, 456, 457, 458, 461, 462, 464, 468, 469, 470, 472, 474, 475, 476, 477, 478, 481, 482, 485, 489, 491, 493, 501, 503, 505, 510, 517, 518, 523, 524, 563, 565, 566, 567], "different": 378, "differenti": [23, 79, 121, 123, 130, 187, 188, 190, 192, 196, 199, 200, 241, 255, 270, 271, 324, 376, 381, 388, 394, 428, 473, 476, 481, 491, 503, 564], "differential_flux": 123, "difficult": [381, 384, 400], "diffus": [68, 187, 188, 190, 196, 199, 200, 272, 370, 386, 389, 430, 431, 452, 456, 468, 473, 475, 476, 480, 562], "diffuse_cub": 476, "diffuse_galactic_fermi": 475, "diffuse_iem": [475, 481], "diffuse_iso": [475, 481], "diffuse_model": 272, "difrsp0": [481, 491], "difrsp1": [481, 491], "difrsp2": [481, 491], "difrsp3": [481, 491], "difrsp4": [481, 491], "digit": 370, "dilat": [200, 421], "dim": [154, 326, 426, 427, 454, 564], "dimens": [46, 53, 101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 169, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 263, 264, 267, 297, 309, 363, 386, 418, 429, 431, 435, 470, 471, 473, 476, 485, 501, 517, 518, 523], "dimension": [31, 32, 37, 68, 87, 90, 185, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 227, 230, 273, 310, 323, 376, 384, 398, 402, 427, 448, 470, 471, 473, 476, 491, 509, 511, 517, 518, 563, 564], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 149, 260, 261, 296, 458, 476], "dimitri": [421, 423], "dipol": [51, 54], "dirac": 19, "direct": [90, 103, 159, 177, 178, 181, 183, 192, 219, 227, 230, 301, 304, 371, 376, 382, 384, 389, 391, 394, 397, 421, 438, 443, 447, 472, 485, 501, 502, 510, 511, 513, 514, 517, 522, 562, 563, 564], "directional_offset_bi": [439, 447], "directli": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 87, 88, 90, 135, 159, 174, 187, 188, 190, 196, 199, 200, 263, 265, 267, 370, 372, 373, 375, 377, 378, 381, 382, 383, 384, 388, 390, 397, 402, 404, 405, 409, 411, 412, 413, 415, 429, 436, 442, 444, 445, 447, 452, 453, 454, 457, 458, 460, 461, 463, 464, 468, 469, 470, 471, 473, 474, 475, 476, 477, 480, 481, 489, 490, 491, 493, 501, 505, 510, 514, 517, 541, 567], "directori": [11, 82, 87, 370, 386, 445, 455, 483, 489, 491, 502, 505, 565], "dirk": [412, 426, 428], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 370, 421], "disable_unicode_literals_warn": 370, "disadvantag": 565, "disagr": 375, "disambigu": 375, "disc": [449, 450, 452, 457], "discard": [397, 468], "discard_on_copi": [87, 90], "discarded_ind": 468, "discarded_spati": 468, "discarded_t": 468, "disccus": 379, "discourag": 370, "discov": 565, "discrep": 444, "discret": [90, 293, 383, 470, 517], "discuss": [13, 59, 268, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 407, 429, 478, 483, 493, 494, 569], "disjoint": 384, "disk": [82, 109, 146, 149, 188, 198, 200, 219, 230, 232, 348, 369, 370, 380, 381, 382, 386, 393, 394, 438, 439, 444, 452, 453, 473, 474, 475, 476, 516, 519, 524, 528, 530], "disk_inc": 384, "diskspatialmodel": [72, 249, 393, 414, 435, 475, 476, 522], "dismiss": 99, "disp": [509, 510], "dispatch": 381, "dispers": [82, 88, 101, 102, 104, 106, 107, 108, 109, 110, 112, 114, 144, 145, 146, 149, 167, 173, 174, 177, 178, 181, 370, 376, 381, 382, 383, 415, 417, 427, 428, 429, 431, 439, 441, 444, 445, 452, 456, 472, 482, 483, 489, 490, 501, 510, 513, 564], "displac": 301, "displai": [11, 15, 82, 87, 90, 116, 128, 131, 205, 285, 318, 363, 367, 370, 371, 400, 421, 424, 435, 436, 439, 441, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 458, 460, 462, 464, 465, 468, 469, 470, 472, 473, 475, 476, 480, 481, 482, 483, 490, 505, 565], "display_length": [87, 90], "disrupt": [410, 411], "dissolv": 414, "dist": [320, 400], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 125, 136, 137, 195, 241, 267, 293, 300, 326, 384, 427, 434, 446, 448, 458, 467, 468, 470, 499, 514, 541], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 467], "distance_max": [46, 47, 326, 468], "distance_min": [47, 326, 468], "distance_refer": 468, "distinct": [385, 386, 391, 482, 568], "distinguish": [279, 281, 394, 397, 439, 473], "distort": [384, 413], "distrib": [100, 444], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 100, 107, 138, 149, 184, 224, 235, 241, 279, 281, 319, 320, 324, 363, 366, 368, 369, 370, 374, 375, 378, 383, 388, 389, 392, 395, 396, 400, 403, 414, 423, 429, 435, 436, 439, 444, 446, 447, 450, 452, 456, 458, 460, 462, 470, 475, 478, 480, 491, 493, 505, 509, 510, 512, 518, 526, 541, 566, 567], "divers": 394, "divid": [186, 192, 197, 391, 394, 456, 477, 482, 483], "djangoproject": 390, "djuvsland": 436, "dl3": [6, 16, 82, 83, 86, 88, 90, 95, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 173, 191, 192, 295, 296, 371, 376, 378, 379, 381, 390, 397, 402, 406, 412, 415, 417, 423, 432, 436, 441, 444, 445, 446, 449, 450, 452, 462, 463, 472, 474, 477, 487, 489, 490, 501, 505, 507, 508, 509, 511, 512, 514, 515, 563, 564], "dl4": [98, 100, 101, 104, 108, 109, 116, 120, 124, 128, 131, 152, 173, 376, 397, 402, 417, 464, 469, 470, 505, 563, 564], "dl5": [116, 120, 124, 128, 131, 397, 436, 464, 470, 563, 564], "dl6": [116, 120, 124, 128, 131, 563, 564], "dm": [19, 20, 26, 399, 417, 432, 467, 476], "dm_exampl": 493, "dmfitfunct": 493, "dmpipe": 493, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 467], "dmsky": 493, "dn": [224, 235, 467], "dnde": [19, 20, 26, 67, 121, 122, 123, 130, 132, 133, 134, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 270, 394, 421, 442, 444, 445, 454, 458, 468, 469, 476, 481, 489, 491, 503], "dnde_cu": 271, "dnde_err": [121, 123, 503], "dnde_errn": [67, 121, 123, 468], "dnde_error": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "dnde_errp": [67, 121, 123, 468], "dnde_ref": [121, 123, 394], "dnde_scan_valu": [121, 123], "dnde_ul": [67, 121, 123, 468, 491], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 94, 99, 103, 122, 144, 155, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 321, 363, 371, 373, 375, 376, 377, 380, 384, 385, 386, 387, 388, 389, 390, 393, 394, 397, 399, 400, 402, 404, 415, 440, 442, 444, 445, 447, 448, 449, 450, 452, 454, 455, 456, 460, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 480, 481, 489, 490, 491, 501, 505, 512, 517, 562, 565, 568, 569], "do_someth": 370, "doc": [11, 13, 16, 83, 84, 87, 90, 103, 122, 144, 186, 192, 195, 198, 205, 218, 240, 297, 334, 370, 371, 373, 375, 378, 384, 386, 387, 389, 390, 399, 406, 407, 409, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 493, 518, 529, 531, 537, 540, 553, 559, 560, 564, 565, 569], "docker": [387, 400], "dockerfil": [378, 399, 400], "docstr": [370, 390, 396, 421, 422, 423, 425, 428, 434, 435, 436, 476], "doctest": [155, 358, 371], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 305, 309, 319, 344, 357, 370, 372, 374, 375, 377, 378, 380, 384, 386, 387, 389, 391, 393, 395, 396, 400, 401, 406, 407, 408, 415, 417, 418, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 473, 475, 480, 482, 483, 505, 516, 517, 518, 565], "doe": [16, 84, 87, 90, 103, 122, 124, 128, 147, 157, 160, 194, 232, 266, 277, 370, 371, 377, 378, 380, 382, 384, 385, 387, 389, 390, 393, 394, 396, 397, 412, 421, 432, 439, 440, 444, 447, 449, 452, 454, 455, 468, 470, 471, 472, 473, 474, 482, 493, 505, 514, 565], "doesn": [69, 370, 371, 375, 377, 378, 384, 387, 388, 390, 480, 481, 565], "dof": 567, "doi": [138, 396], "domain": [187, 188, 190, 196, 199, 200, 370, 384, 461], "domenico": 427, "dominguez": [220, 221, 393, 440, 531], "dominquez": 220, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 144, 369, 370, 373, 375, 377, 378, 387, 397, 400, 441, 444, 449, 454, 462, 474, 476, 493, 563, 565, 568, 569], "donath": [379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 121, 124, 145, 146, 152, 157, 160, 363, 370, 371, 373, 375, 376, 377, 381, 383, 384, 385, 386, 388, 389, 390, 393, 394, 396, 402, 406, 430, 435, 441, 447, 452, 453, 457, 458, 460, 464, 465, 469, 472, 473, 476, 477, 501, 505, 513, 514, 518, 550, 567, 569], "dos2unix": 370, "dot": [50, 51, 54, 108, 109, 187, 188, 190, 196, 199, 200, 435], "doubl": [27, 120, 132, 285, 396, 428, 436], "doubling_dict": 285, "down": [50, 51, 54, 131, 375, 377, 380, 384, 389, 413, 469, 481, 568], "downgrad": [186, 369], "download": [67, 93, 100, 123, 373, 378, 386, 387, 390, 397, 399, 401, 402, 404, 406, 410, 411, 413, 414, 421, 430, 431, 432, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 565], "downsampl": [101, 104, 108, 109, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 412, 418, 427, 469], "downsampled_energi": 469, "downsampling_factor": [131, 454], "downward": [279, 281], "dozen": 370, "dpp": 396, "dr": [17, 18, 21, 22, 24, 25, 27, 524], "dr1": [16, 65, 82, 83, 86, 88, 90, 95, 149, 167, 261, 295, 296, 371, 378, 390, 406, 438, 441, 444, 445, 450, 452, 463, 472, 477, 487, 489, 490, 502, 505, 507, 508, 509, 511, 512, 514, 515, 519, 551], "dr2": [65, 261, 421, 438, 519, 551], "dr3": [65, 260, 438, 476, 519, 551], "dr4": [65, 436], "draft": [370, 374, 375, 398, 430], "drag": 373, "draw": [33, 188, 319, 383, 478], "drawback": [385, 389], "drawn": [319, 383], "drift": [85, 93, 94, 432], "drive": 386, "driven": [11, 15, 376, 386, 388, 390, 429, 485, 504], "drop": [52, 53, 101, 104, 108, 109, 121, 123, 128, 145, 146, 152, 157, 160, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 219, 226, 265, 355, 374, 375, 386, 387, 392, 411, 414, 415, 418, 421, 428, 431, 456, 473, 501], "ds9": [83, 186, 195, 198, 202, 218, 240, 370, 371, 384, 413, 474, 476, 518], "ds9parser": 384, "dss": 380, "dt": [87, 90], "dtime_t": 461, "dtype": [33, 38, 87, 90, 110, 114, 142, 144, 147, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 218, 240, 297, 370, 398, 446, 449, 458, 468, 469, 471, 472, 473, 480, 481, 491, 503], "duck": [16, 84, 103, 122], "due": [59, 87, 90, 370, 398, 424, 438, 443, 444, 473, 478, 480, 485, 501, 503, 541, 562, 565], "dummi": [108, 109, 384, 449, 505], "dump": [16, 84, 103, 122, 386], "dumps_kwarg": [16, 84, 103, 122], "duplic": [87, 90, 99, 145, 370, 371, 373, 376, 390, 391, 394, 418, 421], "durat": [83, 86, 88, 93, 447, 456, 460, 463, 480, 502, 505], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 94, 101, 103, 104, 108, 109, 122, 164, 277, 371, 378, 382, 386, 389, 390, 392, 395, 396, 397, 398, 399, 400, 415, 418, 435, 436, 445, 446, 456, 462, 463, 469, 472, 474, 478, 490, 501, 502, 564, 568], "dust": 220, "duti": 396, "dwarf": 493, "dx": [33, 301], "dy": [33, 301], "dynam": [367, 502], "dz": 301, "dzb_h_fo": 476, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 94, 103, 112, 122, 123, 136, 144, 145, 146, 147, 149, 180, 186, 187, 188, 190, 192, 194, 196, 198, 199, 200, 205, 208, 210, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 279, 281, 285, 297, 299, 303, 329, 337, 348, 359, 360, 365, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 406, 407, 409, 410, 411, 415, 421, 422, 423, 427, 429, 430, 431, 435, 438, 440, 441, 442, 444, 445, 446, 447, 450, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 467, 468, 469, 470, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 487, 489, 490, 491, 493, 500, 501, 502, 503, 505, 509, 510, 515, 516, 517, 522, 523, 524, 531, 532, 534, 535, 536, 538, 539, 543, 544, 546, 547, 548, 549, 559, 562, 564, 565, 566, 567, 568, 569, 570], "e2dnd": [19, 20, 26, 121, 122, 123, 130, 132, 133, 134, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 394, 421, 428, 439, 440, 442, 444, 445, 446, 453, 468, 491, 503, 505, 541], "e2dnde_err": [121, 123], "e2dnde_errn": [121, 123, 468], "e2dnde_errp": [121, 123, 468], "e2dnde_ref": [121, 123], "e2dnde_ul": [121, 123, 468], "e501": [19, 20, 124, 144, 180, 191, 192, 198, 220, 272, 367], "e_": [19, 20, 26, 50, 52, 53, 144, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 501, 507, 509, 510, 511, 532, 536, 544, 546, 547], "e_0": [222, 223, 224, 234, 235, 246, 247, 256, 259, 260, 261, 535, 536, 539, 541, 543, 546, 547, 548, 549], "e_b": 393, "e_cut": [67, 468], "e_cutoff": 541, "e_d": [246, 247], "e_edg": 418, "e_max": [67, 123, 394, 439, 444, 445, 446, 457, 462, 468, 469, 470, 473, 478, 491, 503], "e_min": [67, 123, 394, 439, 444, 445, 446, 457, 462, 468, 469, 470, 473, 478, 481, 491, 503], "e_peak": [224, 235], "e_reco": [110, 114, 144, 149, 465, 564], "e_ref": [67, 123, 394, 439, 444, 445, 462, 468, 489, 491, 503], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 442, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 454, "e_sn": [43, 44, 52], "e_tru": [110, 114, 149, 465, 481, 564], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 86, 87, 90, 91, 99, 101, 104, 107, 108, 109, 113, 115, 116, 118, 120, 121, 123, 124, 128, 130, 131, 132, 133, 134, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 168, 169, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 205, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 240, 241, 242, 243, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 295, 334, 359, 368, 370, 373, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 391, 394, 396, 400, 401, 408, 415, 418, 429, 432, 435, 441, 447, 448, 450, 452, 453, 454, 456, 457, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 482, 483, 490, 494, 500, 501, 502, 505, 509, 510, 511, 517, 518, 525, 541, 542, 564, 565, 568, 569], "eager": 386, "earli": [384, 389, 390, 480], "earlier": [377, 396], "earth": [41, 88, 270, 481], "earth_azimuth_angl": [481, 491], "earthloc": [83, 85, 88, 93, 96, 307, 397], "easi": [370, 371, 376, 381, 384, 385, 386, 389, 390, 394, 397, 415, 421, 429, 473, 474, 481, 502, 562, 563, 565, 569], "easier": [370, 376, 381, 389, 394, 429, 432, 480], "easiest": 403, "easili": [87, 90, 123, 376, 381, 382, 386, 397, 402, 403, 462, 463, 470, 471, 473, 481, 491, 565], "ebel": 448, "ebl": [220, 221, 268, 388, 393, 415, 418, 428, 435, 438, 443, 476, 485, 501, 503, 519, 551, 562], "ebl_data_builtin": [440, 531], "ebl_dominguez11": [221, 531], "ebl_franceschini": [221, 268], "ebl_franceschini_2017": 221, "ebl_saldana": 221, "eblabsorbtionnormspectralmodel": 393, "eblabsorptionnormspectralmodel": [250, 393, 418, 440, 476, 531], "ebltabl": 440, "ebound": [144, 192, 518], "ebreak": [212, 256, 532, 546], "ec": [465, 476, 518], "eccentr": [219, 227, 230, 522, 523, 524], "echo": 565, "eco": 396, "ecosystem": 397, "ecpl": [67, 80, 222, 223, 224, 277, 393, 427, 442, 468, 476], "ecpl_norm": 537, "ecsv": [59, 63, 382], "ecut": [222, 259, 536, 547], "edelson": [286, 461], "edelson2002": 286, "edg": [101, 104, 108, 109, 116, 118, 120, 124, 127, 128, 131, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 158, 159, 167, 168, 173, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 219, 363, 384, 394, 412, 418, 421, 439, 440, 444, 453, 454, 455, 456, 457, 461, 471, 472, 473, 474, 481, 482, 489, 512, 522], "edge_max": 522, "edge_min": 522, "edge_width": [219, 475, 522], "edgecolor": [367, 444, 446, 448, 454, 455, 458, 465, 467, 514, 522, 523, 524], "edges_max": [189, 191, 192, 197, 473], "edges_min": [189, 191, 192, 197, 473], "edisp": [16, 82, 87, 88, 95, 101, 104, 105, 108, 109, 110, 114, 144, 145, 146, 149, 153, 167, 173, 174, 177, 178, 255, 295, 296, 371, 380, 381, 382, 383, 386, 416, 418, 421, 427, 428, 429, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 454, 456, 457, 460, 463, 464, 469, 472, 477, 480, 481, 482, 483, 489, 501, 509, 510, 564], "edisp2d": [146, 149, 371], "edisp3d": 471, "edisp_": 501, "edisp_2d": [82, 87, 149, 480, 483], "edisp_3d": 471, "edisp_ev": 471, "edisp_kernel": [144, 469, 509], "edisp_kernel_map": [145, 482], "edisp_map": [102, 107, 145, 146, 471, 509], "edisp_new": 471, "edispersionmap": 501, "edispkernel": [104, 110, 114, 145, 149, 177, 416, 509], "edispkernelmap": [101, 104, 105, 108, 109, 112, 146, 152, 153, 157, 160, 167, 174, 177, 417, 418, 448, 472, 481, 505, 509], "edispmap": [101, 102, 104, 107, 108, 109, 145, 152, 153, 157, 160, 167, 174, 177, 178, 382, 383, 391, 411, 414, 415, 416, 418, 421, 471, 509], "edit": [371, 373, 375, 377, 378, 379, 386, 390, 399, 400, 403, 489, 565], "editor": [371, 396, 445, 489, 565], "editori": 396, "edm": 470, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 116, 124, 147, 186, 195, 198, 205, 218, 237, 240, 270, 271, 280, 287, 390, 470, 518], "eemin": 541, "eff": [147, 507, 510, 523, 524], "eff_area": 471, "effarea": 471, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 87, 88, 90, 104, 106, 146, 147, 173, 174, 179, 181, 182, 195, 218, 240, 360, 361, 370, 375, 380, 381, 383, 384, 394, 425, 427, 444, 456, 458, 461, 462, 478, 482, 483, 485, 489, 510, 518, 523, 524, 564], "effective_area": [153, 383, 480], "effective_livetim": 472, "effective_times_src": 472, "effectivearea3d": 471, "effectiveareat": [382, 409, 421, 425], "effectiveareatable2d": [88, 146, 153, 159, 181, 376, 425, 471, 480, 507], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 104, 109, 375, 381, 382, 383, 384, 385, 392, 442, 477, 510, 515, 567], "effort": [377, 379, 386, 387, 389, 390, 393, 412, 501], "eflux": [19, 20, 26, 121, 122, 123, 132, 133, 134, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 394, 421, 458, 476, 503], "eflux_err": [121, 123, 394], "eflux_errn": [121, 123], "eflux_errp": [121, 123], "eflux_ref": [121, 123], "eflux_ul": [121, 123], "eg": [370, 440, 452, 460, 464, 469, 471, 475, 476], "egal": 480, "egg": 403, "einasto": [21, 493], "either": [67, 82, 87, 88, 90, 94, 109, 121, 123, 149, 164, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 232, 280, 297, 327, 359, 371, 373, 375, 377, 384, 386, 389, 392, 396, 402, 421, 435, 445, 452, 458, 464, 469, 470, 476, 478, 489, 501, 503, 505, 516, 518, 562, 565], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 467], "elabor": [396, 448], "elaps": [83, 379, 564], "electron": [50, 270, 480, 541], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 91, 99, 101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 363, 388, 435, 468, 473, 517], "elementtre": 480, "elev": 385, "elif": [370, 384, 397], "elli": [409, 422], "ellips": [219, 384, 518, 522], "ellipseannulusskyregion": [514, 518], "ellipseskyregion": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 441, 476, 514], "ellipsoid": 470, "ellipt": [518, 524], "elong": [411, 414, 415, 522, 523], "elpas": 435, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 121, 123, 131, 194, 370, 373, 384, 387, 394, 397, 398, 400, 402, 404, 477, 565, 567], "elsewher": [113, 115], "email": [371, 373, 396, 400], "emax": [128, 245, 271, 449, 455, 544], "emax_fit": 465, "embryon": 386, "emce": [379, 387, 411, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "emerg": 380, "emeri": 430, "emin": [128, 245, 271, 449, 455, 544], "emin_fit": 465, "emiss": [52, 68, 132, 376, 381, 385, 444, 450, 452, 453, 456, 475, 480, 481, 501, 515, 541, 562], "emit": [82, 208, 209, 210, 211, 356, 370, 411, 429, 440, 510], "emitt": 444, "emmanoulopoulo": 293, "emmanoulopoulos2010": 293, "emphasi": 470, "empir": 40, "emploi": 446, "empti": [91, 99, 101, 104, 108, 109, 136, 167, 187, 188, 190, 194, 196, 199, 200, 205, 240, 356, 378, 380, 412, 424, 452, 456, 457, 460, 464, 472, 473, 482, 494, 501, 514, 515, 518], "empty_dataset": 439, "empty_i": 464, "empty_map": [101, 104, 108, 109, 455, 472, 514], "emsembl": 92, "en": [34, 83, 87, 88, 90, 124, 180, 195, 205, 268, 297, 373, 390, 439, 447, 449, 452, 454, 460, 464, 470, 471, 474, 480, 502, 505, 516, 518], "enabl": [379, 382, 403, 412, 421, 430, 439, 447, 449, 452, 454, 460, 464, 480, 512], "encapsul": [198, 394, 516], "enclos": [200, 371, 441, 446, 470, 474], "enclosur": [82, 151, 446, 471], "encod": [16, 84, 87, 90, 103, 122], "encompass": [186, 516, 518], "encount": [161, 402, 403, 404, 405, 446, 456, 464, 483, 553, 565], "encourag": [370, 375, 396, 399, 429], "end": [52, 53, 86, 87, 90, 91, 93, 99, 101, 108, 121, 123, 131, 192, 232, 240, 375, 377, 379, 381, 382, 384, 385, 386, 387, 389, 390, 393, 422, 432, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 487, 489, 490, 491, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 567], "end_po": [125, 330, 458], "endswith": 370, "energet": 456, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 80, 82, 83, 88, 95, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 120, 121, 123, 124, 125, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 167, 169, 173, 174, 176, 177, 178, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 365, 366, 370, 376, 379, 381, 382, 383, 384, 385, 386, 388, 389, 392, 394, 398, 402, 406, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 423, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 440, 441, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 456, 458, 459, 460, 462, 463, 464, 465, 468, 469, 472, 473, 482, 483, 485, 489, 490, 491, 500, 501, 502, 505, 510, 512, 513, 514, 516, 517, 518, 525, 531, 537, 540, 542, 545, 550, 560, 562, 563, 564, 566], "energy_axes_are_align": 99, "energy_axi": [19, 20, 26, 101, 104, 108, 109, 110, 111, 114, 121, 123, 144, 145, 146, 149, 157, 159, 160, 167, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 394, 439, 441, 444, 446, 447, 448, 450, 454, 456, 457, 463, 464, 469, 471, 472, 473, 476, 481, 482, 490, 509, 512, 514, 515, 517, 518], "energy_axis_new": 469, "energy_axis_tru": [101, 104, 108, 109, 110, 111, 112, 114, 144, 145, 146, 147, 149, 154, 155, 157, 167, 371, 415, 439, 441, 444, 446, 447, 448, 450, 454, 456, 457, 460, 463, 464, 465, 469, 471, 472, 481, 482, 490, 509, 512, 514, 515], "energy_bin": 386, "energy_bin_per_decade_max": 111, "energy_bound": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 384, 421, 440, 442, 444, 446, 452, 453, 465, 467, 468, 470, 476, 481, 490, 491, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550], "energy_cent": 265, "energy_column": 394, "energy_depend": 455, "energy_dependent_estim": [438, 455, 459], "energy_edg": [16, 116, 118, 120, 124, 125, 128, 131, 136, 137, 140, 192, 317, 394, 440, 444, 445, 448, 449, 450, 452, 453, 454, 455, 458, 462, 463, 464, 465, 482, 489, 490, 503], "energy_estim": 482, "energy_flux": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 476, 491], "energy_flux_err": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "energy_flux_error": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "energy_index": 154, "energy_integr": 51, "energy_logspac": 389, "energy_mask": [185, 186, 195, 198, 417, 446, 452, 465, 469, 470, 474, 478], "energy_max": [19, 20, 26, 83, 99, 101, 104, 108, 109, 121, 123, 124, 125, 128, 144, 185, 186, 192, 195, 198, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 265, 268, 273, 384, 386, 452, 457, 465, 467, 469, 472, 476, 491], "energy_min": [19, 20, 26, 52, 53, 83, 99, 101, 104, 108, 109, 121, 123, 124, 125, 128, 144, 185, 186, 192, 195, 198, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 265, 268, 273, 384, 386, 452, 457, 465, 467, 469, 472, 476, 491], "energy_nam": [157, 160], "energy_nod": [393, 476], "energy_pow": [19, 20, 26, 123, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 275, 444, 452, 465, 470, 490, 491], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 99, 101, 104, 108, 109, 421, 469, 474, 548, 549], "energy_range_fit": [101, 104, 108, 109, 469], "energy_range_saf": [101, 104, 108, 109, 469], "energy_range_tot": [101, 104, 108, 109, 474], "energy_reco": [370, 460], "energy_ref": [121, 123], "energy_resolut": 429, "energy_saf": 386, "energy_tru": [16, 95, 101, 104, 108, 109, 110, 114, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 167, 174, 177, 185, 186, 192, 195, 198, 295, 296, 370, 371, 383, 435, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 454, 456, 457, 460, 462, 463, 464, 465, 469, 471, 472, 473, 474, 476, 477, 480, 481, 482, 489, 490, 509, 510, 512, 514, 515, 517, 518], "energy_true_axi": 144, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 413, "energydependentmorphologi": 455, "energydependentmorphologyestim": [436, 455], "energydependentmultigausspsf": [153, 409, 471, 480, 511], "energydependenttablepsf": [376, 391, 410, 421], "energydispers": [144, 145, 146, 149, 382, 416, 426, 429, 430], "energydispersion2d": [88, 144, 146, 153, 159, 177, 178, 371, 376, 421, 423, 428, 471, 480, 509], "energydispersion3d": 471, "energyoffsetarrai": 426, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 373, 397], "engin": [87, 90], "english": 505, "enhanc": [375, 379, 406], "enlarg": 515, "enough": [383, 385, 386, 444, 447, 450, 460, 462, 474, 512], "enrico": 386, "enrico_config": 386, "enrico_xml": 386, "enriqu": [378, 386, 390, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 429, 430, 431], "ensembl": 92, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 173, 193, 277, 370, 376, 381, 382, 393, 397, 403, 423, 439, 444, 463, 474, 512, 517, 526], "enter": [209, 211, 218, 240, 406], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 101, 103, 104, 108, 109, 122, 174, 441, 452, 455, 461], "entri": [43, 44, 87, 90, 93, 118, 121, 124, 125, 128, 129, 131, 205, 206, 218, 240, 277, 337, 370, 382, 390, 394, 397, 399, 402, 404, 421, 432, 441, 445, 468, 470, 473, 476, 477, 505, 506, 518], "entry_point": 422, "enum": [94, 150, 312, 313], "enumer": [444, 456, 468, 470, 475, 478], "env": [373, 387, 399, 401, 402, 404, 405, 430, 565], "envelop": [383, 470, 490], "environ": [11, 82, 335, 369, 370, 373, 377, 378, 382, 387, 390, 399, 400, 402, 403, 404, 405, 406, 410, 411, 413, 429, 430, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 565], "envis": 379, "envvar": 11, "eosc": 396, "episod": 132, "epoch": 353, "epsilon": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "epsilon_": [101, 108, 501], "epsilon_k": [101, 108, 501], "epsmch": 470, "eq": 100, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 393, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 116, 120, 124, 128, 131, 144, 192, 370, 380, 383, 431, 444, 462, 463, 474, 478, 501, 517, 568], "equat": [27, 260, 261, 286, 527, 528, 532, 535, 536, 538, 539, 543, 544, 546, 547, 548, 549, 567, 568], "equatori": [94, 150, 186, 187, 188, 190, 193, 195, 198, 199, 200, 471], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 121, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 363, 371, 382, 383, 384, 393, 394, 435, 436, 444, 468, 472, 473, 474, 476, 480, 489, 501, 503, 505, 516, 517, 518, 565, 566, 567], "er": [26, 467], "era": 220, "ereco": [144, 471], "erf": [228, 522], "erg": [52, 53, 67, 439, 444, 468, 491, 498, 505], "erlangen": 389, "erod": 200, "eros": [198, 200], "err": 470, "errat": 370, "errn": [120, 124, 128, 129, 131, 205, 432, 567], "errn_2sigma": 567, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 100, 101, 103, 104, 108, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 163, 189, 192, 197, 208, 210, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 279, 281, 285, 286, 287, 293, 348, 370, 371, 384, 385, 386, 388, 393, 394, 397, 398, 411, 415, 417, 419, 421, 422, 424, 428, 429, 432, 434, 435, 436, 440, 441, 442, 444, 445, 447, 449, 452, 453, 454, 455, 457, 460, 461, 462, 464, 465, 468, 476, 477, 478, 480, 489, 490, 491, 493, 501, 503, 505, 523, 541, 550, 562, 565], "error_callback": 163, "errorbar": [83, 100, 101, 104, 108, 109, 192, 196, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 439, 478], "errp": [120, 124, 128, 129, 131, 205, 432, 567], "errp_2sigma": 567, "escap": [370, 396], "especi": [87, 90, 132, 373, 377, 380, 384, 390, 391, 400, 421, 427, 441, 454, 463, 468, 473, 478, 480, 481], "essenti": [380, 382, 385, 415, 416, 417, 458, 473], "establish": [370, 383], "estim": [6, 19, 20, 26, 50, 72, 100, 104, 109, 111, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 162, 168, 169, 170, 176, 185, 186, 195, 198, 200, 205, 208, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 277, 284, 287, 291, 317, 363, 374, 376, 379, 383, 384, 385, 386, 389, 392, 398, 402, 411, 412, 415, 416, 417, 418, 421, 422, 423, 427, 428, 429, 430, 432, 435, 436, 438, 439, 440, 444, 446, 450, 452, 453, 454, 457, 459, 463, 464, 465, 466, 469, 470, 474, 478, 482, 485, 489, 490, 501, 505, 515, 517, 562, 563, 564, 566, 568], "estimate_best_fit": [124, 125, 128, 129], "estimate_count": [124, 125, 128, 129], "estimate_energy_depend": 118, "estimate_errn_errp": [124, 125, 128, 129], "estimate_excess_map": 120, "estimate_exposure_reco_energi": 120, "estimate_fit_input_map": 131, "estimate_flux_default": 131, "estimate_flux_map": 131, "estimate_flux_point": [124, 125, 128], "estimate_kernel": [120, 131], "estimate_map": 116, "estimate_mask_default": [120, 131], "estimate_min_e2dnd": 130, "estimate_min_excess": 130, "estimate_npr": [124, 125, 128, 129], "estimate_npred_excess": [124, 125, 128], "estimate_pad_width": 131, "estimate_scan": [124, 125, 128, 129], "estimate_t": [124, 125, 128, 129], "estimate_time_bin_flux": 128, "estimate_ul": [124, 125, 128, 129], "estimator_result": [138, 465], "et": [26, 33, 59, 100, 132, 147, 220, 286, 287, 293, 380, 448, 455, 461, 493, 564], "eta": [230, 231, 252, 524, 528, 555], "eta_": 50, "eta_b": 50, "eta_rang": [524, 528], "etc": [104, 109, 121, 370, 375, 376, 380, 381, 382, 385, 386, 390, 391, 394, 396, 397, 418, 445, 447, 452, 460, 462, 464, 465, 469, 473, 476, 478, 481, 489, 501, 514, 564], "etru": 471, "eu": 390, "euclidean": 295, "europ": 396, "ev": [471, 505, 541], "ev2": 471, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 90, 101, 104, 107, 108, 109, 124, 128, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 174, 180, 195, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 310, 370, 375, 379, 385, 388, 389, 392, 393, 394, 398, 410, 411, 412, 414, 417, 421, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 456, 457, 465, 471, 476, 478, 480, 481, 501, 523, 524, 531, 564, 567], "evaluate_contain": [148, 156, 158, 423], "evaluate_direct": [148, 156, 158], "evaluate_energy_flux": [246, 247], "evaluate_error": [19, 20, 26, 123, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 388], "evaluate_geom": [214, 215, 219, 226, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267, 436, 476, 524], "evaluate_integr": [245, 246, 247], "evaluate_paramet": [148, 156, 158], "evaluation_bin_size_min": [214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267], "evaluation_radiu": [214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 265, 267, 381, 382, 393, 476], "evaluation_region": [214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 198, 209, 211, 370, 373, 375, 377, 378, 384, 387, 388, 396, 397, 413, 462, 465, 470, 472, 473, 474, 475, 476, 489, 501, 503, 527, 528, 565], "event": [82, 83, 84, 85, 86, 87, 88, 89, 92, 102, 103, 107, 112, 120, 130, 146, 157, 160, 161, 168, 176, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 327, 370, 371, 374, 376, 380, 382, 384, 385, 386, 397, 402, 406, 413, 414, 415, 417, 421, 422, 423, 428, 429, 430, 431, 432, 435, 436, 438, 441, 444, 445, 446, 450, 452, 453, 459, 464, 472, 482, 485, 487, 489, 490, 501, 505, 513, 514, 515, 563, 564, 567], "event_3fhl": 491, "event_class": [84, 481, 491], "event_det_coord": [102, 107], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [383, 480, 481, 491, 502], "event_list": [83, 370, 371, 383], "event_list_meta": [102, 107, 416], "event_sampl": [438, 456, 459], "event_sampling_nrg_depend_model": [438, 457, 459], "event_typ": [103, 481, 491], "eventlist": [84, 88, 102, 107, 176, 187, 188, 190, 196, 199, 200, 370, 371, 376, 383, 384, 385, 397, 406, 411, 418, 423, 425, 426, 427, 429, 430, 456, 457, 465, 473, 480, 481, 491, 505, 514], "eventlistbas": 89, "eventlistdataset": 430, "eventlistlat": 502, "eventlistmetadata": [83, 397], "events2": 83, "events_": 456, "events_0001": 456, "events_1": 502, "events_2": 502, "events_3fhl": 491, "events_bkg": 383, "events_gc_3fhl": 491, "events_list": 383, "events_path": [82, 456], "events_src": 383, "events_tot": 383, "events_vela": 465, "eventu": [370, 375, 386, 389, 390, 406, 476], "ever": 568, "everi": [186, 188, 200, 267, 370, 373, 378, 379, 380, 382, 386, 395, 397, 400, 441, 444, 473, 490, 565], "everyon": 375, "everyth": [370, 388, 389, 505], "everywher": [370, 384, 389, 390, 410], "evid": [132, 468], "evolut": [50, 52, 53, 220, 376, 390, 438, 459, 485, 498, 499, 501, 502, 510, 513, 517, 519], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 220, 387, 390, 397, 457, 471], "evt_sampl": 456, "ex": [11, 473, 475, 476], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 90, 388, 473, 481], "exactli": [116, 120, 124, 128, 131, 192, 365, 444, 446, 463, 465, 474, 478, 481, 501, 518], "exagger": 361, "examin": [396, 509], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 90, 93, 95, 98, 100, 101, 104, 108, 109, 110, 113, 114, 115, 116, 118, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 136, 137, 139, 140, 142, 144, 146, 147, 148, 149, 155, 157, 160, 167, 170, 172, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 205, 209, 211, 232, 238, 268, 271, 277, 280, 295, 296, 317, 321, 327, 337, 349, 350, 355, 358, 360, 361, 363, 365, 367, 370, 371, 373, 375, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 393, 396, 397, 398, 402, 403, 404, 406, 410, 412, 415, 418, 421, 422, 423, 426, 428, 429, 430, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 505, 507, 508, 509, 511, 516, 518, 519, 520, 530, 551, 559, 560, 561, 565, 567, 569, 570], "example_cub": 473, "example_cube_fgst": 473, "exce": 111, "except": [67, 69, 80, 87, 90, 101, 104, 108, 109, 163, 187, 188, 190, 196, 199, 200, 297, 367, 370, 381, 385, 389, 471, 475, 518], "excerpt": 483, "excess": [15, 67, 72, 101, 104, 108, 109, 117, 120, 121, 123, 124, 125, 128, 130, 133, 134, 138, 167, 279, 281, 286, 287, 368, 382, 385, 417, 418, 424, 429, 436, 439, 440, 444, 445, 447, 448, 449, 452, 454, 458, 460, 464, 465, 468, 469, 472, 474, 475, 482, 489, 490, 503, 505], "excess_estim": 482, "excess_estimator_integr": 482, "excess_integr": 482, "excess_map": [16, 445, 449, 450, 452, 489], "excess_map_estim": 465, "excess_matching_signific": [420, 430], "excess_min": 140, "excess_r": 469, "excessestim": 394, "excessmapconfig": 16, "excessmapestim": [117, 136, 137, 138, 394, 417, 418, 419, 421, 424, 434, 436, 450, 452, 465, 474, 482, 503], "excesspointsestim": 394, "excessprofileestim": [394, 418], "exchang": 384, "exclud": [16, 84, 100, 101, 103, 104, 108, 109, 122, 127, 168, 170, 209, 211, 218, 240, 376, 433, 472, 474, 514, 515], "exclude_default": [16, 84, 103, 122], "exclude_non": [16, 84, 103, 122], "exclude_unset": [16, 84, 103, 122], "exclus": [16, 83, 162, 164, 169, 170, 171, 172, 175, 186, 198, 376, 384, 386, 417, 419, 441, 449, 452, 472, 512, 514], "exclusion_mask": [162, 164, 169, 170, 171, 172, 175, 444, 450, 454, 472, 474, 490, 512, 514, 515], "exclusion_mask_2d": 472, "exclusion_mask_crab": [445, 489], "exclusion_radiu": 474, "exclusion_region": 444, "exclusionmask": 427, "execut": [11, 120, 124, 128, 129, 131, 370, 371, 373, 375, 377, 378, 379, 385, 386, 390, 400, 401, 402, 403, 404, 405, 406, 415, 423, 429, 438, 443, 451, 459, 466, 472, 473, 479, 481, 484, 485, 486, 488, 491, 492, 520, 530, 551, 561, 563], "exercis": [373, 386, 390, 396], "exhibit": 455, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 90, 98, 99, 100, 101, 104, 106, 108, 109, 121, 123, 145, 146, 152, 157, 160, 172, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 206, 218, 232, 240, 263, 264, 265, 267, 339, 354, 370, 373, 375, 378, 379, 381, 382, 383, 384, 386, 387, 389, 390, 391, 393, 394, 396, 397, 402, 403, 406, 407, 410, 414, 415, 429, 430, 432, 435, 448, 450, 469, 473, 474, 476, 477, 481, 502, 517, 518, 566], "exist_ok": [444, 445, 452, 453, 456, 489, 490], "exit": [11, 15, 87, 90, 209, 211, 218, 240, 411, 529, 565], "exot": 387, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 147, 225, 228, 235, 246, 247, 259, 371, 393, 464, 476, 523, 524, 531, 535, 536, 537, 538, 547, 548, 549, 553, 554, 555, 568], "expand": [128, 335, 380, 421], "expand_map": 128, "expans": [50, 52, 53], "expcutoffpowerlaw": 537, "expcutoffpowerlaw3fglspectralmodel": [250, 393, 442, 476, 536], "expcutoffpowerlawnormspectralmodel": [224, 250, 436, 476, 537], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 212, 213, 216, 220, 222, 223, 228, 234, 235, 237, 241, 243, 245, 246, 247, 250, 251, 256, 258, 259, 260, 261, 264, 268, 393, 442, 444, 452, 476, 535, 537, 541], "expdecai": [225, 438, 519, 561], "expdecay_model": [456, 553], "expdecaytemporalmodel": [262, 393, 417, 421, 456, 464, 476, 553], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 104, 107, 109, 121, 172, 177, 178, 183, 198, 279, 280, 281, 282, 284, 288, 294, 327, 370, 375, 383, 385, 386, 387, 390, 395, 397, 439, 441, 446, 447, 448, 450, 456, 457, 461, 462, 467, 470, 473, 474, 478, 481, 483, 501, 503, 566, 567, 568], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 444, 457], "experi": [373, 375, 379, 381, 385, 398, 400, 429, 493, 564, 569], "experienc": [379, 405], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 565], "expert": 390, "expertis": 387, "expfactor": [260, 261, 548, 549], "expir": 383, "explain": [87, 90, 370, 373, 375, 384, 387, 389, 390, 396, 400, 402, 404, 415, 421, 439, 444, 446, 467, 470, 474, 476, 505, 563, 565], "explan": [116, 120, 124, 128, 131, 375, 407, 461, 569], "explicit": [87, 90, 186, 188, 370, 386, 388, 394, 517, 569], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 297, 380, 392, 401, 411, 457, 475, 503, 517, 569], "explor": [187, 188, 190, 196, 199, 200, 378, 386, 406, 438, 444, 449, 452, 455, 458, 459, 461, 462, 463, 468, 469, 475, 482, 483, 489, 491, 501, 502, 503, 505, 513, 514, 517, 562], "explos": 52, "expomap": 383, "expon": [393, 476], "exponenti": [28, 30, 36, 39, 40, 222, 223, 224, 225, 259, 260, 261, 371, 381, 415, 438, 452, 456, 464, 519, 551], "exponentialcutoffpowerlaw": 541, "export": [84, 87, 90, 101, 103, 104, 121, 122, 123, 373, 394, 397, 402, 404, 415, 425, 432, 433, 436, 445, 476, 482, 483, 489], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 379, 384, 385, 386, 389, 390, 434, 436, 473, 485, 503, 504, 563], "exposur": [16, 83, 88, 101, 104, 105, 107, 108, 109, 120, 131, 135, 145, 146, 152, 155, 157, 160, 162, 167, 174, 177, 178, 179, 181, 182, 183, 255, 289, 292, 294, 376, 379, 380, 381, 382, 383, 394, 413, 418, 426, 428, 429, 430, 432, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 454, 456, 457, 460, 463, 464, 469, 472, 473, 474, 482, 489, 490, 501, 510, 513, 518, 567], "exposure_geom": 146, "exposure_hdu": [145, 146, 152, 157, 160], "exposure_hdu_band": [145, 146, 152, 157, 160], "exposure_hpx": 481, "exposure_map": [145, 146, 152, 157, 160, 177, 178, 183, 471], "exposure_max": 469, "exposure_min": 469, "exposure_tim": 383, "express": [120, 132, 279, 281, 381, 393, 394, 436, 450, 470, 471, 476, 478, 501, 517, 524, 566, 567, 568], "exptest": 427, "extend": [15, 19, 20, 26, 69, 72, 87, 90, 91, 99, 162, 189, 192, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 240, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 280, 377, 381, 382, 383, 384, 390, 392, 393, 394, 397, 402, 414, 416, 421, 438, 443, 444, 448, 457, 462, 468, 473, 474, 475, 476, 481, 485, 501, 502, 513, 514, 562], "extended_archive_v18": 529, "extended_source_spectral_analysi": [438, 441, 443], "extens": [41, 83, 144, 187, 188, 190, 192, 199, 200, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 257, 263, 267, 372, 375, 376, 377, 378, 379, 381, 383, 385, 386, 387, 388, 389, 390, 400, 424, 455, 456, 457, 476, 565], "extent": [198, 218, 240, 384, 448, 476], "extern": [112, 371, 396, 422, 426, 427, 430, 480, 505], "extnam": 471, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 100, 103, 122, 185, 186, 191, 195, 196, 198, 204, 205, 207, 263, 264, 295, 369, 371, 377, 378, 384, 386, 387, 390, 396, 397, 426, 429, 430, 440, 473, 474, 505, 518], "extra_term": 294, "extract": [16, 84, 99, 101, 103, 104, 108, 109, 121, 122, 123, 128, 145, 146, 152, 157, 160, 163, 168, 169, 174, 176, 184, 187, 188, 189, 190, 192, 197, 198, 199, 200, 265, 370, 380, 385, 394, 396, 397, 423, 424, 435, 436, 439, 441, 444, 445, 446, 447, 452, 453, 456, 457, 458, 460, 469, 473, 489, 501, 509, 514], "extragalact": [220, 440, 480], "extrapol": [100, 141, 142, 143, 167, 187, 188, 190, 196, 199, 200, 220, 268, 309, 310, 421, 426, 428, 429, 471, 473, 480, 481, 517], "extras_requir": 387, "extrem": [370, 397, 473, 524], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 131, 140, 194, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 296, 297, 324, 370, 373, 387, 392, 393, 398, 401, 402, 404, 423, 432, 439, 441, 444, 445, 447, 453, 454, 455, 456, 457, 463, 464, 465, 467, 468, 470, 472, 474, 476, 477, 478, 481, 482, 487, 489, 490, 491, 499, 514, 531, 541, 552, 553, 554, 555, 556, 557, 558, 565, 566, 567], "f0": [266, 559], "f06": 48, "f06b": [49, 495], "f06p": 49, "f1": [266, 559], "f2": [266, 559], "f4": [142, 147, 446, 469, 471, 473, 480, 481], "f8": [471, 481], "f_": [285, 287, 296, 501], "f_0": [245, 544], "f_dead": [83, 88], "f_i": 285, "f_max": 461, "f_max_err": 461, "f_mean": 461, "f_mean_err": 461, "f_min": 461, "f_min_err": 461, "f_pp": 286, "f_var": 286, "fabio": [383, 388, 411, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 428, 430, 432, 434, 435, 436], "face": [375, 378], "facecolor": [367, 440, 444, 446, 454, 455, 458, 465, 467, 522, 523, 524], "facil": 395, "fact": [19, 20, 96, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 396, 441, 518], "facto": 396, "factor": [19, 20, 23, 101, 102, 104, 107, 108, 109, 116, 121, 145, 146, 148, 152, 154, 155, 156, 157, 158, 160, 167, 174, 180, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 203, 208, 209, 210, 211, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 266, 267, 269, 280, 370, 383, 385, 417, 439, 447, 449, 452, 454, 458, 460, 464, 469, 472, 476, 480, 501, 518, 531], "factor1": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267], "factor_max": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267], "factor_min": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267], "factori": [187, 188, 199, 200, 384, 389, 393, 516, 518], "factoris": [255, 393, 476, 562], "fail": [16, 84, 103, 122, 205, 371, 373, 384, 399, 400, 424, 453, 481], "failur": [432, 435], "faint": 566, "fair": 396, "fair4r": 396, "fake": [101, 104, 108, 109, 382, 383, 413, 446, 447, 460, 464, 478], "fall": [132, 170, 197, 218, 240, 370, 377, 379, 380, 387, 430, 431, 461], "fallback": 370, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 120, 121, 122, 123, 124, 128, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 167, 174, 177, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 280, 297, 310, 327, 333, 336, 338, 339, 367, 370, 384, 386, 393, 398, 429, 430, 436, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 458, 460, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 481, 489, 490, 491, 502, 505, 512, 514, 515, 529, 541, 550], "falsifi": 478, "famili": 396, "familiar": [387, 388, 473, 474, 491], "fanci": [370, 465], "far": [378, 383, 385, 387, 391, 394, 397, 406, 421, 456, 493], "fashion": [385, 390], "fast": [370, 384, 388, 470], "faster": [87, 90, 187, 188, 190, 196, 199, 200, 348, 436, 448], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 495, "favour": [375, 383, 398, 478], "favourit": 454, "fc": [476, 518], "fcluster": [295, 477], "fcluster_kwarg": [295, 477], "fcn": 470, "fdx": 370, "fe": 270, "feasibl": [384, 389, 447, 460, 469], "featur": [6, 13, 87, 90, 95, 116, 136, 295, 296, 360, 361, 370, 373, 377, 379, 380, 381, 382, 384, 386, 387, 392, 393, 394, 396, 397, 398, 403, 408, 411, 412, 413, 414, 415, 417, 418, 421, 425, 428, 429, 430, 431, 461, 473, 474, 476, 477, 493, 503, 541], "feature_irf": 477, "features_irf": [95, 295, 296, 477], "feb": [376, 377, 387, 391, 406, 408], "februari": 408, "fed": 446, "feedback": [373, 375, 379, 384, 386, 387, 390, 391, 393, 399, 429, 471, 505], "feedstock": [399, 400], "feel": [380, 565], "feijen": [434, 435, 436], "feldman": [412, 418, 426, 428, 564], "feldman1998": [564, 567], "fellowship": 396, "felt": 370, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 78, 83, 86, 124, 125, 127, 131, 187, 188, 190, 196, 197, 199, 200, 220, 270, 272, 277, 377, 378, 379, 380, 382, 383, 386, 387, 390, 400, 402, 407, 409, 410, 413, 415, 418, 422, 425, 426, 427, 428, 429, 430, 438, 440, 442, 448, 456, 458, 468, 473, 474, 475, 476, 484, 485, 491, 493, 501, 502, 505, 510, 517, 529, 539, 544, 562, 569], "fermi_3fhl": [83, 187, 188, 190, 196, 199, 200, 475, 481, 491], "fermi_3fhl_events_select": [83, 481], "fermi_3fhl_exposure_cube_hpx": 481, "fermi_3fhl_psf_gc": 481, "fermi_bkg_model": 475, "fermi_ct": 127, "fermi_dataset": [277, 475, 481], "fermi_lat": [390, 430, 438, 481, 484], "fermi_model": 481, "fermi_prof": 125, "fermi_ts_imag": 371, "fermilat": 440, "fermipi": [377, 379, 382, 386, 390, 394, 427, 429, 481, 493], "fermitool": 386, "fetch": [15, 370, 378, 409, 422, 489, 565], "few": [82, 83, 87, 88, 90, 369, 370, 371, 373, 375, 376, 377, 378, 380, 382, 384, 388, 390, 395, 399, 400, 406, 420, 431, 433, 436, 441, 445, 450, 452, 454, 468, 470, 473, 480, 489, 490, 514, 518, 570], "fewer": [384, 390], "ff": 396, "fft": 200, "fftconvolv": 200, "fgl": [197, 474], "fgst": [186, 187, 188, 190, 191, 192, 198, 199, 200, 473], "fhit": 482, "fidalgo": [380, 385, 410, 430, 431], "fiduci": 473, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 103, 122, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 156, 158, 159, 164, 226, 241, 299, 303, 357, 370, 384, 396, 397, 406, 411, 416, 423, 430, 444, 446, 450, 452, 454, 456, 471, 472, 474, 480, 481, 505, 507, 508, 509, 510, 511, 512, 514, 541, 564], "fieldinfo": [16, 84, 103, 122], "fig": [200, 358, 439, 441, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 458, 462, 464, 465, 467, 470, 474, 478, 514, 515, 524, 528, 531, 563], "figsiz": [88, 101, 104, 108, 109, 126, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 187, 188, 190, 196, 199, 200, 358, 441, 444, 447, 448, 450, 452, 453, 454, 455, 461, 462, 463, 464, 465, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 483, 514, 524, 528, 531], "figur": [88, 101, 104, 108, 109, 126, 141, 142, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 160, 187, 188, 190, 196, 199, 200, 348, 357, 358, 364, 370, 371, 375, 390, 400, 440, 444, 448, 452, 454, 455, 456, 458, 461, 462, 463, 467, 469, 470, 472, 473, 475, 476, 481, 482, 483, 565], "file": [11, 15, 16, 26, 65, 66, 67, 82, 83, 85, 86, 87, 88, 90, 92, 93, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 168, 173, 187, 188, 190, 194, 196, 199, 200, 206, 218, 220, 232, 240, 263, 264, 265, 266, 267, 268, 305, 333, 336, 339, 369, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 389, 390, 391, 393, 394, 397, 398, 399, 400, 401, 402, 404, 406, 414, 415, 421, 423, 425, 427, 428, 429, 430, 432, 433, 435, 436, 438, 439, 443, 446, 447, 451, 452, 454, 456, 457, 459, 460, 464, 466, 468, 469, 472, 473, 474, 475, 476, 479, 482, 483, 484, 485, 486, 488, 491, 492, 493, 504, 505, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 569], "file_dir": 305, "file_model": 456, "file_nam": 305, "filemod": [16, 445, 449, 450, 452, 489, 565], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 90, 93, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 125, 127, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 187, 188, 190, 194, 196, 199, 200, 218, 220, 232, 240, 263, 264, 265, 266, 267, 268, 272, 274, 276, 277, 305, 336, 339, 349, 370, 371, 375, 418, 444, 445, 449, 450, 452, 453, 457, 458, 468, 469, 473, 474, 475, 476, 480, 481, 489, 490, 491, 502, 505, 507, 508, 509, 511, 529, 531, 559, 560, 565], "filename_1": 502, "filename_2": 502, "filename_arf": 106, "filename_bkg": 106, "filename_model": [99, 121, 277, 475, 481], "filename_rmf": 106, "filepath": 16, "fill": [16, 84, 85, 87, 90, 101, 103, 104, 107, 108, 109, 122, 144, 155, 186, 187, 188, 190, 196, 198, 199, 200, 268, 370, 378, 379, 383, 386, 390, 396, 399, 400, 415, 422, 429, 432, 441, 456, 457, 468, 471, 472, 474, 481, 490, 517], "fill_between": [19, 20, 26, 126, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 465], "fill_by_coord": [155, 187, 188, 190, 196, 199, 200, 473, 481, 517], "fill_by_idx": [187, 188, 190, 196, 199, 200, 517], "fill_by_pix": [187, 188, 190, 196, 199, 200, 517], "fill_ev": [187, 188, 190, 196, 199, 200, 424, 435, 446, 473, 481, 487], "fill_nan": 188, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200, 263, 264, 267, 268, 370, 471, 473, 481], "filled_t": [87, 90], "filter": [88, 89, 376, 380, 382, 384, 385, 430, 431, 434, 474, 477, 485, 490, 491], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [121, 123], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [464, 465], "final": [128, 280, 370, 371, 377, 378, 380, 383, 384, 386, 387, 389, 391, 393, 395, 396, 400, 402, 404, 415, 416, 417, 439, 440, 441, 442, 444, 452, 454, 456, 457, 462, 463, 465, 467, 469, 470, 472, 474, 477, 481, 485, 489, 490, 491, 501, 502, 503], "finalis": 374, "find": [19, 20, 26, 131, 136, 137, 144, 170, 171, 175, 202, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 289, 370, 375, 381, 383, 389, 399, 400, 401, 421, 423, 429, 430, 435, 436, 442, 444, 448, 468, 469, 473, 476, 480, 483, 491, 565, 567, 568], "find_peak": [137, 430, 448, 454], "find_peaks_in_flux_map": 448, "find_root": 421, "finder": [136, 170, 171, 421, 430, 448], "fine": [278, 310, 383, 450, 469, 481, 518, 565], "finer": [456, 469, 518], "fingertip": 369, "finish": [373, 377, 379, 399, 427, 429], "finit": [99, 101, 104, 108, 109, 145, 146, 152, 157, 173, 188, 196, 200, 265, 388], "fink": [220, 221, 440, 531], "fir": 541, "firefox": [87, 90], "first": [57, 87, 90, 91, 93, 99, 101, 108, 121, 123, 125, 136, 144, 161, 170, 187, 188, 189, 192, 196, 197, 218, 240, 271, 330, 359, 370, 371, 373, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 394, 395, 396, 400, 401, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 428, 430, 431, 432, 433, 435, 439, 441, 442, 444, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 485, 489, 490, 491, 502, 514, 517, 565], "firstli": [455, 456], "firstnam": [87, 90], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 78, 82, 83, 84, 85, 86, 87, 88, 90, 93, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 164, 167, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 204, 206, 207, 208, 210, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 265, 266, 267, 268, 277, 278, 279, 281, 282, 283, 288, 290, 294, 305, 306, 307, 352, 353, 356, 358, 363, 365, 369, 370, 371, 376, 380, 381, 382, 383, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 402, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 426, 428, 429, 430, 431, 433, 435, 436, 438, 439, 443, 447, 448, 450, 451, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 468, 469, 471, 472, 473, 475, 476, 477, 479, 480, 482, 483, 485, 487, 491, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 517, 522, 529, 531, 541, 559, 560, 563, 564, 569], "fit2": 475, "fit_covari": [445, 489], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [441, 444, 452, 453], "fit_prior": 478, "fit_rang": [16, 445, 449, 450, 452, 489], "fit_result": [205, 277, 445, 489], "fit_results_nul": 277, "fit_scipi": 470, "fit_sherpa": 470, "fit_stat_scan": 385, "fit_statist": 370, "fit_statistics_cython": 400, "fitconfig": 16, "fitmc": 388, "fitresult": [205, 423, 435, 470, 490], "fitsfixedwarn": [448, 529], "fitspectrum": 425, "fitstepresult": [204, 207], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 428, 429, 442], "five": 491, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 93, 94, 105, 106, 131, 139, 157, 159, 174, 205, 242, 243, 248, 267, 373, 375, 376, 377, 381, 382, 385, 387, 392, 394, 395, 396, 399, 400, 402, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 439, 446, 447, 449, 450, 452, 453, 456, 460, 463, 464, 470, 471, 472, 475, 476, 477, 489, 515, 517, 525, 542], "fixed_altaz": 85, "fixed_bin": 139, "fixed_icr": [85, 157, 439, 447, 456, 457, 460, 464], "fixed_offset": [95, 173, 421], "fixed_r_in": 162, "fixed_width": 162, "fixedpointinginfo": [88, 157, 180, 435, 436, 439, 447, 456, 457, 460, 464], "fk5": [518, 529], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 90, 102, 107, 121, 123, 124, 125, 128, 129, 185, 186, 187, 188, 190, 192, 193, 195, 196, 198, 199, 200, 204, 205, 206, 207, 441, 452, 456, 468, 476], "flake8": 373, "flare": [132, 285, 402, 415, 416, 438, 461, 462, 464, 466, 485, 501, 502, 503, 513, 514], "flask": 429, "flat": [123, 132, 149, 159, 185, 186, 191, 193, 195, 198, 201, 202, 242, 381, 394], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 185, 186, 193, 195, 198, 461], "fledg": 398, "flexibl": [82, 321, 370, 375, 379, 380, 381, 384, 386, 390, 391, 397, 473, 505, 562], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 95, 101, 104, 108, 109, 112, 116, 120, 122, 123, 124, 126, 128, 129, 130, 131, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 162, 164, 173, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 201, 202, 205, 207, 208, 210, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 277, 278, 279, 280, 281, 284, 289, 297, 308, 315, 324, 326, 359, 360, 361, 472, 478, 480, 481, 565, 569], "float32": [185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 449, 454, 473], "float64": [87, 90, 110, 114, 144, 147, 370, 398, 471, 473, 503], "float64float64float64": 454, "float64float64float64float64float64float64float64float32bool": 442, "float64float64float64float64float64float64float64float64": 454, "float_a": [87, 90], "flow": [397, 563, 564], "fluctuat": [279, 281, 394, 447, 460, 478, 567], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 99, 100, 101, 104, 108, 109, 116, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 208, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 270, 271, 275, 284, 285, 286, 287, 293, 374, 382, 383, 385, 386, 388, 390, 391, 393, 402, 409, 412, 414, 415, 417, 421, 423, 427, 428, 429, 431, 436, 438, 443, 446, 448, 452, 454, 456, 457, 459, 461, 462, 463, 464, 465, 469, 473, 476, 481, 485, 499, 500, 501, 510, 517, 519, 526, 541, 562, 563, 567], "flux_err": [19, 20, 26, 121, 123, 131, 137, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 285, 286, 287, 293, 448, 461, 462], "flux_errn": [121, 123, 468], "flux_errp": [121, 123, 468], "flux_int_cu": 271, "flux_map": [121, 123, 394, 467], "flux_metadata_fits_kei": 122, "flux_per_omega": 476, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 97, 100, 121, 123, 124, 382, 439, 442, 444, 445, 449, 450, 452, 454, 465, 468, 469, 489, 490, 491], "flux_point_dataset": 382, "flux_points_at_tim": 394, "flux_points_ctb_37b": 123, "flux_points_dataset": [444, 454, 465], "flux_points_dataset_no_ul": 444, "flux_points_fermi": 453, "flux_points_hawc": 453, "flux_points_hess": 453, "flux_points_intrins": 440, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 444, "flux_points_ob": 440, "flux_points_recomput": 123, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 100, "flux_profil": [438, 458, 459], "flux_profile_estim": 458, "flux_profile_fermi": 458, "flux_quant": [132, 133, 134, 461], "flux_ref": [121, 123, 394], "flux_sensit": [121, 123], "flux_ul": [121, 123, 131, 468], "fluxestim": [121, 123, 124, 391, 417, 419, 420, 421, 423, 436], "fluxmap": [120, 122, 123, 131, 137, 421, 436, 448, 503], "fluxmapestim": 394, "fluxmapsmetadata": 397, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 100, 121, 122, 124, 125, 128, 132, 133, 134, 139, 382, 385, 394, 397, 421, 428, 429, 435, 436, 439, 442, 453, 458, 461, 462, 468, 469, 491, 500, 501, 503, 505], "fluxpointdataset": [415, 444], "fluxpointestim": [385, 412, 418, 431], "fluxpointfit": 382, "fluxpointfitt": 430, "fluxpointprofil": 431, "fluxpointsconfig": 16, "fluxpointsdataset": [97, 98, 101, 104, 391, 394, 397, 411, 415, 436, 442, 444, 453, 454, 464, 465, 501], "fluxpointsdatasetmetadata": 397, "fluxpointsestim": [117, 125, 128, 317, 391, 392, 394, 402, 412, 417, 418, 421, 435, 436, 440, 444, 453, 454, 465, 489, 490], "fluxpointsetim": 394, "fluxpointsmetadata": 397, "fluxprofileestim": [117, 421, 434, 436, 458], "fly": 380, "fmt": [470, 478], "focu": [380, 390, 415, 428, 446, 565], "focus": [380, 396], "fold": [107, 394, 442, 453, 501, 503], "folder": [11, 82, 93, 100, 105, 109, 123, 334, 370, 371, 375, 378, 399, 401, 406, 411, 421, 424, 445, 452, 456, 480, 489, 490, 563, 565], "follow": [15, 19, 20, 43, 44, 80, 82, 83, 84, 90, 101, 103, 105, 106, 108, 109, 121, 122, 123, 126, 131, 136, 138, 186, 187, 188, 190, 194, 199, 200, 205, 255, 271, 277, 360, 361, 363, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 413, 414, 415, 417, 418, 421, 423, 424, 430, 431, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 452, 453, 456, 457, 462, 463, 464, 465, 467, 468, 470, 472, 473, 474, 475, 476, 480, 485, 489, 491, 493, 495, 496, 501, 503, 505, 507, 509, 510, 514, 516, 517, 518, 519, 527, 528, 532, 535, 536, 538, 539, 543, 544, 546, 547, 548, 549, 550, 563, 566, 567, 568, 570], "font": [187, 188, 190, 196, 199, 200, 371, 473], "fontsiz": [367, 465, 470], "foo": [87, 90], "footprint": [187, 188, 190, 196, 198, 199, 200, 525], "footprint_rectangle_sky_region": 198, "forbid": [16, 84, 103, 122], "forbidden": 475, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 145, 146, 152, 155, 157, 160, 198, 200, 297, 375, 385, 411], "forecom": [370, 395], "foremost": 565, "forens": 386, "foreseen": [380, 395], "forev": 411, "forg": [369, 387, 399, 400, 402, 403, 406, 429, 480], "forget": [445, 455, 489], "forgot": 370, "forgotten": 370, "fork": 373, "form": [16, 84, 87, 90, 101, 103, 122, 157, 160, 195, 309, 370, 376, 380, 385, 393, 395, 397, 407, 429, 474, 478, 502, 510, 523, 533, 563], "formal": [375, 398, 448], "format": [16, 83, 84, 85, 86, 87, 88, 90, 93, 101, 103, 104, 106, 108, 109, 121, 122, 123, 124, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 180, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 202, 218, 226, 232, 240, 255, 265, 268, 305, 327, 351, 352, 359, 369, 371, 378, 379, 380, 381, 382, 384, 386, 394, 396, 397, 400, 409, 421, 423, 426, 430, 432, 433, 435, 436, 440, 442, 444, 445, 446, 448, 449, 450, 452, 454, 456, 457, 458, 461, 462, 464, 468, 471, 473, 474, 476, 480, 481, 482, 483, 489, 491, 493, 499, 501, 502, 503, 504, 507, 508, 509, 510, 511, 518, 559, 560, 564, 565, 566], "format_plot_xaxi": [189, 192, 197, 471], "format_plot_yaxi": [192, 471], "formatt": [359, 473], "formatwarn": 370, "former": [396, 412, 417, 441, 475, 563, 566], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 156, 246, 247, 294, 439, 566], "forum": 399, "forward": [19, 20, 26, 83, 87, 90, 101, 104, 108, 109, 125, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 169, 191, 195, 196, 197, 205, 212, 213, 216, 217, 220, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 272, 295, 359, 364, 371, 377, 380, 394, 442, 453, 501, 503, 518], "forwardref": [16, 84, 103, 122], "found": [19, 20, 26, 82, 86, 87, 90, 132, 170, 175, 194, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 285, 373, 374, 378, 385, 395, 396, 415, 418, 419, 420, 424, 450, 456, 461, 476, 478, 483, 502, 503, 514, 515], "four": [373, 381, 394, 462, 480, 481, 509, 511, 517, 564], "fov": [120, 141, 142, 164, 165, 179, 180, 182, 184, 226, 370, 376, 384, 426, 429, 430, 449, 471, 474, 475, 480, 490, 513, 564], "fov_": 370, "fov_align": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 471], "fov_background": [449, 489], "fov_bkg_mak": [472, 512], "fov_lat": [142, 471, 480, 510], "fov_lat_axi": 471, "fov_lon": [142, 471, 480, 510], "fov_lon_axi": 471, "fov_theta": 370, "fovalign": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 471], "fovbackground": [398, 417], "fovbackgroundmak": [165, 416, 421, 472, 489, 490], "fovbackgroundmodel": [15, 101, 107, 108, 111, 164, 236, 398, 418, 435, 436, 452, 453, 456, 457, 460, 469, 475, 489, 490, 512, 525], "fp": [121, 123, 139, 394, 489, 503, 505], "fp_dataset": [444, 469], "fp_dnde": 394, "fp_energy_flux": 394, "fpe": [317, 392, 394, 440, 444, 454, 465, 490], "fpe_no_ul": 444, "fpp": 286, "fpp_err": [286, 461], "fpp_tabl": 461, "fpv4ao8": 472, "fr": [396, 480], "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 104, 109, 144, 147, 203, 224, 228, 245, 247, 259, 285, 287, 296, 393, 501, 509, 510, 522, 523, 524, 527, 528, 532, 535, 536, 538, 539, 543, 544, 546, 547, 548, 549, 553, 554, 555, 557, 567, 568], "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 120, 130, 134, 148, 154, 156, 157, 158, 160, 195, 201, 202, 212, 213, 216, 219, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 286, 287, 380, 385, 428, 436, 439, 447, 456, 460, 469, 471, 474, 480, 481, 482], "frame": [16, 83, 85, 90, 93, 94, 95, 101, 104, 108, 109, 110, 114, 125, 136, 157, 167, 170, 180, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267, 295, 296, 331, 346, 370, 371, 379, 381, 384, 394, 411, 412, 414, 415, 416, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 469, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 489, 490, 491, 509, 514, 516, 517, 518, 522, 523, 524, 525, 526, 527, 528, 529], "framework": [381, 383, 384, 386, 388, 389, 393, 411, 412, 418, 430, 465, 476, 495, 505], "franceschini": [220, 221, 268, 435, 440, 531], "franceschini17": [221, 440, 531], "franceschni": 531, "frd_ab": 221, "free": [50, 52, 53, 101, 104, 108, 109, 124, 128, 129, 167, 205, 209, 211, 242, 243, 277, 375, 385, 411, 440, 445, 447, 449, 450, 452, 454, 455, 460, 462, 464, 469, 470, 472, 475, 476, 478, 481, 485, 489, 490, 493, 503, 512, 525, 541, 542, 565, 567, 568], "free_paramet": [209, 211, 277, 470, 475], "freedom": [118, 121, 123, 138, 396, 436, 455, 503, 567, 568], "freez": [19, 20, 26, 87, 90, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 385, 396, 411, 421, 436, 449, 460, 470, 476, 541], "freeze_al": [209, 211], "frenk": 493, "frequenc": [266, 280, 497], "frequent": [192, 370, 379, 388, 396, 461, 463, 464, 474, 505, 506, 565], "frequentist": 388, "fridai": 379, "friendli": [375, 397, 432, 445, 489, 505], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 173, 174, 176, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 277, 278, 279, 280, 281, 284, 287, 295, 296, 297, 307, 315, 317, 319, 320, 324, 327, 328, 332, 337, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569], "from_align": [198, 421], "from_attribut": [16, 84, 103, 122], "from_bound": [147, 149, 157, 186, 192, 198, 394, 453, 456, 457, 469, 471, 472, 473, 483, 517, 518], "from_covariance_matrix": 398, "from_default": 191, "from_diagonal_respons": [110, 114, 144, 145, 146, 448, 481], "from_dict": [19, 20, 26, 100, 101, 104, 108, 109, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 414, 421, 478], "from_dir": [82, 89, 95, 167, 295, 296, 406, 441, 444, 446, 454, 463, 465, 472, 477, 480, 483, 487, 490, 502, 505, 512, 514, 515], "from_edg": [146, 187, 188, 190, 192, 196, 199, 200, 447, 460, 464, 471, 481, 482], "from_edisp_kernel": 145, "from_energy_bound": [101, 104, 108, 109, 110, 114, 144, 146, 147, 155, 157, 167, 185, 186, 191, 192, 195, 198, 200, 371, 439, 441, 444, 446, 453, 454, 456, 457, 463, 465, 469, 471, 472, 476, 481, 482, 490, 509, 512, 514, 515, 518], "from_energy_edg": [144, 192, 365, 469, 471], "from_events_fil": [82, 456, 480], "from_factor_matrix": 203, "from_fil": [82, 502], "from_fits_head": 85, "from_gauss": [144, 145, 149, 155, 157, 160, 509], "from_gaussian": 418, "from_geom": [101, 104, 108, 109, 145, 146, 155, 157, 160, 187, 188, 190, 194, 196, 199, 200, 415, 434, 469, 473, 474, 518, 524], "from_gti": 197, "from_gti_bound": 197, "from_hdu": [186, 188, 200], "from_hdulist": [101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 473], "from_head": [84, 103, 122, 186, 198, 397], "from_irf": 159, "from_log10": [234, 235, 539], "from_map": [121, 123], "from_map_dataset": [104, 109], "from_nam": [450, 454], "from_nod": 192, "from_orm": [16, 84, 103, 122], "from_panda": [87, 90], "from_paramet": [19, 20, 26, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269], "from_parametr": [147, 507], "from_posit": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 457], "from_refer": 393, "from_region": [195, 219, 435, 514], "from_region_map": 268, "from_spatial_model": 155, "from_spectrum_dataset": [109, 439, 447], "from_stack": [83, 86, 91, 121, 123, 187, 188, 189, 190, 192, 196, 199, 200, 203, 209, 211, 435, 436, 502], "from_tabl": [123, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 189, 191, 192, 196, 197, 232, 432, 439], "from_table_hdu": [86, 191, 192], "from_time_bound": 197, "from_time_edg": [197, 461], "from_time_interv": 86, "from_wcs_til": 188, "from_yaml": [16, 218, 240, 381, 445], "fromnumer": 446, "front": [379, 399, 428], "frozen": [19, 20, 26, 100, 124, 128, 164, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 385, 393, 398, 413, 436, 440, 441, 442, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 460, 463, 464, 468, 469, 470, 474, 475, 476, 481, 489, 490, 491, 503, 512, 541, 550], "fr\u00f6se": 436, "ftol": 470, "ftool": 385, "fulfil": [397, 473], "full": [82, 124, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 188, 206, 218, 240, 305, 366, 369, 370, 375, 379, 380, 383, 385, 386, 390, 396, 398, 401, 408, 411, 421, 423, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 487, 489, 490, 491, 505, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563], "full_enclosur": [180, 471], "full_output": [19, 20, 26, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269], "fulli": [128, 185, 186, 195, 198, 266, 379, 380, 387, 391, 396, 400, 403, 413, 415, 423, 441, 461, 476, 480, 482, 483, 493], "fun": [370, 373], "func": [17, 18, 21, 22, 24, 25, 27, 187, 188, 190, 196, 199, 200, 273, 318, 322, 323, 363, 450, 452], "function": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 85, 87, 88, 90, 99, 100, 101, 102, 104, 107, 108, 109, 116, 121, 128, 131, 132, 133, 134, 137, 147, 148, 149, 151, 152, 154, 156, 157, 158, 160, 187, 188, 190, 192, 196, 199, 200, 205, 206, 207, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 254, 255, 256, 258, 259, 260, 261, 264, 268, 273, 279, 280, 281, 289, 293, 310, 318, 319, 321, 322, 326, 327, 337, 355, 358, 359, 363, 365, 367, 369, 373, 376, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 394, 395, 397, 398, 402, 406, 407, 409, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 439, 440, 444, 445, 446, 447, 448, 452, 454, 455, 456, 457, 458, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 485, 489, 490, 491, 493, 494, 495, 500, 501, 502, 504, 505, 514, 516, 518, 523, 524, 526, 553, 562, 563, 564, 565, 566, 568, 570], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [383, 392, 397], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 116, 120, 124, 125, 128, 131, 193, 321, 370, 373, 374, 376, 379, 380, 383, 384, 387, 389, 390, 391, 392, 393, 416, 417, 418, 421, 423, 450, 456, 467, 468, 469, 473, 490, 491, 494, 495, 510, 565], "furthermor": 480, "futur": [102, 107, 124, 125, 128, 208, 210, 370, 375, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 429, 452, 456, 473, 481, 494, 503, 562], "fvar": [134, 287, 385, 428], "fvar_err": [287, 461], "fvar_tabl": 461, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 85, 86, 87, 90, 94, 112, 136, 186, 187, 188, 190, 192, 196, 198, 199, 200, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 285, 297, 337, 359, 365, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 396, 397, 399, 400, 402, 403, 404, 421, 423, 427, 429, 430, 431, 432, 435, 441, 442, 444, 445, 447, 454, 456, 458, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 485, 491, 493, 497, 500, 501, 502, 503, 505, 510, 515, 516, 517, 524, 562, 564, 565, 567, 569, 570], "g0": [452, 481], "g28": 67, "g320": 468, "g8a21c7809": [103, 122, 407, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "g_1": 147, "g_2": 147, "g_3": 147, "ga": 458, "gabriel": 430, "gadf": [83, 84, 85, 86, 88, 94, 101, 103, 104, 108, 109, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 380, 383, 394, 397, 421, 423, 432, 435, 471, 473, 489, 501, 505, 518, 564], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 375, 387, 429], "gal_diffus": 386, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 67, 68, 83, 90, 101, 104, 108, 109, 110, 114, 124, 125, 127, 157, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 219, 227, 230, 244, 252, 253, 304, 331, 370, 371, 381, 384, 390, 409, 411, 428, 440, 441, 444, 447, 448, 449, 452, 454, 455, 456, 458, 460, 464, 467, 468, 469, 473, 474, 475, 476, 480, 491, 493, 496, 500, 515, 516, 517, 518, 522, 523, 524, 525, 526, 527, 528, 564, 570], "galactic_median": 83, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 220, 286, 287, 409, 441], "galelli": [434, 436], "gallant": 429, "galleri": [400, 416, 418, 421, 432, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 506, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562], "gallery_jupyt": 519, "gallery_python": 519, "galprop": [186, 187, 188, 190, 199, 200], "galprop2": [186, 187, 188, 190, 199, 200], "gambit": 493, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 63, 66, 67, 79, 83, 120, 124, 130, 156, 180, 187, 188, 190, 199, 200, 220, 222, 223, 224, 245, 246, 247, 268, 271, 324, 370, 376, 378, 381, 382, 383, 384, 394, 399, 400, 402, 406, 407, 412, 426, 427, 428, 429, 430, 439, 440, 442, 444, 445, 446, 450, 453, 454, 455, 456, 458, 468, 471, 473, 474, 477, 480, 482, 483, 489, 491, 493, 495, 496, 500, 501, 502, 505, 508, 510, 512, 514, 515, 524, 531, 535, 536, 543, 544, 562, 563, 564, 565, 566, 567, 570], "gamma1": [212, 532, 546], "gamma2": [212, 532, 546], "gamma_1": [256, 259, 260, 261, 393, 547, 548, 549], "gamma_2": [256, 259, 260, 261, 393, 547, 548, 549], "gamma_min": [130, 439], "gamma_min_sensit": 120, "gammacat": [55, 66, 428, 442], "gammalib": [370, 383], "gammamc_dif": 493, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 392, 393, 394, 398, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 484, 485, 487, 489, 490, 491, 494, 495, 497, 498, 499, 505, 506, 507, 508, 509, 511, 515, 516, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 567, 570], "gammapy_analysis_config": 386, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 90, 93, 95, 100, 101, 104, 108, 109, 113, 115, 116, 120, 121, 123, 125, 127, 129, 131, 136, 137, 139, 140, 142, 146, 147, 148, 149, 157, 167, 187, 188, 190, 196, 199, 200, 205, 221, 232, 268, 277, 295, 296, 349, 358, 363, 365, 370, 371, 373, 386, 402, 404, 406, 410, 411, 412, 421, 430, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 487, 489, 490, 491, 502, 503, 505, 507, 508, 509, 511, 512, 514, 515, 529, 559, 560], "gammapy_extra": 410, "gammapybaseconfig": 16, "gammapydeprecationwarn": [370, 537, 540], "gammmapi": [380, 387], "garcia": 430, "gather": [384, 390, 399], "gauss": [42, 51, 54, 101, 104, 126, 127, 148, 188, 200, 227, 228, 229, 230, 393, 427, 465, 473, 476, 491, 522, 523], "gauss_elong": 476, "gauss_temp": 476, "gaussian": [67, 68, 80, 81, 100, 116, 126, 144, 145, 149, 155, 157, 160, 188, 200, 227, 228, 229, 230, 231, 286, 287, 381, 389, 393, 398, 414, 418, 438, 440, 442, 444, 454, 456, 460, 461, 464, 468, 470, 471, 476, 478, 480, 491, 509, 511, 519, 530, 551, 561], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 116, "gaussian_compon": [67, 468], "gaussian_filt": [126, 200], "gaussian_model": 554, "gaussian_sigma": 470, "gaussianband2d": 429, "gaussianprior": [398, 440, 478], "gaussianspatialmodel": [80, 81, 113, 115, 249, 393, 414, 454, 455, 460, 476, 523], "gaussianspectralmodel": [250, 393, 476, 538], "gaussiantemporalmod": 421, "gaussiantemporalmodel": [262, 393, 417, 476, 554], "gb": [378, 380, 480, 482], "gc": [86, 101, 104, 108, 109, 113, 115, 116, 120, 125, 127, 131, 136, 137, 358, 363, 365, 373, 448, 449, 452, 454, 456, 458, 467, 469, 473, 475, 476, 480, 481, 491, 493, 502, 503], "gc_3fhl": 491, "gc_3fhl_cutout": 491, "gc_3fhl_smooth": 491, "gc_imag": 458, "gc_po": 481, "gc_sep": 475, "gca": 440, "gcc": 406, "geminga": 59, "gen_gaussian_model": 555, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 101, 102, 103, 104, 107, 108, 109, 122, 146, 157, 160, 187, 188, 190, 191, 192, 196, 199, 200, 205, 217, 225, 229, 230, 231, 232, 233, 248, 254, 263, 264, 266, 268, 269, 280, 319, 321, 324, 325, 326, 327, 334, 371, 373, 379, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 400, 403, 406, 412, 416, 417, 418, 421, 423, 428, 432, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 501, 505, 510, 516, 518, 519, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 565, 567, 568], "generalconfig": 16, "generalis": [123, 389, 415, 471], "generalized_gaussian_model": 555, "generalizedgaussianspatialmodel": [249, 418, 476, 524], "generalizedgaussiantemporalmodel": [262, 423, 476, 555], "generalrandom": 413, "generatejsonschema": [16, 84, 103, 122], "gengauss": [231, 476, 524], "geodeticloc": 93, "geolat": 441, "geom": [16, 23, 83, 101, 104, 108, 109, 110, 112, 114, 120, 121, 123, 125, 131, 145, 146, 155, 157, 160, 167, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 214, 215, 218, 219, 226, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 267, 381, 383, 385, 418, 421, 430, 436, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 481, 482, 489, 490, 491, 503, 512, 514, 515, 516, 517, 518, 521, 523, 524, 525, 526], "geom_24_energy_bin": 518, "geom_6_energy_bin": 518, "geom_edisp": [101, 104, 108, 109, 469], "geom_energi": 518, "geom_exposur": [101, 104, 108, 109, 434, 469], "geom_imag": [450, 454, 518], "geom_irf": 383, "geom_psf": [101, 104, 108, 109, 469], "geom_tru": 415, "geomconfig": 16, "geometri": [23, 83, 99, 101, 104, 108, 109, 112, 121, 123, 131, 145, 146, 152, 155, 157, 160, 164, 167, 169, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 267, 366, 376, 382, 385, 386, 415, 421, 432, 444, 445, 446, 447, 449, 450, 452, 456, 457, 460, 469, 472, 481, 482, 501, 503, 505, 513, 517, 563, 564], "geomspac": [123, 398], "geq": [52, 53], "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 93, 95, 99, 101, 103, 105, 106, 108, 116, 120, 122, 124, 125, 128, 129, 131, 136, 139, 144, 145, 146, 152, 157, 160, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 203, 209, 211, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 305, 321, 370, 371, 375, 376, 377, 378, 379, 380, 384, 385, 387, 394, 396, 397, 398, 400, 401, 403, 404, 406, 407, 410, 412, 427, 428, 429, 430, 439, 445, 447, 448, 452, 453, 454, 460, 463, 468, 469, 470, 471, 472, 474, 475, 476, 478, 480, 481, 482, 483, 485, 489, 490, 491, 493, 501, 505, 518, 564, 568], "get_altaz": [85, 93, 435], "get_bia": 144, "get_bias_energi": 144, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [187, 188, 190, 196, 199, 200, 472, 473, 481, 482, 517], "get_by_idx": [187, 188, 190, 196, 199, 200, 473, 517], "get_by_pix": [187, 188, 190, 196, 199, 200, 517], "get_cl": [442, 468, 474], "get_coord": [185, 186, 191, 195, 198, 414, 421, 430, 457, 473, 474, 514, 518], "get_dataset": [15, 445, 449, 450, 452, 462, 489, 505], "get_devel_vers": 373, "get_edges_fixed_bin": 139, "get_edges_min_t": 139, "get_edisp_kernel": [145, 146, 416, 421, 469, 481, 509], "get_events_meta_data": 383, "get_excess_map": [15, 489], "get_filenam": [105, 106], "get_flux_point": [15, 121, 123, 394, 416, 445, 489], "get_group_by_idx": 394, "get_hdu": 305, "get_icr": [85, 93, 435], "get_idx": [185, 186, 195, 198, 518], "get_image_by_coord": [187, 188, 190, 196, 199, 200, 473], "get_image_by_idx": [187, 188, 190, 196, 199, 200], "get_image_by_pix": [187, 188, 190, 196, 199, 200], "get_index_list": 186, "get_irfs_featur": [295, 296, 435, 477], "get_kernel": 116, "get_light_curv": 15, "get_mean": 144, "get_observ": [15, 82, 95, 295, 296, 412, 423, 441, 444, 445, 446, 449, 450, 452, 454, 456, 462, 463, 465, 472, 477, 482, 483, 487, 489, 490, 505, 512, 514, 515], "get_ogip_meta": 106, "get_pix": 198, "get_pointing_altaz": [88, 477], "get_pointing_icr": [88, 435, 454, 472, 490], "get_psf_kernel": [155, 157, 160, 436, 481], "get_random_st": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 324, 325, 326, 327, 370], "get_rebinned_axi": 463, "get_resolut": 144, "get_respons": 428, "get_scal": 116, "get_scale_model": [124, 125, 128], "get_spectrum": [187, 188, 190, 196, 199, 200], "get_subcovari": 203, "get_transform": [448, 454, 522, 523], "get_valid_path": 105, "get_wcs_coord_and_weight": 195, "getattr": 398, "getitem": 428, "getlogg": [370, 450, 454, 462, 463, 464, 487], "getter": 371, "getting_start": 390, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 125, 131, 187, 188, 190, 192, 196, 199, 200, 442, 446, 448, 452, 453, 458, 460, 464, 465, 467, 468, 472, 473, 474, 475, 480, 481, 482, 491, 518, 541, 563, 564], "gev2": [19, 467], "gevgevgev1": 442, "gh": [370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400], "git": [86, 255, 370, 371, 373, 375, 377, 378, 396, 403, 432], "github": [371, 373, 374, 375, 376, 378, 379, 388, 390, 396, 399, 400, 403, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 426, 427, 428, 429, 430, 431, 505], "giuliani": 383, "giunti": [411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 432, 435], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 100, 135, 285, 286, 370, 375, 379, 380, 384, 385, 386, 387, 390, 391, 396, 400, 411, 413, 415, 423, 436, 444, 445, 448, 455, 457, 461, 463, 468, 470, 471, 472, 473, 476, 480, 481, 489, 505, 510, 565, 566, 568, 569], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 93, 95, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 169, 170, 173, 175, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 277, 279, 281, 287, 295, 297, 300, 301, 308, 315, 319, 322, 323, 331, 357, 358, 363, 367, 370, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 389, 393, 394, 396, 398, 410, 415, 421, 429, 430, 435, 439, 440, 441, 442, 445, 448, 456, 457, 458, 460, 462, 463, 464, 467, 468, 469, 471, 472, 473, 474, 476, 480, 481, 489, 491, 501, 502, 503, 505, 509, 510, 514, 515, 517, 518, 524, 528, 531, 562, 564, 565, 566, 567], "glast": 481, "glat": [41, 67, 68, 83, 370, 444, 468, 473, 481], "glat_err": 468, "glat_pnt": [454, 480], "glimps": [482, 485], "gll_iem_v06_cutout": [187, 188, 190, 196, 199, 200], "gll_iem_v06_gc": [456, 473, 475, 476, 481], "gll_psc_v16": 61, "gll_psc_v20": 468, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 371, 469], "global": [16, 33, 42, 45, 46, 47, 99, 101, 102, 104, 107, 108, 109, 146, 157, 160, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 205, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 321, 324, 325, 326, 327, 370, 374, 376, 418, 435, 444, 454, 455, 465, 475, 478, 503, 563], "global_dataset": 472, "global_to_loc": 186, "glon": [41, 67, 68, 83, 370, 444, 468, 473, 481], "glon_pnt": [454, 480], "glossari": [390, 432, 501, 518], "glue": 505, "glueviz": 387, "gmodelspatialradialprofiledmburkert": 493, "gmodelspatialradialprofiledmeinasto": 493, "gmodelspatialradialprofiledmzhao": 493, "go": [50, 87, 90, 373, 380, 390, 395, 432, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 487, 489, 490, 491, 493, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 565], "goal": [375, 384, 398, 470], "goe": [41, 52, 360, 370, 389, 400, 458], "gogia": 428, "good": [82, 83, 86, 100, 123, 290, 294, 370, 375, 377, 378, 379, 380, 381, 384, 386, 387, 388, 390, 440, 444, 446, 447, 450, 460, 461, 463, 464, 467, 469, 470, 472, 474, 476, 481, 482, 485, 527, 528, 564, 569], "googl": [87, 90, 390, 399], "got": 480, "gov": [58, 60, 61, 62, 64, 65, 144, 192, 390, 399, 544], "gp": [82, 83, 89, 371, 380, 386, 449, 452, 454, 465, 480, 482], "gpl3": 370, "gps_baseline_110380": [82, 83, 480], "gradient": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "grai": [361, 514, 541], "grand": 370, "grant": [373, 396], "granular": 461, "grayify_colormap": 389, "grb": [461, 464], "great": [375, 384, 389, 427, 485], "greater": [164, 363], "green": [100, 108, 109, 429, 455, 477, 478], "grei": 465, "grep": 405, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 124, 127, 148, 156, 158, 187, 188, 190, 192, 196, 199, 200, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 273, 363, 370, 381, 386, 413, 415, 470, 517, 518, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558], "gridsearch": [205, 470], "gridspec": 357, "gridspec_kw": [448, 454, 462, 464, 531], "ground": [94, 385, 480, 566], "group": [86, 87, 90, 91, 124, 125, 128, 129, 131, 145, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 295, 376, 385, 389, 390, 391, 394, 399, 402, 412, 415, 417, 421, 427, 430, 462, 464, 485, 503, 505, 519, 565], "group_1": 477, "group_2": 477, "group_bi": [87, 90, 394], "group_by_axi": 394, "group_by_label": [91, 477], "group_high_zenith": 477, "group_low_zenith": 477, "group_siz": [139, 463], "group_tabl": [86, 192, 197], "grouped_observ": 477, "grow": [378, 389, 429], "grown": 390, "gr\u00e9aux": 435, "gsfc": [58, 60, 61, 62, 64, 65, 144, 192, 390, 544], "gt": 471, "gtexpcube2": 481, "gti": [82, 83, 87, 88, 89, 99, 100, 101, 104, 108, 109, 121, 123, 125, 128, 161, 197, 255, 376, 379, 380, 383, 384, 385, 394, 413, 415, 416, 418, 431, 435, 436, 456, 463, 464, 469, 472, 480, 482, 483, 501, 564], "gti_1": 502, "gti_2": 502, "gti_t0": 464, "gtimetadata": 397, "gtmktime": [380, 481], "gtobsim": 383, "gtol": 470, "gtpsf": [145, 146, 152, 157, 160, 192, 448, 481], "gtselect": [380, 481], "guarante": [378, 393, 395], "guess": [123, 186, 188, 436], "guid": [373, 386, 388, 402, 403, 404, 407, 430, 485, 505, 520, 530, 551, 561], "guidelin": [370, 374, 407, 429], "guiger": [31, 39], "gyk8pykg": 472, "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 90, 93, 101, 104, 108, 109, 113, 115, 116, 120, 125, 127, 131, 136, 137, 149, 221, 268, 358, 363, 365, 371, 392, 430, 440, 444, 445, 448, 455, 456, 457, 458, 468, 469, 471, 473, 475, 476, 480, 481, 482, 487, 489, 490, 491, 502, 503, 505, 507, 508, 509, 511, 531], "h": [26, 67, 82, 86, 87, 90, 94, 126, 146, 187, 188, 190, 196, 199, 200, 280, 360, 390, 393, 402, 406, 407, 415, 430, 438, 439, 440, 441, 444, 445, 447, 453, 455, 462, 463, 464, 467, 471, 472, 473, 476, 480, 481, 482, 484, 485, 487, 489, 490, 500, 502, 505, 518, 553, 554, 564, 565], "h0": 455, "h05": [45, 49], "h1": 455, "h_0": [455, 567], "h_1": [455, 567], "h_i": 126, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 87, 90, 100, 101, 104, 108, 109, 120, 121, 123, 159, 181, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 208, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 266, 267, 268, 363, 365, 367, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 417, 418, 421, 423, 424, 430, 431, 432, 434, 435, 436, 440, 441, 444, 445, 446, 450, 455, 457, 462, 463, 465, 467, 468, 469, 470, 472, 473, 474, 476, 477, 478, 480, 482, 483, 489, 490, 501, 502, 505, 510, 514, 515, 517, 518, 522, 523, 550, 562, 565, 567], "habilit": 294, "hack": 426, "had": [370, 376, 378, 396, 418, 424, 428, 429], "hadron": [270, 376, 381, 450, 469, 480, 501, 514], "hajlaoui": [418, 421], "hal": 396, "half": [157, 160, 192, 198, 267], "halo": 493, "halv": [132, 285, 436], "halving_coord": 461, "halving_err": 461, "hand": [169, 370, 373, 378, 381, 390, 396, 398, 433, 470, 485, 505], "handbook": [390, 485], "handi": 452, "handl": [3, 16, 84, 103, 121, 122, 123, 194, 288, 369, 371, 374, 382, 383, 384, 386, 391, 393, 394, 397, 399, 402, 404, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 444, 446, 452, 453, 454, 456, 469, 471, 473, 475, 476, 481, 482, 485, 490, 491, 501, 502, 505, 564], "handler_map": 367, "hanna": 436, "hap": 386, "happen": [82, 373, 375, 377, 378, 384, 388, 400, 445, 475, 485, 489, 490, 501, 505, 567], "happi": [373, 377, 390, 410, 411, 430], "hard": [370, 371, 393, 398, 416, 478], "harder": [377, 565], "hardli": 397, "harri": [425, 426], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 116, 124, 147, 205, 237, 270, 271, 280, 287, 390, 470], "has_any_t": [121, 123], "has_energy_axi": [185, 186, 195, 198], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 90], "has_masked_valu": [87, 90], "has_mixin_column": [87, 90], "has_offset_axi": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159], "has_single_spatial_bin": [145, 146, 152, 157, 160], "has_stat_profil": [121, 123], "has_success": [121, 123], "has_ul": [121, 123], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 370, "hasn": [375, 569], "hatch": 465, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 94, 99, 103, 106, 110, 114, 121, 122, 123, 124, 128, 136, 137, 144, 145, 146, 155, 157, 160, 167, 169, 181, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 297, 321, 327, 367, 369, 370, 371, 372, 373, 375, 376, 377, 379, 381, 383, 384, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 415, 418, 421, 423, 424, 427, 429, 430, 431, 432, 433, 435, 436, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 463, 464, 465, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 480, 481, 482, 485, 489, 490, 491, 493, 501, 502, 503, 505, 512, 516, 517, 518, 528, 539, 562, 565, 568, 569], "haven": 406, "hawc": [55, 59, 63, 72, 76, 96, 407, 415, 421, 429, 432, 433, 435, 438, 484, 485, 500, 501, 502, 513, 517, 564], "hawc19_flux_point": [123, 453, 505], "hawc_crab": [123, 453, 505], "hd": 67, "hdr": 397, "hdr_dict": 397, "hdu": [67, 82, 83, 85, 86, 87, 88, 93, 101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 305, 356, 371, 380, 409, 424, 426, 429, 432, 433, 456, 471, 473, 480, 482, 483, 501, 502, 505, 507, 508, 509, 511, 518, 560], "hdu1": 144, "hdu2": 144, "hdu_al": 456, "hdu_band": [121, 123, 145, 146, 152, 157, 160, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200], "hdu_class": [82, 87, 305, 480, 482, 483], "hdu_class_uniqu": 87, "hdu_evt": 456, "hdu_filenam": 482, "hdu_gti": 456, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [145, 146, 148, 152, 156, 157, 158, 160, 187, 188, 199, 200], "hdu_loc": 87, "hdu_nam": 305, "hdu_ob": 82, "hdu_out": [187, 188], "hdu_region": [195, 196], "hdu_tabl": [82, 482], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 480, 482, 483], "hdu_type_uniqu": 87, "hduclas2": 471, "hduclas3": 471, "hduclas4": 471, "hduclasn": 471, "hduindext": [82, 305, 482], "hdulist": [101, 104, 106, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 456, 473, 501], "hduloc": [87, 101], "he": [270, 380, 385], "hea": 385, "header": [82, 83, 84, 85, 86, 87, 88, 90, 93, 99, 100, 101, 103, 104, 105, 106, 108, 109, 121, 122, 123, 144, 145, 146, 152, 157, 160, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 267, 307, 352, 353, 356, 375, 380, 383, 397, 415, 423, 425, 430, 432, 435, 446, 456, 457, 473, 480, 569], "healpi": [186, 369, 377, 379, 387, 401, 402, 404, 413, 421, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 516], "healpix": [13, 186, 187, 188, 190, 196, 199, 200, 369, 377, 379, 384, 421, 429, 473, 481, 517], "healpix_to_imag": 422, "heapsort": [87, 90], "heart": 567, "heasarc": [144, 192], "heatmap": [359, 364], "heavi": [430, 431], "heavier": 452, "heavili": 421, "hegra": [96, 271], "heidelberg": 370, "heidt": 461, "height": [16, 29, 87, 90, 93, 125, 330, 445, 449, 450, 452, 458, 462, 465, 467, 473, 474, 476, 489, 514, 518], "heighten": 461, "helen": 427, "hello": [406, 454], "help": [11, 87, 90, 282, 288, 370, 373, 375, 377, 384, 385, 386, 390, 396, 399, 400, 401, 406, 410, 411, 412, 429, 430, 432, 468, 472, 473, 475, 481, 483, 491, 505, 565], "helper": [13, 305, 310, 377, 379, 384, 385, 386, 389, 400, 406, 412, 413, 414, 415, 421, 423, 426, 428, 429, 435, 436, 458, 468, 474, 475, 514, 563, 570], "henc": [87, 90, 386, 449, 450, 503, 518, 567], "her": 399, "here": [13, 82, 83, 87, 90, 101, 108, 123, 138, 142, 147, 156, 205, 279, 281, 284, 358, 369, 370, 371, 372, 373, 376, 377, 382, 383, 384, 385, 386, 387, 388, 389, 390, 396, 397, 398, 400, 402, 404, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 477, 478, 480, 481, 482, 485, 489, 490, 491, 495, 501, 505, 510, 512, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 565, 566, 567, 569, 570], "hereaft": 456, "herebi": 478, "heritag": 396, "herm": [274, 276, 436], "hess": [16, 55, 67, 82, 83, 86, 88, 90, 95, 96, 100, 108, 109, 124, 129, 139, 140, 147, 149, 167, 173, 205, 277, 295, 296, 371, 378, 379, 384, 386, 390, 399, 402, 406, 409, 411, 414, 425, 426, 429, 430, 438, 441, 442, 444, 445, 446, 450, 452, 454, 455, 463, 465, 467, 468, 469, 470, 472, 477, 478, 481, 483, 484, 487, 489, 490, 493, 502, 503, 505, 507, 508, 509, 511, 512, 514, 515], "hess2": [147, 507], "hess_dl3_dr1_obs_id_020136": [88, 149, 371, 507, 508, 509, 511], "hess_dl3_dr1_obs_id_023523": [83, 86, 502], "hess_dl3_dr1_obs_id_023526": 502, "hess_ecpl": [271, 444], "hess_pl": 271, "hessian": 503, "heterogen": [397, 442, 453], "hfm": 67, "hgp": [67, 80, 81, 120, 390, 415, 427, 429, 430, 500], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 468], "hi": [370, 428], "hi_bnd": 192, "hi_threshold": 144, "hidden": 381, "hide": [13, 375, 392], "hierarch": [13, 295, 337, 379, 381, 397, 436, 505, 517], "hierarchi": [295, 381, 414], "hierarchical_clust": [435, 477], "high": [6, 15, 58, 62, 63, 83, 144, 192, 320, 370, 374, 375, 376, 383, 384, 385, 390, 397, 413, 414, 415, 416, 417, 421, 429, 430, 438, 439, 442, 445, 448, 449, 452, 458, 460, 462, 467, 468, 469, 472, 474, 480, 481, 482, 483, 485, 490, 491, 492, 500, 503, 510, 517, 563, 564, 565, 566], "high_zenith": 477, "higher": [185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 231, 373, 376, 381, 386, 389, 391, 403, 442, 457, 461, 471, 473, 512, 518], "highest": [136, 173, 461, 472, 480, 491], "highli": 476, "highlight": 565, "him": 399, "hint": [397, 448, 503], "hire": [148, 390, 495, 497, 498, 499, 501, 502, 507, 508, 509, 511, 514, 518, 567, 570], "hist": [83, 108, 109, 196, 200, 363, 447, 478], "histogram": [83, 108, 109, 192, 196, 200, 363, 435, 465, 518, 564], "histori": [384, 396, 432], "hli": [383, 416, 417, 421, 432, 438, 443, 485, 504, 564], "hli_spectrum_analysi": 445, "hline": 522, "hoc": 384, "hold": [69, 82, 89, 91, 95, 99, 155, 226, 297, 379, 380, 382, 385, 565, 567], "home": [16, 334, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 529, 531, 537, 540, 553, 559, 560], "homebrew": 387, "homework": 412, "homogen": [87, 90, 418], "honk": 375, "hood": [445, 485, 489], "hook": [373, 432], "hope": 375, "hopefulli": 377, "horizont": [85, 94, 150, 340, 471, 569], "host": 370, "hour": [67, 93, 373, 386, 400, 439, 468, 472, 473, 505], "hover": 371, "how": [16, 19, 20, 82, 83, 84, 85, 98, 103, 122, 123, 125, 127, 167, 188, 198, 200, 321, 327, 372, 375, 378, 382, 384, 386, 387, 389, 392, 393, 396, 397, 400, 401, 402, 406, 407, 410, 411, 412, 415, 416, 423, 425, 428, 429, 430, 435, 436, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 489, 491, 493, 495, 501, 503, 506, 510, 514, 516, 517, 531, 563, 565, 566, 567, 569, 570], "howev": [87, 90, 100, 120, 286, 369, 370, 371, 373, 377, 380, 383, 384, 388, 396, 398, 403, 441, 450, 458, 465, 467, 468, 469, 470, 478, 482, 483, 485, 501, 505, 517, 518, 523, 539, 565], "howto": [390, 432, 433], "hpx": [186, 187, 188, 190, 199, 200, 384, 421, 473, 481], "hpx2wc": [187, 188], "hpx_map": [187, 188], "hpx_pixel": 384, "hpx_reg": 186, "hpxgeom": [121, 185, 187, 188, 416, 421, 432, 481, 516], "hpxmap": [188, 190, 516], "hpxndmap": [263, 421, 516], "hpxsparsemap": 415, "hpxtowcsmap": [187, 188], "hr": [456, 457, 460, 464], "hspace": 467, "hspec": [425, 426, 427], "hst": 220, "hstack": [87, 90, 383], "html": [26, 83, 87, 90, 124, 144, 180, 186, 192, 195, 198, 205, 218, 240, 268, 297, 324, 325, 370, 371, 373, 378, 390, 395, 396, 400, 408, 429, 439, 447, 449, 452, 454, 460, 464, 470, 471, 480, 502, 505, 508, 516, 518, 544], "htmlcov": 400, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 87, 88, 90, 100, 103, 116, 122, 124, 132, 138, 144, 147, 173, 180, 186, 192, 195, 198, 205, 218, 237, 240, 246, 247, 260, 261, 268, 270, 271, 280, 286, 287, 293, 297, 324, 325, 337, 373, 387, 390, 395, 396, 399, 400, 401, 402, 403, 404, 408, 412, 429, 439, 444, 447, 449, 452, 453, 454, 460, 464, 467, 468, 470, 471, 472, 480, 483, 502, 505, 516, 518, 544, 548, 549, 565], "hubert": 430, "hue": 361, "huestart": 361, "huge": [400, 523], "hugovk": 411, "human": [351, 381, 400, 423, 445, 489], "hundr": 482, "hypercub": [473, 517, 518], "hypothes": [277, 435, 505, 567], "hypothesi": [121, 123, 124, 125, 128, 129, 277, 279, 281, 442, 448, 455, 503, 505, 564, 567], "hz": [327, 491], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 293, 294, 295, 297, 299, 303, 305, 308, 309, 310, 315, 317, 318, 321, 324, 325, 326, 327, 329, 330, 333, 336, 338, 339, 341, 345, 347, 348, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 489, 490, 491, 493, 494, 495, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570], "i0": [87, 90], "i1": [87, 90], "i4": 458, "i8": [473, 491], "i_0": [187, 188, 190, 196, 199, 200], "i_hpx": [187, 188, 190, 196, 199, 200], "i_lat": [187, 188, 190, 196, 199, 200], "i_lon": [187, 188, 190, 196, 199, 200], "i_n": [187, 188, 190, 196, 199, 200], "i_scan": 478, "iact": [82, 83, 85, 93, 167, 170, 174, 376, 379, 380, 381, 382, 384, 386, 390, 407, 412, 426, 428, 430, 442, 448, 450, 472, 473, 475, 480, 481, 483, 502, 507, 508, 509, 511, 562, 564], "iactbasicimageestim": [376, 429], "iau": [52, 409, 413], "iau2015": 52, "ic": 541, "icon": 563, "icr": [83, 85, 88, 90, 93, 94, 95, 101, 104, 108, 109, 136, 157, 167, 170, 186, 187, 188, 190, 193, 195, 198, 199, 200, 214, 215, 219, 227, 230, 244, 252, 253, 295, 296, 331, 370, 371, 394, 414, 444, 445, 446, 447, 448, 450, 453, 454, 456, 457, 460, 462, 463, 464, 465, 468, 469, 471, 472, 473, 474, 476, 477, 480, 481, 482, 483, 489, 490, 502, 505, 509, 514, 518, 522, 523, 524, 526, 527, 528], "icrc": 425, "id": [67, 80, 82, 83, 87, 88, 90, 91, 111, 383, 386, 406, 445, 447, 456, 458, 460, 465, 468, 476, 480, 481, 482, 483, 489, 502], "id_obs_vela": 465, "idea": [375, 378, 385, 389, 390, 391, 445, 471, 477, 481, 489], "ideal": [372, 373, 380, 384, 385, 394, 398, 399, 442, 481], "idempot": [16, 84, 103, 122], "ident": [345, 373, 385, 432, 444, 446], "identif": [67, 376, 468], "identifi": [67, 88, 102, 107, 186, 255, 370, 380, 381, 383, 386, 395, 396, 400, 416, 448, 456, 461, 468, 469, 476, 480, 482, 504], "identified_object": 468, "idx": [83, 87, 90, 91, 99, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 240, 447, 456, 464, 468, 470, 473, 517], "idx1": 470, "idx2": 470, "idx_glob": 186, "idx_loc": 186, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 396, 440, 475, 476, 501, 564], "iem": [475, 481], "iem_minus_iem": 473, "iem_plus_iem": 473, "iem_times_two": 473, "ignacio": 431, "ignasi": 425, "ignor": [11, 16, 84, 87, 90, 100, 103, 122, 151, 161, 190, 208, 210, 226, 297, 309, 371, 423, 444, 458, 464, 465, 469, 474, 489, 505, 565], "ii": [203, 427], "ij": 203, "ilist": 186, "illustr": [108, 109, 371, 380, 382, 383, 384, 386, 389, 446, 448, 453, 458, 469, 472, 473, 475, 476, 481, 495, 501, 514, 515, 522, 523, 531, 563], "illustrate_colormap": 389, "iloc": [87, 90], "im": [359, 470], "imag": [101, 104, 108, 109, 116, 126, 127, 136, 146, 147, 148, 154, 156, 157, 158, 160, 162, 172, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 267, 289, 292, 334, 356, 358, 359, 360, 361, 365, 370, 378, 379, 381, 386, 387, 390, 391, 400, 402, 407, 409, 410, 411, 414, 415, 416, 422, 426, 427, 428, 429, 430, 438, 449, 450, 452, 458, 459, 472, 474, 476, 480, 490, 491, 501, 502, 503, 510, 513, 514, 515, 516, 517, 518, 562, 563, 564, 570], "image_analysi": [390, 410], "image_err": 127, "image_fitting_with_sherpa": [390, 431], "image_pip": 429, "image_profil": 428, "imagehdu": [187, 188, 199, 200], "imagenorm": [360, 361], "imageprofil": 127, "images_t": 454, "imagin": 565, "img": [358, 473], "iminuit": [205, 369, 387, 396, 421, 423, 430, 434, 435, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 562], "immut": 218, "impact": [377, 383, 387, 482], "imperfect": 472, "implement": [19, 20, 101, 104, 108, 109, 138, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 280, 286, 370, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 428, 429, 431, 432, 435, 436, 441, 449, 461, 463, 467, 468, 472, 473, 474, 493, 501, 503, 505, 510, 511, 512, 550, 562, 563, 564, 565, 566, 569], "implent": 370, "impli": [231, 370, 389, 501, 564], "implic": 392, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 510], "implicitli": 472, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 100, 101, 103, 104, 108, 109, 110, 113, 114, 115, 116, 120, 121, 122, 123, 125, 127, 129, 131, 136, 137, 139, 140, 142, 144, 146, 147, 148, 149, 155, 157, 167, 170, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 205, 209, 211, 212, 213, 216, 220, 222, 223, 224, 228, 232, 234, 235, 237, 238, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 271, 277, 280, 286, 287, 295, 296, 317, 327, 337, 349, 350, 355, 358, 360, 361, 363, 365, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 405, 406, 417, 427, 429, 434, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 487, 489, 490, 491, 494, 495, 497, 498, 499, 501, 502, 503, 505, 507, 508, 509, 511, 512, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 565, 566, 567, 569], "importantli": [394, 430, 441, 565], "importerror": [87, 90], "impos": [434, 439, 514], "improv": [107, 277, 372, 374, 375, 376, 378, 379, 380, 384, 385, 386, 387, 388, 389, 390, 395, 400, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 473, 480, 505, 515, 522], "imshow": [101, 104, 155, 188, 200, 358, 364, 428, 473, 491], "in2p3": [396, 480], "in_memori": [88, 505], "in_memory_gener": 91, "in_safe_data_rang": [101, 104, 108, 109], "inaccur": 370, "incex": [16, 84, 103, 122], "incid": [376, 564], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 103, 122, 128, 155, 161, 163, 164, 170, 171, 175, 185, 186, 195, 198, 241, 305, 369, 370, 376, 378, 381, 382, 383, 384, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 411, 413, 418, 429, 434, 435, 436, 439, 453, 455, 456, 458, 464, 467, 468, 470, 472, 474, 475, 476, 480, 482, 493, 495, 501, 503, 504, 515, 517, 562, 566, 569], "include_irf": [83, 88, 502, 505], "include_ssc": 241, "inclus": [83, 195, 384], "incompat": [370, 395, 423], "incomplet": [370, 400, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "inconsist": [418, 424, 434, 435], "inconveni": [389, 430], "incorpor": [386, 390, 398, 564], "incorrect": [83, 370, 397, 405, 414, 432, 433, 472, 478], "incorrectli": [432, 474], "increas": [136, 162, 192, 197, 219, 227, 230, 370, 379, 397, 463, 472, 501, 522], "increment": [19, 20, 26, 116, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 384, 473, 517], "ind": [186, 198, 218, 240], "inde": [456, 523], "indefinit": 377, "indent": [16, 84, 103, 122], "independ": [67, 124, 128, 138, 294, 308, 370, 376, 380, 381, 382, 383, 384, 385, 388, 391, 392, 393, 394, 396, 402, 411, 421, 439, 445, 462, 468, 473, 474, 475, 476, 482, 489, 490, 500, 505, 510, 564, 568], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 90, 91, 99, 100, 101, 104, 108, 109, 120, 121, 123, 124, 125, 129, 130, 131, 135, 144, 145, 146, 152, 155, 157, 160, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 205, 209, 211, 212, 213, 216, 218, 220, 222, 223, 224, 228, 234, 235, 237, 238, 240, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 271, 280, 305, 319, 324, 373, 376, 379, 380, 381, 382, 385, 386, 393, 394, 395, 399, 402, 412, 426, 428, 429, 435, 436, 440, 441, 442, 444, 445, 447, 448, 449, 452, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 480, 481, 482, 483, 489, 490, 491, 503, 505, 516, 517, 518, 521, 522, 523, 524, 526, 527, 528, 529, 531, 533, 535, 536, 537, 542, 543, 544, 552, 553, 554, 555, 556, 557, 558, 559, 560], "index1": [212, 256, 532, 546], "index2": [212, 256, 532, 546], "index_1": [259, 260, 261, 547, 548, 549], "index_2": [259, 260, 261, 547, 548, 549], "index_arrai": [87, 90], "index_column": [87, 90], "index_data": 191, "index_error": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "index_mod": [87, 90], "index_scan": 478, "indexerror": [91, 99, 240], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 99, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 370, 432, 447, 457, 461, 472, 473, 477, 478, 482, 483, 505, 517, 518, 564], "indico": 379, "indirect": [467, 493], "individu": [87, 90, 107, 118, 126, 366, 376, 382, 383, 385, 390, 393, 394, 398, 441, 444, 447, 455, 458, 463, 468, 469, 470, 472, 475, 476, 491, 501, 505, 510, 564], "indiviud": 392, "indxschm": [187, 188, 199, 200], "ineffici": [87, 90, 373], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 230, 398, 478], "infer": [121, 123, 185, 186, 187, 188, 190, 198, 199, 200, 220, 371, 489, 517], "inferno": 473, "infil": 370, "infin": 478, "influenc": 478, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 90, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 148, 154, 156, 158, 279, 281, 305, 371, 385, 386, 390, 399, 405, 415, 416, 418, 425, 426, 429, 445, 449, 450, 452, 456, 463, 467, 468, 469, 473, 481, 482, 483, 485, 487, 489, 565], "info_dict": [101, 104, 108, 109, 279, 281, 363, 418, 436, 469], "info_t": [99, 441, 444, 445, 447, 452, 464, 469, 475, 505], "infodict": 363, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 93, 98, 99, 100, 101, 103, 104, 108, 109, 121, 122, 123, 144, 148, 154, 156, 158, 159, 162, 167, 168, 174, 193, 205, 212, 213, 214, 215, 216, 217, 219, 220, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 247, 248, 252, 253, 254, 256, 259, 260, 261, 263, 264, 267, 268, 282, 288, 305, 321, 352, 353, 370, 374, 375, 380, 382, 383, 384, 385, 386, 393, 394, 397, 398, 400, 405, 406, 407, 415, 417, 418, 421, 423, 429, 435, 436, 440, 442, 445, 446, 453, 456, 457, 460, 461, 469, 470, 472, 473, 476, 480, 481, 482, 483, 489, 490, 491, 500, 501, 502, 503, 505, 518, 564, 565, 568], "infrar": 220, "infrastructur": [400, 421, 432, 435], "ingredi": [394, 467], "inherit": [87, 90, 280, 370, 380, 382, 385, 394, 397, 398, 416, 421, 428, 469, 471, 516, 517], "init": [19, 20, 26, 87, 90, 120, 125, 131, 164, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 309, 321, 382, 418, 433, 435, 436, 458, 468, 469, 491], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 103, 121, 122, 123, 131, 188, 191, 192, 218, 240, 242, 243, 297, 375, 380, 381, 382, 386, 423, 439, 447, 450, 452, 453, 455, 456, 457, 460, 465, 468, 469, 473, 476, 489, 490, 491, 500, 502, 550, 564], "initialis": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 321, 324, 325, 326, 327, 370, 392, 478], "inject": [447, 460], "inlin": [375, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 483, 489, 490, 491], "inner": [44, 52, 53, 125, 162, 172, 253, 450, 491, 528], "inner_height": [514, 518], "inner_width": [514, 518], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 101, 103, 104, 107, 116, 118, 120, 121, 122, 123, 124, 127, 128, 131, 132, 133, 134, 135, 137, 140, 145, 146, 148, 155, 156, 157, 158, 159, 160, 162, 164, 168, 170, 172, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 209, 211, 218, 232, 240, 266, 267, 268, 280, 297, 308, 318, 321, 340, 342, 363, 365, 376, 378, 380, 381, 382, 383, 384, 385, 386, 391, 406, 416, 421, 424, 431, 435, 447, 456, 457, 465, 473, 478, 503, 517, 518, 566], "input_map": [110, 114], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 435, "insensit": 194, "insert": [87, 90, 91, 99, 240, 396, 416, 568], "insert_row": [87, 90], "inset": 422, "insid": [50, 83, 101, 108, 113, 115, 144, 170, 186, 187, 188, 190, 195, 198, 199, 200, 218, 240, 255, 359, 363, 370, 371, 384, 386, 394, 421, 439, 444, 447, 449, 452, 454, 460, 464, 469, 472, 474, 475, 476, 480, 482, 502, 512, 514, 515, 518], "inside_geom": 474, "insight": 405, "inspect": [382, 386, 406, 444, 446, 452, 456, 457, 470, 473, 475, 480, 481], "inspir": [370, 394], "instal": [87, 90, 369, 370, 373, 377, 378, 379, 387, 399, 400, 401, 404, 406, 407, 410, 411, 421, 425, 428, 429, 430, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 485, 489, 490, 491, 505, 565], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 103, 118, 122, 123, 124, 126, 128, 129, 159, 161, 169, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 315, 321, 357, 359, 360, 361, 364, 366, 370, 376, 381, 382, 385, 386, 392, 394, 397, 421, 442, 444, 447, 458, 468, 470, 472, 474, 475, 476, 491, 495, 505, 517, 518, 541], "instanti": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 187, 188, 190, 192, 199, 200, 381, 386, 441, 445, 468, 469, 473, 476, 478, 489], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 101, 103, 104, 108, 109, 112, 122, 174, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 370, 371, 373, 375, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 398, 399, 401, 402, 404, 411, 414, 417, 418, 431, 435, 440, 446, 452, 456, 460, 462, 464, 465, 468, 469, 471, 472, 473, 476, 478, 502, 509, 510, 517, 518, 565], "instruct": [370, 379, 387, 399, 401, 402, 410, 421, 425, 429, 456, 480], "instrument": [6, 83, 94, 107, 147, 151, 152, 226, 370, 380, 381, 382, 383, 385, 390, 394, 402, 406, 415, 418, 430, 431, 432, 438, 441, 442, 444, 445, 448, 452, 459, 465, 469, 470, 471, 472, 475, 476, 477, 478, 480, 481, 483, 485, 489, 490, 501, 502, 503, 507, 509, 511, 562, 563, 564], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 92, 93, 101, 102, 103, 104, 107, 108, 109, 111, 116, 118, 122, 123, 124, 125, 128, 129, 131, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 167, 170, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 273, 275, 277, 279, 280, 281, 285, 286, 287, 293, 297, 308, 309, 315, 319, 321, 324, 325, 326, 327, 329, 330, 357, 363, 370, 384, 428, 450, 470, 495], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 212, 213, 216, 220, 222, 223, 224, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 510, 522], "int_flux": 467, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 90, 91, 92, 99, 101, 104, 108, 109, 121, 123, 124, 125, 128, 131, 136, 137, 145, 146, 152, 157, 160, 163, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 209, 211, 218, 240, 297, 315, 321, 370, 376, 384, 450, 517], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 100, 101, 104, 108, 109, 121, 123, 126, 128, 135, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 162, 187, 188, 190, 192, 196, 199, 200, 201, 202, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 273, 308, 369, 377, 379, 381, 383, 384, 385, 387, 388, 390, 394, 396, 409, 411, 412, 416, 417, 421, 426, 427, 428, 429, 430, 431, 432, 435, 444, 446, 447, 449, 464, 467, 468, 469, 473, 474, 476, 491, 493, 501, 503, 509, 524, 544], "integral_error": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 388, 418], "integral_flux_imag": 422, "integrate_geom": [214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267, 421, 434, 436], "integrate_log_log": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159], "integrate_spectrum": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 412, 418], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 90, 297, 380, 398, 471], "intens": [187, 188, 190, 196, 199, 200, 205, 231, 380, 473, 501], "intent": 375, "interact": [19, 20, 87, 90, 157, 160, 187, 188, 190, 196, 199, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 369, 370, 371, 379, 380, 381, 382, 386, 390, 393, 406, 415, 440, 452, 460, 470, 473, 475, 476, 485, 489, 490, 514, 517, 541, 565], "interchang": 517, "interest": [113, 115, 124, 128, 205, 277, 375, 383, 384, 388, 390, 400, 442, 452, 456, 458, 468, 469, 470, 472, 474, 477, 480, 481, 491, 502, 503, 541, 564, 567, 568], "interfac": [6, 11, 15, 19, 20, 87, 90, 203, 205, 208, 209, 210, 211, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 374, 375, 376, 380, 382, 383, 385, 387, 388, 389, 390, 411, 414, 416, 417, 418, 421, 425, 428, 429, 435, 438, 440, 445, 448, 449, 452, 460, 462, 470, 476, 480, 485, 490, 491, 492, 505, 516, 541, 562, 563, 564, 565], "intermedi": [198, 379, 386, 396, 406, 441, 463], "intern": [15, 19, 20, 26, 87, 90, 121, 123, 132, 133, 134, 164, 170, 195, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 273, 297, 309, 370, 382, 384, 386, 389, 394, 421, 423, 432, 435, 439, 445, 452, 461, 462, 469, 471, 473, 480, 483, 489, 501, 505, 560], "interp": [19, 20, 149, 187, 188, 190, 192, 196, 197, 199, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 310, 365, 393, 398, 434, 436, 447, 453, 457, 460, 464, 471, 472, 473, 476, 481, 482, 483, 517, 518, 541, 542], "interp1": 473, "interp1d": 310, "interp2": 473, "interp_by_coord": [187, 188, 190, 196, 199, 200, 267, 432, 473], "interp_by_pix": [187, 188, 190, 196, 199, 200, 263, 264, 473], "interp_kwarg": [68, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 220, 263, 264, 267, 268, 370, 471, 481], "interp_map": [187, 188, 190, 196, 199, 200], "interp_missing_data": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159], "interp_param": 370, "interp_scal": [100, 278, 310], "interp_to_geom": [187, 188, 190, 196, 199, 200, 418, 434, 473, 481, 505], "interp_weight": 186, "interpol": [6, 26, 93, 100, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 167, 186, 187, 188, 190, 192, 196, 197, 199, 200, 220, 232, 242, 243, 263, 264, 266, 267, 268, 278, 309, 310, 311, 369, 381, 382, 383, 411, 416, 421, 423, 426, 429, 431, 432, 433, 434, 435, 436, 444, 457, 471, 472, 476, 481, 482, 505, 513, 517, 550], "interpolatedunivariatesplin": 266, "interpret": [90, 101, 104, 126, 136, 137, 188, 192, 198, 199, 200, 315, 388, 398, 473, 503, 518], "intersect": [89, 170, 171, 175, 195, 384, 463], "interspers": 375, "interstellar": [45, 456], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 90, 91, 99, 100, 102, 107, 123, 128, 168, 192, 197, 205, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 379, 380, 384, 385, 388, 394, 402, 415, 417, 418, 421, 430, 431, 436, 462, 464, 470, 473, 482, 490, 502, 517, 564, 567], "interval_edg": 197, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 241, 287, 381, 385], "intrinsic_model": 440, "intro_map": 430, "introduc": [19, 20, 187, 188, 190, 192, 196, 199, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 370, 377, 378, 380, 382, 383, 384, 385, 387, 390, 392, 395, 398, 412, 414, 415, 417, 418, 421, 423, 424, 428, 429, 430, 432, 435, 436, 455, 461, 472, 476, 518, 523, 565, 568], "introduct": [373, 391, 392, 393, 411, 415, 416, 417, 418, 442, 445, 476, 482, 483, 489, 490, 494], "introductori": 461, "introspect": 297, "intuit": [391, 568], "inufja3p": 472, "invalid": [356, 370, 384, 397, 398, 421, 456, 483], "invalid_pixel": 474, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 198, 212, 213, 216, 220, 222, 223, 224, 228, 231, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 279, 280, 281, 319, 326, 383, 456, 474, 476, 478, 541], "inverse_al": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "inverse_cdf": 456, "inversecdf": 383, "inversecdfsampl": [383, 413], "inversecompton": [241, 541], "invert": [90, 186, 198, 491], "invest": 373, "investig": 455, "involv": [87, 90, 101, 104, 108, 109, 370, 375, 384, 386, 388, 392, 448, 565], "io": [13, 83, 86, 87, 90, 124, 180, 190, 195, 205, 268, 373, 379, 390, 400, 412, 415, 427, 431, 435, 456, 470, 471, 473, 480, 502, 505, 516, 518], "iop": [100, 286], "iopscienc": [100, 286], "ipix": 186, "ipynb": [378, 390, 412, 415, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 487, 489, 490, 491, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "ipynb_to_galleri": 370, "ipython": [87, 90, 369, 370, 386, 387, 401, 405, 413, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 485, 489, 490, 491, 504, 565], "ipython3": 403, "ipywidget": 473, "irap": 390, "irf": [6, 82, 88, 95, 101, 102, 104, 107, 108, 109, 110, 111, 112, 114, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 173, 174, 176, 177, 178, 180, 182, 183, 186, 195, 198, 255, 296, 370, 371, 376, 380, 381, 382, 383, 386, 389, 390, 391, 392, 398, 402, 410, 412, 415, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 452, 456, 457, 460, 462, 464, 472, 474, 477, 478, 479, 481, 482, 483, 485, 489, 490, 501, 502, 505, 507, 508, 509, 511, 512, 517, 562, 563, 564], "irf_dict": 161, "irf_dl3_hdu_specif": 471, "irf_fil": [88, 142, 146, 147, 148, 157, 439, 447, 460, 464, 471, 480], "irf_filenam": [456, 457, 471, 480], "irf_map": [145, 146, 152, 157, 160], "irf_path": 456, "irfmap": [145, 146, 157, 160, 402, 418, 505], "irfmetadata": 397, "irfmodel": 381, "irfs1": 480, "irfs2": 480, "irfs_path": 82, "irfstack": [418, 427], "irregular": [186, 198, 517], "irrespect": [383, 452, 473, 517], "is_align": [186, 192, 197, 198], "is_all_point_sky_region": 195, "is_all_same_energy_shap": 99, "is_all_same_shap": 99, "is_all_same_typ": 99, "is_allclos": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200], "is_allski": [185, 186, 195, 198], "is_bkg": 106, "is_contigu": [197, 473], "is_convertible_to_flux_sed_typ": [121, 123], "is_energy_axi": 192, "is_energy_depend": [214, 215, 217, 219, 225, 227, 229, 230, 231, 232, 233, 242, 244, 248, 252, 253, 254, 257, 263, 266, 267, 269, 434, 476], "is_fixed_rad_max": 159, "is_flat": [185, 186, 191, 195, 198], "is_hpx": [186, 195, 198], "is_imag": [185, 186, 195, 198], "is_mask": [187, 188, 190, 196, 199, 200], "is_norm": [19, 20, 100, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 398, 423, 436, 440, 441, 444, 445, 446, 447, 449, 452, 453, 460, 464, 468, 470, 476, 490, 491, 541, 550], "is_norm_spectral_model": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 421, 476], "is_nul": 473, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 421], "is_region": [186, 195, 198], "is_regular": [186, 195, 198], "is_ul": [67, 121, 123, 421, 436, 445, 468, 491], "is_unidimension": 191, "isf": [470, 567], "isinst": [370, 381, 384, 393, 397, 398], "ism": [52, 53, 541], "isn": [373, 377, 384, 386, 389, 400, 454, 565], "isnan": [473, 474], "iso": [88, 123, 197, 202, 435, 464, 475, 481, 517, 559], "iso_p8r2_source_v6_v06": [475, 481], "isol": [384, 401, 474], "isot": [351, 569], "isotherm": [22, 493], "isotrop": [47, 215, 272, 475], "issu": [19, 20, 26, 87, 90, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 370, 371, 373, 378, 379, 381, 382, 384, 387, 390, 395, 396, 397, 398, 399, 402, 403, 404, 411, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 454, 474, 480, 501, 505, 565, 566], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 91, 99, 194, 240, 390, 397], "iter": [87, 90, 91, 99, 121, 123, 187, 188, 190, 191, 192, 194, 196, 197, 199, 200, 240, 373, 376, 378, 386, 422, 448, 464], "iter_by_axi": [121, 123, 187, 188, 190, 196, 199, 200], "iter_by_axis_data": 196, "iter_by_coord": 413, "iter_by_edg": [192, 197], "iter_by_imag": [187, 188, 190, 196, 199, 200, 430], "iter_by_image_data": [187, 188, 190, 196, 199, 200, 473], "iter_by_image_index": [187, 188, 190, 196, 199, 200], "iter_by_pix": 413, "iter_with_reshap": 191, "itercol": [87, 90], "iterrow": [87, 90], "itertool": 470, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 101, 104, 108, 109, 121, 123, 163, 164, 173, 186, 192, 194, 212, 213, 216, 219, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 277, 370, 373, 376, 379, 380, 382, 385, 386, 387, 389, 394, 396, 397, 400, 403, 421, 435, 436, 441, 445, 446, 449, 456, 457, 461, 462, 463, 468, 470, 472, 473, 474, 475, 476, 478, 489, 491, 494, 510, 512, 514, 516, 517, 518, 564, 567], "itself": [87, 90, 369, 370, 385, 396, 441, 462, 463, 465, 478, 565], "ivoa": 436, "j": [19, 20, 23, 101, 108, 126, 138, 280, 371, 373, 501], "j0001": [468, 491], "j0002": [468, 491], "j0003": [468, 491], "j0006": 468, "j0007": 491, "j0008": [468, 491], "j0009": 491, "j0010": 468, "j0013": 468, "j0021": 468, "j0022": 468, "j0025": 468, "j0031": 468, "j0349": 468, "j0521": 444, "j0534": [468, 491], "j0633": 491, "j0835": [442, 491], "j0851": 468, "j1036": 468, "j1104": [468, 491], "j1506": 442, "j1507": 442, "j1513": 468, "j1514": 468, "j1555": 491, "j1653": 468, "j1713": 441, "j1731": 475, "j1732": 475, "j1741": 475, "j1744": 475, "j1745": 475, "j1746": 475, "j1747": 475, "j1748": 475, "j1753": 475, "j1800": 475, "j1801": 475, "j1802": 475, "j1809": 475, "j1811": 475, "j1824": 468, "j1825": 455, "j1843": 67, "j1844": 67, "j2028": 468, "j2158": 468, "j2347": 491, "j2350": 491, "j2351": 491, "j2352": 491, "j2356": 491, "j2357": [468, 491], "j2358": [468, 491], "j2359": [468, 491], "j_": 23, "jackson": [87, 90], "jacob": [411, 430], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 417], "jalel": [418, 421], "jan": [375, 376, 379, 382, 387, 391, 408], "jana": 436, "januari": [377, 379, 395], "jargon": 402, "jason": 411, "javascript": [87, 90], "jax": 388, "jbernet": 436, "jean": [429, 430], "jeffrei": 478, "jeltema": 493, "jep": 375, "jet": 361, "jfact": 467, "jfact_decai": 467, "jfact_map": 467, "jfactor": [19, 20, 435], "jfactori": 467, "jj": 203, "jk": [101, 108, 501], "jkl": 501, "jl": 501, "jo": [87, 90], "job": [92, 124, 125, 128, 131, 163, 423], "johann": [414, 421, 425, 426, 427, 428, 429, 430], "john": [87, 90], "join": [372, 381, 382, 480], "joint": [99, 108, 109, 118, 129, 138, 140, 205, 277, 378, 379, 382, 386, 390, 392, 402, 411, 412, 414, 415, 430, 431, 438, 441, 442, 444, 445, 446, 448, 455, 459, 464, 469, 470, 472, 476, 477, 478, 481, 485, 489, 503, 505, 562, 563, 564], "joint_fit": 465, "joint_result": 465, "jointli": [477, 482], "jonathan": [425, 426], "jose": [421, 423, 429], "joshi": 421, "jos\u00e9": [378, 386, 390, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 429, 430, 431], "journal": 396, "jouvin": [411, 413, 414, 415, 418, 426, 427, 428, 429, 430], "jqueri": [87, 90], "jskwarg": [87, 90], "json": [16, 84, 103, 122, 399, 423, 425, 429], "json_data": [16, 84, 103, 122], "json_encod": 16, "json_schema": [16, 84, 103, 122], "jsonschema": [387, 414, 415], "jsviewer": [87, 90, 454], "juan": 436, "jul": [376, 385, 387, 389, 407, 408], "juli": [376, 379, 384, 386, 387, 389, 393, 395, 397, 463], "julia": 436, "julian": 569, "julien": [427, 428, 429], "jun": [384, 386, 387, 392, 393], "june": [384, 388, 408], "junior": [66, 390], "jupyt": [369, 377, 386, 387, 390, 401, 402, 404, 405, 407, 412, 427, 428, 429, 431, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 565], "jupyterlab": [369, 387, 390, 406, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "jupytext": 390, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 147, 345, 370, 371, 372, 373, 375, 378, 380, 384, 386, 387, 388, 390, 399, 400, 401, 403, 429, 431, 440, 444, 445, 447, 452, 454, 456, 461, 462, 463, 465, 469, 473, 481, 482, 489, 491, 502, 518, 565], "juypter": 386, "jyear": [87, 90], "k": [19, 33, 52, 53, 101, 108, 194, 216, 266, 321, 442, 444, 446, 468, 470, 473, 475, 481, 501, 518, 522, 534, 541, 552], "kai": [429, 430], "kaori": 413, "kaspi": [31, 39, 45], "katrin": [398, 434, 435, 436], "kb": 378, "keep": [13, 87, 90, 99, 121, 155, 187, 188, 190, 196, 199, 200, 205, 370, 371, 373, 375, 376, 377, 378, 384, 387, 388, 389, 390, 393, 394, 419, 429, 449, 450, 455, 460, 470, 475, 481], "keep_byteord": [87, 90], "keep_column": [87, 90], "keep_mc_id": [102, 107], "keepdim": [155, 157, 160, 187, 188, 190, 196, 199, 200, 410, 415, 472], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 82, 84, 87, 89, 90, 101, 103, 104, 108, 109, 116, 122, 131, 138, 194, 205, 333, 338, 339, 356, 378, 380, 387, 392, 394, 397, 407, 430, 440, 469, 476, 531], "kept": [89, 101, 104, 108, 109, 121, 123, 124, 128, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 370, 376, 390, 394, 440, 503], "kernel": [101, 104, 108, 109, 116, 120, 126, 127, 131, 144, 145, 146, 155, 157, 160, 162, 167, 172, 174, 177, 188, 198, 200, 376, 397, 416, 417, 422, 427, 431, 432, 448, 450, 465, 472, 473, 474, 481, 491, 501, 505, 509], "kernel_width": [131, 448, 454], "kernelbackgroundestim": 417, "kernelbackgroundmapestim": 391, "kev": [106, 131, 192, 448, 469, 518], "keyboard": 406, "keyerror": [90, 194, 394], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 94, 100, 101, 103, 104, 108, 109, 122, 123, 125, 126, 139, 140, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 205, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 278, 280, 309, 317, 318, 339, 351, 353, 354, 357, 358, 359, 363, 364, 365, 366, 367, 397, 417, 421, 424, 432, 433, 446, 456, 457, 469, 473, 482, 503, 518, 529], "kg": 52, "khelifi": [413, 415, 418, 421, 424, 428, 429, 430, 432, 433], "kh\u00e9lifi": [396, 432, 434, 435, 436], "kind": [87, 90, 268, 345, 381, 382, 383, 388, 389, 393, 396, 430], "kinet": 44, "king": [156, 414, 425, 426, 427, 428, 429, 430, 471, 511], "kirsti": [434, 435, 436], "kl": 501, "klepser": 425, "km": [32, 37], "km2": 480, "km2a": [57, 70], "know": [371, 373, 375, 379, 384, 386, 387, 394, 400, 412, 429, 430, 431, 454, 457, 467, 471, 472, 473, 480, 482, 483, 565], "knowledg": [398, 406, 442, 447, 453, 455, 458, 460, 462, 470, 472, 473, 475, 478], "known": [279, 281, 297, 383, 444, 448, 450, 455, 462, 472, 473, 474, 491, 505, 515, 565, 566, 567], "koenig": 280, "konig": 280, "konrad": 436, "kornecki": 436, "kovalev": 461, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 241, 297, 300, 467, 468, 499, 541], "kurt": 436, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 90, 100, 101, 104, 108, 109, 123, 124, 125, 126, 128, 139, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 169, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 278, 309, 320, 345, 357, 358, 359, 362, 364, 365, 366, 367, 370, 381, 397, 398, 434, 442, 456, 465, 472, 483, 553], "kwargs_ax": [363, 450, 452], "kwargs_background": [108, 109], "kwargs_colorbar": [141, 142, 144, 147, 148, 149, 154, 156, 158, 200, 358], "kwargs_count": [108, 109], "kwargs_excess": [108, 109], "kwargs_extens": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 455], "kwargs_fit": [108, 109, 363], "kwargs_fp": 100, "kwargs_hist": [363, 450, 452], "kwargs_list": 194, "kwargs_model": 100, "kwargs_npred_sign": [108, 109], "kwargs_point": [195, 218, 240, 446], "kwargs_posit": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 455], "kwargs_residu": [100, 108, 109], "kwargs_saf": [108, 109], "kwargs_spati": [101, 104, 108, 109, 452, 490], "kwargs_spectr": [101, 104, 108, 109, 452, 490], "kwargs_spectrum": [100, 108, 109], "l": [23, 26, 51, 54, 100, 101, 108, 109, 167, 367, 371, 384, 393, 396, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 460, 464, 465, 468, 469, 470, 472, 473, 474, 476, 477, 478, 480, 481, 489, 490, 491, 501, 505, 518, 541, 564, 566, 567, 568], "l06": [48, 495], "l8mwpd_c": 476, "l_": [52, 53], "l_0": [51, 498, 522, 523], "l_snr": 44, "la": 427, "lab": [396, 406, 429], "label": [91, 189, 192, 197, 218, 240, 295, 358, 359, 364, 367, 370, 371, 374, 379, 383, 384, 399, 400, 421, 423, 432, 433, 435, 439, 440, 442, 444, 446, 450, 452, 453, 457, 458, 461, 462, 463, 465, 467, 470, 473, 476, 477, 478, 491, 498, 499, 507, 531, 537, 540, 541, 545], "label_axi": [189, 473], "label_axis2": 473, "labelcolor": 439, "labelmapaxi": [421, 435], "lack": [194, 385, 465], "lafferti": [409, 564], "lafferty1994": 564, "lai": 474, "lambda": [16, 67, 223, 224, 280, 363, 468, 480, 535, 567], "lambda_": [223, 224, 277, 442, 444, 452, 535, 537], "lancast": 138, "land": 400, "langl": 19, "languag": [377, 389], "laplac": [230, 524], "lar": [386, 410, 411, 412, 428, 429, 430, 433, 435], "larg": [67, 87, 90, 187, 188, 190, 196, 199, 200, 263, 265, 267, 370, 373, 375, 376, 384, 390, 391, 411, 421, 430, 431, 436, 439, 444, 450, 463, 468, 474, 480, 481, 482, 491, 501, 503, 505, 506, 512, 518, 524, 562, 565, 570], "large_scale_compon": [67, 468], "larger": [27, 130, 145, 146, 152, 157, 160, 277, 286, 371, 378, 389, 435, 439, 441, 444, 469, 472, 473, 474, 478, 502, 518, 524, 566, 567], "largest": [101, 104, 108, 109, 200, 370], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 93, 99, 187, 188, 189, 190, 192, 196, 199, 200, 240, 327, 367, 377, 380, 382, 392, 396, 399, 400, 402, 404, 410, 411, 461, 512, 514], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 78, 83, 86, 90, 93, 95, 101, 104, 108, 110, 114, 120, 124, 125, 127, 131, 145, 146, 152, 157, 160, 163, 187, 188, 190, 193, 196, 198, 199, 200, 214, 215, 219, 226, 227, 230, 242, 244, 252, 253, 255, 257, 263, 265, 267, 272, 277, 299, 300, 303, 325, 370, 371, 378, 379, 380, 381, 382, 383, 389, 390, 393, 400, 402, 407, 410, 415, 428, 429, 430, 438, 442, 445, 448, 449, 450, 452, 454, 458, 462, 463, 468, 469, 471, 472, 473, 474, 475, 476, 477, 484, 485, 489, 490, 491, 493, 500, 501, 502, 503, 505, 510, 517, 518, 522, 523, 524, 525, 526, 527, 528, 562, 569], "lat_0": [219, 227, 230, 244, 252, 253, 267, 385, 393, 449, 452, 453, 455, 456, 457, 460, 462, 468, 469, 475, 476, 481, 489, 490, 522, 523, 524, 526, 527, 528, 529], "lat_0_err": 455, "lat_pnt": [299, 303], "lat_rang": 325, "lat_t": [299, 303], "later": [370, 375, 376, 377, 381, 382, 383, 386, 387, 388, 389, 390, 391, 409, 411, 421, 422, 424, 425, 431, 440, 444, 446, 452, 453, 469, 472, 473, 476, 481, 491, 501], "latest": [124, 180, 268, 297, 373, 377, 390, 395, 396, 403, 432, 439, 447, 449, 452, 453, 454, 460, 464, 470, 480, 502, 505, 518], "latex": [370, 371], "latex_inlin": 435, "latitud": [93, 185, 186, 187, 188, 193, 195, 198, 199, 200, 325, 357, 414, 458, 473, 476, 510, 517, 525], "latpol": 473, "latter": [174, 205, 381, 383, 385, 391, 394, 397, 415, 446, 447, 456, 457, 460, 474, 475, 512, 514, 564, 566], "launch": [429, 565], "laura": [418, 421, 423, 424, 430, 432, 434, 435, 436], "law": [27, 100, 120, 121, 123, 125, 130, 135, 155, 157, 160, 212, 222, 223, 224, 245, 246, 247, 248, 256, 259, 260, 261, 270, 280, 324, 383, 409, 415, 429, 438, 440, 447, 449, 452, 456, 458, 460, 463, 464, 465, 475, 476, 478, 505, 519, 531, 551, 557], "law2": 544, "layer": [87, 90, 382, 389], "layout": [421, 452, 460, 473, 489, 490], "lazi": [88, 99, 101, 104, 108, 109, 265, 306, 429], "lazili": 101, "lazyfitsdata": 417, "lc": [86, 128, 197, 383, 385], "lc_1d": [121, 123, 139, 461, 462, 463, 464], "lc_3d": 462, "lc_estim": 385, "lc_maker_1d": [462, 463, 464], "lc_maker_3d": 462, "lc_new": 463, "lea": 418, "lead": [120, 370, 379, 384, 389, 391, 393, 395, 396, 414, 478, 480, 482, 493, 565], "leak": [446, 514], "leakag": [280, 462], "learn": [142, 147, 370, 387, 390, 399, 402, 404, 406, 430, 442, 444, 448, 454, 455, 456, 458, 461, 468, 469, 470, 473, 476, 478, 480, 485, 491, 565], "least": [43, 44, 370, 373, 375, 379, 456, 461, 517], "leav": [375, 382, 384, 385, 387, 390, 399, 401, 475], "lefaucheur": [427, 428, 429], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 90, 101, 108, 121, 123, 128, 131, 145, 147, 187, 188, 190, 196, 199, 200, 224, 228, 247, 259, 282, 288, 370, 378, 380, 384, 386, 389, 393, 406, 448, 454, 462, 464, 475, 503, 512, 515, 523, 524, 531, 532, 535, 536, 538, 539, 541, 543, 546, 547, 548, 549, 553, 554, 555, 557, 566, 567, 568], "legaci": [370, 429, 430], "legacy_altaz": 85, "legal": [87, 90], "legend": [367, 439, 440, 442, 444, 446, 452, 453, 457, 461, 462, 463, 465, 467, 470, 476, 477, 478, 481, 498, 499, 507, 531, 537, 540, 541, 545], "legend_kwarg": 367, "lemi\u00e8r": 429, "len": [83, 277, 367, 448, 455, 456, 457, 461, 463, 465, 468, 472, 475, 491, 505], "lenain": [429, 430], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 90, 93, 163, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 280, 309, 363, 396, 442, 444, 447, 454, 458, 468, 470, 473, 481, 491, 522], "lengthi": 473, "lennarz": [412, 426, 428], "leq": [522, 527, 528], "less": [77, 186, 188, 192, 232, 266, 288, 370, 375, 377, 388, 400, 429, 470, 476, 477, 478], "let": [67, 271, 370, 373, 375, 379, 384, 387, 402, 405, 429, 430, 431, 442, 445, 446, 447, 448, 452, 453, 454, 455, 456, 458, 464, 465, 468, 469, 470, 473, 474, 476, 478, 481, 489, 491, 565], "level": [6, 11, 15, 16, 83, 84, 103, 120, 122, 205, 279, 281, 370, 371, 373, 374, 375, 381, 383, 385, 389, 390, 391, 394, 397, 402, 406, 413, 414, 415, 416, 417, 421, 429, 436, 438, 441, 442, 444, 445, 448, 449, 450, 452, 454, 456, 460, 461, 462, 463, 464, 465, 467, 470, 475, 477, 480, 481, 482, 483, 485, 487, 491, 492, 501, 502, 503, 510, 512, 513, 517, 562, 563, 564, 565, 569], "levelnam": 370, "levmar": [205, 470], "lf": 400, "lgpl": 370, "lgtm": 400, "lhaaso": [55, 57], "li": [116, 120, 170, 376, 439, 448, 450, 456, 564, 567], "lib": [334, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 529, 537, 540, 553], "librari": [87, 90, 370, 375, 376, 380, 390, 396, 407, 441, 444, 456, 476, 480, 490, 493, 502, 505, 563, 565], "licenc": 396, "licens": [396, 406], "lie": [185, 186, 192, 195, 198], "life": [377, 470], "lifetim": [20, 436], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 128, 132, 220, 232, 287, 374, 381, 383, 386, 390, 394, 402, 415, 417, 418, 425, 428, 430, 435, 436, 438, 440, 461, 466, 485, 501, 502, 503, 504, 513, 514, 517, 519, 561, 563], "light_curv": [16, 232, 390, 430, 438, 445, 449, 450, 452, 462, 466, 489, 560], "light_curve_flar": [438, 463, 466], "light_curve_model": 560, "light_curve_simul": [438, 464, 466], "lightcrv_pksb1222": [232, 560], "lightcurv": [71, 73, 74, 75, 77, 78, 117, 123, 128, 132, 133, 134, 139, 196, 197, 232, 284, 285, 287, 379, 381, 386, 389, 391, 394, 402, 413, 415, 416, 417, 421, 427, 428, 429, 430, 432, 433, 435, 436, 438, 462, 463, 466, 485, 500, 505, 560], "lightcurve_at_energi": 394, "lightcurveconfig": 16, "lightcurveestim": [117, 385, 386, 391, 394, 402, 413, 415, 417, 418, 421, 429, 430, 435, 462, 463, 464, 505], "lightcurvetablemodel": [381, 383], "lightcurvetempl": 381, "lightcurvetemplatemodel": [434, 435], "lightcurvetemplatetemporalmodel": [262, 393, 432, 435, 457, 476, 560], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 90, 136, 137, 151, 159, 187, 188, 190, 194, 196, 199, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 297, 317, 327, 369, 370, 371, 373, 375, 376, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 401, 402, 406, 412, 421, 423, 424, 428, 429, 431, 432, 434, 435, 439, 440, 442, 444, 445, 446, 447, 450, 457, 458, 461, 465, 467, 469, 470, 471, 473, 477, 478, 480, 481, 485, 489, 491, 493, 494, 501, 505, 510, 518, 528, 563, 565, 566, 567, 568], "likelhood": 382, "likelihood": [99, 100, 101, 104, 109, 120, 121, 122, 123, 125, 131, 278, 294, 370, 376, 379, 382, 383, 386, 388, 390, 391, 392, 394, 402, 409, 411, 412, 415, 422, 425, 428, 430, 431, 436, 442, 444, 445, 446, 448, 454, 458, 462, 463, 465, 469, 470, 472, 478, 481, 489, 490, 493, 501, 503, 505, 541, 563, 564, 566, 567], "likelihood_profil": [381, 411], "likelihood_typ": 416, "likewis": [188, 200], "lima": 116, "lima1983": [503, 564, 567], "lima_map": 450, "limamapestim": [391, 417], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 90, 100, 111, 120, 121, 122, 123, 124, 125, 128, 129, 131, 144, 159, 162, 192, 209, 211, 245, 278, 279, 281, 317, 318, 357, 376, 378, 379, 381, 382, 383, 384, 385, 387, 388, 390, 391, 393, 394, 398, 411, 417, 421, 428, 429, 430, 431, 436, 439, 444, 452, 455, 458, 462, 469, 470, 473, 474, 477, 481, 489, 501, 503, 505, 514, 523, 541, 550, 563, 564, 568], "lin": [19, 20, 192, 196, 197, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 278, 309, 310, 311, 398, 457, 471, 473, 483, 518, 541], "line": [6, 13, 46, 82, 83, 87, 90, 100, 101, 104, 108, 109, 148, 154, 156, 158, 195, 196, 218, 240, 329, 330, 367, 369, 371, 373, 376, 379, 381, 384, 386, 387, 394, 400, 401, 402, 404, 406, 415, 426, 429, 452, 470, 472, 476, 493, 505, 518, 563], "line2d": [195, 218, 240], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 141, 142, 143, 144, 147, 149, 151, 154, 159, 187, 188, 190, 196, 197, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 263, 264, 266, 267, 268, 309, 370, 432, 438, 452, 457, 458, 460, 473, 476, 481, 489, 490, 519, 561], "linear_model": 556, "linearli": [197, 200, 473, 501], "linearsegmentedcolormap": [360, 361], "linearstretch": [360, 361], "lineartemporalmodel": [262, 476, 556], "lineno": 370, "liner": [266, 384], "linestyl": [439, 465, 467, 478, 499, 518, 522, 523], "linewidth": [367, 371], "linhoff": [433, 434, 435, 436], "link": [67, 69, 80, 100, 218, 220, 240, 277, 373, 375, 378, 379, 382, 390, 396, 400, 406, 407, 418, 421, 423, 427, 428, 429, 440, 441, 444, 445, 446, 447, 449, 452, 453, 460, 464, 468, 470, 476, 480, 490, 491, 505, 550, 562], "linkag": 295, "linkage_kwarg": 295, "linkcheck": 371, "linspac": [83, 146, 187, 188, 190, 196, 199, 200, 205, 456, 458, 465, 470, 471, 473, 478, 517, 522], "linux": [377, 387, 400, 403, 430, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 565], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 95, 99, 100, 101, 102, 103, 104, 107, 108, 109, 116, 118, 120, 121, 123, 124, 125, 128, 129, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 162, 163, 167, 168, 170, 171, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 318, 328, 329, 330, 332, 359, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 444, 447, 448, 453, 457, 458, 460, 461, 462, 464, 469, 470, 471, 472, 477, 478, 480, 481, 482, 483, 485, 490, 501, 505, 508, 517, 518, 562, 563, 564, 565], "list_format": [87, 90], "listen": 505, "listenv": 373, "listinfo": 399, "liter": [16, 84, 103, 122, 315, 370], "literatur": [493, 495, 564], "littl": [87, 90, 389, 391, 397, 473, 481, 510, 514, 565], "live": [83, 86, 88, 370, 375, 378, 380, 391, 431, 434], "livetim": [67, 88, 89, 104, 105, 109, 157, 179, 181, 182, 376, 439, 441, 444, 445, 447, 454, 456, 457, 460, 464, 468, 469, 471, 473, 481, 482, 491, 501, 505], "livetime_fract": 89, "ljouvin": 376, "ll": [121, 123, 131, 373, 375, 387, 403, 439, 440, 441, 444, 446, 449, 450, 454, 461, 462, 463, 464, 465, 565, 567], "llvm": 406, "ln": [53, 470, 548], "lo": [23, 428], "lo_bnd": 192, "lo_threshold": 144, "load": [66, 67, 82, 83, 86, 87, 90, 99, 100, 101, 104, 108, 125, 127, 161, 167, 185, 186, 187, 188, 198, 305, 370, 424, 427, 429, 435, 445, 447, 449, 450, 456, 457, 460, 461, 464, 465, 474, 480, 481, 482, 483, 489, 491, 502], "load_cta_irf": [431, 435], "load_irf_dict_from_fil": [157, 435, 439, 447, 456, 457, 460, 464, 480], "loc": [87, 90, 200, 363, 465, 498, 499, 507, 531, 537, 540, 541, 545], "loc_indic": [87, 90], "local": [17, 18, 21, 22, 24, 25, 27, 87, 90, 136, 137, 172, 185, 186, 195, 196, 198, 370, 371, 373, 378, 384, 399, 400, 403, 407, 411, 421, 445, 448, 449, 450, 455, 456, 467, 472, 485, 489, 505], "local_dataset": 472, "local_dens": [17, 18, 21, 22, 24, 25, 27, 467], "local_to_glob": 186, "localfold": 11, "localis": 305, "localn": [16, 84, 103, 122], "locat": [47, 82, 83, 85, 87, 88, 93, 132, 145, 146, 152, 157, 160, 198, 326, 378, 384, 388, 391, 396, 397, 402, 404, 435, 439, 447, 456, 457, 460, 464, 468, 482, 483, 502, 518, 565], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 101, 103, 121, 122, 123, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 192, 196, 200, 208, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 273, 282, 288, 308, 309, 311, 356, 365, 382, 386, 408, 425, 432, 436, 438, 440, 445, 447, 448, 449, 450, 452, 453, 454, 457, 460, 462, 463, 464, 467, 469, 470, 471, 472, 473, 476, 478, 481, 482, 487, 489, 490, 505, 507, 517, 518, 519, 542, 550, 551, 557, 564, 565, 566, 567, 568], "log10": 465, "log_": [234, 235, 476, 539], "log_2": 285, "log_en": 476, "log_level": 11, "log_parabola": 442, "log_parabola_norm": 393, "logarithm": [34, 473, 478, 539], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 428, "loggaussian": 381, "logger": [336, 339, 370, 454], "logic": [16, 84, 86, 103, 122, 173, 394, 473, 474], "logical_and": [187, 188, 190, 196, 199, 200], "logical_or": [187, 188, 190, 196, 199, 200, 472], "loglog": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 308, 439, 467, 497, 498, 499], "lognorm": 467, "logo": 400, "logparabola": [381, 540], "logparabolanormspectralmodel": [235, 250, 393, 418, 476, 540], "logparabolaspectralmodel": [205, 234, 250, 393, 440, 442, 444, 446, 453, 468, 470, 476, 533, 539, 540], "logscal": 415, "logspac": [146, 187, 188, 190, 196, 199, 200, 447, 460, 464, 465, 467, 473, 497, 498, 499, 518], "logspir": [33, 38], "lomb": [385, 429], "lon": [16, 47, 90, 93, 95, 101, 104, 108, 110, 114, 120, 125, 127, 131, 145, 146, 152, 157, 160, 163, 187, 188, 190, 193, 196, 198, 199, 200, 214, 215, 219, 226, 227, 230, 242, 244, 252, 253, 255, 257, 263, 265, 267, 299, 300, 303, 325, 370, 371, 381, 384, 389, 393, 414, 445, 449, 450, 452, 454, 458, 462, 463, 468, 469, 471, 472, 473, 476, 477, 481, 489, 490, 491, 503, 517, 518, 522, 523, 524, 525, 526, 527, 528], "lon_0": [219, 227, 230, 244, 252, 253, 267, 385, 393, 449, 452, 453, 455, 456, 457, 460, 462, 468, 469, 475, 476, 481, 489, 490, 522, 523, 524, 526, 527, 528, 529], "lon_0_err": 455, "lon_pnt": [299, 303], "lon_rang": 325, "lon_t": [299, 303], "long": [370, 373, 375, 377, 384, 386, 389, 390, 392, 395, 397, 423, 432, 440, 468, 485, 517], "longer": [286, 370, 376, 377, 384, 385, 387, 390, 403, 421, 424, 429, 430, 432, 435, 441, 447, 462], "longest": 191, "longitud": [68, 93, 185, 186, 187, 188, 193, 195, 198, 199, 200, 325, 357, 384, 458, 473, 476, 510, 517, 525], "lonpol": 473, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 101, 104, 108, 109, 123, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 327, 370, 372, 373, 375, 382, 384, 385, 387, 389, 390, 393, 406, 429, 441, 444, 445, 447, 448, 449, 450, 452, 454, 456, 458, 460, 462, 464, 465, 469, 471, 473, 476, 480, 481, 483, 485, 489, 491, 493, 502, 505, 565], "look_up": 427, "lookup": 193, "loop": [87, 90, 318, 383, 435, 444, 468, 473, 482, 489, 505], "lopez": [220, 429, 435, 531], "lopez21": [221, 440, 531], "lopez_2021": 221, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 370, "loss": [52, 564], "lost": [99, 101, 108, 505, 518], "lot": [82, 370, 373, 375, 376, 377, 378, 381, 383, 384, 386, 390, 400, 410, 412, 413, 421, 429, 430, 445, 454, 481, 489, 490, 515], "low": [87, 90, 144, 192, 320, 370, 371, 374, 379, 399, 427, 429, 438, 441, 444, 448, 454, 456, 469, 474, 475, 480, 481, 485, 489, 492, 501, 502, 503, 512, 513, 517, 562, 566], "low_zenith": 477, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 121, 123, 144, 173, 192, 194, 197, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 370, 384, 389, 390, 397, 458, 472, 490], "lower_error": 123, "lowest": [389, 461], "lp": [234, 235, 393, 442, 468, 476, 533], "lp_norm": 540, "lss": 444, "lst": [377, 480], "lt": [370, 396, 423, 432, 527, 528], "ltcube": [186, 187, 188, 190, 199, 200, 473], "lts_author": 396, "luca": [411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 432, 435], "lui": 431, "luigi": 426, "luminos": [41, 46, 51, 52, 53, 54, 241], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 499], "lvtm": 464, "lw": [444, 446, 448, 454, 465, 470, 518, 522, 524], "ly": [421, 475], "lyne": 37, "l\u00e9a": [411, 413, 414, 415, 418, 426, 427, 428, 429, 430], "l\u00f3pez": 429, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 90, 93, 96, 110, 114, 128, 185, 186, 187, 188, 190, 196, 198, 199, 200, 280, 294, 370, 371, 373, 384, 401, 402, 403, 404, 457, 467, 470, 471, 473, 476, 487, 510, 514, 516, 517, 518, 529, 565, 568], "m1": [402, 404], "m2": [101, 147, 167, 440, 445, 447, 449, 450, 452, 454, 460, 469, 471, 472, 480, 489, 490], "m_": [20, 50, 52, 53], "m_3fhl_gc": 473, "m_4d": 473, "m_allski": 473, "m_b": 566, "m_cube": 473, "m_ejecta": [52, 498], "m_gc": 473, "m_hpx": 473, "m_i": 566, "m_iem_10gev": 473, "m_iem_cutout": 473, "m_iem_gc": 473, "m_iem_interp": 473, "m_sub": 473, "m_sun": 498, "m_wc": [187, 188, 190, 196, 199, 200, 473], "ma": [87, 90, 116, 120, 439, 448, 450, 564, 567], "mac": [87, 90, 370, 377, 400, 428, 565], "machin": [373, 377, 378, 383, 387, 400, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 452], "maco": [387, 430], "macport": [387, 428, 430], "made": [167, 174, 195, 198, 209, 211, 218, 240, 297, 329, 330, 370, 373, 375, 386, 389, 391, 394, 395, 396, 421, 432, 433, 444, 448, 452, 453, 472, 480, 518, 529, 564], "madrid": 380, "magenta": [367, 455, 477], "magic": [96, 402, 407, 423, 429, 432, 446, 481, 564], "magic_ecpl": 271, "magic_lp": [271, 446], "magnet": [42, 50, 51, 54, 541], "magnetic_field": [50, 51, 54], "magnitud": [309, 456], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 93, 100, 103, 122, 123, 124, 125, 128, 208, 210, 370, 371, 373, 378, 379, 383, 384, 386, 387, 395, 396, 400, 401, 403, 408, 409, 440, 449, 450, 456, 480, 504, 517, 524, 541, 562, 565, 569], "mail": [371, 373, 375, 377, 384, 386, 389, 391, 393, 396, 399, 405, 410, 411, 491, 565], "mailman": 399, "mailmap": [421, 432], "main": [90, 101, 108, 370, 373, 375, 376, 378, 382, 385, 386, 387, 390, 394, 396, 400, 411, 417, 421, 424, 429, 435, 445, 455, 456, 458, 460, 468, 471, 473, 474, 475, 487, 489, 490, 500, 502, 506, 565], "mainli": [370, 380, 381, 384, 391, 473], "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 370, 372, 387, 389, 390, 391, 395, 400, 430, 472], "mainten": [370, 377, 396, 400, 412, 434], "major": [195, 219, 227, 230, 370, 374, 375, 379, 387, 395, 423, 429, 430, 522, 523, 524], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 94, 100, 103, 122, 162, 163, 167, 168, 169, 170, 172, 173, 174, 177, 178, 183, 184, 186, 187, 188, 191, 192, 195, 197, 198, 199, 200, 266, 327, 329, 330, 341, 369, 371, 372, 375, 376, 377, 380, 382, 384, 386, 387, 388, 389, 390, 391, 394, 396, 397, 400, 406, 409, 410, 412, 415, 416, 421, 423, 426, 427, 428, 429, 432, 434, 440, 441, 444, 446, 447, 450, 452, 456, 460, 462, 471, 472, 473, 476, 480, 481, 482, 487, 491, 502, 505, 565, 566], "make_background": [167, 174], "make_background_fit": 164, "make_background_scal": 164, "make_base_catalog_galact": [429, 495], "make_concentric_annulus_sky_region": 458, "make_contour": 470, "make_count": [167, 168, 169, 174], "make_counts_off": [168, 169], "make_cub": 162, "make_dataset": 163, "make_default_fov_background_model": 164, "make_edisp": [167, 174], "make_edisp_kernel": [167, 174], "make_edisp_kernel_map": 471, "make_edisp_map": 146, "make_effective_livetime_map": 472, "make_exclusion_mask": 164, "make_exposur": [167, 174], "make_exposure_irf": [167, 174], "make_imag": 430, "make_lupton_rgb": 365, "make_map_background_irf": 424, "make_map_count": 376, "make_map_cutout": 376, "make_map_exposure_reco_energi": 376, "make_map_exposure_true_energi": [146, 376, 471], "make_map_fov_background": 376, "make_map_hadron_accept": 376, "make_map_ring_background": 376, "make_map_xxx": 376, "make_maps_off": 172, "make_mask_bkg_invalid": 173, "make_mask_energy_aeff_default": 173, "make_mask_energy_aeff_max": 173, "make_mask_energy_bkg_peak": 173, "make_mask_energy_edisp_bia": 173, "make_mask_offset_max": 173, "make_mean_edisp": 431, "make_mean_psf": 431, "make_meta_t": [167, 174], "make_model": 389, "make_more_random_stuff": 370, "make_observation_time_map": 472, "make_orthogonal_rectangle_sky_region": [125, 458], "make_path": [123, 453, 469], "make_pixel_region": 384, "make_psf": [157, 167, 174, 431], "make_psf_map": 471, "make_quant": 341, "make_random_stuff": 370, "make_region": 384, "make_sky_coord": 384, "make_some_random_stuff": 370, "make_theta_squared_t": [421, 483], "makefil": [400, 425], "maker": [6, 146, 157, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 376, 383, 385, 396, 415, 417, 418, 423, 432, 435, 436, 438, 439, 444, 446, 447, 450, 454, 456, 457, 460, 464, 465, 469, 471, 474, 479, 482, 483, 485, 501, 502, 515, 517, 564], "maker_fov": 490, "maker_safe_mask": [454, 460, 490], "mamba": [373, 401, 402, 423], "manag": [87, 90, 209, 211, 218, 240, 317, 348, 369, 370, 373, 378, 386, 387, 389, 392, 396, 397, 399, 421, 426, 428, 432, 436, 473, 475, 565], "manconi": 413, "mandatori": [173, 373, 383, 396, 457, 476], "mandatory_keyword": 471, "mani": [87, 90, 309, 370, 371, 373, 375, 377, 379, 382, 384, 385, 386, 387, 390, 391, 396, 400, 406, 412, 413, 418, 421, 427, 428, 429, 430, 431, 434, 435, 441, 444, 447, 455, 460, 461, 473, 483, 485, 493, 501, 503, 515, 518, 562, 563, 564, 565, 569], "manifest": 380, "manipul": [87, 90, 394, 397, 423, 478, 517], "manner": [434, 435], "manpow": [375, 387], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 377, 382, 392, 399, 456, 505, 513, 565, 566], "manuel": [422, 425, 426], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 87, 90, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 120, 121, 122, 123, 125, 127, 128, 131, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 215, 218, 219, 226, 227, 230, 232, 240, 242, 244, 252, 253, 255, 257, 263, 264, 265, 267, 268, 275, 280, 319, 357, 358, 363, 365, 367, 369, 370, 371, 373, 377, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 397, 402, 406, 410, 411, 413, 414, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 435, 436, 438, 439, 441, 444, 445, 446, 447, 451, 452, 455, 456, 457, 458, 459, 461, 462, 463, 464, 468, 469, 472, 476, 479, 480, 481, 482, 483, 485, 486, 489, 490, 493, 500, 501, 502, 504, 505, 509, 510, 511, 512, 513, 514, 515, 521, 523, 524, 525, 526, 529, 560, 562, 563, 564], "map_": [201, 202, 358, 365], "map_4d": 473, "map_analysi": 389, "map_cent": 267, "map_coord": [83, 146, 157, 160], "map_dataset": [382, 465], "map_dataset_empti": 465, "map_dataset_mak": 465, "map_dataset_on_off": 465, "map_edisp": [110, 114], "map_in": [187, 188, 190, 196, 199, 200], "map_out": [104, 109, 145, 146, 152, 157, 160, 187, 188, 190, 196, 199, 200], "map_select": [16, 445, 449, 450, 452, 489], "map_typ": [187, 188, 190, 196, 199, 200, 473, 517], "mapax": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 418, 421, 423, 473], "mapaxi": [19, 20, 26, 101, 104, 108, 109, 110, 111, 112, 114, 121, 123, 125, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 167, 177, 178, 183, 184, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 365, 371, 385, 394, 412, 413, 415, 418, 421, 431, 435, 439, 441, 444, 446, 447, 453, 454, 456, 457, 460, 463, 464, 465, 469, 471, 472, 473, 476, 481, 482, 483, 490, 509, 512, 514, 515, 517, 518], "mapcoord": [83, 146, 157, 160, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 242, 429, 430, 473, 518, 525], "mapdataset": [97, 98, 102, 104, 107, 108, 109, 111, 112, 113, 115, 116, 120, 125, 128, 131, 135, 136, 137, 138, 162, 163, 164, 167, 168, 172, 173, 226, 363, 366, 383, 385, 391, 392, 411, 412, 413, 414, 415, 416, 417, 418, 421, 435, 436, 448, 449, 453, 454, 455, 457, 458, 460, 462, 464, 465, 470, 472, 474, 475, 481, 489, 490, 503, 505, 512, 515, 564, 566, 567], "mapdataseteventsampl": [92, 107, 415, 416, 417, 424, 435, 456, 457], "mapdatasetmak": [157, 165, 174, 383, 415, 418, 421, 424, 432, 454, 456, 457, 460, 465, 471, 472, 482, 489, 490, 505, 512, 515], "mapdatasetmetadata": [101, 104, 397], "mapdatasetoff": 423, "mapdatasetonoff": [97, 101, 108, 109, 116, 120, 135, 162, 168, 172, 415, 416, 418, 421, 434, 435, 450, 465, 472, 501, 515, 566], "mapdatasetsampl": 383, "mapevalu": [381, 382, 414, 415, 418, 421, 432, 433, 434, 436], "mapeventsampl": [413, 414], "mapfit": [381, 382, 411, 430, 431], "mapgeom": [376, 431, 432], "mapmak": [167, 386, 411, 415, 430], "mapmakerob": [414, 415], "mappabl": 394, "mappanelplott": [391, 570], "mapper": 305, "mappingintstrani": [16, 84, 103, 122], "maps_off": 172, "mar": [387, 408, 433], "march": [377, 379, 408, 410, 431], "marcocirelli": 26, "margin": [100, 104, 109, 113, 115, 186, 188, 198, 200, 218, 240, 255, 381, 474, 522, 564, 566], "marion": [411, 430], "mark": [90, 370, 381, 399], "marker": [100, 101, 104, 108, 109, 439, 441, 444, 446, 448, 454, 461, 462, 463, 464, 491], "markerfacecolor": [101, 104, 108, 109], "markers": [100, 101, 104, 108, 109, 478], "mask": [83, 87, 90, 98, 100, 101, 104, 108, 109, 120, 124, 125, 127, 128, 129, 131, 145, 146, 152, 157, 160, 162, 164, 169, 170, 171, 172, 173, 175, 185, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 209, 211, 218, 240, 255, 382, 398, 415, 417, 418, 419, 421, 424, 430, 432, 433, 434, 435, 438, 439, 441, 452, 454, 472, 475, 479, 482, 485, 501, 512, 514, 517, 564], "mask_1": 477, "mask_2": 477, "mask_bright": 468, "mask_contains_region": 200, "mask_data": 474, "mask_energi": [469, 474], "mask_fit": [100, 101, 104, 108, 109, 113, 115, 382, 415, 432, 446, 452, 465, 469, 470, 474, 478, 501], "mask_fit_imag": [101, 104, 108, 109], "mask_imag": [101, 104, 108, 109], "mask_map": [186, 198, 438, 474, 479], "mask_map_catalog": 474, "mask_nearest_posit": [187, 188, 190, 196, 199, 200], "mask_off": 465, "mask_roi": 468, "mask_saf": [100, 101, 104, 105, 108, 109, 173, 382, 415, 469, 472, 474, 501], "mask_safe_edisp": [101, 104, 108, 109], "mask_safe_imag": [101, 104, 108, 109, 145, 146, 152, 157, 160], "mask_safe_psf": [101, 104, 108, 109], "mask_spac": 469, "mask_valid": 100, "masked_ev": 83, "maskedarrai": [87, 90], "maskedcolumn": [87, 90], "mass": [19, 20, 26, 52, 383, 417, 436, 467, 493, 526], "massdm": [19, 20, 467], "master": [376, 377, 384, 399, 400, 409], "match": [87, 90, 107, 111, 185, 186, 188, 191, 192, 193, 195, 198, 200, 202, 279, 281, 370, 378, 429, 431, 436, 444, 447, 464, 481, 500, 517], "match_by_nam": 193, "math": [227, 369], "mathcal": [470, 501], "mathemat": [476, 478], "mathieu": [421, 424], "mathrm": [19, 20, 23, 101, 108, 147, 467, 470, 501, 566, 568], "mathworld": [324, 325], "matplotlib": [19, 20, 26, 66, 67, 83, 127, 141, 144, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 187, 188, 190, 196, 199, 200, 203, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 348, 358, 359, 360, 363, 364, 365, 367, 369, 370, 371, 384, 387, 396, 403, 406, 413, 421, 423, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 497, 498, 499, 505, 507, 508, 509, 511, 514, 522, 524, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 569], "matric": 203, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 110, 114, 144, 145, 146, 149, 203, 204, 205, 209, 218, 240, 279, 281, 363, 387, 388, 398, 431, 432, 435, 470, 471, 501, 503, 509], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 384, 390, 398, 430, 435, 436, 438, 472, 479, 481, 485, 494, 517, 563, 565], "matthew": [377, 427, 429, 430], "matthia": [429, 430], "mattox": 448, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 90, 101, 111, 124, 126, 128, 159, 163, 167, 169, 173, 200, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 325, 378, 386, 393, 398, 406, 417, 418, 419, 421, 423, 435, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 458, 460, 461, 462, 463, 465, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 481, 482, 489, 490, 493, 512, 514, 515, 522, 541, 544, 550, 567], "max_ag": [45, 495], "max_column": [87, 90], "max_energi": 461, "max_lin": [87, 90], "max_offset": 386, "max_percentil": 83, "max_radiu": [155, 157, 160, 198, 481], "max_region_numb": [170, 514], "max_width": [87, 90], "maxcal": 205, "maxclust": 295, "maxfev": 470, "maxim": [45, 82, 90, 111, 173, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 433, 434, 435, 436, 514], "maxima": [136, 209, 211], "maximilian": [421, 423, 424, 433, 434, 435, 436], "maximum": [19, 20, 45, 46, 47, 83, 87, 90, 99, 121, 123, 124, 126, 128, 157, 160, 162, 170, 173, 179, 182, 186, 192, 197, 198, 208, 210, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 279, 281, 324, 326, 329, 367, 373, 376, 384, 423, 442, 448, 461, 472, 473, 478, 482, 490, 495, 503, 514, 541, 563, 564, 567], "maxmimum": 478, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 370, 378, 380, 381, 392], "mb": [185, 186, 195, 198, 378, 402, 404, 438, 443, 451, 459, 466, 479, 480, 481, 483, 484, 486, 488, 492, 520, 530, 551, 561], "mbox": [101, 108], "mc": 388, "mc_id": [83, 380, 383, 423, 456, 480], "mcerp": 388, "mckee": [53, 436], "mcmc": [388, 390, 411, 416, 418, 541], "mcmc_sampl": [390, 413], "md": [373, 390, 396], "mdm": [26, 467], "mean": [42, 68, 87, 90, 95, 100, 101, 125, 127, 144, 145, 146, 149, 152, 157, 160, 228, 232, 266, 280, 284, 296, 315, 370, 371, 373, 375, 377, 383, 384, 386, 387, 393, 398, 403, 406, 418, 427, 444, 447, 457, 461, 470, 472, 476, 477, 478, 481, 482, 491, 523, 538, 565, 566], "meaning": 476, "meant": [376, 435, 439, 447, 449, 452, 454, 460, 464, 480], "measur": [27, 67, 100, 104, 109, 127, 192, 271, 279, 281, 284, 285, 286, 287, 290, 291, 293, 294, 376, 384, 389, 394, 400, 409, 414, 422, 428, 430, 440, 441, 444, 446, 447, 450, 453, 455, 458, 460, 461, 462, 463, 468, 481, 490, 491, 503, 510, 512, 515, 563, 564, 567, 568], "mechan": [378, 388, 394, 397], "media": 396, "median": [83, 157, 160, 406, 465, 477, 481], "median_zenith": 477, "medium": [45, 52, 370, 379], "meeseeksdev": 370, "meeseeksmachin": 370, "meet": [218, 240, 297, 376, 378, 390, 395, 400], "megabyt": [185, 186, 195, 198], "mem": [438, 443, 451, 459, 466, 479, 484, 486, 488, 492, 520, 530, 551, 561], "member": [83, 371, 375, 384, 396, 397, 429, 435, 480, 483], "memo": [144, 192], "memori": [87, 88, 90, 91, 99, 101, 102, 104, 107, 108, 109, 185, 186, 195, 198, 263, 265, 267, 348, 370, 380, 382, 383, 386, 392, 394, 415, 421, 436, 447, 460, 505, 564], "memoryobserv": 88, "mender": [434, 435, 436], "mention": [59, 139, 370, 371, 373, 377, 378, 382, 384, 387, 389, 390, 395, 396, 399, 400, 471, 475, 476, 493, 564], "mentor": [373, 390], "mere": 380, "merg": [67, 86, 87, 90, 189, 192, 218, 240, 337, 370, 373, 374, 375, 376, 383, 384, 385, 389, 390, 395, 396, 399, 400, 410, 411, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 431], "merge_equ": 86, "mergesort": [87, 90], "mess": 371, "messag": [100, 204, 206, 207, 373, 384, 386, 393, 419, 434, 441, 442, 444, 445, 446, 452, 453, 454, 464, 465, 470, 481, 489, 490, 505, 565], "met": [86, 351, 435, 463, 564], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 90, 93, 99, 101, 102, 104, 106, 107, 108, 109, 121, 123, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 174, 187, 188, 190, 196, 199, 200, 263, 264, 267, 268, 307, 351, 352, 353, 354, 380, 383, 384, 385, 394, 397, 417, 418, 429, 433, 435, 436, 456, 465, 473, 477, 480, 482, 502, 503, 560], "meta_t": [99, 100, 101, 104, 108, 109, 167, 174, 394, 397, 418, 441, 447, 472, 501], "metaattribut": [87, 90], "metadata": [16, 83, 84, 85, 87, 88, 90, 103, 105, 121, 122, 123, 141, 142, 143, 147, 148, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200, 352, 374, 376, 387, 436, 445, 449, 450, 452, 456, 476, 489, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "metadata_fits_export_kei": [84, 103, 122], "metadatabas": 397, "metadatabasemodel": 397, "metapackag": 387, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 287, 295, 305, 309, 313, 317, 318, 319, 344, 357, 359, 369, 370, 373, 376, 379, 380, 381, 384, 385, 386, 388, 389, 390, 392, 394, 396, 397, 402, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 435, 436, 439, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 460, 463, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 500, 502, 504, 505, 509, 512, 514, 515, 516, 518, 539, 553, 562, 563, 564, 565, 567], "method_kwarg": [317, 318], "methoda": 413, "metric": 295, "mev": [74, 83, 141, 142, 143, 147, 439, 440, 447, 449, 452, 454, 460, 464, 465, 468, 471, 473, 476, 480, 481, 491, 550], "meval": 524, "mexico": 482, "meyer": [237, 271, 453, 564], "meyer2010": 564, "mgtime": 385, "michael": [434, 436], "mid": [424, 435, 480], "middl": [359, 386], "midli": 444, "midpoint": 88, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 175, 192, 205, 370, 375, 381, 382, 384, 387, 389, 394, 396, 397, 402, 404, 411, 444, 463, 465, 469, 472, 474, 481, 482, 485, 491, 493, 501, 505, 512, 518, 565, 567], "migra": [101, 104, 108, 109, 146, 149, 178, 386, 456, 457, 471, 510], "migra_axi": [101, 104, 108, 109, 112, 146, 149, 456, 457, 471, 472], "migrad": [100, 205, 441, 442, 444, 445, 446, 452, 453, 454, 465, 470, 481, 489, 490], "migrad_opt": [205, 470], "migrat": [101, 104, 108, 109, 112, 149, 379, 414, 421, 430, 456, 472, 509, 510], "milagro": [96, 361], "mileston": [379, 399], "milki": [33, 38, 409, 495], "miller": [87, 90], "million": [370, 397], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 90, 101, 124, 126, 128, 139, 167, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 285, 325, 385, 386, 393, 398, 406, 421, 429, 440, 445, 447, 449, 450, 452, 453, 454, 455, 458, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 476, 477, 478, 481, 489, 490, 493, 514, 541, 544, 550], "min_count": 164, "min_dist": [136, 137, 170, 448, 454, 514], "min_distance_input": [170, 514], "min_energi": 461, "min_npix": [145, 146, 152, 157, 160, 198, 200], "min_npred_background": 164, "min_signific": 385, "min_significance_lc": 385, "minaya": 431, "mind": [373, 390, 460, 470], "mini": 390, "miniconda": 401, "minim": [19, 20, 26, 111, 130, 187, 188, 190, 195, 196, 199, 200, 201, 205, 212, 213, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 244, 245, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 277, 382, 385, 393, 397, 423, 433, 435, 439, 456, 469, 470, 478, 490, 505, 514, 515, 518, 563, 568], "minima": [209, 211, 478], "minimis": [464, 477], "minimmum": [145, 146, 152, 157, 160, 198, 200], "minimum": [19, 20, 26, 47, 83, 99, 120, 121, 123, 124, 126, 128, 130, 132, 136, 137, 139, 140, 162, 164, 170, 192, 195, 197, 207, 208, 210, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 273, 278, 282, 285, 297, 324, 326, 329, 365, 387, 423, 429, 444, 448, 456, 470, 473, 478, 481, 503, 505, 514, 541, 568], "mino": [205, 470], "minor": [370, 375, 390, 393, 395, 420, 433, 523, 524], "minos_contour": [413, 431], "minu": [149, 465], "minuit": [100, 118, 205, 206, 207, 381, 388, 415, 430, 431, 435, 441, 442, 444, 445, 446, 452, 453, 454, 465, 470, 481, 489, 490], "minuit_opt": 470, "minut": [390, 400, 429, 444, 448, 450, 452, 454, 455, 456, 458, 463, 464, 467, 469, 470, 472, 475, 478, 489], "mireia": 432, "mirror": 184, "misc": [409, 422, 426, 427, 428], "miss": [82, 87, 90, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 370, 373, 378, 379, 380, 381, 384, 390, 391, 394, 419, 421, 423, 429, 434, 473], "mission": [83, 435, 564], "mistak": [375, 395], "mix": [369, 370, 386, 469, 473], "mixin": [87, 90], "mjd": [86, 93, 123, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 352, 354, 371, 434, 435, 448, 456, 457, 461, 462, 463, 464, 473, 476, 502, 553, 554, 555, 556, 557, 558, 559, 560, 569], "mjdref": [448, 473], "mjdreff": [93, 351, 354, 457], "mjdrefi": [93, 351, 354, 457], "mkdir": [386, 444, 445, 452, 453, 456, 489, 490], "mkn": [491, 564], "mkn_421_3fhl": 491, "mncontour": 205, "mnra": [132, 293], "mnt": 432, "mock": 455, "mock_dl4": 455, "mode": [16, 84, 85, 87, 90, 93, 101, 103, 104, 108, 122, 126, 145, 146, 152, 157, 160, 163, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 265, 397, 416, 429, 432, 436, 464], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 92, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 138, 141, 147, 148, 155, 156, 157, 158, 160, 164, 167, 180, 187, 188, 190, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 289, 292, 294, 366, 369, 370, 371, 374, 375, 376, 382, 383, 385, 386, 388, 390, 391, 394, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 442, 447, 448, 450, 455, 458, 460, 465, 471, 472, 473, 474, 479, 481, 482, 485, 493, 494, 500, 501, 503, 505, 506, 510, 512, 513, 517, 520, 530, 551, 561, 563, 564, 567, 568], "model1": [213, 531, 533, 537, 540, 542, 545], "model2": [213, 440, 464, 531, 533, 537, 540, 542, 545], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 445], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [476, 533], "model_best": 440, "model_best_joint": 444, "model_best_stack": 444, "model_bkg": 469, "model_computed_field": [16, 84, 103, 122], "model_config": [16, 84, 103, 122, 449, 489], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 103, 122], "model_copi": [16, 84, 103, 122, 476], "model_dump": [16, 84, 103, 122], "model_dump_json": [16, 84, 103, 122], "model_extra": [16, 84, 103, 122], "model_field": [16, 84, 103, 122], "model_fields_set": [16, 84, 103, 122], "model_fit": 464, "model_joint": 452, "model_json_schema": [16, 84, 103, 122], "model_manag": [438, 475, 479], "model_nam": [101, 104, 108, 109, 218, 240, 366, 469], "model_parametrized_nam": [16, 84, 103, 122], "model_plot": 455, "model_post_init": [16, 84, 103, 122], "model_prior": 478, "model_read": 478, "model_rebuild": [16, 84, 103, 122], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [447, 460, 464], "model_spectrum": 476, "model_str": 445, "model_typ": [218, 226, 238, 240, 255, 265, 277, 393, 475], "model_valid": [16, 84, 103, 122], "model_validate_json": [16, 84, 103, 122], "model_validate_str": [16, 84, 103, 122], "model_weak": 478, "model_weak_prior": 478, "model_without_nam": 476, "modelbas": [226, 255, 257, 258, 265, 269, 398], "modeldm": [19, 20], "modelevalu": 381, "modeling_2d": [438, 449, 451], "modelmetadata": 397, "modelmodel_dump": [16, 84, 103, 122], "modelmodel_dump_json": [16, 84, 103, 122], "models_3fhl": 475, "models_4fgl_roi": 468, "models_as_dict": [16, 84, 103, 122], "models_diffus": 456, "models_fil": [16, 445, 449, 450, 452, 489], "models_fit": 460, "models_gc": 475, "models_gp": 480, "models_joint": 452, "models_or": 475, "models_read": 476, "models_select": 475, "models_stack": 452, "models_yaml": 476, "modelsmetadata": 397, "modern": [87, 90, 388], "modernis": [387, 415], "modest": [370, 523], "modif": [16, 84, 87, 90, 103, 122, 370, 373, 392, 399, 432], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 90, 92, 101, 108, 123, 124, 125, 128, 131, 163, 205, 317, 342, 367, 380, 382, 386, 392, 396, 397, 416, 418, 419, 421, 423, 431, 434, 435, 440, 445, 457, 472, 474, 478, 482, 489, 503, 518, 569], "modul": [6, 254, 370, 371, 375, 379, 386, 391, 409, 411, 417, 429, 464, 468, 472, 475, 493, 494, 495, 496, 541, 558, 569], "modular": 376, "mohanti": 100, "mohrmann": [386, 410, 411, 412, 428, 429, 430, 433, 435, 564], "mohrmann2019": 564, "moment": [15, 51, 54, 86, 94, 255, 346, 376, 384, 386, 387, 390, 395, 396, 471, 473, 510], "moncar": [205, 470], "monitor": [383, 480, 505], "monkei": 370, "mono": 378, "monoton": 192, "mont": [388, 510], "montecarlo": [102, 107, 205], "month": [78, 373, 379, 384, 387, 389, 390, 395, 399, 403, 409, 410, 411, 412, 413, 422, 425, 426, 427, 428, 429, 430, 431], "monthli": [379, 397, 402, 431], "moor": 24, "morcuend": [431, 434, 436], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 90, 98, 99, 100, 101, 104, 108, 109, 136, 144, 187, 188, 190, 199, 200, 212, 213, 214, 215, 216, 217, 219, 220, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 247, 248, 252, 253, 254, 256, 259, 260, 261, 267, 268, 282, 288, 305, 345, 370, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 398, 400, 401, 402, 403, 406, 415, 416, 417, 418, 421, 428, 430, 431, 435, 440, 441, 444, 446, 448, 450, 452, 456, 457, 461, 464, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 482, 483, 485, 491, 501, 502, 503, 505, 514, 515, 517, 518, 523, 562, 563, 565, 567, 569], "moreov": [386, 468, 472, 501], "morpholog": [118, 383, 438, 459, 485, 501, 517], "morphologi": [50, 52, 118, 381, 383, 393, 409, 426, 428, 441, 449, 455, 456, 457, 460, 468, 472, 519], "mosaic": 376, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 94, 116, 123, 369, 370, 371, 373, 375, 376, 377, 378, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 400, 402, 403, 421, 428, 429, 431, 432, 435, 436, 449, 450, 458, 462, 464, 468, 470, 471, 472, 473, 474, 480, 481, 485, 491, 493, 503, 504, 505, 510, 512, 518, 562, 564, 565, 568], "mostli": [56, 69, 297, 370, 371, 376, 377, 378, 379, 384, 386, 389, 390, 391, 394, 395, 397, 399, 400, 421, 429, 468, 472, 483, 491, 567, 569], "motion": [45, 301], "motiv": [173, 375, 377, 378, 384, 387, 389, 399, 476, 505], "move": [277, 375, 376, 377, 378, 381, 384, 389, 390, 391, 394, 399, 405, 411, 412, 414, 415, 416, 417, 421, 422, 426, 427, 429, 430, 431, 432, 447], "move_axi": 435, "movement": 396, "mpatch": 458, "mpg": 67, "mpi": 67, "mpl": 370, "mpl_check_plot": 370, "mpl_kwarg": [444, 454, 458], "mpl_normal": [360, 361], "mpl_plot_check": 370, "mpl_style": 429, "msg": [439, 447, 449, 452, 454, 460, 464, 480], "msh": [450, 468, 472], "msh15": 483, "mst": 480, "mu": [26, 279, 281, 282, 363, 398, 440, 467, 478, 509, 510, 567], "mu_": [282, 288, 566, 567, 568], "mu_background": 565, "mu_bkg": [104, 109, 279, 291, 294, 406, 565, 567], "mu_off": 567, "mu_on": [282, 288, 567], "mu_sig": [281, 291, 294, 566, 567], "mu_x": 567, "much": [188, 370, 376, 381, 384, 386, 389, 390, 414, 421, 447, 452, 458, 465, 478, 481, 491, 524], "mul": [26, 440, 467, 476, 531, 537, 540, 542, 545, 550], "multi": [87, 90, 186, 198, 379, 384, 398, 415, 418, 422, 429, 438, 442, 448, 459, 469, 470, 471, 476, 477, 481, 485, 501, 503, 505, 517, 562, 563, 564], "multidimension": [376, 386, 398, 436, 485, 510, 563], "multinorm": 388, "multipl": [19, 20, 26, 82, 87, 90, 91, 100, 107, 111, 113, 115, 131, 136, 161, 187, 188, 190, 196, 199, 200, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 370, 371, 376, 379, 382, 383, 384, 386, 388, 391, 392, 394, 398, 402, 411, 418, 419, 421, 429, 435, 436, 446, 452, 468, 469, 472, 473, 474, 476, 481, 503, 517, 541, 550, 562, 563, 564, 565, 570], "multipli": [19, 20, 26, 123, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 230, 232, 234, 235, 237, 240, 241, 242, 243, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 275, 280, 289, 292, 297, 440, 465, 467, 476, 531, 567], "multiprocess": [13, 92, 124, 125, 128, 131, 163, 312, 317, 318, 415, 435, 436], "multithread": 13, "multivari": 388, "multivariategaussianprior": 398, "multiwavelength": 220, "muon": [88, 477], "muoneff": [88, 477], "mur": [26, 467], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 88, 90, 100, 101, 104, 105, 109, 110, 114, 123, 128, 131, 136, 137, 144, 155, 163, 167, 169, 174, 181, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 286, 287, 297, 315, 365, 370, 375, 381, 382, 385, 394, 395, 396, 397, 439, 444, 449, 469, 472, 474, 475, 476, 480, 481, 490, 491, 505, 517, 564], "mutablemap": 194, "mutablesequ": [91, 99, 240], "mutipl": 402, "mutltipl": 373, "my": [370, 392, 393, 401, 456, 457, 469, 476], "my_custom_model": 476, "my_flux_map": 394, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 392, "mybind": [400, 429], "myconfig": [11, 565], "mycustomgaussianmodel": [393, 476], "mycustomprior": 478, "mycustomspectralmodel": [250, 476], "n": [19, 20, 51, 82, 87, 90, 121, 123, 185, 186, 187, 188, 190, 192, 193, 196, 198, 199, 200, 208, 210, 270, 277, 370, 373, 384, 387, 401, 403, 427, 460, 463, 467, 468, 470, 473, 475, 478, 480, 481, 482, 483, 488, 510, 517, 518, 520, 523, 524, 564, 566, 568], "n_": [101, 108, 282, 288, 501, 566, 567, 568], "n_0": [228, 538], "n_bad": 481, "n_bin": 469, "n_bkg": [279, 281, 567], "n_dof": [121, 123, 503], "n_event": [187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 383], "n_event_bunch": [102, 107], "n_events_bkg": 383, "n_fit_bin": [452, 464, 469, 475], "n_free_paramet": 277, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 498, 499], "n_job": [16, 92, 124, 125, 128, 131, 163, 317, 435, 445, 449, 450, 452, 458, 472, 489], "n_jobs_default": [92, 124, 125, 128, 131, 163], "n_model": [72, 76], "n_ob": [447, 456, 464], "n_observ": 565, "n_off": [104, 109, 281, 290, 291, 294, 566, 567], "n_off_posit": 446, "n_off_region": [175, 446], "n_on": [279, 281, 282, 288, 290, 291, 294, 406, 565, 566, 567], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 398, 559], "n_scale": 116, "n_sig": [279, 281, 465, 567], "n_sig_matching_signific": [279, 281], "n_sigma": [71, 74, 75, 78, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 277, 279, 281, 439, 458, 468, 469, 489, 491, 503], "n_sigma_sensit": [120, 121, 122, 123], "n_sigma_ul": [71, 74, 75, 78, 120, 121, 122, 123, 124, 125, 128, 129, 131, 458, 462, 468, 469, 489, 491, 503], "n_sourc": [45, 495], "n_spatial_ax": 191, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 90, "n_time_bin": 463, "nachiketa": [427, 428], "naima": [241, 369, 387, 388, 389, 390, 393, 412, 438, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 505, 519, 550, 551], "naimamodel": [412, 415, 417], "naimaspectralmodel": [250, 393, 421, 476, 505, 541], "nakashima": 413, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 93, 95, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 121, 122, 123, 124, 125, 128, 129, 131, 132, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 167, 168, 177, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 295, 296, 318, 349, 350, 365, 371, 373, 376, 379, 380, 382, 383, 384, 385, 388, 389, 392, 393, 394, 396, 397, 398, 399, 411, 412, 413, 414, 415, 416, 417, 418, 421, 430, 432, 433, 435, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 493, 503, 505, 509, 512, 514, 515, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 567], "name1": 470, "name2": 470, "name_err": [124, 125, 128, 129], "name_scan": [124, 125, 128, 129], "name_substr": [218, 240, 475], "name_ul": [124, 125, 128, 129], "namedtupl": 370, "nameerror": 370, "namespac": [6, 16, 84, 103, 122, 370, 389, 391, 414, 417, 427, 476, 494, 569], "namibia": 483, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 90, 101, 121, 123, 167, 185, 186, 187, 188, 190, 196, 199, 200, 208, 210, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 370, 393, 398, 440, 444, 445, 446, 449, 450, 452, 453, 458, 460, 462, 468, 469, 471, 472, 473, 474, 475, 476, 489, 490, 491, 541, 550], "nan_to_num": [99, 101, 104, 108, 109, 145, 146, 152, 157, 160, 188, 196, 200, 265], "nanograv": 505, "nansum": [187, 188, 190, 199, 200], "nasa": [58, 60, 61, 62, 64, 65, 144, 192, 390, 399, 544], "nativ": [87, 90, 193, 382, 387, 421, 473], "natur": [87, 90, 370, 376, 393, 396, 476, 539], "nauroi": [294, 564], "naurois2012": 564, "navarro": 493, "navi": 440, "navig": [429, 431], "naxi": 473, "naxis1": 473, "naxis2": 473, "naxis3": 473, "naxis4": 473, "nbin": [16, 110, 114, 125, 147, 149, 155, 157, 189, 192, 197, 200, 329, 330, 386, 439, 444, 445, 446, 449, 450, 452, 453, 454, 456, 457, 458, 462, 463, 465, 469, 471, 472, 473, 476, 481, 482, 483, 489, 509, 512, 514, 515, 518], "nbin_per_decad": 192, "nbstripout": 378, "nchunk": 280, "ncol": [141, 142, 187, 188, 190, 196, 199, 200, 363, 367, 441, 444, 448, 450, 452, 454, 465, 469, 470, 473, 474, 514, 531], "ncp": 461, "nd": [187, 188, 190, 196, 199, 200, 263, 264, 391, 473, 518], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 90, 91, 100, 116, 124, 128, 141, 142, 143, 144, 145, 148, 149, 151, 154, 155, 156, 157, 158, 160, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 204, 208, 209, 210, 211, 218, 242, 243, 268, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 292, 293, 294, 297, 308, 309, 310, 319, 324, 326, 359, 363, 364, 370, 469, 473, 491, 517, 518], "nddata": [412, 415], "nddataarrai": [413, 427, 428], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 273], "ndim": [101, 108, 110, 114, 142, 144, 147, 186, 193, 198, 446, 449, 454, 458, 469, 471, 472, 473, 480, 481, 491, 503, 518], "ndimag": [200, 384], "ndmin": 297, "ne": 382, "nearest": [26, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 187, 188, 190, 192, 196, 199, 200, 309, 423, 430, 432, 473, 503, 505, 517], "nearli": [370, 421, 441], "nebula": [50, 271, 277, 415, 444, 445, 446, 450, 453, 454, 455, 462, 470, 474, 476, 478, 481, 482, 483, 489, 490, 491, 496, 518, 564], "necess": [394, 478], "necessari": [16, 84, 100, 103, 122, 373, 380, 385, 396, 423, 441, 444, 446, 447, 450, 456, 457, 460, 463, 464, 472, 473, 475, 476, 490, 501, 502, 505], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 385, 449], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 93, 100, 103, 104, 120, 122, 123, 145, 146, 157, 159, 160, 195, 270, 271, 297, 369, 370, 371, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 400, 401, 406, 410, 411, 412, 429, 431, 436, 440, 441, 445, 447, 448, 449, 450, 454, 456, 457, 461, 463, 464, 470, 471, 473, 474, 475, 476, 477, 480, 482, 489, 491, 501, 514, 516, 517, 565, 569], "need_upd": 421, "neg": [19, 20, 26, 87, 90, 121, 123, 124, 125, 128, 129, 131, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 267, 268, 279, 281, 371, 418, 436, 478, 503, 567, 568], "neglect": [126, 173, 439, 472, 503, 568], "neighbor": [148, 156, 158, 423, 430], "neighbour": [309, 526], "neither": [95, 173, 387, 395], "neldermead": 205, "nep": [375, 395], "neraest": 188, "nest": [15, 186, 187, 188, 241, 277, 297, 337, 435, 481, 516, 567], "nested_model": 241, "net": [26, 87, 90, 444, 505], "neutrino": 52, "neutron": 36, "never": [367, 369, 370, 373, 376, 380, 384, 392, 482], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 100, 101, 103, 104, 108, 109, 121, 122, 123, 124, 128, 131, 139, 141, 142, 143, 144, 147, 149, 151, 154, 159, 170, 171, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 218, 240, 255, 265, 297, 321, 348, 355, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 422, 425, 452, 461, 468, 469, 473, 475, 476, 502, 503, 505, 550, 564], "new_attribut": 370, "new_axi": 139, "new_dataset_nam": [218, 240], "new_datasets_nam": [19, 20, 26, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269], "new_ev": 505, "new_flux_map": 394, "new_funct": 370, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 550, "new_nam": [87, 90, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200], "new_ob": [88, 505], "new_observ": 91, "newaxi": 517, "newer": [387, 400, 411, 430], "newli": [415, 416, 417], "next": [87, 90, 101, 370, 371, 375, 386, 390, 391, 395, 398, 399, 427, 428, 439, 452, 455, 456, 458, 460, 468, 469, 472, 473, 476, 477, 478, 481], "nfcn": 470, "nfev": [100, 205, 206, 207, 441, 442, 444, 445, 446, 452, 453, 454, 465, 470, 481, 489, 490], "nfw": [25, 27, 493], "nfwprofil": 467, "ni": 370, "nice": [370, 375, 381, 387, 389, 397, 413, 421, 448, 452, 468, 565], "nicer": [370, 406, 491], "nieto": [418, 421, 423, 424, 432, 434, 435, 436], "nieva": 432, "night": [385, 463], "nightli": [402, 462], "nightwise_lc": 462, "nigro": [418, 421, 423, 429, 430, 432, 435], "niter": [121, 123, 131, 448], "nmcid": 424, "nn": 482, "noah": [398, 436], "node": [19, 20, 26, 157, 160, 189, 192, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 242, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 412, 470, 471, 473, 480, 481, 525, 542], "node_typ": [189, 192, 197, 456, 457, 471, 481], "noeth": [418, 419], "nois": [280, 286, 388, 564], "noisi": 480, "non": [16, 84, 87, 90, 99, 101, 103, 104, 108, 109, 113, 115, 121, 122, 123, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 169, 173, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 265, 297, 360, 361, 363, 365, 376, 381, 384, 388, 390, 391, 397, 411, 415, 416, 417, 421, 429, 432, 433, 435, 436, 441, 481, 485, 501, 505, 516, 517, 541, 564], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 279, 280, 281, 294, 295, 297, 300, 305, 309, 317, 318, 319, 321, 324, 325, 326, 327, 336, 339, 345, 353, 357, 358, 359, 363, 364, 365, 366, 367, 370, 382, 384, 387, 394, 397, 398, 423, 434, 435, 440, 441, 442, 444, 445, 447, 448, 452, 453, 454, 456, 457, 458, 460, 463, 464, 465, 467, 468, 469, 472, 473, 475, 476, 478, 481, 489, 493, 501, 517, 522, 523, 524, 565], "nonetyp": [84, 103, 122], "nonposit": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "nonposx": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 421], "nonstopmod": 371, "nonzero": 39, "nooverlaperror": 434, "noqa": [19, 20, 124, 144, 180, 191, 192, 198, 220, 272, 367], "nor": [95, 173, 380, 391, 395, 399], "norm": [19, 20, 26, 120, 121, 123, 124, 125, 128, 131, 137, 138, 164, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 363, 381, 392, 394, 398, 415, 416, 418, 421, 436, 438, 444, 449, 450, 452, 453, 455, 456, 457, 458, 460, 463, 464, 465, 467, 468, 469, 470, 481, 489, 490, 491, 493, 503, 512, 519, 524, 530, 531, 538, 550, 551, 559, 567], "norm_0": [525, 542], "norm_1": [525, 542], "norm_2": [525, 542], "norm_3": [525, 542], "norm_4": 542, "norm_5": 542, "norm_err": [120, 121, 123, 125, 131, 137, 394, 458, 469, 503], "norm_errn": [121, 123, 468, 491, 503], "norm_errp": [121, 123, 468, 491, 503], "norm_max": [124, 125, 128], "norm_min": [124, 125, 128], "norm_n_valu": [124, 125, 128], "norm_only_chang": 433, "norm_paramet": [208, 209, 210, 211], "norm_prior": 398, "norm_scan": [121, 394, 444, 445, 503], "norm_sensit": [121, 123], "norm_ul": [121, 123, 394, 458, 468, 469, 491, 503], "norm_valu": [124, 125, 128], "norma": [33, 38], "normal": [42, 100, 101, 104, 108, 109, 124, 125, 126, 128, 135, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 164, 187, 188, 190, 196, 197, 199, 200, 226, 242, 243, 246, 265, 267, 270, 297, 360, 361, 370, 371, 375, 376, 380, 381, 384, 388, 394, 410, 414, 423, 440, 450, 456, 462, 463, 465, 472, 473, 474, 475, 476, 481, 490, 491, 517, 522, 523, 524, 527, 528, 529, 550, 564, 566, 567], "normalis": [67, 80, 128, 141, 142, 143, 144, 147, 149, 151, 154, 155, 159, 164, 184, 187, 188, 190, 196, 199, 200, 242, 243, 255, 368, 445, 449, 450, 464, 474, 475, 476, 481, 489], "normed_templ": 476, "normspectralmodel": [218, 240, 393, 418, 434, 436, 476, 512], "north": [219, 227, 230, 522], "notat": [418, 507, 509, 515, 568], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 93, 100, 101, 102, 103, 107, 116, 122, 123, 128, 131, 144, 149, 157, 159, 169, 180, 198, 202, 205, 208, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 286, 287, 297, 318, 345, 361, 367, 369, 372, 373, 375, 378, 383, 384, 387, 390, 394, 395, 396, 398, 399, 400, 403, 409, 411, 431, 433, 435, 439, 440, 441, 445, 446, 448, 449, 452, 455, 457, 461, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 501, 503, 505, 512, 517, 518, 527, 528, 539, 567, 568, 569], "notebook": [87, 90, 334, 373, 374, 379, 380, 384, 385, 386, 387, 388, 390, 400, 402, 403, 404, 407, 410, 411, 412, 413, 415, 416, 417, 419, 421, 423, 427, 428, 429, 430, 431, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 504, 505, 506, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 565], "noth": [321, 387, 478], "notic": [376, 470, 485], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [377, 382, 387, 388, 390, 394, 408, 432], "novemb": [379, 408, 418, 419, 420, 421], "now": [16, 82, 84, 88, 98, 103, 121, 122, 123, 197, 241, 370, 373, 375, 376, 377, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 394, 396, 397, 398, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 455, 456, 457, 458, 460, 462, 463, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 502, 503, 514, 552, 556, 557, 558, 565, 567, 568, 569], "np": [83, 87, 90, 110, 114, 116, 123, 146, 187, 188, 190, 196, 199, 200, 205, 270, 370, 371, 381, 382, 385, 393, 394, 398, 432, 439, 444, 447, 448, 450, 452, 454, 456, 458, 460, 461, 463, 464, 465, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 482, 497, 498, 499, 503, 505, 512, 517, 518, 522, 523, 525, 550, 558], "npanel": 357, "npix": [186, 195, 198, 199, 200, 444, 454, 471, 481, 514, 518, 521, 525], "npix_max": 186, "npoint": [280, 470], "npred": [101, 104, 108, 109, 120, 121, 123, 124, 125, 128, 129, 131, 265, 283, 381, 382, 383, 392, 394, 409, 411, 418, 421, 427, 429, 456, 458, 468, 469, 478, 481, 501, 503, 567], "npred_background": [101, 104, 108, 109, 121, 123, 418, 446, 447, 458, 469, 503, 567], "npred_background_min": 140, "npred_excess": [120, 121, 123, 125, 131, 138, 450, 458, 465, 503], "npred_excess_err": [121, 123], "npred_excess_errn": [121, 123], "npred_excess_errp": [121, 123], "npred_excess_ref": [121, 123], "npred_excess_ul": [121, 123], "npred_min": 140, "npred_off": [104, 109, 567], "npred_sig": [101, 104, 108, 109, 382], "npred_sign": [101, 104, 108, 109, 366, 421, 435, 469, 567], "npred_signal_min": 140, "npred_sourc": 469, "nrow": [441, 444, 470, 531], "nside": [186, 187, 188, 432, 481, 516], "nside2resol": 188, "nside_til": [186, 188], "nsou": 448, "nstep": 385, "nu": [19, 26], "nu_e": [26, 467], "nu_mu": [26, 467], "nu_tau": [26, 467], "nuisanc": [444, 470, 564, 568], "null": [121, 123, 124, 125, 128, 129, 277, 279, 281, 445, 449, 450, 452, 455, 476, 489, 503, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 567], "null_valu": [129, 277, 458], "nullabl": [87, 90], "num": 83, "numba": 387, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 90, 91, 92, 93, 99, 101, 102, 104, 107, 108, 109, 111, 116, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 163, 164, 167, 170, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 273, 277, 279, 280, 281, 293, 297, 315, 317, 318, 319, 320, 321, 324, 325, 326, 327, 329, 330, 357, 363, 374, 375, 376, 379, 381, 382, 383, 384, 385, 389, 391, 394, 396, 397, 399, 406, 411, 421, 423, 424, 425, 430, 431, 432, 435, 436, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 467, 468, 469, 472, 473, 474, 476, 477, 480, 481, 482, 483, 489, 490, 491, 495, 501, 503, 505, 512, 514, 517, 518, 564, 565, 566, 567, 568], "number_of_column": [87, 90], "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 87, 90, 123, 192, 208, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 297, 369, 370, 383, 388, 403, 421, 439, 447, 449, 452, 454, 460, 464, 473, 480], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 91, 100, 110, 114, 116, 123, 124, 128, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 156, 158, 159, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 202, 203, 205, 208, 209, 211, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 266, 267, 279, 281, 297, 321, 326, 364, 369, 370, 371, 373, 377, 381, 383, 387, 388, 389, 396, 398, 406, 407, 414, 415, 418, 426, 427, 428, 430, 432, 433, 434, 436, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 489, 490, 491, 497, 498, 499, 503, 505, 517, 518, 522, 523, 525, 550, 558], "numpoint": [205, 470], "numpy121": 373, "nupeak_ob": 491, "nutshel": 569, "n\u00f6the": [421, 423, 424], "o": [67, 82, 87, 90, 100, 194, 370, 379, 384, 387, 391, 394, 401, 402, 404, 413, 421, 424, 427, 428, 429, 435, 439, 441, 444, 448, 454, 461, 462, 463, 464, 473, 477, 478, 480, 505, 564, 565], "ob": [40, 82, 83, 88, 89, 90, 91, 95, 157, 167, 295, 296, 382, 383, 386, 387, 392, 406, 424, 425, 434, 439, 441, 444, 447, 448, 454, 456, 460, 463, 464, 465, 472, 477, 480, 481, 482, 483, 487, 490, 502, 505, 510, 512, 514, 515], "obei": 517, "obj": [16, 84, 103, 122, 446], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 99, 100, 101, 102, 103, 104, 108, 109, 121, 122, 123, 126, 127, 128, 132, 133, 134, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 171, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 279, 281, 297, 301, 305, 306, 309, 317, 319, 321, 327, 330, 344, 345, 346, 347, 352, 357, 363, 365, 366, 367, 376, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 394, 396, 397, 402, 406, 412, 413, 415, 416, 417, 418, 421, 423, 428, 429, 430, 432, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 453, 455, 458, 460, 461, 462, 463, 464, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 483, 489, 490, 491, 495, 500, 501, 502, 503, 511, 514, 516, 517, 518, 562, 564, 565, 569], "obs2": 505, "obs_": 444, "obs_clust": [91, 477], "obs_col": 454, "obs_con": [16, 445, 449, 450, 452, 489], "obs_copi": 88, "obs_fil": [16, 445, 449, 450, 452, 489], "obs_filenam": 482, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 90, 95, 140, 205, 295, 296, 380, 382, 392, 397, 406, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 462, 463, 464, 470, 472, 477, 480, 482, 483, 487, 489, 490, 514], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [88, 103, 397], "obs_list": [429, 431], "obs_list_vela": 465, "obs_mod": 94, "obs_model": 440, "obs_muoneff": 477, "obs_po": [41, 300], "obs_tabl": [82, 90, 95, 295, 296, 423, 454, 456, 463, 472, 477, 480, 482, 483, 487, 490, 514], "obs_table_filenam": 82, "obs_tim": [16, 445, 449, 450, 452, 489], "obs_time_src": 472, "obs_zenith": 477, "obscor": 436, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 95, 100, 101, 102, 103, 104, 107, 108, 109, 111, 157, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 177, 178, 179, 180, 182, 183, 184, 217, 220, 225, 229, 231, 232, 233, 248, 254, 266, 269, 282, 288, 294, 296, 305, 326, 374, 376, 382, 383, 384, 385, 386, 390, 392, 394, 397, 402, 411, 415, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 438, 439, 441, 446, 447, 449, 450, 452, 453, 460, 461, 464, 465, 470, 478, 479, 480, 482, 483, 485, 487, 493, 501, 502, 505, 508, 510, 512, 514, 515, 541, 564, 565, 566, 567], "observation_clust": [438, 477, 479], "observation_dead_time_fract": [83, 88], "observation_list": 91, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 430, "observationcta": 380, "observationeventsampl": 436, "observationfilt": [88, 380, 385, 410, 431], "observationlist": [380, 431], "observationmetadata": 397, "observations_list": 91, "observationsconfig": 16, "observationseventsampl": 436, "observationssummari": 415, "observationstat": [410, 415], "observationt": [82, 383, 384, 432, 477, 482, 490], "observationtablecheck": 430, "observationtablesummari": 427, "observatori": [57, 59, 63, 82, 83, 85, 88, 93, 383, 397, 399, 402, 422, 480, 482, 483, 500, 505], "observatory_earth_loc": [83, 88], "observatory_loc": [397, 423, 439, 447, 456, 457, 460, 464], "obsinfometadata": 103, "obstim": [85, 93, 180, 569], "obtain": [85, 101, 104, 107, 121, 123, 132, 285, 380, 385, 387, 388, 394, 431, 444, 445, 446, 450, 456, 457, 461, 463, 470, 473, 474, 478, 489, 491, 501, 505, 509, 510, 564, 566, 567], "obviou": [382, 389, 390, 391, 397], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 493], "occur": [187, 188, 190, 199, 200, 327, 370, 390, 391, 395, 481], "occurr": [91, 99, 191, 209, 211, 218, 240], "oct": [378, 380, 381, 385, 387, 390, 396], "octob": 379, "odd": [198, 200], "odd_npix": [198, 200], "odot": [28, 35, 39, 40, 52], "off": [101, 104, 106, 108, 109, 120, 162, 168, 169, 172, 175, 184, 281, 294, 367, 368, 373, 376, 382, 384, 385, 386, 415, 421, 423, 425, 435, 439, 440, 441, 445, 446, 450, 454, 462, 463, 465, 469, 470, 472, 478, 501, 514, 515, 564, 566, 567, 568], "off_2": [104, 109], "off_ev": 465, "off_patch": 465, "off_phas": [168, 465], "off_phase_rang": 465, "offdatabackgroundmak": 426, "offer": [121, 373, 381, 396, 397, 402, 403, 430, 446, 470, 472, 476, 505], "offici": [396, 506, 565], "offlin": [87, 90], "offset": [83, 95, 111, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 163, 167, 173, 174, 179, 182, 187, 188, 190, 192, 196, 199, 200, 370, 376, 384, 406, 415, 425, 427, 429, 434, 435, 436, 439, 446, 447, 449, 452, 453, 454, 460, 465, 471, 472, 477, 480, 483, 490, 502, 510, 512, 515], "offset2": 83, "offset_axi": [147, 149, 154, 159], "offset_band": 83, "offset_from_median": 83, "offset_index": 154, "offset_max": [16, 83, 163, 173, 179, 182, 445, 449, 450, 452, 454, 460, 465, 472, 489, 490, 512, 515], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 132, 271, 360, 361, 370, 375, 384, 385, 386, 388, 428, 439, 441, 445, 449, 450, 453, 454, 460, 469, 470, 472, 474, 489, 490, 501, 564], "ogip": [94, 105, 106, 109, 144, 189, 191, 192, 195, 196, 197, 382, 385, 428, 440, 444, 453, 501, 509, 518], "ogip_column": 196, "ogipdatasetread": 109, "ogipdatasetwrit": [109, 434, 436], "oife_2rl": 452, "ok": [370, 384, 470], "old": [191, 355, 370, 375, 378, 382, 386, 387, 412, 413, 428, 429, 430, 461], "old_attribut": 370, "older": [377, 387, 403, 428, 468], "oldest": 390, "olga": [426, 427], "olivera": [418, 421, 423, 424, 432, 434, 435, 436], "omega": [19, 20, 23, 254, 270, 522, 558], "omit": [131, 371, 452, 480, 565], "omp": 390, "on_circl": 514, "on_ellipse_annulu": 514, "on_ev": 465, "on_patch": 465, "on_phas": [168, 465], "on_phase_rang": 465, "on_posit": 184, "on_radii": 439, "on_radiu": [454, 465], "on_rectangl": 514, "on_region": [16, 101, 104, 170, 439, 441, 444, 445, 446, 447, 449, 450, 452, 454, 456, 457, 462, 463, 465, 469, 489, 514], "on_region_radiu": [439, 444, 447, 456, 457, 463], "onc": [87, 90, 101, 198, 370, 373, 375, 380, 381, 384, 385, 386, 390, 391, 392, 394, 395, 399, 400, 401, 446, 463, 465, 472, 475, 482, 485, 502, 505, 565], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 84, 87, 89, 90, 91, 92, 94, 98, 101, 103, 104, 107, 108, 109, 111, 116, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 167, 169, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 273, 277, 279, 280, 281, 305, 310, 326, 341, 357, 363, 364, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 429, 432, 433, 435, 439, 441, 444, 445, 446, 449, 452, 456, 461, 462, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 489, 490, 491, 500, 501, 502, 503, 505, 510, 512, 514, 517, 518, 524, 562, 563, 565, 566, 567, 568, 569], "ones": [87, 90, 116, 120, 124, 128, 131, 144, 191, 374, 378, 382, 384, 387, 390, 398, 403, 406, 461, 464, 471, 473, 493, 512, 564, 565], "ones_lik": [465, 512], "ongo": [373, 376, 377, 400], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 99, 100, 101, 102, 103, 104, 107, 108, 109, 120, 122, 123, 124, 128, 131, 138, 145, 146, 150, 152, 157, 160, 163, 169, 174, 185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 208, 209, 211, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 265, 266, 267, 279, 281, 297, 317, 345, 367, 370, 371, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 403, 411, 413, 417, 421, 423, 424, 429, 433, 435, 436, 441, 442, 444, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 490, 493, 501, 503, 509, 512, 515, 518, 560, 564, 565, 566, 567], "onlin": [87, 90, 371, 375, 378, 390, 406], "onlinelibrari": 138, "onoff": [424, 501], "onserv": 92, "ontim": [180, 380, 456, 469], "onto": [187, 188, 190, 196, 198, 199, 200, 357, 376, 490, 501, 505, 517, 563], "oo": 396, "op": 386, "opac": 220, "open": [66, 87, 90, 371, 373, 375, 381, 384, 387, 389, 390, 394, 395, 396, 399, 401, 402, 404, 406, 407, 428, 445, 453, 473, 480, 482, 483, 489, 500, 564, 565], "openastronomi": 429, "oper": [87, 90, 186, 198, 213, 370, 376, 381, 384, 416, 418, 421, 430, 431, 435, 440, 469, 475, 476, 517, 518, 531, 533, 537, 540, 542, 545, 550], "opinion": [375, 565], "oppos": [461, 541, 565], "opposit": [187, 188], "opt": [88, 89, 468, 531, 541], "opt_method": 470, "optic": [220, 384, 440, 531], "optim": [19, 20, 26, 100, 129, 131, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 363, 369, 370, 379, 382, 383, 392, 394, 441, 442, 444, 445, 446, 447, 448, 452, 453, 454, 461, 465, 470, 478, 481, 489, 490], "optimis": [19, 20, 205, 206, 207, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 384, 386, 388, 430, 503, 562], "optimize_opt": [205, 452, 460, 470, 490], "optimize_result": [205, 206, 435], "optimizeresult": [100, 205, 206, 441, 442, 444, 445, 446, 452, 453, 454, 465, 470, 481, 489, 490], "optin": 396, "optinon": [108, 109], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 167, 168, 169, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 280, 281, 285, 286, 287, 293, 294, 295, 297, 308, 318, 321, 324, 325, 326, 327, 329, 330, 333, 338, 339, 341, 352, 353, 357, 358, 359, 364, 365, 366, 367, 370, 373, 375, 376, 378, 379, 381, 382, 384, 386, 388, 390, 393, 397, 400, 401, 402, 403, 404, 410, 411, 412, 415, 417, 418, 421, 423, 427, 429, 430, 431, 432, 434, 435, 436, 452, 460, 462, 464, 468, 469, 472, 473, 474, 476, 477, 480, 481, 489, 490, 501, 503, 505, 517, 518, 560, 565], "option_context": [87, 90], "optionali": 525, "optout": 396, "optpars": 375, "oral": 396, "orang": [371, 444, 452, 458, 462, 465, 467, 478, 514], "orchestr": [376, 380, 382, 386, 445, 489, 490], "orcid": 396, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 90, 93, 99, 100, 101, 104, 123, 141, 142, 145, 146, 152, 157, 160, 163, 167, 174, 177, 178, 183, 185, 186, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 265, 277, 297, 367, 371, 376, 381, 382, 384, 385, 386, 387, 394, 395, 396, 398, 411, 412, 413, 414, 415, 416, 417, 418, 421, 444, 445, 446, 448, 452, 453, 456, 465, 468, 470, 471, 472, 473, 476, 482, 489, 490, 491, 516, 517, 518, 565, 568], "ordereddict": [376, 387, 414], "ordinari": 491, "org": [11, 34, 63, 64, 65, 83, 87, 88, 90, 100, 173, 205, 246, 247, 260, 261, 286, 297, 373, 378, 387, 390, 395, 396, 399, 401, 402, 404, 408, 427, 429, 439, 447, 449, 452, 453, 454, 460, 464, 467, 468, 470, 472, 480, 548, 549, 565], "organ": [374, 390, 395, 396, 421, 482, 483, 502, 517], "organis": [377, 386, 389, 396, 429], "orient": [142, 150, 151, 370, 381], "origin": [41, 87, 90, 101, 103, 108, 122, 188, 200, 263, 265, 267, 380, 384, 396, 397, 427, 445, 449, 450, 452, 461, 463, 473, 476, 481, 489, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 568, 569], "origini": [121, 123], "orthogon": 330, "oscar": [429, 430], "osx": 417, "ot": 399, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 101, 103, 104, 108, 109, 121, 122, 124, 128, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 169, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 209, 211, 265, 278, 297, 310, 340, 359, 364, 369, 373, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 401, 429, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 501, 502, 503, 505, 510, 512, 514, 518, 533, 562, 563, 565, 569], "other_id": 441, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 101, 103, 104, 108, 109, 122, 155, 194, 198, 200, 202, 208, 209, 210, 211, 218, 240, 297, 363, 383, 393, 396, 475, 476, 481, 532], "oup": [132, 293], "our": [370, 373, 379, 384, 386, 387, 389, 392, 393, 394, 396, 411, 412, 428, 439, 441, 444, 445, 446, 449, 450, 452, 453, 454, 457, 463, 464, 465, 473, 474, 478, 482, 489, 490, 565], "ourself": 491, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 91, 93, 99, 100, 123, 187, 188, 190, 196, 199, 200, 240, 252, 253, 369, 370, 371, 373, 375, 378, 380, 382, 384, 386, 388, 389, 390, 395, 399, 406, 407, 409, 415, 429, 442, 446, 449, 450, 473, 474, 480, 481, 489, 491, 493, 494, 514, 527, 528, 562, 565, 569], "out_fold": 386, "outcom": [375, 384], "outdat": [387, 390], "outdir": [16, 82, 92, 445, 449, 450, 452, 489], "outer": [43, 44, 52, 53, 125, 162, 252, 528], "outer_height": [514, 518], "outer_width": [514, 518], "outfil": 370, "outflow": 197, "outlin": [101, 104, 108, 109, 214, 215, 219, 227, 230, 244, 252, 253, 267, 373, 375, 378, 379, 380, 381, 384, 390, 393], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 92, 103, 122, 136, 137, 144, 149, 187, 188, 190, 196, 199, 200, 206, 218, 232, 240, 280, 326, 371, 378, 380, 383, 386, 387, 391, 394, 397, 410, 425, 431, 434, 435, 452, 456, 457, 460, 464, 472, 473, 489, 490, 503, 505, 565, 566], "output_map": [187, 188, 190, 196, 199, 200], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 90, 101, 108, 113, 115, 144, 164, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 208, 210, 220, 268, 310, 358, 370, 384, 385, 386, 421, 450, 470, 472, 473, 474, 505, 512, 524, 550, 564], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 90, 91, 94, 100, 101, 104, 108, 109, 124, 131, 132, 144, 145, 155, 157, 160, 167, 174, 177, 178, 180, 181, 187, 188, 190, 191, 192, 196, 198, 199, 200, 218, 240, 270, 279, 281, 285, 308, 309, 322, 361, 370, 371, 375, 378, 379, 380, 383, 384, 385, 390, 393, 397, 401, 403, 421, 441, 444, 452, 455, 456, 464, 468, 469, 472, 473, 476, 478, 490, 491, 503, 509, 566, 567], "overal": [378, 384, 444], "overcom": 474, "overestim": [503, 567], "overflow": [197, 446, 464, 553], "overkil": 464, "overlai": 445, "overlaid": [101, 104, 108, 109, 444, 445], "overlap": [86, 90, 113, 115, 128, 175, 192, 197, 367, 385, 444], "overlap_ok": 86, "overlin": [101, 108, 501], "overload": 421, "overplot": [468, 500], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 337, 381, 444, 446, 454, 458], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 103, 122, 195, 367], "oversampl": [102, 107, 155, 157, 160, 167, 174, 180, 186, 187, 188, 190, 195, 196, 199, 200, 215, 219, 227, 230, 231, 232, 242, 252, 253, 255, 257, 263, 267, 269, 273, 412, 472], "oversample_energy_factor": [102, 107, 457], "oversampling_factor": [188, 198, 214, 215, 219, 227, 230, 231, 232, 242, 244, 252, 253, 255, 257, 263, 267, 269], "overview": [6, 373, 400, 415, 416, 418, 421, 438, 465, 473, 476, 485, 491, 492, 505, 506, 519, 566], "overwrit": [11, 15, 16, 19, 20, 26, 82, 83, 88, 92, 99, 100, 101, 104, 106, 108, 109, 121, 123, 145, 146, 152, 157, 160, 185, 186, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 206, 208, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 263, 264, 265, 266, 267, 317, 339, 394, 430, 432, 444, 445, 452, 453, 456, 457, 458, 471, 473, 474, 475, 476, 480, 481, 487, 489, 490, 501, 518, 529, 565], "overwrite_templ": [206, 218, 240], "overwritten": [157, 160, 309], "owen": [409, 422], "own": [87, 90, 98, 121, 123, 194, 196, 373, 376, 386, 392, 396, 421, 439, 456, 476, 481, 490, 505, 517, 518], "p": [38, 51, 54, 87, 90, 108, 109, 127, 284, 294, 370, 421, 445, 455, 467, 470, 489, 505, 510, 511, 567], "p0_birth": 43, "p90": 48, "p_": [507, 509, 510, 511], "p_0": [51, 187, 190, 196, 199, 200, 497], "p_dot": [51, 54], "p_i": [187, 190, 196, 199, 200], "p_lat": [187, 190, 196, 199, 200], "p_lon": [187, 190, 196, 199, 200], "p_mean": 42, "p_n": [187, 190, 196, 199, 200], "p_stdv": 42, "p_valu": [279, 281, 470, 565, 567], "pace": [378, 379], "packag": [6, 11, 136, 297, 334, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 384, 387, 388, 390, 395, 396, 397, 399, 401, 402, 404, 405, 406, 407, 408, 409, 411, 414, 415, 417, 418, 421, 424, 425, 426, 427, 428, 429, 430, 432, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 501, 504, 505, 506, 513, 518, 529, 537, 539, 540, 553, 565, 569], "pacman": 426, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 90, 101, 104, 108, 109, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 200, 358, 418, 421], "pad_width": [101, 108, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200], "pad_with": [187, 188, 190, 196, 199, 200], "page": [6, 87, 90, 205, 282, 288, 294, 371, 373, 375, 382, 384, 387, 390, 396, 399, 400, 402, 403, 407, 415, 416, 421, 424, 425, 428, 429, 430, 431, 470, 473, 483, 485, 503, 505, 516, 518, 566, 569], "pain": [370, 373, 377], "pair": [16, 84, 101, 103, 104, 108, 109, 121, 122, 123, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 386, 440], "panda": [87, 90, 369, 387, 430, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "panel": [88, 100, 101, 104, 108, 109, 357, 424, 456, 470], "panel_fov": 357, "panni": 421, "papadopoulo": [421, 423], "paper": [57, 59, 63, 72, 74, 124, 173, 390, 396, 430, 461, 463, 468, 472, 482, 493], "papermil": 386, "par": [381, 393, 398, 440, 470, 478, 480], "par_000_amplitud": 470, "par_001_alpha": 470, "par_002_beta": 470, "par_00x_": 381, "par_1": [205, 470], "par_2": [205, 470], "par_alpha": [205, 470], "par_beta": [205, 470], "par_box": 90, "par_nam": [218, 226, 240, 255, 265], "par_to_v": 480, "par_typ": [218, 226, 240, 255, 265], "parabol": [278, 310, 470], "parabola": [234, 235, 438, 453, 470, 519, 551], "paragraph": 375, "parallel": [6, 92, 124, 125, 128, 131, 163, 312, 313, 314, 315, 316, 317, 318, 373, 387, 400, 423, 435, 436, 469], "parallel_backend": [92, 124, 125, 128, 131, 163, 317, 458], "parallelbackendenum": 312, "parallelmixin": [92, 124, 131, 163], "param": [16, 84, 103, 122, 220, 268, 363, 386, 416, 470], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 470, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 299, 301, 303, 304, 306, 308, 309, 310, 311, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 379, 382, 383, 385, 386, 388, 389, 392, 394, 396, 407, 410, 411, 412, 413, 414, 415, 417, 418, 421, 423, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 444, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 471, 472, 477, 478, 480, 481, 490, 491, 493, 501, 503, 504, 505, 512, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568], "parameter": 476, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_name_scan": 205, "parameterestim": [117, 417, 436], "parameteris": [507, 509], "parameters_list": [209, 211], "parameters_nam": [218, 240], "parameters_stat_sum": 398, "parameters_unique_nam": [19, 20, 26, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 470], "parametr": [16, 27, 84, 100, 103, 122, 147, 148, 153, 156, 158, 234, 235, 252, 382, 386, 393, 411, 418, 421, 446, 448, 476, 480, 527, 528, 539], "parametricpsf": [148, 156, 421, 423], "parametris": [156, 393, 415, 509, 511, 522, 523, 524, 525, 532, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560], "parent": [16, 84, 103, 116, 120, 122, 124, 128, 131, 198, 370, 380, 397, 463, 503, 541], "parenthes": [381, 387, 433, 435], "parfiv": [387, 414], "parnam": 478, "pars": [16, 84, 85, 103, 122, 186, 195, 371, 384, 439, 447, 449, 452, 454, 460, 464, 474, 480, 565], "parse_arg": 565, "parse_fil": [16, 84, 103, 122], "parse_obj": [16, 84, 103, 122], "parse_raw": [16, 84, 103, 122], "parseabl": 297, "parser": 565, "part": [100, 370, 373, 376, 379, 381, 383, 384, 385, 386, 388, 389, 390, 395, 396, 411, 415, 416, 417, 425, 430, 435, 436, 439, 441, 444, 452, 460, 468, 469, 473, 474, 490, 491, 505, 510, 514], "parti": 375, "partial": [90, 101, 104, 145, 146, 152, 157, 160, 163, 186, 198, 200, 265, 384, 388, 416, 430, 516], "partial_overlap": 90, "particip": [375, 379, 390], "particl": [19, 26, 241, 270, 417, 493, 541], "particle_distribut": [241, 541], "particular": [87, 90, 370, 376, 383, 385, 392, 394, 395, 397, 418, 421, 432, 433, 441, 444, 445, 446, 447, 449, 453, 456, 461, 463, 464, 470, 472, 475, 480, 482, 483, 489, 490, 502, 505, 512, 514, 518, 567], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [373, 379, 380, 384, 390, 391], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 92, 100, 101, 103, 104, 107, 108, 109, 122, 123, 126, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 172, 180, 185, 186, 187, 188, 190, 192, 194, 195, 196, 198, 199, 200, 203, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 278, 280, 297, 309, 317, 318, 319, 324, 325, 326, 327, 357, 358, 363, 365, 366, 370, 373, 380, 382, 383, 384, 385, 397, 417, 421, 423, 435, 436, 441, 442, 444, 445, 452, 453, 457, 461, 462, 463, 468, 469, 470, 471, 472, 473, 474, 476, 477, 480, 489, 490, 491, 505, 516, 517, 518, 522, 523, 565, 569], "pass4": 482, "passkwarg": 446, "past": [370, 375, 378, 386, 387, 390, 391, 393, 396, 398, 406, 427, 429, 430, 473, 565], "patch": [367, 370, 377, 396, 424, 433, 444, 446, 454, 458, 465], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 92, 99, 103, 105, 106, 109, 122, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 187, 188, 190, 195, 196, 199, 200, 206, 218, 232, 240, 266, 305, 334, 335, 336, 339, 370, 373, 405, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 503, 559, 560, 565], "path_effect": [195, 218, 240], "path_to_notebook": 370, "path_to_script": 370, "patheffect": [195, 218, 240], "pathlib": [16, 82, 83, 86, 87, 90, 144, 196, 206, 218, 240, 335, 444, 445, 452, 453, 456, 457, 480, 489, 490], "pathpatch": 458, "pattern": [370, 376, 384], "paula": 436, "paulakx": 436, "paz": [422, 425, 426], "pbar": 505, "pc": [46, 47, 50, 52, 498, 499], "pcolormesh": [83, 123, 141, 142, 144, 147, 148, 149, 154, 156, 158, 159, 428, 434, 470, 471], "pd": [87, 90], "pdf": [100, 144, 148, 173, 246, 247, 260, 261, 319, 363, 371, 453, 456, 467, 472, 495, 497, 498, 499, 501, 502, 507, 508, 509, 511, 514, 518, 548, 549, 567, 570], "pdf_in_safe_rang": 144, "pdf_matrix": 144, "pdf_threshold": [144, 145, 149], "pdflatex": 371, "peak": [68, 126, 136, 137, 144, 173, 224, 229, 231, 235, 423, 429, 436, 448, 461, 468, 472, 528], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 370, "peek": [83, 88, 101, 104, 108, 109, 126, 127, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 370, 382, 406, 418, 424, 428, 432, 441, 446, 452, 456, 457, 465, 469, 471, 480, 482, 483, 502, 505, 507, 508, 509, 511], "pend": 297, "peopl": [375, 377, 390, 396, 399, 400, 467, 493, 505, 565], "pep": 375, "pep8": 373, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 98, 100, 101, 104, 108, 109, 111, 120, 121, 123, 124, 125, 128, 129, 136, 138, 139, 140, 157, 160, 192, 225, 232, 233, 273, 282, 288, 294, 370, 376, 382, 383, 386, 394, 396, 397, 409, 417, 421, 423, 436, 439, 447, 456, 460, 462, 464, 467, 472, 473, 477, 478, 482, 483, 501, 505, 508, 512, 564, 566], "per_decad": [192, 444, 446, 456, 457, 465, 469, 481, 509, 515], "percent": 130, "percentag": [144, 173, 472], "percentil": 83, "perfect": 144, "perfectli": [523, 565], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 93, 99, 103, 107, 122, 164, 172, 186, 198, 200, 215, 218, 219, 227, 230, 240, 242, 252, 253, 257, 263, 267, 279, 281, 333, 336, 363, 370, 371, 376, 379, 380, 381, 385, 386, 394, 397, 400, 402, 411, 418, 421, 423, 426, 430, 433, 435, 436, 439, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 457, 460, 462, 463, 464, 469, 470, 472, 473, 474, 475, 477, 482, 485, 489, 501, 505, 513, 514, 517, 523, 541, 563, 564, 565, 566], "perhap": 518, "period": [42, 51, 54, 192, 266, 377, 396, 429, 477, 497], "period_dot": 51, "periodogram": [280, 385, 430], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 396], "perseu": [33, 38], "person": [370, 373, 375, 377, 378, 379, 383, 388, 391], "perspect": [87, 90], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 429, "pf": 26, "pformat": [87, 90], "pformat_al": [87, 90], "pg": 491, "ph": 355, "pha": [105, 106, 109, 196, 382, 427, 430, 444, 453], "pha_": 469, "pha_meta": 105, "pha_ob": [105, 140, 205, 453, 470], "pha_obs23523": [108, 109, 129, 277, 478, 503], "pha_obs23592": 503, "phacountsspectrum": 413, "phacountsspectrumlist": 412, "phase": [50, 52, 53, 89, 165, 168, 266, 375, 380, 381, 384, 385, 387, 389, 394, 406, 411, 430, 432, 435, 438, 476, 494, 505, 519, 561], "phase_axi": 394, "phase_bkg_mak": 465, "phase_column_nam": [168, 465], "phase_curve_model": 559, "phase_filt": 89, "phase_max": 465, "phase_min": 465, "phase_model": 559, "phasebackgroundestim": 415, "phasebackgroundmak": [165, 415, 435, 465], "phasecurv": [266, 429, 559], "phasecurve_lsi_dc": 559, "phasecurvemodel": 393, "phasecurvetablemodel": [381, 383], "phasecurvetempl": 381, "phasogram": [266, 559], "phi": [19, 20, 26, 193, 212, 213, 216, 219, 220, 222, 223, 224, 227, 230, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 301, 393, 460, 475, 476, 481, 491, 510, 522, 523, 524, 526, 527, 528, 532, 534, 535, 536, 538, 539, 543, 544, 546, 547, 548, 549], "phi_0": [212, 214, 215, 219, 222, 223, 224, 227, 230, 234, 235, 242, 244, 246, 247, 252, 253, 256, 257, 259, 260, 261, 263, 267, 393, 470, 532, 535, 536, 539, 543, 546, 547, 548, 549], "phi_ref": [266, 559], "philipp": [429, 430], "phone": 390, "photon": [44, 220, 241, 355, 385, 440, 447, 456, 460, 474, 476, 491, 510, 541, 564], "photutil": [136, 370, 384, 430], "php": 63, "physic": [124, 125, 128, 131, 317, 318, 369, 394, 398, 412, 445, 453, 473, 476, 478, 480, 489, 503, 505, 541, 564, 567, 568], "pi": [19, 20, 30, 31, 32, 37, 54, 228, 270, 393, 476, 499, 522, 523, 524, 527, 528, 538, 558], "pick": [370, 377, 384, 395, 411, 491], "pictur": 371, "pie": 505, "piec": [370, 376, 384, 389, 398], "piecewis": [242, 243, 438, 476, 519, 530, 551], "piecewisebrokenpowerlawnormspectralmodel": 393, "piecewisebrokenpowerlawnormspectramodel": 393, "piecewisenormsectralmodel": 418, "piecewisenormspatialmodel": [249, 435, 476, 525], "piecewisenormspectralmodel": [250, 398, 418, 421, 434, 436, 476, 512, 542], "pig": [13, 370, 372, 373, 410, 411, 413, 414, 415, 417, 418, 429, 431, 432, 436], "pii": 138, "pillar": 386, "pin": 430, "pink": [108, 109], "pint": [465, 505], "pintor": [383, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 432, 434, 435, 436], "pip": [369, 373, 377, 387, 401, 402, 404, 411, 430, 480, 565], "pipe": [426, 427, 428], "pipelin": [383, 385, 417], "piron": 564, "piron2001": 564, "pivot": [19, 20, 26, 67, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 436, 468], "pivot_energi": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "pix": [185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 517], "pix_reg": 467, "pix_reg_rec": 467, "pix_to_coord": [185, 186, 189, 191, 192, 195, 197, 198, 436], "pix_to_idx": [185, 186, 189, 191, 192, 195, 197, 198], "pixcoord": 384, "pixel": [13, 83, 101, 104, 108, 109, 111, 112, 116, 126, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 170, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 215, 218, 219, 227, 230, 240, 242, 252, 253, 257, 263, 267, 381, 409, 413, 427, 430, 448, 450, 456, 458, 469, 472, 473, 481, 491, 501, 503, 515, 516, 517, 526], "pixel_area": 198, "pixel_scal": [116, 186, 198], "pixelregion": [384, 514], "pixilis": 473, "pixreg": 524, "pixregion": 200, "pk": [132, 416, 440, 461, 463, 464, 468, 477, 491, 531], "pks2155": [440, 463], "pks2155_hess_lc": [121, 123, 139, 461], "pkvizj95": 440, "pl": [67, 80, 120, 125, 131, 164, 238, 245, 246, 247, 393, 442, 458, 468, 469, 476, 491], "pl_model": 557, "pl_spectrum": 478, "place": [83, 86, 87, 90, 91, 99, 101, 104, 108, 109, 136, 141, 142, 143, 144, 145, 146, 147, 151, 152, 157, 159, 160, 170, 175, 187, 188, 190, 196, 199, 200, 240, 265, 293, 343, 370, 371, 377, 378, 381, 382, 383, 384, 386, 389, 390, 391, 392, 395, 400, 414, 416, 444, 462, 473, 474, 476, 491, 501, 502, 563, 569], "placehold": 375, "plai": [390, 454], "plain": [387, 473], "plan": [374, 375, 379, 380, 384, 386, 387, 390, 395, 399, 410, 427, 429, 430, 431, 562], "planar": [267, 381], "plane": [29, 67, 68, 124, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 390, 467, 468, 473, 480, 500, 515, 518, 523, 564, 570], "plate": [198, 473], "platform": [387, 396, 421], "plausibl": [397, 455], "pleas": [102, 107, 371, 373, 375, 377, 379, 405, 410, 411, 412, 421, 429, 431, 442, 444, 445, 446, 447, 449, 452, 456, 457, 461, 463, 464, 469, 489, 494, 505], "pleasant": 373, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 100, 101, 104, 108, 109, 123, 126, 127, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 187, 188, 189, 190, 192, 195, 196, 197, 199, 200, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 271, 275, 348, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 371, 384, 385, 386, 388, 389, 391, 394, 406, 409, 412, 415, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 439, 441, 442, 446, 449, 450, 452, 453, 457, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 474, 476, 477, 478, 480, 481, 482, 483, 489, 491, 495, 497, 498, 499, 501, 505, 507, 508, 509, 511, 514, 559, 560, 567, 569], "plot_absorb": [438, 531, 551], "plot_at_energi": [141, 142, 480], "plot_bia": [144, 149], "plot_broken_powerlaw": [438, 532, 551], "plot_compound": [438, 533, 551], "plot_const": [438, 521, 530], "plot_constant_spectr": [438, 534, 551], "plot_constant_tempor": [438, 552, 561], "plot_containment_radiu": [148, 154, 156, 158], "plot_containment_radius_vs_energi": [148, 154, 156, 157, 158, 160, 480, 481], "plot_contour_lin": 470, "plot_correl": [203, 470], "plot_count": [108, 109], "plot_dat": 569, "plot_disk": [438, 522, 530], "plot_distribut": [450, 452], "plot_energi": [83, 457], "plot_energy_depend": [141, 147, 480, 507], "plot_energy_offset": 83, "plot_err": 126, "plot_error": [19, 20, 26, 66, 67, 100, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 388, 440, 442, 444, 446, 452, 453, 455, 468, 470, 490], "plot_excess": [108, 109, 424], "plot_exp_cutoff_powerlaw": [438, 535, 551], "plot_exp_cutoff_powerlaw_3fgl": [438, 536, 551], "plot_exp_cutoff_powerlaw_norm_spectr": [438, 537, 551], "plot_expdecay_tempor": [438, 553, 561], "plot_extension_error": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267], "plot_fit": [100, 108, 109, 441, 444, 445, 446, 454, 465, 489], "plot_gauss": [438, 523, 530], "plot_gauss_spectr": [438, 538, 551], "plot_gaussian_tempor": [438, 554, 561], "plot_gen_gauss": [438, 524, 530], "plot_generalized_gaussian_tempor": [438, 555, 561], "plot_grid": [155, 187, 188, 190, 196, 199, 200, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 394, 423, 434, 452, 469, 471, 472, 473, 474, 476, 482], "plot_heatmap": 203, "plot_hist": [196, 518], "plot_imag": 83, "plot_interact": [187, 188, 190, 196, 199, 200, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 423, 430, 452, 460, 473, 489, 490], "plot_kernel": 155, "plot_kwarg": [444, 446, 454], "plot_linear_tempor": [438, 556, 561], "plot_logparabola": [438, 539, 551], "plot_logparabola_norm_spectr": [438, 540, 551], "plot_map_rgb": 435, "plot_mask": [108, 109, 188, 196, 200, 441, 444, 445, 514], "plot_matrix": [144, 469, 481], "plot_migr": 149, "plot_naima": [438, 541, 551], "plot_npred_sign": [435, 452, 454, 490], "plot_offset2_distribut": 83, "plot_offset_depend": [141, 147], "plot_panel": 357, "plot_phasogram": 266, "plot_piecewise_norm_spati": [438, 525, 530], "plot_piecewise_norm_spectr": [438, 542, 551], "plot_point": [438, 526, 530], "plot_posit": [218, 240, 475], "plot_position_error": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267], "plot_powerlaw": [438, 543, 551], "plot_powerlaw2": [438, 544, 551], "plot_powerlaw_norm_spectr": [438, 545, 551], "plot_powerlaw_tempor": [438, 557, 561], "plot_profil": 126, "plot_psf_vs_rad": [148, 154, 156, 157, 158, 160, 481], "plot_rad_max_vs_energi": [159, 446], "plot_region": [195, 196, 218, 240, 367, 446, 458, 475, 514, 518], "plot_residu": [100, 101, 104, 108, 109, 419, 421, 452, 490], "plot_residuals_spati": [101, 104, 108, 109, 452, 460, 490], "plot_residuals_spectr": [101, 104, 108, 109], "plot_rgb": 435, "plot_shel": [438, 527, 530], "plot_shell2": [438, 528, 530], "plot_sine_tempor": [438, 558, 561], "plot_smooth_broken_powerlaw": [438, 546, 551], "plot_spati": 421, "plot_spectrum": [100, 141, 452, 464, 469], "plot_spectrum_datasets_off_region": [418, 434, 435, 444, 446, 454, 514], "plot_stat": 444, "plot_super_exp_cutoff_powerlaw_3fgl": [438, 547, 551], "plot_super_exp_cutoff_powerlaw_4fgl": [438, 548, 551], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [438, 549, 551], "plot_templ": [438, 529, 530], "plot_template_phase_tempor": [438, 559, 561], "plot_template_spectr": [438, 550, 551], "plot_template_tempor": [438, 560, 561], "plot_theta_squared_t": [482, 483], "plot_tim": 83, "plot_ts_profil": [123, 444, 445, 458, 462], "plotmixin": [108, 109], "plotter": 357, "plsuperexpcutoff3fgl": 428, "plsuperexpcutoff4fgl": 413, "plt": [19, 20, 26, 66, 67, 127, 141, 147, 148, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 358, 367, 370, 371, 406, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 497, 498, 499, 505, 507, 508, 509, 511, 514, 522, 524, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 219, 390, 396, 476], "pmf": 383, "png": [148, 378, 406, 495, 497, 498, 499, 501, 502, 507, 508, 509, 511, 514, 518, 567, 570], "po": [146, 198, 514], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 93, 94, 95, 98, 99, 100, 101, 103, 104, 108, 109, 117, 121, 123, 124, 125, 128, 129, 130, 131, 133, 139, 146, 148, 151, 157, 159, 160, 170, 171, 173, 174, 175, 177, 178, 180, 181, 183, 184, 187, 188, 190, 195, 196, 199, 200, 205, 218, 240, 244, 255, 273, 277, 280, 286, 299, 303, 309, 315, 325, 362, 370, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 409, 412, 414, 415, 421, 423, 424, 426, 427, 428, 429, 431, 434, 435, 436, 438, 441, 443, 446, 447, 448, 452, 457, 458, 460, 462, 464, 465, 469, 470, 471, 472, 473, 476, 477, 481, 483, 485, 493, 494, 500, 501, 502, 505, 510, 513, 514, 517, 519, 523, 524, 530, 541, 562, 563, 564], "point_sourc": 381, "pointer": 378, "pointing_altaz": [397, 435], "pointing_galact": 90, "pointing_info": [85, 93, 439], "pointing_posit": [157, 447, 457, 460], "pointing_radec": [83, 90, 435, 480], "pointing_t": 93, "pointing_zen": 435, "pointinginfo": [85, 427], "pointinginfometadata": 103, "pointingmetadata": 397, "pointingmod": 85, "pointlik": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 429, 514], "points_scal": 309, "pointskyregion": [169, 174, 195, 244, 424, 446, 457], "pointsourc": [381, 493], "pointspatialmodel": [19, 20, 72, 80, 131, 249, 393, 394, 414, 434, 448, 449, 452, 453, 456, 457, 462, 468, 469, 475, 476, 481, 489, 490, 526], "pointspreadfunct": 471, "poisson": [104, 109, 279, 280, 281, 282, 288, 290, 291, 294, 327, 382, 383, 412, 417, 442, 447, 450, 460, 564, 565, 567], "poissonian": [280, 461, 465, 564], "poissonlikelihoodfitt": 426, "polar": [51, 54, 298, 370], "pole": [51, 384, 473], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 188], "polici": 374, "pollut": 385, "polygon": [188, 202, 384], "polygonis": 384, "polygonpixelregion": 384, "polygonskyregion": [202, 384], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 237, 473], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [313, 317, 318], "pool_kwarg": [317, 318], "poolmethodenum": 313, "poon": 427, "poorli": [472, 512], "pop": [91, 99, 194, 240], "popitem": 194, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 371, 390, 428, 494, 496, 541, 563], "popular": 565, "port": 428, "pos_ob": 454, "pos_on": 184, "pos_target": [454, 465], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 93, 94, 95, 101, 102, 103, 104, 107, 121, 122, 123, 124, 125, 128, 129, 131, 145, 146, 152, 155, 157, 160, 170, 173, 175, 184, 186, 187, 188, 190, 195, 196, 197, 198, 199, 200, 201, 208, 209, 210, 211, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 265, 267, 277, 279, 281, 295, 296, 299, 300, 303, 304, 358, 370, 377, 381, 383, 384, 393, 394, 395, 396, 411, 413, 418, 421, 423, 436, 439, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 464, 465, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 480, 481, 483, 491, 501, 502, 503, 505, 510, 511, 514, 515, 516, 518, 522, 523, 524, 526, 541, 567], "position_angl": 447, "position_error": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 415], "position_lonlat": [214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267], "position_off": 184, "positv": 432, "posixpath": [16, 334], "possibl": [33, 82, 87, 90, 150, 370, 371, 373, 377, 378, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 397, 400, 402, 412, 413, 421, 428, 430, 435, 440, 444, 448, 449, 450, 455, 458, 469, 470, 471, 472, 473, 481, 490, 491, 503, 505, 512, 517, 518, 541, 565, 566], "possibli": [87, 90, 121, 376, 380, 381, 383, 384, 388, 389, 390, 391, 397, 399, 421, 512], "post": [52, 379, 397], "poster": [373, 396, 400, 425], "posterior": [388, 478], "posteriori": 478, "postfix": 370, "potenti": [118, 378, 386, 455, 505], "potentiel": 396, "power": [19, 20, 26, 27, 100, 120, 121, 123, 125, 130, 135, 155, 157, 160, 186, 208, 210, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 256, 258, 259, 260, 261, 264, 268, 270, 275, 280, 324, 381, 383, 409, 415, 427, 429, 438, 440, 447, 449, 452, 456, 458, 460, 463, 464, 465, 475, 476, 478, 505, 519, 531, 551, 557], "power_spectrum": 280, "power_spectrum_param": 280, "powerlaw": [173, 246, 248, 280, 381, 382, 386, 427, 429, 438, 441, 449, 457, 458, 468, 476, 478, 490, 519, 545, 561], "powerlaw2spectralmodel": [238, 246, 247, 250, 393, 442, 449, 476, 491, 544], "powerlaw_with_paramet": 280, "powerlawnormspectralmodel": [67, 226, 245, 247, 250, 265, 392, 393, 398, 418, 436, 452, 453, 456, 457, 460, 469, 475, 476, 481, 489, 512, 525, 545, 550], "powerlawspectr": 131, "powerlawspectralmodel": [70, 72, 76, 80, 100, 108, 109, 113, 115, 123, 129, 131, 209, 211, 245, 246, 250, 271, 393, 394, 398, 440, 441, 442, 445, 447, 448, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 468, 469, 475, 476, 478, 480, 481, 489, 490, 491, 503, 521, 522, 523, 524, 526, 527, 528, 529, 531, 533, 542, 543, 545, 552, 553, 554, 555, 556, 557, 558, 559, 560], "powerlawspectramodel": 398, "powerlawtemporalmodel": [262, 476, 557], "pppc4dmid": 26, "pprint": [87, 90, 566], "pprint_al": [87, 90], "pprint_exclude_nam": [87, 90], "pprint_include_nam": [87, 90], "pr": [370, 380, 382, 384, 393, 394, 396, 398, 399, 415, 416], "practic": [383, 387, 391, 394, 395, 396, 397, 444, 469, 474, 476, 490, 501, 505, 514, 564], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 100, 103, 107, 122, 123, 297, 370, 373, 379, 390, 396, 397, 401, 402, 418, 430, 432, 445, 449, 450, 453, 455, 458, 461, 468, 470, 475, 478, 501, 507], "preced": [315, 384, 386, 396, 476], "precis": [131, 148, 154, 156, 158, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 370, 388, 395, 396, 457], "precision_factor": [157, 160, 187, 188, 190, 196, 199, 200], "precomput": [26, 100, 123, 469, 475], "pred": 501, "predefin": [423, 458, 462, 463, 489], "predic": 381, "predict": [100, 101, 104, 107, 108, 109, 120, 121, 123, 124, 125, 128, 129, 135, 164, 167, 173, 180, 244, 255, 283, 319, 366, 376, 381, 382, 383, 418, 435, 436, 440, 445, 447, 449, 450, 452, 454, 456, 458, 460, 469, 472, 478, 489, 490, 503, 505, 509, 512, 531, 564, 567], "prefer": [87, 90, 345, 370, 375, 377, 381, 389, 390, 396, 401, 402, 406, 458, 464, 473, 474, 478, 485, 565, 567], "prefix": [192, 381], "preliminari": [379, 390, 398, 426, 428, 436, 448, 471, 481], "prepar": [82, 167, 380, 381, 399, 445, 453, 472, 476, 481, 489, 513, 562], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [87, 90], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 448, 461, 473, 541, 564], "present": [15, 70, 82, 83, 85, 90, 91, 99, 105, 109, 121, 123, 161, 189, 194, 218, 226, 240, 297, 370, 371, 373, 383, 386, 390, 394, 397, 400, 421, 441, 446, 449, 450, 461, 462, 463, 467, 471, 472, 473, 475, 501, 503, 506, 518, 565, 567], "preserv": [87, 90, 104, 187, 188, 190, 192, 196, 199, 200, 387, 469, 474], "preserve_count": [187, 188, 190, 196, 199, 200, 473], "press": 480, "pretti": [384, 390, 400, 406], "prevent": [188, 220, 297, 421, 452, 512], "preview": [373, 483], "previou": [74, 87, 90, 370, 373, 384, 390, 391, 395, 399, 412, 418, 436, 446, 455, 456, 473, 476, 477, 478, 491, 500], "previous": [277, 387, 417, 429, 430, 439, 444, 452, 453, 468, 472, 474], "primari": [26, 87, 90, 187, 188, 190, 191, 199, 200, 375, 396, 417, 432, 473], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 191, "primary_band": 473, "primary_hdu": 456, "primaryflux": [19, 20, 467, 493], "primaryhdu": [456, 473], "prime": 23, "primer": 388, "princip": 455, "principl": [396, 398, 444, 515], "print": [11, 67, 82, 83, 85, 86, 87, 88, 90, 93, 95, 100, 101, 108, 110, 114, 120, 123, 125, 131, 136, 137, 142, 144, 147, 148, 154, 156, 158, 167, 170, 209, 211, 218, 232, 240, 271, 295, 296, 305, 337, 370, 371, 381, 382, 385, 394, 397, 405, 406, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 489, 490, 491, 503, 505, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 565, 566, 567, 569], "print0": 370, "print_level": [452, 460, 470, 490], "print_stack": 370, "printout": [370, 428, 429, 469], "prior": [19, 20, 98, 100, 101, 108, 208, 209, 210, 211, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 374, 379, 402, 404, 436, 438, 440, 441, 444, 445, 446, 447, 449, 452, 453, 458, 460, 464, 468, 470, 476, 479, 485, 490, 491, 517, 550, 562], "prior_registri": 478, "prior_stat_sum": [208, 209, 210, 211, 398, 478], "priorfitstatist": 398, "priori": [394, 450, 474], "prioriti": [367, 379, 381, 382, 384, 396, 399], "priormodel": 398, "priorparamet": [398, 478], "privat": [370, 373, 379, 393, 429, 482, 483], "pro": [370, 386], "probabl": [13, 100, 149, 370, 373, 376, 377, 378, 380, 383, 384, 388, 390, 392, 398, 400, 444, 447, 460, 470, 473, 476, 478, 481, 509, 510, 511, 564, 565, 567, 568], "probe": [131, 286, 476], "problem": [19, 20, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 293, 348, 378, 380, 384, 391, 398, 405, 433, 470], "problemat": [389, 394, 397, 463, 505], "proce": [373, 400, 402, 404, 432, 440, 441, 444, 445, 456, 460, 463, 474, 475, 481, 489, 490], "procedur": [383, 395, 400, 440, 448, 452], "proceed": [390, 396, 482], "process": [11, 83, 92, 124, 125, 128, 131, 163, 188, 200, 316, 317, 318, 327, 370, 371, 373, 375, 376, 378, 379, 380, 382, 383, 385, 386, 392, 395, 396, 397, 403, 407, 413, 418, 421, 423, 429, 436, 441, 444, 454, 456, 457, 468, 469, 472, 482, 487, 490, 495, 502, 504, 505, 563, 564, 565], "process_lots_of_data": 370, "processor": 390, "prod": 410, "prod3": 390, "prod3b": 480, "prod5": [456, 457], "produc": [15, 101, 104, 108, 109, 112, 121, 274, 276, 370, 371, 376, 385, 386, 394, 395, 397, 400, 415, 440, 441, 444, 446, 448, 453, 454, 455, 456, 460, 463, 465, 467, 470, 472, 478, 480, 490, 505, 508, 510, 564, 565], "product": [107, 187, 188, 190, 193, 196, 199, 200, 266, 376, 385, 386, 396, 397, 406, 421, 435, 436, 440, 442, 448, 457, 465, 469, 470, 472, 481, 483, 503, 510, 564], "prof_mak": 125, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 100, 117, 121, 123, 124, 125, 126, 127, 128, 129, 131, 148, 154, 156, 157, 158, 160, 184, 188, 196, 205, 229, 231, 278, 294, 310, 329, 330, 382, 384, 388, 389, 396, 402, 404, 409, 411, 418, 421, 426, 428, 430, 431, 436, 438, 444, 445, 454, 459, 462, 464, 470, 478, 485, 493, 501, 503, 505, 517, 522, 564, 567], "profile_err": 126, "profile_high": 458, "profile_new": 458, "profuma": 493, "program": [370, 386], "programmat": 452, "progress": [15, 82, 116, 128, 131, 205, 318, 376, 379, 386, 387, 400, 421, 428, 429, 430, 436, 505], "progress_download": 505, "proj": [101, 104, 108, 109, 167, 186, 187, 188, 198, 199, 200, 444, 472, 473, 481, 490, 514], "project": [101, 108, 125, 164, 170, 186, 187, 188, 190, 195, 196, 198, 199, 200, 215, 218, 219, 227, 230, 240, 242, 252, 253, 257, 263, 267, 304, 330, 370, 371, 372, 373, 375, 377, 384, 386, 387, 390, 396, 413, 421, 429, 435, 445, 448, 450, 454, 458, 465, 471, 473, 474, 475, 480, 481, 487, 489, 490, 491, 493, 514, 517, 518, 527, 528, 563, 565], "projected_distance_axi": 125, "prompt": 565, "pronounc": 505, "pronunci": 505, "prop_cycl": 367, "propag": [19, 20, 26, 53, 126, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 285, 381, 388, 415, 435, 470], "proper": [45, 99, 385, 396, 434, 435, 446, 452, 505], "properli": [131, 180, 375, 385, 396, 433, 434, 444, 445, 470, 489, 501, 566], "properti": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 95, 121, 164, 198, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 287, 367, 370, 371, 381, 383, 393, 394, 397, 398, 418, 421, 423, 428, 429, 431, 434, 435, 444, 446, 454, 456, 458, 468, 474, 476, 477, 491, 502, 518, 564], "propos": [372, 374, 375, 376, 377, 379, 387, 395, 396, 398, 411, 414, 415, 417, 418, 429, 435], "proto": [16, 84, 103, 122], "proton": [270, 541], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 370, 375, 381, 383, 386, 387, 388, 390, 426, 428, 429, 436, 494], "proven": 386, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 85, 87, 88, 90, 100, 101, 103, 104, 108, 109, 112, 122, 128, 131, 144, 145, 163, 177, 178, 183, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 267, 280, 294, 297, 363, 370, 371, 380, 381, 383, 385, 386, 387, 390, 391, 394, 396, 397, 398, 399, 400, 401, 405, 407, 411, 414, 415, 416, 418, 421, 423, 432, 435, 439, 444, 446, 447, 448, 457, 460, 461, 468, 469, 470, 472, 473, 474, 476, 477, 481, 482, 483, 485, 490, 491, 493, 495, 500, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 515, 516, 517, 518, 519, 526, 529, 541, 550, 562, 563, 564, 565, 567, 570], "proxi": 380, "prune": 373, "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 373, "psf": [16, 82, 87, 88, 95, 101, 102, 104, 107, 108, 109, 111, 112, 146, 148, 153, 154, 155, 156, 157, 158, 160, 167, 174, 183, 198, 218, 240, 255, 295, 296, 370, 376, 380, 381, 382, 383, 386, 409, 411, 415, 416, 417, 418, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 435, 439, 441, 444, 445, 446, 448, 449, 450, 452, 454, 456, 457, 460, 462, 469, 472, 474, 477, 480, 482, 483, 489, 490, 501, 503, 505, 510, 513, 518, 564], "psf3d": [88, 148, 153, 156, 158, 183, 411, 429, 511], "psf68": 439, "psf_": 501, "psf_3gauss": [87, 148, 480, 511], "psf_assym": 471, "psf_kernel": [157, 481], "psf_kernel_map": [155, 481], "psf_king": [87, 156, 511], "psf_map": [102, 107, 157, 160], "psf_map_reco": [160, 482], "psf_mean": 481, "psf_new": 471, "psf_out": [157, 160], "psf_r95": 474, "psf_tabl": [82, 87, 154, 471, 483], "psf_theta": 370, "psf_valu": [148, 156, 158], "psfkernel": [104, 157, 160, 188, 200, 382, 391, 430, 511], "psfking": [153, 423, 511], "psfmap": [101, 102, 104, 107, 108, 109, 145, 146, 152, 153, 155, 160, 167, 174, 183, 382, 383, 391, 411, 414, 415, 417, 418, 430, 436, 448, 469, 481, 505, 511], "psfnd": 471, "psr": [465, 468, 491], "public": [6, 360, 361, 373, 375, 384, 389, 392, 395, 400, 425, 441, 453, 462, 463, 563, 570], "publicli": [480, 482, 483], "publish": [11, 387, 400, 444, 481], "pull": [371, 374, 375, 378, 379, 380, 381, 382, 383, 384, 390, 395, 396, 400, 408], "puls": 231, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 60, 64, 83, 380, 390, 411, 413, 432, 435, 438, 450, 455, 466, 476, 485, 495, 496, 501, 502, 503, 505, 513, 517, 562], "pulsar_analysi": [390, 438, 465, 466], "pulsar_phas": 505, "pulsar_phase_comput": 505, "pulsarastronomi": 505, "pulsat": 254, "pulse_stat": 465, "punch": [434, 436], "pure": [370, 387, 389, 390, 514], "purpl": 518, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 321, 345, 374, 376, 382, 385, 389, 393, 395, 396, 429, 448, 469, 475, 476, 509], "push": [370, 373, 399, 432], "put": [370, 371, 373, 375, 377, 378, 381, 390, 399, 400, 406, 412, 447, 456, 474, 481, 505, 565], "pwbpl": 393, "pwd": [373, 402, 404], "pwl": [19, 20, 26, 123, 209, 211, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 271, 381, 393, 398, 440, 442, 456, 476, 478, 503, 521, 522, 523, 524, 526, 527, 528, 529, 531, 533], "pwl2": 476, "pwl_decai": 456, "pwl_norm": [393, 476, 545], "pwn": [43, 468, 491, 498], "pwne": 455, "py": [16, 84, 103, 122, 370, 371, 377, 384, 387, 389, 391, 399, 400, 406, 411, 413, 414, 422, 427, 431, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 505, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 565], "py310": 373, "py35": 428, "pycharm": 412, "pydant": [16, 84, 103, 122, 369, 415, 434, 436], "pydantic_cor": [16, 84, 103, 122], "pydanticserializationerror": [16, 84, 103, 122], "pydanticundefin": [16, 84, 103, 122], "pydata": 423, "pyfact": [409, 427], "pyflak": 423, "pyirf": 436, "pyjok": 369, "pymc": 388, "pymotw": 565, "pypi": [387, 397, 399, 400, 402, 403], "pyplot": [19, 20, 26, 66, 67, 83, 127, 148, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 358, 363, 406, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 497, 498, 499, 505, 507, 508, 509, 511, 514, 522, 524, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558], "pyproject": 418, "pyregion": 384, "pytest": [370, 371, 373, 400, 429], "python": [11, 16, 84, 103, 122, 136, 297, 338, 369, 373, 374, 375, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 396, 397, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 413, 414, 421, 423, 426, 427, 428, 429, 430, 431, 432, 435, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 493, 504, 505, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 565], "python3": [334, 403, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 529, 537, 540, 553], "python_execut": [439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "python_vers": [439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "pytorch": 388, "pyx": [373, 400], "pyyaml": [369, 387, 410, 414], "q": [26, 83, 87, 90, 365, 467], "qtabl": [87, 90, 385], "quadrat": [473, 483, 491, 568], "qualiti": [196, 390, 429, 430, 435, 477, 490, 505, 563, 570], "quantifi": [436, 455, 461, 478], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 90, 93, 95, 99, 101, 102, 104, 105, 107, 108, 109, 111, 112, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 162, 171, 172, 173, 175, 179, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 208, 210, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 273, 279, 280, 281, 284, 285, 286, 287, 293, 296, 297, 299, 301, 303, 304, 309, 327, 329, 330, 341, 345, 370, 371, 376, 379, 381, 384, 385, 386, 388, 393, 394, 397, 398, 412, 414, 418, 421, 422, 430, 431, 432, 439, 448, 456, 457, 458, 461, 468, 469, 471, 472, 473, 474, 476, 480, 482, 483, 491, 497, 498, 499, 501, 505, 518, 544, 553, 555, 564, 567, 569], "quantity_support": [471, 522], "quasar": 132, "quentin": [388, 392, 393, 413, 414, 415, 416, 417, 418, 421, 423, 424, 432, 433, 434, 435, 436], "queri": [386, 426, 468], "question": [337, 373, 375, 377, 378, 379, 381, 382, 383, 384, 387, 389, 394, 405, 410, 411, 429, 430, 431, 454, 491, 505, 506, 565], "questionnair": [377, 429], "quetin": 415, "quick": [83, 88, 101, 104, 108, 109, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 370, 373, 390, 400, 448, 449, 452, 454, 456, 464, 469, 471, 475, 480, 482, 483, 485, 491, 493, 502], "quickest": 371, "quickli": [370, 371, 373, 375, 386, 387, 390, 396, 400, 402, 428, 444, 452, 461, 482, 509, 565], "quicklook": 83, "quickplot": 188, "quicksort": [87, 90], "quickstart": 407, "quiescent": 531, "quit": [87, 90, 370, 398, 456], "quival": 381, "quot": [74, 271, 370, 371, 467], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 90, 149, 184, 197, 298, 370, 371, 395, 400, 445, 453, 457, 470, 472, 489, 495, 510, 514, 522, 523, 524, 528, 531], "r68": [83, 111, 148, 157, 160], "r70": [67, 468], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 252, 253, 467, 524, 527, 528], "r_0": [30, 33, 38, 48, 219, 230, 252, 475, 522, 524, 528], "r_1": [39, 48], "r_eval": 230, "r_exp": [36, 48], "r_in": [44, 162, 172, 252, 450, 515], "r_m": 524, "r_out": 44, "r_out_max": 162, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 90, 93, 136, 137, 170, 370, 371, 383, 386, 439, 444, 446, 448, 450, 454, 457, 462, 463, 465, 468, 472, 474, 480, 481, 482, 483, 490, 491, 493, 505, 509, 569], "ra_pnt": 483, "ra_tru": [370, 383], "rad": [33, 83, 88, 101, 104, 108, 109, 111, 112, 148, 154, 156, 157, 158, 159, 160, 170, 183, 254, 386, 423, 435, 446, 469, 471, 472, 481, 510, 511, 514, 558], "rad_axi": [101, 104, 108, 109, 112, 154, 157, 160, 469, 471, 472, 505], "rad_di": [45, 495], "rad_index": 154, "rad_max": [82, 83, 87, 88, 153, 159, 176, 423, 432, 434, 435, 446], "rad_max_2d": [87, 159, 169, 174, 176, 446], "radec": [83, 93, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 156, 158, 159, 370, 371, 471, 473, 491], "radecsi": 529, "radesysa": 529, "radi": [241, 541], "radial": [28, 30, 35, 36, 39, 40, 45, 127, 184, 188, 323, 370, 381, 389, 394, 411, 426, 428, 436, 456, 458, 472, 480, 493, 495, 511, 514], "radian": [17, 18, 21, 22, 24, 25, 27, 193, 214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267], "radiat": [220, 505, 527, 528, 541], "radiative_model": [241, 541], "radii": [27, 467, 481, 523], "radio": [132, 384, 473], "radiobutton": [452, 460, 473, 489, 490], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 90, 95, 101, 104, 108, 109, 120, 125, 126, 148, 154, 156, 157, 158, 160, 162, 170, 172, 188, 198, 200, 201, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 265, 267, 295, 296, 329, 371, 384, 386, 393, 394, 411, 420, 421, 425, 435, 439, 441, 444, 445, 447, 448, 449, 450, 452, 454, 456, 457, 462, 463, 465, 467, 469, 471, 472, 474, 475, 476, 477, 480, 489, 490, 491, 498, 499, 512, 514, 515, 518, 522, 523, 524, 527, 528], "radius_inn": [52, 53], "radius_max": [329, 458], "radius_min": 329, "radius_reverse_shock": [50, 53, 498], "radmax": [423, 424, 435, 436], "radmax2d": [83, 88, 153, 176, 421, 446], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 63, 66, 83, 92, 120, 124, 125, 128, 130, 131, 132, 163, 220, 270, 271, 286, 287, 317, 318, 376, 381, 382, 384, 388, 399, 400, 402, 406, 407, 412, 428, 430, 435, 436, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 493, 495, 496, 500, 501, 502, 505, 508, 510, 512, 514, 515, 531, 562, 563, 564, 565, 566, 567, 570], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 99, 103, 122, 189, 194, 218, 220, 240, 263, 264, 265, 267, 297, 348, 370, 384, 393, 394, 397, 398, 415, 432, 435, 436, 457], "raise_error": [16, 84, 103, 122], "raj2000": [468, 491], "ran": 480, "random": [6, 33, 42, 45, 46, 47, 87, 90, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 320, 321, 322, 323, 324, 325, 326, 327, 373, 382, 383, 386, 413, 425, 429, 456, 476, 505, 566, 567, 569], "random_se": 382, "random_st": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 320, 321, 324, 325, 326, 327, 370, 383, 447, 456, 457], "randomli": [46, 370], "randomnumb": 324, "randomst": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 321, 324, 325, 326, 327, 370], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 80, 83, 87, 90, 91, 99, 100, 101, 104, 108, 109, 124, 131, 144, 157, 159, 160, 173, 185, 186, 189, 191, 192, 195, 196, 198, 208, 210, 212, 213, 216, 217, 219, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 240, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 265, 266, 268, 269, 273, 310, 322, 324, 325, 326, 363, 370, 376, 382, 383, 385, 394, 412, 417, 418, 421, 429, 430, 432, 441, 444, 446, 447, 449, 452, 453, 455, 457, 461, 463, 464, 465, 468, 469, 470, 471, 473, 474, 476, 477, 478, 481, 482, 489, 490, 491, 501, 503, 505, 524, 534, 563, 567], "rangl": 19, "rapid": [132, 286, 376, 379, 394, 395], "rare": [369, 370, 389, 473], "raster": [94, 188], "rate": [44, 45, 83, 88, 141, 142, 173, 180, 280, 327, 383, 406, 430, 444, 446, 465, 472, 480, 481, 483, 495, 508, 564], "rather": [116, 120, 124, 128, 131, 375, 388, 391, 429, 432, 434, 436, 441, 470, 473, 491, 501, 523, 567], "ratio": [104, 109, 162, 186, 187, 188, 281, 294, 394, 439, 465, 480, 515, 564, 566, 567, 568, 570], "ravel": [186, 456], "raw": [121, 173, 491], "rc": [187, 188, 190, 196, 199, 200, 367, 473], "rc1": 399, "rc_context": [187, 188, 190, 196, 199, 200, 473], "rc_param": [187, 188, 190, 196, 199, 200, 473], "rcparam": 367, "rdbu": 489, "rdbu_r": [101, 104, 108, 109], "re": [87, 90, 95, 123, 124, 129, 164, 187, 188, 190, 196, 199, 200, 205, 295, 296, 363, 370, 371, 373, 375, 377, 378, 384, 385, 386, 388, 391, 392, 393, 394, 402, 404, 405, 409, 421, 423, 430, 442, 444, 445, 450, 452, 453, 454, 464, 470, 471, 475, 477, 481, 489, 491, 503, 505, 526, 565], "reach": [53, 130, 201, 375, 380, 383, 476], "reactiv": 432, "read": [15, 16, 83, 85, 86, 87, 88, 90, 93, 99, 100, 101, 104, 105, 108, 109, 113, 115, 116, 120, 121, 123, 125, 127, 129, 131, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 169, 187, 188, 190, 194, 195, 196, 199, 200, 205, 218, 220, 232, 240, 266, 267, 268, 272, 274, 276, 277, 333, 336, 356, 358, 363, 365, 370, 371, 373, 375, 380, 381, 382, 383, 386, 390, 392, 394, 396, 397, 398, 402, 404, 415, 418, 421, 429, 430, 432, 435, 436, 440, 444, 445, 446, 450, 452, 455, 456, 461, 469, 470, 471, 476, 478, 480, 481, 482, 485, 489, 491, 502, 503, 505, 507, 508, 509, 511, 529, 559, 560, 565, 568], "read_arf": 105, "read_bkg": 105, "read_builtin": [220, 440, 531], "read_covari": [218, 240], "read_dataset": 15, "read_lazi": 423, "read_model": 15, "read_pha": 105, "read_rmf": 105, "read_xspec_model": 268, "readabl": [351, 381, 423, 445, 489], "reader": [397, 439, 447, 449, 452, 454, 457, 460, 464, 480], "readi": [380, 397, 405, 564], "readili": 390, "readm": [373, 396], "readthedoc": [13, 124, 180, 195, 205, 268, 373, 390, 412, 427, 470, 471, 480, 502, 505, 516, 518], "real": [51, 370, 373, 400, 447, 448, 450, 457, 470, 474, 501], "realis": [370, 375, 384, 396], "realist": 398, "realiti": 440, "realiz": [376, 564], "realli": [370, 377, 384, 387, 447, 460, 470], "rearrang": 390, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 370, 375, 376, 377, 378, 381, 382, 383, 385, 387, 389, 391, 396, 429, 440, 456, 470, 478, 482, 501, 565], "reassign": [19, 20, 26, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269], "rebas": [370, 384], "rebin": [123, 139, 385, 423, 436, 461, 463, 469], "rebuild": [16, 84, 103, 122, 453], "recarrai": [87, 90, 148, 158], "receiv": [388, 390, 391, 393, 395], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 380, 384, 385, 386, 387, 390, 403, 410, 424, 430, 453, 480, 482], "recip": [372, 386, 407, 421, 465, 505, 506, 567], "reco": [101, 104, 108, 109, 144, 177, 370, 376, 385, 394, 431, 432, 439, 469, 472, 482, 564], "reco_exposur": 120, "reco_psf": [101, 104, 108, 109, 112, 472, 482], "recogn": [439, 447, 449, 452, 454, 456, 460, 464, 480], "recognis": [381, 565], "recognit": 396, "recommend": [91, 99, 100, 174, 218, 240, 278, 309, 310, 369, 370, 371, 373, 377, 379, 387, 396, 400, 401, 403, 406, 413, 430, 444, 445, 446, 455, 469, 470, 472, 476, 481, 489, 505, 512, 517, 518, 565, 566, 569], "recomput": [123, 394], "recompute_ul": 123, "recon_vers": [481, 491], "reconstruct": [83, 101, 102, 104, 107, 108, 109, 111, 112, 120, 130, 131, 135, 144, 145, 146, 149, 159, 160, 173, 180, 370, 376, 381, 383, 418, 433, 439, 441, 444, 447, 449, 450, 452, 456, 460, 464, 469, 472, 474, 478, 482, 501, 503, 509, 510, 511, 518, 564], "recopsfmap": [153, 432, 435], "record": [83, 88, 370, 375, 376, 396], "recov": 386, "rectangl": [215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 330, 384, 458, 514], "rectangleskyregion": [198, 214, 215, 267, 329, 330, 384, 441, 467, 474, 514, 518], "rectangular": [458, 514, 518], "recurr": 385, "recurs": [337, 397], "red": [100, 280, 286, 360, 439, 440, 444, 447, 450, 452, 455, 467, 477, 478, 522, 523], "redesign": 379, "redistribut": 509, "redo": 465, "redshift": [19, 20, 220, 393, 491, 531], "redshift_scan": 440, "reduc": [6, 11, 15, 99, 101, 104, 108, 109, 155, 157, 160, 165, 175, 187, 188, 190, 192, 196, 199, 200, 376, 377, 379, 381, 382, 386, 389, 391, 396, 397, 402, 409, 414, 421, 430, 436, 438, 440, 441, 442, 445, 446, 447, 452, 453, 456, 460, 462, 463, 464, 474, 477, 479, 482, 485, 501, 505, 510, 515, 517, 518, 523, 524, 562, 563, 564, 565], "reduce_data": 386, "reduce_over_ax": [187, 188, 190, 196, 199, 200, 449, 472, 482], "reduct": [6, 11, 163, 376, 382, 383, 386, 390, 391, 392, 397, 402, 415, 417, 435, 438, 450, 454, 455, 458, 465, 469, 471, 474, 475, 477, 479, 485, 501, 502, 505, 512, 514, 515, 517, 563, 564], "ref": [83, 93, 101, 108, 120, 125, 131, 186, 195, 198, 218, 240, 394, 454, 458, 468, 469, 471, 473, 481, 491, 518, 553, 554, 555, 556, 557, 558, 564, 565], "ref_templ": [16, 84, 103, 122], "refactor": [370, 382, 384, 385, 386, 393, 411, 412, 413, 415, 416, 417, 418, 421, 423, 425, 427, 429], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 83, 84, 85, 86, 87, 88, 90, 93, 100, 101, 103, 104, 105, 108, 109, 111, 112, 121, 122, 123, 124, 126, 131, 132, 149, 163, 164, 167, 170, 171, 174, 175, 176, 179, 180, 182, 197, 198, 199, 200, 205, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 271, 280, 282, 286, 287, 288, 293, 294, 324, 325, 351, 352, 353, 354, 370, 371, 376, 378, 381, 382, 384, 386, 388, 393, 394, 395, 396, 397, 400, 407, 421, 428, 429, 440, 441, 442, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 468, 469, 470, 472, 473, 475, 476, 478, 480, 481, 482, 489, 490, 491, 494, 501, 503, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 535, 536, 537, 539, 540, 542, 543, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 567, 569], "referenc": [370, 564], "reference_flux": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "reference_map": 473, "reference_model": [121, 123, 439, 440, 453], "reference_model_default": [121, 123], "reference_spectral_model": [121, 123], "reference_tim": [86, 88, 101, 104, 108, 109, 191, 197, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 434, 435, 457, 461, 464, 472, 473, 560], "reflect": [165, 169, 170, 171, 175, 184, 379, 384, 386, 389, 391, 402, 414, 421, 423, 426, 427, 430, 440, 441, 444, 445, 446, 454, 463, 474, 513, 564], "reflected_bkg_mak": 472, "reflectedbgestim": 386, "reflectedregion": 440, "reflectedregionsbackgroundmak": [165, 170, 415, 441, 444, 446, 454, 463, 472], "reflectedregionsfind": [169, 175, 413, 514], "refpix": [198, 199, 200], "refresh": [87, 90], "refus": 370, "reg": [101, 104, 108, 109, 474, 476], "reg_dataset": 469, "regard": [394, 397, 444], "regardless": [87, 90], "regeard": [433, 434, 435, 436], "regi": [376, 381, 382, 386], "region": [6, 27, 83, 90, 99, 101, 104, 106, 108, 109, 113, 115, 125, 127, 130, 132, 145, 146, 152, 157, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 184, 186, 187, 188, 190, 195, 196, 198, 199, 200, 202, 205, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 265, 267, 268, 270, 281, 294, 328, 329, 330, 331, 332, 366, 367, 369, 371, 374, 376, 377, 385, 386, 387, 389, 392, 394, 402, 413, 414, 415, 417, 421, 423, 424, 426, 427, 429, 430, 432, 434, 435, 440, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 473, 476, 478, 480, 481, 482, 483, 489, 490, 491, 500, 501, 502, 503, 505, 512, 513, 515, 516, 517, 522, 523, 541, 563, 564, 566, 567, 568], "region_coord": 195, "region_ev": 465, "region_find": [169, 446], "region_io": 195, "region_map": [196, 200, 518], "region_map_1": 518, "region_map_2": 518, "region_mask": [83, 186, 198, 384, 444, 450, 454, 469, 472, 474, 490, 512, 514, 515], "region_nd_map": 196, "region_new": 331, "region_pix": 476, "region_weight": 198, "regionfind": [170, 171, 175], "regiongeom": [101, 104, 108, 109, 121, 125, 167, 174, 176, 177, 178, 180, 181, 196, 215, 219, 227, 230, 242, 252, 253, 255, 257, 263, 267, 384, 385, 392, 402, 417, 418, 421, 439, 441, 444, 446, 447, 454, 458, 463, 464, 465, 468, 469, 472, 481, 491, 501, 514, 517], "regionndmap": [26, 105, 108, 109, 130, 168, 169, 174, 176, 187, 188, 190, 195, 199, 200, 215, 219, 227, 230, 232, 242, 252, 253, 257, 263, 264, 267, 367, 384, 402, 417, 418, 421, 424, 432, 435, 457, 481, 501, 560], "regions_ds9": 474, "regionsfind": [169, 170, 175, 423], "regist": 476, "registri": [55, 97, 117, 153, 165, 236, 238, 249, 250, 262, 391, 398, 414, 417, 418, 421, 430, 468, 476], "regress": 373, "regul": 396, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 186, 194, 198, 379, 398, 423, 435, 460, 473, 474], "regulargridinterpol": [268, 309, 370], "regularis": 398, "regularli": [398, 483], "reichardt": 425, "reimplement": 381, "rej_sampl": 383, "reject": [374, 375, 383], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 90, 104, 105, 109, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 197, 198, 199, 200, 252, 271, 285, 327, 385, 396, 421, 461, 464, 482, 528, 567], "rel_reduction_of_f_": 470, "relat": [11, 13, 67, 83, 85, 203, 286, 376, 378, 381, 383, 384, 387, 389, 390, 391, 396, 400, 417, 418, 430, 436, 456, 469, 476, 480, 495, 562, 567], "relative_variability_amplitud": 461, "relative_variability_error": 461, "relative_variability_signific": 461, "relativist": 541, "releas": [11, 51, 65, 94, 372, 374, 375, 377, 378, 384, 387, 388, 397, 401, 402, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 444, 445, 453, 462, 463, 480, 482, 483, 489, 490, 493, 505, 507, 508, 509, 511], "relev": [121, 279, 281, 353, 370, 376, 385, 390, 394, 399, 444, 445, 448, 462, 463, 464, 475, 477, 480, 482, 483, 489, 490, 501, 502, 569], "reli": [121, 370, 375, 376, 380, 381, 385, 389, 394, 395, 413, 418, 421, 432, 442, 452, 474, 493, 567], "reliabl": [373, 403, 450, 470, 474, 566], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 99, 375, 376, 377, 378, 383, 387, 396, 411, 430, 446, 475, 511], "remark": 446, "rememb": [370, 384, 470, 485, 565], "remi": [392, 393, 413, 414, 415, 416, 417, 418, 421, 432, 433, 434, 435, 436], "remind": [396, 454, 569], "remnant": [28, 52, 441, 455, 476, 496], "remot": 373, "remov": [13, 87, 90, 91, 95, 99, 124, 125, 128, 157, 160, 172, 185, 186, 191, 194, 195, 198, 200, 208, 210, 240, 296, 373, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 401, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 444, 450, 465, 469, 474, 477, 480, 494, 505, 514], "remove_column": [87, 90], "remove_indic": [87, 90], "remove_row": [87, 90], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 123, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 373, 380, 381, 389, 390, 393, 409, 412, 414, 415, 416, 417, 421, 431, 432, 435, 565], "rename_ax": [185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 432], "rename_column": [87, 90, 123], "rename_dupl": [87, 90], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 348, 370, 378, 429], "renorm": [450, 512], "renormalis": 172, "reoptim": [124, 128, 129, 205, 411, 440, 458, 462, 470, 478, 489], "reorder_ax": [187, 188, 190, 196, 199, 200, 435], "reorgan": 421, "reorganis": 390, "repeat": [371, 452, 482], "repl": 370, "replac": [15, 16, 84, 87, 90, 99, 101, 103, 104, 108, 109, 122, 145, 146, 152, 157, 185, 186, 188, 191, 195, 196, 198, 200, 265, 277, 370, 380, 381, 384, 388, 391, 397, 403, 412, 413, 415, 417, 418, 435, 436, 456, 465], "replace_axi": [185, 186, 195, 198], "replace_column": [87, 90], "repo": [371, 378, 399, 400, 409, 422], "report": [87, 373, 386, 399, 400, 409, 423, 424, 429], "repositori": [87, 90, 370, 373, 375, 378, 380, 396, 399, 421, 430, 456, 483], "repres": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 87, 90, 101, 103, 104, 108, 109, 122, 186, 188, 190, 192, 193, 195, 197, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 266, 267, 297, 305, 315, 370, 381, 382, 383, 384, 388, 391, 392, 393, 394, 411, 435, 440, 457, 458, 468, 470, 472, 473, 474, 476, 481, 491, 500, 501, 503, 507, 508, 509, 511, 517, 562, 563, 564, 569], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 103, 122, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 370, 384, 397, 411, 413, 435, 442, 468, 473, 476, 517], "reprocess": 376, "reproduc": [93, 100, 123, 371, 386, 387, 388, 390, 396, 397, 401, 403, 430, 472, 493], "reproject": [173, 187, 188, 190, 196, 199, 200, 366, 370, 376, 384, 387, 394, 415, 422, 430, 432, 436, 473, 474], "reproject_by_imag": [187, 188, 190, 196, 199, 200, 436], "reproject_to_geom": [187, 188, 190, 196, 199, 200, 432], "request": [85, 121, 123, 371, 374, 375, 377, 378, 379, 380, 381, 382, 384, 390, 394, 395, 396, 398, 400, 408, 456, 474, 493, 503], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 83, 84, 85, 87, 88, 90, 94, 101, 103, 104, 108, 109, 110, 114, 122, 123, 126, 131, 141, 142, 148, 156, 164, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 201, 297, 345, 349, 350, 368, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 394, 395, 396, 398, 399, 401, 403, 409, 414, 415, 416, 417, 422, 423, 425, 426, 427, 428, 431, 432, 433, 440, 441, 446, 450, 453, 461, 463, 464, 465, 469, 471, 473, 474, 476, 480, 490, 503, 505, 518], "require_ev": 82, "required_ax": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 471], "required_hdu": 424, "required_irf": [16, 82, 445, 446, 449, 450, 452, 489], "required_nam": [189, 191, 192, 197], "required_paramet": [148, 156, 158], "rerun": 385, "resampl": [101, 104, 108, 109, 123, 139, 140, 145, 185, 186, 187, 188, 189, 190, 191, 195, 196, 198, 199, 200, 365, 421, 423, 461, 505], "resample_axi": [123, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 365, 418, 461, 463], "resample_energy_axi": [101, 104, 108, 109, 145, 418, 423, 469], "resample_energy_edg": [444, 505], "resampled_energy_edg": 140, "resampled_map": [187, 188, 190, 196, 199, 200], "rescal": 472, "research": [386, 396], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 108, 109, 226, 265, 371, 418], "reset_data_cach": [101, 104, 108, 109], "reset_to_default": 226, "reshap": [187, 188, 190, 196, 199, 200, 439, 457, 471, 473], "resid": [392, 476], "residu": [72, 100, 101, 104, 108, 109, 164, 381, 382, 386, 413, 418, 424, 431, 450, 469, 470, 481, 501, 514, 564], "resolut": [52, 144, 145, 149, 186, 198, 379, 381, 383, 384, 429, 435, 468, 481], "resolv": [16, 84, 103, 122, 371, 373, 380, 384, 385, 392, 393, 405, 411, 430], "resort": 449, "resourc": [429, 485], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 90, 103, 105, 122, 123, 132, 186, 188, 198, 200, 278, 380, 385, 396, 398, 418, 448, 450, 464, 473, 474, 482, 503, 518, 568], "respond": 396, "respons": [6, 107, 144, 145, 146, 149, 151, 152, 170, 370, 376, 377, 379, 381, 382, 383, 385, 386, 394, 396, 402, 428, 429, 430, 431, 441, 444, 445, 446, 447, 460, 464, 471, 472, 475, 480, 483, 485, 489, 490, 501, 502, 507, 509, 511, 563, 564], "rest": [26, 373, 387, 389, 468, 500], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 475], "restore_statu": [209, 211, 218, 240, 478], "restore_valu": [209, 211, 218, 240], "restrict": [87, 90, 384, 452, 469, 474], "restructur": [371, 385, 386, 387, 389, 391, 397, 400, 415, 421, 422, 423, 424, 426, 435], "result": [16, 46, 74, 84, 86, 87, 90, 91, 100, 101, 103, 104, 108, 109, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 136, 138, 149, 155, 157, 160, 173, 177, 178, 183, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 204, 205, 206, 207, 218, 240, 267, 277, 280, 297, 363, 369, 370, 371, 373, 375, 377, 379, 380, 381, 382, 383, 386, 388, 389, 392, 396, 398, 403, 406, 413, 421, 423, 424, 429, 431, 435, 436, 440, 442, 444, 446, 447, 452, 454, 456, 457, 460, 461, 463, 464, 465, 468, 469, 470, 473, 474, 477, 478, 481, 482, 483, 489, 490, 493, 500, 503, 518, 553, 564, 566, 567], "result1": 440, "result2": 475, "result_ecpl": 442, "result_joint": [441, 444, 452], "result_list": 363, "result_log_parabola": 442, "result_minuit": 470, "result_pwl": 442, "result_scipi": 470, "result_stack": 444, "results_joint": 453, "results_prior": 478, "results_simplex": 470, "results_t": 455, "retain": [468, 518], "retriev": [87, 90, 394, 396, 441, 442, 444, 473, 476, 477, 482, 490, 502, 517, 518], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 299, 301, 303, 304, 308, 310, 315, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 340, 341, 342, 351, 352, 353, 354, 355, 358, 360, 361, 363, 365, 366, 376, 380, 381, 382, 383, 384, 385, 393, 394, 397, 398, 414, 415, 418, 421, 424, 430, 432, 444, 446, 454, 458, 463, 464, 468, 469, 470, 472, 473, 474, 476, 478, 491, 495, 517, 518, 550, 567], "return_delta": 327, "return_diff": 327, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [386, 418, 436], "reval": 524, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 90, 91, 99, 191, 240, 473, 498], "review": [373, 378, 379, 380, 383, 384, 386, 387, 389, 390, 391, 393, 394, 396, 398, 431, 432, 517], "revis": 390, "revisit": 220, "rework": 416, "rewrit": [376, 379, 386, 416, 426, 427, 429, 430, 431, 565], "rewritten": [428, 431], "rf": 467, "rgb": [365, 367, 435, 439, 444], "rglob": [82, 456, 480], "rhe": 176, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [370, 386], "rid": 376, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 90, 101, 108, 121, 123, 131, 147, 224, 228, 247, 259, 282, 288, 358, 370, 384, 393, 396, 448, 454, 456, 462, 464, 480, 522, 523, 524, 531, 532, 535, 536, 538, 539, 543, 546, 547, 548, 549, 553, 554, 555, 557, 565, 566, 567, 568], "rightarrow": [528, 568], "rigid": 375, "ring": [104, 120, 162, 165, 172, 186, 187, 188, 376, 379, 386, 389, 402, 411, 415, 417, 427, 428, 429, 430, 438, 451, 455, 474, 485, 501, 504, 513, 516, 517, 564], "ring2dkernel": [162, 172], "ring_background": [438, 450, 451], "ring_bkg_mak": 515, "ring_mak": 450, "ringbackgroundestim": [376, 429], "ringbackgroundmak": [162, 165, 415, 450, 472, 515], "rise": [132, 231, 461, 555], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 373, 396], "rm": [144, 145, 149, 393, 446, 470, 507, 509, 510, 511, 524, 553, 554, 555, 556, 557, 558], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [105, 106, 109, 144, 145, 146, 427, 444], "rmf_ob": 105, "rmffile": 105, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 321, 324, 325, 326, 327, 370], "roadmap": [374, 377, 386, 395, 410, 431], "roberta": [429, 430], "robust": [370, 430], "roi": [67, 386, 468, 483, 564], "roi_max": 386, "role": [429, 472], "rolf": 409, "rolk": 564, "rolke2005": [564, 567], "roll": 481, "room": 380, "root": [19, 20, 26, 121, 122, 131, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 289, 292, 370, 388, 421, 448, 493, 503, 565, 567], "rosillo": 432, "rotang": 457, "rotat": [51, 54, 170, 171, 175, 180, 219, 227, 230, 457, 514, 522, 523], "rough": [72, 386], "roughli": [116, 373, 378, 384, 386, 389, 390, 428, 450], "round": [87, 90, 187, 188, 190, 192, 196, 199, 200, 444, 517], "round_to_edg": [185, 186, 195, 198], "round_trip": [16, 84, 103, 122], "routin": 409, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 90, 136, 144, 305, 341, 364, 385, 394, 397, 432, 435, 444, 447, 457, 458, 468, 470, 473, 480, 482, 483, 491, 500], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 468], "row_label": 364, "row_specifi": [83, 87, 90], "royalblu": 465, "rpovid": 385, "rspec": [67, 468], "rst": [373, 375, 390, 396, 399, 400, 416, 421], "rtd": 430, "rtol": [131, 345, 370], "rtol_ax": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200], "rtol_wc": 198, "ruben": 429, "rub\u00e9n": 429, "ruiz": [378, 386, 390, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 429, 430, 431], "rule": [87, 90, 255, 273, 308, 396, 473, 517], "run": [16, 82, 83, 84, 88, 92, 100, 102, 103, 107, 116, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 136, 137, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 195, 198, 205, 317, 318, 344, 363, 369, 370, 371, 377, 378, 380, 383, 385, 386, 387, 390, 392, 394, 398, 399, 400, 401, 406, 412, 413, 416, 417, 428, 430, 431, 435, 439, 440, 441, 442, 447, 448, 449, 450, 452, 453, 454, 456, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 490, 491, 501, 502, 503, 505, 510, 512, 514, 515, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "run_fit": [15, 445, 449, 489], "run_id": [481, 491], "run_multiprocess": 505, "runner": [16, 334, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 529, 531, 537, 540, 553, 559, 560], "runtim": [379, 397], "runtimewarn": [446, 456, 483, 553], "rx": 441, "rxj": 441, "rxj1713_2016_250gev": 529, "r\u00e9gi": [376, 379, 380, 384, 385, 387, 389, 391, 392, 393, 394, 395, 397, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "r\u00e9my": [388, 421, 423, 424, 432], "s0167947313003204": 138, "s180": 286, "s2": 266, "s3": 266, "s_0": 505, "s_1": 505, "safari": [87, 90], "safe": [98, 100, 101, 104, 108, 109, 145, 146, 152, 157, 160, 165, 173, 370, 382, 384, 396, 415, 417, 418, 432, 433, 434, 435, 441, 444, 469, 474, 490, 501, 563], "safe_mask": [16, 101, 108, 445, 449, 450, 452, 489], "safe_mask_mak": [163, 441, 465, 472, 512, 514, 515], "safe_mask_mask": [444, 446, 454, 463, 472], "safemask": 482, "safemask_mak": 482, "safemaskconfig": 16, "safemaskmak": [163, 165, 391, 415, 416, 421, 423, 424, 436, 441, 444, 446, 454, 460, 463, 465, 472, 474, 482, 489, 490, 512, 513, 514, 515], "safeti": 396, "sagittariu": [33, 38], "saha": 429, "sai": [74, 375, 389, 565], "said": [370, 375, 377, 482, 483, 565], "sake": [456, 470], "saldana": [220, 221, 435, 440, 531], "saldana21": 531, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 90, 94, 99, 101, 104, 105, 108, 109, 120, 131, 136, 137, 148, 149, 155, 156, 157, 158, 160, 161, 163, 184, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 271, 280, 286, 363, 370, 373, 378, 380, 382, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 403, 413, 414, 418, 421, 435, 442, 445, 446, 447, 452, 453, 456, 460, 462, 465, 468, 469, 473, 474, 475, 476, 477, 478, 481, 482, 485, 489, 501, 502, 503, 509, 517, 518, 565], "sampl": [47, 92, 102, 107, 131, 146, 148, 154, 156, 157, 158, 160, 187, 188, 190, 196, 198, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 278, 280, 310, 319, 324, 325, 326, 327, 374, 382, 384, 385, 388, 390, 402, 409, 411, 413, 414, 417, 423, 430, 432, 435, 436, 438, 446, 459, 461, 469, 470, 485, 501, 502, 505, 510, 513, 517], "sample_axi": 319, "sample_background": [102, 107, 415], "sample_coord": [146, 157, 160, 187, 188, 190, 196, 199, 200, 415, 417, 432], "sample_edisp": [102, 107], "sample_powerlaw": 389, "sample_psf": [102, 107], "sample_sourc": [102, 107], "sample_spher": [425, 569], "sample_tim": [217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 421, 432], "sampler": [102, 319, 379, 383, 417, 421, 456], "sampler_kwarg": 92, "saniti": 429, "satisfi": [140, 164, 186, 187, 188, 297, 475, 505], "save": [15, 19, 20, 26, 83, 99, 131, 202, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 370, 378, 386, 394, 398, 440, 452, 453, 456, 470, 474, 475, 482, 502], "savefig": [348, 406], "savez": 202, "saw": 407, "sbpl": [256, 393, 476], "sc": [87, 90], "scalar": [87, 90, 155, 186, 187, 188, 190, 196, 199, 200, 297, 389, 423, 434, 436, 473, 517], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 95, 99, 103, 104, 109, 116, 122, 124, 125, 128, 148, 164, 192, 196, 197, 198, 200, 208, 210, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 275, 278, 296, 309, 310, 311, 327, 351, 352, 353, 363, 371, 379, 384, 385, 388, 393, 416, 421, 422, 430, 433, 434, 435, 445, 448, 457, 458, 461, 462, 463, 464, 467, 468, 471, 472, 473, 476, 477, 478, 480, 489, 491, 493, 531, 552, 553, 554, 555, 556, 557, 558, 559, 560], "scale10": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 398, 541], "scale_method": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 398, 541], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 467], "scaled_featur": 296, "scaled_features_irf": [295, 296, 477], "scaledregulargridinterpol": [68, 220, 416, 431], "scalespectralmodel": [124, 125, 128, 250, 393, 476], "scan": [19, 20, 94, 121, 123, 124, 125, 128, 129, 205, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 385, 394, 421, 458, 463, 478, 503, 505], "scan_max": [19, 20, 124, 128, 131, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 440, 463, 470], "scan_min": [19, 20, 124, 128, 131, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 440, 470], "scan_n_sigma": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 470], "scan_n_valu": [19, 20, 124, 128, 129, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 440, 470, 478], "scan_prior": 478, "scan_valu": [19, 20, 205, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 458, 470], "scargl": [385, 429, 461], "scatter": [218, 240, 391, 448, 454, 522, 523], "scenario": [87, 90, 375, 382, 392, 402, 473, 476, 494, 566], "scengin": [87, 90], "schedul": 379, "schema": [15, 16, 84, 103, 122, 386, 389], "schema_gener": [16, 84, 103, 122], "schema_json": [16, 84, 103, 122], "scheme": [16, 84, 100, 103, 105, 106, 122, 186, 187, 188, 197, 232, 370, 376, 380, 382, 385, 392, 393, 394, 395, 397, 414, 421, 432, 436, 457, 471, 473, 476, 505, 510, 516, 517, 519], "school": 396, "scienc": [138, 187, 188, 190, 199, 200, 377, 379, 383, 386, 387, 390, 396, 407, 429, 430, 447, 453, 464, 473, 476, 477, 480, 481, 485, 493, 505, 539, 564, 565], "sciencedirect": 138, "scientif": [371, 377, 393, 396, 403], "scikit": [136, 370, 384, 387, 390, 430, 474], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 200, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 295, 309, 350, 363, 369, 370, 373, 379, 384, 387, 388, 390, 396, 407, 411, 412, 413, 414, 426, 427, 428, 431, 433, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 562, 567], "scipy_mvn": 203, "scipy_opt": 470, "scitool": 544, "scope": [383, 384, 385, 386, 389, 397, 494], "scratch": [147, 370, 380, 384, 400, 452, 474], "screen": [87, 90, 473, 491], "script": [6, 87, 90, 123, 333, 334, 335, 336, 337, 338, 339, 371, 376, 377, 379, 381, 384, 386, 389, 390, 396, 399, 400, 410, 411, 412, 413, 421, 422, 426, 429, 430, 431, 432, 436, 438, 444, 448, 450, 452, 453, 454, 455, 456, 458, 463, 464, 467, 468, 469, 470, 472, 475, 478, 481, 486, 489, 504, 505, 565], "scriptabl": 397, "scutum": [33, 38], "sdist": 400, "seaborn": 505, "search": [87, 90, 279, 281, 334, 370, 371, 406, 429, 430, 445, 448, 454, 455, 467, 468, 477, 489, 490, 491, 493, 505, 565], "season": 390, "sebastian": 421, "sec": [54, 83, 93, 99, 128, 327], "second": [42, 58, 83, 86, 87, 88, 90, 144, 266, 327, 330, 347, 351, 354, 359, 371, 378, 380, 382, 384, 388, 394, 396, 400, 415, 434, 444, 445, 448, 450, 452, 454, 455, 456, 457, 458, 463, 464, 467, 469, 470, 472, 473, 475, 478, 480, 485, 489, 500, 566, 569], "secpl": [259, 260, 261, 393, 476], "section": [19, 87, 90, 280, 282, 288, 370, 371, 373, 375, 384, 386, 387, 389, 393, 396, 400, 418, 431, 447, 452, 456, 457, 460, 464, 468, 470, 474, 475, 476, 491, 493, 494, 505, 518, 563, 565, 569], "secur": 474, "sed": [117, 120, 121, 122, 123, 125, 131, 196, 220, 369, 386, 388, 394, 402, 409, 428, 442, 458, 468, 469, 489, 491, 503], "sed_fit": [438, 442, 443], "sed_fitting_gammacat_fermi": 390, "sed_typ": [19, 20, 26, 121, 122, 123, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 421, 439, 440, 442, 444, 445, 446, 453, 454, 458, 462, 464, 468, 491, 503, 505, 541], "sed_type_init": [71, 74, 75, 78, 121, 122, 123], "sed_type_plot_default": [121, 123], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 499], "sedov_taylor_end": [52, 53, 499], "seds_20230803": 64, "sedtypeenum": 122, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 90, 94, 98, 99, 100, 101, 104, 108, 109, 116, 118, 120, 123, 124, 125, 128, 130, 131, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 163, 170, 172, 180, 185, 186, 188, 190, 192, 193, 195, 198, 200, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 272, 282, 288, 290, 291, 294, 297, 305, 321, 337, 360, 361, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 390, 391, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 426, 427, 428, 429, 430, 431, 432, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 485, 489, 490, 491, 493, 501, 502, 505, 515, 516, 518, 544, 548, 549, 562, 564, 565, 566, 567, 569], "seed": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 241, 248, 254, 266, 269, 280, 319, 320, 321, 324, 325, 326, 327, 370, 429, 456, 541], "seed_photon_field": [241, 541], "seem": [370, 377, 378, 381, 387, 391, 493], "seen": [370, 384, 391, 441, 448, 453, 463, 473, 476, 481], "select": [16, 82, 83, 86, 87, 88, 89, 90, 91, 95, 99, 101, 104, 108, 109, 167, 174, 187, 188, 189, 190, 192, 197, 199, 200, 209, 211, 218, 240, 255, 265, 277, 366, 367, 380, 382, 383, 384, 385, 386, 390, 392, 394, 397, 402, 404, 410, 413, 421, 425, 439, 444, 446, 447, 449, 450, 452, 453, 455, 456, 457, 460, 464, 465, 469, 470, 472, 473, 474, 477, 480, 482, 483, 485, 491, 503, 505, 509, 510, 514, 563, 565], "select_energi": [83, 502], "select_from_geom": [218, 240], "select_map_mask": 411, "select_mask": [83, 218, 240, 421, 475], "select_nested_model": 435, "select_obs_id": [90, 454], "select_observ": [90, 95, 386, 463, 477, 490, 505], "select_offset": [83, 456, 483, 502], "select_paramet": [83, 89, 465, 502], "select_phas": 380, "select_rad_max": 83, "select_rang": 90, "select_region": [83, 89, 218, 240, 384, 413, 421, 456, 457, 465, 475, 491, 502], "select_row_subset": 83, "select_sky_box": 384, "select_sky_circl": [90, 384], "select_tim": [83, 86, 88, 91, 99, 380, 394, 415, 457, 463, 502], "select_time_rang": 90, "selected_energi": 502, "selected_ev": 83, "selected_id": 502, "selected_obs_t": [90, 477, 490], "selected_offset": 502, "selected_region": 502, "selected_tim": 502, "selection_al": [116, 131], "selection_mask": [218, 240, 475], "selection_opt": [16, 116, 118, 119, 120, 124, 125, 127, 128, 129, 130, 131, 421, 440, 444, 445, 449, 450, 452, 453, 454, 458, 462, 463, 464, 465, 474, 482, 489], "selection_vari": 90, "selectionconfig": 16, "selectionslid": [452, 460, 473, 489, 490], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 103, 121, 122, 123, 195, 196, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 255, 256, 258, 259, 260, 261, 264, 268, 370, 371, 381, 382, 384, 387, 393, 394, 397, 398, 417, 473, 476], "semant": [384, 395], "semi": 219, "semiaxi": [219, 227, 230, 522, 523, 524], "semilogi": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 439, 457], "semimajor": 468, "semiminor": 468, "semver": 395, "send": 399, "sens": [370, 377, 380, 384, 386, 389, 390, 391, 450], "sensibl": 477, "sensit": [117, 120, 121, 122, 123, 130, 271, 383, 390, 416, 418, 428, 429, 435, 436, 438, 443, 460, 480, 485, 493, 501, 510, 513, 517], "sensitivity_estim": 439, "sensitivity_t": 439, "sensitivityestim": [117, 410, 416, 439], "sent": 375, "sentenc": [375, 390, 396], "sep": [195, 379, 387, 393, 408, 476], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 90, 186, 195, 198, 293, 359, 370, 371, 376, 377, 378, 379, 382, 383, 384, 385, 386, 389, 390, 391, 392, 417, 421, 427, 429, 430, 434, 435, 447, 450, 452, 454, 460, 464, 468, 475, 476, 477, 494, 502, 510, 511, 522, 523, 527, 528, 541, 564], "septemb": [379, 387, 389, 390, 395], "sequenc": [87, 90, 91, 99, 101, 108, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 209, 218, 240, 297, 400], "sequenti": [376, 444, 490], "seri": [87, 90, 123, 280, 285, 327, 379, 384, 385, 421, 461], "serial": [16, 84, 87, 90, 98, 99, 100, 101, 103, 104, 108, 109, 122, 376, 381, 385, 386, 391, 394, 414, 417, 421, 423, 430, 432, 433, 434, 435, 436, 473, 476, 478, 493], "serialis": [20, 101, 104, 108, 109, 212, 213, 216, 218, 220, 222, 223, 224, 226, 228, 232, 234, 235, 237, 239, 240, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 382, 384, 386, 389, 391, 392, 393, 413, 415, 417, 421, 426, 429, 431, 432, 434, 435, 436, 478, 489, 505, 518, 560], "serializ": [16, 84, 103, 122], "serialize_as_ani": [16, 84, 103, 122], "serialize_method": [87, 90], "serializiaton": 382, "serilis": [26, 214, 215, 217, 219, 225, 227, 229, 230, 231, 233, 242, 244, 248, 252, 253, 254, 255, 257, 264, 267, 269], "sersic": 393, "sersic2d": 393, "sersicspatialmodel": 393, "serv": [87, 90, 370, 375, 382, 386, 394, 400, 423, 467, 509], "server": [392, 402, 404, 485], "servic": 429, "session": [386, 396, 504], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 138, 144, 146, 157, 160, 163, 164, 167, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 205, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 259, 260, 261, 263, 266, 267, 268, 277, 317, 319, 370, 371, 376, 379, 380, 382, 383, 385, 386, 387, 388, 390, 394, 395, 396, 397, 398, 400, 402, 404, 417, 423, 425, 427, 429, 432, 435, 436, 439, 440, 441, 444, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 462, 463, 465, 468, 469, 470, 472, 474, 476, 477, 478, 480, 482, 483, 485, 490, 493, 501, 502, 505, 514, 516, 517, 518, 541, 562, 565, 568, 569], "set_by_coord": [187, 188, 190, 196, 199, 200, 473, 517], "set_by_idx": [187, 188, 190, 196, 199, 200, 473, 517], "set_by_pix": [187, 188, 190, 196, 199, 200, 517], "set_log": 16, "set_model": [15, 392, 445, 449, 462, 489], "set_models_paramet": 392, "set_parameter_factor": [209, 211], "set_parameters_bound": [218, 240], "set_prior": [240, 398], "set_prop_cycl": 439, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 203, "set_titl": [440, 441, 444, 448, 450, 454, 465, 467, 470, 471, 472, 475, 514, 524, 528, 531], "set_unit": [442, 505], "set_xlabel": [439, 440, 441, 444, 447, 465, 470, 477, 478], "set_xlim": [442, 444, 445, 453, 465, 507, 531], "set_xscal": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "set_xtick": [524, 528], "set_ylabel": [439, 440, 441, 444, 458, 465, 467, 470, 477, 531], "set_ylim": [439, 442, 444, 445, 446, 462, 465, 507, 531], "set_yscal": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 458, 467, 507], "set_ytick": [524, 528], "setdefault": 194, "seterr": 370, "setlevel": 454, "setter": [371, 398, 415, 421, 469], "settl": [396, 569], "setup": [13, 372, 373, 374, 377, 382, 383, 387, 390, 398, 427, 431, 485, 565], "setuptool": [422, 565], "sever": [87, 90, 169, 375, 376, 377, 384, 385, 386, 389, 394, 397, 415, 416, 417, 421, 424, 433, 434, 435, 447, 453, 468, 480, 481, 482, 505, 565, 567], "seyfert": 286, "sf": [293, 567], "sfznwdol": 472, "sgr": 491, "shade": [188, 196, 200, 470, 563], "shall": 373, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 100, 101, 104, 108, 109, 110, 114, 120, 121, 125, 126, 131, 135, 136, 137, 142, 144, 147, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 203, 230, 278, 297, 310, 326, 381, 384, 388, 419, 434, 442, 444, 446, 449, 454, 457, 458, 461, 463, 468, 469, 471, 472, 473, 474, 476, 480, 481, 491, 503, 517, 518, 519, 524, 528], "shape_ax": [186, 198], "share": [187, 188, 190, 194, 196, 199, 200, 370, 375, 382, 385, 389, 392, 403, 421, 423, 435, 452, 453, 474, 475, 505, 565], "sharp": [231, 360, 361, 522], "she": [380, 385], "shear": 384, "sheet": [405, 505], "shell": [52, 53, 80, 252, 253, 381, 386, 393, 402, 404, 438, 476, 519, 528, 530, 565], "shell2": [252, 438, 476, 519, 530], "shell2d": 52, "shell2spatialmodel": [249, 253, 476, 528], "shellspatialmodel": [80, 249, 252, 393, 421, 476, 527], "sherpa": [106, 109, 144, 191, 192, 195, 196, 205, 282, 288, 369, 370, 379, 387, 388, 390, 391, 401, 402, 404, 411, 425, 426, 427, 428, 430, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 518, 539, 566], "sherpa_opt": 470, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 267, 406], "shim": 377, "shini": 355, "ship": [377, 378, 387, 410, 428, 447, 460, 465, 476, 505], "shock": [50, 52, 53, 498], "short": [370, 371, 374, 375, 379, 384, 387, 390, 393, 396, 418, 461, 463, 481, 505, 506, 564, 567, 570], "short_observ": 463, "shortcut": [82, 406, 423], "shorten": 421, "shorter": [286, 370, 371, 384, 390, 395, 418, 447, 463, 476, 565], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 101, 103, 104, 107, 108, 109, 111, 113, 115, 121, 122, 123, 124, 128, 131, 132, 133, 134, 139, 145, 146, 149, 155, 157, 160, 172, 177, 178, 183, 185, 186, 187, 188, 190, 192, 194, 195, 196, 198, 199, 200, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 297, 345, 359, 360, 361, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 395, 396, 397, 399, 400, 402, 404, 405, 406, 411, 413, 435, 446, 452, 455, 456, 457, 464, 465, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 482, 501, 503, 505, 510, 512, 517, 565, 566, 568, 569], "shoulder": 270, "shouldn": [83, 370, 373], "show": [11, 82, 87, 90, 125, 126, 127, 148, 167, 232, 367, 370, 371, 373, 382, 384, 385, 389, 390, 398, 400, 410, 411, 415, 423, 428, 429, 430, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 485, 489, 490, 491, 497, 498, 499, 505, 507, 508, 509, 511, 512, 514, 516, 522, 531, 563, 565, 567, 570], "show_dtyp": [87, 90], "show_in_brows": [87, 90, 454], "show_in_notebook": [87, 90], "show_nam": [87, 90], "show_progress_bar": 505, "show_row_index": [87, 90], "show_unit": [87, 90], "showcas": 478, "shower": [425, 480, 510], "shown": [19, 20, 26, 83, 155, 195, 196, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 365, 370, 377, 387, 388, 389, 397, 398, 400, 415, 417, 441, 444, 452, 454, 455, 456, 457, 461, 464, 465, 472, 475, 476, 477, 478, 480, 490, 502], "showwarn": 370, "si": [83, 186, 195, 198, 218, 240, 270, 518], "side": [198, 200, 279, 281, 370, 384], "sider": 569, "sidereal_tim": 371, "siejkowski": 430, "sig": [363, 566, 567, 568], "sight": 493, "sigma": [19, 20, 30, 32, 48, 49, 120, 121, 122, 123, 124, 128, 129, 131, 136, 137, 144, 145, 149, 155, 156, 157, 160, 203, 205, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 277, 279, 281, 287, 393, 398, 440, 454, 455, 460, 461, 462, 470, 474, 476, 478, 489, 503, 509, 523, 538, 554, 567], "sigma1": 31, "sigma2": 31, "sigma_": [203, 523], "sigma_1": [31, 49, 148, 471], "sigma_10tev": [393, 476], "sigma_1tev": [393, 476], "sigma_2": [31, 49, 148, 471], "sigma_3": [148, 471], "sigma_err": 455, "sigma_gauss": 230, "sigma_laplac": 230, "sigma_m": 523, "sigma_nod": 476, "sigma_to_t": 567, "sigmav": 493, "sign": [208, 210, 279, 281, 373, 396, 417, 432, 503, 567], "signal": [83, 101, 104, 107, 108, 109, 172, 200, 254, 279, 281, 294, 394, 439, 444, 445, 450, 453, 462, 474, 489, 493, 508, 512, 514, 564, 566, 567, 568], "signif_avg": 491, "signific": [77, 116, 120, 121, 122, 123, 130, 131, 138, 139, 277, 279, 281, 285, 360, 361, 368, 375, 376, 377, 378, 385, 386, 390, 391, 394, 396, 417, 418, 426, 429, 430, 435, 436, 438, 439, 444, 445, 451, 452, 453, 454, 455, 461, 462, 465, 468, 470, 482, 485, 489, 491, 501, 503, 505, 510, 517, 563, 564, 565], "significance_lima": 417, "significance_map": [450, 452], "significance_map_off": 450, "significance_mask": 474, "significance_mask_inv": 474, "significancemapestim": 417, "significantli": [421, 440, 456, 480, 564], "signoff": 373, "silent": 432, "silicon": [402, 404], "silvia": 413, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 361, 370, 373, 382, 383, 384, 385, 386, 389, 390, 391, 394, 421, 435, 446, 461, 473, 477, 478, 491, 501, 509, 565], "similarli": [376, 378, 394, 397, 421, 468, 470, 471, 473, 474, 476, 518], "simlat": 280, "simon": [434, 435, 436], "simpifi": 379, "simpl": [50, 52, 136, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 270, 370, 371, 382, 383, 384, 385, 386, 389, 394, 397, 398, 411, 421, 425, 429, 430, 435, 439, 441, 442, 444, 445, 446, 447, 449, 452, 461, 465, 470, 473, 474, 477, 483, 489, 490, 491, 495, 505, 563, 564, 565], "simple_norm": 200, "simple_rebin_lc": 385, "simplefilt": 505, "simpler": [175, 378, 383, 384, 392], "simplest": [439, 444, 461], "simplex": [205, 470], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 90, 164, 205, 209, 211, 370, 384, 385, 394, 403, 432, 435, 439, 440, 441, 454, 469, 474, 475, 476, 491, 518, 565, 567], "simplic": [453, 456, 463, 470, 476, 478, 481], "simplif": [381, 393, 432], "simplifi": [131, 194, 377, 379, 381, 388, 394, 411, 414, 415, 416, 418, 421, 425, 432, 440, 442, 448, 510, 568], "simu": [460, 464, 478], "simul": [45, 82, 83, 88, 92, 101, 104, 107, 108, 109, 111, 146, 157, 160, 280, 327, 380, 383, 386, 390, 397, 398, 402, 409, 413, 415, 417, 423, 426, 428, 429, 430, 435, 436, 438, 443, 449, 452, 454, 459, 465, 466, 475, 478, 480, 485, 495, 501, 503, 510, 513, 562, 563], "simulate_3d": [390, 430, 438, 459, 460], "simulate_dataset": [411, 415, 416], "simulate_observ": 92, "simulated_d": 446, "simulated_data": 92, "simulated_model": 446, "simultan": [398, 464, 469, 476, 478, 501], "sin": [522, 523, 524, 558], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 83, 87, 88, 90, 124, 125, 128, 188, 198, 208, 210, 345, 370, 371, 376, 380, 384, 386, 387, 388, 389, 390, 394, 396, 397, 398, 400, 421, 431, 432, 433, 434, 435, 436, 440, 446, 450, 452, 464, 469, 475, 476, 478, 480, 482, 537, 540, 566, 569], "sine": [254, 381, 438, 519, 561], "sine_model": 558, "sinetemporalmodel": [262, 476, 558], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 90, 92, 94, 120, 124, 125, 128, 131, 145, 146, 157, 159, 160, 163, 167, 169, 174, 177, 178, 183, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 218, 240, 370, 376, 377, 380, 382, 383, 384, 385, 386, 387, 391, 392, 397, 398, 402, 409, 411, 416, 417, 429, 435, 436, 439, 444, 446, 448, 449, 450, 462, 464, 468, 469, 472, 473, 475, 478, 482, 483, 489, 491, 501, 503, 515, 517, 518, 562, 564], "singleobscubemak": 376, "singleobsimagemak": 376, "singleton": 321, "sinha": [382, 385, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436], "sink": 387, "sinu": [254, 476], "sinusoid": [254, 558], "sipocz": [387, 411, 413, 415, 417, 426, 427, 428, 429, 430, 431], "sip\u0151cz": 432, "sit": 373, "site": [334, 400, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 529, 537, 540, 553, 565], "situat": [384, 385, 387, 510], "six": [389, 395], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 90, 101, 102, 104, 107, 108, 109, 111, 112, 113, 115, 126, 131, 141, 142, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 162, 163, 169, 170, 171, 174, 175, 176, 184, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 212, 213, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 319, 320, 324, 325, 326, 327, 358, 370, 378, 381, 383, 384, 402, 404, 434, 436, 439, 446, 450, 452, 456, 463, 465, 468, 472, 473, 474, 476, 480, 481, 482, 483, 491, 501, 516, 522, 523, 569], "skeleton": 386, "sketch": 386, "skill": [373, 406], "skimag": 430, "skip": [82, 155, 358, 371, 373, 382, 384, 390, 428, 475], "skip_miss": [82, 429], "sklearn": 370, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 95, 101, 104, 107, 108, 109, 116, 136, 145, 146, 157, 160, 180, 186, 187, 188, 190, 195, 196, 198, 199, 200, 218, 240, 255, 267, 270, 272, 299, 303, 304, 328, 330, 332, 357, 369, 370, 371, 383, 389, 402, 411, 413, 427, 428, 430, 440, 444, 445, 447, 448, 450, 460, 464, 465, 468, 473, 476, 480, 481, 485, 487, 489, 490, 491, 493, 500, 501, 502, 505, 510, 511, 514, 516, 518, 522, 523, 527, 528, 529, 563, 564], "sky_circl": [90, 95, 463, 477, 490], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 113, 115, 385, 440, 462, 463, 468, 475, 476, 490, 533], "sky_model_pntpwl": 456, "sky_reg": 467, "sky_reg_rec": 467, "sky_region": 89, "skycood": 381, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 90, 93, 95, 101, 104, 108, 109, 121, 123, 125, 127, 145, 146, 152, 157, 160, 170, 171, 173, 175, 177, 178, 180, 181, 183, 184, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 201, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 265, 267, 295, 296, 329, 330, 346, 366, 371, 381, 384, 394, 397, 439, 441, 444, 446, 447, 450, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 490, 491, 505, 509, 514, 516, 518, 526], "skycoord_from_t": 384, "skycoord_to_pixel_scale_angl": 384, "skycoordconfig": 16, "skycub": [376, 389, 427, 428, 429, 430], "skydiffusecub": [381, 393, 412, 417, 418, 430], "skydiffusemap": [381, 412], "skydir": [16, 83, 101, 104, 108, 109, 110, 114, 146, 157, 167, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 444, 445, 446, 449, 450, 452, 454, 455, 456, 457, 460, 462, 465, 467, 469, 471, 472, 473, 474, 476, 481, 482, 489, 490, 512, 514, 515, 516, 518, 523, 524, 525, 526], "skydirfunct": 493, "skydisk": 412, "skydiskelong": 381, "skyellips": [411, 412, 413, 414], "skygaussian": 411, "skygaussianelong": 381, "skyimag": [376, 389, 427, 428, 429, 430], "skyimagelist": 427, "skymap": [187, 188, 190, 196, 199, 200, 384, 426, 427, 457], "skymap_band": [457, 560], "skymap_region": 457, "skymask": 428, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 100, 101, 104, 108, 109, 113, 115, 121, 123, 129, 131, 164, 205, 218, 236, 240, 272, 277, 381, 382, 383, 385, 391, 393, 394, 411, 415, 416, 417, 421, 430, 436, 440, 441, 442, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 468, 469, 470, 475, 478, 481, 489, 490, 500, 501, 503, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562], "skypointsourc": 414, "skyregion": [99, 101, 104, 108, 109, 125, 145, 146, 152, 157, 160, 170, 171, 175, 190, 195, 196, 200, 218, 240, 328, 331, 384, 441, 456, 458, 474, 476, 509, 514, 518], "skyspatialmodel": [381, 430], "slack": [372, 373, 377, 393, 399, 405, 410, 411, 565], "slew": 94, "slice": [83, 87, 90, 99, 101, 104, 108, 109, 118, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 265, 267, 289, 376, 418, 455, 458, 469, 480, 517], "slice_by_coord": [121, 123, 436], "slice_by_energi": [99, 101, 104, 108, 109, 121, 123, 265, 418, 469], "slice_by_idx": [101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 418, 430, 432, 458, 473, 481], "slice_by_tim": [121, 123], "sliced_ax": 191, "sliced_geom": [185, 186, 195, 198], "slide": [379, 448, 468], "slider": 473, "sliderstyl": [452, 460, 473, 489, 490], "slightli": [116, 192], "slope": [27, 412], "slow": [87, 90, 205, 377, 386, 445, 470, 489, 490], "slower": [87, 90, 188, 370, 378, 388], "slowest": 400, "small": [361, 370, 376, 378, 384, 386, 387, 390, 392, 397, 400, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 435, 436, 462, 463, 473, 478, 480, 481, 482, 483, 523, 527, 528, 564, 565], "smaller": [27, 146, 157, 160, 175, 186, 187, 188, 190, 196, 199, 200, 363, 373, 411, 430, 456, 461, 463, 470, 473, 478, 523], "smallest": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 251, 256, 258, 259, 260, 261, 264, 268, 448], "smooth": [101, 104, 108, 109, 116, 126, 127, 136, 188, 200, 219, 256, 362, 365, 421, 426, 427, 428, 430, 431, 438, 450, 452, 454, 458, 460, 465, 469, 472, 473, 475, 481, 489, 490, 491, 519, 522, 551], "smooth_kernel": [101, 104], "smooth_radiu": [101, 104], "smoothbrokenpowerlawspectralmodel": [212, 250, 393, 416, 417, 476, 546], "sn": [45, 50, 52, 53], "sn_rate": [45, 495], "snippet": [371, 390, 505], "snr": [44, 50, 53, 67, 481, 498, 499], "snr_model": 499, "snrcat": [425, 468], "snrtruelovemcke": [50, 498, 499], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 94, 100, 104, 109, 120, 124, 126, 128, 129, 131, 140, 145, 146, 152, 157, 160, 184, 187, 188, 190, 192, 196, 199, 200, 205, 208, 210, 230, 267, 277, 345, 353, 360, 361, 370, 371, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 397, 399, 401, 402, 404, 406, 411, 413, 421, 431, 433, 434, 441, 444, 446, 448, 449, 454, 455, 456, 460, 462, 467, 468, 470, 473, 474, 476, 478, 480, 481, 482, 485, 490, 505, 512, 514, 518, 524, 528, 565, 566, 567, 568], "social": 396, "soft": 286, "softwar": [187, 188, 190, 199, 200, 384, 385, 387, 396, 397, 400, 473, 505], "solar": 52, "sole": [380, 396], "solid": [185, 186, 195, 198, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 270, 386, 409, 411, 412, 413, 430, 450, 472, 473, 480, 508, 514, 564], "solid_angl": [185, 186, 195, 198, 473, 518], "solut": [19, 20, 26, 52, 144, 212, 213, 216, 220, 222, 223, 224, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 371, 373, 375, 377, 378, 383, 384, 386, 387, 388, 390, 392, 394, 398, 403, 501, 503, 505, 568], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 373, 378, 380, 381, 382, 383, 423, 505], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 82, 84, 87, 90, 103, 122, 173, 194, 297, 305, 373, 375, 376, 377, 378, 379, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 411, 413, 421, 422, 424, 426, 428, 429, 430, 435, 439, 441, 442, 444, 446, 448, 449, 450, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 472, 473, 475, 476, 478, 480, 481, 490, 491, 493, 494, 501, 502, 505, 510, 515, 517, 564, 565, 566, 567, 569], "some_class": 370, "some_map": 155, "some_map_convolv": 155, "somehow": [378, 384, 389, 493], "someon": [373, 375, 390], "someth": [87, 90, 370, 371, 372, 373, 375, 378, 384, 387, 388, 390, 400, 402, 404, 447, 468, 518, 565], "sometim": [19, 20, 83, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 348, 370, 373, 377, 384, 390, 400, 402, 470, 564, 569], "somewhat": [387, 480], "somewher": [373, 387, 400], "soon": [373, 384, 400], "sort": [82, 83, 87, 90, 100, 136, 333, 338, 339, 370, 387, 412, 491], "sort_kei": [333, 338, 339], "sortedarrai": [87, 90], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 373, 375, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 400, 402, 407, 409, 411, 415, 416, 421, 422, 427, 428, 429, 430, 435, 436, 438, 440, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 479, 481, 482, 483, 485, 487, 489, 490, 493, 494, 499, 501, 502, 503, 505, 510, 513, 514, 517, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567], "source1": 476, "source2": 476, "source_1": [381, 386], "source_2": 381, "source_42": 386, "source_fermi_3fgl": 442, "source_fermi_3fhl": 442, "source_gammacat": 442, "source_irf_model": 381, "source_librari": 480, "source_model": 544, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 468, 491], "source_name_alia": 56, "source_name_kei": 56, "source_po": [450, 454, 472], "source_population_model": [390, 415], "source_posit": [439, 455, 477], "sourcebackground": 381, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 384, 421, 468, 474, 491, 500], "sourcecatalog1lhaaso": [55, 70, 468], "sourcecatalog2fhl": [55, 71, 468, 500], "sourcecatalog2hwc": [55, 72, 468, 500], "sourcecatalog2pc": [55, 468], "sourcecatalog3fgl": [55, 74, 442, 468, 500], "sourcecatalog3fhl": [55, 75, 442, 468, 475, 491], "sourcecatalog3hwc": [55, 76, 468, 500], "sourcecatalog3pc": [55, 468], "sourcecatalog4fgl": [55, 78, 423, 440, 468, 500], "sourcecataloggammacat": [55, 79, 442, 468], "sourcecataloghgp": [55, 80, 81, 468, 500], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 468, 500], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 410, 468], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 381, "sources_flux_map": 448, "sourcetempl": 381, "south": [456, 457], "south_z20_50h": [82, 142, 146, 147, 148, 157, 439, 447, 460, 464, 471, 480], "south_z40_50h": 480, "southern": 480, "space": [87, 90, 101, 104, 108, 109, 197, 200, 263, 264, 280, 308, 326, 369, 370, 380, 386, 392, 465, 469, 470, 473, 517, 541, 550], "span": 477, "spars": [186, 187, 188, 190, 195, 198, 199, 200, 412, 421, 429, 457, 473], "sparsif": 394, "sparsifi": [187, 188, 190, 199, 200], "spatail": 131, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 101, 104, 108, 109, 111, 121, 123, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 169, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 209, 211, 214, 215, 218, 219, 226, 227, 230, 240, 242, 244, 249, 252, 253, 255, 257, 263, 265, 267, 277, 363, 365, 370, 376, 379, 382, 383, 384, 386, 388, 389, 394, 402, 410, 411, 413, 414, 415, 416, 418, 421, 429, 430, 432, 435, 436, 438, 440, 442, 445, 447, 449, 452, 453, 455, 456, 457, 458, 460, 464, 465, 468, 469, 472, 475, 479, 481, 485, 489, 493, 494, 501, 503, 505, 506, 516, 517, 530, 562, 563, 564], "spatial_bin_s": 111, "spatial_bin_size_min": 111, "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 113, 115, 131, 219, 226, 255, 265, 277, 385, 415, 440, 448, 452, 454, 455, 456, 457, 460, 462, 463, 468, 469, 475, 476, 481, 490, 521, 522, 523, 524, 525, 526, 527, 528, 529], "spatial_model_point": 456, "spatial_model_registri": 476, "spatial_par": 393, "spatial_typ": 393, "spatial_width": 111, "spatial_width_max": 111, "spatialbackground": 381, "spatialcircleconfig": 16, "spatialconst": 381, "spatialgaussian": 381, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 214, 215, 219, 226, 227, 230, 242, 244, 252, 253, 255, 263, 265, 267, 381, 393, 415, 430, 434, 468, 476, 490, 493, 500, 519, 562], "spatialtempl": 381, "spatiamodel": 155, "speak": 470, "spec": [80, 109, 370, 384, 426, 452, 457, 468, 480, 490], "spec_model_tru": 465, "special": [87, 90, 230, 370, 380, 382, 384, 385, 393, 396, 397, 410, 449, 456, 468, 469, 475, 476], "specialis": [384, 390], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 85, 86, 87, 90, 93, 101, 104, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 163, 177, 178, 183, 187, 188, 189, 190, 192, 196, 197, 198, 199, 200, 205, 232, 265, 277, 359, 369, 370, 371, 373, 375, 380, 382, 384, 385, 386, 387, 388, 389, 391, 394, 395, 396, 397, 400, 402, 403, 415, 418, 421, 423, 432, 433, 435, 440, 441, 444, 446, 447, 450, 452, 453, 458, 460, 464, 465, 469, 470, 471, 473, 474, 477, 478, 483, 485, 491, 501, 502, 503, 505, 507, 508, 509, 511, 516, 517, 518, 569], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 90, 91, 95, 100, 101, 103, 104, 108, 109, 116, 118, 121, 122, 123, 124, 126, 128, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 162, 173, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 218, 232, 240, 277, 297, 299, 303, 308, 357, 380, 387, 392, 395, 403, 414, 417, 421, 440, 446, 449, 452, 455, 456, 458, 460, 469, 470, 471, 472, 473, 475, 476, 480, 490, 501, 503, 516], "spectra": [26, 108, 109, 124, 129, 140, 205, 250, 270, 277, 376, 379, 381, 383, 385, 389, 393, 409, 413, 426, 430, 440, 441, 446, 447, 453, 457, 462, 464, 465, 469, 470, 472, 476, 478, 493, 501, 503, 505, 564], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 100, 101, 104, 108, 109, 116, 120, 121, 123, 124, 125, 128, 130, 131, 135, 155, 157, 160, 164, 209, 211, 212, 213, 216, 218, 220, 222, 223, 224, 226, 228, 232, 234, 235, 237, 238, 240, 241, 243, 245, 246, 247, 250, 251, 255, 256, 258, 259, 260, 261, 264, 265, 266, 268, 270, 271, 286, 324, 376, 379, 381, 382, 383, 384, 385, 386, 388, 389, 391, 392, 394, 402, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 443, 447, 449, 452, 455, 456, 457, 458, 460, 462, 463, 464, 465, 468, 469, 470, 472, 474, 475, 478, 479, 480, 481, 489, 490, 493, 494, 500, 501, 502, 503, 504, 505, 506, 512, 513, 514, 517, 521, 522, 523, 524, 525, 526, 527, 528, 529, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566], "spectral_analysi": [438, 443, 444], "spectral_analysis_hli": [438, 443, 445], "spectral_analysis_rad_max": [438, 443, 446], "spectral_cub": 422, "spectral_index": [19, 20, 26, 52, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "spectral_index_error": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 435], "spectral_irf_model": 381, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 100, 108, 109, 113, 115, 120, 129, 131, 135, 164, 205, 218, 226, 238, 240, 255, 265, 277, 385, 388, 392, 393, 394, 398, 418, 440, 441, 442, 444, 446, 447, 448, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 468, 469, 470, 475, 476, 478, 481, 490, 491, 503, 512, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "spectral_model1": 464, "spectral_model2": 464, "spectral_model_pwl": 456, "spectral_model_registri": 476, "spectral_par": 393, "spectral_point": 386, "spectral_typ": 393, "spectralbackground": 381, "spectralbackgroundmodel": 382, "spectralcompoundmodel": 381, "spectralconst": 381, "spectralevalu": 381, "spectralexponentialcutoffpowerlaw3fgl": 389, "spectralgaussian": [381, 413], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 100, 116, 120, 121, 123, 125, 130, 135, 155, 157, 160, 164, 212, 213, 216, 218, 220, 222, 223, 224, 226, 228, 234, 235, 237, 240, 241, 243, 245, 246, 247, 251, 255, 256, 259, 260, 261, 264, 265, 268, 270, 381, 382, 385, 388, 394, 418, 421, 428, 435, 468, 476, 490, 491, 500, 519, 562], "spectralregion": 384, "spectraltempl": 381, "spectrum": [19, 20, 26, 72, 76, 97, 99, 100, 101, 104, 105, 108, 109, 116, 121, 123, 125, 128, 130, 132, 155, 157, 160, 165, 169, 173, 174, 187, 188, 190, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 270, 271, 280, 286, 367, 376, 381, 382, 385, 386, 389, 390, 391, 402, 412, 413, 414, 415, 417, 421, 423, 426, 427, 428, 429, 430, 432, 434, 438, 439, 441, 442, 443, 445, 452, 453, 456, 457, 458, 464, 467, 468, 469, 474, 476, 480, 481, 485, 489, 491, 493, 501, 505, 510, 513, 518, 532, 535, 536, 538, 539, 543, 544, 546, 547, 548, 549, 562, 565], "spectrum_analysi": 444, "spectrum_dataset": [140, 382, 465, 469], "spectrum_dataset_1": 382, "spectrum_dataset_2": 382, "spectrum_dataset_empti": [465, 472], "spectrum_dataset_mak": [465, 472], "spectrum_dataset_on_off": 465, "spectrum_fitting_with_sherpa": 390, "spectrum_mak": 439, "spectrum_simul": [390, 438, 443, 447], "spectrumanalysisiact": [386, 414, 428], "spectrumdataset": [97, 98, 99, 101, 104, 109, 128, 130, 140, 168, 169, 173, 174, 226, 391, 412, 413, 414, 415, 416, 417, 418, 421, 424, 439, 441, 444, 446, 447, 454, 463, 464, 465, 470, 472, 478, 501, 514, 566], "spectrumdatasetmak": [165, 415, 421, 439, 441, 444, 446, 447, 454, 463, 464, 465, 472, 514], "spectrumdatasetonoff": [97, 104, 105, 106, 108, 129, 130, 140, 168, 169, 205, 277, 367, 385, 412, 413, 414, 416, 417, 433, 434, 435, 439, 440, 441, 444, 445, 447, 453, 454, 462, 465, 469, 470, 472, 478, 503, 566], "spectrumdatasetonoffstack": 414, "spectrumdatasetsonoff": 382, "spectrumenergygroup": 429, "spectrumevalu": 417, "spectrumextract": [385, 412, 415, 428], "spectrumfit": [412, 428, 429, 430], "spectrumobserv": [382, 412, 428], "spectrumobservationlist": [412, 427], "spectrumobservationstack": 427, "spectrumonoffdataset": 385, "spectrumresult": 412, "spectrumsimul": [413, 427, 430], "spectrumstack": 429, "spectrumstat": 413, "specutil": 384, "speed": [131, 297, 373, 403, 413, 415, 423, 429, 430, 470], "spell": [375, 505], "spend": [383, 390], "spent": [377, 472], "sphere": [47, 325, 409, 411, 517, 522, 523, 526], "spherepointpick": 325, "spheric": [47, 370, 411, 517, 563], "sphericalcircleskyregion": [389, 465, 491], "sphinx": [373, 377, 390, 400, 412, 416, 423, 429, 430, 432, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "sphinx_gallery_conf": 400, "sphinx_gallery_thumbnail_numb": [371, 440, 444, 446, 448, 450, 455, 458, 471, 531], "spill": 472, "spin": [50, 51, 54, 413, 497], "spir": [411, 430], "spiral": [33, 34, 38, 45, 425], "spiralarm": [33, 38, 45, 429, 495], "spiralarm_index": [33, 34, 38], "spirit": 396, "split": [19, 20, 87, 90, 91, 113, 115, 121, 123, 187, 188, 190, 196, 199, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 376, 378, 380, 382, 384, 385, 389, 391, 393, 402, 418, 436, 463, 476, 494, 570], "split_by_axi": [187, 188, 190, 196, 199, 200], "split_template_model": [113, 115], "sporad": 397, "spot": 370, "spread": [82, 88, 148, 157, 160, 370, 392, 418, 439, 448, 471, 510, 564], "spring": [380, 431], "sprint": [378, 379, 383, 386, 387, 388, 389, 391], "spuriou": 136, "sqrt": [19, 20, 30, 31, 32, 67, 100, 101, 104, 108, 109, 116, 121, 123, 126, 131, 187, 188, 190, 192, 196, 199, 200, 203, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 278, 287, 309, 310, 311, 382, 441, 444, 448, 452, 458, 460, 461, 465, 468, 470, 472, 473, 475, 481, 489, 490, 491, 503, 523, 524, 527, 528, 538, 567], "sqrt_space": [389, 415], "sqrt_t": [116, 120, 121, 123, 131, 136, 140, 279, 281, 363, 394, 406, 418, 441, 444, 445, 448, 450, 452, 454, 465, 468, 469, 474, 482, 489, 491, 503, 565, 567], "sqrt_ts_min": [140, 444], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 120, 121, 122, 123, 125, 131, 458, 462, 468, 469, 489, 491], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 101, 104, 121, 122, 144, 145, 146, 152, 157, 160, 163, 184, 198, 200, 265, 284, 385, 388, 418, 474, 478, 493, 503, 517, 565, 566, 567, 568], "squash": [146, 185, 186, 189, 191, 192, 195, 197, 198, 435, 439, 450, 469, 473], "squeez": [439, 471], "sr": [141, 142, 143, 154, 185, 186, 195, 198, 215, 267, 270, 439, 447, 449, 452, 454, 460, 464, 468, 469, 471, 473, 476, 480, 481, 510, 521, 529], "src": [383, 440, 455, 501], "src_above_bkg": 455, "src_event": [456, 457], "src_posit": [456, 457], "srcmap": [186, 187, 188, 190, 199, 200, 473], "ssc": [58, 60, 61, 62, 64, 65, 241, 390, 544], "ssc_model": 241, "st": [53, 470, 481], "stabil": [19, 20, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 395, 460], "stabl": [11, 87, 90, 195, 205, 297, 377, 378, 379, 386, 387, 390, 395, 399, 400, 401, 403, 415, 416, 417, 423, 428, 430, 432, 470, 502], "stack": [16, 83, 86, 91, 99, 100, 101, 103, 104, 108, 109, 120, 121, 123, 145, 146, 152, 157, 160, 163, 187, 188, 189, 190, 195, 196, 199, 200, 203, 209, 211, 265, 340, 370, 382, 385, 386, 392, 397, 411, 414, 415, 418, 421, 426, 427, 432, 433, 435, 440, 441, 445, 449, 453, 454, 462, 465, 469, 470, 472, 477, 478, 489, 490, 502, 503, 512, 515, 564], "stack_dataset": [163, 465, 472], "stack_reduc": [99, 140, 205, 414, 441, 444, 446, 452, 453, 454, 465, 469, 470, 503], "stacked_dataset": [454, 455], "stacked_fit": 444, "stacked_on_off": 450, "stackedobscubemak": 376, "stackedobsimagemak": 376, "stackoverflow": 337, "stage": [373, 386, 450, 452, 464, 469, 501, 564], "stai": 382, "stand": 375, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 90, 95, 188, 200, 205, 271, 280, 296, 352, 353, 370, 371, 373, 375, 379, 381, 382, 383, 386, 388, 394, 396, 397, 406, 413, 414, 430, 436, 439, 440, 445, 447, 450, 453, 455, 457, 460, 463, 464, 467, 470, 473, 476, 477, 478, 480, 483, 485, 489, 501, 504, 509, 517, 563, 564, 565], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [95, 295, 477], "standardis": [342, 343, 355, 429], "standardise_unit": [342, 356], "standpoint": 370, "stapel": 436, "star": [36, 40, 220], "starmap": [313, 317, 318], "start": [16, 53, 83, 86, 88, 89, 90, 91, 93, 99, 128, 136, 197, 217, 218, 225, 229, 231, 232, 233, 240, 248, 254, 266, 269, 370, 371, 373, 375, 377, 378, 379, 380, 383, 384, 386, 387, 395, 396, 398, 399, 400, 404, 405, 406, 407, 409, 414, 423, 426, 427, 428, 429, 430, 435, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 467, 468, 473, 476, 480, 481, 485, 489, 491, 492, 505, 509, 563], "start_po": [125, 330, 458], "startswith": 370, "stat": [6, 99, 100, 104, 109, 121, 123, 124, 125, 128, 129, 131, 205, 206, 208, 210, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 363, 370, 382, 390, 398, 400, 406, 413, 415, 416, 417, 418, 421, 427, 430, 431, 432, 436, 441, 442, 444, 445, 446, 450, 452, 453, 454, 455, 458, 461, 465, 470, 478, 481, 489, 490, 503, 565, 566, 567], "stat_arrai": [98, 100, 101, 104, 108, 109, 398], "stat_contour": 205, "stat_kwarg": 100, "stat_max": [279, 281], "stat_nul": [121, 123, 124, 125, 128, 129, 131, 279, 281, 436, 448, 458, 503], "stat_per_bin": 382, "stat_profil": [205, 440, 470, 478, 505], "stat_scan": [100, 121, 123, 124, 125, 128, 129, 131, 205, 278, 440, 444, 470, 478, 503], "stat_sum": [98, 99, 100, 101, 104, 108, 109, 398, 434, 435, 452, 464, 469, 475, 505], "stat_surfac": [205, 418, 505], "stat_typ": [100, 101, 104, 108, 109, 416, 444, 452, 464, 469, 475], "state": [16, 45, 47, 197, 205, 370, 376, 380, 382, 386, 390, 392, 394, 440, 445, 489, 510, 531], "stateless": 397, "statement": [370, 373, 377, 434, 436, 494], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 106, 107, 116, 120, 121, 123, 124, 125, 128, 129, 131, 148, 156, 167, 173, 174, 186, 187, 188, 190, 196, 197, 199, 200, 212, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 245, 246, 247, 248, 252, 253, 254, 256, 259, 260, 261, 266, 268, 269, 367, 378, 381, 400, 412, 429], "staticmethod": [381, 393, 398, 476, 478], "statist": [6, 19, 20, 26, 79, 98, 99, 100, 101, 104, 108, 109, 120, 121, 123, 124, 125, 128, 129, 131, 137, 140, 167, 205, 207, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 251, 256, 258, 259, 260, 261, 264, 268, 277, 278, 279, 281, 282, 283, 288, 294, 382, 385, 388, 389, 390, 392, 398, 412, 416, 417, 418, 421, 423, 435, 436, 439, 440, 445, 447, 448, 449, 450, 452, 454, 458, 460, 461, 462, 464, 465, 469, 470, 472, 478, 489, 490, 501, 503, 505, 512, 515, 563, 564], "statu": [19, 20, 26, 121, 123, 204, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 370, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 431, 436, 475, 476], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 280, 296, 447, 461, 481], "stddev": 68, "stderr": 370, "stdout": [305, 370], "steadi": 440, "steep": 447, "stefan": [425, 436], "step": [19, 20, 26, 120, 124, 128, 129, 131, 205, 206, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 370, 373, 376, 377, 380, 381, 382, 384, 385, 386, 388, 391, 395, 398, 399, 400, 406, 423, 430, 431, 435, 439, 444, 446, 449, 452, 454, 455, 456, 457, 463, 464, 469, 470, 472, 476, 478, 489, 490, 491, 505, 513, 518], "stepprior": 398, "stepsiz": 162, "steradian": 195, "stewart": [131, 289, 448, 564], "stewart2009": [131, 564, 567], "stick": [373, 393, 411, 430, 470, 564], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 378, 380, 383, 384, 387, 389, 390, 391, 394, 395, 397, 399, 400, 428, 429, 430, 476, 478, 491, 503, 527, 528, 565], "stipul": 396, "stone": [370, 390], "stop": [16, 52, 83, 86, 88, 89, 90, 91, 99, 128, 131, 197, 217, 218, 225, 229, 231, 232, 233, 240, 248, 254, 266, 269, 380, 406, 435, 445, 449, 450, 452, 463, 465, 470, 481, 489], "storag": [82, 505], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 82, 83, 85, 86, 87, 90, 121, 122, 123, 126, 128, 155, 168, 169, 187, 188, 190, 196, 199, 200, 205, 206, 208, 210, 218, 240, 353, 370, 373, 376, 378, 379, 380, 382, 383, 386, 388, 392, 394, 396, 397, 400, 418, 421, 422, 441, 446, 447, 456, 457, 461, 465, 469, 470, 471, 472, 473, 474, 477, 480, 481, 482, 483, 491, 501, 502, 505, 510, 511, 512, 517, 518, 541, 562, 563, 565, 569], "store_per_ob": 386, "store_trac": [205, 470], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 118, 120, 121, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 164, 167, 168, 173, 174, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 297, 309, 318, 333, 334, 335, 339, 352, 353, 355, 359, 363, 364, 366, 384, 397, 444, 446, 472, 476, 482], "str3": [87, 90], "straight": [371, 402, 505], "straightforward": [400, 568], "strang": 370, "strategi": [370, 377, 384, 435, 470, 568], "stream": 370, "streil": [398, 434, 435, 436], "strength": [51, 54, 398, 541], "stretch": [187, 188, 190, 196, 199, 200, 360, 361, 365, 448, 452, 458, 460, 472, 473, 475, 481, 489, 490, 491], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 101, 103, 104, 122, 145, 146, 152, 157, 160, 163, 198, 200, 265], "strict_bound": 192, "strictli": [16, 84, 103, 122, 192], "strike": 501, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 92, 103, 121, 122, 123, 124, 125, 128, 131, 148, 154, 156, 158, 163, 186, 187, 188, 190, 192, 193, 195, 196, 198, 199, 200, 208, 210, 218, 240, 297, 315, 359, 370, 383, 384, 387, 389, 396, 397, 409, 413, 421, 423, 445, 468, 474, 476, 489, 517, 518], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 383, 390, 444, 478], "stronger": 478, "strongli": [286, 385, 387, 396, 421, 449, 470, 478], "structur": [87, 90, 198, 293, 374, 375, 376, 379, 381, 383, 386, 390, 393, 396, 397, 408, 414, 415, 417, 421, 424, 436, 438, 458, 469, 472, 473, 474, 476, 485, 492, 493, 500, 502, 506, 517, 518, 565], "stuck": 565, "student": 373, "studi": [46, 270, 293, 383, 386, 394, 403, 430, 441, 442, 453, 454, 455, 458, 460, 463, 464, 470, 473, 476, 480, 495, 505, 514, 566], "stuff": [371, 400, 505], "stuff1": 370, "stuff2": 370, "style": [87, 90, 100, 187, 188, 190, 196, 199, 200, 367, 373, 379, 396, 425, 427, 452, 460, 471, 473, 489, 490, 505, 518], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 108, 109, 113, 115, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 187, 188, 189, 190, 192, 196, 197, 199, 200, 203, 370, 373, 377, 379, 380, 384, 389, 390, 391, 392, 397, 400, 409, 411, 415, 417, 418, 426, 428, 429, 454, 456, 472, 474, 476, 482, 483, 501, 504, 505, 513, 563, 565, 569], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 103, 122, 297, 384, 427, 430, 476, 478], "subcompon": [67, 80], "subfold": [378, 421], "submit": [375, 396], "submodul": [378, 411, 412, 417, 473, 491, 503], "subok": 297, "subpackag": [391, 397, 414, 421, 425], "subplot": [66, 67, 187, 188, 190, 196, 199, 200, 439, 441, 442, 444, 445, 446, 447, 448, 450, 452, 453, 454, 458, 462, 464, 465, 467, 470, 471, 473, 474, 475, 477, 478, 505, 507, 514, 524, 528, 531], "subplot_kw": [448, 450, 454, 465, 474, 514], "subplots_adjust": 467, "subsect": [390, 473], "subsequ": [285, 379], "subset": [82, 83, 87, 90, 124, 128, 131, 241, 397, 425, 426, 454, 465, 475, 480, 482, 504, 563], "subspac": 384, "substanti": [87, 90], "substitut": 566, "substr": [218, 240], "subtract": 446, "succed": 399, "succeed": 121, "success": [16, 84, 100, 103, 121, 122, 123, 124, 125, 128, 129, 131, 204, 205, 206, 207, 398, 421, 441, 442, 444, 445, 446, 448, 452, 453, 454, 458, 462, 465, 470, 475, 481, 489, 490, 529], "successfulli": [100, 441, 442, 444, 445, 446, 452, 453, 454, 464, 465, 470, 481, 489, 490], "sudo": 403, "suffer": [387, 465], "suffic": 464, "suffici": [373, 376, 383, 396, 435], "suffix": [100, 121, 371, 381, 393, 399, 476, 517, 519], "suggest": [373, 375, 377, 380, 384, 390, 392, 394, 398, 448, 456, 457, 505, 565], "suit": [188, 370, 518], "suitabl": 188, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 101, 104, 108, 109, 123, 124, 125, 127, 128, 129, 131, 138, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 270, 279, 281, 283, 366, 370, 380, 381, 383, 392, 394, 398, 412, 436, 452, 456, 465, 467, 469, 478, 481, 489, 490, 491, 501, 511, 564, 566], "sum_": 501, "sum_band": [187, 188], "sum_i": 126, "sum_j": 501, "sum_k": 501, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [187, 188, 190, 196, 199, 200, 358, 430, 450, 452, 458, 465, 469, 472, 474, 475, 481, 490], "sum_over_energy_group": [120, 124, 131, 454, 458], "summar": [379, 493], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 305, 309, 319, 344, 357, 371, 373, 390, 408, 441, 445, 463, 464, 469, 480, 489, 505], "summaris": [370, 375, 377, 390], "summat": [279, 281, 376], "summer": 378, "sun": 41, "sunpi": [387, 390, 391], "super": [186, 188, 259, 260, 261, 438, 456, 483, 519, 551, 553], "superexpcutoffpowerlaw3fglspectralmodel": [250, 393, 476, 547], "superexpcutoffpowerlaw4fgldr3spectralmodel": [250, 476, 548], "superexpcutoffpowerlaw4fglspectralmodel": [250, 393, 476, 549], "superfici": 493, "superflu": [380, 465], "supernova": [28, 52, 441, 455, 476, 495, 496], "superpixel": 186, "supersed": [186, 187, 188, 198, 199, 200], "supervisor": 386, "suppli": [19, 20, 26, 87, 90, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 440, 464], "support": [83, 85, 86, 87, 88, 89, 90, 91, 94, 99, 101, 104, 108, 109, 112, 123, 139, 150, 155, 186, 187, 188, 189, 190, 192, 197, 198, 199, 200, 205, 218, 240, 369, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 397, 403, 407, 410, 411, 413, 414, 415, 416, 417, 418, 421, 423, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 445, 447, 449, 452, 454, 460, 464, 467, 468, 469, 473, 478, 480, 481, 482, 483, 489, 504, 510, 517, 518, 560, 562, 563, 565], "suppos": [232, 266, 375, 382, 564, 566], "suppress": [144, 145, 149, 505], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 370, 373, 375, 386, 399, 444, 462, 473, 505, 565], "surfac": [28, 30, 35, 36, 39, 40, 45, 205, 255, 270, 323, 389, 418, 470, 476, 495], "surface_brightness_err": 468, "surprisingli": 384, "surround": [52, 315, 370], "survei": [63, 67, 124, 220, 377, 380, 390, 406, 438, 480, 485, 486, 495, 500, 505, 564], "survey_map": [438, 486, 487], "suspect": 567, "suss": [379, 396], "svg": 370, "swap": 186, "swept": 52, "swh": 396, "swhid": 396, "switch": [277, 370, 377, 380, 423, 427], "switcher": 399, "sy": [370, 405], "syllabl": 505, "symbol": 474, "symmetr": [101, 104, 108, 109, 120, 129, 131, 175, 184, 188, 227, 370, 381, 411, 423, 426, 442, 464, 472, 478, 480, 493, 503, 511, 522, 523, 567], "symmetri": [188, 411], "sync": 430, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 396, "synchrotron": [241, 417, 541], "syntact": [87, 90], "syntax": [16, 87, 90, 371, 386, 389, 415, 432, 565], "synthesi": [495, 496], "synthet": 409, "system": [11, 83, 87, 90, 142, 150, 151, 186, 187, 188, 190, 193, 195, 198, 199, 200, 218, 240, 370, 376, 381, 383, 387, 390, 391, 395, 396, 398, 403, 411, 429, 435, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 516, 517, 563, 565, 569], "systemat": [381, 394, 396, 397, 418, 444, 462, 472, 503, 564, 566], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 103, 116, 117, 118, 120, 121, 122, 123, 124, 125, 128, 129, 131, 138, 139, 144, 184, 197, 218, 232, 240, 277, 279, 280, 281, 295, 342, 346, 369, 370, 371, 373, 375, 377, 378, 380, 382, 384, 386, 387, 388, 389, 390, 393, 394, 395, 397, 400, 401, 402, 404, 406, 418, 422, 425, 426, 427, 430, 435, 439, 440, 441, 444, 449, 452, 454, 455, 458, 460, 461, 462, 465, 467, 468, 470, 472, 473, 474, 476, 477, 478, 480, 481, 493, 497, 498, 499, 501, 503, 505, 514, 552, 553, 554, 555, 556, 557, 558, 563, 564, 565, 568, 569], "t0": [225, 248, 456, 463, 464, 553, 557], "t1": [87, 90], "t2": [87, 90], "t_": [52, 53, 285, 510, 553, 554, 555, 556, 557, 558, 566], "t_0": 557, "t_b": 566, "t_decai": [231, 555], "t_delta": [102, 107, 197, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269], "t_i": 285, "t_j": 501, "t_live": [83, 88], "t_max": [217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 383, 394], "t_min": [217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 383, 394], "t_observ": [83, 88], "t_r": 232, "t_ref": [225, 229, 231, 232, 233, 248, 254, 266, 434, 435, 456, 457, 464, 476, 553, 554, 555, 556, 557, 558, 559, 560], "t_rise": [231, 555], "t_start": [86, 502], "t_stop": [52, 86, 502], "ta": 280, "ta2": 280, "ta3": 280, "tab": [144, 375, 452, 458, 462, 478, 514], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570], "table_arrai": [87, 90], "table_associ": 67, "table_bkg_src": 455, "table_class": [87, 90], "table_compon": [67, 468], "table_filenam": 26, "table_from_row_data": 435, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 468], "table_model": [268, 393], "table_oth": 340, "tableau": 505, "tableclass": [87, 90], "tablegroup": [87, 90], "tableid": [87, 90], "tableiloc": [87, 90], "tableindic": [87, 90], "tableloc": [87, 90], "tablelocindic": [87, 90], "tablemodel": [381, 431], "tablepsf": [391, 409, 411], "tablepsfcheck": 427, "tabul": 493, "tabular": [476, 550], "tackl": 379, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 187, 188, 190, 196, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 264, 265, 266, 267, 268, 395, 398, 399, 418, 432, 471, 476, 478, 524, 528], "tail": [480, 565], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 101, 104, 108, 109, 120, 142, 162, 164, 196, 198, 205, 218, 240, 255, 345, 368, 370, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 394, 400, 416, 417, 418, 421, 423, 431, 432, 434, 435, 436, 439, 441, 444, 446, 447, 456, 457, 458, 464, 465, 470, 472, 473, 474, 476, 477, 478, 480, 490, 491, 502, 505, 518, 534, 566, 567, 568], "taken": [15, 27, 87, 90, 101, 104, 108, 109, 121, 123, 147, 155, 174, 180, 182, 196, 197, 200, 205, 288, 371, 375, 379, 383, 434, 440, 444, 452, 453, 465, 471, 474, 475, 480, 491, 501, 503, 514, 515, 567], "talk": [373, 375, 377, 387, 396], "tan": [188, 195, 384, 413, 444, 473, 481, 514], "tandem": 493, "tangent": [170, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267], "tangenti": [186, 518], "tar": [400, 480], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 101, 104, 108, 109, 112, 116, 120, 122, 131, 145, 146, 157, 160, 177, 178, 182, 183, 187, 188, 190, 192, 196, 199, 200, 376, 377, 383, 396, 399, 427, 441, 446, 454, 463, 472, 474, 490], "target_nam": 514, "target_posit": [170, 441, 444, 446, 454, 462, 463, 490], "target_radec": 88, "targetmetadata": 122, "task": [318, 390, 394, 396, 397, 399, 400, 431, 445, 448, 472, 473, 481, 485, 489, 505, 513, 563, 565, 569], "task_nam": 318, "tast": 565, "tau": [26, 51, 54, 398, 467, 531], "tau_0": 51, "taul": [26, 467], "taur": [26, 467], "taylor": [52, 53], "tb00058": 138, "tbl": [87, 90], "tctypn": 456, "tcunin": 456, "tdelta_precis": 293, "team": [375, 379, 387, 390, 392, 396, 408, 429], "technic": [372, 373, 375, 383, 390, 392, 394, 396, 400, 449], "techniqu": [376, 385, 386, 388, 441, 444, 452, 455, 472, 474, 512, 515, 563], "tediou": 468, "tel": [87, 90], "telescop": [82, 83, 85, 90, 94, 103, 147, 383, 384, 397, 402, 406, 407, 456, 462, 465, 477, 480, 481, 483], "tell": 446, "temp": [425, 457], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 103, 104, 109, 113, 115, 122, 164, 172, 186, 187, 188, 190, 191, 192, 198, 199, 200, 206, 218, 232, 240, 263, 264, 265, 266, 267, 268, 274, 276, 289, 292, 375, 381, 382, 386, 393, 418, 432, 435, 436, 438, 447, 448, 450, 457, 473, 474, 475, 476, 493, 514, 517, 519, 530, 537, 540, 545, 551, 559], "template_diffus": [475, 481], "template_model": 456, "templatelightcurvetemporalmodel": 432, "templatend": [263, 264, 476], "templatendspatialmodel": [249, 476], "templatendspectralmodel": [26, 250, 423, 434, 476], "templatenpredmodel": [236, 421], "templatephasecurvetemporalmodel": [262, 432, 476, 559], "templatespatialmodel": [67, 249, 392, 393, 418, 432, 433, 435, 436, 456, 475, 476, 481, 529], "templatespectralmodel": [218, 240, 250, 272, 393, 476, 481, 501, 537, 540, 545, 550], "templatetemporalmodel": 432, "tempo2": [465, 505], "tempor": [209, 211, 217, 218, 225, 229, 231, 232, 233, 240, 248, 254, 255, 262, 266, 269, 285, 381, 383, 393, 394, 414, 416, 417, 418, 423, 432, 434, 435, 436, 438, 440, 442, 445, 447, 452, 453, 454, 456, 459, 460, 461, 468, 469, 475, 481, 485, 489, 501, 502, 505, 506, 510, 513, 517, 561, 562, 564], "temporal_model": [255, 383, 456, 457, 464, 476, 552, 553, 554, 555, 556, 557, 558, 559, 560], "temporal_model1": 464, "temporal_model2": 464, "temporal_model_map": 457, "temporal_model_registri": 476, "temporal_typ": 393, "temporalbackground": 381, "temporalmodel": [217, 225, 229, 231, 232, 233, 248, 254, 255, 266, 381, 394, 417, 432, 434, 435, 519], "temporari": 485, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381], "ten": [376, 390], "tend": [370, 524], "tension": 461, "tensorflow": [388, 390], "tent": 399, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 233, 290, 294, 373, 375, 377, 379, 380, 384, 387, 390, 395, 397, 419, 423, 432, 440, 448, 470, 471, 565, 567, 568], "termin": [87, 90, 100, 386, 401, 402, 403, 404, 405, 441, 442, 444, 445, 446, 452, 453, 454, 465, 470, 481, 489, 490, 565], "terrestri": 569, "terrier": [376, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "test": [6, 93, 100, 113, 115, 118, 120, 121, 123, 124, 125, 128, 129, 131, 137, 155, 157, 160, 187, 188, 190, 196, 199, 200, 232, 277, 278, 279, 281, 284, 327, 344, 345, 346, 347, 348, 349, 350, 371, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 395, 398, 399, 400, 410, 412, 413, 415, 417, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 435, 441, 447, 448, 457, 460, 462, 463, 464, 469, 471, 503, 505, 509, 515, 559, 560, 564, 567], "test2": 464, "test_aeff3d": 471, "test_edisp": 471, "test_events_with_gti": 502, "test_gti": 502, "test_person_txt": 370, "test_plot": 370, "test_psf": 471, "test_someth": 370, "test_using_data_fil": 349, "test_using_scipi": 350, "testcod": 371, "testoutput": 371, "testpar": 398, "teststatisticnest": 435, "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 95, 100, 101, 104, 108, 109, 110, 114, 116, 121, 123, 124, 136, 137, 141, 142, 144, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 167, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 255, 256, 258, 259, 260, 261, 264, 268, 270, 271, 295, 296, 317, 365, 371, 381, 393, 394, 397, 398, 406, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 499, 502, 503, 509, 510, 512, 514, 515, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563], "tevcat": [422, 468], "tevcat_nam": 71, "tevpi": 409, "tevtevtev1": 454, "tex": 371, "texliv": 371, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 104, 109, 121, 123, 131, 252, 253, 296, 333, 339, 359, 371, 378, 386, 396, 400, 445, 465, 471, 480, 489, 491, 522, 523, 524, 527, 528, 532, 548, 555, 565, 567], "textcolor": 359, "textkw": 359, "th": 192, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 90, 130, 145, 146, 148, 149, 152, 156, 157, 158, 160, 164, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 277, 286, 348, 363, 370, 373, 375, 376, 377, 380, 383, 384, 385, 388, 389, 394, 396, 397, 400, 429, 432, 433, 434, 436, 439, 441, 452, 453, 456, 461, 462, 463, 470, 472, 474, 477, 478, 501, 518, 523, 524, 565, 567], "thank": [394, 415, 416, 421, 423, 472, 505], "thaw": 475, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 94, 103, 107, 111, 122, 128, 132, 161, 266, 285, 317, 370, 371, 373, 375, 376, 377, 378, 379, 381, 384, 386, 387, 389, 390, 393, 394, 395, 396, 397, 398, 400, 407, 418, 421, 423, 435, 436, 441, 442, 446, 467, 469, 470, 474, 475, 476, 477, 478, 480, 483, 493, 502, 503, 505, 510, 517, 518, 563, 564, 565, 566, 567, 569], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 99, 103, 122, 209, 211, 218, 240, 297, 370, 371, 373, 375, 377, 378, 384, 386, 389, 396, 397, 399, 400, 406, 413, 429, 441, 442, 444, 447, 449, 452, 453, 455, 457, 462, 468, 469, 470, 473, 474, 476, 478, 480, 482, 485, 490, 502, 505, 514, 565, 567], "theme": [423, 430], "themselv": [87, 90, 386, 472, 474, 512], "theorem": [277, 503, 567], "theoret": 478, "therefor": [104, 376, 380, 383, 384, 385, 389, 391, 393, 403, 421, 441, 462, 465, 470, 473, 474, 477, 478, 491, 503, 567, 568], "thereof": 381, "thermal": [19, 541, 564], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 148, 154, 156, 158, 162, 170, 184, 193, 298, 301, 370, 418, 446, 481, 491, 522, 523, 527, 528], "theta2": [174, 184, 368, 429], "theta2_axi": 483, "theta2_max": 368, "theta2_min": 368, "theta2_t": 483, "theta_0": [33, 38], "theta_squared_axi": [184, 483], "thew": 468, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 99, 101, 102, 103, 104, 107, 108, 109, 112, 116, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 167, 169, 170, 171, 173, 175, 177, 178, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208, 210, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 277, 279, 281, 287, 297, 305, 315, 318, 321, 326, 327, 345, 348, 355, 357, 359, 360, 361, 365, 367, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 493, 494, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569], "thick": 367, "thin": [56, 309], "thing": [370, 373, 375, 378, 384, 385, 386, 387, 390, 394, 400, 409, 428, 446, 449, 464, 465, 474, 481], "think": [375, 387, 388, 390], "third": [62, 63, 87, 90, 371, 421, 468, 470, 473, 485, 491, 500], "thoma": [396, 429], "thorough": [473, 493], "those": [15, 83, 173, 187, 188, 190, 196, 199, 200, 205, 209, 211, 218, 240, 305, 359, 370, 373, 375, 377, 379, 384, 386, 389, 390, 391, 392, 393, 395, 400, 401, 402, 404, 405, 415, 418, 462, 470, 473, 474, 475, 477, 485, 491, 503, 505, 514, 569], "though": [15, 373, 378, 384, 385, 386, 388, 390, 445, 476, 489], "thought": [375, 384], "three": [87, 90, 155, 280, 370, 379, 382, 384, 396, 454, 456, 461, 462, 473, 478, 485, 510, 517, 564], "threshold": [67, 101, 108, 116, 121, 122, 123, 131, 136, 137, 144, 145, 149, 162, 173, 197, 277, 359, 360, 361, 384, 411, 417, 418, 439, 444, 446, 448, 454, 458, 462, 468, 469, 470, 472, 474, 480, 489, 501, 503], "threshold_alpha": 162, "through": [41, 87, 90, 296, 297, 367, 373, 375, 383, 384, 390, 394, 395, 403, 407, 421, 432, 440, 457, 461, 470, 472, 473, 474, 475, 481, 482, 505, 510, 517, 564, 567], "throughout": [13, 377, 379, 380, 384, 386, 428, 468], "throught": 458, "thrown": 476, "thu": [370, 377, 384, 387, 388, 390, 425, 439, 440, 449, 450, 454, 456, 562, 568], "thumbnail": 421, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 188, 379, 464], "tibaldo": 426, "tick": [434, 435], "tick_param": 439, "ticker": 359, "tight_layout": [470, 478, 524, 528], "tightli": 389, "tikonov": 398, "tild": [186, 198], "tile": [186, 188], "tilt": [246, 265, 381, 392, 393, 398, 410, 416, 449, 452, 453, 456, 457, 460, 469, 476, 481, 489, 490, 512, 518, 525, 545, 550], "tilt_prior": 398, "tim": 436, "time": [6, 19, 20, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 99, 100, 101, 102, 103, 104, 107, 108, 109, 121, 122, 123, 128, 131, 132, 139, 163, 169, 180, 182, 187, 188, 189, 190, 191, 196, 197, 199, 200, 205, 208, 210, 217, 220, 225, 229, 231, 232, 233, 248, 254, 255, 266, 269, 280, 285, 293, 327, 347, 351, 352, 353, 354, 370, 371, 373, 375, 376, 377, 378, 380, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 399, 400, 402, 406, 410, 411, 414, 415, 416, 418, 421, 425, 427, 428, 429, 430, 431, 432, 434, 435, 436, 440, 444, 446, 447, 448, 450, 452, 454, 455, 457, 458, 462, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 489, 490, 491, 497, 498, 499, 501, 502, 503, 505, 510, 513, 518, 523, 524, 531, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568], "time_axi": [187, 188, 190, 191, 196, 199, 200, 280, 457, 473, 518], "time_bin": 385, "time_bin_end": 385, "time_bin_s": 385, "time_bin_start": 385, "time_bound": 197, "time_box": 90, "time_column": 394, "time_delta": [86, 197, 351, 354], "time_edg": [197, 461, 473], "time_filt": 89, "time_format": [123, 197, 435, 464], "time_interv": [16, 83, 86, 88, 91, 128, 445, 449, 450, 452, 457, 462, 463, 489], "time_map_axi": [197, 473], "time_map_axis_contigu": 473, "time_max": [99, 121, 123, 197, 384, 385, 386, 457, 462, 468, 473], "time_mid": [197, 461], "time_min": [99, 121, 123, 197, 384, 385, 386, 457, 462, 468, 473], "time_rang": [90, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 457, 552, 553, 554, 555, 556, 557, 558, 559, 560], "time_ref": [83, 85, 86, 90, 93, 191], "time_ref_default": 86, "time_ref_from_dict": 569, "time_relative_to_ref": 569, "time_seri": 280, "time_start": [85, 86, 90, 385], "time_step": 385, "time_stop": [85, 86, 90, 385], "time_sum": [86, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269], "timedelta": [87, 90, 93, 197, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 327, 351, 354, 569], "timedelta64": [87, 90], "timelin": [375, 377, 429], "timemapaxi": [123, 139, 189, 191, 421, 436, 461, 463, 464], "timerangeconfig": 16, "timeref": 456, "timescal": [132, 225, 286, 395, 461], "timeseri": 385, "timesi": [93, 433, 435, 456], "timestamp": 370, "timeunit": 456, "timmer": 280, "timmer1995": 280, "tini": [454, 480], "tip": 505, "titl": [375, 458, 467], "tiziani": 427, "tke": 481, "tm": [87, 90], "tmax": 385, "tmid": [88, 435, 454, 472, 477, 490], "tmin": 385, "to_2d": [142, 483], "to_3d": [141, 434, 436], "to_bands_hdu": [185, 186, 195, 198], "to_binsz": [186, 195, 198, 421], "to_binsz_wc": 195, "to_contigu": [197, 473], "to_counts_hdulist": 106, "to_cub": [185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 418, 450, 518], "to_dict": [19, 20, 26, 98, 100, 101, 104, 108, 109, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 397, 478], "to_edisp_kernel": [149, 509], "to_edisp_kernel_map": [146, 421, 509], "to_energy_dependent_table_psf": 429, "to_even_npix": 198, "to_fits_head": 85, "to_fram": 193, "to_gti": [197, 436], "to_hdu": [187, 188, 199, 200], "to_hdulist": [101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 187, 188, 194, 195, 196, 199, 200, 473], "to_head": [84, 103, 122, 186, 189, 191, 192, 197, 198, 397], "to_html": 370, "to_imag": [101, 104, 108, 109, 144, 145, 155, 157, 160, 185, 186, 195, 198, 392, 415, 416, 439, 450, 454, 469, 481, 515, 518], "to_json": [16, 84, 103, 122], "to_map": [121, 123], "to_map_dataset": [104, 109], "to_mask": [101, 104, 108, 109, 467], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 421, 468], "to_node_typ": 192, "to_nsid": [186, 188], "to_odd_npix": 198, "to_panda": [87, 90], "to_parameters_t": [218, 240, 440, 441, 444, 445, 446, 449, 452, 470, 490], "to_pixel": [384, 444, 454, 467, 472, 476, 514, 522, 523, 524], "to_polygon": 384, "to_psf3d": [148, 156, 158], "to_python": [16, 84, 103, 122], "to_region": [214, 215, 218, 219, 227, 230, 240, 244, 252, 253, 267, 384, 415, 476, 522, 523, 524], "to_region_map_dataset": [101, 104, 108, 109, 469], "to_region_nd_map": [145, 146, 152, 157, 160, 188, 196, 200, 418, 421, 481], "to_region_nd_map_histogram": [200, 435], "to_sed_typ": 394, "to_sherpa": [415, 429, 430], "to_spectrum": 421, "to_spectrum_dataset": [99, 101, 104, 108, 109, 392, 414, 416, 465, 469, 478], "to_st": 435, "to_str": [435, 439], "to_swap": [186, 187, 188], "to_tabl": [100, 123, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 191, 192, 196, 209, 211, 232, 421, 440, 442, 444, 445, 454, 458, 460, 462, 464, 468, 476, 491, 503], "to_table_hdu": [83, 86, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 191, 192, 473], "to_table_psf": 427, "to_template_sky_model": [218, 240], "to_template_spectral_model": [218, 240, 393], "to_unit": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200], "to_wc": [187, 188], "to_wcs_geom": [186, 195, 518], "to_wcs_til": [186, 188], "to_yaml": [16, 84, 103, 122, 218, 240, 381, 397, 476, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "tob": 445, "todai": 396, "todo": [13, 79, 87, 90, 98, 155, 268, 371, 394, 412, 480, 495, 496, 569], "tof": 154, "togeth": [99, 101, 104, 108, 109, 124, 128, 218, 240, 367, 370, 383, 387, 390, 401, 413, 440, 450, 452, 453, 458, 463, 469, 470, 472, 475, 476, 477, 478, 483, 490, 501, 502, 565], "tol": 470, "toler": [86, 99, 128, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 347, 470], "tolist": 470, "tomato": 440, "toml": 418, "ton": [286, 480], "too": [370, 375, 376, 420, 421, 434, 435, 436, 470, 474], "took": 395, "tool": [6, 13, 187, 188, 190, 199, 200, 369, 373, 377, 379, 381, 383, 386, 387, 390, 396, 407, 415, 426, 429, 430, 455, 458, 464, 469, 470, 473, 477, 480, 481, 493, 505, 539, 563, 564], "toolbox": [386, 426], "top": [108, 109, 357, 366, 370, 375, 386, 390, 392, 403, 429, 446, 448, 454, 458, 461, 462, 464, 468, 472, 491, 505, 518, 563, 565, 569], "top_five_ts_3fhl": 491, "tophat2dkernel": 120, "topic": [375, 379, 390, 398, 491], "total": [51, 67, 98, 100, 101, 104, 108, 109, 124, 125, 128, 129, 135, 167, 182, 186, 206, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 294, 378, 394, 398, 402, 404, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 478, 479, 481, 484, 486, 488, 489, 490, 491, 492, 495, 501, 505, 510, 520, 530, 541, 551, 561, 564], "total_jfact": 467, "total_jfact_decai": 467, "total_model": 381, "total_obstim": 472, "total_stat": [206, 207, 440, 470, 566], "touch": [86, 410], "tour": 485, "toward": [315, 377, 384, 390, 431], "tox": [334, 371, 373, 432, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 529, 537, 540, 553], "tqdm": 505, "trace": [205, 206, 207, 418, 470], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 370], "track": [85, 93, 370, 379, 385, 396, 423, 475], "tracker": [373, 384], "tradition": [476, 566], "train": 395, "traitlet": [386, 397], "traittyp": 397, "transfer": 397, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 93, 155, 189, 191, 192, 197, 198, 218, 240, 299, 303, 326, 331, 370, 384, 386, 394, 398, 409, 411, 427, 430, 448, 454, 472, 478, 517, 522, 523, 569], "transit": [27, 360, 361, 377, 410, 411, 429, 482], "transit_map": 482, "transit_numb": 482, "transitsmap_crab": 482, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 503], "transpar": 385, "transport": 473, "transpos": 430, "trapezoid": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 273, 308], "trapz": 308, "trapz_loglog": 416, "trash": 412, "travi": [415, 417, 421], "treat": [94, 402, 434, 435, 444, 456, 568], "treatment": [421, 444, 452, 564], "trend": 456, "tri": [378, 384], "tributor": 396, "tricki": 384, "trigger": [348, 370, 399, 482], "trim": [101, 104, 145, 146, 152, 157, 160, 163, 198, 200, 265], "tripl": 148, "trivial": 377, "troubl": 565, "troubleshoot": [402, 403, 404], "trough": 461, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 92, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 120, 121, 122, 123, 124, 128, 129, 131, 135, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 167, 173, 174, 177, 178, 180, 181, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 205, 206, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 294, 297, 305, 306, 309, 327, 339, 341, 358, 363, 367, 370, 376, 383, 384, 385, 386, 393, 394, 397, 412, 416, 417, 428, 430, 431, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 481, 482, 487, 489, 490, 491, 495, 501, 503, 505, 510, 515, 517, 518, 521, 522, 523, 526, 527, 529, 550, 564, 567, 569], "truelov": 53, "truncat": [131, 315, 421], "truncation_valu": [282, 288], "trust": [16, 84, 103, 122], "trustworthi": 398, "truth": 478, "try": [16, 84, 103, 122, 187, 188, 190, 196, 199, 200, 370, 371, 380, 384, 390, 399, 400, 406, 411, 442, 444, 446, 456, 457, 462, 468, 470, 473, 491, 565], "ts2": 280, "ts3": 280, "ts_image_estim": 454, "ts_scan": [121, 123], "ts_threshold": [139, 277], "ts_threshold_ul": [465, 503], "ts_to_sigma": [455, 567], "tsimageestim": 429, "tsmap_est": 363, "tsmapestim": [117, 138, 363, 391, 394, 416, 417, 419, 421, 435, 448, 454, 505], "tstart": [88, 90, 383, 385, 447, 456, 460, 463, 464, 480], "tstop": [88, 383, 385, 447, 456, 460, 463, 480], "tt": [86, 93, 352, 353, 396, 457, 463, 569], "tth_sec3": 192, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 100, 101, 103, 104, 108, 109, 122, 126, 131, 141, 142, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 163, 168, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 265, 268, 279, 281, 284, 309, 319, 326, 370, 473, 517], "turn": [83, 88, 371, 373, 384, 480, 562], "tutori": [82, 98, 118, 128, 130, 172, 370, 373, 374, 379, 382, 383, 384, 385, 386, 387, 388, 391, 400, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 427, 428, 429, 430, 431, 432, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 505, 506, 508, 517, 562, 565], "tutorials_jupyt": [399, 485], "tutorials_python": 485, "tweak": [386, 421, 473], "twice": [120, 517, 568], "twinx": 439, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 86, 87, 89, 90, 100, 101, 104, 108, 109, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 156, 158, 159, 163, 168, 170, 186, 187, 188, 189, 190, 192, 195, 196, 198, 199, 200, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 327, 337, 359, 364, 367, 369, 370, 371, 373, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 394, 395, 396, 398, 399, 400, 402, 423, 429, 431, 435, 445, 446, 452, 453, 455, 458, 464, 468, 469, 470, 471, 473, 474, 476, 477, 478, 480, 482, 489, 490, 495, 501, 502, 503, 505, 514, 517, 518, 533, 567, 568], "txt": [123, 395, 397, 475, 481], "tyler": 423, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 95, 98, 99, 100, 101, 103, 112, 120, 121, 122, 123, 125, 131, 161, 167, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 297, 327, 376, 379, 380, 381, 382, 384, 385, 386, 389, 393, 394, 396, 398, 400, 401, 406, 414, 421, 427, 428, 429, 435, 440, 441, 442, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 489, 490, 491, 493, 503, 505, 517, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564, 565], "typeerror": [16, 84, 103, 122, 297, 384, 394, 398], "typic": [121, 376, 379, 381, 388, 392, 393, 394, 395, 397, 402, 403, 441, 446, 450, 458, 460, 462, 463, 468, 469, 471, 474, 476, 477, 493, 500, 501, 502, 510, 514, 563, 564], "typing_extens": [16, 84, 103, 122], "typo": [370, 407, 433, 434], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 90, 95, 101, 104, 108, 109, 113, 115, 116, 121, 123, 125, 127, 131, 136, 137, 144, 146, 155, 185, 186, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 232, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 270, 271, 280, 295, 296, 297, 317, 365, 370, 373, 377, 378, 379, 385, 386, 387, 388, 393, 394, 397, 398, 410, 411, 412, 429, 430, 431, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 495, 502, 503, 505, 507, 512, 514, 515, 518, 522, 524, 525, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559], "u03c3": 455, "u18": [33, 38], "ubzyqn1i": 476, "uc": [87, 90], "ufunc": [187, 188, 190, 196, 199, 200, 446], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 116, 124, 147, 237, 270, 271, 280, 287], "ul": [67, 120, 121, 123, 124, 125, 128, 129, 131, 278, 453, 458, 464, 468], "ultim": 370, "un": [382, 396, 418, 475], "unambigu": 476, "unbehaun": 436, "unbin": [382, 383, 430], "unboundlocalerror": 370, "uncertaint": 388, "uncertainti": [52, 101, 104, 108, 109, 279, 281, 374, 387, 428, 442, 444, 465, 470, 478, 490, 563, 564, 566], "unchang": [101, 104, 108, 109, 113, 115, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 429], "unclear": [370, 380, 381, 387, 397], "uncom": [386, 480], "undefin": 568, "under": [72, 90, 138, 370, 374, 379, 387, 396, 430, 431, 440, 445, 485, 489, 501, 567, 568], "underestim": 503, "underflow": 197, "underli": [87, 90, 195, 383, 442, 468, 473, 478, 491, 493, 502, 514, 517], "underscor": 370, "understand": [386, 407, 415, 416, 441, 444, 445, 446, 449, 456, 457, 461, 463, 464, 473, 474, 475, 480, 489, 490, 493, 565], "undertak": 390, "unexpect": 482, "unfold": 564, "unfreez": [19, 20, 26, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 541], "unfreeze_al": [209, 211, 475], "unfrozen": 512, "unheard": 565, "uni": 398, "uni_prior_stat_sum": 478, "unicod": [87, 90, 370], "unid": 67, "unidimension": 191, "unif": 415, "unifi": [87, 90, 374, 379, 384, 410, 413, 415, 416, 417, 418, 421, 430, 431, 564], "uniform": [155, 205, 326, 370, 379, 381, 382, 392, 394, 398, 412, 413, 417, 421, 441, 473, 478, 563], "uniform_filt": [126, 200], "uniformli": [383, 503], "uniformprior": [398, 478], "uninstal": 369, "union": [84, 86, 89, 101, 103, 104, 122, 195, 332, 384, 385, 396, 397, 413, 501], "uniqu": [87, 90, 99, 144, 186, 187, 188, 189, 190, 196, 198, 199, 200, 209, 211, 218, 226, 240, 255, 265, 363, 380, 381, 382, 383, 393, 396, 416, 445, 469, 476, 482, 518, 562], "unique_id": 476, "unique_paramet": [209, 211], "uniquifi": [87, 90], "unit": [6, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 90, 95, 100, 101, 104, 106, 108, 109, 110, 113, 114, 115, 116, 121, 123, 125, 127, 131, 136, 137, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 167, 170, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 208, 210, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 280, 295, 296, 297, 327, 341, 342, 343, 345, 354, 355, 356, 359, 360, 361, 365, 371, 379, 381, 384, 386, 388, 393, 394, 398, 410, 411, 413, 421, 423, 429, 430, 432, 433, 434, 435, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 495, 497, 498, 499, 502, 503, 505, 507, 509, 510, 512, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564], "unit_string_format": [435, 439], "unitbas": 297, "uniti": [126, 189, 267, 433, 524], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 226, 265], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [439, 447, 449, 452, 454, 460, 464, 480], "univers": [187, 188, 190, 196, 199, 200, 564], "univsers": 20, "unknown": [100, 281, 448, 470, 564, 566, 567], "unless": [92, 94, 124, 125, 128, 131, 163, 297, 369, 376, 395, 397, 471], "unlik": [87, 90, 277, 377, 388], "unmaintain": 411, "unmask": [87, 90], "unnam": [87, 90, 193], "unnecessari": [421, 432, 452], "unneed": 435, "unphys": 568, "unqg0t7c": 472, "unrealist": 370, "unrel": 569, "unreli": 480, "unsaf": 370, "unstabl": [370, 480], "unsupport": 387, "untar": 480, "until": [370, 373, 377, 384, 395, 428], "unus": [386, 413, 415], "unusu": 375, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 100, 125, 127, 131, 148, 154, 156, 158, 195, 297, 370, 371, 374, 375, 377, 378, 379, 382, 384, 386, 387, 388, 390, 392, 396, 398, 400, 401, 402, 404, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 427, 428, 429, 430, 431, 444, 445, 452, 455, 456, 478, 480, 481, 518, 565], "upcast": 297, "upcom": [378, 379], "updat": [15, 16, 84, 87, 90, 102, 103, 107, 122, 194, 208, 210, 218, 240, 267, 277, 317, 337, 370, 373, 375, 376, 377, 378, 379, 382, 387, 392, 394, 396, 397, 399, 400, 402, 403, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 427, 428, 429, 430, 432, 435, 436, 473, 476, 516, 517, 569], "update_config": 15, "update_forward_ref": [16, 84, 103, 122], "update_from_dict": [208, 210], "update_link_label": [218, 240], "update_parameters_from_t": [218, 240], "upgrad": [186, 369, 395, 403], "upload": [387, 399, 480], "upon": [101, 104, 108, 109, 379, 449, 475, 480, 501], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 100, 120, 121, 122, 123, 124, 125, 128, 129, 131, 144, 192, 197, 205, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 278, 279, 281, 397, 406, 417, 421, 428, 429, 430, 436, 444, 458, 462, 469, 472, 489, 501, 503], "upper_error": 123, "upsampl": [157, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 412, 432], "upsample_geom": 157, "upstream": [370, 373], "upt17qgg": 452, "upward": [279, 281], "url": 378, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 278, 280, 282, 293, 295, 297, 305, 308, 309, 310, 317, 318, 321, 326, 327, 334, 337, 353, 354, 356, 357, 359, 360, 361, 363, 364, 365, 366, 367, 369, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 402, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 452, 453, 454, 457, 458, 460, 461, 463, 464, 465, 467, 468, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 491, 494, 495, 505, 507, 508, 509, 511, 515, 516, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 569, 570], "usabl": 370, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 103, 118, 122, 128, 130, 172, 185, 186, 195, 198, 321, 376, 380, 381, 383, 385, 389, 394, 414, 435, 436, 468, 472, 474, 475, 565], "use_cach": 241, "use_center_as_plot_label": 192, "use_enum_valu": [16, 84, 103, 122], "use_evaluation_region": [218, 240], "use_fft": 200, "use_local_fil": [87, 90], "use_nullable_int": [87, 90], "use_region_cent": [167, 174, 177, 178, 180, 181, 421, 441], "useless": 480, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 88, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 370, 371, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 399, 400, 401, 402, 403, 407, 414, 421, 422, 428, 429, 430, 432, 445, 455, 456, 457, 469, 471, 473, 474, 475, 476, 477, 485, 489, 502, 503, 504, 505, 510, 514, 517, 520, 526, 530, 551, 561, 562, 565], "userdataset": 382, "usernam": 373, "userwarn": [444, 446, 453, 454, 458, 481], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 565, "usual": [29, 82, 83, 121, 136, 141, 142, 143, 155, 196, 305, 370, 371, 373, 375, 376, 377, 378, 384, 385, 390, 396, 400, 435, 439, 440, 441, 442, 444, 446, 447, 449, 450, 454, 456, 457, 460, 461, 462, 463, 464, 467, 469, 474, 477, 482, 490, 493, 501, 505, 507, 508, 509, 511, 514, 518, 523, 562, 564, 565, 566], "ut1": 569, "utc": [86, 88, 103, 122, 351, 456, 462, 463, 473, 476, 552, 553, 554, 555, 556, 557, 558, 559, 560, 569], "utf": [87, 90], "utf8": [16, 84, 103, 122], "util": [6, 95, 103, 110, 113, 114, 115, 122, 123, 125, 132, 133, 134, 135, 136, 137, 138, 139, 140, 146, 176, 177, 178, 179, 180, 181, 182, 183, 184, 276, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 370, 379, 381, 382, 383, 384, 394, 409, 412, 413, 414, 415, 422, 423, 426, 427, 428, 429, 430, 431, 435, 436, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 493, 494, 505, 564], "utilis": [83, 137, 371, 439, 444, 448, 455, 461, 473, 477, 490, 502, 505, 512], "v": [26, 31, 32, 37, 87, 90, 148, 154, 156, 157, 158, 160, 169, 176, 194, 266, 277, 301, 373, 378, 385, 386, 397, 398, 399, 400, 423, 439, 462, 467, 477, 489], "v0": [94, 377, 378, 381, 382, 384, 387, 389, 390, 395, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 430, 431, 432, 456, 457, 471, 475], "v1": [13, 16, 83, 84, 88, 103, 122, 370, 377, 379, 381, 386, 387, 388, 389, 395, 396, 399, 402, 404, 415, 416, 417, 423, 428, 432, 433, 434, 435, 436, 537, 540], "v2": [396, 397, 421, 429, 436, 480], "v3": 413, "v_0": [37, 49], "v_glat": 304, "v_glon": 304, "va": 522, "vagu": 375, "vain": 373, "val": [87, 90, 187, 188, 190, 196, 199, 200, 209, 211, 473, 517], "valfmt": 359, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 103, 105, 121, 122, 125, 138, 159, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 297, 315, 369, 370, 379, 383, 386, 387, 396, 415, 423, 432, 441, 444, 470, 472, 473, 476, 481, 503, 505, 510, 564], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "validate_al": 397, "validate_assign": [16, 84, 103, 122, 397], "validate_default": [16, 84, 103, 122], "validate_loc": 397, "validate_zenith_angl": 397, "validationerror": [16, 84, 103, 122, 397], "valle": 38, "valleespir": 495, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 94, 98, 99, 100, 101, 103, 104, 108, 109, 111, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 163, 167, 173, 174, 176, 177, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 277, 278, 279, 281, 282, 284, 285, 286, 297, 301, 309, 310, 324, 327, 337, 341, 356, 359, 360, 361, 371, 373, 376, 381, 382, 384, 386, 388, 390, 393, 394, 397, 412, 415, 421, 432, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 480, 481, 482, 483, 489, 490, 491, 493, 497, 498, 499, 503, 505, 509, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 565, 566, 567, 568], "value_rang": 90, "value_scan": 278, "valueerror": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 87, 90, 91, 99, 103, 122, 218, 240, 370, 384, 397], "values_equ": [87, 90], "values_err": 465, "values_scal": [141, 142, 143, 196, 200, 232, 263, 267, 268, 309, 433, 435, 457, 471], "vanilla": [87, 90], "var": [287, 402, 404], "vari": [68, 102, 107, 128, 155, 205, 309, 337, 382, 384, 385, 395, 415, 418, 438, 440, 449, 454, 455, 457, 466, 472, 476, 478, 481, 485, 501, 503, 510, 513, 562], "variability_amplitud": 461, "variability_amplitude_100": 461, "variability_amplitude_error": 461, "variability_amplitude_signific": 461, "variability_estim": [438, 461, 466], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 103, 122, 132, 200, 279, 281, 284, 285, 286, 287, 293, 308, 335, 370, 371, 373, 383, 385, 386, 400, 402, 404, 410, 411, 427, 428, 429, 435, 436, 438, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 485, 489, 490, 491, 510, 565, 566, 567], "varianc": [95, 133, 134, 286, 287, 296, 385, 436, 477, 512], "variant": 400, "variat": [132, 233, 286, 376, 386, 439, 461, 471, 472, 515, 567], "varieti": [381, 563], "variou": [118, 124, 125, 128, 129, 131, 137, 370, 376, 380, 382, 385, 394, 397, 400, 402, 421, 422, 436, 440, 442, 445, 448, 453, 455, 462, 470, 489, 501, 505, 563, 569], "vast": [387, 423], "vaughan": [287, 461], "vaughan2003": 287, "ve": [370, 371, 373, 565], "vector": [185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 473, 509, 517], "vega": 430, "vel": 465, "vel_di": [45, 495], "vela": [66, 409, 442, 465, 491], "veloc": [31, 32, 37, 45, 49, 301, 304], "ver": 473, "verbos": [11, 82, 371, 393, 565, 567], "veri": [63, 87, 90, 136, 205, 360, 369, 370, 371, 372, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 397, 400, 431, 439, 440, 447, 461, 468, 470, 473, 478, 481, 491, 501, 505, 518, 527, 528, 562, 564, 565, 566], "verif": [99, 218, 240, 333, 336, 453, 481], "verifi": [209, 211, 230, 277, 370, 383, 468, 505], "verifywarn": 505, "verita": [96, 402, 407, 481], "versa": 186, "version": [11, 78, 83, 85, 87, 88, 90, 123, 124, 125, 128, 175, 208, 210, 369, 371, 373, 374, 377, 378, 379, 380, 384, 387, 390, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 414, 415, 420, 422, 423, 425, 428, 429, 430, 432, 433, 435, 436, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 503, 565], "versu": [141, 147, 277, 279, 281, 480, 499], "vert": 247, "vertex": 384, "vhe": [441, 493], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 90, 102, 107, 188, 193, 203, 369, 371, 373, 378, 382, 384, 385, 386, 387, 388, 389, 391, 393, 396, 397, 398, 399, 400, 402, 403, 410, 418, 426, 428, 429, 430, 434, 435, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 487, 489, 490, 491, 505, 509, 514, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 565, 569], "viabil": 397, "vice": 186, "victor": 425, "view": [83, 87, 90, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 156, 158, 159, 164, 187, 188, 190, 194, 196, 199, 200, 226, 299, 303, 357, 370, 384, 411, 416, 421, 423, 430, 431, 444, 446, 450, 452, 456, 469, 471, 472, 474, 480, 481, 505, 507, 508, 509, 510, 511, 512, 514, 564], "vika": 421, "vin\u00edciu": 428, "viridi": [446, 467], "virtual": [373, 400, 402, 403, 404, 565], "visibl": [87, 90, 360, 361, 378, 421, 439, 456, 482, 490, 491, 564], "vision": 375, "visit": 457, "visual": [6, 188, 200, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 384, 416, 417, 435, 436, 444, 446, 450, 452, 454, 457, 470, 471, 477, 482, 483, 490, 491, 505, 514, 519, 522, 563], "visualis": [367, 382, 384, 391, 417, 432, 446, 448, 471, 476, 478, 480, 505], "vline": [499, 522, 523], "vmax": [101, 104, 108, 109, 360, 361, 449, 452, 454, 460, 469, 473, 474, 481, 482, 489, 490, 514], "vmin": [101, 104, 108, 109, 360, 361, 448, 452, 460, 469, 473, 474, 481, 482, 489, 490, 514], "volum": [27, 191, 195, 198], "vorokh": [426, 427], "voruganti": [428, 429], "vstack": [83, 86, 383], "vuillaum": [396, 429], "vx": [301, 304, 395], "vy": [301, 304], "vz": [301, 304], "w": [26, 31, 49, 86, 184, 197, 294, 371, 395, 448, 450, 458, 467, 472, 476, 478, 514, 566, 568], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 92, 93, 101, 103, 116, 122, 124, 125, 128, 131, 163, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 363, 370, 373, 375, 376, 377, 378, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 410, 413, 414, 415, 416, 417, 418, 425, 429, 430, 431, 432, 433, 434, 435, 440, 442, 444, 450, 452, 454, 472, 478, 480, 481, 482, 483, 491, 565], "wagner": 461, "wai": [33, 38, 83, 87, 90, 192, 280, 321, 327, 369, 370, 371, 373, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 390, 391, 394, 396, 402, 403, 404, 406, 409, 413, 429, 430, 442, 444, 446, 449, 452, 461, 468, 469, 470, 472, 473, 474, 475, 477, 480, 481, 482, 483, 485, 495, 502, 504, 505, 509, 518, 563, 565, 567], "wait": [370, 399, 400], "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 103, 106, 122, 144, 170, 195, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 370, 372, 373, 375, 376, 377, 380, 384, 385, 386, 388, 389, 390, 400, 401, 402, 403, 404, 406, 407, 410, 430, 441, 444, 445, 446, 447, 449, 456, 457, 460, 462, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 489, 490, 491, 509, 562, 565, 566, 567, 568, 569], "ward": 295, "warn": [11, 16, 26, 82, 84, 87, 90, 103, 122, 188, 208, 209, 210, 211, 263, 264, 265, 267, 356, 395, 400, 412, 429, 434, 435, 436, 439, 447, 448, 449, 452, 453, 454, 456, 457, 460, 464, 465, 480, 481, 505, 529, 537, 540, 565], "warn_miss": 87, "warn_with_traceback": 370, "wasn": [377, 430], "watch": [481, 569], "water": [402, 482], "watson": 411, "wavelength": 389, "wavelet": [409, 427], "wbnmybt": 472, "wc": [13, 16, 83, 101, 104, 108, 125, 162, 170, 171, 175, 186, 187, 188, 190, 195, 196, 198, 199, 200, 215, 218, 219, 227, 230, 240, 242, 252, 253, 257, 263, 267, 330, 365, 370, 376, 384, 389, 411, 412, 413, 415, 421, 429, 430, 434, 436, 444, 445, 448, 449, 450, 452, 454, 458, 462, 465, 467, 469, 471, 472, 474, 475, 476, 481, 489, 490, 491, 514, 517, 522, 523, 524, 529], "wcda": [57, 70], "wcs_geom": [195, 218, 240, 473, 518], "wcs_geom_3d": 473, "wcs_geom_cel": 473, "wcs_map": [199, 200, 363], "wcs_tile": [186, 188], "wcsax": [101, 104, 108, 109, 188, 195, 196, 200, 218, 240, 365, 367, 452, 473, 491, 521, 525, 526, 527], "wcsconfig": 16, "wcsgeom": [23, 83, 101, 104, 108, 109, 110, 112, 114, 120, 121, 131, 146, 155, 157, 167, 180, 181, 185, 186, 195, 199, 200, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 371, 376, 384, 411, 414, 415, 416, 421, 434, 436, 444, 449, 454, 456, 457, 458, 460, 465, 467, 469, 471, 472, 473, 474, 476, 481, 482, 483, 490, 491, 501, 503, 512, 514, 515, 518, 521, 523, 524, 525, 526], "wcslib": 370, "wcsmap": [187, 188, 190, 200, 432], "wcsndmap": [101, 104, 110, 114, 116, 131, 136, 155, 157, 160, 162, 164, 169, 170, 171, 172, 175, 180, 181, 186, 187, 188, 190, 196, 198, 199, 201, 202, 218, 240, 255, 263, 357, 363, 365, 376, 414, 415, 416, 418, 421, 423, 430, 432, 435, 436, 448, 449, 458, 467, 469, 472, 473, 481, 491, 501, 503, 511, 514], "wcsprm": 529, "wcsshape": 473, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 90, 94, 100, 131, 169, 195, 198, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 271, 345, 370, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 396, 397, 399, 400, 401, 402, 403, 404, 406, 409, 410, 411, 412, 417, 421, 423, 428, 429, 430, 431, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 487, 489, 490, 491, 502, 509, 510, 512, 514, 517, 528, 531, 541, 562, 565, 566, 567, 568, 569], "weak": [389, 478], "weaker": 277, "weakli": 474, "web": [87, 90, 378, 396, 399, 400, 406, 407, 421, 429, 468], "webpag": [372, 378, 390, 396, 399, 429, 432], "wedg": 384, "week": [373, 378, 388, 390, 395, 399], "weekli": [376, 379, 383, 384, 462], "wegen": [429, 430], "weigh": [157, 160, 478], "weight": [67, 145, 146, 152, 155, 157, 160, 186, 187, 188, 190, 195, 196, 198, 199, 200, 265, 398, 431, 435, 455, 478, 501, 517], "weighted_chi2_paramet": 455, "weighted_kernel": 155, "welcom": [375, 384, 481], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 90, 104, 109, 113, 115, 120, 121, 129, 186, 190, 192, 196, 198, 208, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 360, 361, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 402, 403, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 429, 430, 431, 435, 436, 440, 441, 447, 450, 455, 457, 462, 464, 469, 470, 471, 472, 473, 474, 476, 480, 481, 485, 489, 490, 491, 501, 502, 503, 514, 517, 518, 562, 563, 565, 567], "went": 410, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 132, 285, 370, 375, 376, 377, 378, 383, 385, 386, 387, 388, 389, 390, 391, 393, 395, 398, 400, 410, 413, 414, 415, 416, 417, 418, 421, 424, 429, 430, 433, 453, 465, 474, 478, 480, 568], "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 271, 327, 371, 376, 384, 387, 389, 390, 397, 400, 408, 458, 467, 468, 470, 480, 481, 485, 490, 493, 501, 518, 550, 565, 566, 569], "whatev": [384, 386, 387, 565], "whatsnew": 399, "wheel": 387, "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 120, 121, 122, 123, 135, 145, 146, 152, 157, 159, 160, 170, 173, 187, 188, 190, 192, 194, 196, 199, 200, 205, 206, 212, 213, 216, 218, 220, 222, 223, 224, 228, 232, 234, 235, 237, 240, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 267, 268, 309, 369, 370, 371, 373, 375, 376, 377, 380, 382, 384, 385, 387, 390, 395, 396, 397, 398, 403, 415, 423, 424, 429, 431, 434, 435, 436, 440, 446, 450, 454, 457, 458, 462, 463, 465, 468, 470, 472, 473, 476, 477, 480, 481, 501, 503, 505, 510, 512, 516, 517, 564, 566, 567, 568, 569], "whenev": [87, 90], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 103, 121, 122, 123, 126, 131, 144, 145, 146, 152, 157, 160, 162, 173, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 201, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 282, 285, 288, 289, 297, 334, 371, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 400, 402, 404, 406, 412, 424, 430, 439, 444, 449, 456, 457, 468, 472, 473, 474, 476, 478, 480, 481, 482, 491, 493, 501, 502, 505, 510, 517, 522, 523, 524, 527, 528, 531, 564, 565, 566, 567, 568, 569], "wherea": [376, 384, 387, 565], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 99, 101, 103, 104, 106, 108, 109, 121, 122, 123, 124, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 173, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 208, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 280, 297, 306, 333, 336, 338, 339, 367, 375, 377, 384, 387, 389, 390, 397, 435, 447, 460, 472, 473, 491, 517, 566, 567], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 99, 100, 101, 103, 104, 106, 108, 109, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 136, 137, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 167, 168, 173, 174, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 205, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 271, 277, 279, 280, 281, 285, 286, 287, 293, 295, 309, 319, 329, 330, 348, 357, 359, 364, 366, 369, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 405, 407, 411, 412, 413, 415, 416, 417, 418, 421, 424, 430, 432, 435, 439, 440, 441, 444, 447, 448, 449, 450, 452, 455, 456, 457, 458, 461, 462, 464, 465, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 489, 490, 491, 495, 496, 501, 502, 503, 505, 507, 508, 509, 511, 512, 514, 516, 517, 518, 519, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 562, 563, 564, 565, 566, 567, 568], "whichev": [186, 187, 188], "while": [87, 90, 104, 187, 188, 190, 192, 196, 199, 200, 370, 373, 375, 376, 377, 379, 382, 383, 385, 389, 391, 392, 394, 395, 396, 399, 400, 402, 439, 444, 446, 449, 457, 464, 465, 469, 471, 472, 473, 475, 476, 501, 503, 505, 516, 518, 565], "whilst": [371, 477, 485], "whippl": 96, "whirlwind": 485, "white": [286, 359, 360, 454, 465, 470, 475, 493, 518], "whitespac": 315, "who": [396, 467, 493], "whole": [94, 116, 164, 167, 174, 177, 178, 180, 181, 186, 187, 188, 190, 199, 200, 241, 270, 279, 281, 370, 376, 382, 385, 396, 441, 444, 452, 457, 462, 465, 469, 476, 481, 483, 562], "whose": [396, 400, 457, 511, 523], "why": [370, 371, 375, 377, 384, 470, 518], "wide": [377, 396, 397, 411, 430, 442, 453, 564], "wider": [463, 474, 512], "widget": [187, 188, 190, 196, 199, 200, 452, 460, 473, 489, 490], "width": [16, 27, 68, 83, 87, 90, 101, 104, 108, 109, 110, 111, 113, 114, 115, 116, 126, 131, 144, 145, 146, 149, 152, 155, 157, 160, 162, 167, 172, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 215, 218, 219, 227, 229, 230, 240, 242, 252, 253, 255, 257, 263, 265, 267, 360, 361, 386, 393, 431, 445, 446, 449, 450, 452, 454, 455, 456, 457, 458, 460, 462, 465, 467, 468, 469, 471, 472, 473, 474, 476, 481, 482, 489, 490, 491, 512, 514, 515, 516, 517, 518, 522, 523, 524, 526, 527, 528], "width_err": 468, "width_error": 68, "width_min": 195, "width_pix": [186, 187, 188], "widthconfig": 16, "wiki": [34, 83, 88, 421, 480], "wikipedia": [34, 83, 88, 326, 384, 388], "wilei": 138, "wilk": [277, 503, 567], "willing": 373, "wind": [50, 450, 455, 476, 496], "window": [111, 369, 370, 377, 387, 400, 401, 402, 404, 410, 426, 430, 448, 468, 564, 565, 567], "wise": [19, 20, 26, 87, 90, 136, 137, 188, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 398, 423, 450, 452, 501], "wish": [195, 373, 388, 455, 470], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [380, 381, 382, 385, 392, 394], "withdrawn": [374, 375, 380, 381, 382, 385, 392, 394], "within": [124, 127, 136, 186, 200, 217, 218, 219, 225, 229, 230, 231, 232, 233, 240, 248, 252, 254, 255, 266, 269, 369, 370, 371, 375, 379, 384, 386, 387, 388, 389, 390, 393, 395, 396, 398, 400, 401, 402, 404, 424, 427, 429, 433, 435, 445, 446, 452, 455, 462, 463, 464, 468, 471, 472, 473, 476, 477, 481, 485, 491, 501, 504, 505, 564], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 128, 147, 185, 186, 191, 195, 198, 367, 370, 373, 375, 378, 380, 384, 385, 386, 387, 389, 394, 400, 411, 412, 416, 445, 448, 452, 453, 467, 472, 473, 474, 489, 505, 516, 517, 518, 560, 565, 567], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 467], "wo": 465, "wobbl": [94, 464, 480], "wobbleregionfind": 423, "wobbleregionsfind": 446, "wolfram": [324, 325], "women": 426, "won": [87, 90, 116, 120, 124, 128, 131, 342, 395, 452, 473, 480, 568], "wong": 413, "wood": [377, 427, 429, 430], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 505], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 99, 123, 197, 334, 369, 370, 371, 373, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 422, 425, 426, 427, 428, 429, 430, 431, 432, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491, 501, 505, 515, 517, 529, 531, 537, 540, 553, 559, 560, 565], "workaround": 387, "workflow": [373, 378, 379, 386, 391, 395, 400, 415, 445, 450, 485, 489, 490, 506], "workshop": 379, "workspac": 373, "world": [83, 198, 218, 240, 370, 376, 454, 491, 517], "worst": 373, "worth": [370, 493], "would": [16, 84, 87, 90, 94, 103, 122, 187, 188, 190, 196, 199, 200, 370, 373, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 397, 412, 421, 442, 444, 447, 448, 460, 470, 473, 474, 476, 478, 481, 518], "wouldn": 384, "wp": [399, 480], "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 192, 251, 305, 384, 414], "wrap_at": 381, "wrap_coord": 192, "wrapper": [56, 241, 251, 309, 384, 385, 412, 415, 493, 505], "write": [11, 15, 16, 26, 82, 83, 86, 87, 88, 90, 99, 100, 101, 104, 106, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 187, 188, 190, 194, 196, 199, 200, 206, 218, 232, 240, 263, 264, 265, 266, 267, 339, 348, 371, 373, 379, 380, 381, 382, 383, 384, 386, 387, 389, 390, 392, 393, 394, 396, 397, 398, 400, 406, 409, 415, 418, 423, 425, 428, 429, 430, 431, 436, 439, 444, 452, 453, 456, 458, 471, 475, 476, 480, 481, 487, 489, 490, 505, 510, 566, 568], "write_arf": 106, "write_bkg": 106, "write_covari": [15, 99, 206, 218, 240], "write_dataset": 15, "write_ds9": 476, "write_model": 15, "write_pha": 106, "write_rmf": 106, "writeabl": 398, "writer": [87, 90, 390, 397], "writeto": [86, 141, 142, 143, 147, 148, 149, 151, 154, 156, 158, 159, 456], "written": [83, 88, 99, 100, 101, 104, 106, 108, 109, 121, 123, 145, 146, 152, 157, 160, 187, 188, 190, 194, 196, 199, 200, 202, 370, 371, 373, 375, 379, 380, 390, 396, 398, 433, 439, 457, 475, 478, 493, 501, 502, 505, 518, 564, 569], "wrong": [370, 419, 433, 434, 435], "wrote": 396, "wrt": [83, 157, 160, 370, 388, 464, 560], "wstat": [104, 109, 290, 291, 382, 409, 427, 428, 440, 444, 445, 447, 450, 454, 465, 469, 478, 501, 564], "wstatcountsstatist": [465, 567], "wt": [26, 467], "wun": 413, "www": [26, 67, 87, 90, 138, 390, 480, 505], "wyatt": [409, 564], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 90, 101, 108, 126, 136, 137, 138, 142, 192, 196, 197, 205, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 280, 286, 287, 289, 300, 301, 302, 304, 308, 310, 315, 324, 359, 362, 363, 370, 371, 375, 377, 378, 379, 384, 395, 399, 442, 447, 448, 454, 457, 461, 465, 468, 470, 471, 473, 478, 481, 491, 499, 505, 522, 523, 565, 567], "x27": 471, "x86_64": [439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "x_": 126, "x_0": [187, 188, 190, 196, 199, 200], "x_1": 309, "x_2": 309, "x_3": 309, "x_bkg": 465, "x_edg": 127, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [187, 188, 190, 196, 199, 200], "x_j": 126, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [126, 322, 324, 458], "x_min": [126, 322, 324, 458], "x_n": [187, 188, 190, 196, 199, 200], "x_r_0": 230, "x_ref": [126, 458], "x_sigma": 227, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [205, 470], "xarg": 370, "xaxi": 505, "xerr": [439, 478], "xf": 480, "xfail": 370, "xlabel": [371, 435, 450, 464, 478, 481, 497, 498, 499, 522, 559], "xlim": [357, 452, 478, 481, 499], "xmax": [17, 18, 21, 22, 24, 25, 27, 196, 398], "xmin": [17, 18, 21, 22, 24, 25, 27, 196, 398], "xml": [379, 380, 381, 414, 428, 430, 480, 493], "xmltodict": [422, 480], "xref": 126, "xspec": [220, 268, 294, 428, 440, 566], "xunit": [446, 531], "xviii": 390, "xx": [381, 396], "xxx": [87, 90, 375, 396], "xxx_by_coord": 473, "xxxx": 505, "xy": [444, 454, 458, 522], "xy_posit": [33, 34, 38], "xytext": 522, "xyz": 399, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 90, 136, 137, 142, 192, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 300, 301, 302, 304, 308, 310, 362, 370, 384, 395, 435, 439, 440, 448, 454, 457, 470, 478, 499, 505], "y2f9vpby": 447, "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [205, 470], "yaml": [11, 15, 16, 20, 26, 84, 98, 99, 100, 101, 103, 104, 108, 109, 121, 122, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 333, 336, 338, 339, 369, 378, 379, 381, 382, 383, 386, 387, 392, 397, 398, 400, 401, 413, 414, 415, 418, 423, 432, 436, 439, 441, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 490, 491, 504, 562, 563, 564, 565], "yaml_str": [218, 240, 445], "yaxi": [442, 505], "ye": 400, "year": [45, 61, 65, 78, 370, 375, 377, 378, 380, 387, 390, 391, 395, 397, 400, 427, 429, 430, 453, 455, 468, 480, 497, 498, 499, 500], "yearli": [403, 428], "yellow": 360, "yerr": 465, "yet": [89, 369, 370, 373, 375, 377, 384, 387, 390, 391, 437, 442, 445, 489, 569], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 91, 187, 188, 190, 196, 199, 200, 334, 377, 383, 384, 389, 391, 393, 398, 474, 566, 567, 568], "yk04": [45, 48], "yk04b": 48, "ylabel": [371, 464, 478, 481, 497, 498, 499, 522, 559], "ylim": [357, 440, 450, 478, 481, 497, 499, 538, 547, 548, 549], "ymax": [522, 523], "ymin": [522, 523], "yml": [373, 387, 399, 400, 401, 402, 404, 429], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 93, 100, 103, 106, 122, 123, 136, 142, 144, 147, 170, 187, 188, 190, 196, 199, 200, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 270, 277, 369, 370, 371, 372, 373, 375, 377, 380, 384, 387, 388, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 421, 429, 430, 431, 440, 441, 442, 444, 445, 446, 447, 449, 450, 452, 454, 456, 457, 460, 463, 464, 465, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 485, 489, 490, 491, 501, 502, 505, 508, 512, 516, 539, 562, 565, 566, 567, 568, 569], "your": [16, 19, 20, 26, 84, 98, 103, 122, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 369, 370, 371, 373, 375, 377, 400, 401, 402, 403, 404, 406, 407, 410, 411, 412, 415, 416, 421, 430, 431, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 491, 500, 505, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 567], "yourself": [565, 566], "yr": [45, 52, 53, 495, 497, 498, 499], "yscale": [450, 557], "yt": 370, "yu": 413, "yunit": [444, 446, 467, 468, 481, 542], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 429, "yy": 396, "yyyi": 396, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 90, 300, 301, 304, 395, 396, 467, 495, 531], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 425, "zanin": [429, 430], "zd": 83, "zen": 477, "zen_pnt": 477, "zenith": [439, 453, 477, 480, 481, 482, 510], "zenith_angl": [83, 397, 481, 491], "zenodo": [396, 423], "zero": [52, 53, 67, 87, 90, 99, 101, 104, 108, 109, 131, 136, 144, 145, 146, 149, 152, 157, 173, 187, 188, 190, 196, 199, 200, 244, 265, 267, 268, 309, 315, 327, 370, 414, 417, 432, 468, 472, 473, 478, 568], "zhao": [27, 436], "zhen": 138, "zip": [385, 398, 399, 444, 463, 467, 470, 475, 485, 499, 519, 524, 528, 541], "zl": [26, 467], "zoapl": 440, "zone": 465, "zsh": 371, "zt": [26, 467], "z\u00e9": 428, "\u00e0": 427, "\u0261\u00e6m\u0259pa\u026a": 505, "\u03b3": [132, 493, 564], "\u03c3": 455}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Estimation of time variability in a lightcurve", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTA with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 445, 457, 483, 489], "0": [379, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "1": [375, 379, 398, 408, 409, 416, 417, 419, 424, 432, 433, 434, 435, 436, 437, 478], "10": [384, 408, 410], "10th": 432, "11": [385, 408, 411], "12": [386, 408, 412], "12th": 423, "13": [387, 408, 413, 422, 425], "13th": 435, "14": [388, 408, 414], "14th": 433, "15": [408, 415], "16": [389, 408, 416], "16th": 424, "17": [408, 417], "18": [390, 408, 418, 419, 420], "19": [391, 408, 421], "19th": 420, "1d": [445, 447, 453, 462, 463, 485], "1dc": 480, "2": [376, 377, 398, 408, 420, 422, 434, 436, 478, 544], "20": [392, 408, 423, 424, 426], "2014": 409, "2015": [422, 425], "2016": [426, 427], "2017": 428, "2018": [429, 430, 431], "2019": [410, 411, 412, 413, 414, 415], "2020": [416, 417, 418, 419, 420], "2021": 421, "2022": [423, 424, 432], "2023": [433, 434, 435], "2024": 436, "21": 393, "22": [394, 427], "22nd": 421, "23": [395, 430], "24": 396, "25": [397, 409], "26": [398, 413], "28": [410, 428, 429], "29": [411, 431], "29th": 436, "2d": [449, 485], "3": [377, 398, 408, 415, 425, 437], "30": [412, 414], "32": 370, "3955": 398, "3d": [452, 453, 460, 462, 485], "3fgl": [536, 547], "3fhl": 453, "4": [378, 408, 426], "4122": 398, "4fgl": [548, 549], "4th": 418, "5": [379, 408, 427], "6": [380, 408, 428], "64": 370, "6th": [419, 434], "7": [377, 381, 408, 429], "8": [382, 408, 430], "9": [383, 408, 431], "A": 444, "As": 511, "In": 371, "ON": [441, 446, 453], "On": 447, "The": [376, 400, 453, 455, 470, 478, 502, 514], "To": [370, 371, 390, 505], "about": 478, "abov": 455, "absolute_tim": 351, "absorpt": [393, 440, 531], "abstract": [375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "accept": 373, "access": [469, 473, 482, 502], "accessor": 517, "account": 440, "action": [370, 390], "ad": 473, "adapt": 448, "adaptiveringbackgroundmak": 162, "add": [381, 475], "add_colorbar": 358, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [393, 398, 511, 563], "aeff_2d": 507, "against": 446, "aim": 475, "alia": 393, "all": 463, "along": 397, "altern": [378, 381, 383, 384, 385, 386, 387, 388, 390, 391, 394, 397], "amplitud": [398, 478], "an": [370, 439, 456, 457, 469, 474], "anaconda": 403, "analysi": [0, 11, 15, 376, 379, 439, 441, 444, 445, 446, 447, 452, 453, 454, 462, 465, 485, 489, 501, 504, 563], "analysisconfig": 16, "angl": [507, 508, 509, 511], "angular": 518, "annihil": 467, "annotate_heatmap": 359, "api": [6, 370, 371, 392, 394, 397, 398, 432, 435, 436, 485, 490], "apply_edisp": [110, 114], "approach": [385, 441, 442, 445, 447, 448, 449, 450, 453, 456, 457, 458, 460, 461, 462, 463, 464, 470, 474, 475, 477, 489, 490], "apr": [417, 422, 426, 428], "arbitrari": 397, "area": [471, 480, 507], "argument": [370, 384], "arm": 495, "asmoothmapestim": 116, "assert": 370, "assert_quantity_allclos": 345, "assert_skycoord_allclos": 346, "assert_time_allclos": 347, "assess": [452, 470], "assign": [463, 475], "astro": [1, 493, 496], "astronomi": 385, "astrophys": [1, 494, 495, 496], "astropi": [370, 395], "asymmetr": 471, "attribut": [370, 371, 381], "aug": [409, 425], "author": 396, "authorship": 396, "avail": 468, "ax": [473, 518], "axi": [370, 510], "backend_default": 312, "background": [381, 385, 389, 392, 398, 450, 455, 456, 472, 475, 480, 481, 489, 508, 512, 513, 514, 515, 566], "background2d": 141, "background3d": 142, "backgroundirf": 143, "backgroundirfmodel": 381, "backgroundmodel": 381, "backport": 370, "base": [394, 397, 516], "basic": [454, 473], "bayesian": 461, "between": 392, "bin": [385, 439, 455, 518], "binder": 400, "bit": 370, "bkg_2d": 508, "bkg_3d": 508, "block": 461, "boundari": 474, "branch": 399, "break": 370, "broken": [371, 532, 546], "brokenpowerlawspectralmodel": 212, "bsd": 370, "bug": [423, 432, 435, 436], "bugfix": 399, "build": [371, 373, 400, 462, 463], "built": 562, "bundl": 370, "burkertprofil": 17, "butterfli": 490, "call": 381, "candid": [399, 448], "caplog": 370, "cartesian": 298, "case": [376, 380, 398, 568], "casebattacharya1998": 28, "cash": [282, 566, 567], "cash_sum_cython": 283, "cashcountsstatist": 279, "catalog": [2, 468, 474, 475, 491, 500], "catalog_registri": 55, "caveat": 566, "cell": 370, "certif": 373, "cff": 396, "chain": [444, 446], "chang": [370, 391, 432, 435, 436], "changelog": 390, "character": 461, "check": [11, 370, 371, 405, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "checker": 344, "chi": 455, "choos": 371, "citat": 396, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 370, 371, 380, 381, 394, 397, 490, 511, 567], "clean": 389, "cli": 565, "click": 370, "clobber": 370, "clumpi": 493, "cluster": [13, 477], "code": [370, 371, 376, 379, 400], "codemeta": 396, "collect": 396, "colormap": 570, "colormap_hess": 360, "colormap_milagro": 361, "combin": [475, 502], "command": [11, 370, 565], "compar": [446, 462], "compound": [476, 533], "compound_region_to_region": 328, "compoundspectralmodel": 213, "comput": [438, 439, 443, 444, 445, 450, 451, 454, 459, 466, 470, 479, 484, 486, 488, 490, 492, 520, 530, 551, 561], "compute_chisq": 284, "compute_flux_doubl": 285, "compute_fpp": 286, "compute_fvar": 287, "compute_lightcurve_doublingtim": 132, "compute_lightcurve_fpp": 133, "compute_lightcurve_fvar": 134, "conda": 401, "confer": 396, "confid": 470, "config": [11, 449, 450, 565], "configur": [445, 452, 458, 462, 489, 563], "constant": [521, 534, 552], "constantfluxspatialmodel": 214, "constantspatialmodel": 215, "constantspectralmodel": 216, "constanttemporalmodel": 217, "contain": 397, "containment_radiu": 201, "containment_region": 202, "content": [469, 518], "context": [441, 442, 444, 445, 446, 447, 448, 449, 450, 453, 455, 456, 458, 460, 461, 462, 463, 464, 474, 477, 478, 489, 490], "contigu": 473, "continu": 400, "contour": 470, "contribut": [373, 396, 475], "contributor": [396, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "conveni": 382, "convent": 370, "convers": 370, "convert": 370, "coordin": [13, 370, 381, 508, 518], "correl": 450, "count": [475, 481, 501, 567], "covari": [203, 470], "covarianceresult": 204, "creat": [441, 444, 449, 450, 457, 469, 471, 473, 474, 490, 518], "create_cosmic_ray_spectral_model": 270, "create_crab_spectral_model": 271, "create_fermi_isotropic_diffuse_model": 272, "create_map_dataset_from_observ": 111, "create_map_dataset_geom": 112, "creation": [441, 445, 463], "cstat": 288, "cta": [380, 480], "cube": [376, 473, 485], "cumul": 441, "current": 395, "curv": [385, 462, 463, 464, 559, 560], "custom": [476, 478, 562], "cut": [442, 446], "cutoff": [535, 536, 537, 547, 548, 549], "cutout": 473, "cycl": 395, "cython": [395, 400], "d_sun_to_galactic_cent": 297, "dark": [467, 493], "darkmatt": [1, 493], "darkmatterannihilationspectralmodel": [19, 493], "darkmatterdecayspectralmodel": 20, "data": [3, 8, 370, 376, 378, 379, 385, 397, 400, 440, 441, 444, 445, 446, 452, 453, 455, 458, 462, 463, 465, 469, 472, 473, 482, 485, 489, 490, 491, 502, 513, 565, 566], "dataflow": 397, "dataset": [4, 11, 98, 99, 370, 379, 382, 391, 392, 397, 439, 441, 445, 446, 449, 450, 452, 453, 457, 462, 463, 464, 469, 470, 472, 474, 475, 478, 482, 489, 490, 501, 504], "dataset_registri": 97, "datasetmodel": 218, "datasetsmak": 163, "datastor": [82, 480, 490, 502], "dco": [373, 396], "deal": 371, "dec": 415, "decai": 467, "decemb": 434, "decis": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "default": 381, "defin": [439, 441, 444, 446, 454, 456, 457, 462, 463, 474, 490, 518], "definit": [396, 462, 513], "depend": [369, 387, 393, 423, 446, 455, 457, 476], "deprec": [370, 395], "deriv": 568, "detail": [377, 452], "detect": [391, 448, 454, 510], "detector": 508, "develop": [370, 372, 373, 377], "diagram": 380, "differ": [453, 473, 569], "diffus": 481, "dilat": 474, "direct": 446, "discuss": 385, "disk": [445, 457, 489, 490, 522], "diskspatialmodel": 219, "dispers": [471, 480, 481, 509], "dissolv": 389, "distribut": [387, 483, 495], "dl3": [3, 453, 483, 502, 510, 513], "dl4": [471, 501, 503, 513, 517, 562], "dl5": [503, 562], "dl6": 503, "dmprofil": 18, "do": 370, "doc": 400, "docstr": 371, "document": [371, 373, 379, 390, 436], "doubl": 461, "download": [11, 400], "downsampl": 518, "dr1": [483, 549], "dr2": 549, "dr3": 548, "draw": 320, "driven": 565, "drop": 377, "due": 440, "durat": 472, "e": 483, "each": 455, "earli": 373, "earth_location_from_dict": 307, "ebl": [440, 531], "ebl_data_builtin": 221, "eblabsorptionnormspectralmodel": 220, "edg": 503, "edisp": 471, "edisp_2d": 509, "edispkernel": 144, "edispkernelmap": [145, 510], "edispmap": 146, "effect": [471, 472, 480, 507], "effectiveareatable2d": 147, "einastoprofil": 21, "elaps": 569, "empti": 469, "encourag": 478, "end": 370, "energi": [393, 439, 446, 455, 457, 471, 474, 476, 480, 481, 503, 507, 508, 509, 511], "energydependentmorphologyestim": 118, "energydependentmultigausspsf": 148, "energydispersion2d": 149, "environ": 401, "eros": 474, "error": [470, 567], "estim": [5, 119, 388, 391, 394, 397, 445, 448, 455, 458, 461, 462, 472, 503, 513, 514, 567], "estimate_exposure_reco_energi": 135, "estimator_registri": 117, "evalu": [381, 382, 383], "event": [379, 383, 456, 457, 465, 473, 480, 481, 483, 491, 502, 510], "eventlist": [83, 502], "eventlistmetadata": 84, "evolut": 457, "exampl": [400, 478, 493, 500, 501, 502, 503, 504, 510, 512, 513, 514, 517, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 562, 566], "excess": [394, 441, 450, 461, 567], "excessmapestim": 120, "exclus": [444, 445, 450, 474, 489], "execut": 565, "exemplari": 398, "exercis": [439, 442, 444, 447, 452, 454, 456, 457, 464, 480, 481, 482, 483, 491], "exist": 376, "expcutoffpowerlaw3fglspectralmodel": 222, "expcutoffpowerlawnormspectralmodel": 223, "expcutoffpowerlawspectralmodel": 224, "expdecai": 553, "expdecaytemporalmodel": 225, "expect": 510, "explor": [441, 445, 454, 485], "exponenti": [29, 442, 535, 536, 537, 547, 548, 549], "expos": 381, "exposur": [471, 481], "extend": [441, 456], "extens": [371, 440], "extern": 370, "extra": 400, "extract": [450, 462, 463, 464], "extrapol": 370, "f_cash_root_cython": 289, "factor": 467, "factori": 473, "factoris": 510, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 398, "featur": [14, 395, 399, 432, 435, 436], "feb": [416, 429], "februari": 436, "fermi": [453, 481], "fermist": 493, "file": [371, 396, 445, 449, 450, 453, 480, 489, 502, 518], "fill": [473, 518], "filter": 463, "final": [375, 399, 445, 568], "find_peak": 136, "find_peaks_in_flux_map": 137, "finder": 514, "first": [399, 445], "fit": [10, 13, 205, 379, 385, 440, 441, 442, 444, 445, 446, 449, 452, 453, 454, 460, 464, 470, 474, 478, 481, 489, 490, 518, 562, 566, 567, 568], "fitresult": 206, "fix": [370, 423, 432, 435, 436], "fixedpointinginfo": 85, "fixtur": 370, "flare": 463, "float": 370, "flux": [394, 398, 439, 440, 442, 444, 445, 453, 458, 467, 468, 489, 490, 491, 503], "fluxestim": 394, "fluxmap": [121, 394], "fluxmetadata": 122, "fluxpoint": 123, "fluxpointscollect": 394, "fluxpointsdataset": [100, 382, 469], "fluxpointsestim": [124, 503], "fluxprofileestim": 125, "fold": 381, "folder": 400, "follow": 391, "format": [370, 569], "formula": 568, "forward": 381, "found": 565, "fov": [472, 512], "fov_to_ski": 299, "fovalign": 150, "fovbackgroundmak": [164, 512], "fovbackgroundmodel": 226, "fraction": 461, "freez": [395, 399, 475], "from": [370, 463, 473, 474, 475, 518], "from_yaml": 333, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 370, 371, 480, 507, 508, 509, 510, 511, 567, 569], "further": [385, 440, 566], "galact": [300, 481], "galactocentr": 495, "galleri": [370, 371, 519], "gamlik": 493, "gamma": [385, 467], "gammalib": 493, "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 370, 373, 376, 379, 387, 389, 390, 391, 395, 396, 397, 399, 400, 406, 407, 471, 480, 481, 482, 483, 493, 496, 500, 501, 502, 503, 504, 510, 512, 513, 514, 517, 562, 563, 569], "gaussian": [523, 524, 538, 554, 555], "gaussianspatialmodel": 227, "gaussianspectralmodel": 228, "gaussiantemporalmodel": 229, "gener": [370, 376, 380, 385, 396, 397, 503, 524, 555], "generalist": 394, "generalizedgaussianspatialmodel": 230, "generalizedgaussiantemporalmodel": 231, "geom": 185, "geometri": [441, 454, 462, 463, 473, 474, 489, 490, 516, 518], "get": [373, 390, 402, 440, 449, 450, 473, 494, 495, 496, 502, 517], "get_combined_significance_map": 138, "get_images_path": 334, "get_irfs_featur": 95, "get_random_st": 321, "get_rebinned_axi": 139, "get_wstat_gof_term": 290, "get_wstat_mu_bkg": 291, "github": 370, "given": 475, "global": 392, "glossari": 564, "good": 568, "gpl": 370, "group": 477, "gti": [86, 502], "guid": [372, 506], "guidelin": [371, 375, 376, 390], "h": 483, "halv": 461, "handl": [370, 379, 380, 381, 392, 396, 472, 569], "have": [378, 380, 385, 386, 394], "hawc": [453, 482], "hduindext": 87, "hduloc": 305, "healpix": 516, "help": 405, "helper": 382, "hess": 453, "hgp": 468, "hierarch": 477, "hierarchi": 397, "hierarchical_clust": 295, "high": [0, 5, 379, 386, 489, 504], "hli": 445, "how": [370, 371, 373, 390, 399, 473, 505], "hpxgeom": 186, "hpxmap": 187, "hpxndmap": [188, 517], "hstack_column": 340, "i": [370, 373, 375, 458], "idea": 380, "imag": [371, 376, 384, 389, 448, 454, 473, 485], "imageprofil": 126, "imageprofileestim": 127, "implement": [380, 381, 390, 396, 398, 476, 478], "import": [370, 460], "improv": [381, 393, 423, 432, 435, 436], "inbuilt": 471, "includ": [371, 478], "index": [473, 478, 502], "info": [11, 370], "inform": [396, 468, 478, 509], "input": [370, 397, 448], "inspect": 490, "instal": [390, 402, 403, 405], "instrument": [7, 453, 510], "integr": [13, 400, 439], "integrate_spectrum": 273, "interact": 392, "interest": 455, "interfac": [0, 379, 381, 386, 489, 504, 517], "interpol": [13, 370, 473], "interpolate_profil": 310, "interpolation_scal": 311, "interv": 463, "intrins": 440, "introduc": [381, 389, 391, 393, 394, 458], "introduct": [381, 384, 385, 387, 388, 390, 394, 396, 397, 439, 444, 446, 454, 465, 467, 468, 469, 472, 473, 480, 481, 485, 491, 493, 495, 496, 566], "inversecdfsampl": 319, "ipython": 406, "irf": [7, 151, 379, 397, 439, 469, 471, 480, 510], "irf_registri": 153, "irfmap": 152, "isothermalprofil": 22, "isotrop": 481, "issu": 405, "iter": 473, "j": 467, "jan": 410, "jfactori": 23, "joint": [452, 453, 501], "json": 396, "jul": 413, "june": [424, 435], "jupyt": [370, 406], "kernel": 471, "labelmapaxi": [189, 473], "lat": [453, 481], "law": [442, 532, 535, 536, 537, 543, 544, 545, 546, 547, 548, 549], "lazi": 382, "lazyfitsdata": 306, "lc": 462, "let": 457, "level": [0, 5, 376, 379, 386, 489, 490, 504], "li": 465, "licens": 370, "light": [385, 462, 463, 464, 560], "lightcurv": [385, 456, 461, 464, 468], "lightcurveestim": [128, 503], "lightcurvetemplatetemporalmodel": 232, "like": 456, "likelihood": 568, "limit": 380, "line": [11, 370, 565], "linear": 556, "lineartemporalmodel": 233, "link": 371, "list": [381, 382, 383, 384, 385, 386, 387, 456, 463, 468, 473, 474, 475, 476, 491, 502], "literatur": 446, "livetim": 472, "load": [382, 439, 440, 442, 444, 446, 468, 475], "load_irf_dict_from_fil": [161, 510], "locat": 370, "log": [11, 370, 442, 539, 540], "logparabolanormspectralmodel": 234, "logparabolaspectralmodel": 235, "logspir": 34, "long": 396, "loop": [441, 472, 490], "lorimer2006": 35, "low": [376, 490], "lt": 395, "ma": 465, "mai": [412, 423], "maintain": [377, 396], "mainten": 379, "major": 399, "make": [370, 373, 399, 454, 457, 465, 490], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 329, "make_counts_rad_max": 176, "make_edisp_kernel_map": 177, "make_edisp_map": 178, "make_effective_livetime_map": 179, "make_map_background_irf": 180, "make_map_exposure_true_energi": 181, "make_observation_time_map": 182, "make_orthogonal_rectangle_sky_region": 330, "make_path": 335, "make_psf_map": 183, "make_theta_squared_t": 184, "maker": [8, 166, 391, 397, 441, 463, 472, 489, 490, 512, 513, 514], "maker_registri": 165, "mamba": 403, "manag": [379, 403], "manual": [474, 477], "map": [9, 190, 194, 376, 379, 380, 448, 449, 450, 453, 454, 460, 465, 467, 471, 473, 474, 475, 487, 491, 503, 516, 517, 518], "mapax": 191, "mapaxi": 192, "mapcoord": [193, 517], "mapdataset": [101, 382, 452, 456, 469, 482, 501], "mapdataseteventsampl": [102, 383], "mapdatasetmak": [167, 513], "mapdatasetmetadata": 103, "mapdatasetonoff": [104, 382], "mappanelplott": 357, "mar": 411, "march": 433, "mask": [384, 444, 445, 450, 469, 474, 489], "materi": 396, "matter": [467, 493], "measur": 566, "meet": 379, "messag": 370, "met": 569, "metadata": [396, 397], "method": [371, 382, 383, 398, 461, 473, 503, 517], "method_default": 313, "method_kwargs_default": 314, "meyercrabspectralmodel": 237, "miniconda": 403, "minor": 391, "mission": 569, "model": [10, 238, 240, 379, 381, 389, 392, 393, 397, 398, 440, 441, 444, 445, 446, 449, 452, 453, 454, 456, 457, 462, 463, 464, 467, 468, 469, 470, 475, 476, 478, 480, 489, 490, 491, 495, 496, 497, 498, 499, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 566], "model_registri": 236, "modelbas": 239, "modif": 474, "modifi": [370, 473, 476], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 455, "morphologi": 476, "motion_since_birth": 301, "motiv": 398, "mpl_plot_check": 348, "multi": 453, "multipl": [456, 475, 478, 501], "multiprocessing_manag": 317, "n_jobs_default": 315, "naima": 541, "naimaspectralmodel": 241, "name": [370, 381, 510], "nebula": 498, "new": [370, 381, 385, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 435, 436, 463], "next": [442, 444, 445, 448, 454, 462, 480, 482, 483, 489, 491], "nfwprofil": 25, "night": 462, "non": [370, 473, 518], "norm": [393, 476, 525, 537, 540, 542, 545], "norm_bounds_cython": 292, "normal": [322, 489], "notat": 567, "note": [370, 408, 444, 566], "notebook": [11, 370, 378, 406], "nov": [418, 419, 420, 421, 427, 431], "novemb": 432, "now": 385, "nuisanc": 398, "number": [370, 395, 510], "numpi": 395, "o": 458, "object": [370, 371, 380, 392, 449, 450, 456, 457, 468, 477], "observ": [3, 88, 91, 379, 380, 440, 444, 445, 454, 456, 457, 462, 463, 472, 477, 489, 490], "observationeventsampl": 107, "observationfilt": 89, "observationseventssampl": 92, "observationt": 90, "observatory_loc": 96, "obtain": [439, 455, 464, 477], "off": [442, 444, 447, 453], "offset": [507, 508, 509, 511], "ogipdatasetread": 105, "ogipdatasetwrit": 106, "old": 400, "onto": 473, "open": 465, "oper": [473, 474], "optimizeresult": 207, "option": [369, 387, 470], "org": 400, "organ": [376, 385], "origin": [370, 373], "other": [370, 371, 380, 400, 403, 493], "outlin": 398, "outlook": [382, 383, 384, 386, 387, 389, 390, 391, 394], "output": 370, "over": 465, "overview": [390, 402, 455, 480, 512, 514, 515], "overwrit": 370, "own": 565, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 389, 391, 400, 403, 423, 485, 493, 494, 563], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 570, "paper": 379, "parabola": [442, 539, 540], "parallel": [13, 382], "paramet": [208, 209, 381, 393, 398, 445, 455, 470, 475, 476, 489], "parameterestim": 129, "parametr": 381, "parametricpsf": 158, "pdf": 323, "perform": [383, 441, 480, 490], "person": 396, "perspect": 377, "phase": [465, 559], "phasebackgroundmak": 168, "phasogram": 465, "piecewis": [525, 542], "piecewisenormspatialmodel": 242, "piecewisenormspectralmodel": 243, "pig": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "pip": 403, "pixel": [370, 384, 474], "plan": 377, "plot": [14, 370, 440, 444, 445, 448, 454, 455, 458, 473, 475, 490, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 570], "plot_contour_lin": 362, "plot_distribut": 363, "plot_heatmap": 364, "plot_map_rgb": 365, "plot_npred_sign": 366, "plot_spectrum_datasets_off_region": 367, "plot_theta_squared_t": 368, "png": 371, "point": [398, 439, 440, 442, 444, 445, 453, 454, 456, 461, 468, 480, 489, 490, 491, 503, 511, 526], "pointinginfo": 93, "pointingmod": 94, "pointspatialmodel": 244, "poisson": 566, "polar": 302, "polici": 396, "pool_kwargs_default": 316, "popul": [1, 495], "posit": [398, 478, 509], "possibl": 396, "post": 399, "power": [442, 532, 535, 536, 537, 543, 544, 545, 546, 547, 548, 549], "powerlaw": [442, 557], "powerlaw2spectralmodel": 245, "powerlawnormspectralmodel": 246, "powerlawspectralmodel": 247, "powerlawtemporalmodel": 248, "precis": 383, "predict": 501, "prepar": [385, 395, 439, 441, 457, 490], "prerequisit": [441, 442, 444, 445, 446, 447, 449, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 470, 474, 475, 478, 489, 490], "pretti": 468, "primaryflux": 26, "print": 468, "prior": [398, 478], "priorparamet": [210, 211], "produc": 482, "product": [467, 471], "profil": [440, 458, 467, 568], "project": [379, 400], "propag": 397, "propos": [378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 441, 442, 445, 447, 448, 449, 450, 453, 456, 457, 458, 460, 461, 462, 463, 464, 470, 474, 475, 477, 489, 490], "psf": [471, 481, 511], "psf3d": 154, "psf_tabl": 511, "psfkernel": 155, "psfking": 156, "psfmap": [157, 471, 510], "public": 396, "pull": [370, 373, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "pulsar": [51, 465, 497, 498], "purpos": 375, "pwn": 50, "pydant": 397, "python": [370, 371, 377, 395, 406], "qualiti": [379, 400, 444, 446, 452, 470], "quantiti": [477, 503], "radial": 508, "radial_distribut": 48, "radmax2d": 159, "rai": [385, 467], "random": [13, 370], "rang": [472, 513], "read": [448, 453, 457, 458, 473, 474, 475, 518], "read_hermes_cub": [274, 276], "read_yaml": 336, "recommend": [402, 404], "reconstruct": 508, "recopsfmap": 160, "recursive_merge_dict": 337, "redshift": 440, "reduc": [4, 449, 450, 469, 489, 490], "reduct": [8, 379, 385, 441, 444, 445, 446, 452, 462, 463, 472, 482, 489, 490, 513, 565], "refer": [6, 390, 564, 565, 566], "reflect": [472, 514], "reflectedregionsbackgroundmak": [169, 514], "reflectedregionsfind": 170, "region": [13, 381, 384, 439, 441, 444, 446, 472, 474, 475, 514, 518], "region_to_fram": 331, "regiongeom": [195, 518], "regionndmap": [196, 517, 518], "regions_to_compound_region": 332, "regionsfind": 171, "relat": 518, "releas": [370, 379, 395, 396, 399, 400, 408], "remark": 375, "remnant": 499, "remov": [370, 475], "renam": 370, "repositori": 400, "repr": 370, "represent": [393, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "request": [370, 373, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "requir": [369, 370, 387, 397], "requires_data": 349, "requires_depend": 350, "resampl": 469, "resample_energy_edg": 140, "residu": [444, 446, 452, 490], "resolv": [391, 465], "respons": [7, 510], "restructur": 390, "result": [385, 394, 439, 441, 445, 448, 455, 458, 462, 568], "return": [370, 371], "review": 375, "ring": [450, 472, 515], "ringbackgroundmak": 172, "rmf": 509, "road": 380, "roadmap": 379, "rotat": 384, "rst": 371, "run": [11, 373, 444, 445, 446, 455, 457, 458, 462, 489, 565], "run_multiprocess": 318, "safe": [472, 513], "safemaskmak": 173, "sampl": [383, 456, 457], "sample_powerlaw": 324, "sample_spher": 325, "sample_sphere_dist": 326, "sample_tim": 327, "sampler": 457, "save": [445, 489, 490], "scale": 569, "scale_plot_flux": 275, "scaledregulargridinterpol": 309, "scalespectralmodel": 251, "scenario": 380, "schedul": 395, "scheme": [381, 396], "script": [11, 13, 370, 406, 485, 487], "section": 390, "select": [441, 445, 454, 462, 463, 468, 475, 489, 490, 502], "select_nested_model": 277, "sensit": 439, "sensitivityestim": 130, "sep": [414, 430], "serial": [382, 397, 453], "serialis": [398, 445, 458, 471, 475, 476, 481, 501], "seril": 381, "set": [373, 445, 473, 489], "setup": [378, 400, 402, 404, 405, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 489, 490, 491], "sever": 370, "share": 476, "shell": 527, "shell2": 528, "shell2spatialmodel": 252, "shellspatialmodel": 253, "shorter": 393, "should": 370, "show": [454, 455, 477], "signal": 455, "signific": [441, 448, 450, 474, 567], "simplepulsar": 54, "simplifi": 393, "simul": [379, 382, 446, 447, 456, 457, 460, 464], "sine": 558, "sinetemporalmodel": 254, "singl": [371, 447], "size": 518, "skip": 370, "sky": [9, 381, 384, 454, 456, 474, 509, 517], "sky_to_fov": 303, "skycoord": 517, "skymodel": [255, 476], "slice": 473, "small": 373, "smooth": [448, 546], "smoothbrokenpowerlawspectralmodel": 256, "snr": 52, "snrtruelovemcke": 53, "solut": 397, "some": [370, 380, 474], "sourc": [1, 2, 439, 441, 444, 448, 454, 455, 456, 457, 464, 468, 474, 478, 480, 491, 495, 496, 497, 498, 500], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": [62, 500], "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": [66, 500], "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 381, "sourcemodel": 381, "spatial": [381, 393, 454, 467, 473, 476, 495, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529], "spatial_model_registri": 249, "spatialirfmodel": 381, "spatialmodel": 257, "special": 568, "specif": [381, 390, 468], "spectra": 467, "spectral": [393, 398, 440, 441, 442, 444, 445, 446, 453, 454, 467, 476, 485, 491, 519, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 550], "spectral_model_registri": 250, "spectralirfmodel": 381, "spectralmodel": 258, "spectrum": [440, 444, 446, 447, 454, 465, 472, 490], "spectrumdataset": [108, 382, 469], "spectrumdatasetmak": [174, 513], "spectrumdatasetonoff": [109, 382, 501], "sphinx": [370, 371], "spiral": 495, "split_dataset": [113, 115], "spread": [480, 511], "squar": [455, 483], "stack": [444, 450, 452, 501], "standard_scal": 296, "standardise_unit": 355, "start": [390, 402, 494, 495, 496, 502, 517], "stat": [12, 440], "stat_contour": 470, "stat_profile_ul_scipi": 278, "stat_surfac": 470, "statist": [12, 444, 474, 566, 567], "statu": [375, 380, 389, 395], "step": [445, 480, 482, 483, 563], "store": [385, 445, 509], "str": 370, "structur": [389, 391, 423, 491, 563], "structure_funct": 293, "studi": 385, "style": 376, "sub": [473, 494], "subclass": 398, "subpackag": 376, "subset": 468, "suggest": 396, "summari": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 452, 481], "super": [547, 548, 549], "superexpcutoffpowerlaw3fglspectralmodel": 259, "superexpcutoffpowerlaw4fgldr3spectralmodel": 260, "superexpcutoffpowerlaw4fglspectralmodel": 261, "supernova": 499, "support": [370, 377, 395, 396, 398, 471, 501], "survei": [487, 570], "symmetr": 508, "systemat": 398, "t": [448, 567], "tabl": [13, 455, 468, 502], "table_row_to_dict": 341, "table_standardise_units_copi": 342, "table_standardise_units_inplac": 343, "tag": 393, "target": 444, "task": [381, 382, 383, 384, 385, 386, 387], "templat": [456, 529, 550], "templatendspatialmodel": 263, "templatendspectralmodel": 264, "templatenpredmodel": 265, "templatephasecurvetemporalmodel": 266, "templatespatialmodel": 267, "templatespectralmodel": 268, "tempor": [457, 464, 476, 519, 552, 553, 554, 555, 556, 557, 558, 559, 560], "temporal_model_registri": 262, "temporalmodel": 269, "term": 396, "terminologi": 380, "test": [13, 370, 373, 455, 465], "text": 370, "theta": 483, "thi": 373, "thumbnail": 371, "time": [13, 379, 385, 438, 443, 451, 456, 459, 461, 463, 464, 466, 479, 484, 485, 486, 488, 492, 520, 530, 551, 561, 569], "time_ref_from_dict": 352, "time_ref_to_dict": 353, "time_relative_to_ref": 354, "timemapaxi": [197, 473], "timmerkonig_lightcurve_simul": 280, "to_yaml": 338, "tool": [11, 370, 565], "tooltip": 371, "touch": 373, "trapz_loglog": 308, "troubleshoot": [405, 565], "true": [507, 509, 511], "tsmapestim": 131, "tutori": [371, 378, 390, 402, 455, 480, 485], "two": 475, "type": [370, 397, 501], "uncertainti": 388, "underli": 518, "unfold": 398, "unfreez": 475, "unif": 394, "unifi": [381, 394], "unit": [13, 370], "unit_from_fits_image_hdu": 356, "unix": 370, "unreleas": 437, "up": [373, 389, 391], "upsampl": 518, "us": [370, 380, 398, 403, 406, 445, 455, 456, 462, 469, 470, 471, 473, 489, 490, 493, 496, 500, 501, 502, 503, 504, 510, 512, 513, 514, 517, 536, 547, 548, 549, 562], "user": [377, 506], "util": [4, 5, 8, 10, 13, 389, 563, 567, 569], "valid": 397, "valleespir": 38, "valu": [370, 398, 455, 473, 478], "vari": 464, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 456, 461], "varianc": 461, "variou": 477, "veloc": 495, "velocity_distribut": 49, "velocity_glon_glat": 304, "venv": 401, "version": [370, 395, 399, 408, 460], "virtual": 401, "visual": [14, 391, 473, 518, 570], "volum": 518, "warn": 370, "wc": [473, 518], "wcsgeom": 198, "wcsmap": 199, "wcsndmap": [200, 517], "we": [378, 385, 386, 394, 482], "webpag": 400, "what": [370, 373, 375, 378, 380, 385, 386, 394, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 442, 444, 445, 448, 454, 462, 489, 491], "where": 370, "which": 370, "wind": 498, "wise": 462, "without": 478, "wobbleregionsfind": 175, "work": 502, "workflow": 563, "write": [370, 375, 445, 457, 473, 474, 502, 518, 565], "write_yaml": 339, "wstat": [294, 566, 567, 568], "wstatcountsstatist": 281, "yaml": [393, 445, 489, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "your": [405, 445, 565], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})