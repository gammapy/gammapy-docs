Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[398, "aug-25-2014"]], "0.10 (Jan 28, 2019)": [[399, "jan-28-2019"]], "0.11 (Mar 29, 2019)": [[400, "mar-29-2019"]], "0.12 (May 30, 2019)": [[401, "may-30-2019"]], "0.13 (Jul 26, 2019)": [[402, "jul-26-2019"]], "0.14 (Sep 30, 2019)": [[403, "sep-30-2019"]], "0.15 (Dec 3, 2019)": [[404, "dec-3-2019"]], "0.16 (Feb 1, 2020)": [[405, "feb-1-2020"]], "0.17 (Apr 1, 2020)": [[406, "apr-1-2020"]], "0.18 (Nov 4th, 2020)": [[407, "nov-4th-2020"]], "0.18.1 (Nov 6th, 2020)": [[408, "nov-6th-2020"]], "0.18.2 (Nov 19th, 2020)": [[409, "nov-19th-2020"]], "0.19 (Nov 22nd, 2021)": [[410, "nov-22nd-2021"]], "0.2 (Apr 13, 2015)": [[411, "apr-13-2015"]], "0.20 (May 12th, 2022)": [[412, "may-12th-2022"]], "0.20.1 (June 16th, 2022)": [[413, "june-16th-2022"]], "0.3 (Aug 13, 2015)": [[414, "aug-13-2015"]], "0.4 (Apr 20, 2016)": [[415, "apr-20-2016"]], "0.5 (Nov 22, 2016)": [[416, "nov-22-2016"]], "0.6 (Apr 28, 2017)": [[417, "apr-28-2017"]], "0.7 (Feb 28, 2018)": [[418, "feb-28-2018"]], "0.8 (Sep 23, 2018)": [[419, "sep-23-2018"]], "0.9 (Nov 29, 2018)": [[420, "nov-29-2018"]], "1.0 (November 10th, 2022)": [[421, "november-10th-2022"]], "1.0.1 (March 14th, 2023)": [[422, "march-14th-2023"]], "1.0.2 (December 6th, 2023)": [[423, "december-6th-2023"]], "1.1 (June 13th 2023)": [[424, "june-13th-2023"]], "1.2 (February 29th 2024)": [[425, "february-29th-2024"]], "1.3 (unreleased)": [[426, "unreleased"]], "1D Spectral": [[473, "d-spectral"]], "1D spectrum simulation": [[435, "d-spectrum-simulation"]], "2D Image": [[473, "d-image"]], "2D map fitting": [[437, "d-map-fitting"]], "3D Cube": [[473, "d-cube"]], "3D detailed analysis": [[440, "d-detailed-analysis"]], "3D map simulation": [[448, "d-map-simulation"]], "API Links": [[360, "api-links"]], "API changes": [[421, "api-changes"], [424, "api-changes"], [425, "api-changes"]], "API reference": [[6, "api-reference"]], "ASmoothMapEstimator": [[112, "asmoothmapestimator"]], "Abstract": [[364, "abstract"], [365, "abstract"], [366, "abstract"], [367, "abstract"], [368, "abstract"], [369, "abstract"], [371, "abstract"], [372, "abstract"], [373, "abstract"], [374, "abstract"], [375, "abstract"], [376, "abstract"], [377, "abstract"], [378, "abstract"], [379, "abstract"], [380, "abstract"], [381, "abstract"], [382, "abstract"], [383, "abstract"], [384, "abstract"], [385, "abstract"], [386, "abstract"], [387, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[362, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[461, "accessing-data"]], "Accessing contents of a dataset": [[457, "accessing-contents-of-a-dataset"]], "Accessor methods": [[505, "accessor-methods"]], "Adaptive smoothing": [[436, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[158, "adaptiveringbackgroundmaker"]], "Add a model on multiple datasets": [[463, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[370, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[461, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[461, "adding-non-contiguous-axes"]], "Additional Models": [[382, "additional-models"]], "Additional PSF classes": [[499, "additional-psf-classes"]], "Additional utilities": [[551, "additional-utilities"]], "Aim": [[463, "aim"]], "Alternative": [[383, "alternative"]], "Alternatives": [[367, "alternatives"], [370, "alternatives"], [373, "alternatives"], [375, "alternatives"], [376, "alternatives"], [377, "alternatives"], [379, "alternatives"], [380, "alternatives"], [386, "alternatives"]], "Alternatives / Outlook": [[372, "alternatives-outlook"]], "Analysis": [[15, "analysis"]], "Analysis configuration": [[433, "analysis-configuration"], [440, "analysis-configuration"], [450, "analysis-configuration"], [477, "analysis-configuration"]], "Analysis steps": [[551, "analysis-steps"]], "Analysis workflow": [[551, "analysis-workflow"]], "AnalysisConfig": [[16, "analysisconfig"]], "As a function of of true energy and offset angle (PSF_TABLE)": [[499, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[359, "assert-convention"]], "Assign to model to all datasets": [[451, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[463, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[484, "astrophysical-source-models"]], "Astrophysical source population models": [[483, "astrophysical-source-population-models"]], "Astrophysics": [[482, "astrophysics"]], "Authorship policy": [[385, "authorship-policy"]], "BACKEND_DEFAULT": [[303, "backend-default"]], "BSD or GPL license?": [[359, "bsd-or-gpl-license"]], "Background": [[468, "background"], [496, "background"]], "Background / What we have now": [[374, "background-what-we-have-now"]], "Background Model Handling": [[381, "background-model-handling"]], "Background estimation": [[460, "background-estimation"], [501, "background-estimation"]], "Background2D": [[137, "background2d"]], "Background3D": [[138, "background3d"]], "BackgroundIRF": [[139, "backgroundirf"]], "BackgroundIRFModel": [[370, "backgroundirfmodel"]], "BackgroundModel": [[370, "backgroundmodel"]], "Basic image exploration and fitting": [[442, "basic-image-exploration-and-fitting"]], "Basic operators": [[461, "basic-operators"]], "Bayesian blocks": [[449, "bayesian-blocks"]], "Bin volume and angular size": [[506, "bin-volume-and-angular-size"]], "Boundary mask": [[462, "boundary-mask"]], "Broken power law spectral model": [[520, "broken-power-law-spectral-model"]], "BrokenPowerLawSpectralModel": [[205, "brokenpowerlawspectralmodel"]], "Bug fixes and improvements": [[412, "bug-fixes-and-improvements"], [421, "bug-fixes-and-improvements"], [424, "bug-fixes-and-improvements"], [425, "bug-fixes-and-improvements"]], "Build": [[389, "build"]], "Building 1D datasets from the new observations": [[451, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[450, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[450, "building-the-3d-analysis-configuration"]], "Built-in models": [[550, "built-in-models"]], "Bundled gammapy.extern code": [[359, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, "burkertprofile"]], "CATALOG_REGISTRY": [[55, "catalog-registry"]], "CITATION.cff": [[385, "citation-cff"]], "CLUMPY": [[481, "clumpy"]], "CTA 1DC": [[468, "cta-1dc"]], "CTA performance files": [[468, "cta-performance-files"]], "CTA with Gammapy": [[468, "cta-with-gammapy"]], "Caplog fixture": [[359, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[387, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[387, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[387, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, "casebattacharya1998"]], "Cash : Poisson data with background model": [[554, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[555, "cash-counts-statistic"]], "CashCountsStatistic": [[272, "cashcountsstatistic"]], "Catalog table": [[456, "catalog-table"]], "Caveat": [[554, "caveat"]], "Changelog": [[379, "changelog"]], "Check Python code": [[360, "check-python-code"]], "Check broken links": [[360, "check-broken-links"]], "Check setup": [[428, "check-setup"], [429, "check-setup"], [432, "check-setup"], [433, "check-setup"], [434, "check-setup"], [435, "check-setup"], [436, "check-setup"], [437, "check-setup"], [438, "check-setup"], [440, "check-setup"], [441, "check-setup"], [442, "check-setup"], [443, "check-setup"], [444, "check-setup"], [445, "check-setup"], [446, "check-setup"], [450, "check-setup"], [451, "check-setup"], [452, "check-setup"], [453, "check-setup"], [455, "check-setup"], [456, "check-setup"], [457, "check-setup"], [458, "check-setup"], [460, "check-setup"], [461, "check-setup"], [462, "check-setup"], [463, "check-setup"], [464, "check-setup"], [466, "check-setup"], [468, "check-setup"], [469, "check-setup"], [470, "check-setup"], [471, "check-setup"], [477, "check-setup"], [478, "check-setup"], [479, "check-setup"]], "Check the dataset we produced": [[470, "check-the-dataset-we-produced"]], "Check your setup": [[394, "check-your-setup"]], "Checker": [[333, "checker"]], "Choose a thumbnail and tooltip for the tutorial gallery": [[360, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[385, "citation-scheme"]], "Class attributes": [[360, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[378, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[359, "clobber-or-overwrite"]], "Code in RST files": [[360, "code-in-rst-files"]], "Code in docstrings in Python files": [[360, "code-in-docstrings-in-python-files"]], "Code quality": [[389, "code-quality"]], "Collection of the personal information of authors": [[385, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[558, "colormaps"]], "Combining event lists and GTIs": [[490, "combining-event-lists-and-gtis"]], "Combining two Models": [[463, "combining-two-models"]], "Command line tools": [[553, "command-line-tools"]], "Command line tools using click": [[359, "command-line-tools-using-click"]], "Command not found": [[553, "command-not-found"]], "Compare against the literature": [[434, "compare-against-the-literature"]], "Compare results": [[450, "compare-results"]], "Compound Spectral Model": [[464, "compound-spectral-model"]], "Compound spectral model": [[521, "compound-spectral-model"]], "CompoundSpectralModel": [[206, "compoundspectralmodel"]], "Computation times": [[427, "computation-times"], [431, "computation-times"], [439, "computation-times"], [447, "computation-times"], [454, "computation-times"], [467, "computation-times"], [472, "computation-times"], [474, "computation-times"], [476, "computation-times"], [480, "computation-times"], [508, "computation-times"], [518, "computation-times"], [539, "computation-times"], [549, "computation-times"]], "Compute Flux Points": [[432, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[438, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[442, "compute-images"]], "Compute sensitivity": [[428, "compute-sensitivity"]], "Computing contours using stat_contour": [[458, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[458, "computing-contours-using-stat-surface"]], "Computing flux points": [[478, "computing-flux-points"]], "Conda Environments": [[390, "conda-environments"]], "Confidence contours": [[458, "confidence-contours"]], "Configurable analysis": [[551, "configurable-analysis"]], "Configuration": [[446, "configuration"]], "Configuration for stacked and joint analysis": [[440, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[433, "configuration-of-the-analysis"]], "Constant spatial model": [[509, "constant-spatial-model"]], "Constant spectral model": [[522, "constant-spectral-model"]], "Constant temporal model": [[540, "constant-temporal-model"]], "ConstantFluxSpatialModel": [[207, "constantfluxspatialmodel"]], "ConstantSpatialModel": [[208, "constantspatialmodel"]], "ConstantSpectralModel": [[209, "constantspectralmodel"]], "ConstantTemporalModel": [[210, "constanttemporalmodel"]], "Context": [[429, "context"], [430, "context"], [432, "context"], [433, "context"], [434, "context"], [435, "context"], [436, "context"], [437, "context"], [438, "context"], [441, "context"], [443, "context"], [444, "context"], [446, "context"], [448, "context"], [449, "context"], [450, "context"], [451, "context"], [452, "context"], [462, "context"], [465, "context"], [466, "context"], [477, "context"], [478, "context"]], "Continuous integration": [[389, "continuous-integration"]], "Contribution in conferences": [[385, "contribution-in-conferences"]], "Contributors": [[398, "contributors"], [399, "contributors"], [400, "contributors"], [401, "contributors"], [402, "contributors"], [403, "contributors"], [404, "contributors"], [405, "contributors"], [406, "contributors"], [407, "contributors"], [410, "contributors"], [411, "contributors"], [412, "contributors"], [413, "contributors"], [414, "contributors"], [415, "contributors"], [416, "contributors"], [417, "contributors"], [418, "contributors"], [419, "contributors"], [420, "contributors"], [421, "contributors"], [422, "contributors"], [423, "contributors"], [424, "contributors"], [425, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[359, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[359, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[506, "coordinates-defined-by-the-regiongeom"]], "Counts": [[469, "counts"]], "Counts and fit statistics": [[555, "counts-and-fit-statistics"]], "Counts statistics classes": [[555, "counts-statistics-classes"]], "Covariance": [[199, "covariance"]], "Covariance and parameters errors": [[458, "covariance-and-parameters-errors"]], "Create DL4 product - PSFMap": [[459, "create-dl4-product-psfmap"]], "Create a mask in energy": [[462, "create-a-mask-in-energy"]], "Create a stacked dataset": [[438, "create-a-stacked-dataset"]], "Create edisp kernel map": [[459, "create-edisp-kernel-map"]], "Create exclusion mask": [[432, "create-exclusion-mask"], [438, "create-exclusion-mask"]], "Create exposure map": [[459, "create-exposure-map"]], "Create the energy-dependent temporal model": [[445, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[478, "create-the-maker-classes-to-be-used"]], "Create the makers": [[429, "create-the-makers"]], "Create the mask from a catalog of sources": [[462, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[462, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[462, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[462, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[445, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[461, "creating-wcs-maps"]], "Creating a RegionGeom": [[506, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[506, "creating-a-regionndmap"]], "Creating a mask for fitting": [[462, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[462, "creating-a-mask-manually"]], "Creating an empty dataset": [[457, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[462, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[461, "creating-from-a-map-geometry"]], "Creating the config file": [[437, "creating-the-config-file"], [438, "creating-the-config-file"]], "Creation of the Flux points": [[433, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[451, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[451, "creation-of-the-datasets"]], "Creation of the model": [[433, "creation-of-the-model"]], "Cube plotting": [[461, "cube-plotting"]], "Cumulative excess and significance": [[429, "cumulative-excess-and-significance"]], "Current status": [[384, "current-status"]], "Custom models": [[550, "custom-models"]], "Cutouts": [[461, "cutouts"]], "Cython": [[389, "cython"]], "DATASET_REGISTRY": [[93, "dataset-registry"]], "DCO implementation": [[385, "dco-implementation"]], "DL3 DR1": [[471, "dl3-dr1"]], "DMProfile": [[18, "dmprofile"]], "D_SUN_TO_GALACTIC_CENTER": [[288, "d-sun-to-galactic-center"]], "Dark matter": [[481, "dark-matter"]], "Dark matter spatial and spectral models": [[455, "dark-matter-spatial-and-spectral-models"]], "DarkMatterAnnihilationSpectralModel": [[19, "darkmatterannihilationspectralmodel"]], "DarkMatterDecaySpectralModel": [[20, "darkmatterdecayspectralmodel"]], "Data Fitting": [[374, "data-fitting"]], "Data access and selection (DL3)": [[490, "data-access-and-selection-dl3"]], "Data analysis": [[473, "data-analysis"]], "Data analysis subpackages in gammapy": [[365, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[368, "data-and-observation-handling"]], "Data and models files": [[441, "data-and-models-files"]], "Data exploration": [[473, "data-exploration"]], "Data reduction": [[374, "data-reduction"], [440, "data-reduction"], [440, "id1"], [477, "data-reduction"], [478, "data-reduction"]], "Data reduction (DL3 to DL4)": [[501, "data-reduction-dl3-to-dl4"]], "Data reduction into a MapDataset": [[470, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[460, "data-reduction-loop"]], "Data structures": [[479, "data-structures"]], "DataStore": [[78, "datastore"]], "Dataset": [[94, "dataset"], [371, "dataset"], [460, "dataset"]], "Dataset helper / convenience methods": [[371, "dataset-helper-convenience-methods"]], "Dataset serialization": [[371, "dataset-serialization"]], "Dataset simulations": [[434, "dataset-simulations"]], "DatasetModels": [[211, "datasetmodels"]], "Datasets": [[95, "datasets"], [368, "datasets"], [371, "datasets"], [386, "datasets"], [457, "datasets"]], "Datasets (DL4)": [[489, "datasets-dl4"]], "Datasets - Reduced data, IRFs, models": [[457, "datasets-reduced-data-irfs-models"]], "Datasets serialization": [[441, "datasets-serialization"]], "DatasetsMaker": [[159, "datasetsmaker"]], "Datastore": [[468, "datastore"]], "Dealing with links": [[360, "dealing-with-links"]], "Decision": [[364, "decision"], [365, "decision"], [366, "decision"], [367, "decision"], [368, "decision"], [369, "decision"], [370, "decision"], [371, "decision"], [372, "decision"], [373, "decision"], [374, "decision"], [375, "decision"], [376, "decision"], [377, "decision"], [378, "decision"], [379, "decision"], [380, "decision"], [381, "decision"], [382, "decision"], [383, "decision"], [384, "decision"], [385, "decision"], [386, "decision"], [387, "decision"]], "Define Target Region": [[432, "define-target-region"]], "Define an Observation": [[444, "define-an-observation"]], "Define an observation and make a dataset": [[445, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[428, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[442, "define-map-geometry"]], "Define the MapDataset": [[444, "define-the-mapdataset"]], "Define the Model": [[451, "define-the-model"]], "Define the ON region": [[434, "define-the-on-region"]], "Define the Sky model: a point-like source": [[444, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[429, "define-the-geometries"]], "Define the geometry": [[462, "define-the-geometry"]], "Define the model": [[478, "define-the-model"]], "Define the model to be used": [[450, "define-the-model-to-be-used"], [450, "id3"]], "Define the simulation source model": [[445, "define-the-simulation-source-model"]], "Define time intervals": [[451, "define-time-intervals"]], "Defining the datastore and selecting observations": [[478, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[451, "defining-the-geometry"]], "Definition of a Contributor": [[385, "definition-of-a-contributor"]], "Definition of the Maintainer": [[385, "definition-of-the-maintainer"]], "Definition of the data selection": [[450, "definition-of-the-data-selection"], [450, "id1"]], "Definition of the dataset geometry": [[450, "definition-of-the-dataset-geometry"], [450, "id2"]], "Dependencies": [[358, "dependencies"], [376, "dependencies"]], "Deprecating a function or a class": [[359, "deprecating-a-function-or-a-class"]], "Deprecation": [[384, "deprecation"]], "Derivation of the WStat formula": [[556, "derivation-of-the-wstat-formula"]], "Detailed plan": [[366, "detailed-plan"]], "Developer How To": [[359, "developer-how-to"]], "Developer guide": [[361, "developer-guide"]], "Discussion / Alternatives": [[374, "discussion-alternatives"]], "Disk spatial model": [[510, "disk-spatial-model"]], "DiskSpatialModel": [[212, "diskspatialmodel"]], "Dissolve gammapy.background": [[378, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[378, "dissolve-gammapy-image"]], "Distributions": [[376, "distributions"], [376, "id1"]], "Documentation": [[368, "documentation"], [425, "documentation"]], "Documentation How To": [[360, "documentation-how-to"]], "Documentation building": [[360, "documentation-building"]], "Documentation guidelines": [[360, "documentation-guidelines"]], "Download": [[389, "download"]], "EBL absorption spectral model": [[519, "ebl-absorption-spectral-model"]], "EBLAbsorptionNormSpectralModel": [[213, "eblabsorptionnormspectralmodel"]], "EBL_DATA_BUILTIN": [[214, "ebl-data-builtin"]], "EDispKernel": [[140, "edispkernel"]], "EDispKernelMap": [[141, "edispkernelmap"]], "EDispMap": [[142, "edispmap"]], "ESTIMATOR_REGISTRY": [[113, "estimator-registry"]], "Effective Area": [[459, "effective-area"]], "Effective area": [[468, "effective-area"], [495, "effective-area"]], "EffectiveAreaTable2D": [[143, "effectiveareatable2d"]], "EinastoProfile": [[21, "einastoprofile"]], "Energy Dependent Spatial Models": [[382, "energy-dependent-spatial-models"]], "Energy Dispersion": [[459, "energy-dispersion"], [469, "energy-dispersion"], [497, "energy-dispersion"]], "Energy dispersion": [[468, "energy-dispersion"]], "Energy edges": [[491, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[114, "energydependentmorphologyestimator"]], "EnergyDependentMultiGaussPSF": [[144, "energydependentmultigausspsf"]], "EnergyDispersion2D": [[145, "energydispersion2d"]], "Estimating TS": [[555, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[449, "estimation-of-time-variability-in-a-lightcurve"]], "Estimator": [[115, "estimator"]], "Estimators": [[386, "estimators"]], "Estimators (DL4 to DL5, and DL6)": [[491, "estimators-dl4-to-dl5-and-dl6"]], "Event Simulation": [[368, "event-simulation"]], "Event lists": [[479, "event-lists"]], "Event sampling": [[444, "event-sampling"]], "EventList": [[79, "eventlist"]], "EventListMetaData": [[80, "eventlistmetadata"]], "Events": [[468, "events"], [469, "events"]], "Example": [[554, "example"], [554, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[466, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[466, "example-2-encouraging-positive-amplitude-values"]], "Example plot": [[509, "example-plot"], [510, "example-plot"], [511, "example-plot"], [512, "example-plot"], [513, "example-plot"], [514, "example-plot"], [515, "example-plot"], [516, "example-plot"], [517, "example-plot"], [519, "example-plot"], [520, "example-plot"], [521, "example-plot"], [522, "example-plot"], [523, "example-plot"], [524, "example-plot"], [525, "example-plot"], [526, "example-plot"], [527, "example-plot"], [528, "example-plot"], [529, "example-plot"], [530, "example-plot"], [531, "example-plot"], [532, "example-plot"], [533, "example-plot"], [534, "example-plot"], [535, "example-plot"], [536, "example-plot"], [537, "example-plot"], [538, "example-plot"], [540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"]], "Examples using gammapy.analysis.Analysis": [[492, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[481, "examples-using-gammapy-astro-darkmatter-darkmatterannihilationspectralmodel"]], "Examples using gammapy.catalog.SourceCatalog3FHL": [[488, "examples-using-gammapy-catalog-sourcecatalog3fhl"]], "Examples using gammapy.catalog.SourceCatalogGammaCat": [[488, "examples-using-gammapy-catalog-sourcecataloggammacat"]], "Examples using gammapy.data.DataStore": [[490, "examples-using-gammapy-data-datastore"]], "Examples using gammapy.data.EventList": [[490, "examples-using-gammapy-data-eventlist"]], "Examples using gammapy.datasets.MapDataset": [[489, "examples-using-gammapy-datasets-mapdataset"]], "Examples using gammapy.datasets.SpectrumDatasetOnOff": [[489, "examples-using-gammapy-datasets-spectrumdatasetonoff"]], "Examples using gammapy.estimators.FluxPointsEstimator": [[491, "examples-using-gammapy-estimators-fluxpointsestimator"]], "Examples using gammapy.estimators.LightCurveEstimator": [[491, "examples-using-gammapy-estimators-lightcurveestimator"]], "Examples using gammapy.irf.EDispKernelMap": [[498, "examples-using-gammapy-irf-edispkernelmap"]], "Examples using gammapy.irf.PSFMap": [[498, "examples-using-gammapy-irf-psfmap"]], "Examples using gammapy.irf.load_irf_dict_from_file": [[498, "examples-using-gammapy-irf-load-irf-dict-from-file"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[500, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.MapDatasetMaker": [[501, "examples-using-gammapy-makers-mapdatasetmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[502, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Examples using gammapy.makers.SpectrumDatasetMaker": [[501, "examples-using-gammapy-makers-spectrumdatasetmaker"]], "Examples using gammapy.maps.HpxNDMap": [[505, "examples-using-gammapy-maps-hpxndmap"]], "Examples using gammapy.maps.RegionNDMap": [[505, "examples-using-gammapy-maps-regionndmap"]], "Examples using gammapy.maps.WcsNDMap": [[505, "examples-using-gammapy-maps-wcsndmap"]], "Examples using gammapy.modeling.Fit": [[550, "examples-using-gammapy-modeling-fit"]], "Excess and Significance": [[555, "excess-and-significance"], [555, "id2"]], "Excess errors": [[555, "excess-errors"], [555, "id4"]], "Excess estimators": [[383, "excess-estimators"]], "ExcessMapEstimator": [[116, "excessmapestimator"]], "Exclusion masks": [[462, "exclusion-masks"]], "Execution": [[553, "execution"]], "Exemplary additional prior subclasses:": [[387, "exemplary-additional-prior-subclasses"]], "Exercises": [[428, "exercises"], [430, "exercises"], [432, "exercises"], [435, "exercises"], [440, "exercises"], [442, "exercises"], [444, "exercises"], [445, "exercises"], [452, "exercises"], [468, "exercises"], [469, "exercises"], [470, "exercises"], [471, "exercises"], [479, "exercises"], [479, "id1"], [479, "id2"], [479, "id3"]], "Existing code": [[365, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[215, "expcutoffpowerlaw3fglspectralmodel"]], "ExpCutoffPowerLawNormSpectralModel": [[216, "expcutoffpowerlawnormspectralmodel"]], "ExpCutoffPowerLawSpectralModel": [[217, "expcutoffpowerlawspectralmodel"]], "ExpDecay temporal model": [[541, "expdecay-temporal-model"]], "ExpDecayTemporalModel": [[218, "expdecaytemporalmodel"]], "Expected number of detected events": [[498, "expected-number-of-detected-events"]], "Exploration of the fit results": [[433, "exploration-of-the-fit-results"]], "Explore the fit results": [[429, "explore-the-fit-results"]], "Explore the results": [[429, "explore-the-results"]], "Exponential": [[29, "exponential"]], "Exponential Cut-Off Powerlaw Fit": [[430, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[525, "exponential-cutoff-power-law-norm-spectral-model"]], "Exponential cutoff power law spectral model": [[523, "exponential-cutoff-power-law-spectral-model"]], "Exponential cutoff power law spectral model used for 3FGL": [[524, "exponential-cutoff-power-law-spectral-model-used-for-3fgl"]], "Expose model parameters as attributes": [[370, "expose-model-parameters-as-attributes"]], "Exposure": [[469, "exposure"]], "Extended source using a template": [[444, "extended-source-using-a-template"]], "Extract the light curve": [[451, "extract-the-light-curve"]], "Extract the lightcurve": [[452, "extract-the-lightcurve"]], "Extracting the light curve": [[450, "extracting-the-light-curve"]], "Extracting the ring background": [[438, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[498, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, "faucherkaspi2006"]], "FaucherKaspi2006VelocityBimodal": [[31, "faucherkaspi2006velocitybimodal"]], "FaucherKaspi2006VelocityMaxwellian": [[32, "faucherkaspi2006velocitymaxwellian"]], "FaucherSpiral": [[33, "faucherspiral"]], "Feature Freeze and Branching": [[388, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[441, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[469, "fermi-lat-with-gammapy"]], "FermiST": [[481, "fermist"]], "Files": [[468, "files"]], "Filling a RegionNDMap": [[506, "filling-a-regionndmap"]], "Filling maps from event lists": [[461, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[461, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[451, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[364, "final-remarks"]], "Final result": [[556, "final-result"]], "Fit": [[200, "fit"], [448, "fit"], [469, "fit"]], "Fit quality and model residuals": [[432, "fit-quality-and-model-residuals"], [434, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[458, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[440, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[440, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[432, "fit-spectrum"], [434, "fit-spectrum"]], "Fit statistics": [[554, "fit-statistics"]], "Fit the datasets": [[452, "fit-the-datasets"]], "Fit the model": [[478, "fit-the-model"]], "Fitting": [[368, "fitting"], [458, "fitting"]], "Fitting Multiple Datasets with and without the Prior": [[466, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[466, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[458, "fitting-options"]], "Fitting temporal models": [[452, "fitting-temporal-models"]], "Fitting the obtained light curve": [[452, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[359, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[81, "fixedpointinginfo"]], "Float data type: 32 bit or 64 bit?": [[359, "float-data-type-32-bit-or-64-bit"]], "Flux Profile Estimation": [[446, "flux-profile-estimation"]], "Flux maps": [[491, "flux-maps"]], "Flux maps for annihilation": [[455, "flux-maps-for-annihilation"]], "Flux maps for decay": [[455, "flux-maps-for-decay"]], "Flux point fitting": [[430, "flux-point-fitting"]], "Flux points": [[456, "flux-points"], [477, "flux-points"], [491, "flux-points"]], "Flux quantities": [[491, "flux-quantities"]], "FluxMaps": [[117, "fluxmaps"]], "FluxMetaData": [[118, "fluxmetadata"]], "FluxPoints": [[119, "fluxpoints"]], "FluxPointsDataset": [[96, "fluxpointsdataset"], [371, "fluxpointsdataset"], [457, "fluxpointsdataset"]], "FluxPointsEstimator": [[120, "fluxpointsestimator"]], "FluxProfileEstimator": [[121, "fluxprofileestimator"]], "FoV background": [[460, "fov-background"], [500, "fov-background"]], "FoVAlignment": [[146, "fovalignment"]], "FoVBackgroundMaker": [[160, "fovbackgroundmaker"]], "FoVBackgroundModel": [[219, "fovbackgroundmodel"]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[449, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[463, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[360, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[359, "functions-returning-several-values"]], "Further references": [[554, "further-references"]], "GTI": [[82, "gti"]], "Galactic diffuse background": [[469, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[483, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[455, "gamma-ray-spectra-at-production"]], "GammaLib": [[481, "gammalib"]], "Gammapy": [[396, "gammapy"]], "Gammapy Binder": [[389, "id1"]], "Gammapy analysis workflow and package structure": [[551, "gammapy-analysis-workflow-and-package-structure"]], "Gammapy overview": [[379, "gammapy-overview"]], "Gammapy repository": [[389, "gammapy-repository"]], "Gammapy webpages": [[389, "gammapy-webpages"]], "Gaussian spatial model": [[511, "gaussian-spatial-model"]], "Gaussian spectral model": [[526, "gaussian-spectral-model"]], "Gaussian temporal model": [[542, "gaussian-temporal-model"]], "GaussianSpatialModel": [[220, "gaussianspatialmodel"]], "GaussianSpectralModel": [[221, "gaussianspectralmodel"]], "GaussianTemporalModel": [[222, "gaussiantemporalmodel"]], "General Gammapy publications": [[385, "general-gammapy-publications"]], "General code style guidelines": [[365, "general-code-style-guidelines"]], "General conventions": [[359, "general-conventions"]], "General idea and class diagram": [[369, "general-idea-and-class-diagram"]], "General method": [[491, "general-method"]], "General organization of the new approach": [[374, "general-organization-of-the-new-approach"]], "Generalist estimators": [[383, "generalist-estimators"]], "Generalized Gaussian temporal model": [[543, "generalized-gaussian-temporal-model"]], "Generalized gaussian spatial model": [[512, "generalized-gaussian-spatial-model"]], "GeneralizedGaussianSpatialModel": [[223, "generalizedgaussianspatialmodel"]], "GeneralizedGaussianTemporalModel": [[224, "generalizedgaussiantemporalmodel"]], "Generating log messages": [[359, "generating-log-messages"]], "Geom": [[181, "geom"]], "Get in touch early": [[362, "get-in-touch-early"]], "Get set up": [[362, "get-set-up"]], "Getting started": [[379, "getting-started"], [391, "getting-started"], [482, "getting-started"], [483, "getting-started"], [484, "getting-started"]], "Getting started section restructuring": [[379, "getting-started-section-restructuring"]], "Getting started with data": [[490, "getting-started-with-data"]], "Getting started with maps": [[505, "getting-started-with-maps"]], "Getting the reduced dataset": [[437, "getting-the-reduced-dataset"], [438, "getting-the-reduced-dataset"]], "Global Model Handling": [[381, "global-model-handling"]], "Glossary": [[552, "glossary"]], "Glossary and references": [[552, "glossary-and-references"]], "Goodness of fit": [[556, "goodness-of-fit"]], "Guidelines and specific actions": [[379, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[471, "h-e-s-s-with-gammapy"]], "HAWC data access and reduction": [[470, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[470, "hawc-with-gammapy"]], "HAWC: 1D dataset for flux point fitting": [[441, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[83, "hduindextable"]], "HDULocation": [[296, "hdulocation"]], "HEALPix geometry": [[504, "healpix-geometry"]], "HEALPix-based maps": [[504, "healpix-based-maps"]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[441, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[385, "handling-of-conference-material"]], "Help!?": [[394, "help"]], "Hierarchical clustering of observations": [[465, "hierarchical-clustering-of-observations"]], "Hierarchy": [[386, "hierarchy"]], "High Level Analysis Interface": [[492, "high-level-analysis-interface"]], "High level interface": [[368, "high-level-interface"], [477, "high-level-interface"]], "How To": [[379, "how-to"], [493, "how-to"]], "How to contribute to Gammapy": [[362, "how-to-contribute-to-gammapy"]], "How to get data values": [[461, "how-to-get-data-values"]], "How to handle API breaking changes?": [[359, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[388, "how-to-make-a-gammapy-release"]], "How to make a pull request": [[359, "how-to-make-a-pull-request"]], "How to set data values": [[461, "how-to-set-data-values"]], "How to use logging": [[359, "how-to-use-logging"]], "How to use random numbers": [[359, "how-to-use-random-numbers"]], "How to write code": [[359, "how-to-write-code"]], "How to write tests": [[359, "how-to-write-tests"]], "HpxGeom": [[182, "hpxgeom"]], "HpxMap": [[183, "hpxmap"]], "HpxNDMap": [[184, "hpxndmap"]], "IPython": [[395, "id3"]], "IRF": [[147, "irf"], [386, "irf"]], "IRF axis naming": [[498, "irf-axis-naming"]], "IRFMap": [[148, "irfmap"]], "IRF_REGISTRY": [[149, "irf-registry"]], "IRFs": [[368, "irfs"], [468, "irfs"]], "Image Plotting": [[461, "image-plotting"]], "ImageProfile": [[122, "imageprofile"]], "ImageProfileEstimator": [[123, "imageprofileestimator"]], "Images and masks": [[373, "images-and-masks"]], "Implement default parameters": [[370, "implement-default-parameters"]], "Implement evaluation region specifications": [[370, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[370, "implement-sky-coordinate-handling"]], "Implementation": [[379, "implementation"], [387, "implementation"]], "Implementation Outline": [[387, "implementation-outline"]], "Implementation road map": [[369, "implementation-road-map"]], "Implementing a custom model": [[464, "implementing-a-custom-model"]], "Implementing a custom prior": [[466, "implementing-a-custom-prior"]], "Imports and versions": [[448, "imports-and-versions"]], "Improve SourceModels class": [[370, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[370, "improve-and-implement-model-serilization"]], "Improve spatial models": [[370, "improve-spatial-models"]], "In the RST files": [[360, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[459, "inbuilt-gammapy-irfs"]], "Include png files as images": [[360, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[461, "indexing-and-slicing-sub-maps"]], "Inspect the reduced dataset": [[478, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[478, "inspecting-residuals"]], "Install issues": [[394, "install-issues"]], "Installation": [[379, "installation"], [391, "installation"], [392, "installation"]], "Instrument Response Functions (DL3)": [[498, "instrument-response-functions-dl3"]], "Interaction Between Models and Dataset Objects": [[381, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[505, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[461, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[359, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[382, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[383, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[383, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[383, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[380, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[380, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[380, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[378, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[380, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[370, "introduce-naming-scheme-for-models"]], "Introduction": [[370, "introduction"], [373, "introduction"], [374, "introduction"], [376, "introduction"], [377, "introduction"], [379, "introduction"], [383, "introduction"], [385, "introduction"], [386, "introduction"], [428, "introduction"], [432, "introduction"], [434, "introduction"], [442, "introduction"], [453, "introduction"], [455, "introduction"], [456, "introduction"], [457, "introduction"], [460, "introduction"], [461, "introduction"], [468, "introduction"], [469, "introduction"], [473, "introduction"], [479, "introduction"], [481, "introduction"], [483, "introduction"], [484, "introduction"], [554, "introduction"]], "Introduction of background models": [[370, "introduction-of-background-models"]], "Introduction of model name attributes": [[370, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[370, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[310, "inversecdfsampler"]], "IsothermalProfile": [[22, "isothermalprofile"]], "Isotropic diffuse background": [[469, "isotropic-diffuse-background"]], "Iterating by image": [[461, "iterating-by-image"]], "J Factors": [[455, "j-factors"]], "JFactory": [[23, "jfactory"]], "Joint Analysis": [[489, "joint-analysis"]], "Joint analysis": [[440, "joint-analysis"], [441, "joint-analysis"]], "Jupyter notebooks": [[395, "jupyter-notebooks"]], "LabelMapAxis": [[185, "labelmapaxis"], [461, "labelmapaxis"]], "Lazy loading of Datasets": [[371, "lazy-loading-of-datasets"]], "LazyFitsData": [[297, "lazyfitsdata"]], "Let\u2019s simulate the model": [[445, "let-s-simulate-the-model"]], "Light Curve Fitting": [[374, "light-curve-fitting"]], "Light Curve estimation by observation": [[450, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[548, "light-curve-temporal-model"]], "Light curves": [[450, "light-curves"]], "Light curves for flares": [[451, "light-curves-for-flares"]], "LightCurveEstimator": [[124, "lightcurveestimator"]], "LightCurveTemplateTemporalModel": [[225, "lightcurvetemplatetemporalmodel"]], "Lightcurve": [[374, "lightcurve"]], "Lightcurves": [[456, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[374, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[369, "limitations"]], "Linear temporal model": [[544, "linear-temporal-model"]], "LinearTemporalModel": [[226, "lineartemporalmodel"]], "Links to other tutorials": [[360, "links-to-other-tutorials"]], "List available catalogs": [[456, "list-available-catalogs"]], "Load Data": [[432, "load-data"]], "Load IRFs and prepare dataset": [[428, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[456, "load-catalogs"]], "Load data": [[434, "load-data"]], "Load spectral points": [[430, "load-spectral-points"]], "Loading models from a catalog": [[463, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[359, "locate-origin-of-warnings"]], "Log parabola spectral model": [[527, "log-parabola-spectral-model"]], "Log parabola spectral norm model": [[528, "log-parabola-spectral-norm-model"]], "Log-Parabola Fit": [[430, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[227, "logparabolanormspectralmodel"]], "LogParabolaSpectralModel": [[228, "logparabolaspectralmodel"]], "LogSpiral": [[34, "logspiral"]], "Long Term Support releases": [[385, "long-term-support-releases"]], "Lorimer2006": [[35, "lorimer2006"]], "Low level API": [[478, "low-level-api"]], "Low level map and cube analysis": [[365, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[161, "maker-registry"]], "METHOD_DEFAULT": [[304, "method-default"]], "METHOD_KWARGS_DEFAULT": [[305, "method-kwargs-default"]], "MODEL_REGISTRY": [[229, "model-registry"]], "Maintainer and developer perspective": [[366, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[368, "maintenance-and-code-quality"]], "Make a Bugfix release": [[388, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[453, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[442, "make-sky-images"]], "Make small pull requests": [[362, "make-small-pull-requests"]], "Maker": [[162, "maker"]], "Makers": [[386, "makers"]], "Makers - Data reduction": [[460, "makers-data-reduction"]], "Making a butterfly plot": [[478, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[359, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[359, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[359, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[465, "manual-grouping-of-observations"]], "Map": [[186, "map"]], "Map Analysis / Data Reduction": [[368, "map-analysis-data-reduction"]], "MapAxes": [[187, "mapaxes"]], "MapAxis": [[188, "mapaxis"]], "MapCoord": [[189, "mapcoord"], [505, "mapcoord"]], "MapDataset": [[97, "mapdataset"], [371, "mapdataset"], [457, "mapdataset"]], "MapDatasetEventSampler": [[98, "mapdataseteventsampler"], [372, "mapdataseteventsampler"]], "MapDatasetMaker": [[163, "mapdatasetmaker"]], "MapDatasetMetaData": [[99, "mapdatasetmetadata"]], "MapDatasetOnOff": [[100, "mapdatasetonoff"], [371, "mapdatasetonoff"]], "MapPanelPlotter": [[346, "mappanelplotter"]], "Maps": [[190, "maps"], [368, "maps"], [461, "maps"], [479, "maps"]], "Maps operations": [[461, "maps-operations"]], "Mask dilation and erosion": [[462, "mask-dilation-and-erosion"]], "Mask maps": [[462, "mask-maps"]], "Mask modifications": [[462, "mask-modifications"]], "Mask some sky regions": [[462, "mask-some-sky-regions"]], "Masks for fitting": [[462, "masks-for-fitting"]], "Masks operations": [[462, "masks-operations"]], "Meetings": [[368, "meetings"]], "Metadata API": [[386, "metadata-api"]], "Metadata files": [[385, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[386, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[449, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[230, "meyercrabspectralmodel"]], "Minor changes": [[380, "minor-changes"]], "Mission elapsed times (MET)": [[557, "mission-elapsed-times-met"]], "Model": [[231, "model"]], "Model and dataset": [[458, "model-and-dataset"], [466, "model-and-dataset"]], "Model fit": [[442, "model-fit"]], "Model fitting": [[433, "model-fitting"], [477, "model-fitting"]], "Model gallery": [[507, "model-gallery"]], "Model lists and serialisation": [[464, "model-lists-and-serialisation"]], "ModelBase": [[232, "modelbase"]], "Modeling": [[368, "modeling"], [386, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[550, "modeling-and-fitting-dl4-to-dl5"]], "Modeling and fitting": [[440, "modeling-and-fitting"]], "Modelling": [[437, "modelling"], [463, "modelling"]], "Models": [[233, "models"], [464, "models"]], "Models with energy dependent morphology": [[464, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[464, "models-with-shared-parameter"]], "Modifying Data": [[461, "modifying-data"]], "Modifying model parameters": [[464, "modifying-model-parameters"]], "MooreProfile": [[24, "mooreprofile"]], "Morphological energy dependence estimation": [[443, "morphological-energy-dependence-estimation"]], "Motivation": [[387, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[441, "multi-instrument-joint-3d-and-1d-analysis"]], "NFWProfile": [[25, "nfwprofile"]], "N_JOBS_DEFAULT": [[306, "n-jobs-default"]], "Naima spectral model": [[529, "naima-spectral-model"]], "NaimaSpectralModel": [[234, "naimaspectralmodel"]], "New features": [[421, "new-features"], [424, "new-features"], [425, "new-features"]], "Next steps": [[468, "next-steps"], [470, "next-steps"], [471, "next-steps"]], "Night-wise LC estimation": [[450, "night-wise-lc-estimation"]], "Norm Spectral Models": [[464, "norm-spectral-models"]], "Notations": [[555, "notations"]], "Notes": [[554, "notes"]], "OGIPDatasetReader": [[101, "ogipdatasetreader"]], "OGIPDatasetWriter": [[102, "ogipdatasetwriter"]], "Object text repr, str and info": [[359, "object-text-repr-str-and-info"]], "Objective": [[437, "objective"], [438, "objective"], [444, "objective"], [445, "objective"], [465, "objective"]], "Objectives": [[369, "objectives"]], "Observation": [[84, "observation"]], "Observation duration and effective livetime": [[460, "observation-duration-and-effective-livetime"]], "Observation selection": [[433, "observation-selection"], [477, "observation-selection"]], "ObservationEventSampler": [[103, "observationeventsampler"]], "ObservationFilter": [[85, "observationfilter"]], "ObservationTable": [[86, "observationtable"]], "Observational clustering": [[465, "observational-clustering"]], "Observations": [[87, "observations"]], "ObservationsEventsSampler": [[88, "observationseventssampler"]], "Obtain the data to use": [[443, "obtain-the-data-to-use"]], "Obtain the observations": [[465, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[428, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[389, "old-example-data"]], "On-Off analysis": [[435, "on-off-analysis"]], "Opening the data": [[453, "opening-the-data"]], "Optional dependencies": [[358, "optional-dependencies"], [376, "optional-dependencies"]], "Other folders": [[389, "other-folders"]], "Other packages": [[481, "other-packages"]], "Other repositories": [[389, "other-repositories"]], "Others": [[359, "others"], [389, "others"]], "Outlook": [[371, "outlook"], [373, "outlook"], [375, "outlook"], [376, "outlook"], [378, "outlook"], [379, "outlook"], [380, "outlook"], [383, "outlook"]], "Output in Jupyter notebook cells": [[359, "output-in-jupyter-notebook-cells"]], "Overview": [[500, "overview"], [502, "overview"], [503, "overview"]], "PIG 1 - PIG purpose and guidelines": [[364, "pig-1-pig-purpose-and-guidelines"]], "PIG 10 - Regions": [[373, "pig-10-regions"]], "PIG 11 - Light curves": [[374, "pig-11-light-curves"]], "PIG 12 - High level interface": [[375, "pig-12-high-level-interface"]], "PIG 13 - Gammapy dependencies and distribution": [[376, "pig-13-gammapy-dependencies-and-distribution"]], "PIG 14 - Uncertainty estimation": [[377, "pig-14-uncertainty-estimation"]], "PIG 16 - Gammapy package structure": [[378, "pig-16-gammapy-package-structure"]], "PIG 18 - Documentation": [[379, "pig-18-documentation"]], "PIG 19 - Gammapy package structure follow up": [[380, "pig-19-gammapy-package-structure-follow-up"]], "PIG 2 - Organization of low level analysis code": [[365, "pig-2-organization-of-low-level-analysis-code"]], "PIG 20 - Global Model API": [[381, "pig-20-global-model-api"]], "PIG 21 - Models improvements": [[382, "pig-21-models-improvements"]], "PIG 22 - Unified flux estimators API": [[383, "pig-22-unified-flux-estimators-api"]], "PIG 23 - Gammapy release cycle and version numbering": [[384, "pig-23-gammapy-release-cycle-and-version-numbering"]], "PIG 24 - Authorship policy": [[385, "pig-24-authorship-policy"]], "PIG 25 - Metadata container for Gammapy": [[386, "pig-25-metadata-container-for-gammapy"]], "PIG 26 - Model Priors API": [[387, "pig-26-model-priors-api"]], "PIG 3 - Plan for dropping Python 2.7 support": [[366, "pig-3-plan-for-dropping-python-2-7-support"]], "PIG 4 - Setup for tutorial notebooks and data": [[367, "pig-4-setup-for-tutorial-notebooks-and-data"]], "PIG 5 - Gammapy 1.0 roadmap": [[368, "pig-5-gammapy-1-0-roadmap"]], "PIG 6 - CTA observation handling": [[369, "pig-6-cta-observation-handling"]], "PIG 7 - Models": [[370, "pig-7-models"]], "PIG 8 - Datasets": [[371, "pig-8-datasets"]], "PIG 9 - Event sampling": [[372, "pig-9-event-sampling"]], "PIG review": [[364, "pig-review"]], "PIG status": [[364, "pig-status"]], "PIGs": [[363, "pigs"]], "POOL_KWARGS_DEFAULT": [[307, "pool-kwargs-default"]], "PSF": [[459, "psf"], [469, "psf"]], "PSF3D": [[150, "psf3d"]], "PSFKernel": [[151, "psfkernel"]], "PSFKing": [[152, "psfking"]], "PSFMap": [[153, "psfmap"]], "PWN": [[50, "pwn"]], "Package / API": [[473, "package-api"]], "Package and docs": [[389, "package-and-docs"]], "Package structure and dependencies": [[412, "package-structure-and-dependencies"]], "Paczynski1990": [[36, "paczynski1990"]], "Paczynski1990Velocity": [[37, "paczynski1990velocity"]], "Papers": [[368, "papers"]], "Parallel evaluation of datasets": [[371, "parallel-evaluation-of-datasets"]], "Parameter": [[201, "parameter"]], "ParameterEstimator": [[125, "parameterestimator"]], "Parameters": [[202, "parameters"]], "ParametricPSF": [[154, "parametricpsf"]], "Perform spectral model fitting": [[429, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[478, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[429, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[372, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[547, "phase-curve-temporal-model"]], "Phase-resolved map": [[453, "phase-resolved-map"]], "Phase-resolved spectrum": [[453, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[164, "phasebackgroundmaker"]], "Phasogram": [[453, "phasogram"]], "Piecewise  norm spectral model": [[530, "piecewise-norm-spectral-model"]], "Piecewise norm spatial model": [[513, "piecewise-norm-spatial-model"]], "PiecewiseNormSpatialModel": [[235, "piecewisenormspatialmodel"]], "PiecewiseNormSpectralModel": [[236, "piecewisenormspectralmodel"]], "Pixel coordinate convention": [[359, "pixel-coordinate-convention"]], "Plot": [[442, "plot"]], "Plot off regions": [[432, "plot-off-regions"]], "Plot resulting images": [[436, "plot-resulting-images"]], "Plot the fitted spectrum": [[478, "plot-the-fitted-spectrum"]], "Plotting Results": [[446, "plotting-results"]], "Plotting a RegionGeom": [[506, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[463, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[433, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[506, "plotting-the-map-content"]], "Plotting the results": [[443, "plotting-the-results"]], "Plotting the underlying region": [[506, "plotting-the-underlying-region"]], "Point Spread Function": [[499, "point-spread-function"]], "Point source sensitivity": [[428, "point-source-sensitivity"]], "Point spatial model": [[514, "point-spatial-model"]], "Point spread function": [[468, "point-spread-function"]], "PointSpatialModel": [[237, "pointspatialmodel"]], "PointingInfo": [[89, "pointinginfo"]], "PointingMode": [[90, "pointingmode"]], "Possible implementations": [[385, "possible-implementations"]], "Post release": [[388, "post-release"]], "Power Law Fit": [[430, "power-law-fit"]], "Power law 2 spectral model": [[532, "power-law-2-spectral-model"]], "Power law norm spectral model": [[533, "power-law-norm-spectral-model"]], "Power law spectral model": [[531, "power-law-spectral-model"]], "PowerLaw temporal model": [[545, "powerlaw-temporal-model"]], "PowerLaw2SpectralModel": [[238, "powerlaw2spectralmodel"]], "PowerLawNormSpectralModel": [[239, "powerlawnormspectralmodel"]], "PowerLawSpectralModel": [[240, "powerlawspectralmodel"]], "PowerLawTemporalModel": [[241, "powerlawtemporalmodel"]], "Predicted counts": [[489, "predicted-counts"]], "Prepare and run the event sampler": [[445, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[429, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[478, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[429, "prerequisites"], [430, "prerequisites"], [432, "prerequisites"], [433, "prerequisites"], [434, "prerequisites"], [435, "prerequisites"], [437, "prerequisites"], [441, "prerequisites"], [443, "prerequisites"], [444, "prerequisites"], [445, "prerequisites"], [446, "prerequisites"], [448, "prerequisites"], [449, "prerequisites"], [450, "prerequisites"], [451, "prerequisites"], [452, "prerequisites"], [458, "prerequisites"], [462, "prerequisites"], [463, "prerequisites"], [466, "prerequisites"], [477, "prerequisites"], [478, "prerequisites"]], "Pretty-print source information": [[456, "pretty-print-source-information"]], "PrimaryFlux": [[26, "primaryflux"]], "PriorParameter": [[203, "priorparameter"]], "PriorParameters": [[204, "priorparameters"]], "Priors": [[466, "priors"]], "Profile Estimation": [[446, "profile-estimation"]], "Profile Likelihood": [[556, "profile-likelihood"]], "Profiles": [[455, "profiles"]], "Project Management": [[368, "project-management"]], "Project setup": [[389, "project-setup"]], "Projects": [[368, "projects"]], "Proposal": [[367, "proposal"], [369, "proposal"], [370, "proposal"], [371, "proposal"], [372, "proposal"], [373, "proposal"], [374, "proposal"], [375, "proposal"], [377, "proposal"], [378, "proposal"], [379, "proposal"], [380, "proposal"], [381, "proposal"], [382, "proposal"]], "Proposal of API for flux estimate results": [[383, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[446, "proposed-approach"]], "Proposed approach": [[429, "proposed-approach"], [430, "proposed-approach"], [433, "proposed-approach"], [435, "proposed-approach"], [436, "proposed-approach"], [437, "proposed-approach"], [438, "proposed-approach"], [441, "proposed-approach"], [444, "proposed-approach"], [445, "proposed-approach"], [448, "proposed-approach"], [449, "proposed-approach"], [450, "proposed-approach"], [451, "proposed-approach"], [452, "proposed-approach"], [458, "proposed-approach"], [462, "proposed-approach"], [463, "proposed-approach"], [465, "proposed-approach"], [477, "proposed-approach"], [478, "proposed-approach"]], "Proposed class diagram": [[369, "proposed-class-diagram"]], "Proposed metadata classes": [[386, "proposed-metadata-classes"]], "Proposed solution": [[386, "proposed-solution"]], "Pull Requests": [[412, "pull-requests"], [413, "pull-requests"], [421, "pull-requests"], [422, "pull-requests"], [423, "pull-requests"], [424, "pull-requests"], [425, "pull-requests"]], "Pull requests": [[398, "pull-requests"], [399, "pull-requests"], [400, "pull-requests"], [401, "pull-requests"], [402, "pull-requests"], [403, "pull-requests"], [404, "pull-requests"], [405, "pull-requests"], [406, "pull-requests"], [407, "pull-requests"], [408, "pull-requests"], [409, "pull-requests"], [410, "pull-requests"], [411, "pull-requests"], [414, "pull-requests"], [415, "pull-requests"], [416, "pull-requests"], [417, "pull-requests"], [418, "pull-requests"], [419, "pull-requests"], [420, "pull-requests"]], "Pulsar": [[51, "pulsar"]], "Pulsar Source Models": [[485, "pulsar-source-models"]], "Pulsar Wind Nebula Source Models": [[486, "pulsar-wind-nebula-source-models"]], "Pulsar analysis": [[453, "pulsar-analysis"]], "Python": [[395, "id2"]], "Python scripts": [[395, "python-scripts"]], "Python version support": [[359, "python-version-support"]], "RadMax2D": [[155, "radmax2d"]], "Read and Introduce Data": [[446, "read-and-introduce-data"]], "Read in input images": [[436, "read-in-input-images"]], "Read the datasets": [[463, "read-the-datasets"]], "Read the energy-dependent model": [[445, "read-the-energy-dependent-model"]], "Reading Maps": [[461, "reading-maps"]], "Reading and Writing": [[461, "reading-and-writing"]], "Reading and writing masks": [[462, "reading-and-writing-masks"]], "Reading different datasets": [[441, "reading-different-datasets"]], "RecoPSFMap": [[156, "recopsfmap"]], "Recommended Setup": [[391, "recommended-setup"], [393, "recommended-setup"]], "Reference": [[379, "reference"], [553, "reference"]], "References": [[552, "publications"]], "Reflected regions background": [[460, "reflected-regions-background"], [502, "reflected-regions-background"]], "ReflectedRegionsBackgroundMaker": [[165, "reflectedregionsbackgroundmaker"]], "ReflectedRegionsFinder": [[166, "reflectedregionsfinder"]], "Region arguments": [[373, "region-arguments"]], "RegionGeom": [[191, "regiongeom"], [506, "regiongeom"]], "RegionGeom and RegionNDMap": [[506, "regiongeom-and-regionndmap"]], "RegionGeom and coordinates": [[506, "regiongeom-and-coordinates"]], "RegionNDMap": [[192, "regionndmap"], [506, "regionndmap"]], "RegionsFinder": [[167, "regionsfinder"]], "Relation to WCS geometries": [[506, "relation-to-wcs-geometries"]], "Release notes": [[359, "release-notes"], [397, "release-notes"]], "Release preparation, feature freeze": [[384, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[384, "release-scheduling-and-lts"]], "Releases": [[368, "releases"], [385, "releases"], [389, "releases"]], "Releasing the final version of the major release": [[388, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[388, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[463, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[359, "removing-an-attribute"]], "Renaming an argument": [[359, "renaming-an-argument"]], "Required dependencies": [[358, "required-dependencies"], [376, "required-dependencies"]], "Requirements": [[386, "requirements"]], "Resampling datasets": [[457, "resampling-datasets"]], "Resolve gammapy.detect": [[380, "resolve-gammapy-detect"]], "Results": [[428, "results"]], "Results exploration": [[433, "results-exploration"]], "Ring background": [[460, "ring-background"], [503, "ring-background"]], "Ring background map": [[438, "ring-background-map"]], "RingBackgroundMaker": [[168, "ringbackgroundmaker"]], "Rotated regions": [[373, "rotated-regions"]], "Run Estimation": [[446, "run-estimation"]], "Run Estimator": [[443, "run-estimator"]], "Run data reduction chain": [[432, "run-data-reduction-chain"], [434, "run-data-reduction-chain"]], "Run the 1D data reduction": [[450, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[450, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[553, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[362, "running-tests-building-documentation"]], "Running the Data Reduction": [[433, "running-the-data-reduction"]], "Running the analysis": [[477, "running-the-analysis"]], "Running the estimation": [[433, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[433, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[433, "running-the-fit"]], "Running the light curve extraction in 1D": [[450, "running-the-light-curve-extraction-in-1d"]], "SNR": [[52, "snr"]], "SNRTrueloveMcKee": [[53, "snrtruelovemckee"]], "SPATIAL_MODEL_REGISTRY": [[242, "spatial-model-registry"]], "SPECTRAL_MODEL_REGISTRY": [[243, "spectral-model-registry"]], "Safe data range definition": [[501, "safe-data-range-definition"]], "Safe data range handling": [[460, "safe-data-range-handling"]], "SafeMaskMaker": [[169, "safemaskmaker"]], "Sample a source with energy-dependent temporal evolution": [[445, "sample-a-source-with-energy-dependent-temporal-evolution"]], "Sampling methods": [[372, "sampling-methods"]], "Sampling the source and background events": [[444, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[433, "save-dataset-to-disk"], [477, "save-dataset-to-disk"], [478, "save-dataset-to-disk"]], "ScaleSpectralModel": [[244, "scalespectralmodel"]], "ScaledRegularGridInterpolator": [[300, "scaledregulargridinterpolator"]], "Scripts": [[473, "scripts"]], "Select a catalog subset": [[456, "select-a-catalog-subset"]], "Select a source": [[456, "select-a-source"]], "Select observations": [[442, "select-observations"]], "Select the ON region": [[429, "select-the-on-region"]], "Select the data": [[429, "select-the-data"], [451, "select-the-data"]], "Selecting models contributing to a given region": [[463, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[463, "selecting-models-from-a-list"]], "SensitivityEstimator": [[126, "sensitivityestimator"]], "Serialisation": [[387, "serialisation"], [459, "serialisation"], [459, "id1"], [459, "id2"], [469, "serialisation"]], "Serialisation and I/O": [[446, "serialisation-and-i-o"]], "Serialisation of datasets": [[489, "serialisation-of-datasets"]], "Serialisation of the fit result": [[433, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[433, "serialisation-of-the-results"]], "Serialising models": [[463, "serialising-models"]], "Serialization": [[386, "serialization"]], "Setting fitting parameters": [[433, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[477, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[477, "setting-the-background-normalization-maker"]], "Setting the data to use": [[477, "setting-the-data-to-use"]], "Setting the exclusion mask": [[433, "setting-the-exclusion-mask"], [477, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[477, "setting-the-reduced-datasets-geometry"]], "Setup": [[428, "setup"], [429, "setup"], [430, "setup"], [432, "setup"], [433, "setup"], [434, "setup"], [435, "setup"], [436, "setup"], [437, "setup"], [438, "setup"], [442, "setup"], [443, "setup"], [444, "setup"], [445, "setup"], [446, "setup"], [449, "setup"], [450, "setup"], [451, "setup"], [452, "setup"], [455, "setup"], [457, "setup"], [460, "setup"], [461, "setup"], [462, "setup"], [463, "setup"], [464, "setup"], [468, "setup"], [469, "setup"], [477, "setup"], [478, "setup"], [479, "setup"]], "Shell spatial model": [[515, "shell-spatial-model"]], "Shell2 spatial model": [[516, "shell2-spatial-model"]], "Shell2SpatialModel": [[245, "shell2spatialmodel"]], "ShellSpatialModel": [[246, "shellspatialmodel"]], "Show images": [[442, "show-images"]], "Show the results tables": [[443, "show-the-results-tables"]], "Show various observation quantities": [[465, "show-various-observation-quantities"]], "SimplePulsar": [[54, "simplepulsar"]], "Simplify YAML Parameter Representation": [[382, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[382, "simplify-yaml-representation"]], "Simulate multiple event lists": [[444, "simulate-multiple-event-lists"]], "Simulating a light curve": [[452, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[452, "simulating-and-fitting-a-time-varying-source"]], "Simulation": [[448, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[371, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[435, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[546, "sine-temporal-model"]], "SineTemporalModel": [[247, "sinetemporalmodel"]], "Skip unit tests for some Astropy versions": [[359, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[373, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[505, "sky-maps-dl4"]], "SkyModel": [[248, "skymodel"], [464, "skymodel"]], "Smooth broken power law spectral model": [[534, "smooth-broken-power-law-spectral-model"]], "SmoothBrokenPowerLawSpectralModel": [[249, "smoothbrokenpowerlawspectralmodel"]], "Some terminology": [[369, "some-terminology"]], "Source Detection": [[442, "source-detection"]], "Source candidates": [[436, "source-candidates"]], "Source catalogs": [[456, "source-catalogs"], [479, "source-catalogs"], [488, "source-catalogs"]], "Source detection and significance maps": [[436, "source-detection-and-significance-maps"]], "Source information": [[456, "source-information"]], "Source models": [[456, "source-models"], [468, "source-models"]], "Source object": [[456, "source-object"]], "Source statistic": [[432, "source-statistic"]], "SourceCatalog": [[56, "sourcecatalog"]], "SourceCatalog1LHAASO": [[57, "sourcecatalog1lhaaso"]], "SourceCatalog2FHL": [[58, "sourcecatalog2fhl"]], "SourceCatalog2HWC": [[59, "sourcecatalog2hwc"]], "SourceCatalog3FGL": [[60, "sourcecatalog3fgl"]], "SourceCatalog3FHL": [[61, "sourcecatalog3fhl"]], "SourceCatalog3HWC": [[62, "sourcecatalog3hwc"]], "SourceCatalog4FGL": [[63, "sourcecatalog4fgl"]], "SourceCatalogGammaCat": [[64, "sourcecataloggammacat"]], "SourceCatalogHGPS": [[65, "sourcecataloghgps"]], "SourceCatalogLargeScaleHGPS": [[66, "sourcecataloglargescalehgps"]], "SourceCatalogObject": [[67, "sourcecatalogobject"]], "SourceCatalogObject1LHAASO": [[68, "sourcecatalogobject1lhaaso"]], "SourceCatalogObject2FHL": [[69, "sourcecatalogobject2fhl"]], "SourceCatalogObject2HWC": [[70, "sourcecatalogobject2hwc"]], "SourceCatalogObject3FGL": [[71, "sourcecatalogobject3fgl"]], "SourceCatalogObject3FHL": [[72, "sourcecatalogobject3fhl"]], "SourceCatalogObject3HWC": [[73, "sourcecatalogobject3hwc"]], "SourceCatalogObject4FGL": [[74, "sourcecatalogobject4fgl"]], "SourceCatalogObjectGammaCat": [[75, "sourcecatalogobjectgammacat"]], "SourceCatalogObjectHGPS": [[76, "sourcecatalogobjecthgps"]], "SourceCatalogObjectHGPSComponent": [[77, "sourcecatalogobjecthgpscomponent"]], "SourceIRFModel": [[370, "sourceirfmodel"]], "Spatial analysis": [[442, "spatial-analysis"]], "Spatial models": [[464, "spatial-models"], [507, "spatial-models"]], "SpatialIRFModel": [[370, "spatialirfmodel"]], "SpatialModel": [[250, "spatialmodel"]], "Special cases": [[556, "special-cases"]], "Specificities of the HGPS catalog": [[456, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[382, "spectral-absorption-model"]], "Spectral Norm Models": [[382, "spectral-norm-models"]], "Spectral analysis": [[432, "spectral-analysis"]], "Spectral analysis of extended sources": [[429, "spectral-analysis-of-extended-sources"]], "Spectral analysis with energy-dependent directional cuts": [[434, "spectral-analysis-with-energy-dependent-directional-cuts"]], "Spectral analysis with the HLI": [[433, "spectral-analysis-with-the-hli"]], "Spectral models": [[464, "spectral-models"], [507, "spectral-models"]], "Spectral models and flux points": [[479, "spectral-models-and-flux-points"]], "Spectral points": [[442, "spectral-points"]], "SpectralIRFModel": [[370, "spectralirfmodel"]], "SpectralModel": [[251, "spectralmodel"]], "Spectrum": [[442, "spectrum"]], "Spectrum dataset": [[460, "spectrum-dataset"]], "SpectrumDataset": [[104, "spectrumdataset"], [371, "spectrumdataset"], [457, "spectrumdataset"]], "SpectrumDatasetMaker": [[170, "spectrumdatasetmaker"]], "SpectrumDatasetOnOff": [[105, "spectrumdatasetonoff"], [371, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[360, "sphinx-gallery-extension"]], "Spiral arm models": [[483, "spiral-arm-models"]], "Stack observations": [[432, "stack-observations"]], "Stacked analysis": [[440, "stacked-analysis"]], "Stacking Multiple Datasets": [[489, "stacking-multiple-datasets"]], "Statistical utility functions": [[555, "statistical-utility-functions"]], "Status": [[369, "status"], [378, "status"]], "Storing the energy dispersion information as a function of sky position": [[497, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[374, "storing-the-results-and-further-studies"]], "Sub-packages": [[482, "sub-packages"]], "Suggestions": [[385, "suggestions"]], "Summary": [[398, "summary"], [399, "summary"], [400, "summary"], [401, "summary"], [402, "summary"], [403, "summary"], [404, "summary"], [405, "summary"], [406, "summary"], [407, "summary"], [408, "summary"], [409, "summary"], [410, "summary"], [411, "summary"], [412, "summary"], [413, "summary"], [414, "summary"], [415, "summary"], [416, "summary"], [417, "summary"], [418, "summary"], [419, "summary"], [420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [440, "summary"], [469, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[537, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr1-and-dr2"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[536, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr3"]], "Super exponential cutoff power law model used for 3FGL": [[535, "super-exponential-cutoff-power-law-model-used-for-3fgl"]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[252, "superexpcutoffpowerlaw3fglspectralmodel"]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[253, "superexpcutoffpowerlaw4fgldr3spectralmodel"]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[254, "superexpcutoffpowerlaw4fglspectralmodel"]], "Supernova Remnant Models": [[487, "supernova-remnant-models"]], "Support for Asymmetric IRFs": [[459, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[384, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[475, "survey-map-script"]], "Survey panel plots": [[558, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[255, "temporal-model-registry"]], "TS map estimation": [[436, "ts-map-estimation"]], "TSMapEstimator": [[127, "tsmapestimator"]], "Task List": [[371, "task-list"]], "Task list": [[370, "task-list"], [372, "task-list"], [373, "task-list"], [374, "task-list"], [375, "task-list"], [376, "task-list"]], "Template spatial model": [[517, "template-spatial-model"]], "Template spectral model": [[538, "template-spectral-model"]], "TemplateNDSpatialModel": [[256, "templatendspatialmodel"]], "TemplateNDSpectralModel": [[257, "templatendspectralmodel"]], "TemplateNPredModel": [[258, "templatenpredmodel"]], "TemplatePhaseCurveTemporalModel": [[259, "templatephasecurvetemporalmodel"]], "TemplateSpatialModel": [[260, "templatespatialmodel"]], "TemplateSpectralModel": [[261, "templatespectralmodel"]], "Temporal models": [[464, "temporal-models"], [507, "temporal-models"]], "TemporalModel": [[262, "temporalmodel"]], "Testing of plotting functions": [[359, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[365, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[443, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[389, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[389, "the-gammapy-extra-repository"]], "The index tables": [[490, "the-index-tables"]], "The reflected region finder": [[502, "the-reflected-region-finder"]], "The results for testing energy dependence": [[443, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[443, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[441, "the-setup"], [458, "the-setup"], [466, "the-setup"]], "Theta squared event distribution": [[471, "theta-squared-event-distribution"]], "Time": [[473, "time"]], "Time bin preparation": [[374, "time-bin-preparation"]], "Time bins": [[374, "time-bins"]], "Time differences": [[557, "time-differences"]], "Time format and scale": [[557, "time-format-and-scale"]], "Time handling in Gammapy": [[557, "time-handling-in-gammapy"]], "Time variable source using a lightcurve": [[444, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[193, "timemapaxis"], [461, "timemapaxis"]], "Timing Analysis": [[368, "timing-analysis"]], "Troubleshooting": [[394, "troubleshooting"], [553, "troubleshooting"]], "Tutorial overview": [[443, "tutorial-overview"], [468, "tutorial-overview"]], "Tutorials": [[379, "tutorials"], [473, "tutorials"]], "Tutorials Overview": [[391, "tutorials-overview"]], "Type validation": [[386, "type-validation"]], "Types of supported datasets": [[489, "types-of-supported-datasets"]], "Unification of flux estimators?": [[383, "unification-of-flux-estimators"]], "Unify calling interface for models": [[370, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[506, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[387, "use-cases"]], "Use cases / scenarios": [[369, "use-cases-scenarios"]], "User guide": [[494, "user-guide"]], "User perspective": [[366, "user-perspective"]], "Using Anaconda / Miniconda": [[392, "using-anaconda-miniconda"]], "Using Factory Methods": [[461, "using-factory-methods"]], "Using Gammapy": [[395, "using-gammapy"]], "Using Gammapy IRFs": [[459, "using-gammapy-irfs"]], "Using Mamba": [[392, "using-mamba"]], "Using YAML configuration files": [[477, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[433, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[433, "using-data-stored-into-your-computer"]], "Using gammapy.astro.source": [[484, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[488, "using-gammapy-catalog"]], "Using gammapy.data": [[490, "using-gammapy-data"]], "Using gammapy.datasets": [[489, "using-gammapy-datasets"], [492, "using-gammapy-datasets"]], "Using gammapy.estimators": [[491, "using-gammapy-estimators"]], "Using gammapy.irf": [[498, "using-gammapy-irf"]], "Using gammapy.makers": [[501, "using-gammapy-makers"]], "Using gammapy.maps": [[505, "using-gammapy-maps"]], "Using gammapy.modeling": [[550, "using-gammapy-modeling"]], "Using masks": [[457, "using-masks"]], "Using other package managers": [[392, "using-other-package-managers"]], "Using pip": [[392, "using-pip"]], "Using regions": [[502, "using-regions"]], "Using the reflected background estimator": [[502, "using-the-reflected-background-estimator"]], "Utility functions": [[557, "utility-functions"]], "ValleeSpiral": [[38, "valleespiral"]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[483, "velocity-distributions"]], "Venv Environments": [[390, "venv-environments"]], "Version 0.1": [[397, "version-0-1"]], "Version 0.10": [[397, "version-0-10"]], "Version 0.11": [[397, "version-0-11"]], "Version 0.12": [[397, "version-0-12"]], "Version 0.13": [[397, "version-0-13"]], "Version 0.14": [[397, "version-0-14"]], "Version 0.15": [[397, "version-0-15"]], "Version 0.16": [[397, "version-0-16"]], "Version 0.17": [[397, "version-0-17"]], "Version 0.18": [[397, "version-0-18"]], "Version 0.19": [[397, "version-0-19"]], "Version 0.2": [[397, "version-0-2"]], "Version 0.20": [[397, "version-0-20"]], "Version 0.20.1": [[397, "version-0-20-1"]], "Version 0.3": [[397, "version-0-3"]], "Version 0.4": [[397, "version-0-4"]], "Version 0.5": [[397, "version-0-5"]], "Version 0.6": [[397, "version-0-6"]], "Version 0.7": [[397, "version-0-7"]], "Version 0.8": [[397, "version-0-8"]], "Version 0.9": [[397, "version-0-9"]], "Version 1.0": [[397, "version-1-0"]], "Version 1.0.1": [[397, "version-1-0-1"]], "Version 1.0.2": [[397, "version-1-0-2"]], "Version 1.1": [[397, "version-1-1"]], "Version 1.2": [[397, "version-1-2"]], "Version numbering": [[384, "version-numbering"]], "Virtual Environments": [[390, "virtual-environments"]], "Visualing a RegionNDMap": [[506, "visualing-a-regionndmap"]], "Visualization": [[558, "visualization"]], "Visualizing and Plotting": [[461, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[554, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[555, "wstat-counts-statistic"]], "WStatCountsStatistic": [[273, "wstatcountsstatistic"]], "WcsGeom": [[194, "wcsgeom"]], "WcsMap": [[195, "wcsmap"]], "WcsNDMap": [[196, "wcsndmap"]], "What checks and conversions should I do for inputs?": [[359, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[364, "what-is-a-pig"]], "What is this?": [[362, "what-is-this"]], "What next?": [[430, "what-next"], [432, "what-next"], [436, "what-next"], [442, "what-next"], [450, "what-next"], [479, "what-next"]], "What others have": [[369, "what-others-have"]], "What we have": [[367, "what-we-have"], [375, "what-we-have"], [383, "what-we-have"]], "What\u2019s new?": [[399, "what-s-new"], [400, "what-s-new"], [401, "what-s-new"], [402, "what-s-new"], [403, "what-s-new"], [404, "what-s-new"], [405, "what-s-new"], [406, "what-s-new"], [407, "what-s-new"], [408, "what-s-new"], [409, "what-s-new"], [410, "what-s-new"], [412, "what-s-new"], [413, "what-s-new"], [415, "what-s-new"], [416, "what-s-new"], [417, "what-s-new"], [418, "what-s-new"], [419, "what-s-new"], [420, "what-s-new"]], "What\u2019s next": [[477, "whats-next"]], "What\u2019s next?": [[433, "whats-next"]], "Where should I import from?": [[359, "where-should-i-import-from"]], "WobbleRegionsFinder": [[171, "wobbleregionsfinder"]], "Working with event lists": [[490, "working-with-event-lists"]], "Write your own CLI": [[553, "write-your-own-cli"]], "Writing Maps": [[461, "writing-maps"]], "Writing a PIG": [[364, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[506, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[490, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[509, "yaml-representation"], [510, "yaml-representation"], [511, "yaml-representation"], [512, "yaml-representation"], [513, "yaml-representation"], [514, "yaml-representation"], [515, "yaml-representation"], [516, "yaml-representation"], [517, "yaml-representation"], [519, "yaml-representation"], [520, "yaml-representation"], [521, "yaml-representation"], [522, "yaml-representation"], [523, "yaml-representation"], [524, "yaml-representation"], [525, "yaml-representation"], [526, "yaml-representation"], [527, "yaml-representation"], [528, "yaml-representation"], [529, "yaml-representation"], [530, "yaml-representation"], [531, "yaml-representation"], [532, "yaml-representation"], [533, "yaml-representation"], [534, "yaml-representation"], [535, "yaml-representation"], [536, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"]], "YusifovKucuk2004": [[39, "yusifovkucuk2004"]], "YusifovKucuk2004B": [[40, "yusifovkucuk2004b"]], "ZhaoProfile": [[27, "zhaoprofile"]], "absolute_time": [[340, "absolute-time"]], "add_colorbar": [[347, "add-colorbar"]], "add_observed_parameters": [[41, "add-observed-parameters"]], "add_pulsar_parameters": [[42, "add-pulsar-parameters"]], "add_pwn_parameters": [[43, "add-pwn-parameters"]], "add_snr_parameters": [[44, "add-snr-parameters"]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, "analysis-high-level-interface"]], "annotate_heatmap": [[348, "annotate-heatmap"]], "apply_edisp": [[106, "apply-edisp"], [110, "apply-edisp"]], "arbitrary type input and validation": [[386, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[497, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[496, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[496, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[497, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[495, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[334, "assert-quantity-allclose"]], "assert_skycoord_allclose": [[335, "assert-skycoord-allclose"]], "assert_time_allclose": [[336, "assert-time-allclose"]], "astro - Astrophysics": [[1, "astro-astrophysics"]], "cartesian": [[289, "cartesian"]], "cash": [[274, "cash"]], "cash_sum_cython": [[275, "cash-sum-cython"]], "catalog - Source catalogs": [[2, "catalog-source-catalogs"]], "check": [[11, "gammapy-check"]], "codemeta.json": [[385, "codemeta-json"]], "colormap_hess": [[349, "colormap-hess"]], "colormap_milagro": [[350, "colormap-milagro"]], "compound_region_to_regions": [[319, "compound-region-to-regions"]], "compute_chisq": [[276, "compute-chisq"]], "compute_flux_doubling": [[277, "compute-flux-doubling"]], "compute_fpp": [[278, "compute-fpp"]], "compute_fvar": [[279, "compute-fvar"]], "compute_lightcurve_doublingtime": [[128, "compute-lightcurve-doublingtime"]], "compute_lightcurve_fpp": [[129, "compute-lightcurve-fpp"]], "compute_lightcurve_fvar": [[130, "compute-lightcurve-fvar"]], "config": [[11, "gammapy-analysis-config"]], "containment_radius": [[197, "containment-radius"]], "containment_region": [[198, "containment-region"]], "create_cosmic_ray_spectral_model": [[263, "create-cosmic-ray-spectral-model"]], "create_crab_spectral_model": [[264, "create-crab-spectral-model"]], "create_fermi_isotropic_diffuse_model": [[265, "create-fermi-isotropic-diffuse-model"]], "create_map_dataset_from_observation": [[107, "create-map-dataset-from-observation"]], "create_map_dataset_geoms": [[108, "create-map-dataset-geoms"]], "cstat": [[280, "cstat"]], "data": [[386, "data"]], "data - DL3 data and observations": [[3, "data-dl3-data-and-observations"]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, "datasets-reduced-datasets"]], "docs.gammapy.org": [[389, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[311, "draw"]], "earth_location_from_dict": [[298, "earth-location-from-dict"]], "estimate_exposure_reco_energy": [[131, "estimate-exposure-reco-energy"]], "estimators - High level estimators": [[5, "estimators-high-level-estimators"]], "f_cash_root_cython": [[281, "f-cash-root-cython"]], "find_peaks": [[132, "find-peaks"]], "find_peaks_in_flux_map": [[133, "find-peaks-in-flux-map"]], "fov_to_sky": [[290, "fov-to-sky"]], "galactic": [[291, "galactic"]], "gamLike": [[481, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[389, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_significance_maps": [[134, "get-combined-significance-maps"]], "get_images_paths": [[324, "get-images-paths"]], "get_irfs_features": [[91, "get-irfs-features"]], "get_random_state": [[312, "get-random-state"]], "get_rebinned_axis": [[135, "get-rebinned-axis"]], "get_wstat_gof_terms": [[282, "get-wstat-gof-terms"]], "get_wstat_mu_bkg": [[283, "get-wstat-mu-bkg"]], "hierarchical_clustering": [[286, "hierarchical-clustering"]], "hstack_columns": [[329, "hstack-columns"]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[266, "integrate-spectrum"]], "interpolate_profile": [[301, "interpolate-profile"]], "interpolation_scale": [[302, "interpolation-scale"]], "irf - Instrument response functions": [[7, "irf-instrument-response-functions"]], "load_irf_dict_from_file": [[157, "load-irf-dict-from-file"]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, "make-base-catalog-galactic"]], "make_catalog_random_positions_cube": [[46, "make-catalog-random-positions-cube"]], "make_catalog_random_positions_sphere": [[47, "make-catalog-random-positions-sphere"]], "make_concentric_annulus_sky_regions": [[320, "make-concentric-annulus-sky-regions"]], "make_counts_rad_max": [[172, "make-counts-rad-max"]], "make_edisp_kernel_map": [[173, "make-edisp-kernel-map"]], "make_edisp_map": [[174, "make-edisp-map"]], "make_effective_livetime_map": [[175, "make-effective-livetime-map"]], "make_map_background_irf": [[176, "make-map-background-irf"]], "make_map_exposure_true_energy": [[177, "make-map-exposure-true-energy"]], "make_observation_time_map": [[178, "make-observation-time-map"]], "make_orthogonal_rectangle_sky_regions": [[321, "make-orthogonal-rectangle-sky-regions"]], "make_path": [[325, "make-path"]], "make_psf_map": [[179, "make-psf-map"]], "make_theta_squared_table": [[180, "make-theta-squared-table"]], "makers - Data reduction": [[8, "makers-data-reduction"]], "maps - Sky maps": [[9, "maps-sky-maps"]], "modeling - Models and fitting": [[10, "modeling-models-and-fitting"]], "motion_since_birth": [[292, "motion-since-birth"]], "mpl_plot_check": [[337, "mpl-plot-check"]], "multiprocessing_manager": [[308, "multiprocessing-manager"]], "norm_bounds_cython": [[284, "norm-bounds-cython"]], "normalize": [[313, "normalize"]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[92, "observatory-locations"]], "pdf": [[314, "pdf"]], "plot_contour_line": [[351, "plot-contour-line"]], "plot_distribution": [[352, "plot-distribution"]], "plot_heatmap": [[353, "plot-heatmap"]], "plot_map_rgb": [[354, "plot-map-rgb"]], "plot_npred_signal": [[355, "plot-npred-signal"]], "plot_spectrum_datasets_off_regions": [[356, "plot-spectrum-datasets-off-regions"]], "plot_theta_squared_table": [[357, "plot-theta-squared-table"]], "polar": [[293, "polar"]], "pydantic": [[386, "pydantic"]], "radial_distributions": [[48, "radial-distributions"]], "read_hermes_cube": [[267, "read-hermes-cube"], [269, "read-hermes-cube"]], "read_yaml": [[326, "read-yaml"]], "recursive_merge_dicts": [[327, "recursive-merge-dicts"]], "region_to_frame": [[322, "region-to-frame"]], "regions_to_compound_region": [[323, "regions-to-compound-region"]], "requires_data": [[338, "requires-data"]], "requires_dependency": [[339, "requires-dependency"]], "resample_energy_edges": [[136, "resample-energy-edges"]], "run": [[11, "gammapy-analysis-run"]], "run_multiprocessing": [[309, "run-multiprocessing"]], "sample_powerlaw": [[315, "sample-powerlaw"]], "sample_sphere": [[316, "sample-sphere"]], "sample_sphere_distance": [[317, "sample-sphere-distance"]], "sample_times": [[318, "sample-times"]], "scale_plot_flux": [[268, "scale-plot-flux"]], "scripts - Command line tools": [[11, "scripts-command-line-tools"]], "select_nested_models": [[270, "select-nested-models"]], "sky_to_fov": [[294, "sky-to-fov"]], "split_dataset": [[109, "split-dataset"], [111, "split-dataset"]], "standard_scaler": [[287, "standard-scaler"]], "standardise_unit": [[344, "standardise-unit"]], "stat_profile_ul_scipy": [[271, "stat-profile-ul-scipy"]], "stats - Statistics": [[12, "stats-statistics"]], "table_row_to_dict": [[330, "table-row-to-dict"]], "table_standardise_units_copy": [[331, "table-standardise-units-copy"]], "table_standardise_units_inplace": [[332, "table-standardise-units-inplace"]], "the base class": [[386, "the-base-class"]], "time_ref_from_dict": [[341, "time-ref-from-dict"]], "time_ref_to_dict": [[342, "time-ref-to-dict"]], "time_relative_to_ref": [[343, "time-relative-to-ref"]], "trapz_loglog": [[299, "trapz-loglog"]], "unit_from_fits_image_hdu": [[345, "unit-from-fits-image-hdu"]], "utils - Utilities": [[13, "utils-utilities"]], "velocity_distributions": [[49, "velocity-distributions"]], "velocity_glon_glat": [[295, "velocity-glon-glat"]], "visualization - Plotting features": [[14, "visualization-plotting-features"]], "write_yaml": [[328, "write-yaml"]], "wstat": [[285, "wstat"]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.Fit", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/Variability_estimation", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/Variability_estimation.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[552, "term-1D-Analysis", true]], "3d analysis": [[552, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[300, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[340, "gammapy.utils.time.absolute_time", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[347, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[552, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[117, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[119, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[146, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[89, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[348, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[106, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[110, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[189, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[112, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[334, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[335, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[336, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[160, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[169, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[163, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[170, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "axes (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend_default (in module gammapy.utils.parallel)": [[303, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[137, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[138, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[139, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[552, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[289, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[552, "term-Cash", true]], "cash() (in module gammapy.stats)": [[274, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[275, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[272, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[333, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[349, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[350, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.ColumnClass", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[319, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[206, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[276, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[273, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[273, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[277, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[278, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[279, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[128, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[129, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[130, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[273, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[112, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[115, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[123, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[125, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[126, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[208, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[209, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[210, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[197, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[198, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[85, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[115, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[123, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[189, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[232, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[199, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[232, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.covariance", false]], "create() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[84, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[183, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[189, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[191, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[195, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[231, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[248, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[263, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[264, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[265, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[107, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[108, "gammapy.datasets.create_map_dataset_geoms", false]], "crop() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[280, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[288, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[151, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[552, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[94, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[93, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[211, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[95, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[159, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[78, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[78, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[78, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[63, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[64, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.dict", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[212, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[552, "term-DL3", true]], "dl4": [[552, "term-DL4", true]], "dl5": [[552, "term-DL5", true]], "dl6": [[552, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[311, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[90, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[298, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[214, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[552, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[140, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[141, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[142, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[143, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[145, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[273, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[131, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[552, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[115, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[113, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[212, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[226, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[246, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[247, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[152, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[152, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[98, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[103, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[85, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[98, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[103, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[79, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[80, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[116, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[124, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[281, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[85, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[85, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[132, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[133, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[200, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[81, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[81, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[81, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[117, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[118, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[119, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[96, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[121, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[552, "term-FoV", true]], "fov background": [[552, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[290, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[146, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[160, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[219, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[232, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[187, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[96, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[211, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[212, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[226, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[231, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[232, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[233, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[237, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[246, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[247, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[248, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[250, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[251, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[258, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[262, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[202, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[204, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[78, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[78, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[199, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[78, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[81, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[151, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[183, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[184, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[190, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[192, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[195, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[196, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[137, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[138, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[139, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[147, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[148, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[154, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[150, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[152, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[181, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[183, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[190, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[191, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[195, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[83, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[86, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[212, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[226, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[232, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[237, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[246, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[247, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[248, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[250, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[251, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[258, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[262, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[212, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[237, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[246, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[250, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[212, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[191, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[151, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[79, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[87, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[183, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[185, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[186, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[195, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[199, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[202, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[204, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[137, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[138, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[139, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[147, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[154, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[150, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[152, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[185, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[187, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[187, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[211, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[233, "gammapy.modeling.models.Models.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[232, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[552, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[291, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[181, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[190, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[81, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[89, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[101, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[102, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[296, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[81, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[89, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[324, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[182, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[91, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[312, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[112, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[199, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[101, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[282, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[283, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.groups", false]], "gti": [[552, "term-GTI", true]], "gti (class in gammapy.data)": [[82, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[83, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[296, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[286, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[552, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[182, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[183, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[184, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[329, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[87, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[122, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[123, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[296, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[273, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[266, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[301, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[302, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[310, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[552, "term-IRF", true]], "irf (class in gammapy.irf)": [[147, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[149, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[148, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.is_norm", false]], "is_norm (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.is_norm", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[552, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[168, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[185, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[297, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[124, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[85, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[296, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[157, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "lon (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[320, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[164, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[164, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[172, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[173, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[174, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[175, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[176, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[177, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[168, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[178, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[321, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[325, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[179, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[180, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[552, "term-Maker", true]], "maker (class in gammapy.makers)": [[162, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[161, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[186, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[187, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[188, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[189, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[97, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[98, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[163, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[99, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[100, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[346, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[190, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[94, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[148, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "masked (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.match_by_name", false]], "max (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.max", false]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "met": [[552, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[160, "gammapy.makers.FoVBackgroundMaker.method", false]], "method_default (in module gammapy.utils.parallel)": [[304, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[305, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.min", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[81, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[229, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[292, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[337, "gammapy.utils.testing.mpl_plot_check", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[308, "gammapy.utils.parallel.multiprocessing_manager", false]], "muoneff (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.muoneff", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[273, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[88, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[306, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[273, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[273, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[67, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[94, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.nest", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[284, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_max (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_max", false]], "norm_max (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_max", false]], "norm_max (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_max", false]], "norm_min (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_min", false]], "norm_min (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_min", false]], "norm_min (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_min", false]], "norm_n_values (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_n_values", false]], "norm_parameters (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.norm_parameters", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_ul", false]], "norm_values (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_values", false]], "norm_values (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_values", false]], "norm_values (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_values", false]], "normalize() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[313, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[78, "gammapy.data.DataStore.obs_ids", false]], "obs_info (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.obs_info", false]], "observation (class in gammapy.data)": [[84, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[103, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[85, "gammapy.data.ObservationFilter", false]], "observations (class in gammapy.data)": [[87, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[88, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[86, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[92, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[101, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[102, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.optimize", false]], "order (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[273, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[88, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[201, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[202, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[232, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[154, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[296, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[314, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[164, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[193, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[346, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[351, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[199, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[352, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[353, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[354, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[355, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[346, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[356, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[357, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[90, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[89, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[90, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[293, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[307, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[67, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[63, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[64, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[203, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[204, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.projection", false]], "psf": [[552, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[150, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[151, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[151, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[152, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[153, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[146, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[155, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[79, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[81, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[83, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[84, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[86, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[89, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[95, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[96, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[101, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[137, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[138, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[139, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[147, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[148, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[154, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[150, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[151, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[152, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[183, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[184, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[190, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[195, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[196, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[211, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[233, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[267, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[269, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[326, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[232, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.reassign", false]], "reco energy": [[552, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[156, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[327, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[552, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[166, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[322, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[191, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[192, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[323, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[167, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[148, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[338, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[339, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.reverse", false]], "ring background": [[552, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[168, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[552, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[67, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[63, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[64, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[88, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[115, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[123, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[162, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[164, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[166, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[167, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[168, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[171, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[333, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[309, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[169, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[310, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[310, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[315, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[316, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[317, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[318, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[268, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[300, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[270, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[112, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[115, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[123, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[125, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[126, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[126, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[199, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[88, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[294, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[63, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[64, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[242, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[243, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[104, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[170, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[105, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[109, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[111, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[273, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[552, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[287, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[344, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[273, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[273, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[271, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "success (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[273, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[330, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[331, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[332, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[63, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[64, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[94, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[101, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[102, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[112, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[115, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[123, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[125, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[126, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[148, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[160, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[162, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[163, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[164, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[168, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[169, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[170, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "target_radec (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[255, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[341, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[342, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[343, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[226, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[247, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[262, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[193, "gammapy.maps.TimeMapAxis", false]], "tmid (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[232, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[81, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[189, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[63, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[64, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_yaml", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[299, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[552, "term-True-Energy", true]], "ts": [[552, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[273, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[127, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[232, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[232, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "union() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[345, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[295, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[194, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[195, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[196, "gammapy.maps.WcsNDMap", false]], "width (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[171, "gammapy.makers.WobbleRegionsFinder", false]], "write (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.write", false]], "write() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[328, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[552, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[285, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[273, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog3FGL"], [61, 1, 1, "", "SourceCatalog3FHL"], [62, 1, 1, "", "SourceCatalog3HWC"], [63, 1, 1, "", "SourceCatalog4FGL"], [64, 1, 1, "", "SourceCatalogGammaCat"], [65, 1, 1, "", "SourceCatalogHGPS"], [66, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [67, 1, 1, "", "SourceCatalogObject"], [68, 1, 1, "", "SourceCatalogObject1LHAASO"], [69, 1, 1, "", "SourceCatalogObject2FHL"], [70, 1, 1, "", "SourceCatalogObject2HWC"], [71, 1, 1, "", "SourceCatalogObject3FGL"], [72, 1, 1, "", "SourceCatalogObject3FHL"], [73, 1, 1, "", "SourceCatalogObject3HWC"], [74, 1, 1, "", "SourceCatalogObject4FGL"], [75, 1, 1, "", "SourceCatalogObjectGammaCat"], [76, 1, 1, "", "SourceCatalogObjectHGPS"], [77, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[65, 2, 1, "", "description"], [65, 3, 1, "", "gaussian_component"], [65, 2, 1, "", "large_scale_component"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "table_associations"], [65, 2, 1, "", "table_components"], [65, 2, 1, "", "table_identifications"], [65, 2, 1, "", "table_large_scale_component"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[66, 3, 1, "", "evaluate"], [66, 3, 1, "", "peak_brightness"], [66, 3, 1, "", "peak_brightness_error"], [66, 3, 1, "", "peak_latitude"], [66, 3, 1, "", "peak_latitude_error"], [66, 3, 1, "", "width"], [66, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[67, 2, 1, "", "name"], [67, 2, 1, "", "position"], [67, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[68, 2, 1, "", "name"], [68, 2, 1, "", "position"], [68, 2, 1, "", "row_index"], [68, 3, 1, "", "sky_model"], [68, 3, 1, "", "spatial_model"], [68, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[69, 2, 1, "", "asso"], [69, 2, 1, "", "energy_range"], [69, 2, 1, "", "flux_points"], [69, 2, 1, "", "flux_points_meta"], [69, 2, 1, "", "flux_points_table"], [69, 3, 1, "", "info"], [69, 2, 1, "", "is_pointlike"], [69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"], [69, 3, 1, "", "sky_model"], [69, 3, 1, "", "spatial_model"], [69, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[70, 3, 1, "", "info"], [70, 2, 1, "", "n_models"], [70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 3, 1, "", "lightcurve"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[72, 2, 1, "", "asso"], [72, 2, 1, "", "energy_range"], [72, 2, 1, "", "flux_points"], [72, 2, 1, "", "flux_points_meta"], [72, 2, 1, "", "flux_points_table"], [72, 3, 1, "", "info"], [72, 2, 1, "", "is_pointlike"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[73, 3, 1, "", "info"], [73, 2, 1, "", "is_pointlike"], [73, 2, 1, "", "n_models"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[76, 3, 1, "", "components_models"], [76, 2, 1, "", "energy_range"], [76, 2, 1, "", "flux_points"], [76, 2, 1, "", "flux_points_table"], [76, 3, 1, "", "info"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "spatial_model"]], "gammapy.data": [[78, 1, 1, "", "DataStore"], [79, 1, 1, "", "EventList"], [80, 1, 1, "", "EventListMetaData"], [81, 1, 1, "", "FixedPointingInfo"], [82, 1, 1, "", "GTI"], [83, 1, 1, "", "HDUIndexTable"], [84, 1, 1, "", "Observation"], [85, 1, 1, "", "ObservationFilter"], [86, 1, 1, "", "ObservationTable"], [87, 1, 1, "", "Observations"], [88, 1, 1, "", "ObservationsEventsSampler"], [89, 1, 1, "", "PointingInfo"], [90, 1, 1, "", "PointingMode"], [91, 4, 1, "", "get_irfs_features"], [92, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[78, 2, 1, "", "DEFAULT_HDU_TABLE"], [78, 2, 1, "", "DEFAULT_OBS_TABLE"], [78, 3, 1, "", "check"], [78, 3, 1, "", "copy_obs"], [78, 3, 1, "", "from_dir"], [78, 3, 1, "", "from_events_files"], [78, 3, 1, "", "from_file"], [78, 3, 1, "", "get_observations"], [78, 3, 1, "", "info"], [78, 3, 1, "", "obs"], [78, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[79, 2, 1, "", "altaz"], [79, 2, 1, "", "altaz_frame"], [79, 2, 1, "", "altaz_from_table"], [79, 3, 1, "", "check"], [79, 3, 1, "", "copy"], [79, 2, 1, "", "energy"], [79, 3, 1, "", "from_stack"], [79, 2, 1, "", "galactic"], [79, 2, 1, "", "galactic_median"], [79, 2, 1, "", "is_pointed_observation"], [79, 3, 1, "", "map_coord"], [79, 2, 1, "", "observation_dead_time_fraction"], [79, 2, 1, "", "observation_live_time_duration"], [79, 2, 1, "", "observation_time_duration"], [79, 2, 1, "", "observation_time_start"], [79, 2, 1, "", "observation_time_stop"], [79, 2, 1, "", "observatory_earth_location"], [79, 2, 1, "", "offset"], [79, 2, 1, "", "offset_from_median"], [79, 3, 1, "", "peek"], [79, 3, 1, "", "plot_energy"], [79, 3, 1, "", "plot_energy_offset"], [79, 3, 1, "", "plot_image"], [79, 3, 1, "", "plot_offset2_distribution"], [79, 3, 1, "", "plot_time"], [79, 2, 1, "", "pointing_radec"], [79, 2, 1, "", "radec"], [79, 3, 1, "", "read"], [79, 3, 1, "", "select_energy"], [79, 3, 1, "", "select_mask"], [79, 3, 1, "", "select_offset"], [79, 3, 1, "", "select_parameter"], [79, 3, 1, "", "select_rad_max"], [79, 3, 1, "", "select_region"], [79, 3, 1, "", "select_row_subset"], [79, 3, 1, "", "select_time"], [79, 3, 1, "", "stack"], [79, 2, 1, "", "time"], [79, 2, 1, "", "time_ref"], [79, 3, 1, "", "to_table_hdu"], [79, 3, 1, "", "write"]], "gammapy.data.EventListMetaData": [[80, 3, 1, "", "construct"], [80, 3, 1, "", "copy"], [80, 3, 1, "", "dict"], [80, 3, 1, "", "from_header"], [80, 3, 1, "", "from_orm"], [80, 3, 1, "", "json"], [80, 2, 1, "", "model_computed_fields"], [80, 2, 1, "", "model_config"], [80, 3, 1, "", "model_construct"], [80, 3, 1, "", "model_copy"], [80, 3, 1, "", "model_dump"], [80, 3, 1, "", "model_dump_json"], [80, 2, 1, "", "model_extra"], [80, 2, 1, "", "model_fields"], [80, 2, 1, "", "model_fields_set"], [80, 3, 1, "", "model_json_schema"], [80, 3, 1, "", "model_parametrized_name"], [80, 3, 1, "", "model_post_init"], [80, 3, 1, "", "model_rebuild"], [80, 3, 1, "", "model_validate"], [80, 3, 1, "", "model_validate_json"], [80, 3, 1, "", "model_validate_strings"], [80, 3, 1, "", "parse_file"], [80, 3, 1, "", "parse_obj"], [80, 3, 1, "", "parse_raw"], [80, 3, 1, "", "schema"], [80, 3, 1, "", "schema_json"], [80, 2, 1, "", "tag"], [80, 3, 1, "", "to_header"], [80, 3, 1, "", "to_yaml"], [80, 3, 1, "", "update_forward_refs"], [80, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[81, 2, 1, "", "fixed_altaz"], [81, 2, 1, "", "fixed_icrs"], [81, 3, 1, "", "from_fits_header"], [81, 3, 1, "", "get_altaz"], [81, 3, 1, "", "get_icrs"], [81, 2, 1, "", "mode"], [81, 3, 1, "", "read"], [81, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[82, 3, 1, "", "copy"], [82, 3, 1, "", "create"], [82, 3, 1, "", "delete_interval"], [82, 3, 1, "", "from_stack"], [82, 3, 1, "", "from_table_hdu"], [82, 3, 1, "", "from_time_intervals"], [82, 3, 1, "", "group_table"], [82, 2, 1, "", "met_start"], [82, 2, 1, "", "met_stop"], [82, 3, 1, "", "read"], [82, 3, 1, "", "select_time"], [82, 3, 1, "", "stack"], [82, 2, 1, "", "time_delta"], [82, 2, 1, "", "time_intervals"], [82, 2, 1, "", "time_ref"], [82, 2, 1, "", "time_start"], [82, 2, 1, "", "time_stop"], [82, 2, 1, "", "time_sum"], [82, 3, 1, "", "to_table_hdu"], [82, 3, 1, "", "union"], [82, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[83, 2, 1, "", "ColumnClass"], [83, 2, 1, "", "VALID_HDU_CLASS"], [83, 2, 1, "", "VALID_HDU_TYPE"], [83, 3, 1, "", "add_column"], [83, 3, 1, "", "add_columns"], [83, 3, 1, "", "add_index"], [83, 3, 1, "", "add_row"], [83, 3, 1, "", "argsort"], [83, 3, 1, "", "as_array"], [83, 2, 1, "", "base_dir"], [83, 2, 1, "", "colnames"], [83, 3, 1, "", "convert_bytestring_to_unicode"], [83, 3, 1, "", "convert_unicode_to_bytestring"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "dtype"], [83, 3, 1, "", "field"], [83, 3, 1, "", "filled"], [83, 3, 1, "", "from_pandas"], [83, 3, 1, "", "group_by"], [83, 2, 1, "", "groups"], [83, 2, 1, "", "has_masked_columns"], [83, 2, 1, "", "has_masked_values"], [83, 2, 1, "", "has_mixin_columns"], [83, 2, 1, "", "hdu_class_unique"], [83, 3, 1, "", "hdu_location"], [83, 2, 1, "", "hdu_type_unique"], [83, 2, 1, "", "iloc"], [83, 3, 1, "", "index_column"], [83, 3, 1, "", "index_mode"], [83, 2, 1, "", "indices"], [83, 2, 1, "", "info"], [83, 3, 1, "", "insert_row"], [83, 3, 1, "", "items"], [83, 3, 1, "", "itercols"], [83, 3, 1, "", "iterrows"], [83, 3, 1, "", "keep_columns"], [83, 3, 1, "", "keys"], [83, 2, 1, "", "loc"], [83, 2, 1, "", "loc_indices"], [83, 3, 1, "", "location_info"], [83, 2, 1, "", "mask"], [83, 2, 1, "", "masked"], [83, 2, 1, "", "meta"], [83, 3, 1, "", "more"], [83, 2, 1, "", "obs_id_unique"], [83, 3, 1, "", "pformat"], [83, 3, 1, "", "pformat_all"], [83, 3, 1, "", "pprint"], [83, 3, 1, "", "pprint_all"], [83, 2, 1, "", "pprint_exclude_names"], [83, 2, 1, "", "pprint_include_names"], [83, 3, 1, "", "read"], [83, 3, 1, "", "remove_column"], [83, 3, 1, "", "remove_columns"], [83, 3, 1, "", "remove_indices"], [83, 3, 1, "", "remove_row"], [83, 3, 1, "", "remove_rows"], [83, 3, 1, "", "rename_column"], [83, 3, 1, "", "rename_columns"], [83, 3, 1, "", "replace_column"], [83, 3, 1, "", "reverse"], [83, 3, 1, "", "round"], [83, 3, 1, "", "row_idx"], [83, 3, 1, "", "show_in_browser"], [83, 3, 1, "", "show_in_notebook"], [83, 3, 1, "", "sort"], [83, 3, 1, "", "summary"], [83, 3, 1, "", "to_pandas"], [83, 3, 1, "", "update"], [83, 3, 1, "", "values"], [83, 3, 1, "", "values_equal"], [83, 2, 1, "", "write"]], "gammapy.data.Observation": [[84, 2, 1, "", "aeff"], [84, 2, 1, "", "available_hdus"], [84, 2, 1, "", "available_irfs"], [84, 2, 1, "", "bkg"], [84, 3, 1, "", "check"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "create"], [84, 2, 1, "", "edisp"], [84, 2, 1, "", "events"], [84, 3, 1, "", "get_pointing_altaz"], [84, 3, 1, "", "get_pointing_icrs"], [84, 2, 1, "", "gti"], [84, 2, 1, "", "meta"], [84, 2, 1, "", "muoneff"], [84, 2, 1, "", "obs_info"], [84, 2, 1, "", "observation_dead_time_fraction"], [84, 2, 1, "", "observation_live_time_duration"], [84, 2, 1, "", "observation_time_duration"], [84, 2, 1, "", "observatory_earth_location"], [84, 3, 1, "", "peek"], [84, 2, 1, "", "pointing"], [84, 2, 1, "", "psf"], [84, 2, 1, "", "rad_max"], [84, 3, 1, "", "read"], [84, 3, 1, "", "select_time"], [84, 2, 1, "", "target_radec"], [84, 2, 1, "", "tmid"], [84, 2, 1, "", "tstart"], [84, 2, 1, "", "tstop"], [84, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[85, 2, 1, "", "EVENT_FILTER_TYPES"], [85, 3, 1, "", "copy"], [85, 3, 1, "", "filter_events"], [85, 3, 1, "", "filter_gti"], [85, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationTable": [[86, 2, 1, "", "ColumnClass"], [86, 3, 1, "", "add_column"], [86, 3, 1, "", "add_columns"], [86, 3, 1, "", "add_index"], [86, 3, 1, "", "add_row"], [86, 3, 1, "", "argsort"], [86, 3, 1, "", "as_array"], [86, 2, 1, "", "colnames"], [86, 3, 1, "", "convert_bytestring_to_unicode"], [86, 3, 1, "", "convert_unicode_to_bytestring"], [86, 3, 1, "", "copy"], [86, 2, 1, "", "dtype"], [86, 3, 1, "", "field"], [86, 3, 1, "", "filled"], [86, 3, 1, "", "from_pandas"], [86, 3, 1, "", "group_by"], [86, 2, 1, "", "groups"], [86, 2, 1, "", "has_masked_columns"], [86, 2, 1, "", "has_masked_values"], [86, 2, 1, "", "has_mixin_columns"], [86, 2, 1, "", "iloc"], [86, 3, 1, "", "index_column"], [86, 3, 1, "", "index_mode"], [86, 2, 1, "", "indices"], [86, 2, 1, "", "info"], [86, 3, 1, "", "insert_row"], [86, 3, 1, "", "items"], [86, 3, 1, "", "itercols"], [86, 3, 1, "", "iterrows"], [86, 3, 1, "", "keep_columns"], [86, 3, 1, "", "keys"], [86, 2, 1, "", "loc"], [86, 2, 1, "", "loc_indices"], [86, 2, 1, "", "mask"], [86, 2, 1, "", "masked"], [86, 2, 1, "", "meta"], [86, 3, 1, "", "more"], [86, 3, 1, "", "pformat"], [86, 3, 1, "", "pformat_all"], [86, 2, 1, "", "pointing_galactic"], [86, 2, 1, "", "pointing_radec"], [86, 3, 1, "", "pprint"], [86, 3, 1, "", "pprint_all"], [86, 2, 1, "", "pprint_exclude_names"], [86, 2, 1, "", "pprint_include_names"], [86, 3, 1, "", "read"], [86, 3, 1, "", "remove_column"], [86, 3, 1, "", "remove_columns"], [86, 3, 1, "", "remove_indices"], [86, 3, 1, "", "remove_row"], [86, 3, 1, "", "remove_rows"], [86, 3, 1, "", "rename_column"], [86, 3, 1, "", "rename_columns"], [86, 3, 1, "", "replace_column"], [86, 3, 1, "", "reverse"], [86, 3, 1, "", "round"], [86, 3, 1, "", "select_obs_id"], [86, 3, 1, "", "select_observations"], [86, 3, 1, "", "select_range"], [86, 3, 1, "", "select_sky_circle"], [86, 3, 1, "", "select_time_range"], [86, 3, 1, "", "show_in_browser"], [86, 3, 1, "", "show_in_notebook"], [86, 3, 1, "", "sort"], [86, 3, 1, "", "summary"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 3, 1, "", "to_pandas"], [86, 3, 1, "", "update"], [86, 3, 1, "", "values"], [86, 3, 1, "", "values_equal"], [86, 2, 1, "", "write"]], "gammapy.data.Observations": [[87, 3, 1, "", "append"], [87, 3, 1, "", "clear"], [87, 3, 1, "", "count"], [87, 3, 1, "", "extend"], [87, 3, 1, "", "from_stack"], [87, 3, 1, "", "group_by_label"], [87, 2, 1, "", "ids"], [87, 3, 1, "", "in_memory_generator"], [87, 3, 1, "", "index"], [87, 3, 1, "", "insert"], [87, 3, 1, "", "pop"], [87, 3, 1, "", "remove"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[88, 2, 1, "", "n_jobs"], [88, 2, 1, "", "parallel_backend"], [88, 3, 1, "", "run"], [88, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[89, 2, 1, "", "altaz"], [89, 2, 1, "", "altaz_frame"], [89, 2, 1, "", "altaz_from_table"], [89, 3, 1, "", "altaz_interpolate"], [89, 2, 1, "", "duration"], [89, 3, 1, "", "get_altaz"], [89, 3, 1, "", "get_icrs"], [89, 2, 1, "", "location"], [89, 2, 1, "", "radec"], [89, 3, 1, "", "read"], [89, 2, 1, "", "time"], [89, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[90, 2, 1, "", "DRIFT"], [90, 2, 1, "", "POINTING"]], "gammapy.datasets": [[93, 5, 1, "", "DATASET_REGISTRY"], [94, 1, 1, "", "Dataset"], [95, 1, 1, "", "Datasets"], [96, 1, 1, "", "FluxPointsDataset"], [97, 1, 1, "", "MapDataset"], [98, 1, 1, "", "MapDatasetEventSampler"], [99, 1, 1, "", "MapDatasetMetaData"], [100, 1, 1, "", "MapDatasetOnOff"], [101, 1, 1, "", "OGIPDatasetReader"], [102, 1, 1, "", "OGIPDatasetWriter"], [103, 1, 1, "", "ObservationEventSampler"], [104, 1, 1, "", "SpectrumDataset"], [105, 1, 1, "", "SpectrumDatasetOnOff"], [106, 4, 1, "", "apply_edisp"], [107, 4, 1, "", "create_map_dataset_from_observation"], [108, 4, 1, "", "create_map_dataset_geoms"], [109, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[94, 3, 1, "", "copy"], [94, 2, 1, "", "mask"], [94, 2, 1, "", "name"], [94, 3, 1, "", "stat_array"], [94, 3, 1, "", "stat_sum"], [94, 2, 1, "", "tag"], [94, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[95, 3, 1, "", "append"], [95, 3, 1, "", "clear"], [95, 2, 1, "", "contributes_to_stat"], [95, 3, 1, "", "copy"], [95, 3, 1, "", "count"], [95, 2, 1, "", "energy_axes_are_aligned"], [95, 2, 1, "", "energy_ranges"], [95, 3, 1, "", "extend"], [95, 2, 1, "", "gti"], [95, 3, 1, "", "index"], [95, 3, 1, "", "info_table"], [95, 3, 1, "", "insert"], [95, 2, 1, "", "is_all_same_energy_shape"], [95, 2, 1, "", "is_all_same_shape"], [95, 2, 1, "", "is_all_same_type"], [95, 2, 1, "", "meta_table"], [95, 2, 1, "", "models"], [95, 2, 1, "", "names"], [95, 2, 1, "", "parameters"], [95, 3, 1, "", "pop"], [95, 3, 1, "", "read"], [95, 3, 1, "", "remove"], [95, 3, 1, "", "reverse"], [95, 3, 1, "", "select_time"], [95, 3, 1, "", "slice_by_energy"], [95, 3, 1, "", "stack_reduce"], [95, 3, 1, "", "stat_sum"], [95, 3, 1, "", "to_spectrum_datasets"], [95, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[96, 3, 1, "", "copy"], [96, 3, 1, "", "data_shape"], [96, 3, 1, "", "flux_pred"], [96, 3, 1, "", "from_dict"], [96, 2, 1, "", "gti"], [96, 2, 1, "", "mask"], [96, 2, 1, "", "models"], [96, 2, 1, "", "name"], [96, 3, 1, "", "plot_fit"], [96, 3, 1, "", "plot_residuals"], [96, 3, 1, "", "plot_spectrum"], [96, 3, 1, "", "read"], [96, 3, 1, "", "residuals"], [96, 3, 1, "", "stat_array"], [96, 3, 1, "", "stat_sum"], [96, 2, 1, "", "stat_type"], [96, 2, 1, "", "tag"], [96, 3, 1, "", "to_dict"], [96, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[97, 2, 1, "", "background"], [97, 2, 1, "", "background_model"], [97, 3, 1, "", "copy"], [97, 2, 1, "", "counts"], [97, 3, 1, "", "create"], [97, 3, 1, "", "cutout"], [97, 2, 1, "", "data_shape"], [97, 3, 1, "", "downsample"], [97, 2, 1, "", "edisp"], [97, 2, 1, "", "energy_range"], [97, 2, 1, "", "energy_range_fit"], [97, 2, 1, "", "energy_range_safe"], [97, 2, 1, "", "energy_range_total"], [97, 2, 1, "", "evaluators"], [97, 2, 1, "", "excess"], [97, 2, 1, "", "exposure"], [97, 3, 1, "", "fake"], [97, 3, 1, "", "from_dict"], [97, 3, 1, "", "from_geoms"], [97, 3, 1, "", "from_hdulist"], [97, 2, 1, "", "geoms"], [97, 2, 1, "", "gti"], [97, 3, 1, "", "info_dict"], [97, 2, 1, "", "mask"], [97, 2, 1, "", "mask_fit"], [97, 2, 1, "", "mask_fit_image"], [97, 2, 1, "", "mask_image"], [97, 2, 1, "", "mask_safe"], [97, 2, 1, "", "mask_safe_edisp"], [97, 2, 1, "", "mask_safe_image"], [97, 2, 1, "", "mask_safe_psf"], [97, 2, 1, "", "meta"], [97, 2, 1, "", "meta_table"], [97, 2, 1, "", "models"], [97, 2, 1, "", "name"], [97, 3, 1, "", "npred"], [97, 3, 1, "", "npred_background"], [97, 3, 1, "", "npred_signal"], [97, 3, 1, "", "pad"], [97, 3, 1, "", "peek"], [97, 3, 1, "", "plot_residuals"], [97, 3, 1, "", "plot_residuals_spatial"], [97, 3, 1, "", "plot_residuals_spectral"], [97, 2, 1, "", "psf"], [97, 3, 1, "", "read"], [97, 3, 1, "", "resample_energy_axis"], [97, 3, 1, "", "reset_data_cache"], [97, 3, 1, "", "residuals"], [97, 3, 1, "", "slice_by_energy"], [97, 3, 1, "", "slice_by_idx"], [97, 3, 1, "", "stack"], [97, 3, 1, "", "stat_array"], [97, 3, 1, "", "stat_sum"], [97, 2, 1, "", "stat_type"], [97, 2, 1, "", "tag"], [97, 3, 1, "", "to_dict"], [97, 3, 1, "", "to_hdulist"], [97, 3, 1, "", "to_image"], [97, 3, 1, "", "to_masked"], [97, 3, 1, "", "to_region_map_dataset"], [97, 3, 1, "", "to_spectrum_dataset"], [97, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[98, 3, 1, "", "event_det_coords"], [98, 3, 1, "", "event_list_meta"], [98, 3, 1, "", "run"], [98, 3, 1, "", "sample_background"], [98, 3, 1, "", "sample_edisp"], [98, 3, 1, "", "sample_psf"], [98, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[99, 3, 1, "", "construct"], [99, 3, 1, "", "copy"], [99, 3, 1, "", "dict"], [99, 3, 1, "", "from_header"], [99, 3, 1, "", "from_orm"], [99, 3, 1, "", "json"], [99, 2, 1, "", "model_computed_fields"], [99, 2, 1, "", "model_config"], [99, 3, 1, "", "model_construct"], [99, 3, 1, "", "model_copy"], [99, 3, 1, "", "model_dump"], [99, 3, 1, "", "model_dump_json"], [99, 2, 1, "", "model_extra"], [99, 2, 1, "", "model_fields"], [99, 2, 1, "", "model_fields_set"], [99, 3, 1, "", "model_json_schema"], [99, 3, 1, "", "model_parametrized_name"], [99, 3, 1, "", "model_post_init"], [99, 3, 1, "", "model_rebuild"], [99, 3, 1, "", "model_validate"], [99, 3, 1, "", "model_validate_json"], [99, 3, 1, "", "model_validate_strings"], [99, 3, 1, "", "parse_file"], [99, 3, 1, "", "parse_obj"], [99, 3, 1, "", "parse_raw"], [99, 3, 1, "", "schema"], [99, 3, 1, "", "schema_json"], [99, 3, 1, "", "stack"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_header"], [99, 3, 1, "", "to_yaml"], [99, 3, 1, "", "update_forward_refs"], [99, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[100, 2, 1, "", "alpha"], [100, 2, 1, "", "background"], [100, 2, 1, "", "background_model"], [100, 3, 1, "", "copy"], [100, 2, 1, "", "counts"], [100, 3, 1, "", "create"], [100, 3, 1, "", "cutout"], [100, 2, 1, "", "data_shape"], [100, 3, 1, "", "downsample"], [100, 2, 1, "", "edisp"], [100, 2, 1, "", "energy_range"], [100, 2, 1, "", "energy_range_fit"], [100, 2, 1, "", "energy_range_safe"], [100, 2, 1, "", "energy_range_total"], [100, 2, 1, "", "evaluators"], [100, 2, 1, "", "excess"], [100, 2, 1, "", "exposure"], [100, 3, 1, "", "fake"], [100, 3, 1, "", "from_dict"], [100, 3, 1, "", "from_geoms"], [100, 3, 1, "", "from_hdulist"], [100, 3, 1, "", "from_map_dataset"], [100, 2, 1, "", "geoms"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "info_dict"], [100, 2, 1, "", "mask"], [100, 2, 1, "", "mask_fit"], [100, 2, 1, "", "mask_fit_image"], [100, 2, 1, "", "mask_image"], [100, 2, 1, "", "mask_safe"], [100, 2, 1, "", "mask_safe_edisp"], [100, 2, 1, "", "mask_safe_image"], [100, 2, 1, "", "mask_safe_psf"], [100, 2, 1, "", "meta"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "name"], [100, 3, 1, "", "npred"], [100, 3, 1, "", "npred_background"], [100, 3, 1, "", "npred_off"], [100, 3, 1, "", "npred_signal"], [100, 3, 1, "", "pad"], [100, 3, 1, "", "peek"], [100, 3, 1, "", "plot_residuals"], [100, 3, 1, "", "plot_residuals_spatial"], [100, 3, 1, "", "plot_residuals_spectral"], [100, 2, 1, "", "psf"], [100, 3, 1, "", "read"], [100, 3, 1, "", "resample_energy_axis"], [100, 3, 1, "", "reset_data_cache"], [100, 3, 1, "", "residuals"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "slice_by_idx"], [100, 3, 1, "", "stack"], [100, 3, 1, "", "stat_array"], [100, 3, 1, "", "stat_sum"], [100, 2, 1, "", "stat_type"], [100, 2, 1, "", "tag"], [100, 3, 1, "", "to_dict"], [100, 3, 1, "", "to_hdulist"], [100, 3, 1, "", "to_image"], [100, 3, 1, "", "to_map_dataset"], [100, 3, 1, "", "to_masked"], [100, 3, 1, "", "to_region_map_dataset"], [100, 3, 1, "", "to_spectrum_dataset"], [100, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[101, 3, 1, "", "get_filenames"], [101, 3, 1, "", "get_valid_path"], [101, 3, 1, "", "read"], [101, 3, 1, "", "read_arf"], [101, 3, 1, "", "read_bkg"], [101, 3, 1, "", "read_pha"], [101, 3, 1, "", "read_rmf"], [101, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[102, 3, 1, "", "get_filenames"], [102, 3, 1, "", "get_ogip_meta"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_counts_hdulist"], [102, 3, 1, "", "write"], [102, 3, 1, "", "write_arf"], [102, 3, 1, "", "write_bkg"], [102, 3, 1, "", "write_pha"], [102, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[103, 3, 1, "", "event_det_coords"], [103, 3, 1, "", "event_list_meta"], [103, 3, 1, "", "run"], [103, 3, 1, "", "sample_background"], [103, 3, 1, "", "sample_edisp"], [103, 3, 1, "", "sample_psf"], [103, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[104, 2, 1, "", "background"], [104, 2, 1, "", "background_model"], [104, 3, 1, "", "copy"], [104, 2, 1, "", "counts"], [104, 3, 1, "", "create"], [104, 3, 1, "", "cutout"], [104, 2, 1, "", "data_shape"], [104, 3, 1, "", "downsample"], [104, 2, 1, "", "edisp"], [104, 2, 1, "", "energy_range"], [104, 2, 1, "", "energy_range_fit"], [104, 2, 1, "", "energy_range_safe"], [104, 2, 1, "", "energy_range_total"], [104, 2, 1, "", "evaluators"], [104, 2, 1, "", "excess"], [104, 2, 1, "", "exposure"], [104, 3, 1, "", "fake"], [104, 3, 1, "", "from_dict"], [104, 3, 1, "", "from_geoms"], [104, 3, 1, "", "from_hdulist"], [104, 2, 1, "", "geoms"], [104, 2, 1, "", "gti"], [104, 3, 1, "", "info_dict"], [104, 2, 1, "", "mask"], [104, 2, 1, "", "mask_fit"], [104, 2, 1, "", "mask_fit_image"], [104, 2, 1, "", "mask_image"], [104, 2, 1, "", "mask_safe"], [104, 2, 1, "", "mask_safe_edisp"], [104, 2, 1, "", "mask_safe_image"], [104, 2, 1, "", "mask_safe_psf"], [104, 2, 1, "", "meta"], [104, 2, 1, "", "meta_table"], [104, 2, 1, "", "models"], [104, 2, 1, "", "name"], [104, 3, 1, "", "npred"], [104, 3, 1, "", "npred_background"], [104, 3, 1, "", "npred_signal"], [104, 3, 1, "", "pad"], [104, 3, 1, "", "peek"], [104, 3, 1, "", "plot_counts"], [104, 3, 1, "", "plot_excess"], [104, 3, 1, "", "plot_fit"], [104, 3, 1, "", "plot_masks"], [104, 3, 1, "", "plot_residuals"], [104, 3, 1, "", "plot_residuals_spatial"], [104, 3, 1, "", "plot_residuals_spectral"], [104, 2, 1, "", "psf"], [104, 3, 1, "", "read"], [104, 3, 1, "", "resample_energy_axis"], [104, 3, 1, "", "reset_data_cache"], [104, 3, 1, "", "residuals"], [104, 3, 1, "", "slice_by_energy"], [104, 3, 1, "", "slice_by_idx"], [104, 3, 1, "", "stack"], [104, 3, 1, "", "stat_array"], [104, 3, 1, "", "stat_sum"], [104, 2, 1, "", "stat_type"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_dict"], [104, 3, 1, "", "to_hdulist"], [104, 3, 1, "", "to_image"], [104, 3, 1, "", "to_masked"], [104, 3, 1, "", "to_region_map_dataset"], [104, 3, 1, "", "to_spectrum_dataset"], [104, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[105, 2, 1, "", "alpha"], [105, 2, 1, "", "background"], [105, 2, 1, "", "background_model"], [105, 3, 1, "", "copy"], [105, 2, 1, "", "counts"], [105, 3, 1, "", "create"], [105, 3, 1, "", "cutout"], [105, 2, 1, "", "data_shape"], [105, 3, 1, "", "downsample"], [105, 2, 1, "", "edisp"], [105, 2, 1, "", "energy_range"], [105, 2, 1, "", "energy_range_fit"], [105, 2, 1, "", "energy_range_safe"], [105, 2, 1, "", "energy_range_total"], [105, 2, 1, "", "evaluators"], [105, 2, 1, "", "excess"], [105, 2, 1, "", "exposure"], [105, 3, 1, "", "fake"], [105, 3, 1, "", "from_dict"], [105, 3, 1, "", "from_geoms"], [105, 3, 1, "", "from_hdulist"], [105, 3, 1, "", "from_map_dataset"], [105, 3, 1, "", "from_spectrum_dataset"], [105, 2, 1, "", "geoms"], [105, 2, 1, "", "gti"], [105, 3, 1, "", "info_dict"], [105, 2, 1, "", "mask"], [105, 2, 1, "", "mask_fit"], [105, 2, 1, "", "mask_fit_image"], [105, 2, 1, "", "mask_image"], [105, 2, 1, "", "mask_safe"], [105, 2, 1, "", "mask_safe_edisp"], [105, 2, 1, "", "mask_safe_image"], [105, 2, 1, "", "mask_safe_psf"], [105, 2, 1, "", "meta"], [105, 2, 1, "", "meta_table"], [105, 2, 1, "", "models"], [105, 2, 1, "", "name"], [105, 3, 1, "", "npred"], [105, 3, 1, "", "npred_background"], [105, 3, 1, "", "npred_off"], [105, 3, 1, "", "npred_signal"], [105, 3, 1, "", "pad"], [105, 3, 1, "", "peek"], [105, 3, 1, "", "plot_counts"], [105, 3, 1, "", "plot_excess"], [105, 3, 1, "", "plot_fit"], [105, 3, 1, "", "plot_masks"], [105, 3, 1, "", "plot_residuals"], [105, 3, 1, "", "plot_residuals_spatial"], [105, 3, 1, "", "plot_residuals_spectral"], [105, 2, 1, "", "psf"], [105, 3, 1, "", "read"], [105, 3, 1, "", "resample_energy_axis"], [105, 3, 1, "", "reset_data_cache"], [105, 3, 1, "", "residuals"], [105, 3, 1, "", "slice_by_energy"], [105, 3, 1, "", "slice_by_idx"], [105, 3, 1, "", "stack"], [105, 3, 1, "", "stat_array"], [105, 3, 1, "", "stat_sum"], [105, 2, 1, "", "stat_type"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_dict"], [105, 3, 1, "", "to_hdulist"], [105, 3, 1, "", "to_image"], [105, 3, 1, "", "to_map_dataset"], [105, 3, 1, "", "to_masked"], [105, 3, 1, "", "to_region_map_dataset"], [105, 3, 1, "", "to_spectrum_dataset"], [105, 3, 1, "", "write"]], "gammapy.datasets.utils": [[110, 4, 1, "", "apply_edisp"], [111, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[112, 1, 1, "", "ASmoothMapEstimator"], [113, 5, 1, "", "ESTIMATOR_REGISTRY"], [114, 1, 1, "", "EnergyDependentMorphologyEstimator"], [115, 1, 1, "", "Estimator"], [116, 1, 1, "", "ExcessMapEstimator"], [117, 1, 1, "", "FluxMaps"], [118, 1, 1, "", "FluxMetaData"], [119, 1, 1, "", "FluxPoints"], [120, 1, 1, "", "FluxPointsEstimator"], [121, 1, 1, "", "FluxProfileEstimator"], [122, 1, 1, "", "ImageProfile"], [123, 1, 1, "", "ImageProfileEstimator"], [124, 1, 1, "", "LightCurveEstimator"], [125, 1, 1, "", "ParameterEstimator"], [126, 1, 1, "", "SensitivityEstimator"], [127, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[112, 2, 1, "", "config_parameters"], [112, 3, 1, "", "copy"], [112, 3, 1, "", "estimate_maps"], [112, 3, 1, "", "get_kernels"], [112, 3, 1, "", "get_scales"], [112, 3, 1, "", "run"], [112, 3, 1, "", "selection_all"], [112, 2, 1, "", "selection_optional"], [112, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[114, 2, 1, "", "config_parameters"], [114, 3, 1, "", "copy"], [114, 3, 1, "", "estimate_energy_dependence"], [114, 3, 1, "", "run"], [114, 2, 1, "", "selection_optional"], [114, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[115, 2, 1, "", "config_parameters"], [115, 3, 1, "", "copy"], [115, 3, 1, "", "run"], [115, 2, 1, "", "selection_optional"], [115, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[116, 2, 1, "", "config_parameters"], [116, 3, 1, "", "copy"], [116, 2, 1, "", "correlation_radius"], [116, 3, 1, "", "estimate_excess_map"], [116, 3, 1, "", "estimate_exposure_reco_energy"], [116, 3, 1, "", "estimate_kernel"], [116, 3, 1, "", "estimate_mask_default"], [116, 3, 1, "", "run"], [116, 2, 1, "", "selection_optional"], [116, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[117, 3, 1, "", "all_quantities"], [117, 2, 1, "", "available_quantities"], [117, 2, 1, "", "counts"], [117, 2, 1, "", "dnde"], [117, 2, 1, "", "dnde_err"], [117, 2, 1, "", "dnde_errn"], [117, 2, 1, "", "dnde_errp"], [117, 2, 1, "", "dnde_ref"], [117, 2, 1, "", "dnde_ul"], [117, 2, 1, "", "e2dnde"], [117, 2, 1, "", "e2dnde_err"], [117, 2, 1, "", "e2dnde_errn"], [117, 2, 1, "", "e2dnde_errp"], [117, 2, 1, "", "e2dnde_ref"], [117, 2, 1, "", "e2dnde_ul"], [117, 2, 1, "", "eflux"], [117, 2, 1, "", "eflux_err"], [117, 2, 1, "", "eflux_errn"], [117, 2, 1, "", "eflux_errp"], [117, 2, 1, "", "eflux_ref"], [117, 2, 1, "", "eflux_ul"], [117, 2, 1, "", "energy_axis"], [117, 2, 1, "", "energy_max"], [117, 2, 1, "", "energy_min"], [117, 2, 1, "", "energy_ref"], [117, 2, 1, "", "filter_success_nan"], [117, 2, 1, "", "flux"], [117, 2, 1, "", "flux_err"], [117, 2, 1, "", "flux_errn"], [117, 2, 1, "", "flux_errp"], [117, 2, 1, "", "flux_ref"], [117, 2, 1, "", "flux_sensitivity"], [117, 2, 1, "", "flux_ul"], [117, 3, 1, "", "from_hdulist"], [117, 3, 1, "", "from_maps"], [117, 3, 1, "", "from_stack"], [117, 2, 1, "", "geom"], [117, 3, 1, "", "get_flux_points"], [117, 2, 1, "", "has_any_ts"], [117, 2, 1, "", "has_stat_profiles"], [117, 2, 1, "", "has_success"], [117, 2, 1, "", "has_ul"], [117, 2, 1, "", "is_convertible_to_flux_sed_type"], [117, 2, 1, "", "is_ul"], [117, 3, 1, "", "iter_by_axis"], [117, 2, 1, "", "n_dof"], [117, 2, 1, "", "n_sigma"], [117, 2, 1, "", "n_sigma_ul"], [117, 2, 1, "", "niter"], [117, 2, 1, "", "norm"], [117, 2, 1, "", "norm_err"], [117, 2, 1, "", "norm_errn"], [117, 2, 1, "", "norm_errp"], [117, 2, 1, "", "norm_sensitivity"], [117, 2, 1, "", "norm_ul"], [117, 2, 1, "", "npred"], [117, 2, 1, "", "npred_background"], [117, 2, 1, "", "npred_excess"], [117, 2, 1, "", "npred_excess_err"], [117, 2, 1, "", "npred_excess_errn"], [117, 2, 1, "", "npred_excess_errp"], [117, 2, 1, "", "npred_excess_ref"], [117, 2, 1, "", "npred_excess_ul"], [117, 3, 1, "", "read"], [117, 2, 1, "", "reference_model"], [117, 2, 1, "", "reference_model_default"], [117, 2, 1, "", "reference_spectral_model"], [117, 2, 1, "", "sed_type_init"], [117, 2, 1, "", "sed_type_plot_default"], [117, 3, 1, "", "slice_by_coord"], [117, 3, 1, "", "slice_by_energy"], [117, 3, 1, "", "slice_by_idx"], [117, 3, 1, "", "slice_by_time"], [117, 2, 1, "", "sqrt_ts"], [117, 2, 1, "", "sqrt_ts_threshold_ul"], [117, 2, 1, "", "stat"], [117, 2, 1, "", "stat_null"], [117, 2, 1, "", "stat_scan"], [117, 2, 1, "", "success"], [117, 3, 1, "", "to_hdulist"], [117, 3, 1, "", "to_maps"], [117, 2, 1, "", "ts"], [117, 2, 1, "", "ts_scan"], [117, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[118, 3, 1, "", "construct"], [118, 3, 1, "", "copy"], [118, 3, 1, "", "dict"], [118, 3, 1, "", "from_header"], [118, 3, 1, "", "from_orm"], [118, 3, 1, "", "json"], [118, 2, 1, "", "model_computed_fields"], [118, 2, 1, "", "model_config"], [118, 3, 1, "", "model_construct"], [118, 3, 1, "", "model_copy"], [118, 3, 1, "", "model_dump"], [118, 3, 1, "", "model_dump_json"], [118, 2, 1, "", "model_extra"], [118, 2, 1, "", "model_fields"], [118, 2, 1, "", "model_fields_set"], [118, 3, 1, "", "model_json_schema"], [118, 3, 1, "", "model_parametrized_name"], [118, 3, 1, "", "model_post_init"], [118, 3, 1, "", "model_rebuild"], [118, 3, 1, "", "model_validate"], [118, 3, 1, "", "model_validate_json"], [118, 3, 1, "", "model_validate_strings"], [118, 3, 1, "", "parse_file"], [118, 3, 1, "", "parse_obj"], [118, 3, 1, "", "parse_raw"], [118, 3, 1, "", "schema"], [118, 3, 1, "", "schema_json"], [118, 2, 1, "", "tag"], [118, 3, 1, "", "to_header"], [118, 3, 1, "", "to_yaml"], [118, 3, 1, "", "update_forward_refs"], [118, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[119, 3, 1, "", "all_quantities"], [119, 2, 1, "", "available_quantities"], [119, 2, 1, "", "counts"], [119, 2, 1, "", "dnde"], [119, 2, 1, "", "dnde_err"], [119, 2, 1, "", "dnde_errn"], [119, 2, 1, "", "dnde_errp"], [119, 2, 1, "", "dnde_ref"], [119, 2, 1, "", "dnde_ul"], [119, 2, 1, "", "e2dnde"], [119, 2, 1, "", "e2dnde_err"], [119, 2, 1, "", "e2dnde_errn"], [119, 2, 1, "", "e2dnde_errp"], [119, 2, 1, "", "e2dnde_ref"], [119, 2, 1, "", "e2dnde_ul"], [119, 2, 1, "", "eflux"], [119, 2, 1, "", "eflux_err"], [119, 2, 1, "", "eflux_errn"], [119, 2, 1, "", "eflux_errp"], [119, 2, 1, "", "eflux_ref"], [119, 2, 1, "", "eflux_ul"], [119, 2, 1, "", "energy_axis"], [119, 2, 1, "", "energy_max"], [119, 2, 1, "", "energy_min"], [119, 2, 1, "", "energy_ref"], [119, 2, 1, "", "filter_success_nan"], [119, 2, 1, "", "flux"], [119, 2, 1, "", "flux_err"], [119, 2, 1, "", "flux_errn"], [119, 2, 1, "", "flux_errp"], [119, 2, 1, "", "flux_ref"], [119, 2, 1, "", "flux_sensitivity"], [119, 2, 1, "", "flux_ul"], [119, 3, 1, "", "from_hdulist"], [119, 3, 1, "", "from_maps"], [119, 3, 1, "", "from_stack"], [119, 3, 1, "", "from_table"], [119, 2, 1, "", "geom"], [119, 3, 1, "", "get_flux_points"], [119, 2, 1, "", "has_any_ts"], [119, 2, 1, "", "has_stat_profiles"], [119, 2, 1, "", "has_success"], [119, 2, 1, "", "has_ul"], [119, 2, 1, "", "is_convertible_to_flux_sed_type"], [119, 2, 1, "", "is_ul"], [119, 3, 1, "", "iter_by_axis"], [119, 2, 1, "", "n_dof"], [119, 2, 1, "", "n_sigma"], [119, 2, 1, "", "n_sigma_ul"], [119, 2, 1, "", "niter"], [119, 2, 1, "", "norm"], [119, 2, 1, "", "norm_err"], [119, 2, 1, "", "norm_errn"], [119, 2, 1, "", "norm_errp"], [119, 2, 1, "", "norm_sensitivity"], [119, 2, 1, "", "norm_ul"], [119, 2, 1, "", "npred"], [119, 2, 1, "", "npred_background"], [119, 2, 1, "", "npred_excess"], [119, 2, 1, "", "npred_excess_err"], [119, 2, 1, "", "npred_excess_errn"], [119, 2, 1, "", "npred_excess_errp"], [119, 2, 1, "", "npred_excess_ref"], [119, 2, 1, "", "npred_excess_ul"], [119, 3, 1, "", "plot"], [119, 3, 1, "", "plot_ts_profiles"], [119, 3, 1, "", "read"], [119, 3, 1, "", "recompute_ul"], [119, 2, 1, "", "reference_model"], [119, 2, 1, "", "reference_model_default"], [119, 2, 1, "", "reference_spectral_model"], [119, 3, 1, "", "resample_axis"], [119, 2, 1, "", "sed_type_init"], [119, 2, 1, "", "sed_type_plot_default"], [119, 3, 1, "", "slice_by_coord"], [119, 3, 1, "", "slice_by_energy"], [119, 3, 1, "", "slice_by_idx"], [119, 3, 1, "", "slice_by_time"], [119, 2, 1, "", "sqrt_ts"], [119, 2, 1, "", "sqrt_ts_threshold_ul"], [119, 2, 1, "", "stat"], [119, 2, 1, "", "stat_null"], [119, 2, 1, "", "stat_scan"], [119, 2, 1, "", "success"], [119, 3, 1, "", "to_hdulist"], [119, 3, 1, "", "to_maps"], [119, 3, 1, "", "to_table"], [119, 2, 1, "", "ts"], [119, 2, 1, "", "ts_scan"], [119, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "estimate_best_fit"], [120, 3, 1, "", "estimate_counts"], [120, 3, 1, "", "estimate_errn_errp"], [120, 3, 1, "", "estimate_flux_point"], [120, 3, 1, "", "estimate_npred"], [120, 3, 1, "", "estimate_npred_excess"], [120, 3, 1, "", "estimate_scan"], [120, 3, 1, "", "estimate_ts"], [120, 3, 1, "", "estimate_ul"], [120, 3, 1, "", "get_scale_model"], [120, 2, 1, "", "n_jobs"], [120, 2, 1, "", "norm_max"], [120, 2, 1, "", "norm_min"], [120, 2, 1, "", "norm_n_values"], [120, 2, 1, "", "norm_values"], [120, 2, 1, "", "parallel_backend"], [120, 3, 1, "", "run"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 3, 1, "", "estimate_best_fit"], [121, 3, 1, "", "estimate_counts"], [121, 3, 1, "", "estimate_errn_errp"], [121, 3, 1, "", "estimate_flux_point"], [121, 3, 1, "", "estimate_npred"], [121, 3, 1, "", "estimate_npred_excess"], [121, 3, 1, "", "estimate_scan"], [121, 3, 1, "", "estimate_ts"], [121, 3, 1, "", "estimate_ul"], [121, 3, 1, "", "get_scale_model"], [121, 2, 1, "", "n_jobs"], [121, 2, 1, "", "norm_max"], [121, 2, 1, "", "norm_min"], [121, 2, 1, "", "norm_n_values"], [121, 2, 1, "", "norm_values"], [121, 2, 1, "", "parallel_backend"], [121, 2, 1, "", "projected_distance_axis"], [121, 3, 1, "", "run"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[122, 3, 1, "", "normalize"], [122, 3, 1, "", "peek"], [122, 3, 1, "", "plot"], [122, 3, 1, "", "plot_err"], [122, 2, 1, "", "profile"], [122, 2, 1, "", "profile_err"], [122, 3, 1, "", "smooth"], [122, 2, 1, "", "x_max"], [122, 2, 1, "", "x_min"], [122, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 3, 1, "", "estimate_best_fit"], [124, 3, 1, "", "estimate_counts"], [124, 3, 1, "", "estimate_errn_errp"], [124, 3, 1, "", "estimate_flux_point"], [124, 3, 1, "", "estimate_npred"], [124, 3, 1, "", "estimate_npred_excess"], [124, 3, 1, "", "estimate_scan"], [124, 3, 1, "", "estimate_time_bin_flux"], [124, 3, 1, "", "estimate_ts"], [124, 3, 1, "", "estimate_ul"], [124, 3, 1, "", "expand_map"], [124, 3, 1, "", "get_scale_model"], [124, 2, 1, "", "n_jobs"], [124, 2, 1, "", "norm_max"], [124, 2, 1, "", "norm_min"], [124, 2, 1, "", "norm_n_values"], [124, 2, 1, "", "norm_values"], [124, 2, 1, "", "parallel_backend"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 3, 1, "", "estimate_best_fit"], [125, 3, 1, "", "estimate_counts"], [125, 3, 1, "", "estimate_errn_errp"], [125, 3, 1, "", "estimate_npred"], [125, 3, 1, "", "estimate_scan"], [125, 3, 1, "", "estimate_ts"], [125, 3, 1, "", "estimate_ul"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[126, 2, 1, "", "config_parameters"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "estimate_min_e2dnde"], [126, 3, 1, "", "estimate_min_excess"], [126, 3, 1, "", "run"], [126, 2, 1, "", "selection_optional"], [126, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[127, 2, 1, "", "config_parameters"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "estimate_fit_input_maps"], [127, 3, 1, "", "estimate_flux_default"], [127, 3, 1, "", "estimate_flux_map"], [127, 3, 1, "", "estimate_kernel"], [127, 3, 1, "", "estimate_mask_default"], [127, 3, 1, "", "estimate_pad_width"], [127, 2, 1, "", "n_jobs"], [127, 2, 1, "", "parallel_backend"], [127, 3, 1, "", "run"], [127, 2, 1, "", "selection_all"], [127, 2, 1, "", "selection_optional"], [127, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[128, 4, 1, "", "compute_lightcurve_doublingtime"], [129, 4, 1, "", "compute_lightcurve_fpp"], [130, 4, 1, "", "compute_lightcurve_fvar"], [131, 4, 1, "", "estimate_exposure_reco_energy"], [132, 4, 1, "", "find_peaks"], [133, 4, 1, "", "find_peaks_in_flux_map"], [134, 4, 1, "", "get_combined_significance_maps"], [135, 4, 1, "", "get_rebinned_axis"], [136, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[137, 1, 1, "", "Background2D"], [138, 1, 1, "", "Background3D"], [139, 1, 1, "", "BackgroundIRF"], [140, 1, 1, "", "EDispKernel"], [141, 1, 1, "", "EDispKernelMap"], [142, 1, 1, "", "EDispMap"], [143, 1, 1, "", "EffectiveAreaTable2D"], [144, 1, 1, "", "EnergyDependentMultiGaussPSF"], [145, 1, 1, "", "EnergyDispersion2D"], [146, 1, 1, "", "FoVAlignment"], [147, 1, 1, "", "IRF"], [148, 1, 1, "", "IRFMap"], [149, 5, 1, "", "IRF_REGISTRY"], [150, 1, 1, "", "PSF3D"], [151, 1, 1, "", "PSFKernel"], [152, 1, 1, "", "PSFKing"], [153, 1, 1, "", "PSFMap"], [154, 1, 1, "", "ParametricPSF"], [155, 1, 1, "", "RadMax2D"], [156, 1, 1, "", "RecoPSFMap"], [157, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[137, 2, 1, "", "axes"], [137, 3, 1, "", "cumsum"], [137, 2, 1, "", "data"], [137, 2, 1, "", "default_interp_kwargs"], [137, 2, 1, "", "default_unit"], [137, 3, 1, "", "evaluate"], [137, 2, 1, "", "fov_alignment"], [137, 3, 1, "", "from_hdulist"], [137, 3, 1, "", "from_table"], [137, 2, 1, "", "has_offset_axis"], [137, 3, 1, "", "integral"], [137, 3, 1, "", "integrate_log_log"], [137, 3, 1, "", "interp_missing_data"], [137, 3, 1, "", "is_allclose"], [137, 2, 1, "", "is_pointlike"], [137, 3, 1, "", "normalize"], [137, 3, 1, "", "pad"], [137, 3, 1, "", "peek"], [137, 3, 1, "", "plot"], [137, 3, 1, "", "plot_at_energy"], [137, 3, 1, "", "plot_energy_dependence"], [137, 3, 1, "", "plot_offset_dependence"], [137, 3, 1, "", "plot_spectrum"], [137, 2, 1, "", "quantity"], [137, 3, 1, "", "read"], [137, 2, 1, "", "required_axes"], [137, 3, 1, "", "slice_by_idx"], [137, 2, 1, "", "tag"], [137, 3, 1, "", "to_3d"], [137, 3, 1, "", "to_hdulist"], [137, 3, 1, "", "to_table"], [137, 3, 1, "", "to_table_hdu"], [137, 3, 1, "", "to_unit"], [137, 2, 1, "", "unit"], [137, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[138, 2, 1, "", "axes"], [138, 3, 1, "", "cumsum"], [138, 2, 1, "", "data"], [138, 2, 1, "", "default_interp_kwargs"], [138, 2, 1, "", "default_unit"], [138, 3, 1, "", "evaluate"], [138, 2, 1, "", "fov_alignment"], [138, 3, 1, "", "from_hdulist"], [138, 3, 1, "", "from_table"], [138, 2, 1, "", "has_offset_axis"], [138, 3, 1, "", "integral"], [138, 3, 1, "", "integrate_log_log"], [138, 3, 1, "", "interp_missing_data"], [138, 3, 1, "", "is_allclose"], [138, 2, 1, "", "is_pointlike"], [138, 3, 1, "", "normalize"], [138, 3, 1, "", "pad"], [138, 3, 1, "", "peek"], [138, 3, 1, "", "plot_at_energy"], [138, 2, 1, "", "quantity"], [138, 3, 1, "", "read"], [138, 2, 1, "", "required_axes"], [138, 3, 1, "", "slice_by_idx"], [138, 2, 1, "", "tag"], [138, 3, 1, "", "to_2d"], [138, 3, 1, "", "to_hdulist"], [138, 3, 1, "", "to_table"], [138, 3, 1, "", "to_table_hdu"], [138, 3, 1, "", "to_unit"], [138, 2, 1, "", "unit"], [138, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[139, 2, 1, "", "axes"], [139, 3, 1, "", "cumsum"], [139, 2, 1, "", "data"], [139, 2, 1, "", "default_interp_kwargs"], [139, 3, 1, "", "evaluate"], [139, 2, 1, "", "fov_alignment"], [139, 3, 1, "", "from_hdulist"], [139, 3, 1, "", "from_table"], [139, 2, 1, "", "has_offset_axis"], [139, 3, 1, "", "integral"], [139, 3, 1, "", "integrate_log_log"], [139, 3, 1, "", "interp_missing_data"], [139, 3, 1, "", "is_allclose"], [139, 2, 1, "", "is_pointlike"], [139, 3, 1, "", "normalize"], [139, 3, 1, "", "pad"], [139, 2, 1, "", "quantity"], [139, 3, 1, "", "read"], [139, 2, 1, "", "required_axes"], [139, 3, 1, "", "slice_by_idx"], [139, 2, 1, "", "tag"], [139, 3, 1, "", "to_hdulist"], [139, 3, 1, "", "to_table"], [139, 3, 1, "", "to_table_hdu"], [139, 3, 1, "", "to_unit"], [139, 2, 1, "", "unit"], [139, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[140, 2, 1, "", "axes"], [140, 3, 1, "", "cumsum"], [140, 2, 1, "", "data"], [140, 2, 1, "", "default_interp_kwargs"], [140, 3, 1, "", "evaluate"], [140, 2, 1, "", "fov_alignment"], [140, 3, 1, "", "from_diagonal_response"], [140, 3, 1, "", "from_gauss"], [140, 3, 1, "", "from_hdulist"], [140, 3, 1, "", "from_table"], [140, 3, 1, "", "get_bias"], [140, 3, 1, "", "get_bias_energy"], [140, 3, 1, "", "get_mean"], [140, 3, 1, "", "get_resolution"], [140, 2, 1, "", "has_offset_axis"], [140, 3, 1, "", "integral"], [140, 3, 1, "", "integrate_log_log"], [140, 3, 1, "", "interp_missing_data"], [140, 3, 1, "", "is_allclose"], [140, 2, 1, "", "is_pointlike"], [140, 3, 1, "", "normalize"], [140, 3, 1, "", "pad"], [140, 3, 1, "", "pdf_in_safe_range"], [140, 2, 1, "", "pdf_matrix"], [140, 3, 1, "", "peek"], [140, 3, 1, "", "plot_bias"], [140, 3, 1, "", "plot_matrix"], [140, 2, 1, "", "quantity"], [140, 3, 1, "", "read"], [140, 2, 1, "", "required_axes"], [140, 3, 1, "", "slice_by_idx"], [140, 2, 1, "", "tag"], [140, 3, 1, "", "to_hdulist"], [140, 3, 1, "", "to_image"], [140, 3, 1, "", "to_table"], [140, 3, 1, "", "to_table_hdu"], [140, 3, 1, "", "to_unit"], [140, 2, 1, "", "unit"], [140, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[141, 3, 1, "", "copy"], [141, 3, 1, "", "cutout"], [141, 3, 1, "", "downsample"], [141, 2, 1, "", "edisp_map"], [141, 3, 1, "", "from_diagonal_response"], [141, 3, 1, "", "from_edisp_kernel"], [141, 3, 1, "", "from_gauss"], [141, 3, 1, "", "from_geom"], [141, 3, 1, "", "from_hdulist"], [141, 3, 1, "", "get_edisp_kernel"], [141, 2, 1, "", "mask_safe_image"], [141, 3, 1, "", "peek"], [141, 3, 1, "", "read"], [141, 2, 1, "", "required_axes"], [141, 3, 1, "", "resample_energy_axis"], [141, 3, 1, "", "slice_by_idx"], [141, 3, 1, "", "stack"], [141, 2, 1, "", "tag"], [141, 3, 1, "", "to_hdulist"], [141, 3, 1, "", "to_image"], [141, 3, 1, "", "to_region_nd_map"], [141, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[142, 3, 1, "", "copy"], [142, 3, 1, "", "cutout"], [142, 3, 1, "", "downsample"], [142, 2, 1, "", "edisp_map"], [142, 3, 1, "", "from_diagonal_response"], [142, 3, 1, "", "from_geom"], [142, 3, 1, "", "from_hdulist"], [142, 3, 1, "", "get_edisp_kernel"], [142, 2, 1, "", "mask_safe_image"], [142, 3, 1, "", "normalize"], [142, 3, 1, "", "peek"], [142, 3, 1, "", "read"], [142, 2, 1, "", "required_axes"], [142, 3, 1, "", "sample_coord"], [142, 3, 1, "", "slice_by_idx"], [142, 3, 1, "", "stack"], [142, 2, 1, "", "tag"], [142, 3, 1, "", "to_edisp_kernel_map"], [142, 3, 1, "", "to_hdulist"], [142, 3, 1, "", "to_region_nd_map"], [142, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[143, 2, 1, "", "axes"], [143, 3, 1, "", "cumsum"], [143, 2, 1, "", "data"], [143, 2, 1, "", "default_interp_kwargs"], [143, 2, 1, "", "default_unit"], [143, 3, 1, "", "evaluate"], [143, 2, 1, "", "fov_alignment"], [143, 3, 1, "", "from_hdulist"], [143, 3, 1, "", "from_parametrization"], [143, 3, 1, "", "from_table"], [143, 2, 1, "", "has_offset_axis"], [143, 3, 1, "", "integral"], [143, 3, 1, "", "integrate_log_log"], [143, 3, 1, "", "interp_missing_data"], [143, 3, 1, "", "is_allclose"], [143, 2, 1, "", "is_pointlike"], [143, 3, 1, "", "normalize"], [143, 3, 1, "", "pad"], [143, 3, 1, "", "peek"], [143, 3, 1, "", "plot"], [143, 3, 1, "", "plot_energy_dependence"], [143, 3, 1, "", "plot_offset_dependence"], [143, 2, 1, "", "quantity"], [143, 3, 1, "", "read"], [143, 2, 1, "", "required_axes"], [143, 3, 1, "", "slice_by_idx"], [143, 2, 1, "", "tag"], [143, 3, 1, "", "to_hdulist"], [143, 3, 1, "", "to_table"], [143, 3, 1, "", "to_table_hdu"], [143, 3, 1, "", "to_unit"], [143, 2, 1, "", "unit"], [143, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[144, 2, 1, "", "axes"], [144, 3, 1, "", "containment"], [144, 3, 1, "", "containment_radius"], [144, 3, 1, "", "cumsum"], [144, 2, 1, "", "data"], [144, 2, 1, "", "default_interp_kwargs"], [144, 3, 1, "", "evaluate"], [144, 3, 1, "", "evaluate_containment"], [144, 3, 1, "", "evaluate_direct"], [144, 3, 1, "", "evaluate_parameters"], [144, 2, 1, "", "fov_alignment"], [144, 3, 1, "", "from_hdulist"], [144, 3, 1, "", "from_table"], [144, 2, 1, "", "has_offset_axis"], [144, 3, 1, "", "info"], [144, 3, 1, "", "integral"], [144, 3, 1, "", "integrate_log_log"], [144, 3, 1, "", "interp_missing_data"], [144, 3, 1, "", "is_allclose"], [144, 2, 1, "", "is_pointlike"], [144, 3, 1, "", "normalize"], [144, 3, 1, "", "pad"], [144, 3, 1, "", "peek"], [144, 3, 1, "", "plot_containment_radius"], [144, 3, 1, "", "plot_containment_radius_vs_energy"], [144, 3, 1, "", "plot_psf_vs_rad"], [144, 2, 1, "", "quantity"], [144, 3, 1, "", "read"], [144, 2, 1, "", "required_axes"], [144, 2, 1, "", "required_parameters"], [144, 3, 1, "", "slice_by_idx"], [144, 2, 1, "", "tag"], [144, 3, 1, "", "to_hdulist"], [144, 3, 1, "", "to_psf3d"], [144, 3, 1, "", "to_table"], [144, 3, 1, "", "to_table_hdu"], [144, 3, 1, "", "to_unit"], [144, 2, 1, "", "unit"], [144, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[145, 2, 1, "", "axes"], [145, 3, 1, "", "cumsum"], [145, 2, 1, "", "data"], [145, 2, 1, "", "default_interp_kwargs"], [145, 2, 1, "", "default_unit"], [145, 3, 1, "", "evaluate"], [145, 2, 1, "", "fov_alignment"], [145, 3, 1, "", "from_gauss"], [145, 3, 1, "", "from_hdulist"], [145, 3, 1, "", "from_table"], [145, 2, 1, "", "has_offset_axis"], [145, 3, 1, "", "integral"], [145, 3, 1, "", "integrate_log_log"], [145, 3, 1, "", "interp_missing_data"], [145, 3, 1, "", "is_allclose"], [145, 2, 1, "", "is_pointlike"], [145, 3, 1, "", "normalize"], [145, 3, 1, "", "pad"], [145, 3, 1, "", "peek"], [145, 3, 1, "", "plot_bias"], [145, 3, 1, "", "plot_migration"], [145, 2, 1, "", "quantity"], [145, 3, 1, "", "read"], [145, 2, 1, "", "required_axes"], [145, 3, 1, "", "slice_by_idx"], [145, 2, 1, "", "tag"], [145, 3, 1, "", "to_edisp_kernel"], [145, 3, 1, "", "to_hdulist"], [145, 3, 1, "", "to_table"], [145, 3, 1, "", "to_table_hdu"], [145, 3, 1, "", "to_unit"], [145, 2, 1, "", "unit"], [145, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[146, 2, 1, "", "ALTAZ"], [146, 2, 1, "", "RADEC"]], "gammapy.irf.IRF": [[147, 2, 1, "", "axes"], [147, 3, 1, "", "cumsum"], [147, 2, 1, "", "data"], [147, 2, 1, "", "default_interp_kwargs"], [147, 3, 1, "", "evaluate"], [147, 2, 1, "", "fov_alignment"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "from_table"], [147, 2, 1, "", "has_offset_axis"], [147, 3, 1, "", "integral"], [147, 3, 1, "", "integrate_log_log"], [147, 3, 1, "", "interp_missing_data"], [147, 3, 1, "", "is_allclose"], [147, 2, 1, "", "is_pointlike"], [147, 3, 1, "", "normalize"], [147, 3, 1, "", "pad"], [147, 2, 1, "", "quantity"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "slice_by_idx"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_table"], [147, 3, 1, "", "to_table_hdu"], [147, 3, 1, "", "to_unit"], [147, 2, 1, "", "unit"], [147, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[148, 3, 1, "", "copy"], [148, 3, 1, "", "cutout"], [148, 3, 1, "", "downsample"], [148, 3, 1, "", "from_hdulist"], [148, 2, 1, "", "mask_safe_image"], [148, 3, 1, "", "read"], [148, 2, 1, "", "required_axes"], [148, 3, 1, "", "slice_by_idx"], [148, 3, 1, "", "stack"], [148, 2, 1, "", "tag"], [148, 3, 1, "", "to_hdulist"], [148, 3, 1, "", "to_region_nd_map"], [148, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "containment"], [150, 3, 1, "", "containment_radius"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 2, 1, "", "default_unit"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "info"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot_containment_radius"], [150, 3, 1, "", "plot_containment_radius_vs_energy"], [150, 3, 1, "", "plot_psf_vs_rad"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[151, 2, 1, "", "data"], [151, 3, 1, "", "from_gauss"], [151, 3, 1, "", "from_spatial_model"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "plot_kernel"], [151, 2, 1, "", "psf_kernel_map"], [151, 3, 1, "", "read"], [151, 3, 1, "", "slice_by_idx"], [151, 3, 1, "", "to_image"], [151, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "containment"], [152, 3, 1, "", "containment_radius"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 3, 1, "", "evaluate"], [152, 3, 1, "", "evaluate_containment"], [152, 3, 1, "", "evaluate_direct"], [152, 3, 1, "", "evaluate_parameters"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "info"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 3, 1, "", "peek"], [152, 3, 1, "", "plot_containment_radius"], [152, 3, 1, "", "plot_containment_radius_vs_energy"], [152, 3, 1, "", "plot_psf_vs_rad"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 2, 1, "", "required_parameters"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_psf3d"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[153, 3, 1, "", "containment"], [153, 3, 1, "", "containment_radius"], [153, 3, 1, "", "containment_radius_map"], [153, 3, 1, "", "copy"], [153, 3, 1, "", "cutout"], [153, 3, 1, "", "downsample"], [153, 2, 1, "", "energy_name"], [153, 3, 1, "", "from_gauss"], [153, 3, 1, "", "from_geom"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "get_psf_kernel"], [153, 2, 1, "", "mask_safe_image"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot_containment_radius_vs_energy"], [153, 3, 1, "", "plot_psf_vs_rad"], [153, 2, 1, "", "psf_map"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "sample_coord"], [153, 3, 1, "", "slice_by_idx"], [153, 3, 1, "", "stack"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_image"], [153, 3, 1, "", "to_region_nd_map"], [153, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "containment"], [154, 3, 1, "", "containment_radius"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 3, 1, "", "evaluate"], [154, 3, 1, "", "evaluate_containment"], [154, 3, 1, "", "evaluate_direct"], [154, 3, 1, "", "evaluate_parameters"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "info"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_containment_radius"], [154, 3, 1, "", "plot_containment_radius_vs_energy"], [154, 3, 1, "", "plot_psf_vs_rad"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 2, 1, "", "required_parameters"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_psf3d"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[155, 2, 1, "", "axes"], [155, 3, 1, "", "cumsum"], [155, 2, 1, "", "data"], [155, 2, 1, "", "default_interp_kwargs"], [155, 2, 1, "", "default_unit"], [155, 3, 1, "", "evaluate"], [155, 2, 1, "", "fov_alignment"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "from_irf"], [155, 3, 1, "", "from_table"], [155, 2, 1, "", "has_offset_axis"], [155, 3, 1, "", "integral"], [155, 3, 1, "", "integrate_log_log"], [155, 3, 1, "", "interp_missing_data"], [155, 3, 1, "", "is_allclose"], [155, 2, 1, "", "is_fixed_rad_max"], [155, 2, 1, "", "is_pointlike"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "pad"], [155, 3, 1, "", "plot_rad_max_vs_energy"], [155, 2, 1, "", "quantity"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "slice_by_idx"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_table"], [155, 3, 1, "", "to_table_hdu"], [155, 3, 1, "", "to_unit"], [155, 2, 1, "", "unit"], [155, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[156, 3, 1, "", "containment"], [156, 3, 1, "", "containment_radius"], [156, 3, 1, "", "containment_radius_map"], [156, 3, 1, "", "copy"], [156, 3, 1, "", "cutout"], [156, 3, 1, "", "downsample"], [156, 2, 1, "", "energy_name"], [156, 3, 1, "", "from_gauss"], [156, 3, 1, "", "from_geom"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "get_psf_kernel"], [156, 2, 1, "", "mask_safe_image"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot_containment_radius_vs_energy"], [156, 3, 1, "", "plot_psf_vs_rad"], [156, 2, 1, "", "psf_map"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "sample_coord"], [156, 3, 1, "", "slice_by_idx"], [156, 3, 1, "", "stack"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_image"], [156, 3, 1, "", "to_region_nd_map"], [156, 3, 1, "", "write"]], "gammapy.makers": [[158, 1, 1, "", "AdaptiveRingBackgroundMaker"], [159, 1, 1, "", "DatasetsMaker"], [160, 1, 1, "", "FoVBackgroundMaker"], [161, 5, 1, "", "MAKER_REGISTRY"], [162, 1, 1, "", "Maker"], [163, 1, 1, "", "MapDatasetMaker"], [164, 1, 1, "", "PhaseBackgroundMaker"], [165, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [166, 1, 1, "", "ReflectedRegionsFinder"], [167, 1, 1, "", "RegionsFinder"], [168, 1, 1, "", "RingBackgroundMaker"], [169, 1, 1, "", "SafeMaskMaker"], [170, 1, 1, "", "SpectrumDatasetMaker"], [171, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[158, 3, 1, "", "kernels"], [158, 3, 1, "", "make_cubes"], [158, 3, 1, "", "run"], [158, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[159, 3, 1, "", "callback"], [159, 3, 1, "", "error_callback"], [159, 3, 1, "", "make_dataset"], [159, 2, 1, "", "n_jobs"], [159, 2, 1, "", "offset_max"], [159, 2, 1, "", "parallel_backend"], [159, 3, 1, "", "run"], [159, 2, 1, "", "safe_mask_maker"], [159, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[160, 2, 1, "", "available_methods"], [160, 3, 1, "", "make_background_fit"], [160, 3, 1, "", "make_background_scale"], [160, 3, 1, "", "make_default_fov_background_model"], [160, 3, 1, "", "make_exclusion_mask"], [160, 2, 1, "", "method"], [160, 3, 1, "", "run"], [160, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[162, 3, 1, "", "run"], [162, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[163, 2, 1, "", "available_selection"], [163, 3, 1, "", "make_background"], [163, 3, 1, "", "make_counts"], [163, 3, 1, "", "make_edisp"], [163, 3, 1, "", "make_edisp_kernel"], [163, 3, 1, "", "make_exposure"], [163, 3, 1, "", "make_exposure_irf"], [163, 3, 1, "", "make_meta_table"], [163, 3, 1, "", "make_psf"], [163, 3, 1, "", "run"], [163, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[164, 3, 1, "", "make_counts"], [164, 3, 1, "", "make_counts_off"], [164, 3, 1, "", "run"], [164, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[165, 3, 1, "", "make_counts_off"], [165, 3, 1, "", "run"], [165, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[166, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[167, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[168, 3, 1, "", "kernel"], [168, 3, 1, "", "make_maps_off"], [168, 3, 1, "", "run"], [168, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[169, 2, 1, "", "available_methods"], [169, 3, 1, "", "make_mask_bkg_invalid"], [169, 3, 1, "", "make_mask_energy_aeff_default"], [169, 3, 1, "", "make_mask_energy_aeff_max"], [169, 3, 1, "", "make_mask_energy_bkg_peak"], [169, 3, 1, "", "make_mask_energy_edisp_bias"], [169, 3, 1, "", "make_mask_offset_max"], [169, 3, 1, "", "run"], [169, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[170, 2, 1, "", "available_selection"], [170, 3, 1, "", "make_background"], [170, 3, 1, "", "make_counts"], [170, 3, 1, "", "make_edisp"], [170, 3, 1, "", "make_edisp_kernel"], [170, 3, 1, "", "make_exposure"], [170, 3, 1, "", "make_exposure_irf"], [170, 3, 1, "", "make_meta_table"], [170, 3, 1, "", "make_psf"], [170, 3, 1, "", "run"], [170, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[171, 3, 1, "", "run"]], "gammapy.makers.utils": [[172, 4, 1, "", "make_counts_rad_max"], [173, 4, 1, "", "make_edisp_kernel_map"], [174, 4, 1, "", "make_edisp_map"], [175, 4, 1, "", "make_effective_livetime_map"], [176, 4, 1, "", "make_map_background_irf"], [177, 4, 1, "", "make_map_exposure_true_energy"], [178, 4, 1, "", "make_observation_time_map"], [179, 4, 1, "", "make_psf_map"], [180, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[181, 1, 1, "", "Geom"], [182, 1, 1, "", "HpxGeom"], [183, 1, 1, "", "HpxMap"], [184, 1, 1, "", "HpxNDMap"], [185, 1, 1, "", "LabelMapAxis"], [186, 1, 1, "", "Map"], [187, 1, 1, "", "MapAxes"], [188, 1, 1, "", "MapAxis"], [189, 1, 1, "", "MapCoord"], [190, 1, 1, "", "Maps"], [191, 1, 1, "", "RegionGeom"], [192, 1, 1, "", "RegionNDMap"], [193, 1, 1, "", "TimeMapAxis"], [194, 1, 1, "", "WcsGeom"], [195, 1, 1, "", "WcsMap"], [196, 1, 1, "", "WcsNDMap"], [197, 4, 1, "", "containment_radius"], [198, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[181, 2, 1, "", "as_energy_true"], [181, 2, 1, "", "center_coord"], [181, 2, 1, "", "center_pix"], [181, 2, 1, "", "center_skydir"], [181, 3, 1, "", "contains"], [181, 3, 1, "", "contains_pix"], [181, 3, 1, "", "coord_to_idx"], [181, 3, 1, "", "coord_to_pix"], [181, 3, 1, "", "copy"], [181, 3, 1, "", "crop"], [181, 3, 1, "", "data_nbytes"], [181, 2, 1, "", "data_shape"], [181, 3, 1, "", "downsample"], [181, 3, 1, "", "drop"], [181, 3, 1, "", "energy_mask"], [181, 3, 1, "", "from_hdulist"], [181, 3, 1, "", "get_coord"], [181, 3, 1, "", "get_idx"], [181, 2, 1, "", "has_energy_axis"], [181, 2, 1, "", "is_allsky"], [181, 2, 1, "", "is_flat"], [181, 2, 1, "", "is_image"], [181, 3, 1, "", "pad"], [181, 3, 1, "", "pix_to_coord"], [181, 3, 1, "", "pix_to_idx"], [181, 3, 1, "", "rename_axes"], [181, 3, 1, "", "replace_axis"], [181, 3, 1, "", "resample_axis"], [181, 3, 1, "", "slice_by_idx"], [181, 3, 1, "", "solid_angle"], [181, 3, 1, "", "squash"], [181, 3, 1, "", "to_bands_hdu"], [181, 3, 1, "", "to_cube"], [181, 3, 1, "", "to_image"], [181, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[182, 2, 1, "", "as_energy_true"], [182, 2, 1, "", "axes"], [182, 2, 1, "", "axes_names"], [182, 2, 1, "", "center_coord"], [182, 2, 1, "", "center_pix"], [182, 2, 1, "", "center_skydir"], [182, 3, 1, "", "contains"], [182, 3, 1, "", "contains_pix"], [182, 3, 1, "", "coord_to_idx"], [182, 3, 1, "", "coord_to_pix"], [182, 3, 1, "", "copy"], [182, 3, 1, "", "create"], [182, 3, 1, "", "crop"], [182, 3, 1, "", "cutout"], [182, 3, 1, "", "data_nbytes"], [182, 2, 1, "", "data_shape"], [182, 2, 1, "", "data_shape_axes"], [182, 3, 1, "", "downsample"], [182, 3, 1, "", "drop"], [182, 3, 1, "", "energy_mask"], [182, 2, 1, "", "frame"], [182, 3, 1, "", "from_hdu"], [182, 3, 1, "", "from_hdulist"], [182, 3, 1, "", "from_header"], [182, 3, 1, "", "get_coord"], [182, 3, 1, "", "get_idx"], [182, 3, 1, "", "get_index_list"], [182, 3, 1, "", "global_to_local"], [182, 2, 1, "", "has_energy_axis"], [182, 3, 1, "", "interp_weights"], [182, 2, 1, "", "ipix"], [182, 3, 1, "", "is_aligned"], [182, 3, 1, "", "is_allclose"], [182, 2, 1, "", "is_allsky"], [182, 2, 1, "", "is_flat"], [182, 2, 1, "", "is_hpx"], [182, 2, 1, "", "is_image"], [182, 2, 1, "", "is_region"], [182, 2, 1, "", "is_regular"], [182, 3, 1, "", "local_to_global"], [182, 2, 1, "", "ndim"], [182, 2, 1, "", "nest"], [182, 2, 1, "", "npix"], [182, 2, 1, "", "npix_max"], [182, 2, 1, "", "nside"], [182, 2, 1, "", "order"], [182, 2, 1, "", "ordering"], [182, 3, 1, "", "pad"], [182, 3, 1, "", "pix_to_coord"], [182, 3, 1, "", "pix_to_idx"], [182, 2, 1, "", "pixel_scales"], [182, 2, 1, "", "projection"], [182, 2, 1, "", "region"], [182, 3, 1, "", "region_mask"], [182, 3, 1, "", "rename_axes"], [182, 3, 1, "", "replace_axis"], [182, 3, 1, "", "resample_axis"], [182, 3, 1, "", "separation"], [182, 2, 1, "", "shape_axes"], [182, 3, 1, "", "slice_by_idx"], [182, 3, 1, "", "solid_angle"], [182, 3, 1, "", "squash"], [182, 3, 1, "", "to_bands_hdu"], [182, 3, 1, "", "to_binsz"], [182, 3, 1, "", "to_cube"], [182, 3, 1, "", "to_header"], [182, 3, 1, "", "to_image"], [182, 3, 1, "", "to_nside"], [182, 3, 1, "", "to_swapped"], [182, 3, 1, "", "to_wcs_geom"], [182, 3, 1, "", "to_wcs_tiles"], [182, 3, 1, "", "upsample"], [182, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[183, 3, 1, "", "coadd"], [183, 3, 1, "", "copy"], [183, 3, 1, "", "create"], [183, 3, 1, "", "crop"], [183, 3, 1, "", "cumsum"], [183, 2, 1, "", "data"], [183, 3, 1, "", "dot"], [183, 3, 1, "", "downsample"], [183, 3, 1, "", "fill_by_coord"], [183, 3, 1, "", "fill_by_idx"], [183, 3, 1, "", "fill_by_pix"], [183, 3, 1, "", "fill_events"], [183, 3, 1, "", "from_geom"], [183, 3, 1, "", "from_hdulist"], [183, 3, 1, "", "from_stack"], [183, 2, 1, "", "geom"], [183, 3, 1, "", "get_by_coord"], [183, 3, 1, "", "get_by_idx"], [183, 3, 1, "", "get_by_pix"], [183, 3, 1, "", "get_image_by_coord"], [183, 3, 1, "", "get_image_by_idx"], [183, 3, 1, "", "get_image_by_pix"], [183, 3, 1, "", "get_spectrum"], [183, 3, 1, "", "integral"], [183, 3, 1, "", "interp_by_coord"], [183, 3, 1, "", "interp_by_pix"], [183, 3, 1, "", "interp_to_geom"], [183, 3, 1, "", "is_allclose"], [183, 2, 1, "", "is_mask"], [183, 3, 1, "", "iter_by_axis"], [183, 3, 1, "", "iter_by_image"], [183, 3, 1, "", "iter_by_image_data"], [183, 3, 1, "", "iter_by_image_index"], [183, 3, 1, "", "mask_nearest_position"], [183, 2, 1, "", "meta"], [183, 3, 1, "", "normalize"], [183, 3, 1, "", "pad"], [183, 3, 1, "", "plot_grid"], [183, 3, 1, "", "plot_interactive"], [183, 2, 1, "", "quantity"], [183, 3, 1, "", "read"], [183, 3, 1, "", "reduce"], [183, 3, 1, "", "reduce_over_axes"], [183, 3, 1, "", "rename_axes"], [183, 3, 1, "", "reorder_axes"], [183, 3, 1, "", "reproject_by_image"], [183, 3, 1, "", "reproject_to_geom"], [183, 3, 1, "", "resample"], [183, 3, 1, "", "resample_axis"], [183, 3, 1, "", "sample_coord"], [183, 3, 1, "", "set_by_coord"], [183, 3, 1, "", "set_by_idx"], [183, 3, 1, "", "set_by_pix"], [183, 3, 1, "", "slice_by_idx"], [183, 3, 1, "", "split_by_axis"], [183, 3, 1, "", "sum_over_axes"], [183, 2, 1, "", "tag"], [183, 3, 1, "", "to_cube"], [183, 3, 1, "", "to_hdu"], [183, 3, 1, "", "to_hdulist"], [183, 3, 1, "", "to_swapped"], [183, 3, 1, "", "to_unit"], [183, 3, 1, "", "to_wcs"], [183, 2, 1, "", "unit"], [183, 3, 1, "", "upsample"], [183, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[184, 3, 1, "", "coadd"], [184, 3, 1, "", "convolve"], [184, 3, 1, "", "convolve_full"], [184, 3, 1, "", "convolve_wcs"], [184, 3, 1, "", "copy"], [184, 3, 1, "", "create"], [184, 3, 1, "", "crop"], [184, 3, 1, "", "cumsum"], [184, 3, 1, "", "cutout"], [184, 2, 1, "", "data"], [184, 3, 1, "", "dot"], [184, 3, 1, "", "downsample"], [184, 3, 1, "", "fill_by_coord"], [184, 3, 1, "", "fill_by_idx"], [184, 3, 1, "", "fill_by_pix"], [184, 3, 1, "", "fill_events"], [184, 3, 1, "", "from_geom"], [184, 3, 1, "", "from_hdu"], [184, 3, 1, "", "from_hdulist"], [184, 3, 1, "", "from_stack"], [184, 3, 1, "", "from_wcs_tiles"], [184, 2, 1, "", "geom"], [184, 3, 1, "", "get_by_coord"], [184, 3, 1, "", "get_by_idx"], [184, 3, 1, "", "get_by_pix"], [184, 3, 1, "", "get_image_by_coord"], [184, 3, 1, "", "get_image_by_idx"], [184, 3, 1, "", "get_image_by_pix"], [184, 3, 1, "", "get_spectrum"], [184, 3, 1, "", "integral"], [184, 3, 1, "", "interp_by_coord"], [184, 3, 1, "", "interp_by_pix"], [184, 3, 1, "", "interp_to_geom"], [184, 3, 1, "", "is_allclose"], [184, 2, 1, "", "is_mask"], [184, 3, 1, "", "iter_by_axis"], [184, 3, 1, "", "iter_by_image"], [184, 3, 1, "", "iter_by_image_data"], [184, 3, 1, "", "iter_by_image_index"], [184, 3, 1, "", "mask_nearest_position"], [184, 2, 1, "", "meta"], [184, 3, 1, "", "normalize"], [184, 3, 1, "", "pad"], [184, 3, 1, "", "plot"], [184, 3, 1, "", "plot_grid"], [184, 3, 1, "", "plot_interactive"], [184, 3, 1, "", "plot_mask"], [184, 2, 1, "", "quantity"], [184, 3, 1, "", "read"], [184, 3, 1, "", "reduce"], [184, 3, 1, "", "reduce_over_axes"], [184, 3, 1, "", "rename_axes"], [184, 3, 1, "", "reorder_axes"], [184, 3, 1, "", "reproject_by_image"], [184, 3, 1, "", "reproject_to_geom"], [184, 3, 1, "", "resample"], [184, 3, 1, "", "resample_axis"], [184, 3, 1, "", "sample_coord"], [184, 3, 1, "", "set_by_coord"], [184, 3, 1, "", "set_by_idx"], [184, 3, 1, "", "set_by_pix"], [184, 3, 1, "", "slice_by_idx"], [184, 3, 1, "", "smooth"], [184, 3, 1, "", "split_by_axis"], [184, 3, 1, "", "stack"], [184, 3, 1, "", "sum_over_axes"], [184, 2, 1, "", "tag"], [184, 3, 1, "", "to_cube"], [184, 3, 1, "", "to_hdu"], [184, 3, 1, "", "to_hdulist"], [184, 3, 1, "", "to_nside"], [184, 3, 1, "", "to_region_nd_map"], [184, 3, 1, "", "to_swapped"], [184, 3, 1, "", "to_unit"], [184, 3, 1, "", "to_wcs"], [184, 3, 1, "", "to_wcs_tiles"], [184, 2, 1, "", "unit"], [184, 3, 1, "", "upsample"], [184, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[185, 2, 1, "", "as_plot_center"], [185, 2, 1, "", "as_plot_edges"], [185, 2, 1, "", "as_plot_labels"], [185, 2, 1, "", "as_plot_xerr"], [185, 3, 1, "", "assert_name"], [185, 2, 1, "", "bin_width"], [185, 2, 1, "", "center"], [185, 3, 1, "", "concatenate"], [185, 3, 1, "", "coord_to_idx"], [185, 3, 1, "", "coord_to_pix"], [185, 3, 1, "", "copy"], [185, 3, 1, "", "downsample"], [185, 2, 1, "", "edges"], [185, 2, 1, "", "edges_max"], [185, 2, 1, "", "edges_min"], [185, 3, 1, "", "format_plot_xaxis"], [185, 3, 1, "", "from_stack"], [185, 3, 1, "", "from_table"], [185, 3, 1, "", "is_allclose"], [185, 2, 1, "", "name"], [185, 2, 1, "", "nbin"], [185, 2, 1, "", "node_type"], [185, 3, 1, "", "pad"], [185, 3, 1, "", "pix_to_coord"], [185, 3, 1, "", "pix_to_idx"], [185, 3, 1, "", "resample"], [185, 3, 1, "", "slice"], [185, 3, 1, "", "squash"], [185, 3, 1, "", "to_header"], [185, 2, 1, "", "unit"], [185, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[186, 3, 1, "", "coadd"], [186, 3, 1, "", "copy"], [186, 3, 1, "", "create"], [186, 3, 1, "", "crop"], [186, 3, 1, "", "cumsum"], [186, 2, 1, "", "data"], [186, 3, 1, "", "dot"], [186, 3, 1, "", "downsample"], [186, 3, 1, "", "fill_by_coord"], [186, 3, 1, "", "fill_by_idx"], [186, 3, 1, "", "fill_by_pix"], [186, 3, 1, "", "fill_events"], [186, 3, 1, "", "from_geom"], [186, 3, 1, "", "from_hdulist"], [186, 3, 1, "", "from_stack"], [186, 2, 1, "", "geom"], [186, 3, 1, "", "get_by_coord"], [186, 3, 1, "", "get_by_idx"], [186, 3, 1, "", "get_by_pix"], [186, 3, 1, "", "get_image_by_coord"], [186, 3, 1, "", "get_image_by_idx"], [186, 3, 1, "", "get_image_by_pix"], [186, 3, 1, "", "get_spectrum"], [186, 3, 1, "", "integral"], [186, 3, 1, "", "interp_by_coord"], [186, 3, 1, "", "interp_by_pix"], [186, 3, 1, "", "interp_to_geom"], [186, 3, 1, "", "is_allclose"], [186, 2, 1, "", "is_mask"], [186, 3, 1, "", "iter_by_axis"], [186, 3, 1, "", "iter_by_image"], [186, 3, 1, "", "iter_by_image_data"], [186, 3, 1, "", "iter_by_image_index"], [186, 3, 1, "", "mask_nearest_position"], [186, 2, 1, "", "meta"], [186, 3, 1, "", "normalize"], [186, 3, 1, "", "pad"], [186, 3, 1, "", "plot_grid"], [186, 3, 1, "", "plot_interactive"], [186, 2, 1, "", "quantity"], [186, 3, 1, "", "read"], [186, 3, 1, "", "reduce"], [186, 3, 1, "", "reduce_over_axes"], [186, 3, 1, "", "rename_axes"], [186, 3, 1, "", "reorder_axes"], [186, 3, 1, "", "reproject_by_image"], [186, 3, 1, "", "reproject_to_geom"], [186, 3, 1, "", "resample"], [186, 3, 1, "", "resample_axis"], [186, 3, 1, "", "sample_coord"], [186, 3, 1, "", "set_by_coord"], [186, 3, 1, "", "set_by_idx"], [186, 3, 1, "", "set_by_pix"], [186, 3, 1, "", "slice_by_idx"], [186, 3, 1, "", "split_by_axis"], [186, 3, 1, "", "sum_over_axes"], [186, 2, 1, "", "tag"], [186, 3, 1, "", "to_cube"], [186, 3, 1, "", "to_unit"], [186, 2, 1, "", "unit"], [186, 3, 1, "", "upsample"], [186, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[187, 3, 1, "", "assert_names"], [187, 3, 1, "", "bin_volume"], [187, 2, 1, "", "center_coord"], [187, 3, 1, "", "coord_to_idx"], [187, 3, 1, "", "coord_to_pix"], [187, 3, 1, "", "copy"], [187, 3, 1, "", "count"], [187, 3, 1, "", "downsample"], [187, 3, 1, "", "drop"], [187, 3, 1, "", "from_default"], [187, 3, 1, "", "from_table"], [187, 3, 1, "", "from_table_hdu"], [187, 3, 1, "", "get_coord"], [187, 3, 1, "", "index"], [187, 3, 1, "", "index_data"], [187, 3, 1, "", "is_allclose"], [187, 2, 1, "", "is_flat"], [187, 2, 1, "", "is_unidimensional"], [187, 2, 1, "", "iter_with_reshape"], [187, 2, 1, "", "names"], [187, 3, 1, "", "pad"], [187, 3, 1, "", "pix_to_coord"], [187, 3, 1, "", "pix_to_idx"], [187, 2, 1, "", "primary_axis"], [187, 3, 1, "", "rename_axes"], [187, 3, 1, "", "replace"], [187, 3, 1, "", "resample"], [187, 2, 1, "", "reverse"], [187, 2, 1, "", "shape"], [187, 3, 1, "", "slice_by_idx"], [187, 3, 1, "", "squash"], [187, 3, 1, "", "to_header"], [187, 3, 1, "", "to_table"], [187, 3, 1, "", "to_table_hdu"], [187, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[188, 2, 1, "", "as_plot_center"], [188, 2, 1, "", "as_plot_edges"], [188, 2, 1, "", "as_plot_labels"], [188, 2, 1, "", "as_plot_scale"], [188, 2, 1, "", "as_plot_xerr"], [188, 3, 1, "", "assert_name"], [188, 2, 1, "", "bin_width"], [188, 2, 1, "", "bounds"], [188, 2, 1, "", "center"], [188, 3, 1, "", "concatenate"], [188, 3, 1, "", "coord_to_idx"], [188, 3, 1, "", "coord_to_pix"], [188, 3, 1, "", "copy"], [188, 3, 1, "", "downsample"], [188, 2, 1, "", "edges"], [188, 2, 1, "", "edges_max"], [188, 2, 1, "", "edges_min"], [188, 3, 1, "", "format_plot_xaxis"], [188, 3, 1, "", "format_plot_yaxis"], [188, 3, 1, "", "from_bounds"], [188, 3, 1, "", "from_edges"], [188, 3, 1, "", "from_energy_bounds"], [188, 3, 1, "", "from_energy_edges"], [188, 3, 1, "", "from_nodes"], [188, 3, 1, "", "from_stack"], [188, 3, 1, "", "from_table"], [188, 3, 1, "", "from_table_hdu"], [188, 3, 1, "", "group_table"], [188, 2, 1, "", "interp"], [188, 3, 1, "", "is_aligned"], [188, 3, 1, "", "is_allclose"], [188, 2, 1, "", "is_energy_axis"], [188, 2, 1, "", "iter_by_edges"], [188, 2, 1, "", "name"], [188, 2, 1, "", "nbin"], [188, 2, 1, "", "nbin_per_decade"], [188, 2, 1, "", "node_type"], [188, 3, 1, "", "pad"], [188, 3, 1, "", "pix_to_coord"], [188, 3, 1, "", "pix_to_idx"], [188, 3, 1, "", "rename"], [188, 3, 1, "", "round"], [188, 3, 1, "", "slice"], [188, 3, 1, "", "squash"], [188, 3, 1, "", "to_header"], [188, 3, 1, "", "to_node_type"], [188, 3, 1, "", "to_table"], [188, 3, 1, "", "to_table_hdu"], [188, 2, 1, "", "unit"], [188, 3, 1, "", "upsample"], [188, 2, 1, "", "use_center_as_plot_labels"]], "gammapy.maps.MapCoord": [[189, 3, 1, "", "apply_mask"], [189, 2, 1, "", "axis_names"], [189, 2, 1, "", "broadcasted"], [189, 3, 1, "", "copy"], [189, 3, 1, "", "create"], [189, 2, 1, "", "flat"], [189, 2, 1, "", "frame"], [189, 2, 1, "", "lat"], [189, 2, 1, "", "lon"], [189, 2, 1, "", "match_by_name"], [189, 2, 1, "", "ndim"], [189, 2, 1, "", "phi"], [189, 2, 1, "", "shape"], [189, 2, 1, "", "size"], [189, 2, 1, "", "skycoord"], [189, 2, 1, "", "theta"], [189, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[190, 3, 1, "", "clear"], [190, 3, 1, "", "from_geom"], [190, 3, 1, "", "from_hdulist"], [190, 2, 1, "", "geom"], [190, 3, 1, "", "get"], [190, 3, 1, "", "items"], [190, 3, 1, "", "keys"], [190, 3, 1, "", "pop"], [190, 3, 1, "", "popitem"], [190, 3, 1, "", "read"], [190, 3, 1, "", "setdefault"], [190, 3, 1, "", "to_hdulist"], [190, 3, 1, "", "update"], [190, 3, 1, "", "values"], [190, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[191, 2, 1, "", "as_energy_true"], [191, 2, 1, "", "axes"], [191, 2, 1, "", "axes_names"], [191, 3, 1, "", "bin_volume"], [191, 2, 1, "", "binsz_wcs"], [191, 2, 1, "", "center_coord"], [191, 2, 1, "", "center_pix"], [191, 2, 1, "", "center_skydir"], [191, 3, 1, "", "contains"], [191, 3, 1, "", "contains_pix"], [191, 3, 1, "", "contains_wcs_pix"], [191, 3, 1, "", "coord_to_idx"], [191, 3, 1, "", "coord_to_pix"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "create"], [191, 3, 1, "", "crop"], [191, 3, 1, "", "data_nbytes"], [191, 2, 1, "", "data_shape"], [191, 2, 1, "", "data_shape_axes"], [191, 3, 1, "", "downsample"], [191, 3, 1, "", "drop"], [191, 3, 1, "", "energy_mask"], [191, 2, 1, "", "frame"], [191, 3, 1, "", "from_hdulist"], [191, 3, 1, "", "from_regions"], [191, 3, 1, "", "get_coord"], [191, 3, 1, "", "get_idx"], [191, 3, 1, "", "get_wcs_coord_and_weights"], [191, 2, 1, "", "has_energy_axis"], [191, 2, 1, "", "is_all_point_sky_regions"], [191, 3, 1, "", "is_allclose"], [191, 2, 1, "", "is_allsky"], [191, 2, 1, "", "is_flat"], [191, 2, 1, "", "is_hpx"], [191, 2, 1, "", "is_image"], [191, 2, 1, "", "is_region"], [191, 2, 1, "", "is_regular"], [191, 2, 1, "", "npix"], [191, 3, 1, "", "pad"], [191, 3, 1, "", "pix_to_coord"], [191, 3, 1, "", "pix_to_idx"], [191, 3, 1, "", "plot_region"], [191, 2, 1, "", "projection"], [191, 2, 1, "", "region"], [191, 3, 1, "", "rename_axes"], [191, 3, 1, "", "replace_axis"], [191, 3, 1, "", "resample_axis"], [191, 3, 1, "", "separation"], [191, 3, 1, "", "slice_by_idx"], [191, 3, 1, "", "solid_angle"], [191, 3, 1, "", "squash"], [191, 3, 1, "", "to_bands_hdu"], [191, 3, 1, "", "to_binsz"], [191, 3, 1, "", "to_binsz_wcs"], [191, 3, 1, "", "to_cube"], [191, 3, 1, "", "to_hdulist"], [191, 3, 1, "", "to_image"], [191, 3, 1, "", "to_wcs_geom"], [191, 3, 1, "", "union"], [191, 3, 1, "", "upsample"], [191, 2, 1, "", "wcs"], [191, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[192, 3, 1, "", "coadd"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "create"], [192, 3, 1, "", "crop"], [192, 3, 1, "", "cumsum"], [192, 3, 1, "", "cutout"], [192, 2, 1, "", "data"], [192, 3, 1, "", "dot"], [192, 3, 1, "", "downsample"], [192, 3, 1, "", "fill_by_coord"], [192, 3, 1, "", "fill_by_idx"], [192, 3, 1, "", "fill_by_pix"], [192, 3, 1, "", "fill_events"], [192, 3, 1, "", "from_geom"], [192, 3, 1, "", "from_hdulist"], [192, 3, 1, "", "from_stack"], [192, 3, 1, "", "from_table"], [192, 2, 1, "", "geom"], [192, 3, 1, "", "get_by_coord"], [192, 3, 1, "", "get_by_idx"], [192, 3, 1, "", "get_by_pix"], [192, 3, 1, "", "get_image_by_coord"], [192, 3, 1, "", "get_image_by_idx"], [192, 3, 1, "", "get_image_by_pix"], [192, 3, 1, "", "get_spectrum"], [192, 3, 1, "", "integral"], [192, 3, 1, "", "interp_by_coord"], [192, 3, 1, "", "interp_by_pix"], [192, 3, 1, "", "interp_to_geom"], [192, 3, 1, "", "is_allclose"], [192, 2, 1, "", "is_mask"], [192, 3, 1, "", "iter_by_axis"], [192, 3, 1, "", "iter_by_axis_data"], [192, 3, 1, "", "iter_by_image"], [192, 3, 1, "", "iter_by_image_data"], [192, 3, 1, "", "iter_by_image_index"], [192, 3, 1, "", "mask_nearest_position"], [192, 2, 1, "", "meta"], [192, 3, 1, "", "normalize"], [192, 3, 1, "", "pad"], [192, 3, 1, "", "plot"], [192, 3, 1, "", "plot_grid"], [192, 3, 1, "", "plot_hist"], [192, 3, 1, "", "plot_interactive"], [192, 3, 1, "", "plot_mask"], [192, 3, 1, "", "plot_region"], [192, 2, 1, "", "quantity"], [192, 3, 1, "", "read"], [192, 3, 1, "", "reduce"], [192, 3, 1, "", "reduce_over_axes"], [192, 3, 1, "", "rename_axes"], [192, 3, 1, "", "reorder_axes"], [192, 3, 1, "", "reproject_by_image"], [192, 3, 1, "", "reproject_to_geom"], [192, 3, 1, "", "resample"], [192, 3, 1, "", "resample_axis"], [192, 3, 1, "", "sample_coord"], [192, 3, 1, "", "set_by_coord"], [192, 3, 1, "", "set_by_idx"], [192, 3, 1, "", "set_by_pix"], [192, 3, 1, "", "slice_by_idx"], [192, 3, 1, "", "split_by_axis"], [192, 3, 1, "", "stack"], [192, 3, 1, "", "sum_over_axes"], [192, 2, 1, "", "tag"], [192, 3, 1, "", "to_cube"], [192, 3, 1, "", "to_hdulist"], [192, 3, 1, "", "to_region_nd_map"], [192, 3, 1, "", "to_table"], [192, 3, 1, "", "to_unit"], [192, 2, 1, "", "unit"], [192, 3, 1, "", "upsample"], [192, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[193, 2, 1, "", "as_plot_center"], [193, 2, 1, "", "as_plot_edges"], [193, 2, 1, "", "as_plot_labels"], [193, 2, 1, "", "as_plot_xerr"], [193, 3, 1, "", "assert_name"], [193, 2, 1, "", "bin_width"], [193, 2, 1, "", "bounds"], [193, 2, 1, "", "center"], [193, 3, 1, "", "coord_to_idx"], [193, 3, 1, "", "coord_to_pix"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "downsample"], [193, 2, 1, "", "edges"], [193, 2, 1, "", "edges_max"], [193, 2, 1, "", "edges_min"], [193, 3, 1, "", "format_plot_xaxis"], [193, 3, 1, "", "from_gti"], [193, 3, 1, "", "from_gti_bounds"], [193, 3, 1, "", "from_table"], [193, 3, 1, "", "from_time_bounds"], [193, 3, 1, "", "from_time_edges"], [193, 3, 1, "", "group_table"], [193, 2, 1, "", "interp"], [193, 3, 1, "", "is_aligned"], [193, 3, 1, "", "is_allclose"], [193, 2, 1, "", "is_contiguous"], [193, 2, 1, "", "iter_by_edges"], [193, 2, 1, "", "name"], [193, 2, 1, "", "nbin"], [193, 2, 1, "", "node_type"], [193, 3, 1, "", "pix_to_coord"], [193, 3, 1, "", "pix_to_idx"], [193, 2, 1, "", "reference_time"], [193, 3, 1, "", "slice"], [193, 3, 1, "", "squash"], [193, 2, 1, "", "time_bounds"], [193, 2, 1, "", "time_delta"], [193, 2, 1, "", "time_edges"], [193, 2, 1, "", "time_format"], [193, 2, 1, "", "time_max"], [193, 2, 1, "", "time_mid"], [193, 2, 1, "", "time_min"], [193, 3, 1, "", "to_contiguous"], [193, 3, 1, "", "to_gti"], [193, 3, 1, "", "to_header"], [193, 2, 1, "", "unit"], [193, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[194, 2, 1, "", "as_energy_true"], [194, 2, 1, "", "axes"], [194, 2, 1, "", "axes_names"], [194, 3, 1, "", "bin_volume"], [194, 3, 1, "", "binary_structure"], [194, 3, 1, "", "boundary_mask"], [194, 2, 1, "", "center_coord"], [194, 2, 1, "", "center_pix"], [194, 2, 1, "", "center_skydir"], [194, 3, 1, "", "contains"], [194, 3, 1, "", "contains_pix"], [194, 3, 1, "", "coord_to_idx"], [194, 3, 1, "", "coord_to_pix"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "cutout"], [194, 3, 1, "", "cutout_slices"], [194, 3, 1, "", "data_nbytes"], [194, 2, 1, "", "data_shape"], [194, 2, 1, "", "data_shape_axes"], [194, 2, 1, "", "data_shape_image"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "drop"], [194, 3, 1, "", "energy_mask"], [194, 2, 1, "", "footprint"], [194, 2, 1, "", "footprint_rectangle_sky_region"], [194, 2, 1, "", "frame"], [194, 3, 1, "", "from_aligned"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "from_header"], [194, 3, 1, "", "get_coord"], [194, 3, 1, "", "get_idx"], [194, 3, 1, "", "get_pix"], [194, 2, 1, "", "has_energy_axis"], [194, 3, 1, "", "is_aligned"], [194, 3, 1, "", "is_allclose"], [194, 2, 1, "", "is_allsky"], [194, 2, 1, "", "is_flat"], [194, 2, 1, "", "is_hpx"], [194, 2, 1, "", "is_image"], [194, 2, 1, "", "is_region"], [194, 2, 1, "", "is_regular"], [194, 2, 1, "", "ndim"], [194, 2, 1, "", "npix"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "pix_to_coord"], [194, 3, 1, "", "pix_to_idx"], [194, 2, 1, "", "pixel_area"], [194, 2, 1, "", "pixel_scales"], [194, 2, 1, "", "projection"], [194, 3, 1, "", "region_mask"], [194, 3, 1, "", "region_weights"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "replace_axis"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "separation"], [194, 2, 1, "", "shape_axes"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "solid_angle"], [194, 3, 1, "", "squash"], [194, 3, 1, "", "to_bands_hdu"], [194, 3, 1, "", "to_binsz"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_even_npix"], [194, 3, 1, "", "to_header"], [194, 3, 1, "", "to_image"], [194, 3, 1, "", "to_odd_npix"], [194, 3, 1, "", "upsample"], [194, 2, 1, "", "wcs"], [194, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[195, 3, 1, "", "coadd"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "cumsum"], [195, 2, 1, "", "data"], [195, 3, 1, "", "dot"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "fill_by_coord"], [195, 3, 1, "", "fill_by_idx"], [195, 3, 1, "", "fill_by_pix"], [195, 3, 1, "", "fill_events"], [195, 3, 1, "", "from_geom"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_stack"], [195, 2, 1, "", "geom"], [195, 3, 1, "", "get_by_coord"], [195, 3, 1, "", "get_by_idx"], [195, 3, 1, "", "get_by_pix"], [195, 3, 1, "", "get_image_by_coord"], [195, 3, 1, "", "get_image_by_idx"], [195, 3, 1, "", "get_image_by_pix"], [195, 3, 1, "", "get_spectrum"], [195, 3, 1, "", "integral"], [195, 3, 1, "", "interp_by_coord"], [195, 3, 1, "", "interp_by_pix"], [195, 3, 1, "", "interp_to_geom"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_mask"], [195, 3, 1, "", "iter_by_axis"], [195, 3, 1, "", "iter_by_image"], [195, 3, 1, "", "iter_by_image_data"], [195, 3, 1, "", "iter_by_image_index"], [195, 3, 1, "", "mask_nearest_position"], [195, 2, 1, "", "meta"], [195, 3, 1, "", "normalize"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "plot_grid"], [195, 3, 1, "", "plot_interactive"], [195, 2, 1, "", "quantity"], [195, 3, 1, "", "read"], [195, 3, 1, "", "reduce"], [195, 3, 1, "", "reduce_over_axes"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "reorder_axes"], [195, 3, 1, "", "reproject_by_image"], [195, 3, 1, "", "reproject_to_geom"], [195, 3, 1, "", "resample"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "sample_coord"], [195, 3, 1, "", "set_by_coord"], [195, 3, 1, "", "set_by_idx"], [195, 3, 1, "", "set_by_pix"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "split_by_axis"], [195, 3, 1, "", "sum_over_axes"], [195, 2, 1, "", "tag"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_hdu"], [195, 3, 1, "", "to_hdulist"], [195, 3, 1, "", "to_unit"], [195, 2, 1, "", "unit"], [195, 3, 1, "", "upsample"], [195, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[196, 3, 1, "", "binary_dilate"], [196, 3, 1, "", "binary_erode"], [196, 3, 1, "", "coadd"], [196, 3, 1, "", "convolve"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 3, 1, "", "cutout"], [196, 3, 1, "", "cutout_and_mask_region"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdu"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_contains_region"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_interactive"], [196, 3, 1, "", "plot_mask"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "smooth"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "stack"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdu"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_region_nd_map"], [196, 3, 1, "", "to_region_nd_map_histogram"], [196, 3, 1, "", "to_unit"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.modeling": [[199, 1, 1, "", "Covariance"], [200, 1, 1, "", "Fit"], [201, 1, 1, "", "Parameter"], [202, 1, 1, "", "Parameters"], [203, 1, 1, "", "PriorParameter"], [204, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [270, 4, 1, "", "select_nested_models"], [271, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[199, 2, 1, "", "correlation"], [199, 2, 1, "", "data"], [199, 3, 1, "", "from_factor_matrix"], [199, 3, 1, "", "from_stack"], [199, 3, 1, "", "get_subcovariance"], [199, 3, 1, "", "plot_correlation"], [199, 2, 1, "", "scipy_mvn"], [199, 3, 1, "", "set_subcovariance"], [199, 2, 1, "", "shape"]], "gammapy.modeling.Fit": [[200, 3, 1, "", "confidence"], [200, 3, 1, "", "covariance"], [200, 3, 1, "", "optimize"], [200, 3, 1, "", "run"], [200, 3, 1, "", "stat_contour"], [200, 3, 1, "", "stat_profile"], [200, 3, 1, "", "stat_surface"]], "gammapy.modeling.Parameter": [[201, 3, 1, "", "autoscale"], [201, 3, 1, "", "check_limits"], [201, 2, 1, "", "conf_max"], [201, 2, 1, "", "conf_min"], [201, 3, 1, "", "copy"], [201, 2, 1, "", "error"], [201, 2, 1, "", "factor"], [201, 2, 1, "", "factor_max"], [201, 2, 1, "", "factor_min"], [201, 2, 1, "", "frozen"], [201, 2, 1, "", "is_norm"], [201, 2, 1, "", "max"], [201, 2, 1, "", "min"], [201, 2, 1, "", "name"], [201, 2, 1, "", "norm_parameters"], [201, 2, 1, "", "prior"], [201, 3, 1, "", "prior_stat_sum"], [201, 2, 1, "", "quantity"], [201, 2, 1, "", "scale"], [201, 2, 1, "", "scale_method"], [201, 2, 1, "", "scan_max"], [201, 2, 1, "", "scan_min"], [201, 2, 1, "", "scan_n_sigma"], [201, 2, 1, "", "scan_values"], [201, 3, 1, "", "to_dict"], [201, 2, 1, "", "type"], [201, 2, 1, "", "unit"], [201, 3, 1, "", "update_from_dict"], [201, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[202, 3, 1, "", "autoscale"], [202, 3, 1, "", "check_limits"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "count"], [202, 2, 1, "", "free_parameters"], [202, 3, 1, "", "freeze_all"], [202, 3, 1, "", "from_dict"], [202, 3, 1, "", "from_stack"], [202, 3, 1, "", "index"], [202, 2, 1, "", "max"], [202, 2, 1, "", "min"], [202, 2, 1, "", "names"], [202, 2, 1, "", "norm_parameters"], [202, 2, 1, "", "prior"], [202, 3, 1, "", "prior_stat_sum"], [202, 3, 1, "", "restore_status"], [202, 3, 1, "", "select"], [202, 3, 1, "", "set_parameter_factors"], [202, 3, 1, "", "to_dict"], [202, 3, 1, "", "to_table"], [202, 2, 1, "", "types"], [202, 3, 1, "", "unfreeze_all"], [202, 2, 1, "", "unique_parameters"], [202, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[203, 3, 1, "", "autoscale"], [203, 3, 1, "", "check_limits"], [203, 2, 1, "", "conf_max"], [203, 2, 1, "", "conf_min"], [203, 3, 1, "", "copy"], [203, 2, 1, "", "error"], [203, 2, 1, "", "factor"], [203, 2, 1, "", "factor_max"], [203, 2, 1, "", "factor_min"], [203, 2, 1, "", "frozen"], [203, 2, 1, "", "is_norm"], [203, 2, 1, "", "max"], [203, 2, 1, "", "min"], [203, 2, 1, "", "name"], [203, 2, 1, "", "norm_parameters"], [203, 2, 1, "", "prior"], [203, 3, 1, "", "prior_stat_sum"], [203, 2, 1, "", "quantity"], [203, 2, 1, "", "scale"], [203, 2, 1, "", "scale_method"], [203, 2, 1, "", "scan_max"], [203, 2, 1, "", "scan_min"], [203, 2, 1, "", "scan_n_sigma"], [203, 2, 1, "", "scan_values"], [203, 3, 1, "", "to_dict"], [203, 2, 1, "", "type"], [203, 2, 1, "", "unit"], [203, 3, 1, "", "update_from_dict"], [203, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[204, 3, 1, "", "autoscale"], [204, 3, 1, "", "check_limits"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "count"], [204, 2, 1, "", "free_parameters"], [204, 3, 1, "", "freeze_all"], [204, 3, 1, "", "from_dict"], [204, 3, 1, "", "from_stack"], [204, 3, 1, "", "index"], [204, 2, 1, "", "max"], [204, 2, 1, "", "min"], [204, 2, 1, "", "names"], [204, 2, 1, "", "norm_parameters"], [204, 2, 1, "", "prior"], [204, 3, 1, "", "prior_stat_sum"], [204, 3, 1, "", "restore_status"], [204, 3, 1, "", "select"], [204, 3, 1, "", "set_parameter_factors"], [204, 3, 1, "", "to_dict"], [204, 3, 1, "", "to_table"], [204, 2, 1, "", "types"], [204, 3, 1, "", "unfreeze_all"], [204, 2, 1, "", "unique_parameters"], [204, 2, 1, "", "value"]], "gammapy.modeling.models": [[205, 1, 1, "", "BrokenPowerLawSpectralModel"], [206, 1, 1, "", "CompoundSpectralModel"], [207, 1, 1, "", "ConstantFluxSpatialModel"], [208, 1, 1, "", "ConstantSpatialModel"], [209, 1, 1, "", "ConstantSpectralModel"], [210, 1, 1, "", "ConstantTemporalModel"], [211, 1, 1, "", "DatasetModels"], [212, 1, 1, "", "DiskSpatialModel"], [213, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [214, 5, 1, "", "EBL_DATA_BUILTIN"], [215, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [216, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [217, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [218, 1, 1, "", "ExpDecayTemporalModel"], [219, 1, 1, "", "FoVBackgroundModel"], [220, 1, 1, "", "GaussianSpatialModel"], [221, 1, 1, "", "GaussianSpectralModel"], [222, 1, 1, "", "GaussianTemporalModel"], [223, 1, 1, "", "GeneralizedGaussianSpatialModel"], [224, 1, 1, "", "GeneralizedGaussianTemporalModel"], [225, 1, 1, "", "LightCurveTemplateTemporalModel"], [226, 1, 1, "", "LinearTemporalModel"], [227, 1, 1, "", "LogParabolaNormSpectralModel"], [228, 1, 1, "", "LogParabolaSpectralModel"], [229, 5, 1, "", "MODEL_REGISTRY"], [230, 1, 1, "", "MeyerCrabSpectralModel"], [231, 1, 1, "", "Model"], [232, 1, 1, "", "ModelBase"], [233, 1, 1, "", "Models"], [234, 1, 1, "", "NaimaSpectralModel"], [235, 1, 1, "", "PiecewiseNormSpatialModel"], [236, 1, 1, "", "PiecewiseNormSpectralModel"], [237, 1, 1, "", "PointSpatialModel"], [238, 1, 1, "", "PowerLaw2SpectralModel"], [239, 1, 1, "", "PowerLawNormSpectralModel"], [240, 1, 1, "", "PowerLawSpectralModel"], [241, 1, 1, "", "PowerLawTemporalModel"], [242, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [243, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [244, 1, 1, "", "ScaleSpectralModel"], [245, 1, 1, "", "Shell2SpatialModel"], [246, 1, 1, "", "ShellSpatialModel"], [247, 1, 1, "", "SineTemporalModel"], [248, 1, 1, "", "SkyModel"], [249, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [250, 1, 1, "", "SpatialModel"], [251, 1, 1, "", "SpectralModel"], [252, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [253, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [254, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [255, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [256, 1, 1, "", "TemplateNDSpatialModel"], [257, 1, 1, "", "TemplateNDSpectralModel"], [258, 1, 1, "", "TemplateNPredModel"], [259, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [260, 1, 1, "", "TemplateSpatialModel"], [261, 1, 1, "", "TemplateSpectralModel"], [262, 1, 1, "", "TemporalModel"], [263, 4, 1, "", "create_cosmic_ray_spectral_model"], [264, 4, 1, "", "create_crab_spectral_model"], [265, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [266, 4, 1, "", "integrate_spectrum"], [267, 4, 1, "", "read_hermes_cube"], [268, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[205, 3, 1, "", "__call__"], [205, 2, 1, "", "amplitude"], [205, 3, 1, "", "copy"], [205, 2, 1, "", "covariance"], [205, 2, 1, "", "default_parameters"], [205, 2, 1, "", "ebreak"], [205, 3, 1, "", "energy_flux"], [205, 3, 1, "", "energy_flux_error"], [205, 3, 1, "", "evaluate"], [205, 3, 1, "", "evaluate_error"], [205, 3, 1, "", "freeze"], [205, 3, 1, "", "from_dict"], [205, 3, 1, "", "from_parameters"], [205, 2, 1, "", "frozen"], [205, 2, 1, "", "index1"], [205, 2, 1, "", "index2"], [205, 3, 1, "", "integral"], [205, 3, 1, "", "integral_error"], [205, 3, 1, "", "inverse"], [205, 3, 1, "", "inverse_all"], [205, 2, 1, "", "is_norm_spectral_model"], [205, 2, 1, "", "parameters"], [205, 2, 1, "", "pivot_energy"], [205, 3, 1, "", "plot"], [205, 3, 1, "", "plot_error"], [205, 3, 1, "", "reassign"], [205, 3, 1, "", "reference_fluxes"], [205, 3, 1, "", "spectral_index"], [205, 3, 1, "", "spectral_index_error"], [205, 2, 1, "", "tag"], [205, 3, 1, "", "to_dict"], [205, 2, 1, "", "type"], [205, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[206, 3, 1, "", "__call__"], [206, 3, 1, "", "copy"], [206, 2, 1, "", "covariance"], [206, 2, 1, "", "default_parameters"], [206, 3, 1, "", "energy_flux"], [206, 3, 1, "", "energy_flux_error"], [206, 3, 1, "", "evaluate"], [206, 3, 1, "", "evaluate_error"], [206, 3, 1, "", "freeze"], [206, 3, 1, "", "from_dict"], [206, 3, 1, "", "from_parameters"], [206, 2, 1, "", "frozen"], [206, 3, 1, "", "integral"], [206, 3, 1, "", "integral_error"], [206, 3, 1, "", "inverse"], [206, 3, 1, "", "inverse_all"], [206, 2, 1, "", "is_norm_spectral_model"], [206, 2, 1, "", "parameters"], [206, 2, 1, "", "pivot_energy"], [206, 3, 1, "", "plot"], [206, 3, 1, "", "plot_error"], [206, 3, 1, "", "reassign"], [206, 3, 1, "", "reference_fluxes"], [206, 3, 1, "", "spectral_index"], [206, 3, 1, "", "spectral_index_error"], [206, 2, 1, "", "tag"], [206, 3, 1, "", "to_dict"], [206, 2, 1, "", "type"], [206, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[207, 3, 1, "", "__call__"], [207, 3, 1, "", "copy"], [207, 2, 1, "", "covariance"], [207, 2, 1, "", "default_parameters"], [207, 3, 1, "", "evaluate"], [207, 3, 1, "", "evaluate_geom"], [207, 2, 1, "", "evaluation_bin_size_min"], [207, 2, 1, "", "evaluation_radius"], [207, 2, 1, "", "evaluation_region"], [207, 2, 1, "", "frame"], [207, 3, 1, "", "freeze"], [207, 3, 1, "", "from_dict"], [207, 3, 1, "", "from_parameters"], [207, 3, 1, "", "from_position"], [207, 2, 1, "", "frozen"], [207, 3, 1, "", "integrate_geom"], [207, 2, 1, "", "is_energy_dependent"], [207, 2, 1, "", "parameters"], [207, 2, 1, "", "phi_0"], [207, 3, 1, "", "plot"], [207, 3, 1, "", "plot_error"], [207, 3, 1, "", "plot_grid"], [207, 3, 1, "", "plot_interactive"], [207, 3, 1, "", "plot_position_error"], [207, 2, 1, "", "position"], [207, 2, 1, "", "position_error"], [207, 2, 1, "", "position_lonlat"], [207, 3, 1, "", "reassign"], [207, 2, 1, "", "tag"], [207, 3, 1, "", "to_dict"], [207, 3, 1, "", "to_region"], [207, 2, 1, "", "type"], [207, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[208, 3, 1, "", "__call__"], [208, 3, 1, "", "copy"], [208, 2, 1, "", "covariance"], [208, 2, 1, "", "default_parameters"], [208, 3, 1, "", "evaluate"], [208, 3, 1, "", "evaluate_geom"], [208, 2, 1, "", "evaluation_bin_size_min"], [208, 2, 1, "", "evaluation_radius"], [208, 2, 1, "", "evaluation_region"], [208, 2, 1, "", "frame"], [208, 3, 1, "", "freeze"], [208, 3, 1, "", "from_dict"], [208, 3, 1, "", "from_parameters"], [208, 3, 1, "", "from_position"], [208, 2, 1, "", "frozen"], [208, 3, 1, "", "integrate_geom"], [208, 2, 1, "", "is_energy_dependent"], [208, 2, 1, "", "parameters"], [208, 2, 1, "", "phi_0"], [208, 3, 1, "", "plot"], [208, 3, 1, "", "plot_error"], [208, 3, 1, "", "plot_grid"], [208, 3, 1, "", "plot_interactive"], [208, 3, 1, "", "plot_position_error"], [208, 2, 1, "", "position"], [208, 2, 1, "", "position_error"], [208, 2, 1, "", "position_lonlat"], [208, 3, 1, "", "reassign"], [208, 2, 1, "", "tag"], [208, 3, 1, "", "to_dict"], [208, 3, 1, "", "to_region"], [208, 2, 1, "", "type"], [208, 3, 1, "", "unfreeze"], [208, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[209, 3, 1, "", "__call__"], [209, 2, 1, "", "const"], [209, 3, 1, "", "copy"], [209, 2, 1, "", "covariance"], [209, 2, 1, "", "default_parameters"], [209, 3, 1, "", "energy_flux"], [209, 3, 1, "", "energy_flux_error"], [209, 3, 1, "", "evaluate"], [209, 3, 1, "", "evaluate_error"], [209, 3, 1, "", "freeze"], [209, 3, 1, "", "from_dict"], [209, 3, 1, "", "from_parameters"], [209, 2, 1, "", "frozen"], [209, 3, 1, "", "integral"], [209, 3, 1, "", "integral_error"], [209, 3, 1, "", "inverse"], [209, 3, 1, "", "inverse_all"], [209, 2, 1, "", "is_norm_spectral_model"], [209, 2, 1, "", "parameters"], [209, 2, 1, "", "pivot_energy"], [209, 3, 1, "", "plot"], [209, 3, 1, "", "plot_error"], [209, 3, 1, "", "reassign"], [209, 3, 1, "", "reference_fluxes"], [209, 3, 1, "", "spectral_index"], [209, 3, 1, "", "spectral_index_error"], [209, 2, 1, "", "tag"], [209, 3, 1, "", "to_dict"], [209, 2, 1, "", "type"], [209, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[210, 3, 1, "", "__call__"], [210, 3, 1, "", "copy"], [210, 2, 1, "", "covariance"], [210, 2, 1, "", "default_parameters"], [210, 3, 1, "", "evaluate"], [210, 3, 1, "", "freeze"], [210, 3, 1, "", "from_dict"], [210, 3, 1, "", "from_parameters"], [210, 2, 1, "", "frozen"], [210, 3, 1, "", "integral"], [210, 2, 1, "", "is_energy_dependent"], [210, 2, 1, "", "parameters"], [210, 3, 1, "", "plot"], [210, 3, 1, "", "reassign"], [210, 2, 1, "", "reference_time"], [210, 3, 1, "", "sample_time"], [210, 2, 1, "", "tag"], [210, 3, 1, "", "time_sum"], [210, 3, 1, "", "to_dict"], [210, 2, 1, "", "type"], [210, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[211, 3, 1, "", "copy"], [211, 3, 1, "", "count"], [211, 2, 1, "", "covariance"], [211, 3, 1, "", "freeze"], [211, 3, 1, "", "from_dict"], [211, 3, 1, "", "from_yaml"], [211, 2, 1, "", "frozen"], [211, 3, 1, "", "index"], [211, 2, 1, "", "names"], [211, 2, 1, "", "parameters"], [211, 2, 1, "", "parameters_unique_names"], [211, 3, 1, "", "plot_positions"], [211, 3, 1, "", "plot_regions"], [211, 2, 1, "", "positions"], [211, 3, 1, "", "read"], [211, 3, 1, "", "read_covariance"], [211, 3, 1, "", "reassign"], [211, 3, 1, "", "restore_status"], [211, 3, 1, "", "select"], [211, 3, 1, "", "select_from_geom"], [211, 3, 1, "", "select_mask"], [211, 3, 1, "", "select_region"], [211, 3, 1, "", "selection_mask"], [211, 3, 1, "", "set_parameters_bounds"], [211, 3, 1, "", "to_dict"], [211, 3, 1, "", "to_parameters_table"], [211, 3, 1, "", "to_regions"], [211, 3, 1, "", "to_template_sky_model"], [211, 3, 1, "", "to_template_spectral_model"], [211, 3, 1, "", "to_yaml"], [211, 3, 1, "", "unfreeze"], [211, 3, 1, "", "update_link_label"], [211, 3, 1, "", "update_parameters_from_table"], [211, 2, 1, "", "wcs_geom"], [211, 3, 1, "", "write"], [211, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[212, 3, 1, "", "__call__"], [212, 3, 1, "", "copy"], [212, 2, 1, "", "covariance"], [212, 2, 1, "", "default_parameters"], [212, 2, 1, "", "e"], [212, 2, 1, "", "edge_width"], [212, 3, 1, "", "evaluate"], [212, 3, 1, "", "evaluate_geom"], [212, 2, 1, "", "evaluation_bin_size_min"], [212, 2, 1, "", "evaluation_radius"], [212, 2, 1, "", "evaluation_region"], [212, 3, 1, "", "freeze"], [212, 3, 1, "", "from_dict"], [212, 3, 1, "", "from_parameters"], [212, 3, 1, "", "from_position"], [212, 3, 1, "", "from_region"], [212, 2, 1, "", "frozen"], [212, 3, 1, "", "integrate_geom"], [212, 2, 1, "", "is_energy_dependent"], [212, 2, 1, "", "lat_0"], [212, 2, 1, "", "lon_0"], [212, 2, 1, "", "parameters"], [212, 2, 1, "", "phi"], [212, 2, 1, "", "phi_0"], [212, 3, 1, "", "plot"], [212, 3, 1, "", "plot_error"], [212, 3, 1, "", "plot_grid"], [212, 3, 1, "", "plot_interactive"], [212, 3, 1, "", "plot_position_error"], [212, 2, 1, "", "position"], [212, 2, 1, "", "position_error"], [212, 2, 1, "", "position_lonlat"], [212, 2, 1, "", "r_0"], [212, 3, 1, "", "reassign"], [212, 2, 1, "", "tag"], [212, 3, 1, "", "to_dict"], [212, 3, 1, "", "to_region"], [212, 2, 1, "", "type"], [212, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[213, 3, 1, "", "__call__"], [213, 2, 1, "", "alpha_norm"], [213, 3, 1, "", "copy"], [213, 2, 1, "", "covariance"], [213, 2, 1, "", "default_parameters"], [213, 3, 1, "", "energy_flux"], [213, 3, 1, "", "energy_flux_error"], [213, 3, 1, "", "evaluate"], [213, 3, 1, "", "evaluate_error"], [213, 3, 1, "", "freeze"], [213, 3, 1, "", "from_dict"], [213, 3, 1, "", "from_parameters"], [213, 2, 1, "", "frozen"], [213, 3, 1, "", "integral"], [213, 3, 1, "", "integral_error"], [213, 3, 1, "", "inverse"], [213, 3, 1, "", "inverse_all"], [213, 2, 1, "", "is_norm_spectral_model"], [213, 2, 1, "", "parameters"], [213, 2, 1, "", "pivot_energy"], [213, 3, 1, "", "plot"], [213, 3, 1, "", "plot_error"], [213, 3, 1, "", "read"], [213, 3, 1, "", "read_builtin"], [213, 3, 1, "", "reassign"], [213, 2, 1, "", "redshift"], [213, 3, 1, "", "reference_fluxes"], [213, 3, 1, "", "spectral_index"], [213, 3, 1, "", "spectral_index_error"], [213, 2, 1, "", "tag"], [213, 3, 1, "", "to_dict"], [213, 2, 1, "", "type"], [213, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[215, 3, 1, "", "__call__"], [215, 2, 1, "", "amplitude"], [215, 3, 1, "", "copy"], [215, 2, 1, "", "covariance"], [215, 2, 1, "", "default_parameters"], [215, 2, 1, "", "ecut"], [215, 3, 1, "", "energy_flux"], [215, 3, 1, "", "energy_flux_error"], [215, 3, 1, "", "evaluate"], [215, 3, 1, "", "evaluate_error"], [215, 3, 1, "", "freeze"], [215, 3, 1, "", "from_dict"], [215, 3, 1, "", "from_parameters"], [215, 2, 1, "", "frozen"], [215, 2, 1, "", "index"], [215, 3, 1, "", "integral"], [215, 3, 1, "", "integral_error"], [215, 3, 1, "", "inverse"], [215, 3, 1, "", "inverse_all"], [215, 2, 1, "", "is_norm_spectral_model"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "pivot_energy"], [215, 3, 1, "", "plot"], [215, 3, 1, "", "plot_error"], [215, 3, 1, "", "reassign"], [215, 2, 1, "", "reference"], [215, 3, 1, "", "reference_fluxes"], [215, 3, 1, "", "spectral_index"], [215, 3, 1, "", "spectral_index_error"], [215, 2, 1, "", "tag"], [215, 3, 1, "", "to_dict"], [215, 2, 1, "", "type"], [215, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[216, 3, 1, "", "__call__"], [216, 2, 1, "", "alpha"], [216, 3, 1, "", "copy"], [216, 2, 1, "", "covariance"], [216, 2, 1, "", "default_parameters"], [216, 3, 1, "", "energy_flux"], [216, 3, 1, "", "energy_flux_error"], [216, 3, 1, "", "evaluate"], [216, 3, 1, "", "evaluate_error"], [216, 3, 1, "", "freeze"], [216, 3, 1, "", "from_dict"], [216, 3, 1, "", "from_parameters"], [216, 2, 1, "", "frozen"], [216, 2, 1, "", "index"], [216, 3, 1, "", "integral"], [216, 3, 1, "", "integral_error"], [216, 3, 1, "", "inverse"], [216, 3, 1, "", "inverse_all"], [216, 2, 1, "", "is_norm_spectral_model"], [216, 2, 1, "", "lambda_"], [216, 2, 1, "", "norm"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "pivot_energy"], [216, 3, 1, "", "plot"], [216, 3, 1, "", "plot_error"], [216, 3, 1, "", "reassign"], [216, 2, 1, "", "reference"], [216, 3, 1, "", "reference_fluxes"], [216, 3, 1, "", "spectral_index"], [216, 3, 1, "", "spectral_index_error"], [216, 2, 1, "", "tag"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "type"], [216, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[217, 3, 1, "", "__call__"], [217, 2, 1, "", "alpha"], [217, 2, 1, "", "amplitude"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "covariance"], [217, 2, 1, "", "default_parameters"], [217, 2, 1, "", "e_peak"], [217, 3, 1, "", "energy_flux"], [217, 3, 1, "", "energy_flux_error"], [217, 3, 1, "", "evaluate"], [217, 3, 1, "", "evaluate_error"], [217, 3, 1, "", "freeze"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_parameters"], [217, 2, 1, "", "frozen"], [217, 2, 1, "", "index"], [217, 3, 1, "", "integral"], [217, 3, 1, "", "integral_error"], [217, 3, 1, "", "inverse"], [217, 3, 1, "", "inverse_all"], [217, 2, 1, "", "is_norm_spectral_model"], [217, 2, 1, "", "lambda_"], [217, 2, 1, "", "parameters"], [217, 2, 1, "", "pivot_energy"], [217, 3, 1, "", "plot"], [217, 3, 1, "", "plot_error"], [217, 3, 1, "", "reassign"], [217, 2, 1, "", "reference"], [217, 3, 1, "", "reference_fluxes"], [217, 3, 1, "", "spectral_index"], [217, 3, 1, "", "spectral_index_error"], [217, 2, 1, "", "tag"], [217, 3, 1, "", "to_dict"], [217, 2, 1, "", "type"], [217, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[218, 3, 1, "", "__call__"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "covariance"], [218, 2, 1, "", "default_parameters"], [218, 3, 1, "", "evaluate"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_parameters"], [218, 2, 1, "", "frozen"], [218, 3, 1, "", "integral"], [218, 2, 1, "", "is_energy_dependent"], [218, 2, 1, "", "parameters"], [218, 3, 1, "", "plot"], [218, 3, 1, "", "reassign"], [218, 2, 1, "", "reference_time"], [218, 3, 1, "", "sample_time"], [218, 2, 1, "", "t0"], [218, 2, 1, "", "t_ref"], [218, 2, 1, "", "tag"], [218, 3, 1, "", "time_sum"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[219, 3, 1, "", "contributes"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "covariance"], [219, 2, 1, "", "default_parameters"], [219, 3, 1, "", "evaluate"], [219, 3, 1, "", "evaluate_geom"], [219, 3, 1, "", "freeze"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_parameters"], [219, 2, 1, "", "frozen"], [219, 2, 1, "", "name"], [219, 2, 1, "", "parameters"], [219, 3, 1, "", "reassign"], [219, 3, 1, "", "reset_to_default"], [219, 2, 1, "", "spatial_model"], [219, 2, 1, "", "spectral_model"], [219, 2, 1, "", "tag"], [219, 3, 1, "", "to_dict"], [219, 2, 1, "", "type"], [219, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpatialModel": [[220, 3, 1, "", "__call__"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 2, 1, "", "e"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_geom"], [220, 2, 1, "", "evaluation_bin_size_min"], [220, 2, 1, "", "evaluation_radius"], [220, 2, 1, "", "evaluation_region"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 3, 1, "", "from_position"], [220, 2, 1, "", "frozen"], [220, 3, 1, "", "integrate_geom"], [220, 2, 1, "", "is_energy_dependent"], [220, 2, 1, "", "lat_0"], [220, 2, 1, "", "lon_0"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "phi"], [220, 2, 1, "", "phi_0"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "plot_grid"], [220, 3, 1, "", "plot_interactive"], [220, 3, 1, "", "plot_position_error"], [220, 2, 1, "", "position"], [220, 2, 1, "", "position_error"], [220, 2, 1, "", "position_lonlat"], [220, 3, 1, "", "reassign"], [220, 2, 1, "", "sigma"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_region"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[221, 3, 1, "", "__call__"], [221, 2, 1, "", "amplitude"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 3, 1, "", "energy_flux"], [221, 3, 1, "", "energy_flux_error"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_error"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 2, 1, "", "frozen"], [221, 3, 1, "", "integral"], [221, 3, 1, "", "integral_error"], [221, 3, 1, "", "inverse"], [221, 3, 1, "", "inverse_all"], [221, 2, 1, "", "is_norm_spectral_model"], [221, 2, 1, "", "mean"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "pivot_energy"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "reassign"], [221, 3, 1, "", "reference_fluxes"], [221, 2, 1, "", "sigma"], [221, 3, 1, "", "spectral_index"], [221, 3, 1, "", "spectral_index_error"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[222, 3, 1, "", "__call__"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 3, 1, "", "integral"], [222, 2, 1, "", "is_energy_dependent"], [222, 2, 1, "", "parameters"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "reassign"], [222, 2, 1, "", "reference_time"], [222, 3, 1, "", "sample_time"], [222, 2, 1, "", "sigma"], [222, 2, 1, "", "t_ref"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "time_sum"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[223, 3, 1, "", "__call__"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 2, 1, "", "e"], [223, 2, 1, "", "eta"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_geom"], [223, 2, 1, "", "evaluation_bin_size_min"], [223, 2, 1, "", "evaluation_radius"], [223, 2, 1, "", "evaluation_region"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 3, 1, "", "from_position"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "integrate_geom"], [223, 2, 1, "", "is_energy_dependent"], [223, 2, 1, "", "lat_0"], [223, 2, 1, "", "lon_0"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "phi"], [223, 2, 1, "", "phi_0"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "plot_grid"], [223, 3, 1, "", "plot_interactive"], [223, 3, 1, "", "plot_position_error"], [223, 2, 1, "", "position"], [223, 2, 1, "", "position_error"], [223, 2, 1, "", "position_lonlat"], [223, 2, 1, "", "r_0"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 3, 1, "", "to_region"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[224, 3, 1, "", "__call__"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 2, 1, "", "eta"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "integral"], [224, 2, 1, "", "is_energy_dependent"], [224, 2, 1, "", "parameters"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "reassign"], [224, 2, 1, "", "reference_time"], [224, 3, 1, "", "sample_time"], [224, 2, 1, "", "t_decay"], [224, 2, 1, "", "t_ref"], [224, 2, 1, "", "t_rise"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "time_sum"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 3, 1, "", "from_table"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integral"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "parameters"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "read"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "reference_time"], [225, 3, 1, "", "sample_time"], [225, 2, 1, "", "t_ref"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "time_sum"], [225, 3, 1, "", "to_dict"], [225, 3, 1, "", "to_table"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"], [225, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[226, 3, 1, "", "__call__"], [226, 2, 1, "", "alpha"], [226, 2, 1, "", "beta"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integral"], [226, 2, 1, "", "is_energy_dependent"], [226, 2, 1, "", "parameters"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "reference_time"], [226, 3, 1, "", "sample_time"], [226, 2, 1, "", "t_ref"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "time_sum"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[227, 3, 1, "", "__call__"], [227, 2, 1, "", "alpha"], [227, 2, 1, "", "beta"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 3, 1, "", "energy_flux"], [227, 3, 1, "", "energy_flux_error"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "evaluate_error"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_log10"], [227, 3, 1, "", "from_parameters"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integral"], [227, 3, 1, "", "integral_error"], [227, 3, 1, "", "inverse"], [227, 3, 1, "", "inverse_all"], [227, 2, 1, "", "is_norm_spectral_model"], [227, 2, 1, "", "norm"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "pivot_energy"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "plot_error"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "reference"], [227, 3, 1, "", "reference_fluxes"], [227, 3, 1, "", "spectral_index"], [227, 3, 1, "", "spectral_index_error"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "to_dict"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[228, 3, 1, "", "__call__"], [228, 2, 1, "", "alpha"], [228, 2, 1, "", "amplitude"], [228, 2, 1, "", "beta"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 2, 1, "", "e_peak"], [228, 3, 1, "", "energy_flux"], [228, 3, 1, "", "energy_flux_error"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_error"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_log10"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integral"], [228, 3, 1, "", "integral_error"], [228, 3, 1, "", "inverse"], [228, 3, 1, "", "inverse_all"], [228, 2, 1, "", "is_norm_spectral_model"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "pivot_energy"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "reference"], [228, 3, 1, "", "reference_fluxes"], [228, 3, 1, "", "spectral_index"], [228, 3, 1, "", "spectral_index_error"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[230, 3, 1, "", "__call__"], [230, 2, 1, "", "coefficients"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 3, 1, "", "energy_flux"], [230, 3, 1, "", "energy_flux_error"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_error"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integral"], [230, 3, 1, "", "integral_error"], [230, 3, 1, "", "inverse"], [230, 3, 1, "", "inverse_all"], [230, 2, 1, "", "is_norm_spectral_model"], [230, 2, 1, "", "norm"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "pivot_energy"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "reassign"], [230, 3, 1, "", "reference_fluxes"], [230, 3, 1, "", "spectral_index"], [230, 3, 1, "", "spectral_index_error"], [230, 3, 1, "", "to_dict"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[231, 3, 1, "", "create"], [231, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 2, 1, "", "parameters"], [232, 3, 1, "", "reassign"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[233, 3, 1, "", "append"], [233, 3, 1, "", "clear"], [233, 3, 1, "", "copy"], [233, 3, 1, "", "count"], [233, 2, 1, "", "covariance"], [233, 3, 1, "", "extend"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_yaml"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "index"], [233, 3, 1, "", "insert"], [233, 2, 1, "", "names"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 3, 1, "", "plot_positions"], [233, 3, 1, "", "plot_regions"], [233, 3, 1, "", "pop"], [233, 2, 1, "", "positions"], [233, 3, 1, "", "read"], [233, 3, 1, "", "read_covariance"], [233, 3, 1, "", "reassign"], [233, 3, 1, "", "remove"], [233, 3, 1, "", "restore_status"], [233, 3, 1, "", "reverse"], [233, 3, 1, "", "select"], [233, 3, 1, "", "select_from_geom"], [233, 3, 1, "", "select_mask"], [233, 3, 1, "", "select_region"], [233, 3, 1, "", "selection_mask"], [233, 3, 1, "", "set_parameters_bounds"], [233, 3, 1, "", "set_prior"], [233, 3, 1, "", "to_dict"], [233, 3, 1, "", "to_parameters_table"], [233, 3, 1, "", "to_regions"], [233, 3, 1, "", "to_template_sky_model"], [233, 3, 1, "", "to_template_spectral_model"], [233, 3, 1, "", "to_yaml"], [233, 3, 1, "", "unfreeze"], [233, 3, 1, "", "update_link_label"], [233, 3, 1, "", "update_parameters_from_table"], [233, 2, 1, "", "wcs_geom"], [233, 3, 1, "", "write"], [233, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[234, 3, 1, "", "__call__"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "energy_flux"], [234, 3, 1, "", "energy_flux_error"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_error"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 2, 1, "", "include_ssc"], [234, 3, 1, "", "integral"], [234, 3, 1, "", "integral_error"], [234, 3, 1, "", "inverse"], [234, 3, 1, "", "inverse_all"], [234, 2, 1, "", "is_norm_spectral_model"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "particle_distribution"], [234, 2, 1, "", "pivot_energy"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "plot_error"], [234, 3, 1, "", "reassign"], [234, 3, 1, "", "reference_fluxes"], [234, 3, 1, "", "spectral_index"], [234, 3, 1, "", "spectral_index_error"], [234, 2, 1, "", "ssc_model"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "coords"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_geom"], [235, 2, 1, "", "evaluation_bin_size_min"], [235, 2, 1, "", "evaluation_radius"], [235, 2, 1, "", "evaluation_region"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 3, 1, "", "from_position"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integrate_geom"], [235, 2, 1, "", "is_energy_dependent"], [235, 2, 1, "", "norms"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "phi_0"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "plot_grid"], [235, 3, 1, "", "plot_interactive"], [235, 3, 1, "", "plot_position_error"], [235, 2, 1, "", "position"], [235, 2, 1, "", "position_error"], [235, 2, 1, "", "position_lonlat"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[236, 3, 1, "", "__call__"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 2, 1, "", "energy"], [236, 3, 1, "", "energy_flux"], [236, 3, 1, "", "energy_flux_error"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "evaluate_error"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "integral"], [236, 3, 1, "", "integral_error"], [236, 3, 1, "", "inverse"], [236, 3, 1, "", "inverse_all"], [236, 2, 1, "", "is_norm_spectral_model"], [236, 2, 1, "", "norms"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "pivot_energy"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "plot_error"], [236, 3, 1, "", "reassign"], [236, 3, 1, "", "reference_fluxes"], [236, 3, 1, "", "spectral_index"], [236, 3, 1, "", "spectral_index_error"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[237, 3, 1, "", "__call__"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "evaluate_geom"], [237, 2, 1, "", "evaluation_bin_size_min"], [237, 2, 1, "", "evaluation_radius"], [237, 2, 1, "", "evaluation_region"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 3, 1, "", "from_position"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integrate_geom"], [237, 2, 1, "", "is_energy_dependent"], [237, 2, 1, "", "lat_0"], [237, 2, 1, "", "lon_0"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "phi_0"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "plot_error"], [237, 3, 1, "", "plot_grid"], [237, 3, 1, "", "plot_interactive"], [237, 3, 1, "", "plot_position_error"], [237, 2, 1, "", "position"], [237, 2, 1, "", "position_error"], [237, 2, 1, "", "position_lonlat"], [237, 3, 1, "", "reassign"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 3, 1, "", "to_region"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[238, 3, 1, "", "__call__"], [238, 2, 1, "", "amplitude"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 2, 1, "", "emax"], [238, 2, 1, "", "emin"], [238, 3, 1, "", "energy_flux"], [238, 3, 1, "", "energy_flux_error"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "evaluate_error"], [238, 3, 1, "", "evaluate_integral"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 2, 1, "", "index"], [238, 3, 1, "", "integral"], [238, 3, 1, "", "integral_error"], [238, 3, 1, "", "inverse"], [238, 3, 1, "", "inverse_all"], [238, 2, 1, "", "is_norm_spectral_model"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "pivot_energy"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "plot_error"], [238, 3, 1, "", "reassign"], [238, 3, 1, "", "reference_fluxes"], [238, 3, 1, "", "spectral_index"], [238, 3, 1, "", "spectral_index_error"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "energy_flux"], [239, 3, 1, "", "energy_flux_error"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "evaluate_energy_flux"], [239, 3, 1, "", "evaluate_error"], [239, 3, 1, "", "evaluate_integral"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integral"], [239, 3, 1, "", "integral_error"], [239, 3, 1, "", "inverse"], [239, 3, 1, "", "inverse_all"], [239, 2, 1, "", "is_norm_spectral_model"], [239, 2, 1, "", "norm"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "pivot_energy"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "plot_error"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "reference"], [239, 3, 1, "", "reference_fluxes"], [239, 3, 1, "", "spectral_index"], [239, 3, 1, "", "spectral_index_error"], [239, 2, 1, "", "tag"], [239, 2, 1, "", "tilt"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[240, 3, 1, "", "__call__"], [240, 2, 1, "", "amplitude"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 3, 1, "", "energy_flux"], [240, 3, 1, "", "energy_flux_error"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "evaluate_energy_flux"], [240, 3, 1, "", "evaluate_error"], [240, 3, 1, "", "evaluate_integral"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 2, 1, "", "frozen"], [240, 2, 1, "", "index"], [240, 3, 1, "", "integral"], [240, 3, 1, "", "integral_error"], [240, 3, 1, "", "inverse"], [240, 3, 1, "", "inverse_all"], [240, 2, 1, "", "is_norm_spectral_model"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "pivot_energy"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "reference"], [240, 3, 1, "", "reference_fluxes"], [240, 3, 1, "", "spectral_index"], [240, 3, 1, "", "spectral_index_error"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[241, 3, 1, "", "__call__"], [241, 2, 1, "", "alpha"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 2, 1, "", "is_energy_dependent"], [241, 2, 1, "", "parameters"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "reassign"], [241, 2, 1, "", "reference_time"], [241, 3, 1, "", "sample_time"], [241, 2, 1, "", "t0"], [241, 2, 1, "", "t_ref"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "time_sum"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ScaleSpectralModel": [[244, 3, 1, "", "__call__"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "energy_flux"], [244, 3, 1, "", "energy_flux_error"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "evaluate_error"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 3, 1, "", "integral_error"], [244, 3, 1, "", "inverse"], [244, 3, 1, "", "inverse_all"], [244, 2, 1, "", "is_norm_spectral_model"], [244, 2, 1, "", "norm"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "pivot_energy"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "plot_error"], [244, 3, 1, "", "reassign"], [244, 3, 1, "", "reference_fluxes"], [244, 3, 1, "", "spectral_index"], [244, 3, 1, "", "spectral_index_error"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[245, 3, 1, "", "__call__"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 2, 1, "", "eta"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "evaluate_geom"], [245, 2, 1, "", "evaluation_bin_size_min"], [245, 2, 1, "", "evaluation_radius"], [245, 2, 1, "", "evaluation_region"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 3, 1, "", "from_position"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integrate_geom"], [245, 2, 1, "", "is_energy_dependent"], [245, 2, 1, "", "lat_0"], [245, 2, 1, "", "lon_0"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "phi_0"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "plot_grid"], [245, 3, 1, "", "plot_interactive"], [245, 3, 1, "", "plot_position_error"], [245, 2, 1, "", "position"], [245, 2, 1, "", "position_error"], [245, 2, 1, "", "position_lonlat"], [245, 2, 1, "", "r_0"], [245, 2, 1, "", "r_in"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 3, 1, "", "to_region"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[246, 3, 1, "", "__call__"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "evaluate_geom"], [246, 2, 1, "", "evaluation_bin_size_min"], [246, 2, 1, "", "evaluation_radius"], [246, 2, 1, "", "evaluation_region"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 3, 1, "", "from_position"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "integrate_geom"], [246, 2, 1, "", "is_energy_dependent"], [246, 2, 1, "", "lat_0"], [246, 2, 1, "", "lon_0"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "phi_0"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "plot_error"], [246, 3, 1, "", "plot_grid"], [246, 3, 1, "", "plot_interactive"], [246, 3, 1, "", "plot_position_error"], [246, 2, 1, "", "position"], [246, 2, 1, "", "position_error"], [246, 2, 1, "", "position_lonlat"], [246, 2, 1, "", "radius"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "to_dict"], [246, 3, 1, "", "to_region"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"], [246, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[247, 3, 1, "", "__call__"], [247, 2, 1, "", "amp"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 3, 1, "", "integral"], [247, 2, 1, "", "is_energy_dependent"], [247, 2, 1, "", "omega"], [247, 2, 1, "", "parameters"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "reassign"], [247, 2, 1, "", "reference_time"], [247, 3, 1, "", "sample_time"], [247, 2, 1, "", "t_ref"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "time_sum"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[248, 3, 1, "", "__call__"], [248, 3, 1, "", "contributes"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 3, 1, "", "create"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "evaluate_geom"], [248, 2, 1, "", "evaluation_bin_size_min"], [248, 2, 1, "", "evaluation_radius"], [248, 2, 1, "", "evaluation_region"], [248, 2, 1, "", "frame"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integrate_geom"], [248, 2, 1, "", "name"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "position"], [248, 2, 1, "", "position_lonlat"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "spatial_model"], [248, 2, 1, "", "spectral_model"], [248, 2, 1, "", "tag"], [248, 2, 1, "", "temporal_model"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[249, 3, 1, "", "__call__"], [249, 2, 1, "", "amplitude"], [249, 2, 1, "", "beta"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 2, 1, "", "ebreak"], [249, 3, 1, "", "energy_flux"], [249, 3, 1, "", "energy_flux_error"], [249, 3, 1, "", "evaluate"], [249, 3, 1, "", "evaluate_error"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 2, 1, "", "frozen"], [249, 2, 1, "", "index1"], [249, 2, 1, "", "index2"], [249, 3, 1, "", "integral"], [249, 3, 1, "", "integral_error"], [249, 3, 1, "", "inverse"], [249, 3, 1, "", "inverse_all"], [249, 2, 1, "", "is_norm_spectral_model"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "pivot_energy"], [249, 3, 1, "", "plot"], [249, 3, 1, "", "plot_error"], [249, 3, 1, "", "reassign"], [249, 2, 1, "", "reference"], [249, 3, 1, "", "reference_fluxes"], [249, 3, 1, "", "spectral_index"], [249, 3, 1, "", "spectral_index_error"], [249, 2, 1, "", "tag"], [249, 3, 1, "", "to_dict"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[250, 3, 1, "", "__call__"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 3, 1, "", "evaluate_geom"], [250, 2, 1, "", "evaluation_bin_size_min"], [250, 2, 1, "", "evaluation_radius"], [250, 2, 1, "", "evaluation_region"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 3, 1, "", "from_position"], [250, 2, 1, "", "frozen"], [250, 3, 1, "", "integrate_geom"], [250, 2, 1, "", "is_energy_dependent"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "phi_0"], [250, 3, 1, "", "plot"], [250, 3, 1, "", "plot_error"], [250, 3, 1, "", "plot_grid"], [250, 3, 1, "", "plot_interactive"], [250, 3, 1, "", "plot_position_error"], [250, 2, 1, "", "position"], [250, 2, 1, "", "position_error"], [250, 2, 1, "", "position_lonlat"], [250, 3, 1, "", "reassign"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[251, 3, 1, "", "__call__"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 3, 1, "", "energy_flux"], [251, 3, 1, "", "energy_flux_error"], [251, 3, 1, "", "evaluate_error"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "integral"], [251, 3, 1, "", "integral_error"], [251, 3, 1, "", "inverse"], [251, 3, 1, "", "inverse_all"], [251, 2, 1, "", "is_norm_spectral_model"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "pivot_energy"], [251, 3, 1, "", "plot"], [251, 3, 1, "", "plot_error"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "reference_fluxes"], [251, 3, 1, "", "spectral_index"], [251, 3, 1, "", "spectral_index_error"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[252, 3, 1, "", "__call__"], [252, 2, 1, "", "amplitude"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 2, 1, "", "ecut"], [252, 3, 1, "", "energy_flux"], [252, 3, 1, "", "energy_flux_error"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "evaluate_error"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 2, 1, "", "frozen"], [252, 2, 1, "", "index_1"], [252, 2, 1, "", "index_2"], [252, 3, 1, "", "integral"], [252, 3, 1, "", "integral_error"], [252, 3, 1, "", "inverse"], [252, 3, 1, "", "inverse_all"], [252, 2, 1, "", "is_norm_spectral_model"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "pivot_energy"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "reassign"], [252, 2, 1, "", "reference"], [252, 3, 1, "", "reference_fluxes"], [252, 3, 1, "", "spectral_index"], [252, 3, 1, "", "spectral_index_error"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[253, 3, 1, "", "__call__"], [253, 2, 1, "", "amplitude"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "energy_flux"], [253, 3, 1, "", "energy_flux_error"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_error"], [253, 2, 1, "", "expfactor"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 2, 1, "", "frozen"], [253, 2, 1, "", "index_1"], [253, 2, 1, "", "index_2"], [253, 3, 1, "", "integral"], [253, 3, 1, "", "integral_error"], [253, 3, 1, "", "inverse"], [253, 3, 1, "", "inverse_all"], [253, 2, 1, "", "is_norm_spectral_model"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "pivot_energy"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "reassign"], [253, 2, 1, "", "reference"], [253, 3, 1, "", "reference_fluxes"], [253, 3, 1, "", "spectral_index"], [253, 3, 1, "", "spectral_index_error"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[254, 3, 1, "", "__call__"], [254, 2, 1, "", "amplitude"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "energy_flux"], [254, 3, 1, "", "energy_flux_error"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_error"], [254, 2, 1, "", "expfactor"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 2, 1, "", "index_1"], [254, 2, 1, "", "index_2"], [254, 3, 1, "", "integral"], [254, 3, 1, "", "integral_error"], [254, 3, 1, "", "inverse"], [254, 3, 1, "", "inverse_all"], [254, 2, 1, "", "is_norm_spectral_model"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "pivot_energy"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "reassign"], [254, 2, 1, "", "reference"], [254, 3, 1, "", "reference_fluxes"], [254, 3, 1, "", "spectral_index"], [254, 3, 1, "", "spectral_index_error"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[256, 3, 1, "", "__call__"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_geom"], [256, 2, 1, "", "evaluation_bin_size_min"], [256, 2, 1, "", "evaluation_radius"], [256, 2, 1, "", "evaluation_region"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 3, 1, "", "from_position"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integrate_geom"], [256, 2, 1, "", "is_energy_dependent"], [256, 2, 1, "", "map"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "phi_0"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "plot_grid"], [256, 3, 1, "", "plot_interactive"], [256, 3, 1, "", "plot_position_error"], [256, 2, 1, "", "position"], [256, 2, 1, "", "position_error"], [256, 2, 1, "", "position_lonlat"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"], [256, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "energy_flux"], [257, 3, 1, "", "energy_flux_error"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_error"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integral"], [257, 3, 1, "", "integral_error"], [257, 3, 1, "", "inverse"], [257, 3, 1, "", "inverse_all"], [257, 2, 1, "", "is_norm_spectral_model"], [257, 2, 1, "", "map"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "pivot_energy"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "reassign"], [257, 3, 1, "", "reference_fluxes"], [257, 3, 1, "", "spectral_index"], [257, 3, 1, "", "spectral_index_error"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"], [257, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 3, 1, "", "cutout"], [258, 2, 1, "", "default_parameters"], [258, 2, 1, "", "energy_center"], [258, 3, 1, "", "evaluate"], [258, 2, 1, "", "evaluation_radius"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 2, 1, "", "map"], [258, 2, 1, "", "name"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "position"], [258, 3, 1, "", "reassign"], [258, 3, 1, "", "slice_by_energy"], [258, 2, 1, "", "spectral_model"], [258, 3, 1, "", "stack"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"], [258, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[259, 3, 1, "", "__call__"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "evaluate"], [259, 2, 1, "", "f0"], [259, 2, 1, "", "f1"], [259, 2, 1, "", "f2"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 3, 1, "", "integral"], [259, 2, 1, "", "is_energy_dependent"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "phi_ref"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_phasogram"], [259, 3, 1, "", "read"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference_time"], [259, 3, 1, "", "sample_time"], [259, 2, 1, "", "t_ref"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "time_sum"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"], [259, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[260, 3, 1, "", "__call__"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "evaluate_geom"], [260, 2, 1, "", "evaluation_bin_size_min"], [260, 2, 1, "", "evaluation_radius"], [260, 2, 1, "", "evaluation_region"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 3, 1, "", "from_position"], [260, 2, 1, "", "frozen"], [260, 3, 1, "", "integrate_geom"], [260, 2, 1, "", "is_energy_dependent"], [260, 2, 1, "", "lat_0"], [260, 2, 1, "", "lon_0"], [260, 2, 1, "", "map"], [260, 2, 1, "", "map_center"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "phi_0"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "plot_grid"], [260, 3, 1, "", "plot_interactive"], [260, 3, 1, "", "plot_position_error"], [260, 2, 1, "", "position"], [260, 2, 1, "", "position_error"], [260, 2, 1, "", "position_lonlat"], [260, 3, 1, "", "read"], [260, 3, 1, "", "reassign"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "to_dict"], [260, 3, 1, "", "to_region"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"], [260, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[261, 3, 1, "", "__call__"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "energy_flux"], [261, 3, 1, "", "energy_flux_error"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "evaluate_error"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 3, 1, "", "from_region_map"], [261, 2, 1, "", "frozen"], [261, 3, 1, "", "integral"], [261, 3, 1, "", "integral_error"], [261, 3, 1, "", "inverse"], [261, 3, 1, "", "inverse_all"], [261, 2, 1, "", "is_norm_spectral_model"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "pivot_energy"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "plot_error"], [261, 3, 1, "", "read_xspec_model"], [261, 3, 1, "", "reassign"], [261, 3, 1, "", "reference_fluxes"], [261, 3, 1, "", "spectral_index"], [261, 3, 1, "", "spectral_index_error"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[262, 3, 1, "", "__call__"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 3, 1, "", "integral"], [262, 2, 1, "", "is_energy_dependent"], [262, 2, 1, "", "parameters"], [262, 3, 1, "", "plot"], [262, 3, 1, "", "reassign"], [262, 2, 1, "", "reference_time"], [262, 3, 1, "", "sample_time"], [262, 3, 1, "", "time_sum"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.utils": [[269, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[272, 1, 1, "", "CashCountsStatistic"], [273, 1, 1, "", "WStatCountsStatistic"], [274, 4, 1, "", "cash"], [275, 4, 1, "", "cash_sum_cython"], [276, 4, 1, "", "compute_chisq"], [277, 4, 1, "", "compute_flux_doubling"], [278, 4, 1, "", "compute_fpp"], [279, 4, 1, "", "compute_fvar"], [280, 4, 1, "", "cstat"], [281, 4, 1, "", "f_cash_root_cython"], [282, 4, 1, "", "get_wstat_gof_terms"], [283, 4, 1, "", "get_wstat_mu_bkg"], [284, 4, 1, "", "norm_bounds_cython"], [285, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[272, 3, 1, "", "compute_errn"], [272, 3, 1, "", "compute_errp"], [272, 3, 1, "", "compute_upper_limit"], [272, 2, 1, "", "error"], [272, 3, 1, "", "info_dict"], [272, 2, 1, "", "n_bkg"], [272, 2, 1, "", "n_sig"], [272, 3, 1, "", "n_sig_matching_significance"], [272, 2, 1, "", "p_value"], [272, 2, 1, "", "sqrt_ts"], [272, 2, 1, "", "stat_max"], [272, 2, 1, "", "stat_null"], [272, 3, 1, "", "sum"], [272, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[273, 3, 1, "", "compute_errn"], [273, 3, 1, "", "compute_errp"], [273, 3, 1, "", "compute_upper_limit"], [273, 2, 1, "", "error"], [273, 3, 1, "", "info_dict"], [273, 2, 1, "", "n_bkg"], [273, 2, 1, "", "n_sig"], [273, 3, 1, "", "n_sig_matching_significance"], [273, 2, 1, "", "p_value"], [273, 2, 1, "", "sqrt_ts"], [273, 2, 1, "", "stat_max"], [273, 2, 1, "", "stat_null"], [273, 3, 1, "", "sum"], [273, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[286, 4, 1, "", "hierarchical_clustering"], [287, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[288, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [289, 4, 1, "", "cartesian"], [290, 4, 1, "", "fov_to_sky"], [291, 4, 1, "", "galactic"], [292, 4, 1, "", "motion_since_birth"], [293, 4, 1, "", "polar"], [294, 4, 1, "", "sky_to_fov"], [295, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[296, 1, 1, "", "HDULocation"], [297, 1, 1, "", "LazyFitsData"], [298, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[296, 3, 1, "", "get_hdu"], [296, 3, 1, "", "info"], [296, 3, 1, "", "load"], [296, 3, 1, "", "path"]], "gammapy.utils.integrate": [[299, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[300, 1, 1, "", "ScaledRegularGridInterpolator"], [301, 4, 1, "", "interpolate_profile"], [302, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[300, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[303, 5, 1, "", "BACKEND_DEFAULT"], [304, 5, 1, "", "METHOD_DEFAULT"], [305, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [306, 5, 1, "", "N_JOBS_DEFAULT"], [307, 5, 1, "", "POOL_KWARGS_DEFAULT"], [308, 1, 1, "", "multiprocessing_manager"], [309, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[310, 1, 1, "", "InverseCDFSampler"], [311, 4, 1, "", "draw"], [312, 4, 1, "", "get_random_state"], [313, 4, 1, "", "normalize"], [314, 4, 1, "", "pdf"], [315, 4, 1, "", "sample_powerlaw"], [316, 4, 1, "", "sample_sphere"], [317, 4, 1, "", "sample_sphere_distance"], [318, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[310, 3, 1, "", "sample"], [310, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[319, 4, 1, "", "compound_region_to_regions"], [320, 4, 1, "", "make_concentric_annulus_sky_regions"], [321, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [322, 4, 1, "", "region_to_frame"], [323, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[324, 4, 1, "", "get_images_paths"], [325, 4, 1, "", "make_path"], [326, 4, 1, "", "read_yaml"], [327, 4, 1, "", "recursive_merge_dicts"], [328, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[329, 4, 1, "", "hstack_columns"], [330, 4, 1, "", "table_row_to_dict"], [331, 4, 1, "", "table_standardise_units_copy"], [332, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[333, 1, 1, "", "Checker"], [334, 4, 1, "", "assert_quantity_allclose"], [335, 4, 1, "", "assert_skycoord_allclose"], [336, 4, 1, "", "assert_time_allclose"], [337, 4, 1, "", "mpl_plot_check"], [338, 4, 1, "", "requires_data"], [339, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[333, 3, 1, "", "run"]], "gammapy.utils.time": [[340, 4, 1, "", "absolute_time"], [341, 4, 1, "", "time_ref_from_dict"], [342, 4, 1, "", "time_ref_to_dict"], [343, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[344, 4, 1, "", "standardise_unit"], [345, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[346, 1, 1, "", "MapPanelPlotter"], [347, 4, 1, "", "add_colorbar"], [348, 4, 1, "", "annotate_heatmap"], [349, 4, 1, "", "colormap_hess"], [350, 4, 1, "", "colormap_milagro"], [351, 4, 1, "", "plot_contour_line"], [352, 4, 1, "", "plot_distribution"], [353, 4, 1, "", "plot_heatmap"], [354, 4, 1, "", "plot_map_rgb"], [355, 4, 1, "", "plot_npred_signal"], [356, 4, 1, "", "plot_spectrum_datasets_off_regions"], [357, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[346, 3, 1, "", "plot"], [346, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 65, 78, 79, 80, 82, 83, 86, 87, 90, 95, 96, 97, 98, 99, 100, 103, 104, 105, 118, 119, 124, 127, 132, 133, 137, 138, 139, 143, 163, 190, 196, 205, 209, 210, 215, 217, 218, 221, 222, 224, 225, 226, 228, 231, 233, 234, 238, 240, 241, 247, 248, 249, 252, 253, 254, 259, 262, 263, 264, 270, 279, 296, 344, 348, 349, 356, 359, 360, 362, 364, 369, 370, 371, 373, 375, 376, 377, 378, 379, 382, 385, 388, 389, 391, 392, 394, 395, 396, 397, 425, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 472, 473, 475, 478, 479, 485, 486, 487, 488, 490, 491, 493, 498, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 557], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 65, 69, 72, 79, 81, 83, 84, 85, 86, 89, 91, 97, 98, 100, 103, 104, 105, 106, 107, 108, 110, 112, 114, 116, 117, 119, 120, 121, 122, 124, 126, 127, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 166, 167, 171, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 268, 270, 272, 273, 274, 277, 278, 279, 280, 286, 287, 306, 310, 317, 318, 336, 347, 349, 350, 354, 356, 359, 360, 362, 363, 366, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 392, 395, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 485, 487, 491, 495, 497, 500, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553, 554, 555, 556], "00": [65, 83, 84, 85, 86, 96, 360, 374, 427, 428, 429, 431, 432, 433, 434, 435, 437, 439, 440, 441, 444, 445, 447, 448, 451, 452, 454, 456, 457, 458, 459, 460, 461, 463, 464, 467, 468, 469, 470, 472, 474, 476, 477, 478, 479, 480, 508, 518, 538, 539, 549, 557], "000": [65, 83, 84, 86, 119, 374, 430, 432, 433, 435, 440, 441, 442, 444, 445, 448, 451, 452, 456, 457, 461, 463, 464, 469, 476, 477, 479, 508], "0000": 385, "000000": 456, "000000000000002": 461, "00000000000001": 435, "00000000000003": 453, "00000000000004": 456, "0000000000016": 82, "0000000000018": 89, "000000000002": 444, "000000000006": 444, "000000000007": 456, "00000000001": 456, "00000000e": [458, 459], "00000001": 82, "0000000e": 459, "00000143": [360, 557], "0000e": [96, 429, 432, 433, 434, 435, 437, 440, 448, 452, 458, 464, 478, 538], "0001": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 350, 442], "00010298": 457, "000150": 430, "0002": [430, 479], "00020": 430, "0002000": 430, "0003": 442, "00050": 430, "000500": 430, "0006": 430, "00074287037": [89, 445], "000742870370370241": 89, "0008": 456, "0009": 430, "000e": [432, 435, 441, 448, 452, 456, 464, 479, 538], "000true": 430, "001": [50, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 336, 427, 444, 458, 472, 516], "0016288e": 459, "001e": 65, "002": [427, 431], "002018": 469, "0025508e": 459, "0028272e": 459, "0029": 384, "0029490222317034775": 477, "002e": 65, "003": [453, 463, 469], "003026327991562108": 441, "003131946268913696": 477, "0033": 555, "0036925550381217": 435, "00375698": 225, "004": 65, "00422666667": 449, "00449161": 230, "00490": 442, "00490483": 442, "0049409": 468, "005": 456, "00521472221220211": 441, "005914854792576181": 443, "0064830e": 459, "00688029": 225, "007": 456, "0076540e": 459, "008": [456, 554], "008164325487530225": 443, "0087e": 452, "008898002182656187": 443, "00894": 479, "009": 456, "00931e": 428, "009431203058496632": 443, "00e": [79, 428, 433, 444, 448, 452, 453, 457, 459, 460, 469, 477], "01": [39, 52, 72, 79, 83, 84, 86, 89, 97, 100, 104, 105, 107, 121, 127, 166, 167, 171, 212, 218, 222, 224, 226, 241, 247, 360, 395, 427, 428, 432, 434, 436, 437, 440, 441, 444, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 469, 470, 471, 477, 478, 479, 480, 485, 490, 500, 502, 503, 506, 510, 512, 514, 536, 537, 539, 541, 542, 543, 549, 554, 557], "010": 463, "010e": 65, "011": 463, "011872336272724": 477, "012": 463, "0122385e": 459, "01235137e": 459, "012733796525585": 465, "013": 440, "0139252e": 459, "014": [81, 97, 100, 104, 105, 163, 433, 448, 456, 460, 477, 478, 502], "0141e": 448, "0143724": 225, "0143764": 468, "01449": 79, "0145": 462, "01450": [450, 478], "0149044e": 459, "015": 456, "01551196351647377": 225, "0164": 442, "01648855015875024": 553, "01700709977114979": 449, "017442925431194484": 449, "018": 65, "018182745349064267": 441, "0183519e": 459, "01960784313726": 446, "019899368286133": 441, "01e": [163, 395, 428, 456], "01t00": [83, 86, 89, 360, 436, 444, 557], "01t01": 86, "01t02": 86, "02": [16, 65, 79, 89, 97, 99, 100, 104, 105, 106, 110, 118, 151, 158, 163, 183, 184, 186, 188, 192, 193, 195, 196, 395, 396, 427, 428, 430, 432, 433, 434, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 467, 469, 474, 477, 478, 479, 500, 502, 503, 510, 511, 512, 518], "020": [441, 456], "020420144596410953": 465, "021": [65, 456], "0225e": 456, "02288737": 225, "023": 456, "023473560586078527": 477, "023e": 436, "024": 456, "02432": 456, "024551293715163": 477, "024e": 479, "025": [456, 469], "0251191219844263": 442, "025e": 133, "026": [53, 65, 456], "02653": [436, 442], "026891": 456, "026914": 456, "027": 65, "028": 432, "028854": 462, "029e": 456, "02e": 79, "02t16": [433, 464, 477, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "02t23": 82, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 65, 83, 85, 86, 372, 387, 427, 428, 430, 441, 442, 444, 447, 448, 452, 456, 459, 461, 463, 465, 466, 467, 471, 478, 513], "032": 456, "0322": 65, "0322775e": 459, "0327e": 434, "033": [65, 427, 431, 432, 456], "033176650892097": 91, "03383": 468, "034": 554, "0344": 65, "034e": 430, "0354700e": 459, "0356": 428, "0356551": 428, "036": 65, "036e": 456, "037": 463, "0371e": 452, "03745318352059925": 547, "0375512e": 459, "0376213e": 459, "039": [440, 441], "039215686274545": 446, "03921700077803329": 441, "0395135e": 459, "03978226e": 464, "04": [30, 65, 89, 427, 431, 433, 435, 436, 438, 441, 444, 452, 453, 456, 459, 461, 464, 467, 468, 469, 472], "041": 469, "0415": 479, "041882": 456, "042": 456, "0423761": 428, "042e": 456, "043": 65, "04357249662280083": 432, "044": 433, "04454": 469, "0447": 436, "0454683": 468, "046": 65, "0462798e": 459, "047": 65, "0473174": 230, "0474750e": 459, "048": [440, 469], "0482342e": 459, "048962": 530, "04897634344908595": 91, "048e": 65, "049": [430, 440], "04939e": 428, "049676": 456, "04d": 444, "04e": 460, "04t15": 82, "04t22": 82, "05": [19, 20, 26, 29, 42, 65, 69, 83, 86, 99, 116, 118, 126, 194, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 320, 387, 428, 429, 430, 432, 433, 436, 440, 441, 442, 445, 448, 451, 455, 456, 457, 458, 459, 460, 463, 464, 466, 468, 470, 477, 478, 505, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "050": 463, "05019": 133, "0503641": 428, "0505949e": 459, "05075": 459, "0508075688763": 456, "05088486522436142": 432, "051": [19, 20, 26, 463], "051c": [17, 21, 22, 24, 25, 27], "052": 456, "0520119e": 459, "0521842481248": 443, "05227": 456, "053": 440, "053212009682775": 465, "054833602905273e": 441, "05487060546875": 432, "0548e": 441, "054e": 65, "055": 456, "055e": 430, "0560": 479, "056130": 456, "05628243": 479, "05637e": 428, "05673": 479, "057": 456, "05762513693893088": 441, "058": 65, "058201": 456, "05853": 436, "058823529411775": 446, "058e": 436, "059": 65, "05901956e": 459, "0598579": 428, "05deg": 194, "06": [137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 427, 431, 439, 440, 441, 442, 447, 454, 456, 457, 458, 459, 460, 461, 467, 469, 472, 539], "061": [433, 479], "062": [444, 463, 464, 469], "0625": 464, "0628": 479, "063": 65, "0631757e": 459, "06334488877417636": 465, "064108e": 456, "06430": 442, "0643032": 442, "06450": 133, "065071": 456, "065119": 479, "06549": 133, "066": 432, "066442": 456, "0674": 436, "067701": 526, "068245": 456, "0689": 458, "068e": 430, "069": 65, "07": [97, 163, 334, 374, 395, 427, 430, 431, 433, 440, 442, 451, 453, 456, 457, 459, 461, 463, 469, 472, 480], "07022": 133, "070483": 456, "070e": 436, "0711412": 428, "072": 65, "073": 65, "0739282e": 459, "074": [456, 469], "07454639": 442, "07455": 442, "0746": 479, "0748": [456, 479], "075": 65, "07512322002655547": 441, "0756e": 428, "076": 479, "077": 428, "078": 430, "07843137254903": 446, "07943648658692837": 465, "07944657408": 456, "079464e": 479, "0799109224230051": 465, "07e": 453, "08": [82, 354, 395, 427, 431, 434, 435, 437, 438, 440, 441, 448, 454, 456, 457, 458, 460, 467, 469, 472, 477, 478, 519], "080": 432, "0800792e": 459, "08075": 459, "08081469527619482": 435, "08088": [169, 460], "081": 432, "0811551760882139": 465, "08142": 455, "08191603310406206": 465, "08192": 442, "08192101": 442, "082": 456, "082691868487906": 449, "08269984": 479, "082e": 119, "083": [65, 456], "08328557573258877": 465, "0833333358168602": 432, "0833333432674408": 432, "08342": 133, "08388624433428049": 465, "084": [65, 433], "08447355125099419": 465, "0845515": 428, "084608": 516, "085": 456, "08529426": 92, "0855013383552432": 465, "086144": 511, "08675": 457, "086e": 456, "087": 479, "08795162606984375": 465, "087e": 456, "088742": 456, "08880368117243051": 465, "08894569035619496": 465, "089": 128, "0894640e": 459, "0897868126630783": 465, "089881": 456, "08e": [448, 463], "09": [33, 119, 163, 427, 433, 436, 438, 440, 456, 457, 459, 460, 477, 478, 479, 555], "090": [433, 447], "0902437e": 459, "0907128e": 459, "0910": [239, 240], "0914": [52, 53], "092": 432, "093477": 442, "09348": 442, "09426693227142095": 465, "094834": 456, "095232": 456, "09562941": 479, "095707": 479, "096": 433, "0960": 479, "09607": 479, "09610314778983592": 465, "09623312838375568": 465, "09740295372903346": 465, "097e": 65, "09805": 133, "098903": 456, "09907043184188653": 465, "099548": 538, "09e": [460, 469], "0b100": 306, "0d": [121, 446, 457, 514], "0e": [382, 433, 435, 437, 441, 444, 448, 452, 457, 459, 461, 463, 464, 469, 477, 509, 510, 511, 512, 514, 515, 516, 517, 520, 521, 523, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "0f": [458, 469, 479], "0rc": 388, "0rc1": 388, "0true": 442, "0x105fd0cf8": 359, "0x105fe3b70": 359, "0x129602550": 359, "0x7fb2b8e90490": 446, "0x7fb2b8e90dc0": 446, "0x7fb2b92ee700": 464, "0x7fb2bbebfd60": 449, "0x7fb2c0196670": 465, "0x7fb2c01969d0": 465, "0x7fb2c01ccbe0": 457, "0x7fb2c01ccca0": 457, "0x7fb2c32799d0": 457, "0x7fb2c32a41f0": 468, "0x7fb2c32eb0a0": 468, "0x7fb2c3684640": 457, "0x7fb2e03f5580": 468, "0x7fb2e03f55b0": 468, "0x7fb2e064fac0": 466, "0x7fb2e0ea7370": 465, "0x7fb2e0ea78e0": 465, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 62, 64, 65, 69, 70, 71, 72, 74, 79, 82, 83, 84, 86, 90, 91, 96, 97, 99, 100, 104, 105, 106, 109, 110, 111, 112, 116, 118, 119, 120, 121, 122, 124, 125, 127, 128, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 158, 163, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 200, 201, 203, 205, 206, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 234, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 270, 272, 273, 277, 278, 286, 287, 299, 300, 306, 307, 308, 317, 318, 320, 321, 344, 346, 349, 350, 354, 356, 359, 360, 362, 363, 366, 367, 369, 370, 371, 373, 374, 376, 379, 381, 382, 383, 384, 385, 386, 388, 389, 392, 395, 396, 399, 400, 402, 403, 407, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 474, 477, 478, 479, 481, 485, 486, 487, 490, 491, 493, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 552, 554, 555, 556], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 64, 65, 82, 83, 84, 85, 86, 97, 98, 100, 103, 104, 105, 106, 110, 112, 116, 120, 121, 125, 126, 127, 132, 133, 134, 137, 138, 140, 142, 144, 150, 151, 152, 153, 154, 156, 163, 169, 182, 183, 184, 186, 191, 192, 194, 195, 196, 200, 201, 203, 212, 215, 227, 228, 230, 231, 252, 264, 278, 306, 308, 318, 347, 352, 354, 356, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 376, 381, 382, 383, 387, 389, 395, 400, 402, 413, 415, 418, 422, 424, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 481, 487, 491, 497, 500, 502, 503, 504, 505, 515, 516, 519, 521, 524, 525, 527, 528, 529, 530, 532, 533, 535, 536, 537, 541, 542, 543, 553, 554, 557], "100": [19, 20, 26, 46, 47, 71, 89, 119, 127, 142, 143, 153, 194, 196, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 264, 266, 318, 359, 360, 362, 367, 378, 398, 428, 429, 432, 435, 440, 441, 442, 444, 445, 446, 448, 449, 453, 455, 456, 457, 459, 460, 461, 464, 466, 468, 469, 470, 479, 483, 485, 486, 487, 491, 502, 505, 506, 509, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 554], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184, 189, 359, 362, 430, 456, 457, 459, 466, 469, 479, 505], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 98, 103, 142, 153, 156, 166, 456, 469], "100000": [71, 456, 477], "1000000": [51, 52, 54, 456, 538], "10000000": 538, "1000927587577": 452, "1001": [417, 444, 445], "1002": 417, "10041": 132, "10045": [63, 254, 537], "10049": 428, "1006": 417, "101": [403, 453, 456], "1012": 455, "1013": 418, "1014": 418, "101430": 453, "10172": 464, "102": [163, 436, 554, 555], "1021": 418, "1022": 452, "1025": 418, "1026": 418, "10262943822890519": [91, 465], "1027": 418, "102877228833871": 465, "1029": 418, "10295505": 479, "102e": 456, "103": [132, 398, 421], "103000133": 470, "1031": 418, "10317325958321796": 477, "1032": 418, "1034": 479, "1035": 418, "10350021860740599": 433, "1036": 436, "1038": 418, "104": 442, "1040": 418, "10409": 442, "10409446": 442, "1043": 418, "104317": [97, 457, 463], "1044": 436, "1045": 418, "1046": 377, "10470702368766069": 465, "10477": 479, "105": [78, 432, 433, 471], "1051": 418, "1052": 456, "1053": 418, "1054": 418, "1054498": 128, "1057": 418, "10592": 557, "105953": 479, "1061971e": 459, "106217": 79, "1062535e": 459, "1064": 456, "1065": 418, "1067": 418, "1069": 418, "107": [428, 461], "1070": [418, 479], "1072542e": 459, "1073": 418, "10752883769757363": 465, "1076": 418, "1078": 418, "107e": 456, "108": 415, "108034597491956e": 464, "108043": 440, "1082": 418, "1083": 418, "1084": 418, "1085": 418, "1085000": 440, "108521": 464, "1086": 278, "1087": 418, "1088": 418, "1089": 418, "109": [398, 461], "1090": 418, "1092": [418, 436], "1093": [418, 436], "1098": 418, "1099306e": 459, "109e": 442, "10d": 446, "10e": [163, 456, 459], "10k": 184, "10th": [386, 397], "11": [65, 83, 86, 89, 119, 120, 124, 125, 201, 320, 363, 366, 368, 376, 383, 387, 398, 399, 420, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 456, 457, 458, 460, 462, 463, 466, 467, 469, 477, 478, 479, 502, 504, 555], "110": [456, 469], "1100": 418, "110000": [457, 460], "1102": 418, "1102e": 429, "1103": 418, "110380": [79, 375, 437, 440, 442, 468], "1104": 418, "1105": 418, "1107": 418, "1108": 418, "111": [347, 366, 418, 440, 456], "1110": 418, "1111": [134, 456, 479], "111140": [375, 437, 440, 442], "111159": [375, 437, 440, 442, 468], "1115": 418, "111507416": 453, "111630": [85, 453, 468], "111797": 456, "11184": [63, 253, 536], "112": [427, 428, 439, 549], "11208": 63, "1127": 418, "11291820875721864": 465, "113": 479, "1131": 367, "1133": 418, "1134": 418, "1136": 418, "114416978060046": 452, "1149": 457, "115": [65, 427, 435, 549], "1150": 418, "11517": 479, "11553325504064559": [91, 465], "11587179071752986": 91, "115931": 509, "116": 398, "1160": 456, "11610": 479, "1162": 418, "1166": 418, "1167": [366, 373], "1169": 418, "116e": 65, "117": [398, 432, 519], "1170": 418, "1172": 373, "1173775": 456, "1176": 418, "117877e": 456, "1179": 418, "118": [132, 427, 440, 539, 549], "1183": 418, "118355": 456, "119": [436, 440], "1190": 418, "1193777560333226e": 450, "119432": 428, "1195": 418, "11af4c": 398, "11e": [438, 456], "12": [17, 38, 42, 65, 82, 83, 86, 97, 100, 107, 119, 133, 153, 156, 182, 183, 184, 186, 192, 195, 196, 205, 209, 215, 217, 221, 228, 238, 240, 249, 252, 253, 254, 264, 363, 365, 366, 367, 368, 370, 371, 376, 379, 382, 398, 402, 403, 404, 416, 421, 428, 430, 432, 433, 434, 435, 436, 437, 440, 442, 443, 444, 448, 449, 450, 451, 452, 456, 457, 458, 461, 463, 464, 466, 467, 469, 477, 479, 491, 502, 505, 506, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 523, 526, 527, 530, 531, 532, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548], "120": [53, 374, 427, 434, 469, 513, 549], "120000": 437, "120154": 456, "1204": 418, "1207": 418, "120e": [65, 479], "121": [65, 442, 463], "1210": 418, "1211": [418, 456], "121241": 440, "12148": 436, "1215": 418, "1216": 429, "12186": 479, "1219": 456, "122": [65, 132, 398, 430, 463], "1220": 418, "1226": 418, "1227": 418, "12276676166802643": 465, "123": [83, 86, 371, 432, 436], "1231": 419, "1234": 84, "123456789": [360, 557], "1235": 418, "1237": 367, "1238": 418, "123890826": 82, "123892513": 82, "1239": 364, "123944": 79, "124": [132, 371, 432, 436, 456, 463], "1240": 418, "12423250e": 459, "1243": 479, "1244969200533408": 287, "1246": 418, "12493874": 459, "124e": 65, "125": [65, 119, 132, 432, 442, 461, 469, 479, 554], "12518": 441, "12525306": 449, "12546": 63, "125e": 441, "126": [65, 427, 430, 456, 458, 549], "12611": 133, "1264500e": 459, "126585": 428, "1266": 418, "1268": 418, "12688": 79, "1269263e": 459, "12697": 441, "127": 436, "12704": [132, 133], "1271v": 279, "12751": 428, "1277": 365, "1278": 366, "12794487": 464, "128": [398, 453, 481], "12809": [97, 457, 463], "1281": 418, "12816": 479, "12856": 469, "1287": 418, "1289": 418, "128e": 430, "129": 424, "1290": 418, "1291": 418, "1294": 418, "1299": 456, "129e": 436, "12nan5": 430, "12r_": 53, "12th": [384, 397], "13": [65, 96, 119, 133, 286, 363, 364, 368, 373, 378, 387, 403, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 480, 487, 555], "130": [427, 502, 549], "1300": 418, "1301v": 38, "13030": 479, "1305": 418, "13061": 464, "131": [430, 442], "1310": 479, "1312": 418, "13133": 479, "13152": 442, "1316": 418, "1317": 419, "1318": 418, "1319": [89, 418], "13197": 440, "132": 436, "1321e": 441, "13226": 479, "132472": 442, "133": [133, 427, 472], "1331": 419, "1334": 419, "1337": 419, "1339": 419, "133e": [430, 436], "134": [133, 433, 436, 442], "1341": 419, "1342a": 143, "1343": 419, "1344": 456, "134494": 99, "1345": 419, "1346": 419, "1347": 419, "135": [38, 96, 133, 430, 456, 458], "13500212963": 456, "13500566998758723": 443, "1351e": 456, "1354": 419, "135498046875": 432, "1357": 419, "1359316": 479, "135e": 119, "136": 456, "1360": 419, "1361": 456, "1362": 419, "1367": [419, 525], "1369": [367, 419], "137": [433, 436, 443], "1372": 419, "137254901960785": 446, "1373": 419, "1374": 419, "1376": 419, "1377": 419, "1378": 419, "1379190199428797": 287, "137990": 456, "137e": [436, 452], "138": [398, 430, 444, 479], "1381": 419, "1386": 419, "1387": 419, "138e": 442, "139": [432, 436, 469], "13911": 479, "1395": 419, "1396": [359, 433], "13960": 479, "1397": 419, "1397412321592923": 465, "13e": 457, "13nan6": 430, "13th": 397, "14": [28, 63, 65, 82, 99, 118, 360, 363, 368, 371, 376, 378, 379, 417, 428, 430, 433, 436, 440, 453, 456, 457, 458, 462, 463, 464, 477, 478, 479, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 554], "140": [432, 470], "1401": 419, "1406": 419, "140779935183259e": 450, "14079": 132, "1408": [419, 479], "141": [285, 442, 456], "1411180": 440, "1412": 419, "14121": 442, "1412536400000000": 479, "14149953611195087": [91, 465], "14150": 442, "1419": [367, 420], "141945": 428, "142": [65, 398, 430, 456, 479], "14201": 132, "1421": 419, "14210": 430, "1426": 419, "142e": [452, 456], "143": 436, "1432": 419, "1433": 419, "1435": 419, "1438": 166, "1438465e": 459, "1439110308062257": 465, "144": [430, 463, 479], "14419991": 92, "1442739329466746e": 464, "1443": 419, "1444": 419, "1445": 373, "14457": 479, "1446": 419, "1447": 419, "145": 456, "1451": 374, "14531053887243": 442, "1456": 419, "1456479e": 459, "146": 479, "14610": 557, "146472": 456, "1467": 134, "14671140315352": 443, "147": [417, 456, 461], "1470": [419, 479], "1474": 419, "1475": 419, "1476": 419, "14773": 469, "147e": 456, "148": [432, 436], "1482": 456, "1485314": 92, "1486415e": 459, "1489": 419, "149": [432, 460, 463], "1491": 442, "1492": [419, 452], "1494": 442, "1495": 419, "1496e": 437, "1499472780781963": 287, "149e": 456, "14e": [437, 455], "14msts37sst": [444, 445], "14nan3": 430, "14nan5": 430, "14th": [383, 386, 397], "14yr_catalog": 63, "15": [39, 42, 65, 83, 84, 86, 140, 141, 142, 143, 144, 145, 150, 151, 152, 154, 349, 350, 354, 368, 376, 398, 402, 407, 412, 415, 416, 417, 419, 427, 428, 432, 433, 436, 438, 440, 441, 442, 444, 445, 446, 448, 449, 453, 456, 457, 458, 460, 461, 463, 464, 466, 467, 469, 479, 502, 510], "150": [125, 132, 133, 398, 430, 432, 444, 445, 461, 479], "1505": 419, "15076259": 92, "151": [398, 463], "1510": 128, "1510240e": 459, "15140": 436, "1515": 419, "15154854": 92, "1517": 419, "152": [436, 442, 478], "1520": 481, "1521": 442, "15228678433255e": 477, "1523": 444, "15246": 444, "152477": 469, "1527": 419, "153": 456, "1530": 457, "15319": 444, "153600": 457, "154": [398, 428, 456], "1543": 419, "154e": 442, "155": 398, "15518": 479, "1552": 438, "1553": [456, 479], "1554": 419, "1554106e": 459, "1556": [419, 456, 479], "1556008e": 459, "1558": 419, "156": [398, 433, 436, 442, 463], "1562": 419, "15621": 479, "1564": 419, "156525": 456, "1567629e": 459, "1568": 419, "15686274509804": 446, "157": [398, 479], "1573": 419, "1576": 419, "158": [133, 428, 433, 440, 452], "1582": 419, "1586": 89, "15899": 436, "159": [427, 518], "1594": 419, "1597317": 92, "159t": 52, "15h14m00": 456, "15nan8": 430, "16": [16, 24, 53, 65, 89, 99, 104, 105, 118, 182, 363, 367, 376, 379, 380, 403, 418, 423, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 504, 546, 554, 555], "160": [31, 119, 398, 407, 446, 463], "1600": 445, "1605": 419, "16056": 436, "1606": 419, "1607": 455, "160e": 65, "161": [132, 367, 432, 442, 456], "1610e": 456, "161250": 448, "1613279491744304": 465, "1616": 419, "1618850e": 459, "1619e": 96, "162": 65, "16227766": 461, "1622776601683795": [460, 461, 477], "16240": 478, "16287": 479, "1629219e": 459, "163": [446, 554], "1630": [419, 479], "16303": 442, "16303044": 442, "1634": 419, "164": 456, "1642": 428, "165": 463, "1650": 479, "16506": 428, "16511": 442, "16511148": 442, "1658": 419, "166": [398, 442, 456], "1660": 419, "16650390625": 429, "1665478": 92, "167": [398, 442, 448], "167219": 456, "1675": 419, "1678": 528, "167e": 436, "168": [456, 479], "1681": 419, "1684": 528, "1685": 419, "1686": 456, "1687": 82, "168702": 428, "169": [432, 442], "1691": 428, "1695": 419, "169560": 448, "1696": 419, "1697": 419, "169871": 448, "16th": 397, "17": [20, 21, 40, 65, 82, 370, 373, 376, 407, 424, 428, 442, 446, 453, 456, 457, 458, 459, 460, 461, 463, 469, 470, 479, 555], "170": 429, "17016482e": 458, "1702": 419, "17020": 436, "171": 436, "1710": 420, "1711": 419, "1713": 429, "1715": 373, "1717": 479, "171749": 479, "1719502": 92, "1719610": 92, "1719670": 92, "171b": 263, "172": 446, "17229679": 92, "173": 456, "1731": [419, 463], "1732": 456, "17320": 456, "1737799900000000": 479, "1742": 65, "17445": 479, "1746": [419, 479], "1748": [419, 463], "1750": 419, "1751": 419, "1753": 479, "1755": [419, 436], "1759": 419, "175e": 456, "176": [133, 398, 453, 456], "1760": 419, "1761": 419, "1762": 481, "1763": [420, 456], "1764": [419, 442], "176470588235294": 446, "1766": 420, "1768896e": 459, "177": [398, 452, 469, 470], "17776": 428, "177e": 456, "178": 418, "178442": 65, "1785": [419, 428], "1791": 419, "179475": 230, "1799": 419, "17a": 456, "17e": 463, "17g": 50, "17th": 413, "18": [11, 83, 86, 132, 363, 378, 384, 404, 410, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 477, 478, 479], "180": [373, 391, 393, 398, 456, 461], "1800": [419, 445, 461, 468], "180000": [444, 445], "1804": 456, "180458": 440, "18046952655570045": 287, "1805": 373, "1806": 452, "1807": 420, "1808": [419, 456, 479], "181": 436, "1811": 435, "1812": 419, "1813": 456, "1818": 419, "1821": 419, "1822": 419, "1825": 456, "18257": 436, "183": [432, 440], "1830e": 432, "183139597": 82, "1834": 429, "1835": 89, "1836": 420, "1836544903987521": 465, "1837": 420, "18385658": 442, "18386": 442, "18392464": 493, "184": [82, 89, 412, 416, 436, 444, 451, 462, 463], "18400002": 451, "1841": 368, "1845": 420, "1846": 420, "18465": 479, "1849": 420, "184989894219835": 449, "185": [452, 462], "1854": [420, 456], "1855": 420, "1857": 420, "1859": 420, "186": [411, 442, 456], "1861": 420, "1862": 420, "1864": 452, "186484131475074": 318, "1866": 460, "186643": 479, "186e": 436, "187": [404, 411, 427, 442, 539], "1871": 420, "1877": 369, "188": [411, 428, 448, 456], "1883": 420, "1884": 420, "18842983819716610": 442, "1888": 420, "188e": 430, "189": 459, "1890": 420, "1891": 420, "18921591": 459, "1893": 420, "1893e": 456, "1894": 420, "1895": 420, "1898": 420, "18988": 479, "1899070e": 459, "18a": 61, "18h43m48": 65, "19": [51, 53, 54, 65, 363, 375, 377, 379, 398, 406, 407, 409, 421, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "190": [433, 456], "1902": [63, 254, 537], "1903": 420, "1904": 420, "1905": 441, "1908": 420, "1909": 420, "191": [132, 411], "1910": [169, 460], "1912": 420, "1917": 479, "1918": 420, "1919": 420, "192": [427, 518], "1920": 479, "1921": 420, "19214093": 92, "1922": 420, "1926": 420, "1926520e": 459, "1927": 420, "1928": 456, "1929": 420, "193": [436, 469], "1930": 420, "1933": 420, "1934": 420, "19354": 442, "1936925": 92, "1937": [420, 456], "194": [411, 432], "1943186": 92, "1947565": 92, "1949": 420, "195": 225, "1950rspsa": 52, "1951": 399, "1953830": 92, "1955810e": 459, "1958e": 458, "196": [65, 428, 463], "1960784313725492": 446, "1961": 134, "1962": 399, "1963": 456, "19646": 469, "1965tralm": 21, "1966": 399, "1969": 399, "196991563774588": 264, "197": [65, 442], "1971": 370, "19735897928723367": 443, "1975": 399, "1976572e": 459, "197744": 477, "1978": 456, "1979": [274, 280, 399, 552], "1979892": 442, "1980": 456, "1982": 37, "1983": [452, 552], "1986": 371, "1986027": 479, "1987": 442, "19879005": 166, "1988": 399, "1989": 399, "199": [442, 463], "1990": [37, 399], "1990apj": [36, 37], "1991": 399, "1991mnra": 22, "19932878": 459, "1994": [399, 552], "1994a": [52, 53], "1995": [398, 399], "1995apj": 17, "1996": [27, 436, 449, 552], "1996mnra": 27, "1997": 477, "199732": 118, "1997apj": 25, "1998": [83, 86, 399, 552], "1998apj": 28, "1999": [53, 360, 557], "19991": 477, "199999809265137": 456, "19999999999999998": 435, "1999apj": 53, "19e": 460, "19th": 397, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 104, 105, 121, 141, 142, 151, 165, 182, 184, 313, 352, 365, 369, 370, 372, 373, 374, 375, 378, 379, 380, 391, 401, 403, 404, 405, 406, 410, 412, 415, 419, 421, 422, 425, 427, 428, 429, 430, 431, 432, 434, 436, 440, 447, 452, 457, 458, 460, 462, 464, 465, 466, 468, 469, 477, 489, 491, 493, 498, 501, 506, 550, 552], "1dc": [78, 79, 85, 97, 100, 104, 105, 109, 111, 112, 116, 132, 133, 138, 142, 143, 144, 153, 347, 352, 354, 367, 369, 375, 379, 400, 428, 435, 437, 440, 442, 448, 452, 453, 457, 459, 463, 491], "1deg": 194, "1e": [19, 20, 26, 82, 95, 124, 125, 127, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 231, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 264, 274, 280, 320, 334, 336, 359, 370, 430, 432, 434, 436, 438, 440, 442, 444, 445, 448, 450, 452, 453, 456, 458, 464, 466, 469, 470, 487, 491, 495, 519, 520, 521, 523, 526, 527, 531, 532, 534, 535, 536, 537], "1e0": 485, "1e10": [51, 143], "1e11": 458, "1e12": [485, 495], "1e2": [430, 485, 487], "1e3": [469, 495], "1e30": 529, "1e4": [458, 469, 470], "1e40": 486, "1e5": [434, 469, 487, 505, 506], "1e51": 52, "1e6": [45, 469, 483, 538], "1e7": [121, 538], "1f": 433, "1fhl": [404, 417], "1fhl_name": 69, "1h": [120, 153], "1k": [97, 104], "1kpc": 487, "1lhaaso": [57, 68, 425, 456], "1lhaaso_catalog": 57, "1rc1": 388, "1tev": [52, 53, 125, 445], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 62, 65, 66, 69, 70, 71, 72, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 96, 97, 99, 100, 104, 105, 108, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133, 135, 136, 140, 141, 142, 143, 145, 151, 153, 156, 163, 166, 180, 182, 183, 184, 186, 188, 189, 190, 194, 196, 201, 202, 203, 204, 205, 209, 213, 215, 217, 221, 223, 224, 228, 231, 238, 239, 240, 245, 246, 248, 249, 252, 253, 254, 259, 263, 264, 270, 272, 273, 274, 279, 280, 286, 306, 308, 344, 347, 352, 354, 356, 359, 360, 363, 364, 368, 370, 371, 373, 374, 375, 376, 379, 382, 383, 384, 385, 386, 388, 391, 393, 395, 398, 399, 400, 401, 402, 403, 410, 415, 416, 417, 418, 419, 420, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 477, 478, 479, 481, 487, 490, 491, 493, 498, 499, 500, 502, 503, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556], "20": [16, 38, 79, 83, 85, 86, 97, 99, 100, 104, 105, 118, 144, 145, 150, 152, 154, 163, 183, 184, 186, 192, 195, 196, 286, 360, 363, 364, 365, 367, 372, 374, 377, 379, 384, 421, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 481, 500, 502, 503, 504, 510, 511, 512, 515, 516, 525, 528, 533, 539, 554], "200": [52, 83, 86, 127, 194, 383, 411, 432, 433, 436, 442, 446, 448, 452, 456, 461, 464, 479, 554], "2000": [84, 97, 100, 104, 105, 121, 218, 222, 224, 226, 241, 247, 399, 444, 445, 446, 460, 469, 479, 552], "2000000": 440, "20000000000000004": 435, "20009124": 459, "2000apj": 264, "2000e": 464, "2001": [89, 399, 436, 552], "2002": [83, 86, 278, 449], "2003": [279, 449], "2003mnra": 279, "2004": [82, 89, 449, 471], "2004a": [39, 40], "2004aph": [79, 84], "2004mnra": 24, "2005": [63, 552], "200503": 428, "2005a": 456, "2006": [31, 33, 374, 436, 443, 451], "200638": 479, "2006a": 264, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 112], "2007": [377, 552], "20072608": 459, "2008": [38, 82, 213, 261, 469, 481, 519], "2008aj": 38, "2009": [127, 281, 400, 436, 552], "20097159": 459, "2009851": 459, "20099855": 459, "201": [52, 461], "2010": [121, 143, 213, 230, 360, 519, 552, 557], "2010a": [230, 264], "2010mnra": 143, "2011": [213, 481, 519], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [86, 400, 552], "2013": [128, 379, 385, 389, 398, 449], "20136": [78, 287, 471], "20137": [287, 471], "2013aph": 263, "2014": [134, 397, 481], "2015": [52, 82, 373, 376, 397, 469], "20151": 287, "2015apj": [60, 120], "2015jheap": 264, "2016": [26, 373, 376, 397, 400, 449, 460], "2016apj": 58, "2017": [213, 364, 366, 376, 379, 395, 397, 400, 442, 468, 519], "2017apj": [59, 61], "2017icrc": 468, "2018": [52, 364, 365, 366, 367, 368, 369, 370, 374, 376, 378, 379, 397, 424, 468, 471, 552], "2018a": 120, "2019": [366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 397, 419, 420, 443, 468, 552], "202": 442, "2020": [368, 379, 380, 381, 382, 383, 397, 443, 444, 452, 461, 541, 542, 543], "2021": [85, 213, 381, 383, 397, 424, 464, 519], "2021345e": 459, "2022": [384, 385, 397, 400, 470], "2023": [371, 386, 387, 397, 400], "2023arxiv230517030c": 57, "2024": [99, 118, 396, 397, 433, 464, 477, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "2024e": 478, "2026": [371, 400], "2028": 400, "203": 432, "2030": [371, 400], "2031": 400, "20326": [286, 429], "20327": [286, 429], "2033": 400, "20339": 286, "2034": 400, "20343": 286, "20344": 286, "20345": 286, "20346": 286, "20349": 429, "2035": 400, "20350": 429, "2037": 400, "20372": 468, "203775": 544, "2038": 400, "2039": 400, "20396": 429, "20397": 429, "204": 132, "2040469e": 459, "2041222e": 459, "20421": 429, "20422": 429, "2045": 371, "2046": 400, "2049": [400, 456, 479], "205": [411, 442, 461], "2050": 400, "20508075688775": 456, "2051": 400, "20517": 429, "20518": 429, "20519": 429, "205192": 456, "20521": 429, "2053315944536949e": 468, "205357": 456, "2054": 400, "20559": 479, "2058705e": 459, "206": [436, 456], "2061": 456, "2062580e": 459, "2064": 400, "2064335": 92, "2065": 400, "2066": 400, "2068682e": 459, "2069": 400, "207": [427, 442, 446, 463, 539], "2071": [371, 400], "2075": 387, "207520865": 451, "207521465": 451, "2076": 400, "2077": 400, "2079930e": 459, "208": [427, 518], "2085": 400, "2089": [373, 402], "20898": 429, "20899": 429, "209": 442, "20900": 429, "2093": 400, "2095": 442, "2097": [400, 428, 435, 437, 440, 442, 448, 452, 468], "2097e": 432, "2098": 400, "20deg": [444, 445], "20e": 459, "20th": 385, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 96, 121, 138, 362, 363, 407, 413, 422, 427, 428, 432, 436, 438, 442, 444, 447, 451, 455, 456, 459, 461, 479, 506, 554], "210": [411, 427, 456, 549], "2103": 456, "2104": 401, "2104353e": 459, "2106": 401, "2108": 401, "211": [456, 457], "2111": 401, "2112": [401, 478], "2114": 401, "2115": 401, "211770556360534": 453, "2118": 401, "2119": 401, "211e": 456, "212": [65, 411, 432, 456, 518], "2121": 401, "2121164e": 459, "2123": 401, "21236e": 428, "2124": 401, "2126": 401, "2128": 401, "2129": [373, 402], "213": 434, "2130": 401, "2131": [401, 456], "2132": 401, "21325": 469, "2133": 401, "2136": [372, 403], "2139": 401, "214": [427, 430, 436, 518], "2140": 401, "2141": 401, "2142": 401, "2145": 401, "2146": 401, "21464892": 479, "215": [65, 411, 425, 427, 456, 539], "21500000000003": 513, "215016": 547, "2151": 401, "2152": 401, "21525376976022406": 443, "2153": [401, 456], "2154": [401, 456], "2155": [405, 449, 451, 452, 456, 465, 479, 519], "215686274509824": 446, "2157": 401, "2159e": 96, "215e": 456, "216": [225, 432, 433, 461, 463, 548], "2160": 401, "2162670e": 459, "2163": 401, "2164425e": 459, "2166": 401, "2169": 401, "217": 456, "2171": 401, "21731921e": 461, "21733761e": 461, "21735587e": 461, "218": [60, 120], "218883": 532, "2190": 377, "2192": 402, "21t19": 89, "21t20": 89, "22": [65, 79, 81, 84, 97, 100, 104, 105, 127, 158, 163, 166, 363, 397, 410, 432, 433, 434, 435, 436, 441, 450, 452, 456, 457, 460, 461, 462, 464, 470, 471, 477, 478, 479, 480, 490, 497, 500, 502, 503, 506], "220": [440, 456, 463, 554, 555], "2200": 402, "2201": [63, 253, 456, 479, 536], "2202e": 479, "2204": 402, "2206": 402, "220e": 456, "221": [373, 411, 432], "22149": 436, "2217": 402, "2217412e": 459, "2218": [376, 403], "2219": [375, 403], "222": [58, 427, 456, 463, 539], "2221": 456, "22245374e": 119, "2227134679628": 452, "22271346796282": 452, "22271346796283": 452, "2229": [372, 402], "223": 463, "2230": 402, "2231": 456, "2235": 402, "2237": [402, 479], "2238": 402, "2239": 402, "2240": 402, "2243": 402, "2244": 402, "224436": 479, "225": [91, 286, 287, 383, 411, 456], "2250": 402, "22500": 438, "2254": 402, "2255": [377, 465], "225575051666": 456, "2255890": [451, 465], "2257": 402, "2259": 402, "226": [427, 442, 469, 539], "22608": 457, "2262": 402, "22635140877790516": 458, "2264": [371, 402], "22646133647326874": 458, "2264827111476982": 458, "22648881839710966": 458, "2265163003209506": 458, "22662622801631419": 458, "227": 432, "2270": 376, "2272": 402, "2274": [378, 403, 428], "2276": 402, "2277": 402, "2278": 402, "2278975306934438": 458, "2279": [376, 403], "227e": 456, "228": [274, 280, 367, 373, 432, 433, 438, 456, 460, 471], "2287": 402, "2289": 402, "229": [65, 456], "2290": 378, "2292": 403, "2294": 402, "2296": 402, "2297": 402, "22974080e": 469, "2298": 402, "22e": 460, "22nd": 397, "23": [89, 166, 359, 363, 385, 397, 421, 429, 434, 435, 436, 447, 452, 456, 458, 461, 463, 465, 479, 502], "230": [411, 436], "2300": 402, "2304": 377, "2305": 402, "230542e": 456, "2307": 63, "2308": 403, "231": 411, "2310": 402, "2313": 403, "2314": 403, "232": 61, "2320": [403, 456, 457], "2321": 403, "2323": 403, "2326": 403, "2327": [456, 463], "23273": 469, "233": 433, "2330": 403, "23306": 436, "2332": 463, "2334": 403, "2335": 403, "2338": 403, "2339": [429, 456, 479], "234": [411, 427, 447, 453], "234132519034915": 461, "23413252": 461, "2342": 403, "2343": 403, "234359264373779": 460, "2343e": 463, "2344": 403, "2345": 403, "2346": 403, "2347": 403, "235": [411, 432], "2350": 404, "2351": 403, "23523": [136, 163, 395, 432, 433, 441, 450, 457, 458, 460, 471, 477, 478, 490, 493, 553], "23526": [136, 432, 433, 441, 450, 457, 458, 460, 471, 477, 478, 553], "235294117647083": 446, "2354": 403, "23559": [432, 433, 450, 457, 460, 477, 478, 500, 502, 503, 553], "2356": 403, "2357": 463, "2358": 403, "2359": 403, "23592": [432, 433, 450, 457, 460, 477, 478, 500, 502, 503, 553], "236": [411, 456], "2360": 403, "2362506e": 459, "23628": 469, "2365": 403, "2366": 403, "2367": 403, "2368": 403, "237": 428, "23734": 479, "2375": 403, "2377": 403, "2378": 403, "2379": 403, "238060": 536, "2381": 403, "238298": 428, "2384": 428, "2385": 403, "239": [65, 427, 442, 539], "23905561": 459, "239439": 479, "239557417": 82, "2399": 456, "239e": 456, "23a": [60, 120], "24": [25, 27, 52, 53, 82, 83, 86, 89, 362, 363, 376, 380, 414, 419, 428, 436, 452, 456, 457, 461, 463, 468, 469, 477, 502, 519, 526, 535, 536, 537], "240": [97, 100, 104, 105, 116, 456, 457, 491], "2400": 403, "2401": 403, "2404": 403, "2405": 404, "241": [427, 456, 539], "2412": 403, "2414": 456, "2419": 428, "242": [427, 467, 518], "242835": 65, "242849": 524, "242993718237": 452, "243": [427, 518], "2431": 456, "2433": 404, "2435": 404, "244": [65, 411, 427, 432, 539], "2440": 456, "2441": 404, "244140625": 463, "2443672e": 459, "2444": [404, 436], "2446": [404, 463], "2448": 404, "2449": 404, "245": [411, 427, 433, 539], "2450": [404, 463], "245152": 442, "2454": 404, "2455": 404, "2459": 404, "246": 411, "2461": 404, "24611324074": 456, "2463": [379, 404], "2464": 404, "2465055e": 459, "2468": 404, "24685677e": 459, "247": [65, 411, 433], "2470": 404, "2471938975366008": 286, "2472": 404, "2475": 404, "2476": 404, "2477": 404, "2478": 404, "2479": [404, 478], "248": 411, "2481": 404, "248122": 456, "2483": 404, "2485": 477, "2486": 404, "249": [22, 411], "2490": 404, "2491": 404, "2492": 404, "2493": 404, "2496": 404, "24968": 428, "2497": 404, "2498": 404, "2499": 404, "249965667724609": 460, "249e": 133, "24e": [456, 463], "25": [33, 52, 83, 86, 96, 132, 142, 153, 166, 274, 280, 363, 376, 383, 397, 418, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 477, 478, 479, 511, 516], "250": [461, 552], "2501": 404, "250185": 460, "2502": [404, 442], "2505": 404, "2505121": 92, "2505703": 453, "2509": 456, "251": [427, 436, 440, 539], "2510": 404, "251185": 479, "2511884200000000": 479, "25162e": 428, "2518": 456, "251932": 456, "252": [411, 432, 442, 456], "2520": 404, "2521": 404, "2523": 404, "2525": 404, "2528": 404, "253": [435, 463], "2535": 404, "2536": [404, 463], "2537": 463, "2538": 404, "254": 411, "2540": 404, "2546": 404, "254901960784338": 446, "25496": 479, "2551": 404, "2552": [404, 456], "2553": 404, "2555": 380, "2557": 404, "255750516626": 456, "2558": 404, "2559": 404, "256": [65, 414, 427, 460, 467], "2560538e": 459, "2561": 404, "2562": 404, "2563": 404, "2564": 404, "25669857765111": 452, "2567": 404, "2568720263723087": 443, "256e": 448, "257": [132, 427, 435, 443, 447], "2574": 404, "25743553e": 458, "25763": 436, "257642": 456, "2579999": 468, "258": [435, 517], "2580": 404, "2585": 404, "2587": 404, "2589254117941673": 477, "259": [435, 477, 479], "2591e": 456, "2594": 404, "2595": 404, "259e": 133, "25b": 17, "25e": 463, "25t_": 53, "25th": 385, "26": [19, 83, 86, 363, 397, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 481, 529, 547], "260": [414, 479], "2604": 404, "2609": 463, "261": [414, 479], "2610e": 440, "2616": 404, "26173": 436, "2619": 404, "262": [414, 436, 463, 479], "2620": 404, "2625818241224747": 458, "2627": 404, "262728": 468, "26272868097919794": 465, "2628525e": 459, "263": [132, 133, 436, 463], "2634e": 441, "2635": 404, "2635108e": 459, "2637": 404, "26392": 438, "2639554729438709": 465, "264": [132, 414, 442], "2645": 404, "264516271942103": 477, "2648150": 92, "2649e": 458, "265": [32, 133, 373, 428, 436, 442, 463, 479], "2651": 404, "2654": 404, "266": [132, 133, 373, 435, 436, 442, 444, 448, 461, 463, 479], "2660": 404, "266192": 428, "26665050077722524": 465, "2667": 405, "267": [65, 133, 435, 436, 442, 463, 468], "2672": 405, "2673": 405, "26739753": 92, "2674": 405, "268": [385, 436, 442, 456, 463, 479], "2681": 405, "2684": 405, "2685": 405, "268663733018811": 465, "2687": 405, "26883694": 479, "26887783978974283": 465, "269": 479, "2692": 405, "269385": 456, "2695": 442, "269627": 468, "2697": 405, "2699878e": 459, "26a": [39, 40, 50, 52, 53, 120, 230, 264, 456], "26e": [456, 463], "26th": 381, "27": [133, 365, 425, 436, 442, 452, 457, 479, 554], "270": [429, 436, 456, 463, 479], "2703": 405, "2705": 405, "27057337686547633": 465, "2707": 405, "2708": 230, "2709": 405, "27093776e": 459, "271": [435, 436, 479], "2711": 405, "2712": 405, "2713": 405, "2715": 405, "271777777777796": 429, "27177778": 89, "2718": 405, "2719": 405, "271e": 436, "272": [435, 436, 440, 456, 463], "2720": [380, 406], "27209": 479, "2723": 405, "2725": 405, "2726": 405, "2726e": 479, "2727": 405, "2727693": 468, "2727e": 432, "2728": 405, "2729": 405, "273": [79, 414, 430, 436, 479], "2730": 405, "2731": 405, "2733": 405, "2734": 119, "2735": 405, "2737": 405, "2738": 405, "2739": 405, "274": 461, "27409496735322464": 465, "2741": 405, "2742": 405, "2743": 405, "274509803921596": 446, "2746": 405, "2747": 405, "27473": 442, "275": [435, 456, 547], "2750": 405, "2751": 405, "2752": 405, "2753": 405, "2755": 405, "2756": 405, "2759": 406, "276": 414, "2761": 406, "2762": 406, "2764": 406, "2765": 406, "2767": 406, "2768": 406, "277": 435, "2771": 406, "2772": 406, "27727": 463, "2775": 406, "277522957147003": 443, "2776": 406, "2777": 406, "2777074437073429": 465, "2778": 406, "2779": 406, "278": [27, 414, 435, 448, 456, 463], "2781": 406, "2782": 406, "2783": 406, "2784": 406, "2785": 406, "2785e": 432, "2787": 406, "2788": 406, "2789": 406, "279": 414, "2790": 406, "2791": 406, "2792": 406, "2793": 406, "2794": 406, "2796": 406, "2797": 406, "2798": 406, "2799": 406, "27e": 456, "27t20": 85, "28": [21, 24, 65, 89, 132, 133, 368, 397, 430, 433, 434, 435, 436, 442, 444, 448, 456, 460, 461, 463, 468, 479], "280": [65, 414, 432, 435, 461], "2800": [444, 463, 479], "2801": 406, "2802": 406, "2803": 406, "2804": 406, "2805": 406, "2808": 406, "2809": 406, "281": [435, 456], "2810": 406, "2811": 406, "28118133544922": 456, "2812": 406, "28120079": 456, "2815": 406, "2816": [406, 463], "2817": 406, "2818": 406, "2818047723094509": 465, "282": [132, 133], "2820": 406, "2822": [406, 463], "2823": 406, "2825456e": 459, "2827": 406, "2827988e": 459, "2828": 406, "2829": 406, "282e": 456, "283": [414, 432, 435], "2832": 406, "283218": 428, "283487": 456, "2837": 406, "28382603": 459, "2838398": 468, "28385358839966657": 465, "2839": 406, "284": [435, 456, 557], "2841": 406, "2842": 406, "28429": 442, "2845": 406, "2846": [406, 442], "285": [414, 427, 435, 472], "2852": 463, "28551": 133, "285f": [79, 84], "286": [414, 435], "2861432787940619": 465, "286e": 456, "287": [52, 53], "2872": 407, "28720322": 92, "2874": [407, 479], "28755283551095173": 465, "2878662980210884": 287, "287e": 436, "288": 119, "2880470e": 459, "2885": 407, "288e": 430, "289": [414, 427, 435, 539], "28905": 469, "2891": 407, "28958": 436, "2896": 407, "2897": 407, "28e": [97, 430, 440, 442, 457], "29": [65, 133, 259, 374, 384, 397, 425, 427, 428, 430, 433, 435, 436, 442, 448, 451, 455, 456, 461, 463, 464, 467, 468, 479], "290": [415, 432, 435, 443], "2900": 463, "2903": [407, 463], "2903e": 434, "2907": 407, "291": [414, 427, 472], "2912": 407, "29170324": 457, "291e": 479, "2922477": 92, "2924": 407, "2927": 407, "2929": 407, "293": 435, "2930": 456, "2931": 407, "2932": 407, "29355238360800506": 465, "2938": 407, "2939": 407, "293e": 436, "294": [427, 452, 467], "2942": 381, "2943": 407, "2944": [382, 407], "2945": 407, "2947": 407, "2948": 407, "295": 414, "2950": 407, "2951": 407, "2953": 442, "2956": 407, "29585273e": 469, "2959": 463, "295e": [436, 456], "296": [414, 427, 431, 433], "2965": 407, "2966": 407, "2967": 407, "297": [428, 448], "2971e": 456, "2974": 407, "2976": 407, "298": [427, 435, 442, 456, 539], "2981": 407, "2984": 407, "298536": 514, "29882214027996945": 465, "299": [414, 435, 456], "2990": 407, "2991": 407, "2992": 407, "2993": 407, "2995484265169": 449, "2996": 479, "2998": 407, "2999": [407, 456], "299940468335294": 442, "299995937905366": 442, "299e": 456, "299t": 53, "29t20": 451, "29th": 397, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 132, 133, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 163, 173, 174, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 200, 220, 365, 370, 375, 378, 379, 380, 391, 399, 405, 418, 419, 420, 427, 436, 438, 439, 442, 461, 462, 479, 489, 492, 503, 504, 505, 517], "2degx2deg": 444, "2e": [188, 428, 429, 430, 444, 445, 451, 456, 458, 463], "2e3": 461, "2e6": 469, "2f": [348, 428, 433, 465, 478, 555], "2fhl": [58, 69, 404, 416, 417, 456, 479, 488], "2hwc": [59, 70, 404, 410, 418, 456, 488], "2k": [97, 104], "2m": [230, 264], "2nd": 384, "2pc": 67, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 62, 65, 76, 79, 81, 82, 83, 86, 89, 91, 97, 99, 100, 104, 105, 106, 110, 112, 118, 119, 133, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 166, 169, 183, 184, 186, 189, 192, 194, 195, 196, 202, 204, 213, 220, 223, 231, 253, 259, 261, 263, 264, 272, 273, 278, 286, 287, 308, 317, 336, 347, 352, 354, 356, 359, 360, 362, 363, 365, 370, 371, 373, 374, 375, 376, 378, 383, 384, 385, 390, 395, 396, 398, 399, 400, 402, 403, 408, 410, 412, 415, 416, 417, 418, 419, 420, 421, 423, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 480, 481, 483, 486, 487, 490, 491, 495, 497, 499, 500, 502, 503, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 552, 554, 555], "30": [24, 52, 65, 79, 91, 97, 107, 132, 143, 182, 286, 287, 366, 367, 372, 379, 386, 397, 399, 428, 429, 432, 433, 436, 437, 442, 445, 448, 451, 452, 453, 456, 457, 458, 461, 463, 464, 465, 466, 468, 469, 479, 491, 497, 502, 503, 510, 511, 525, 528, 529, 530, 533], "300": [71, 83, 86, 435, 437, 441, 444, 445, 448, 452, 456, 469], "3000": [369, 456], "30000": 456, "3000000": 538, "30000000": 538, "3000020211954284": 442, "3001": 407, "30015e": 428, "3002": 407, "3003": 463, "300451666228708": 477, "3004625872247901": 441, "3005": 407, "3006": 479, "3006942": 92, "3007": 407, "301": [414, 435], "3011061699260256": 465, "3012": 407, "3013": 456, "301668796295": 456, "302": [435, 441, 452], "3020791585772495": 286, "30287": 436, "3028e": 463, "302e": 456, "303": [432, 435, 456], "3030": 407, "3032": 407, "3034": 456, "3035": 407, "3035897658854436": 443, "3037": 407, "3037632e": 459, "3038": [407, 479], "3039": 407, "304": [435, 449, 451, 452, 456, 465, 479, 519], "3041": 407, "3042": 407, "3043": 463, "3045": 407, "3046875": [457, 463], "3049664466089965": 287, "305": [65, 435], "3051": 407, "3051827": 92, "3051852": 92, "3051856": 92, "3052": 407, "3053": 407, "30535345877453707": 465, "3054": 407, "30561": 133, "3058": 407, "3058422e": 459, "305e": 456, "306": [414, 454, 554], "3060": 407, "306196370000000": 479, "3063": 407, "3069": 407, "306e": 456, "307": 435, "3070": 407, "307017": 464, "3071": 456, "3072": 407, "3074": 407, "3075": 383, "3076": 407, "307e": 456, "308": [427, 435, 442, 467, 513], "3080": 407, "3081": 407, "3083": 407, "3085": 407, "3086": 407, "308631": 534, "3088": 407, "3089": 407, "3091": 407, "309158": 541, "3092": 407, "30997": 479, "30a": 264, "30d00m00": 386, "30e": [438, 459, 463], "30th": 371, "31": [132, 133, 368, 369, 382, 383, 395, 422, 430, 432, 435, 436, 440, 443, 446, 451, 452, 456, 457, 460, 461, 463, 466, 470, 477, 479, 509, 510], "310": 433, "3100": 407, "3106": 407, "31067517": 456, "3107": [456, 479], "311": [432, 513, 555], "3110": 408, "3111": 408, "3112": 408, "3113": 408, "31139074e": 458, "3114": 408, "311489174710791e": 479, "3116": 408, "3117988e": 459, "31186857659616535": 465, "3119611261122878": 465, "312": 414, "3122": 409, "3123": 409, "3124": 409, "3125": 409, "3126": 409, "3127": 409, "3129": 409, "312e": 436, "313": 435, "3130": 409, "3131": [410, 463], "3135914081482271": 465, "3136": 410, "313714614138": 457, "3138": 410, "314": [419, 452], "3140": 410, "3141": 410, "3145": 410, "3148": 410, "315": 456, "3152": 410, "3153": 410, "3155": 410, "3158": 410, "316": [435, 469, 470], "3162": 410, "316227": 456, "316227766016838": 460, "3165": 410, "3168": 410, "3169": 410, "317": [414, 435, 452], "3173": 410, "3178": 410, "317a": 264, "317e": 456, "318": [414, 432], "3180": 410, "3182": 410, "31834": 133, "3185": 410, "319": [415, 469], "3191": 410, "3195": 479, "3197": 410, "319725": 468, "3199": 410, "32": [79, 132, 182, 436, 438, 440, 457, 460, 461, 479, 511, 512, 513], "320": [97, 100, 104, 105, 116, 456, 457, 463, 491], "3202": 410, "3207": 410, "3208": 410, "32095": 479, "321": 446, "3211": 410, "3216": 410, "3217": 410, "3219": 410, "322": 435, "3222": 410, "3228": 410, "323": [433, 435, 442], "3230": 410, "3232943": 327, "3233356": 327, "32377509405904137": 91, "323779": 278, "3237948931463171": 465, "3238": 410, "3241": 410, "3243": 410, "324424288934": 457, "3246": 410, "32465247": 464, "3254": 410, "3257": 410, "3258": 410, "326": 414, "3262": 410, "32684": 479, "32684833": 468, "327": 442, "3272": 410, "3276": 410, "3277": 410, "3278": 410, "3279": 410, "3279955e": 459, "328": 442, "3281": 410, "3283": 410, "3284": 410, "32843": 479, "32847": 428, "3285": 410, "329": [91, 286, 287, 451, 456, 465, 493], "3293": 410, "3299": 456, "329e": [432, 456], "33": [433, 449, 455, 457, 458, 461, 479, 493, 514, 515], "330": [415, 435, 463], "3301": 410, "33013e": 428, "3302": 410, "3302565e": 459, "3303": 410, "330376": 65, "3304": 410, "3305": 410, "330505": 468, "33055e": 428, "3306": 410, "3307": 410, "3308": 410, "3309": 410, "3310": 410, "3314": 410, "33164865722698683": 465, "3319": 410, "3319831545301117": 286, "332": [65, 415], "3320": 410, "3323": [410, 457], "332525": 456, "3328": 410, "332e": 442, "332f": [30, 31, 32, 33], "3330487": 92, "3331": 479, "3331761": 92, "3333": 410, "33333333": 359, "3333333333333344": 446, "3335": 410, "33368e": 428, "3337": 410, "3338": 410, "334": [119, 469], "3342": 410, "3343": 410, "3346": 410, "3347": 410, "33484": 428, "3349": 410, "334e": 456, "335": 415, "3353": 410, "3357": 410, "3358": 410, "335e": 430, "336": [446, 456], "3363": 410, "3364130e": 459, "336444e": 456, "336606": 428, "3368855e": 459, "3369": 410, "337": [415, 435], "3374": 410, "3377": 410, "33787": [91, 465], "33788": [91, 465], "33789": [91, 465], "3379": 410, "33790": 465, "33791": 465, "33792": 465, "33793": 465, "33794": 465, "33795": 465, "33796": 465, "33797": 465, "33798": 465, "33799": 465, "338": [415, 456], "33800": 465, "33800122": 92, "33801": 465, "3380311e": 459, "3381": 410, "339": [415, 427, 446, 518], "3390": 410, "3392": 410, "3393": 410, "3395": 410, "3396e": 440, "3397": 410, "339835555384604": 465, "3398360": 459, "33983991887701287": 91, "3399": 410, "33e": 453, "34": [52, 53, 65, 398, 428, 432, 433, 442, 457, 461, 463, 479, 516, 517], "34005": 428, "3402": 410, "3403": 410, "340391": 479, "3404": 410, "34047": 428, "3406": 410, "3409": [89, 410], "341": 428, "3413": 410, "3416": 410, "3418": 410, "342": 415, "3420": 410, "3423": 410, "3426": 410, "3428": 410, "3434": 410, "3438": 410, "3439": 410, "343e": 430, "344": 456, "344238": 479, "3443842": 468, "3445": 410, "3446": 410, "3447": 410, "3449": 410, "344e": 65, "345": [279, 428, 463], "3453": 410, "3454": 410, "345692": 479, "3458": 410, "346": 463, "34613004113985": 443, "346488e": 456, "3466": 410, "3468": 410, "347": [415, 429], "3471": 410, "3474": 410, "347e": 436, "348": [36, 37, 415, 427, 432, 539], "3480": 410, "3481e": 440, "3485e": 478, "3488": 410, "348e": [65, 456], "3491": 410, "3493": 132, "349530550405035": 458, "349530725254468": 458, "34953073943366": 458, "34953075819191": 458, "34953077463306": 458, "34953079334042": 458, "349530807529028": 458, "349535814693404": 458, "349536723056637": 458, "349537158300407": 458, "349537804239922": 458, "34953807814367": 458, "34953910575007": 458, "34953932636892": 458, "349542158419318": 458, "349559366703698": 458, "34971209244579": 458, "349724940685938": 458, "3499075e": 459, "34e": [456, 463], "35": [65, 376, 383, 395, 427, 433, 439, 451, 452, 454, 456, 458, 466, 468, 519], "350": [446, 453], "3501": 436, "350105": 442, "3502": 456, "35030398537787": 458, "3503706026275275": 465, "3504": 479, "35052105086856": 458, "350556388466543": 458, "350d": 446, "351": [415, 456, 479], "3515": 410, "352": [415, 427, 456, 539], "3521": 429, "3523": 410, "3529": 410, "3529411764705888": 446, "353": [24, 415, 427, 479, 539], "3535": 412, "3536": 428, "353e": 442, "354": 446, "3544": 410, "355": [427, 539], "35569283": 459, "355804": 479, "3559": 410, "356": 479, "3561": 410, "356263170943497e": 477, "3568": 410, "357": [456, 479], "3570e": 437, "35722435185": 456, "3576e": 429, "357e": 436, "358": [442, 456, 479], "3584": 410, "3585": 442, "359": [415, 427, 442, 451, 454, 456, 479], "3590188e": 459, "3592": 410, "3599": 444, "359e": 479, "36": [65, 82, 138, 306, 442, 444, 452, 456, 457, 459, 479, 520, 521], "360": [373, 461, 481], "3600": [435, 444, 445, 461], "36014": 440, "36073833513766157": 465, "361": [65, 415], "3619e": 478, "36228879": 479, "36273": 479, "363472509034498": 465, "3639946": 453, "364": [415, 432], "3659253e": 459, "366": 478, "36669663417038234": 465, "3669": 412, "367": [415, 446, 463], "3674884": 456, "368": 112, "36834038301420274": 465, "368346217294295": 91, "3684": 412, "3689322e": 459, "369": 415, "3690": 479, "3699": 412, "36e": [455, 456], "37": [428, 433, 435, 458, 469, 522, 523, 555], "370": [446, 456, 463], "37058": 133, "371": [415, 433], "3710784e": 459, "3712": 412, "3713": 412, "3715810e": 459, "3718745": 92, "372": [35, 119, 479], "3720": 412, "3722": 412, "3725490196078436": 446, "3728": 412, "373": [427, 432, 442, 518], "3733": 412, "3739292e": 459, "374": [444, 446], "3740": 412, "37455141": 479, "3748": 412, "375": [415, 427, 438, 439, 461], "3750": 442, "37506": 479, "37517": 436, "3752": 412, "3759377929871826": 465, "376": [65, 431], "3760": 412, "3761": 412, "3765": 428, "377": [427, 467], "3777": 412, "37773": 436, "3779": 479, "3783": 412, "3784": 132, "379": 415, "3792": 463, "3796": 412, "3797": 412, "38": [22, 65, 428, 429, 456, 461, 463, 479, 524, 525, 538], "3802": 412, "3804": 412, "3806": 412, "381": [432, 463], "3810": 412, "3812": [456, 479], "3812120e": 459, "3812160e": 459, "38143003": 92, "3817": 412, "3829": 479, "382e": 432, "383": [65, 415, 456, 461], "3833": 412, "3837": 412, "383e": 65, "3842": 412, "3846": 412, "3848912826152664e": 479, "384e": 452, "3856": 412, "385e": 133, "3860": 412, "3862": 421, "387": [415, 479], "3872": 456, "3873": 412, "3874": 412, "3876": 412, "387834": 479, "388": 517, "388405": 479, "3885947175689592": 465, "3886270e": 459, "3887": 412, "389": 364, "3892": 412, "3895": 412, "3898": 412, "389e": 479, "39": [17, 18, 21, 22, 24, 25, 27, 59, 452, 455, 456, 461, 469, 517, 526, 527, 528, 538], "390": 410, "3904": 412, "39042": 82, "3905": 412, "3906": 412, "391": 456, "3915": 412, "39151": 438, "3918": 412, "3919677734375": 432, "392": [415, 433], "392156862745098": 446, "39224": 436, "3925": 421, "393": [197, 198], "3933": 412, "3935": 429, "3936": 412, "394": [415, 432], "3941": 412, "3945": [429, 456], "3947637541758": 452, "3948": 413, "395": 415, "3950": [384, 421], "395004": 479, "3956": 421, "3959": 413, "396": [415, 427, 436, 439], "3962942e": 459, "3966": 413, "3970": 385, "39728": 479, "3975": 413, "3979": [413, 553], "397918129147546": [395, 553], "39791813": [395, 553], "398": [415, 440], "3981": 479, "3981075200000000": 479, "3983": 413, "3986": 413, "3987": 413, "3988": 413, "398e": 456, "399": [427, 467], "3990": 413, "399106": 522, "39e": 456, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 138, 144, 151, 152, 154, 163, 267, 269, 365, 368, 369, 370, 374, 375, 378, 379, 380, 391, 399, 400, 401, 403, 404, 405, 406, 417, 418, 419, 427, 428, 430, 432, 433, 436, 437, 438, 442, 443, 444, 445, 446, 447, 451, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 477, 478, 489, 491, 492, 493, 498, 500, 501, 505, 550, 552], "3d33m15": 65, "3dataset": 441, "3e": [20, 119, 125, 442, 445, 448, 450, 453, 456, 463], "3e4": 469, "3e5": 469, "3e6": 538, "3e7": 538, "3f": [119, 443, 554, 555], "3fgl": [60, 65, 71, 215, 252, 382, 411, 414, 416, 417, 418, 427, 430, 456, 464, 479, 488, 507, 539], "3fgl_name": 69, "3fhl": [61, 72, 82, 121, 123, 127, 270, 379, 417, 418, 430, 436, 444, 446, 456, 461, 462, 463, 464, 469, 479, 488, 490], "3fhl_data_fermi": 441, "3fhl_dataset": [270, 441, 462], "3fhl_model": [270, 441, 463], "3g": [455, 456], "3hwc": [62, 73, 410, 421, 456, 488], "3ml": [377, 469], "3pc": 67, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 60, 65, 79, 83, 86, 96, 97, 100, 104, 105, 109, 111, 122, 127, 133, 135, 140, 143, 151, 163, 166, 182, 183, 184, 186, 192, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 225, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 263, 270, 271, 306, 346, 359, 360, 362, 363, 371, 373, 376, 379, 383, 384, 395, 398, 407, 409, 410, 411, 414, 416, 417, 420, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 477, 478, 479, 481, 486, 487, 488, 502, 505, 506, 510, 511, 514, 519, 524, 537, 538, 546, 552, 553, 554, 555, 556], "40": [59, 104, 105, 366, 411, 427, 429, 430, 432, 433, 440, 442, 447, 451, 452, 461, 464, 468, 479, 502, 525, 528, 529, 533, 554], "400": [127, 437, 442, 446, 456, 461, 479, 547], "4000": 421, "40000": [163, 478], "400023002295445": 477, "400056": 428, "40050506591797": 456, "40051": 438, "40051035": 456, "40071076": 92, "400x200": 446, "401": 433, "40112": 479, "4013": 421, "4014": 421, "4015": 421, "4017": 421, "4018": 421, "402": [143, 427, 433, 447, 448], "4022": 421, "40235": 440, "4024": 421, "4025": 421, "4026": 421, "402712": 456, "403": [415, 442, 463], "4035": 479, "4037": 421, "4043": 421, "4044": 421, "40481": 440, "405": 367, "4051": 421, "40525": 440, "4054": 421, "4058": 421, "405872": 520, "406": 479, "40611": 479, "4067": 421, "407": 456, "4071": 421, "4073": 421, "4073799600000000": 479, "4075": 421, "4076": 421, "4079": 421, "408": [432, 461], "4080": 421, "4080942e": 459, "40822469e": 464, "4083": 421, "4084": 421, "4088": 421, "4089": 421, "409": 432, "40919": 436, "4093": 421, "409416": 479, "4095": 421, "4098": 421, "40a": 59, "41": [65, 82, 89, 373, 456, 457, 461, 469, 479, 530, 531], "410": 446, "41009347393684": 457, "4103": 421, "4105": 421, "4106": 421, "4107": 421, "4108": 421, "411": 479, "4110e": 456, "4112": [119, 421], "4113": 421, "4115": 421, "41176470588239": 446, "4119": 421, "411e": 430, "4120719e": 459, "412165": 442, "412779907405": 456, "413": 442, "414": [415, 440], "41405230487": 443, "41415047": 92, "4142135623730951": 112, "41449": 436, "4144e": 440, "415": [415, 529], "4155": [456, 479], "41584196": 449, "416": [65, 456, 460], "417": 456, "418007850646973": 395, "41866": 469, "419": 463, "4191": 424, "41924": 132, "4198250e": 459, "41995": 436, "419e": 456, "41e19": [19, 20], "42": [25, 27, 89, 143, 327, 373, 435, 442, 456, 459, 460, 461, 465, 468, 506, 509, 532, 533], "420": 432, "42050348": 457, "4208": 424, "4209": 424, "421": [415, 446, 479, 552], "4210": 424, "4212": 424, "4212028e": 459, "4213": 424, "4215": 424, "4216": 424, "4217": 425, "4219": 424, "422": [39, 40], "4220": 440, "4221": 422, "4225498e": 459, "4225631e": 459, "42267": 442, "4226731": 442, "423": 539, "4231": [422, 424], "4236": 436, "42361": 436, "42399798": 442, "423e": 119, "42400": 442, "4242": 424, "4243": 424, "4245": 424, "42463": 469, "424649": 457, "42474": 479, "424e": 436, "425": 479, "4252": 424, "426": 456, "4264": 424, "4268": 422, "427": 433, "4275": [422, 424], "4277": 424, "4280": 424, "4281": 456, "4282": 424, "4288": 424, "429": 432, "4294": 424, "42e": [458, 463], "43": [263, 327, 373, 432, 433, 442, 452, 457, 461, 479, 506, 534, 535], "430": 456, "43000": [52, 53], "4301": [422, 424], "4303606e": 459, "4305": 424, "431": [128, 367, 446, 457], "43113": 428, "43137254901962": 446, "4313847458879893": 465, "4319": 479, "43197": 436, "4324": [422, 424], "4326": 424, "432878": 456, "432e": 456, "433": 436, "4336": [422, 424], "43366": 547, "434": [432, 456], "43416595": 453, "4344": 422, "4346": 424, "435": [415, 427, 539], "4350": 424, "4351637481047363": 465, "4352": 424, "4359": [422, 424], "435l": 456, "436": [415, 432], "4360750e": 459, "4369": 424, "437": [456, 463], "4370": 424, "4373240195300975": 465, "438": 463, "4380": [423, 424], "4381": [387, 425], "4382": 423, "439": 432, "4393": [423, 424], "439306769641669e": 477, "4394": 423, "4395": 424, "4397": [423, 424], "439e": 456, "43e": 463, "44": [21, 50, 82, 327, 435, 451, 453, 461, 536, 537], "4402": 424, "44055555555555603": 89, "4406": 424, "4408": 425, "4409": 424, "4412": [423, 424], "4417": 424, "4418": 424, "4420073e": 459, "4420222e": 459, "4428": 424, "4428634e": 459, "442e": 436, "4430": 424, "44318": 457, "4432": 425, "4435": [423, 424], "4444": 424, "445": 436, "4450": 479, "44528685": 479, "4453": [423, 424], "44573": 89, "4458": 424, "4459": 424, "446": [463, 555], "4466": [424, 440], "4466832000000000": 479, "447": 415, "44742": 479, "44749e": 428, "447552": 428, "447e": [442, 456], "447l": 17, "448": [427, 446, 457, 467], "4480056e": 459, "44802852": 479, "4481": 456, "4485": 425, "4486": [423, 424], "448e": [133, 441], "449": 469, "4491": [386, 425], "4495": 424, "4498": 132, "44e": 395, "45": [51, 54, 432, 435, 441, 453, 457, 461, 462, 464, 481, 506, 511, 512, 538, 540], "450": [433, 463], "4500": [423, 424], "4501": 425, "4504": 424, "4506": 424, "4508": 424, "4509803921569": 446, "451": 432, "4510": [424, 440, 479], "4515": 455, "4517490659800822": 450, "452": [427, 447], "4520": 423, "4521": 424, "4524": 423, "453": 463, "454": 432, "4540": 425, "4545": 424, "4546": 425, "455": [415, 430], "45515263080596924": 429, "4558750": 442, "455e": 65, "456": 415, "4561": 425, "45646095": 453, "4567": 425, "457": [264, 415, 463], "457251": 479, "4574": [423, 425], "4575": 89, "4578": 423, "4579e": 428, "458": [446, 456], "4584": 425, "45856": 479, "4586649826004114": 286, "459": [415, 457, 463], "4593": 423, "45935": 479, "4595": 425, "4599": 425, "45\u00ba": 470, "46": [53, 65, 104, 105, 373, 456, 461, 469, 541, 542, 543], "460249999": 82, "4608": 425, "461": 415, "4615": 425, "4618695378303528": 429, "4619": 423, "462": [415, 432], "4620": [387, 425], "4620e": 456, "46225": 436, "4628": 425, "463": 479, "4631": 423, "4635": 425, "4638": 425, "464": 448, "4642048e": 459, "4647544e": 459, "465": [456, 463], "465099": 527, "4653": 423, "4657": [423, 425], "465784": 479, "4660": 425, "4664": 425, "4668": 425, "4669": 425, "4671": 425, "46711": 436, "4677": [423, 425], "468": [453, 456], "4681": 423, "4684": 429, "468805426856864e": 52, "468e": 65, "4697": 425, "46e": [79, 437, 442], "47": [65, 452, 456, 461, 479, 544, 545, 546], "4702e": 434, "4703": 425, "470588235294144": 446, "4711": 479, "4714": 425, "4721": 423, "4726": 425, "4728": 423, "4729": 425, "473": 415, "4732": 436, "4738": 425, "474": 415, "4740": 425, "4741": 425, "474e": 456, "475": [415, 463], "4750": 425, "4753": [423, 425], "475468": 428, "4755": 423, "4759": 425, "4770": 425, "4772": 423, "47797": 436, "477e": 456, "478": 415, "47802": 465, "47803": 465, "47804": 465, "47827": 465, "47828": 465, "47829": [78, 465, 471], "4783": 425, "4785": 425, "47e": 456, "47jvmo3z": 464, "48": [33, 163, 398, 431, 440, 441, 461, 463, 469, 547, 548], "480": [429, 456, 463], "4802": 425, "4805": 425, "480554966147": 440, "48068": 436, "4808": 425, "480e": 456, "481": [364, 415], "4810": 425, "4814": [425, 479], "4817": 425, "4819444e": 459, "482": 428, "48215685": 92, "4822": 425, "48248": 456, "4825": [456, 479], "4828": 425, "4829": 425, "483": 432, "4834": 425, "4834488e": 459, "4835": 425, "4837": 425, "484": 415, "48442": 259, "4845": 425, "4847": 425, "4848653": 456, "4849": [425, 456, 479], "484e": 133, "485": 415, "4850": 425, "4851": 425, "4854": 425, "485p": [36, 37], "48602294921875": 429, "487": [415, 477], "4875723e": 459, "4876": 423, "4879": 425, "4881": [239, 240], "4886": 425, "48871": 428, "4888969467051004e": 477, "488z": 27, "489e": 456, "48e": [456, 463, 478], "49": [53, 436, 440, 456, 463, 469, 477, 505], "490": 25, "4902": 425, "4904": 425, "4904078e": 459, "49078e": 428, "491": 432, "4913": 423, "49152": 469, "4917": 425, "493": [25, 427, 432, 458, 467], "4930435940405": 440, "4933657e": 459, "4936": [423, 425], "4937": [423, 425], "4940": 425, "49417615": 82, "4942": 425, "49447596": 438, "4958277": 92, "496021": 468, "4963": 479, "4966": 479, "4968236e": 459, "497": 432, "4970": 425, "4971": 425, "4971704e": 459, "4973": 425, "4975": 425, "4978": 425, "498": 479, "498784": 456, "4989": 425, "498e": [456, 479], "499": [65, 456], "49919925926": [225, 548], "4992": 425, "4994": 425, "49972277488662115": 465, "4999833830074": 442, "4d": 378, "4e": [453, 456, 463, 538], "4f": [553, 554, 555], "4fgl": [63, 74, 253, 254, 382, 402, 404, 410, 412, 425, 427, 441, 456, 462, 464, 488, 507, 539], "4th": [371, 397], "4yr_catalog": 60, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 65, 79, 83, 86, 97, 98, 100, 103, 104, 105, 112, 116, 119, 120, 122, 124, 126, 132, 133, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 163, 166, 183, 184, 186, 188, 192, 194, 195, 196, 205, 206, 209, 212, 213, 215, 216, 217, 220, 221, 223, 225, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 264, 288, 320, 349, 350, 354, 356, 359, 360, 363, 364, 366, 370, 371, 373, 374, 375, 376, 378, 382, 383, 384, 390, 395, 398, 400, 402, 403, 410, 412, 414, 415, 417, 418, 419, 423, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 481, 486, 487, 490, 497, 500, 502, 503, 504, 505, 506, 510, 511, 512, 513, 515, 519, 520, 525, 527, 528, 529, 533, 534, 541, 542, 543, 544, 546, 552, 554, 555], "50": [83, 86, 89, 106, 110, 327, 366, 386, 428, 433, 434, 440, 448, 451, 452, 453, 456, 457, 459, 461, 463, 464, 465, 468, 469, 471, 477, 478, 479, 502, 505, 513, 555], "500": [183, 184, 186, 192, 195, 196, 436, 442, 444, 445, 461, 468, 469, 479, 510], "5000": [19, 20, 83, 86, 481], "5000056568267741": 442, "5000e": 435, "50022222": 89, "500249": 456, "5004": 442, "501": [427, 480], "501475": 517, "5015": 425, "502": 415, "5029747": 434, "503": 415, "5030": 479, "504": 28, "5040": 425, "5044": 425, "5049": 479, "505": [65, 456, 457], "505523195905": 440, "506": 415, "5066": 456, "507": 415, "5074834": 92, "5078068": 92, "50807568877": 456, "509": 433, "509e": 456, "50e": [435, 463], "51": [52, 53, 65, 432, 440, 446, 452, 477], "510": 415, "5106": 479, "51095676": 453, "511": [65, 415], "51179": [360, 557], "512": 432, "5126": 65, "513": [395, 461], "51312": 442, "5144": [89, 428], "514854": 468, "51544": [435, 444, 445, 448], "5162628e": 459, "518": [415, 463], "5188338e": 459, "51910": 89, "5192420e": 459, "5194769e": 459, "51948705e": 464, "52": [53, 119, 163, 428, 429, 436, 438, 440, 452, 456, 468, 471, 479], "5205": 469, "52074074074": 79, "521": 416, "523": [416, 461], "5230376e": 459, "52318414": 92, "5237647004325865": 465, "52389101852": 456, "523a": [230, 264], "523b": 22, "524": [416, 456, 463], "5248": 479, "524807800000000": 479, "52587": 436, "526": 416, "52607": 479, "527": [416, 469], "528": 463, "52826166": 456, "5283": [456, 479], "52839183495354": 452, "528817": 548, "529": 416, "5292": 457, "529411764705883": 446, "5297030e": 459, "52e": [453, 477], "53": [28, 442, 466, 510, 519], "530": 416, "53025": 89, "531": [416, 446], "531273": 512, "53213": 442, "5324402": 92, "5326744": 92, "5326841": 92, "5326859": 92, "533": 456, "53343": [395, 450], "53344": 450, "53345": 450, "53346": 450, "53347": 450, "53348": 450, "5345275e": 459, "53482e": 428, "535": [416, 432, 456], "535058216604496": 264, "53566": 428, "536": 432, "53616": 230, "539": [264, 463], "5390438": 92, "539397": 456, "53945": 451, "53946": 449, "539e": 456, "53e": [395, 435], "54": [65, 432, 456, 459], "5400": 457, "5407363826067": 490, "5407363826070": 490, "541": 416, "5411": 428, "5427520e": 459, "54282": 436, "5438860e": 459, "544": [416, 456, 469], "545": [416, 432], "54566271": 554, "545y": [39, 40], "546": 416, "5461745": 92, "54676837e": 458, "54682": [436, 456, 469, 479], "547": [416, 428, 456], "54721e": 428, "5477": 456, "54772": 456, "54892": 436, "548e": 456, "549": 416, "549019607843138": 446, "54e": 463, "55": [39, 42, 83, 86, 452, 453, 458, 462, 466], "550": 432, "55026401977972e": 477, "55027": 133, "55045": 456, "551": [456, 517], "55197": [360, 557], "552": 456, "55275": 469, "553": 456, "553337": 479, "5538": 479, "5538942e": 459, "554": 65, "55410": 456, "5545130e": 459, "554e": 430, "556": [416, 432, 555], "5561760e": 459, "5563052715230388": 477, "557": [416, 463], "55775": 456, "558": 416, "559": 416, "5594": 79, "56": [428, 453, 461, 470], "560": [37, 456], "5606985": 453, "5607778e": 459, "56093766": 92, "561": [427, 480], "56141": 456, "561529": 448, "562": 456, "5622482": 92, "56353481": 554, "56393115380234": 443, "563e": [432, 442], "564": [278, 416, 432, 463], "56413952067279": 443, "5644": 457, "565": 416, "56506": 456, "565095": 428, "566e": 432, "56711": 479, "5686274509803928": 446, "56871": 456, "569": 416, "56922612": 554, "5692809e": 459, "56973": 479, "57": [33, 432, 436, 438, 442, 453, 461, 477], "57011": 442, "571": 456, "57185": 490, "5719922e": 459, "571e": 456, "572": 433, "57233": 479, "57236": [436, 456, 469, 479], "572e": 430, "573": [65, 427, 432, 446, 447, 479], "57300957": 166, "5754970e": 459, "576": 463, "5760": 479, "57602": 456, "5763635e": 459, "576426": 545, "5768262e": 459, "576933965836": 544, "57693713308": 545, "57694189796": 546, "577398": 469, "5779092e": 459, "578": [456, 554], "579": 456, "57944657408": 456, "57967": 456, "57e": 456, "58": [395, 398, 435, 440, 443, 456, 460, 461, 463, 471, 477], "580": 555, "581": 433, "5819e": 434, "582": 416, "58332": 456, "5833e": 456, "5835918e": 459, "5842497e": 459, "585": 456, "58540702": 92, "5867488e": 459, "58693695": 453, "58698": 456, "586e": [436, 452], "5882352941176467": 446, "588e": 456, "58909": 452, "58926": 436, "5892966e": 459, "5895": 429, "58999": 225, "58e": [448, 456], "59": [79, 438, 448, 456, 460, 471, 479], "590": 432, "59000": [225, 548], "59001": 225, "59063": 456, "5908": 456, "590835686434463": 465, "591": [416, 456], "59100": [547, 548], "59123": [541, 542, 543], "5915030546513255": 449, "5915e": [456, 478], "59200": 547, "59233": 464, "59235": [79, 468], "59240": 464, "59250": 464, "59254e": 428, "59265": 428, "593": 416, "59300": 453, "59344": 479, "59348": 479, "59365": 548, "594": [416, 432], "59400008": 92, "59428": 456, "59451": 436, "5951631e": 459, "596": 463, "59696": 436, "596e": 456, "597": [427, 469], "597774": 459, "59793": 456, "598": 479, "5985": 479, "5987726": 92, "599": [416, 427, 444, 446, 447, 451, 463], "599625": 468, "59976": 456, "599999904632568": 456, "599e": 436, "59d09m41": 456, "59e": [456, 463, 469], "5a": 58, "5e": [435, 445, 456, 463], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 65, 82, 83, 86, 95, 97, 104, 106, 110, 119, 124, 133, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 225, 264, 347, 350, 363, 366, 371, 375, 376, 379, 384, 392, 395, 408, 410, 412, 418, 419, 423, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 481, 485, 502, 506, 512, 516, 536, 552, 554], "60": [65, 86, 145, 423, 433, 436, 456, 458, 469], "600": [433, 436, 441], "6000000000000001": 464, "6002e": 478, "600661": 459, "60075": 459, "600902": 542, "60090769e": 464, "600e": 432, "6018166e": 459, "601e": 456, "602": 432, "603": [463, 479], "6033": 428, "60350": 430, "603625": 459, "604": 432, "60432": [544, 545, 546], "6046689e": 459, "60603928": 464, "607843137254942": 446, "609": [427, 455, 467], "609e": 436, "60e": 456, "61": [65, 405, 433, 448, 452, 456, 463, 555], "610": 463, "61051": 469, "6105760e": 459, "611": [427, 436, 467, 554], "6116853": 456, "611e": 456, "6125": 471, "612a": 120, "613114": 449, "61422433": 92, "61489": 459, "614e": 436, "615316": 479, "617": 433, "617835": 459, "6181862e": 459, "61862": 225, "619": 456, "6194453e": 459, "619794257232": 477, "62": [432, 438, 456, 470, 478], "620": 456, "620398": 459, "6205": 479, "62111": 436, "621499": 479, "6218742e": 459, "6219": 430, "622": [416, 430], "62258": 456, "6227766": 461, "62277660168379": 461, "622898": 529, "6228e": 430, "623": [456, 479], "62320": 430, "623397": 459, "62341325": 461, "623413251903492": 461, "624": 463, "624122": 442, "624d": 24, "62503": 456, "62514628": 459, "6253652e": 459, "6259962e": 459, "626": [427, 431], "6266": 479, "6267247": 479, "627152": 531, "627450980392158": 446, "628": 416, "62842028": 457, "63": [428, 432, 434, 457, 460, 470, 471, 477, 478, 500, 502, 503, 506], "630": [78, 463, 471, 477], "6309576500000000": 479, "630e": 65, "631": [416, 440], "631155605": 444, "631159205": 444, "631170005": 444, "631173605": 444, "631177205": 444, "631180805": 444, "6318811e": 459, "632": [427, 452, 454], "632325": 510, "632627": 479, "633": [81, 97, 100, 104, 105, 163, 433, 441, 460, 477, 478, 502], "63307": 79, "63308": [450, 478], "633083": 462, "63310241699219": 441, "63326": 436, "6333": 89, "63342": 479, "633600": 463, "635": 416, "63500212963": 456, "6354": 479, "63541": 468, "636688324856333": 452, "638": 463, "639": 456, "6390": 428, "63902": 428, "6397": 479, "63e": 457, "64": [39, 65, 79, 119, 182, 398, 456, 469], "640": 416, "6402822e": 459, "641": [416, 479], "64103": 468, "6413": 442, "641635917844372": 443, "6417": 442, "6419578e": 459, "642": 479, "6429005895278312": 465, "643": [30, 31, 32, 33], "64323": 436, "64438": 469, "6444": 428, "645": 457, "6451": 442, "6464": 428, "647": 416, "647058823529452": 446, "6471115e": 459, "64794383e": 464, "648": 416, "648640": 525, "648e": 65, "649": 416, "64987376": 92, "64e": 433, "65": [62, 383, 398, 400, 441, 457, 469], "650": 457, "6509": 428, "651": 456, "651058": 479, "6514": 479, "652": 441, "6522806": 479, "652368617859867": 441, "653": [416, 429], "65357608e": 459, "653e": 436, "654": [428, 456], "65412": 442, "654e": 456, "655": 436, "655283": 436, "6554088e": 459, "6556": 436, "6556248e": 459, "655e": 65, "656": 554, "65603222222": 469, "65603794185": 456, "6577182894355391": 465, "658": 463, "658909145253801e": 479, "6589622747787678": 465, "659": [432, 436], "659752": 537, "65e": 112, "66": [52, 53, 398, 401, 435, 448, 457, 458, 463, 466], "660": 416, "6604475": 442, "660e": 479, "660fals": 430, "661": 416, "66104": 428, "662": 456, "6623e": 440, "663": 554, "663742400000000": 479, "664502403": 468, "664502405": 468, "664502408": 468, "664502409": 468, "664502414": 468, "665": [427, 549], "6652219e": 459, "6654036168695552": 443, "6659": 436, "66650390625": 429, "6666666666583865": 451, "6666666666666666": 543, "666666666666696": 446, "667": [427, 466, 467], "66813": 442, "669": 433, "66984341": 459, "669e": 133, "66e": [440, 457], "67": [17, 398, 456, 479], "670": [427, 456, 474], "6705024680435898": 286, "671616": 428, "672": [427, 454], "6728": [456, 479], "673": [444, 471, 541], "67304": 92, "67375": 428, "67457342435522e": 479, "676836990188792": 433, "6768e": 433, "677": 416, "6772235e": 459, "67759236e": 459, "678": [82, 443], "67824": 457, "6784": 554, "6786": 452, "67861": 459, "678684049503813e": 433, "679": 416, "679478012854058e": 433, "6795e": 433, "67992517": 92, "67e21": 455, "68": [65, 79, 91, 144, 150, 152, 153, 154, 156, 220, 398, 428, 456, 458, 459, 461, 468, 479, 555], "680": [433, 463], "6803": 479, "6812310184489": 452, "68125": 459, "682229": 515, "6823": 428, "683": 432, "684": 163, "68542112": 92, "686": 433, "68628538586": 457, "687": 463, "687214": 460, "687500": 460, "687685": 456, "689": 432, "68e": [440, 456], "69": [97, 425, 436, 456, 457], "690": 65, "690311850083152": 443, "690557685186": 456, "6909290e": 459, "691": 456, "69138": 436, "691450249714805": 452, "691680": [97, 457, 463], "692": 436, "69314486": 462, "693940": 440, "694": 433, "6953125": 457, "69543812": 92, "6959369197218669": 465, "697317": 469, "69735": 459, "697e": 430, "697fals": 430, "6985": 429, "6992": 442, "69950035435829": 452, "699e": 436, "6e": [430, 456, 463], "6h": 470, "6th": 397, "7": [16, 30, 31, 38, 52, 53, 65, 80, 83, 86, 99, 118, 119, 125, 132, 163, 166, 223, 349, 350, 359, 363, 364, 371, 375, 376, 379, 395, 399, 400, 402, 403, 409, 410, 415, 416, 417, 419, 420, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 506, 510, 511, 547, 554, 555], "70": [65, 86, 97, 442, 456, 457, 554], "700": [367, 445, 462], "70000000e": 464, "7000e": 464, "70016": 442, "7007": 442, "701": 502, "70181": 133, "702": [450, 456, 478], "703": 395, "70358483e": 464, "704": 463, "70428": 479, "70437": 459, "705": 479, "70546": 436, "70634e": 428, "706e": 456, "707e": 441, "708": [427, 431, 432, 433], "708e": 436, "709": 416, "7097381e": 459, "70e": 464, "71": [33, 435, 450, 452, 463, 555], "710": [416, 472], "71067811865478": 456, "7116851": 464, "712": 443, "71220672": 457, "7123895e": 459, "712e": [450, 478], "713": [416, 456], "7132e": 479, "714": 456, "714e": 436, "715": 479, "716": [91, 286, 287, 461], "716062": 468, "71693826": [451, 465, 493], "717": 456, "71795506": 479, "7184": 479, "719": [416, 432, 463], "7190994e": 459, "71944e": 428, "7195": 456, "719e": 456, "72": [402, 456, 460, 479], "720": [445, 456], "7200": 448, "721e": 436, "722": 463, "72217": 479, "722557505166": 456, "723": 436, "723e": 456, "7240965e": 459, "725": [456, 549], "725490196078432": 446, "727": 463, "72775": 479, "7284447e": 459, "72fbeu4i": 440, "73": [428, 479], "7303": 479, "731": 416, "731133": 533, "732e": [65, 456], "733": [65, 416], "733360190578827e": 477, "734": 479, "7350250533013533": 465, "7350380e": 459, "7351418e": 459, "735e": 456, "736": [554, 555], "737": 432, "738": [416, 456], "7385727e": 459, "739": [416, 432], "7395744e": 459, "739e": 65, "73e": [456, 477], "74": [428, 438, 479], "740": 416, "740e": 436, "742": 463, "743e": 456, "744": 442, "74427": 442, "74465974e": 459, "74479": 436, "745": [427, 440, 447], "745098039215687": 446, "74542e": 428, "746": 416, "747018752906": 452, "7471700e": 459, "7479085e": 459, "748": 456, "748259": 440, "75": [65, 352, 432, 479], "750": 555, "75267735": 479, "753": [416, 433], "7537086e": 459, "754": 416, "75408483": 479, "7555": 460, "7559": 479, "756": 456, "7567": 428, "757": [427, 454], "7580410e": 459, "759": 416, "7596682e": 459, "75e": [456, 478], "76": [443, 461], "7613": 395, "7613e": 437, "761c": 28, "762": 416, "762199399999986": 517, "7627e": 452, "763": 416, "7632e": 448, "7637308880733709": 465, "76419591747674": 452, "7642": 436, "7647": 479, "764705882352942": 446, "76473": 436, "764e": 448, "7652512e": 459, "765e": 436, "766": [416, 436], "7660168382": 456, "7660365375951": 477, "766d": 468, "767": 416, "76739": 456, "768000": [97, 457], "768048": 92, "7681656e": 459, "76837444": 453, "7684028": 479, "7692170e": 459, "76e": [448, 463], "77": 432, "770": 65, "770e": 452, "771667": 471, "77174": 436, "7718272408581743": 286, "771e": 456, "772": [416, 428], "77206": 479, "77218": 436, "773": 456, "7733e": 456, "77351": 436, "77358627319336": 429, "774": [416, 448], "7743835449219": 432, "774e": [436, 456], "775": [65, 463], "7752244878226383": 442, "7755386e": 459, "776": 469, "7760": 479, "7763307219821931": 286, "7765957e": 459, "77678": 428, "7769775": 468, "777": 416, "7771617763704126": 286, "77751797": 92, "777e": [65, 430], "777l": 35, "778": [416, 432, 456], "77827941": 461, "778279410038923": 461, "779": [433, 456], "7796942": 479, "77e": [435, 456], "78": [461, 462, 470, 478], "780": [31, 119], "7800e": 432, "7804888e": 459, "78083": [132, 133], "780e": 119, "78188": 436, "78188096": 92, "782": 469, "7827941": 461, "78279410038923": 461, "783": [416, 456, 479], "78332719": 442, "78333": 442, "783587001383003": 468, "783e": 442, "784": [417, 433], "7843137254901955": 446, "78499999999997": 513, "785": 513, "7853981633974483": 546, "787": [65, 163], "7872234642813915e": 450, "7875405607868806": 465, "7876233e": 459, "788": 456, "7887840e": 459, "788e": 456, "789": 416, "78910994": 92, "7894": 442, "789527508351689": 452, "78e": 463, "79": [429, 435, 456], "790": [416, 427, 431, 432], "791": 417, "7913e": 432, "7922": 428, "793": 417, "79432823": 464, "79469899": 442, "7947": 436, "79470": 442, "795": 432, "796": [417, 463], "797": 417, "7972": 460, "798": 417, "798218": 428, "7990194e": 459, "7997221e": 459, "799999952316284": 456, "7b_uiwhi": 460, "7c": 461, "7d": 456, "7e": [456, 463, 464], "7e955f": 398, "7saoamcz": 460, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 65, 83, 85, 86, 97, 100, 104, 105, 106, 110, 122, 133, 137, 138, 194, 223, 225, 288, 359, 363, 366, 367, 376, 399, 400, 403, 405, 406, 410, 411, 412, 415, 416, 417, 420, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 486, 488, 497, 502, 506, 510, 519, 530, 538, 554], "80": [166, 432, 434, 436, 457, 461, 469, 502, 529], "800028": 535, "800932": 456, "801": [479, 502], "801668796295": 456, "802": [463, 479], "803": [436, 517], "8031431e": 459, "8037638e": 459, "803921568627494": 446, "804": 463, "804492": 448, "80492": 133, "80571": 132, "8062607e": 459, "80683246": 459, "8069e": 440, "807201": 479, "8075": [456, 479], "8075185": 456, "807e": 448, "8086": 436, "808687936570502e": 458, "80871364": 92, "8090746": 468, "809505": 456, "80982039": 459, "81": [406, 427, 450, 519], "810": [417, 456], "810000": 448, "810e": 456, "811": 417, "8115337251905373e": 458, "811538": 523, "812": 417, "812075194992371e": 458, "8122169596532167e": 458, "8122425483643125e": 458, "8122e": 458, "812358724314062e": 458, "8129257829574434e": 458, "812951371538087e": 458, "813": 417, "814": 417, "8150": 479, "8157971601581226e": 458, "816": [417, 443], "8160964882165554": 286, "81699e": 428, "816e": 456, "818388e": 479, "81847286": 453, "8188e": 434, "818e": 430, "819": 456, "81e": 519, "82": [65, 398, 456, 506], "820": [417, 427, 452, 467], "8205513": 468, "820562952023891": 286, "8222980e": 459, "823": 432, "82352941176471": 446, "824": [128, 417, 463], "8241471833009617": 465, "825": [417, 428, 456], "825042": 519, "8256": 479, "826": 417, "826414166666": 89, "827": 417, "8272": 481, "82739": 436, "827e": 133, "828": [427, 442, 447], "8290458e": 459, "8293": 479, "82946153": 479, "82e": 441, "83": [30, 65, 79, 81, 89, 97, 100, 104, 105, 163, 166, 432, 433, 434, 436, 441, 450, 457, 460, 461, 462, 470, 471, 477, 478, 497, 500, 502, 503, 506], "830": 417, "8300": 479, "8309": 448, "831": 417, "832": 417, "83242471": 459, "833": [417, 433], "833333333336": 453, "833e": 436, "834": 417, "8341884287660133": 465, "8349780e": 459, "835": 417, "835e": 442, "835fals": 430, "836": [417, 436, 453, 456], "836731": 456, "8369650e": 459, "837": [417, 463], "8377268e": 459, "838": 436, "8383396349722769": 286, "84": [24, 398, 432, 434, 442, 456, 463, 506], "840": [417, 436], "841": [452, 456], "84196311": 92, "842": [417, 456], "84233": 436, "842x": 134, "843": [59, 428, 453], "843137254902004": 446, "843e": 65, "8441040e": 459, "844770648146": 89, "8449575657133206": 286, "845": 418, "84529": 456, "8455480e": 459, "845693": 428, "846": [436, 456, 554], "847": 417, "8470e": 452, "8475576e": 459, "8475650e": 459, "84e": 440, "85": [83, 86, 424, 442, 510, 511], "851": 417, "85157506": 479, "8515948e": 459, "85188496e": 459, "85202": 479, "85287": 469, "852e": 456, "854": 417, "854166666664": 453, "85416667": 451, "85469291": 92, "855": 417, "85527": 442, "85527359": 442, "8555500e": 459, "855887646638273e": 477, "85624": 437, "85625": 437, "8568": 479, "856e": 456, "8570719e": 459, "85722435185": 456, "857725505249": 452, "858": 417, "858e": 456, "859": [417, 432], "85900": 442, "85900392": 442, "85925": 479, "8593054": 456, "85e": 456, "86": [430, 432, 433, 436, 461, 479, 490], "860": 456, "861": 479, "86111111": 451, "861150": 430, "8613613e": 459, "86178": 132, "8620": 448, "8623": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "862745098039234": 446, "864": [417, 432, 479], "865": [417, 436], "86676": 469, "8669": 428, "8673": 442, "868": [417, 456], "86831929": 92, "8699": 428, "8699165e": 459, "87": [65, 442, 461, 478], "870": [65, 417], "871": 417, "872": 417, "872e": 436, "873": 433, "8733348": 468, "873581766271": 443, "873659477745188": 465, "874": 429, "875": 417, "8753e": 448, "876": 463, "8767": 436, "8769240e": 459, "87710186": 92, "877563": 456, "878": [456, 463], "87897": 442, "87897418": 442, "8799800e": 459, "87e": 21, "88": [398, 420, 432, 434, 442, 443, 456, 461, 479], "881": [417, 428, 436], "88113384": 438, "8815212313941426": 465, "882": [65, 436, 439], "882352941176466": 446, "883": 417, "8834862e": 459, "883e": 65, "884": 417, "88470839": 464, "885": 417, "886": [427, 454, 456], "8865": 479, "88781": 436, "888": 417, "8885138e": 459, "889": 456, "8893600e": 459, "889e": 436, "88e": [430, 456], "89": [33, 433, 461], "8908866e": 459, "8909e": 452, "890e": 65, "891211": 513, "892": [432, 463], "89243456": 479, "8926": 479, "89287": 428, "893": 417, "894": 430, "8943121e": 459, "89492144e": 458, "895": 453, "895280": 546, "8954039e": 459, "89595846": 464, "896": 452, "89709472": 479, "898": [417, 427, 477, 480], "8986348363207728": 465, "89873": 442, "8989213": 442, "898e": 456, "899": [65, 438], "8999": 442, "899a": 264, "89e": 457, "8e": [430, 440, 443, 445, 463, 469, 538], "9": [31, 33, 35, 65, 79, 83, 86, 132, 223, 225, 318, 324, 356, 363, 364, 368, 376, 395, 401, 403, 414, 417, 419, 422, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 505, 512, 516, 517, 518, 525, 528, 541, 549, 554], "90": [57, 65, 382, 435, 441, 442, 456, 461, 464, 481], "900": 456, "9001258765345": 452, "9002269877996247": 453, "900269": 459, "9023670e": 459, "90242058e": 457, "9032163": 82, "904": 479, "905": 456, "9053655e": 459, "9053906e": 459, "906": [417, 456], "90605275e": 469, "90685": 436, "907": 456, "9074812e": 459, "9077294": 468, "908700583573673": 477, "90e": [97, 433, 440, 457], "91": [435, 461, 466, 506], "910": 432, "911": 417, "912": 456, "912525e": 479, "912779907405": 456, "912868843587422e": 450, "913": 432, "913196574074": 450, "914": 65, "915": 456, "91507": [97, 457], "9163195e": 459, "91719": 457, "918": 65, "918365": 456, "919": 417, "919e": 456, "91e": 463, "92": [133, 435, 436, 461, 468], "920": [427, 431, 432], "9205875e": 459, "921": 433, "9215375e": 459, "92234009259": [395, 450], "922429": 543, "923e": 436, "924": 433, "9240e": 464, "92490": 436, "925106": 442, "925e": 436, "9269494e": 459, "9277492e": 459, "928": 456, "9280475e": 459, "929": [428, 433], "93": [65, 435, 436, 461, 468], "930158": 433, "93026": 456, "9303": [456, 479], "93128e": 428, "932": 417, "93271046296": 450, "933": 417, "9332549000000": 479, "9343": 428, "935826709880043": 449, "93702": 469, "9382336444241555": 465, "938e": [442, 456], "939": [274, 280], "9391360e": 459, "93988308": 92, "93e": 456, "94": [435, 456, 461, 468, 477, 479], "940e": 456, "940fals": 430, "94111838": 92, "941176470588236": 446, "94137077720379": 452, "94186555556": [395, 450], "943282347242818": 477, "9445e": 437, "9453950989269149": 465, "945e": 436, "9462": 442, "946495": 521, "946923": 259, "94722599": 442, "94723": 442, "948683": 428, "9489822e": 459, "949": 463, "9499210e": 459, "94e": [442, 456], "95": [33, 65, 144, 150, 152, 153, 154, 156, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 435, 436, 442, 448, 456, 457, 458, 461, 462, 468, 510, 555], "950": 417, "9500979841335693": 286, "95024543e": 458, "952": 65, "9529719e": 459, "953": 463, "95421509259": 450, "95451985e": 119, "9546285068162436": 465, "95615": 428, "957": 65, "9573383260765": 452, "9580e": 434, "95883": 479, "959198": 456, "959d": [52, 53], "96": [398, 435, 457, 461, 519], "960": 480, "9606540e": 459, "960784313725491": 446, "9608912e": 459, "961": [427, 467], "9619812963": 450, "9631e": 452, "965e": 436, "966": 417, "96602": 437, "967546": 436, "9677107409819438": 286, "96814": 479, "96833546296": [456, 469], "9689e": 448, "969": [442, 456], "969e": 448, "96e": 430, "96r": 461, "97": [435, 456, 459, 465, 477, 478], "97003": 479, "9702e": 448, "97054": 436, "970e": 456, "97116": 442, "973": 456, "97369425926": 450, "974": 433, "9741e": 441, "974e": 456, "975": 417, "97529": 132, "9757e": 452, "97596": 436, "976": 417, "97749": 442, "97749371": 442, "9776920e": 459, "978868": 540, "979": [65, 417, 461], "97934": 436, "97978": 79, "97e": 456, "98": [79, 327, 434, 435, 436, 440, 450, 452, 459, 477], "980": 65, "9803921568627443": 446, "98049": 436, "98149518519": 450, "9816452e": 459, "982075849517389e": 464, "98258": 436, "982e": 452, "9833462074166": 456, "9834338e": 459, "98359208475904647": 442, "98429": 436, "9845": 428, "9847406e": 459, "985": [417, 430], "985502122122975": 465, "9864771491419372": 477, "9876": 428, "98772": 132, "988": [417, 456, 463], "988047": 528, "988409870698051e": 52, "9890": 479, "98e": 456, "99": [327, 435, 436, 437, 448, 478, 479], "991": 456, "9910796e": 459, "9912648e": 459, "9912712e": 459, "993": 429, "9931": 479, "994": 417, "994e": 456, "995": 463, "9952623149688797": 477, "9969731e": 459, "997": 417, "9977859e": 459, "9978": 479, "998": 443, "99848e": 469, "999": [50, 153, 156, 456], "99919925926": 225, "99996948242188": 432, "9999912037958": 442, "999999": 456, "99999994": 82, "9999999995": 456, "9999999997835": 429, "999999999997": 444, "9999999999977": 456, "9999999999978": 451, "9999999999998": 456, "99999999999994": 456, "99999999999999": [435, 456], "99e": 456, "9e": [430, 456, 538], "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 83, 84, 85, 86, 87, 94, 95, 96, 97, 99, 100, 103, 104, 105, 117, 118, 119, 127, 132, 133, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 204, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 256, 257, 258, 259, 260, 261, 272, 273, 281, 288, 297, 348, 349, 350, 352, 353, 360, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 397, 399, 403, 404, 405, 406, 407, 410, 412, 413, 416, 417, 418, 419, 421, 423, 424, 425, 428, 429, 432, 434, 436, 440, 442, 443, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 476, 478, 479, 481, 489, 490, 491, 493, 494, 502, 503, 505, 506, 508, 510, 547, 548, 551, 552, 555], "AND": [462, 463], "And": [264, 359, 362, 377, 379, 385, 390, 429, 430, 432, 433, 440, 444, 446, 452, 457, 458, 461, 462, 464, 468, 470, 477, 478, 479], "As": [79, 288, 318, 359, 360, 362, 367, 371, 372, 373, 375, 377, 385, 386, 388, 395, 400, 419, 428, 429, 432, 433, 434, 436, 437, 438, 442, 444, 445, 449, 450, 451, 452, 455, 456, 457, 458, 460, 461, 464, 466, 469, 471, 477, 479, 493, 502, 555], "At": [248, 373, 376, 385, 386, 389, 403, 444, 461, 468, 498, 551], "But": [359, 364, 367, 373, 378, 386, 389, 395, 419, 432, 433, 458, 466, 468, 477, 481, 553], "By": [19, 20, 26, 50, 63, 83, 86, 96, 97, 100, 104, 105, 116, 120, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 160, 163, 170, 180, 182, 183, 184, 186, 192, 195, 196, 205, 206, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 356, 359, 385, 386, 387, 404, 405, 407, 444, 445, 449, 451, 458, 461, 466, 478, 500, 504, 510, 511, 512, 556], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 78, 83, 84, 86, 90, 94, 96, 97, 100, 104, 105, 112, 114, 116, 117, 119, 120, 121, 124, 125, 126, 127, 140, 141, 142, 148, 153, 156, 163, 168, 170, 173, 174, 176, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 233, 234, 235, 236, 237, 238, 240, 241, 245, 246, 247, 249, 250, 252, 253, 254, 256, 260, 261, 274, 278, 280, 285, 291, 306, 358, 359, 360, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 400, 401, 402, 404, 405, 406, 407, 410, 417, 421, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 446, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 473, 477, 478, 479, 481, 488, 489, 491, 493, 503, 505, 506, 511, 516, 548, 552, 553, 555, 556, 557], "IN": [87, 95, 233], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 114, 116, 117, 118, 119, 120, 122, 124, 127, 131, 132, 135, 140, 141, 142, 148, 151, 153, 156, 157, 159, 160, 163, 165, 166, 169, 170, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 271, 285, 288, 300, 301, 306, 345, 348, 352, 353, 354, 355, 359, 360, 361, 362, 364, 366, 367, 372, 373, 375, 376, 377, 380, 381, 382, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 401, 418, 419, 420, 428, 429, 430, 432, 434, 435, 437, 440, 442, 445, 448, 450, 451, 452, 453, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 479, 491, 493, 504, 506, 512, 514, 527, 553, 554, 555, 556], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 79, 83, 84, 86, 89, 96, 98, 103, 119, 140, 159, 182, 184, 187, 190, 196, 201, 203, 260, 271, 301, 359, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 400, 401, 402, 403, 404, 405, 406, 407, 410, 421, 424, 428, 429, 430, 432, 433, 434, 435, 436, 438, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 469, 470, 477, 478, 479, 489, 491, 493, 498, 501, 502, 503, 505, 506, 507, 510, 511, 516, 529, 548, 551, 552, 553, 554, 555, 556, 557], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 97, 100, 104, 105, 106, 108, 110, 117, 132, 140, 144, 151, 152, 153, 154, 156, 166, 169, 173, 174, 179, 183, 184, 186, 188, 191, 192, 195, 196, 198, 205, 206, 209, 212, 213, 215, 216, 217, 221, 225, 227, 228, 230, 234, 236, 238, 244, 248, 249, 251, 252, 253, 254, 257, 261, 276, 278, 279, 296, 310, 315, 359, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 394, 396, 400, 401, 402, 403, 407, 410, 412, 413, 414, 419, 421, 423, 424, 425, 428, 433, 438, 441, 443, 445, 448, 449, 453, 456, 457, 458, 460, 461, 462, 464, 466, 468, 469, 470, 471, 477, 478, 479, 481, 482, 489, 490, 492, 493, 497, 498, 500, 502, 506, 520, 523, 524, 526, 527, 531, 532, 534, 535, 536, 537, 550, 551, 552, 553, 554, 555, 557], "Its": [140, 371, 385, 386, 410, 412, 446, 451, 466, 478, 495, 496, 497, 499], "NOT": [462, 493], "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 370, 380, 383, 384, 418, 420, 426, 446, 456, 458, 460, 461, 479], "Not": [100, 104, 105, 185, 191, 193, 367], "ON": [97, 100, 126, 170, 171, 172, 180, 357, 365, 412, 428, 432, 435, 438, 442, 450, 451, 453, 458, 460, 466, 493, 502, 552, 554, 556], "OR": [97, 104, 457, 462, 463], "Of": [359, 362, 395, 440, 457, 461, 469, 553, 556], "On": [59, 158, 164, 165, 168, 279, 359, 360, 365, 367, 374, 375, 388, 390, 391, 392, 393, 414, 440, 441, 458, 473, 555], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 96, 97, 100, 104, 105, 211, 233, 314, 359, 360, 365, 367, 368, 369, 370, 373, 375, 376, 377, 385, 424, 429, 433, 438, 450, 460, 461, 462, 477, 479, 502, 506, 529, 553, 555], "Ones": 288, "Or": [360, 378, 379, 433, 440, 457, 461, 468, 469, 491], "Such": [371, 459, 497], "That": [16, 19, 20, 80, 99, 118, 200, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 359, 360, 364, 373, 376, 379, 458, 479, 553], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 62, 67, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 160, 164, 165, 169, 170, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 263, 264, 270, 272, 273, 274, 276, 277, 278, 279, 280, 288, 300, 306, 308, 309, 312, 327, 342, 343, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 396, 399, 400, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 473, 477, 478, 479, 481, 482, 483, 484, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 510, 512, 514, 515, 516, 519, 525, 527, 528, 529, 538, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "Their": 462, "Then": [65, 97, 102, 104, 362, 364, 369, 372, 374, 375, 376, 377, 383, 392, 429, 432, 440, 441, 444, 448, 450, 458, 462, 464, 466, 478], "There": [83, 86, 132, 359, 360, 364, 365, 366, 368, 373, 374, 375, 376, 377, 378, 379, 380, 383, 386, 389, 391, 392, 418, 442, 446, 449, 455, 456, 457, 458, 459, 460, 462, 463, 470, 481, 489, 490, 493, 506], "These": [90, 188, 263, 359, 360, 364, 365, 370, 372, 373, 374, 375, 379, 380, 385, 402, 404, 405, 406, 410, 418, 424, 428, 441, 443, 444, 449, 452, 455, 457, 459, 461, 464, 465, 470, 473, 481, 498, 503, 505, 506, 554, 555, 556], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 95, 99, 103, 116, 118, 120, 124, 182, 194, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 263, 349, 350, 361, 362, 366, 367, 370, 371, 372, 374, 375, 380, 381, 382, 383, 384, 385, 389, 390, 392, 394, 395, 396, 400, 401, 402, 405, 406, 410, 412, 418, 419, 421, 424, 428, 429, 430, 432, 433, 434, 435, 437, 438, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 473, 477, 479, 489, 490, 491, 494, 498, 500, 502, 503, 510, 551, 553, 554, 555], "With": [79, 359, 368, 369, 385, 406, 419, 466, 489, 555], "_": [97, 104, 122, 221, 240, 359, 373, 383, 385, 435, 438, 455, 456, 458, 463, 466, 489, 502], "_0": [50, 51], "_1": [100, 105, 490], "_2": [100, 105], "__all__": 359, "__array__": 288, "__array_ufunc__": [444, 471, 541], "__attributes__": [83, 86], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 300, 365, 370, 387, 406], "__class__": [359, 383, 455, 487], "__dict__": [16, 80, 99, 118, 359], "__enter__": 337, "__eq__": 412, "__exit__": 337, "__fields__": [16, 80, 99, 118, 386], "__getitem__": [369, 370, 371], "__init__": [16, 80, 99, 118, 191, 260, 359, 365, 371, 383, 421], "__int__": 306, "__len__": 369, "__main__": [243, 359, 466, 475, 553], "__name__": [359, 438, 450, 451, 452, 455, 475, 487, 553], "__neq__": 412, "__pydantic_extra__": [16, 80, 99, 118], "__pydantic_fields_set__": [16, 80, 99, 118], "__repr__": [359, 405, 419], "__str__": [359, 371, 386, 402], "__subclasses__": 455, "__version__": 394, "_basemodel__context": [16, 80, 99, 118], "_build": [360, 389], "_check_interv": 424, "_compute_flux_spati": 410, "_covari": [211, 233], "_data": 383, "_dom_class": [440, 448, 461, 477, 478], "_energy_t": 383, "_errn": [120, 121, 124, 125], "_errp": [120, 121, 124, 125], "_evaluate_timevar_sourc": 424, "_f_cash_root_cython": 284, "_factr": 458, "_fields_set": [16, 80, 99, 118], "_i": 122, "_k": [97, 104, 489], "_l": 489, "_lat": 359, "_lon": 359, "_map": 352, "_model": 117, "_new_attribut": 359, "_old_attribut": 359, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 80, 99, 118], "_phi": 359, "_prior": 387, "_propagate_error": 409, "_reco": 359, "_repr_html_": 359, "_row_index": 67, "_sample_coord_time_energi": 424, "_scan": 458, "_time_group": 383, "_time_t": 383, "_true": 359, "_type": [387, 466], "_types_namespac": [16, 80, 99, 118], "_was_": [16, 80, 99, 118], "_wc": 517, "_weight": 387, "a_": [100, 105, 143, 495, 498, 555], "a_off": 555, "a_on": 555, "a_scan": 466, "aa": [83, 86, 288, 385], "aaguasca": 421, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 63, 79, 84, 112, 120, 134, 143, 196, 201, 203, 230, 263, 264, 279, 455, 456], "abc": [18, 56, 94, 115, 162, 181, 186, 460], "abcmeta": 460, "abdalla2018": [502, 503, 552], "abeysekara": 59, "abil": [383, 466], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 369, 374, 377, 429, 448, 450, 451, 466, 473, 553], "about": [11, 13, 16, 80, 99, 118, 138, 143, 220, 225, 318, 359, 362, 364, 368, 375, 376, 378, 379, 380, 384, 385, 387, 388, 389, 394, 395, 414, 415, 419, 420, 421, 430, 436, 437, 438, 441, 442, 444, 456, 459, 461, 464, 469, 478, 479, 481, 489, 490, 553, 556], "abov": [29, 44, 52, 53, 79, 116, 118, 119, 122, 126, 127, 132, 133, 158, 193, 348, 350, 359, 360, 365, 368, 369, 371, 373, 375, 376, 377, 378, 379, 383, 391, 392, 395, 428, 442, 444, 445, 446, 450, 453, 458, 460, 461, 462, 464, 465, 466, 468, 469, 470, 477, 487, 489, 490, 497, 506, 552, 553, 554, 555, 556], "abramowski": 143, "abruptli": [359, 384], "abs_path": 296, "absenc": [374, 438, 460, 462, 502, 554], "absolut": [78, 86, 101, 137, 138, 139, 140, 143, 145, 147, 150, 155, 183, 184, 186, 188, 192, 195, 196, 292, 318, 336, 340, 491], "absolute_tim": 557, "absopt": 377, "absorb": [261, 369, 382, 417, 519], "absorbedspectralmodel": [404, 417], "absorbt": 382, "absorpt": [213, 377, 407, 417, 427, 507, 539], "abstract": [56, 57, 59, 94, 115, 154, 162, 167, 181, 183, 186, 195, 370, 406, 505], "abstractsetintstr": [16, 80, 99, 118], "acada": 385, "academ": 128, "accept": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 99, 100, 101, 105, 118, 158, 175, 180, 182, 183, 184, 186, 194, 195, 196, 211, 233, 273, 357, 363, 364, 365, 366, 367, 368, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 411, 415, 424, 428, 433, 434, 435, 438, 442, 445, 457, 460, 461, 469, 489, 505, 511, 529, 554, 555], "acceptance_off": [100, 101, 105, 158, 168, 371, 428, 429, 432, 435, 438, 489, 555], "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 63, 64, 65, 78, 79, 83, 84, 86, 97, 151, 181, 182, 191, 194, 279, 296, 359, 367, 368, 369, 370, 372, 375, 383, 389, 391, 394, 399, 400, 407, 414, 415, 417, 418, 424, 425, 430, 432, 433, 434, 440, 456, 458, 459, 463, 464, 468, 471, 477, 478, 479, 488, 493, 504, 505, 506, 551], "accessor": 461, "accident": [469, 553], "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 70, 83, 86, 97, 100, 104, 105, 112, 117, 135, 141, 151, 158, 182, 188, 201, 203, 285, 348, 369, 370, 373, 374, 377, 383, 385, 404, 413, 425, 438, 450, 457, 460, 464, 465, 473, 489, 490, 493], "accordingli": [371, 385, 401, 407, 462], "account": [97, 100, 104, 105, 116, 160, 176, 211, 233, 248, 272, 273, 279, 334, 367, 372, 375, 383, 385, 406, 423, 425, 428, 429, 434, 438, 440, 446, 452, 453, 458, 460, 462, 478, 489, 491, 554, 555], "accur": [377, 420, 440, 458, 500], "accuraci": [373, 458, 493], "aceptance_off": 371, "acero": [377, 400, 402, 404, 407, 410, 412, 417, 419, 425], "achiev": [16, 80, 99, 112, 118, 158, 349, 350, 359, 368, 369, 370, 371, 372, 373, 375, 382, 385, 407, 461, 464, 465, 503], "acknowledg": [362, 385, 396], "acquir": 395, "acquisit": 552, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 112, 153, 156, 359, 368, 371, 389, 443, 452, 463, 469, 489, 505, 514, 552], "act": [86, 375, 463, 516], "action": [158, 364, 369, 375, 385, 389, 410, 452], "activ": [86, 279, 362, 376, 390, 391, 393, 394, 395, 404, 421, 449, 493], "actual": [171, 334, 335, 336, 358, 359, 360, 364, 368, 370, 372, 374, 375, 383, 384, 386, 388, 435, 445, 448, 451, 457, 458, 460, 461, 462, 466, 469, 470, 478, 479, 500, 502, 552, 553, 555, 557], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 78, 79, 80, 83, 86, 97, 99, 100, 104, 105, 108, 109, 111, 118, 119, 183, 184, 186, 191, 192, 195, 196, 359, 360, 362, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 383, 385, 399, 400, 401, 403, 404, 405, 407, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 434, 440, 441, 459, 460, 463, 464, 465, 466, 470, 489, 506, 556], "adapt": [112, 158, 200, 368, 369, 372, 373, 378, 379, 381, 382, 385, 388, 395, 400, 401, 403, 404, 405, 407, 408, 410, 413, 416, 417, 419, 421, 423, 424, 425, 457, 459, 461, 462, 503], "adaptiveringbackgroundestim": [168, 365], "adaptiveringbackgroundmak": [161, 404, 503], "adass": 379, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 75, 79, 80, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 117, 118, 119, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 160, 183, 184, 186, 190, 192, 195, 196, 211, 233, 248, 285, 328, 347, 356, 358, 359, 360, 362, 364, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 385, 387, 388, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 435, 440, 441, 444, 448, 450, 453, 457, 459, 460, 461, 462, 464, 466, 468, 479, 483, 484, 493, 506, 521, 553, 556], "add_artist": [464, 510, 511], "add_cbar": [97, 100, 104, 105, 119, 137, 138, 140, 143, 144, 145, 150, 151, 152, 154, 183, 184, 186, 192, 195, 196, 347, 436, 437, 438, 440, 442, 448, 453, 455, 457, 459, 460, 461, 463, 464, 469, 470, 477, 478, 506, 509, 510, 511, 514, 515, 517], "add_column": [83, 86], "add_enabled_unit": [428, 435, 437, 440, 442, 448, 452, 468], "add_index": [83, 86], "add_loc": 359, "add_row": [83, 86], "add_subplot": 347, "addit": [16, 19, 20, 26, 43, 80, 83, 84, 86, 97, 99, 100, 104, 105, 108, 116, 118, 120, 125, 155, 183, 184, 186, 189, 192, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 359, 362, 363, 364, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 383, 384, 385, 386, 388, 389, 390, 391, 392, 401, 402, 404, 406, 407, 410, 411, 418, 419, 421, 424, 425, 430, 434, 446, 453, 456, 457, 458, 461, 463, 464, 466, 468, 469, 478, 479, 489, 491, 493, 500, 505, 506, 550, 556], "addition": [125, 371, 457, 458, 461, 463, 464], "address": [368, 371, 372, 373, 375, 385, 466, 492], "adequ": 191, "adher": 362, "adjac": [135, 188, 410, 451, 461, 502], "adjust": [16, 65, 183, 184, 186, 192, 195, 196, 368, 370, 382, 433, 449, 457, 464, 465, 477, 493, 500], "admit": 379, "adonath": 365, "adopt": [37, 372, 375, 380, 434, 444, 445, 455], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 230, 263, 264, 279], "adult": 359, "advanc": [371, 375, 376, 379, 387, 391, 459, 461, 493, 552, 553], "advantag": [367, 373, 376, 383, 410, 461, 466, 529, 553], "advanteg": 371, "advertis": 388, "advic": [359, 385], "advis": [360, 385, 458, 466, 473], "advoc": 359, "aeff": [16, 78, 83, 84, 100, 105, 143, 169, 177, 369, 371, 372, 406, 407, 429, 432, 433, 434, 437, 438, 440, 442, 451, 459, 460, 468, 470, 471, 477, 478, 495, 500, 502, 503, 552], "aeff2d": 142, "aeff_2d": [78, 83, 143, 468, 471], "aeff_3d": 459, "aeff_ev": 459, "aeff_new": 459, "aeff_perc": [169, 429, 432, 433, 442, 451, 460, 470, 502], "aegi": 213, "af": 355, "affect": [359, 367, 371, 373, 384, 401, 402, 413, 422, 466], "affili": [373, 385, 421], "afmhot": [463, 479], "aforement": 385, "after": [16, 45, 50, 51, 52, 53, 80, 86, 95, 97, 99, 100, 104, 118, 153, 156, 279, 300, 318, 340, 343, 359, 362, 364, 367, 368, 370, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 390, 395, 399, 406, 408, 409, 410, 412, 418, 420, 421, 422, 430, 440, 449, 451, 458, 461, 463, 468, 470, 471, 493, 553, 557], "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 292, 359, 483], "again": [97, 100, 104, 105, 153, 362, 369, 371, 373, 375, 380, 386, 390, 405, 406, 409, 416, 421, 430, 432, 433, 440, 445, 446, 461, 464, 466, 469, 477, 479, 506, 553], "against": [16, 80, 99, 118, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 360, 362, 376, 382, 389, 456, 469, 477, 488, 491], "agent": 375, "agglom": 13, "aggreg": 386, "agil": 372, "agn": [128, 277, 373, 432, 449, 450, 452, 468], "agnost": 458, "ago": 366, "agre": [185, 188, 362, 364, 373, 385], "agreement": [359, 362, 380, 453], "aguasca": [412, 421, 422, 423, 424], "aharonian": 443, "ahead": [373, 399], "ahelp": 200, "aim": [368, 369, 385, 440, 444, 455, 465, 481, 552], "air": 468, "ait": [182, 183, 184, 475], "aitoff": 373, "aka": 479, "al": [26, 33, 59, 128, 143, 213, 278, 279, 369, 436, 443, 449, 481, 552], "albert": 552, "albert2007": 552, "alexi": [407, 410], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 83, 86, 112, 127, 158, 200, 359, 365, 371, 372, 373, 378, 386, 402, 407, 415, 416, 417, 436, 449, 458, 470, 491, 505, 551, 555], "alia": [16, 56, 80, 99, 118, 362, 479], "alias": [16, 56, 80, 99, 118, 458], "align": [83, 86, 95, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 182, 183, 184, 186, 188, 192, 194, 195, 196, 359, 459, 462, 464], "alisha": 412, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 90, 91, 95, 97, 98, 99, 100, 102, 103, 104, 105, 116, 117, 118, 119, 120, 124, 125, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 157, 163, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 270, 331, 332, 333, 334, 335, 336, 346, 355, 358, 359, 360, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 432, 433, 434, 437, 438, 440, 442, 443, 444, 448, 450, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 483, 489, 491, 493, 502, 504, 505, 506, 507, 529, 550, 553, 554, 555], "all_quant": [117, 119], "allclos": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 185, 186, 188, 192, 193, 195, 196, 334], "alloc": [184, 192, 196], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 80, 83, 86, 99, 112, 117, 118, 119, 126, 127, 153, 156, 182, 187, 311, 359, 360, 362, 364, 365, 366, 369, 370, 371, 372, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 401, 403, 404, 405, 406, 407, 410, 412, 419, 420, 421, 424, 428, 432, 443, 452, 457, 458, 459, 460, 461, 462, 478, 489, 491, 493, 500, 505, 506, 550, 551, 553, 558], "allow_extra": 187, "allow_pickl": [16, 80, 99, 118], "allowed_channel": [26, 455], "allski": [79, 461], "alma": 378, "almeida": 407, "almost": [358, 360, 362, 373, 469, 479], "alon": 364, "along": [66, 96, 117, 119, 123, 135, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 154, 155, 183, 184, 186, 192, 194, 195, 196, 277, 278, 279, 299, 300, 310, 320, 321, 368, 369, 383, 421, 424, 437, 446, 456, 457, 459, 460, 463, 464, 490, 505, 506, 522, 552], "alpha": [21, 27, 28, 48, 97, 100, 104, 105, 158, 180, 216, 217, 226, 227, 228, 241, 273, 283, 285, 356, 357, 371, 382, 384, 410, 417, 428, 429, 430, 432, 434, 435, 438, 440, 441, 445, 453, 456, 458, 466, 510, 519, 521, 523, 525, 527, 528, 529, 544, 545, 554, 555, 556], "alpha_": [100, 105], "alpha_1": [100, 105], "alpha_2": [100, 105], "alpha_norm": [213, 382, 519], "alphabet": [376, 385, 400, 401, 402, 403, 404, 405, 406, 407, 410], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 118, 200, 256, 257, 258, 260, 359, 365, 366, 367, 370, 371, 372, 373, 374, 376, 379, 380, 381, 383, 386, 388, 389, 419, 430, 434, 436, 445, 453, 455, 456, 457, 461, 462, 463, 464, 468, 469, 470, 479, 481, 506, 517], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 90, 112, 116, 117, 119, 120, 132, 134, 155, 160, 166, 181, 188, 190, 191, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 271, 288, 296, 301, 359, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 410, 418, 419, 420, 424, 428, 429, 432, 433, 434, 435, 436, 440, 442, 443, 444, 445, 446, 449, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 477, 478, 481, 489, 490, 491, 492, 493, 500, 502, 505, 506, 529, 532, 550, 552, 553, 554, 555, 557], "alt": [79, 81, 84, 89, 90, 359, 557], "alt_pnt": 86, "altaz": [79, 81, 89, 146, 359, 459, 557], "altaz_fram": [79, 89], "altaz_from_t": [79, 89], "altaz_interpol": 89, "altern": [78, 270, 358, 359, 362, 364, 368, 392, 410, 432, 434, 436, 443, 456, 458, 459, 461, 463, 468, 489, 490, 553], "although": [359, 372, 373, 374, 376, 379, 383, 458, 468, 515, 516, 550, 557], "altitud": 429, "alwai": [79, 83, 86, 140, 188, 191, 198, 201, 203, 219, 359, 360, 362, 365, 366, 367, 369, 370, 371, 373, 376, 384, 385, 392, 399, 406, 421, 422, 424, 435, 436, 440, 448, 455, 458, 460, 461, 463, 465, 466, 473, 491, 505, 506], "am": 368, "ambigu": [373, 418], "amend": 362, "among": [78, 83, 86, 97, 100, 104, 105, 375, 379, 380, 382, 387, 407, 458, 552], "amount": [366, 373, 387, 493], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 247, 546], "ampl_2": [144, 459], "ampl_3": [144, 459], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 66, 96, 120, 125, 127, 183, 184, 186, 195, 196, 205, 212, 215, 217, 221, 228, 231, 238, 239, 240, 247, 249, 252, 253, 254, 264, 270, 281, 370, 371, 374, 382, 429, 430, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 456, 457, 458, 463, 464, 468, 469, 477, 478, 479, 491, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 523, 524, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 555], "amplitude_maximum_signific": 449, "amplitude_maximum_vari": 449, "amplitude_ref": 453, "an": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 103, 104, 105, 106, 108, 110, 117, 118, 119, 120, 121, 122, 124, 125, 127, 131, 132, 133, 138, 140, 141, 142, 143, 145, 148, 151, 153, 155, 156, 159, 163, 166, 168, 171, 173, 174, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 259, 260, 261, 266, 277, 279, 286, 288, 292, 306, 317, 321, 337, 343, 349, 350, 352, 355, 358, 360, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 405, 406, 407, 410, 412, 413, 414, 417, 418, 419, 421, 422, 424, 425, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 456, 458, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 481, 483, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556], "anaconda": [376, 390, 391], "analog": [83, 86, 183, 184, 186, 192, 195, 196, 506], "analogi": 380, "analys": [78, 358, 359, 368, 369, 370, 371, 373, 377, 379, 381, 382, 387, 395, 396, 402, 403, 404, 406, 407, 417, 419, 422, 432, 433, 440, 451, 452, 455, 456, 462, 464, 468, 469, 477, 478, 481, 489, 553], "analysi": [6, 16, 57, 65, 68, 70, 71, 79, 97, 99, 100, 104, 105, 109, 111, 165, 169, 358, 359, 360, 363, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 386, 388, 389, 390, 391, 392, 395, 396, 399, 400, 401, 403, 404, 405, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 427, 430, 431, 436, 437, 438, 439, 443, 444, 446, 447, 448, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 478, 479, 481, 490, 491, 493, 494, 498, 500, 501, 502, 503, 505, 506, 532, 550, 552, 553, 555], "analysis3d": 420, "analysis_1": [427, 477, 480], "analysis_1d": 450, "analysis_2": [360, 427, 478, 480], "analysis_3d": [419, 427, 440, 447, 450], "analysis_joint": 440, "analysis_mwl": [427, 441, 447], "analysis_stack": 440, "analysisconfig": [15, 360, 433, 437, 438, 440, 450, 477], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 143, 144, 152, 154, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 372, 377, 425, 459, 464, 491, 512, 556], "analyz": [369, 470, 552], "andrea": 372, "andrew": 419, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 66, 79, 85, 86, 91, 97, 100, 109, 111, 112, 116, 123, 127, 137, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 159, 166, 167, 169, 171, 181, 182, 184, 189, 191, 194, 196, 197, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 258, 260, 263, 316, 346, 359, 365, 373, 375, 382, 386, 398, 400, 401, 402, 419, 428, 429, 432, 435, 441, 444, 445, 451, 456, 461, 462, 464, 465, 468, 469, 493, 498, 502, 505, 506, 510, 511, 512, 515, 516, 552], "angle_incr": 166, "angular": [23, 97, 100, 109, 111, 122, 141, 142, 148, 153, 156, 159, 184, 191, 194, 196, 212, 220, 223, 258, 292, 295, 359, 375, 423, 434, 445, 453, 498, 499, 552], "angular_extens": 41, "angular_s": 506, "angular_separ": [382, 423, 425, 464], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 83, 86, 99, 114, 118, 124, 142, 165, 183, 184, 186, 191, 192, 194, 195, 196, 288, 311, 344, 358, 359, 360, 362, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 385, 386, 388, 391, 392, 393, 394, 395, 399, 400, 418, 419, 420, 425, 433, 442, 443, 446, 450, 453, 457, 460, 461, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 481, 490, 491, 503, 505, 506, 521, 553, 557], "ann": [23, 418], "anna": 359, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 421, 464, 481], "annoi": [359, 553], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 348, 386, 458, 510], "announc": [359, 364, 366, 373, 375, 378, 380, 382, 384, 385, 388, 389], "annuli": [446, 506], "annulu": [121, 320, 506], "anonym": 362, "anoth": [19, 20, 26, 79, 82, 83, 86, 97, 100, 104, 105, 141, 142, 143, 148, 153, 155, 156, 185, 188, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 359, 373, 374, 375, 377, 379, 380, 383, 386, 390, 395, 404, 419, 453, 457, 461, 462, 464, 506, 553], "another_posit": 502, "answer": [458, 493], "anti": [461, 462], "anticip": 368, "anymor": 421, "anyon": [364, 366, 468], "anyth": [140, 375, 553], "anytim": [362, 401], "anywai": [362, 373], "anywher": [373, 376, 378, 489], "ap": [364, 376, 384], "apart": 374, "apertur": 552, "api": [219, 363, 365, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 384, 385, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 410, 414, 418, 419, 427, 429, 432, 433, 436, 442, 444, 451, 457, 461, 462, 463, 464, 467, 468, 469, 477, 479, 480, 489, 490, 491, 492, 500, 501, 505, 550, 551, 552, 553], "apj": [274, 280], "aplpi": 419, "apologis": [399, 400, 419], "app": [83, 86, 389, 395, 418], "appear": [83, 86, 359, 360, 367, 373, 386, 413, 424, 456], "append": [83, 86, 87, 95, 136, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 233, 371, 372, 374, 405, 424, 429, 432, 434, 435, 440, 441, 442, 444, 451, 452, 453, 457, 458, 460, 463, 464, 465, 466, 502], "append_ax": [137, 138, 140, 143, 144, 145, 150, 152, 154, 196, 347], "appendix": [30, 127, 143, 230, 264, 281, 436], "appl": [391, 393, 395], "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 82, 83, 85, 86, 96, 97, 98, 100, 104, 105, 106, 109, 110, 111, 112, 116, 119, 120, 124, 127, 140, 141, 142, 148, 153, 155, 156, 160, 166, 169, 170, 183, 184, 186, 187, 191, 192, 194, 195, 196, 201, 203, 211, 219, 233, 248, 261, 271, 272, 273, 300, 301, 344, 348, 356, 359, 365, 366, 369, 370, 372, 374, 377, 383, 384, 385, 407, 412, 417, 418, 419, 420, 424, 428, 432, 434, 444, 451, 452, 453, 457, 460, 461, 462, 463, 464, 466, 468, 471, 478, 479, 491, 493, 538, 551, 554], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 86, 359, 370, 385, 387, 406, 449, 458, 505, 552], "apply_async": [308, 309], "apply_edisp": 425, "apply_hysteresis_threshold": 462, "apply_irf": [248, 406], "apply_mask": 189, "apply_psf": [370, 403], "apply_standard_scal": 91, "apply_threshold_sensit": 116, "apply_union": 198, "approach": [83, 86, 127, 359, 365, 367, 371, 375, 380, 383, 384, 386, 424, 428, 432, 460, 473, 552, 555], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 182, 183, 184, 186, 195, 196, 288, 296, 360, 434, 438, 440, 461, 553], "approv": [365, 366, 367], "approx": [52, 53], "approxim": [127, 169, 170, 182, 183, 184, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 272, 273, 299, 370, 373, 401, 428, 458, 468, 491, 502, 511, 512, 515, 516, 552], "appveyor": 415, "apr": [381, 397], "april": [379, 386, 406], "apt": 392, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 65, 68, 71, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 91, 95, 96, 97, 99, 100, 103, 104, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 163, 164, 169, 170, 171, 176, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 277, 288, 300, 306, 308, 320, 321, 334, 348, 350, 355, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 477, 478, 479, 481, 482, 483, 484, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507, 510, 511, 519, 529, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "arakelian": 278, "arang": [112, 374, 436, 451], "arb": 466, "arbitrari": [189, 191, 192, 370, 382, 405, 418, 444, 457, 461, 466, 505, 506], "arbitrary_types_allow": [16, 80, 99, 118, 386], "arbitrarytypemetadata": 386, "architectur": [391, 393], "archiv": [385, 471, 478], "arcsec": 166, "arctan": 373, "area": [78, 84, 100, 102, 142, 143, 158, 169, 170, 177, 184, 192, 194, 196, 359, 360, 370, 414, 416, 428, 432, 444, 453, 460, 470, 471, 498, 505, 506, 552], "areasc": [417, 419], "aren": [335, 359, 373, 378, 379, 390, 391, 393], "arf": [101, 102, 105, 187, 188, 191, 192, 432, 506], "arf_ob": 101, "arffil": 101, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 80, 83, 86, 99, 104, 105, 118, 137, 138, 139, 143, 144, 145, 147, 150, 151, 152, 154, 155, 184, 185, 192, 206, 219, 231, 238, 239, 240, 311, 553], "arg_in_kwarg": 359, "argmax": 449, "argmin": 449, "argpars": [364, 553], "argsort": [83, 86], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 79, 80, 82, 83, 84, 86, 87, 88, 95, 96, 97, 99, 100, 103, 104, 105, 118, 119, 120, 122, 124, 136, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 159, 169, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 271, 286, 288, 300, 306, 308, 309, 346, 347, 348, 352, 353, 354, 355, 356, 362, 365, 371, 374, 406, 407, 410, 412, 418, 424, 425, 436, 440, 445, 458, 460, 461, 464, 465, 478, 491, 493, 504, 505, 506, 529, 553], "aris": [364, 375], "arithmet": [206, 370, 420, 461, 462, 464, 521], "arjun": [417, 418], "arm": [33, 34, 38, 45, 414], "arm64": [391, 393], "armstrong": 418, "arnau": [412, 421, 422, 423, 424], "around": [56, 132, 159, 182, 184, 194, 196, 300, 373, 374, 434, 453, 455, 458, 462, 470, 479, 493, 502, 505, 506], "arpit": 417, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 78, 79, 81, 83, 86, 87, 89, 94, 95, 96, 97, 104, 105, 112, 117, 119, 120, 121, 124, 125, 127, 132, 133, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 201, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 258, 259, 260, 261, 262, 271, 272, 273, 275, 288, 299, 300, 301, 315, 316, 317, 321, 352, 353, 358, 359, 372, 373, 377, 383, 386, 395, 405, 418, 421, 423, 425, 435, 444, 445, 453, 456, 457, 458, 459, 461, 463, 464, 466, 468, 470, 471, 479, 505, 506, 513, 538, 541, 554, 555], "array_lik": [97, 104, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 274, 280, 285], "array_shap": [423, 425], "arriba": [411, 414, 415], "arriv": [210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 364, 372, 404, 405, 406, 444, 552, 556], "arrow": 551, "arrowprop": 510, "arrowstyl": 510, "artefact": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "arthmet": 370, "articl": [128, 134, 278, 364, 429, 451], "artifact": [116, 184], "artifici": 444, "artist": [191, 211, 233, 510, 511], "arxiv": [63, 169, 239, 240, 253, 254, 441, 455, 456, 460, 536, 537], "as_arrai": [83, 86], "as_artist": [191, 192, 464, 506, 510, 511], "as_energy_tru": [181, 182, 191, 194], "as_plot_cent": [185, 188, 193], "as_plot_edg": [185, 188, 193], "as_plot_label": [185, 188, 193], "as_plot_scal": 188, "as_plot_xerr": [185, 188, 193], "asanyarrai": 359, "ascii": [83, 86, 119, 359], "asimov": 466, "asinh": 436, "asinha": 78, "ask": [360, 362, 364, 366, 373, 375, 376, 379, 385, 394, 450, 479, 493, 494, 553], "asmooth": [112, 113, 378, 405, 416, 419], "asmoothestim": 380, "asmoothmapestim": [113, 380, 405, 407, 410, 436, 493], "aspect": [362, 385, 494, 553, 558], "assert": [185, 187, 188, 193, 334, 335, 336, 362, 370, 382, 461], "assert_allclos": 359, "assert_equ": 359, "assert_nam": [185, 187, 188, 193], "assert_quantity_allclos": [359, 414], "assess": [432, 434, 449], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 98, 103, 104, 182, 248, 258, 355, 359, 368, 371, 374, 386, 388, 429, 448, 450, 457, 461, 464, 466, 478, 479, 505], "assist": 375, "asso": [69, 71, 72, 74], "assoc": 69, "assoc1": [71, 72, 74, 456, 479], "assoc2": [71, 72, 74, 479], "assoc_fgl": 74, "assoc_fhl": 74, "assoc_gam": 72, "assoc_gam1": [71, 74], "assoc_gam2": [71, 74], "assoc_gam3": [71, 74], "assoc_prob_bai": 456, "assoc_prob_lr": 456, "assoc_tev": [71, 72, 74], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 83, 86, 95, 97, 100, 117, 126, 128, 129, 130, 141, 142, 153, 156, 173, 174, 179, 192, 259, 288, 365, 375, 383, 384, 385, 386, 387, 424, 425, 429, 430, 432, 436, 441, 456, 457, 460, 461, 463, 464, 470, 479, 490, 491, 493, 506, 555], "association_catalog": [65, 456], "association_nam": [65, 456], "assum": [23, 50, 51, 52, 53, 65, 78, 79, 81, 90, 116, 117, 119, 127, 131, 134, 143, 155, 166, 180, 182, 183, 184, 186, 189, 193, 195, 196, 200, 254, 260, 263, 270, 315, 318, 359, 362, 371, 372, 374, 382, 383, 387, 395, 396, 428, 429, 432, 434, 435, 438, 444, 445, 446, 448, 451, 455, 459, 461, 464, 466, 469, 483, 489, 491, 498, 550, 555], "assumpt": [70, 90, 97, 100, 104, 105, 112, 126, 134, 373, 383, 498, 502, 554], "astri": 92, "astrisim": 372, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 120, 176, 183, 184, 186, 195, 196, 243, 261, 359, 360, 371, 378, 379, 383, 388, 402, 411, 415, 419, 421, 425, 434, 455, 459, 461, 468, 482, 483, 485, 486, 487, 490, 552], "astro_dark_matt": [379, 427, 455, 467], "astromodel": 481, "astronom": [13, 373, 380, 418, 552], "astronomi": [11, 264, 358, 369, 373, 377, 389, 396, 417, 429, 432, 438, 442, 460, 468, 493, 502, 503, 550, 551, 552, 553, 554, 555, 557, 558], "astrophys": [6, 23, 292, 374, 493, 551, 552], "astropi": [13, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 64, 79, 81, 82, 83, 84, 85, 86, 87, 89, 91, 97, 100, 104, 105, 109, 111, 112, 117, 119, 121, 123, 124, 127, 132, 133, 140, 142, 151, 153, 166, 180, 183, 184, 186, 189, 191, 192, 193, 194, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 224, 225, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 248, 249, 251, 252, 253, 254, 257, 259, 261, 262, 264, 286, 287, 288, 318, 335, 336, 345, 349, 350, 354, 358, 360, 361, 362, 364, 365, 366, 370, 372, 373, 374, 376, 377, 378, 379, 380, 382, 383, 385, 386, 387, 388, 395, 396, 398, 402, 403, 404, 405, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 477, 478, 479, 483, 485, 486, 487, 489, 490, 491, 493, 495, 497, 500, 502, 503, 504, 505, 506, 510, 511, 512, 513, 514, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 554, 557], "astropy_healpix": 368, "astropy_help": [359, 400, 401, 402], "astropy_introduct": 401, "astropy_timeseri": 374, "astropy_vers": 359, "astropydeprecationwarn": 444, "astyp": [83, 86], "asymmetr": [116, 120, 121, 124, 125, 127, 377, 400, 406, 425, 466, 477, 491, 511], "asymmetri": 459, "asymptot": [555, 556], "atmospher": [374, 391, 396, 468], "atnf": 418, "atol": [82, 95, 124, 188, 193, 334, 336, 359], "atol_ax": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196], "atom": 375, "atproduction_gamma": 26, "atreye": [371, 374, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 89, 211, 219, 233, 248, 258, 370, 380, 423, 452, 458, 463, 464, 553], "attempt": [16, 80, 99, 118, 362, 373, 376], "attr": 359, "attract": 379, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 273, 288, 369, 371, 381, 386, 387, 400, 401, 404, 405, 406, 407, 410, 412, 414, 416, 418, 423, 424, 425, 430, 434, 444, 458, 460, 461, 462, 464, 479, 489, 505, 506, 555], "attributeerror": 359, "attrribut": 461, "aug": [372, 375, 376, 378, 397], "august": [366, 372, 375, 378, 442], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388], "authoris": 385, "authorship": 363, "auto": [183, 184, 186, 195, 196, 360, 362, 370, 379, 405, 419, 458, 553], "autodiff": 377, "autogener": 379, "autograd": [370, 377], "autom": [11, 367, 375, 385, 388, 389, 412, 458, 553], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 99, 107, 118, 120, 124, 153, 156, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 358, 359, 360, 362, 366, 367, 369, 370, 376, 379, 381, 385, 388, 399, 400, 406, 434, 442, 444, 458, 461, 553, 557], "automatis": 492, "autopep8": 359, "autoscal": [201, 202, 203, 204], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 65, 68, 70, 74, 79, 83, 84, 86, 96, 97, 100, 104, 105, 116, 117, 119, 120, 124, 125, 127, 136, 157, 163, 169, 170, 200, 201, 203, 207, 208, 212, 213, 220, 223, 235, 237, 245, 246, 250, 256, 258, 260, 264, 312, 347, 359, 362, 365, 366, 367, 368, 370, 371, 372, 373, 376, 377, 379, 386, 389, 390, 391, 392, 393, 394, 400, 404, 405, 406, 410, 413, 417, 419, 421, 424, 432, 433, 436, 458, 460, 462, 464, 468, 469, 473, 477, 479, 481, 483, 484, 490, 492, 493, 495, 496, 497, 499, 507, 519, 551, 553, 555], "available_hdu": 84, "available_irf": 84, "available_method": [160, 169], "available_quant": [117, 119], "available_select": [163, 170], "averag": [19, 97, 100, 104, 105, 163, 170, 173, 174, 176, 177, 410, 429, 432, 489, 552], "averageaz": [444, 445], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 116, 163, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 359, 360, 365, 366, 367, 369, 373, 377, 378, 381, 382, 384, 385, 387, 410, 412, 421, 423, 424, 462, 466, 490, 502, 553], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 272, 273], "awar": [359, 364, 371, 379, 385], "ax": [16, 19, 20, 26, 64, 65, 79, 96, 97, 100, 104, 105, 106, 107, 108, 110, 116, 117, 119, 121, 122, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 170, 173, 174, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 272, 273, 346, 347, 351, 352, 353, 354, 355, 356, 359, 368, 378, 401, 405, 410, 416, 417, 418, 421, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 469, 470, 477, 478, 479, 489, 491, 493, 495, 500, 502, 503, 504, 505, 510, 511, 512, 516, 519, 547, 548, 552], "ax1": [428, 436, 438, 442, 453, 462, 463], "ax2": [428, 436, 438, 442, 453, 462, 463], "ax3": [436, 442], "ax_crab_3fhl": 479, "ax_ebl": 519, "ax_excess": [429, 432], "ax_model": 519, "ax_residu": [96, 104, 105, 429, 432, 433, 434, 453, 477], "ax_s": [433, 477], "ax_spati": [97, 100, 104, 105], "ax_spectr": [97, 100, 104, 105], "ax_spectrum": [96, 104, 105, 429, 432, 433, 434, 453], "ax_sqrt_t": [429, 432], "axcols1": 461, "axcols2": 461, "axel": [368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "axes0": [183, 184, 186, 192, 195, 196], "axes_loc": [137, 138, 140, 143, 144, 145, 150, 152, 154, 196, 347], "axes_nam": [182, 183, 184, 186, 191, 192, 194, 195, 196], "axesimag": [347, 348], "axesn": [183, 184, 186, 192, 195, 196], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 79, 95, 96, 97, 100, 104, 105, 106, 107, 108, 110, 112, 116, 117, 119, 120, 121, 123, 124, 127, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 233, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 258, 259, 261, 262, 268, 272, 273, 277, 278, 279, 299, 300, 310, 347, 352, 353, 354, 355, 365, 368, 381, 383, 402, 405, 406, 407, 410, 412, 417, 419, 420, 421, 424, 428, 429, 433, 434, 435, 437, 438, 440, 442, 444, 445, 446, 448, 449, 451, 452, 456, 457, 459, 460, 461, 468, 469, 470, 477, 478, 479, 489, 491, 493, 497, 502, 505, 506, 548, 552], "axis0": 505, "axis1": 461, "axis2": 461, "axis_edg": 352, "axis_nam": [96, 97, 100, 104, 105, 117, 119, 128, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 446, 450, 451, 452, 457], "axis_new": [119, 135, 449, 451], "axis_origin": 449, "axis_rgb": 354, "axis_tru": 442, "axisymmetr": 425, "axvlin": [435, 455, 465, 466], "axvspan": [192, 453], "az": [79, 81, 84, 89, 90, 359, 557], "azimuth": 469, "azur": 406, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 80, 83, 86, 99, 118, 143, 200, 327, 359, 360, 373, 382, 385, 443, 455, 456, 458, 461, 462, 464, 469, 479, 485, 489, 506], "b1509": 456, "b_0": [510, 511], "b_1": [83, 86], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 86, 184, 300, 362, 369, 370, 373, 379, 432, 433, 435, 461, 464, 477, 553], "backend": [88, 96, 114, 120, 121, 124, 125, 127, 159, 200, 270, 303, 308, 309, 358, 368, 370, 400, 419, 420, 424, 429, 430, 432, 433, 434, 440, 441, 442, 453, 458, 469, 477, 478, 550, 551], "backend_default": [121, 124, 127], "background": [16, 65, 78, 79, 84, 88, 97, 98, 100, 101, 103, 104, 105, 107, 108, 112, 116, 117, 119, 126, 137, 138, 139, 149, 158, 160, 161, 163, 164, 165, 166, 168, 169, 170, 176, 213, 219, 258, 265, 272, 273, 281, 282, 283, 284, 285, 355, 359, 365, 368, 371, 372, 373, 375, 379, 380, 383, 391, 396, 399, 400, 401, 403, 404, 405, 406, 407, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 427, 428, 429, 432, 433, 434, 435, 436, 437, 439, 440, 442, 445, 446, 448, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 466, 470, 471, 473, 478, 489, 491, 492, 505, 551, 552, 553, 555, 556], "background2d": [138, 139, 149, 406, 413, 421, 423, 425, 496], "background3d": [84, 137, 149, 176, 365, 406, 410, 418, 419, 420, 459, 468, 496], "background_estim": 378, "background_interp_missing_data": 163, "background_map": [258, 370], "background_min": 136, "background_model": [97, 100, 104, 105, 127, 371, 372, 379, 381, 406, 437, 478, 496], "background_oversampl": [163, 170, 460], "background_pad_offset": 163, "background_r": [378, 457], "backgroundconfig": 16, "backgroundestim": [374, 404], "backgroundevalu": 370, "backgroundirf": [137, 138], "backgroundirfmodel": 381, "backgroundmodel": [371, 381, 382, 403, 405, 406, 407, 410], "backgroundtempl": 370, "backport": [366, 384, 388], "backround": 368, "backscal": 192, "backward": [359, 364, 373, 382, 383, 384, 402, 491], "bad": [82, 359, 373], "badli": 389, "balanc": 489, "band": [19, 20, 26, 66, 79, 85, 114, 117, 119, 122, 141, 142, 145, 148, 153, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 365, 377, 378, 382, 383, 391, 399, 430, 432, 433, 441, 442, 443, 453, 455, 456, 464, 469, 471, 488, 489, 491, 551], "bandshdu": 461, "banner": 389, "bar": [15, 78, 83, 86, 97, 100, 104, 105, 112, 124, 127, 137, 138, 196, 200, 221, 279, 309, 353, 376, 410, 413, 414, 420, 425, 453, 466, 493, 526], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 273, 287, 296, 297, 300, 306, 308, 310, 333, 346, 354, 359, 360, 362, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 382, 387, 389, 391, 392, 399, 401, 402, 404, 406, 407, 410, 412, 415, 416, 417, 418, 419, 425, 432, 434, 435, 437, 440, 441, 442, 443, 444, 446, 449, 453, 456, 459, 461, 462, 464, 465, 466, 468, 469, 478, 479, 481, 490, 491, 493, 503, 505, 517, 527, 551, 552, 554, 555], "base_dir": [78, 83, 296, 468, 470, 471, 481], "baselin": [78, 79, 226, 468], "basement": 401, "basemodel": [16, 80, 99, 118, 386], "baseradi": 234, "bash": [391, 393, 553], "basi": [364, 365, 375, 378, 388, 412, 414, 453, 455], "basic": [45, 46, 65, 69, 70, 71, 72, 73, 74, 75, 76, 100, 105, 119, 225, 362, 365, 369, 370, 371, 372, 373, 375, 379, 383, 386, 395, 407, 417, 419, 427, 429, 432, 434, 447, 449, 450, 455, 456, 462, 473, 479, 481, 483, 484, 489, 490, 491, 501, 502, 505, 550, 552, 553], "basicconfig": [16, 442, 475], "bayesian": 377, "bayesian_block": 449, "bayesian_edg": 449, "baysian": 368, "bb": [83, 86, 385], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [138, 142, 143, 144, 153, 428, 435, 448, 452, 459, 468], "becam": 366, "becaus": [16, 80, 99, 118, 183, 184, 186, 190, 192, 195, 196, 359, 360, 362, 364, 366, 370, 371, 373, 374, 378, 382, 383, 386, 389, 410, 412, 429, 430, 433, 446, 451, 453, 460, 461, 462, 463, 468, 469, 470, 477, 478, 479, 489, 493, 553, 556], "becom": [359, 367, 369, 370, 373, 378, 386, 444, 451, 464, 493, 553, 556], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 95, 99, 116, 118, 155, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 288, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 390, 392, 406, 407, 410, 412, 413, 419, 420, 421, 422, 423, 424, 425, 433, 443, 451, 452, 453, 461, 464, 465, 468, 470, 477, 490, 538, 557], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 80, 83, 86, 87, 95, 99, 117, 118, 183, 184, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 300, 354, 359, 360, 362, 364, 366, 367, 368, 369, 373, 374, 375, 377, 378, 384, 388, 389, 395, 413, 419, 433, 435, 450, 451, 458, 461, 464, 470, 473, 477, 529, 553], "begin": [52, 83, 86, 97, 104, 117, 119, 127, 379, 382, 385, 432, 434, 461, 464, 510, 515, 516, 520, 536, 555], "behav": [359, 369, 424, 437, 556], "behavior": [16, 80, 83, 86, 90, 99, 118, 383, 409, 413, 424, 470], "behaviour": [334, 359, 381, 382, 407, 412, 418, 425, 451, 462, 469, 489, 554], "being": [116, 126, 184, 359, 364, 367, 373, 380, 383, 389, 434, 443, 449, 462, 466, 482, 506, 553], "belief": 466, "believ": [394, 466], "belong": [82, 383, 406], "below": [52, 53, 83, 86, 182, 186, 193, 194, 348, 349, 350, 354, 356, 360, 362, 363, 368, 369, 373, 375, 376, 379, 382, 383, 385, 386, 387, 389, 390, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 432, 436, 453, 456, 458, 460, 462, 464, 465, 466, 468, 469, 490, 493, 511, 555], "benchmark": [375, 385, 389], "benefit": 376, "benn": 375, "berg": 552, "berge2007": [373, 502, 503, 552], "bernet": 425, "besancon": 483, "besid": [116, 127, 373, 374, 383, 433, 434, 461, 469, 477, 478, 506], "best": [65, 69, 71, 72, 74, 76, 96, 117, 119, 120, 121, 124, 125, 132, 270, 272, 273, 352, 359, 362, 369, 372, 377, 385, 391, 393, 430, 432, 433, 434, 437, 440, 443, 453, 456, 458, 466, 477, 491, 493, 495, 519, 525, 528, 529, 533, 555, 556, 557], "best_fit_model": 434, "beta": [27, 28, 48, 226, 227, 228, 249, 382, 384, 406, 430, 434, 441, 456, 458, 521, 527, 528, 529, 534, 544], "better": [359, 362, 364, 365, 366, 367, 368, 372, 373, 378, 379, 380, 383, 400, 417, 418, 440, 441, 444, 453, 458, 461, 462, 469, 489], "between": [19, 20, 26, 65, 83, 84, 86, 89, 100, 105, 114, 121, 122, 124, 132, 133, 144, 150, 152, 153, 154, 156, 166, 180, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 264, 270, 285, 318, 349, 350, 357, 359, 360, 367, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 383, 384, 386, 387, 397, 407, 410, 413, 424, 428, 434, 436, 441, 443, 446, 449, 452, 453, 458, 460, 461, 462, 463, 466, 469, 470, 479, 489, 491, 498, 499, 502, 511, 512, 552, 555, 557], "bewar": [259, 429, 451], "bexcub": 187, "bexpcub": [182, 183, 184, 186, 195, 196, 461], "beyond": [187, 373, 383, 386, 406, 460, 481], "bfg": 458, "bgstat": 416, "bi": [417, 420], "bia": [91, 140, 141, 145, 169, 418, 424, 460, 466, 497], "bias": [434, 554], "bias_energi": 140, "bias_perc": 169, "bibliographi": 552, "biederbeck": [387, 425], "big": [366, 369, 376, 388, 420, 469, 554, 556], "bigger": 184, "biggest": 378, "billion": 359, "bimod": 31, "bin": [79, 82, 84, 97, 100, 103, 104, 105, 107, 112, 114, 116, 117, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 134, 135, 136, 140, 141, 143, 145, 151, 153, 155, 156, 163, 165, 166, 167, 169, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 208, 210, 211, 212, 218, 220, 222, 223, 224, 225, 226, 233, 235, 237, 241, 245, 246, 247, 248, 250, 256, 258, 259, 260, 262, 266, 274, 280, 285, 352, 354, 357, 365, 370, 371, 372, 373, 375, 378, 379, 383, 390, 391, 401, 402, 404, 405, 407, 409, 410, 412, 415, 416, 417, 418, 419, 424, 425, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 489, 491, 493, 497, 501, 551, 552, 553, 554, 556], "bin_cent": 453, "bin_edg": 453, "bin_volum": [187, 191, 194, 506], "bin_width": [185, 188, 193, 453], "binari": [194, 196, 367, 373, 376, 385, 389, 410], "binary_dil": [196, 462], "binary_erod": [196, 462], "binary_eros": [196, 410], "binary_structur": 194, "bind": 362, "binder": [367, 388, 418, 421, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "binlik": 119, "binned_likelihood": 120, "binneddataaxi": [401, 417], "binnedtimeseri": [119, 374], "bins_axi": 196, "binsiz": [16, 433, 437, 438, 440, 450, 477, 478], "binsize_irf": [16, 433, 437, 438, 440, 450, 477], "binsz": [97, 100, 104, 105, 106, 110, 142, 151, 153, 163, 166, 167, 171, 182, 183, 184, 186, 191, 192, 194, 195, 196, 375, 432, 442, 443, 444, 445, 448, 453, 455, 457, 459, 460, 461, 462, 464, 469, 470, 478, 500, 502, 503, 505, 506, 509, 511, 512, 513, 514], "binsz_irf": [97, 100, 104, 105, 108, 457, 460, 493], "binsz_irf_default": [97, 100, 104, 105, 460], "binsz_wc": [191, 192], "bintabl": [182, 183, 184, 186, 195, 196], "bintablehdu": [79, 82, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 187, 188, 194, 195, 196, 444, 461, 489], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [79, 132, 360, 362, 366, 367, 373, 377, 378, 386, 453, 461, 506], "bitpix": 461, "bkg": [16, 78, 83, 84, 97, 101, 102, 104, 105, 137, 138, 139, 169, 176, 219, 381, 405, 407, 412, 428, 432, 433, 437, 438, 440, 441, 444, 445, 448, 453, 457, 459, 460, 463, 468, 470, 471, 477, 478, 489, 496, 552, 554, 555, 556], "bkg_": [97, 104], "bkg_2d": [83, 137], "bkg_3d": [78, 83, 138, 468, 471], "bkg_err": 453, "bkg_maker": [381, 429, 432, 434, 442, 451, 502], "bkg_model": [371, 381, 387, 440, 444, 445, 448, 463, 478, 513], "bkg_ob": 101, "bkg_sy": 126, "bkg_syst_fract": [126, 428], "bkg_syst_fraction_sensit": 116, "bkgfile": 101, "black": [104, 105, 348, 349, 356, 377, 419, 421, 428, 453, 455, 460, 465, 502], "blackground": 428, "blanch": [418, 419], "blanklin": [225, 395, 491, 506], "blind": [421, 493], "bll": 479, "blob": 398, "block": [360, 362, 365, 372, 379, 389, 398, 418, 553], "block_reduc": 419, "blue": [96, 97, 100, 104, 105, 349, 432, 438, 440, 443, 465, 502], "blur": 33, "board": [368, 379], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 359, "boller": 449, "boni": [410, 413], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 76, 78, 79, 80, 82, 83, 84, 86, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 116, 117, 118, 119, 120, 124, 125, 127, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 170, 173, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 256, 257, 258, 259, 260, 285, 288, 297, 300, 318, 326, 328, 330, 356, 359, 373, 442, 456, 460, 461], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 117, 120, 121, 124, 125, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 200, 211, 233, 248, 375, 407, 440, 456, 461, 462, 463], "boost": 444, "bootstrap": [83, 86], "border": 86, "bose": 401, "bot": 365, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 68, 78, 79, 82, 83, 84, 86, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 180, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 201, 203, 359, 364, 365, 370, 371, 372, 373, 374, 379, 384, 388, 400, 404, 406, 407, 410, 413, 433, 434, 444, 448, 457, 461, 462, 463, 465, 466, 490, 491, 493, 505, 506, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 555], "bother": 437, "bottom": [379, 381, 444, 450, 452, 456], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 188, 191, 193, 200, 205, 206, 209, 210, 211, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 233, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 258, 259, 261, 262, 284, 368, 461, 466], "boundari": [194, 260, 387, 415, 458, 464, 505], "boundary_mask": [194, 462], "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 359, 459], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 97, 100, 121, 122, 191, 194, 196, 320, 321, 368, 373, 377, 383, 417, 462, 464, 506], "bpl": [205, 382, 464], "bpwl_norm": 382, "bracket": [140, 200, 422, 424], "brake": 51, "branch": [359, 362, 366, 373, 384, 389, 398], "branchnam": 359, "bratio": 481, "break": [205, 249, 365, 373, 375, 384, 404, 405, 406, 520, 534], "brent": 436, "brentq": [19, 20, 26, 119, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 271], "breviti": [440, 493], "brief": 557, "briefli": [470, 471], "bright": [66, 121, 248, 263, 438, 450, 451, 462, 464, 487, 502], "brighter": 444, "brightest": 456, "brigitta": [376, 400, 402, 404, 406, 415, 416, 417, 418, 419, 420, 421], "bring": 364, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 183, 184, 186, 189, 192, 195, 196, 248, 300, 445, 459, 461, 505], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [205, 249, 385, 427, 507, 539], "brokenpowerlaw": 382, "brokenpowerlawspectralmodel": [243, 249, 382, 407, 464, 520], "brown": [128, 449], "brown2013": 128, "brows": [83, 86, 360, 395, 479], "browser": [83, 86, 362, 389, 395, 415, 418, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 477, 478, 479, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "bruno": [385, 402, 404, 407, 410, 413, 417, 418, 419, 421, 422, 423, 424, 425], "br\u00fcgge": [418, 419], "bsd": 385, "bst": [83, 86], "buchner": 410, "budget": 493, "buffer": 337, "bug": [359, 362, 365, 366, 384, 385, 388, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 422, 423], "bugfix": [366, 368, 384, 417, 418], "build": [16, 80, 99, 118, 182, 213, 359, 365, 366, 367, 372, 373, 375, 379, 383, 384, 385, 386, 388, 406, 412, 421, 436, 440, 453, 460, 462, 490, 493, 553], "build_doc": [324, 360, 362, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 517, 525, 528, 541], "built": [10, 170, 213, 327, 343, 358, 359, 360, 370, 371, 373, 375, 376, 378, 386, 389, 396, 419, 424, 456, 463, 469, 473, 489], "builtin": 479, "bullet": 364, "bump": [373, 417], "bunch": [98, 103, 360, 553], "bundl": [96, 97, 100, 104, 105, 368, 371, 389, 411, 419, 442, 457, 460, 489, 506, 551, 552], "bunit": [345, 419, 461], "bureaucrat": 364, "burkert": [17, 481], "burst": 449, "butterfli": [418, 458, 479], "button": [421, 461], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 80, 99, 118], "byte": [16, 80, 83, 86, 99, 118, 306, 337, 359], "bytearrai": [16, 80, 99, 118, 306], "bytestr": [83, 86], "b\u00fchler": 398, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 83, 86, 189, 199, 215, 252, 274, 280, 288, 327, 358, 359, 376, 391, 392, 394, 411, 418, 453, 455, 458, 466, 469, 481, 505, 524, 535, 553, 554, 556], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c_": 199, "c_0": [181, 182, 191, 194], "c_i": [181, 182, 191, 194], "c_n": [181, 182, 191, 194], "cach": [83, 84, 86, 95, 97, 100, 104, 105, 258, 296, 297, 368, 369, 371, 378, 381, 389, 403, 407, 410, 425], "cahil": 412, "cal_gen_92_002": [140, 188], "cal_gen_92_002_summari": 140, "calcul": [13, 15, 19, 20, 26, 91, 100, 105, 128, 129, 130, 169, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 244, 249, 251, 252, 253, 254, 257, 260, 261, 276, 278, 279, 285, 287, 310, 341, 349, 350, 369, 372, 400, 406, 410, 411, 412, 418, 423, 425, 428, 449, 453, 455, 466, 477, 478, 481, 493, 552, 556], "caldb": [78, 138, 140, 142, 143, 144, 153, 188, 412, 428, 435, 444, 445, 448, 452, 459, 468], "calendar": [384, 388], "calib_vers": [469, 479], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 82, 83, 86, 96, 97, 99, 100, 104, 105, 118, 128, 129, 130, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 165, 181, 182, 191, 194, 200, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 300, 312, 331, 337, 345, 348, 356, 359, 360, 362, 364, 365, 368, 371, 372, 373, 374, 375, 377, 379, 381, 383, 385, 387, 389, 391, 395, 406, 410, 424, 432, 433, 442, 456, 457, 458, 460, 461, 464, 469, 471, 477, 478, 479, 489, 493, 502, 503, 504, 505, 506, 553, 554, 555, 556], "callabl": [16, 45, 80, 99, 118, 266], "callback": [159, 553], "caller": [359, 370], "camera": [452, 459, 460], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 65, 66, 67, 78, 79, 80, 83, 86, 88, 97, 99, 100, 103, 104, 105, 108, 112, 117, 118, 119, 124, 125, 127, 132, 138, 143, 151, 153, 156, 160, 166, 169, 181, 182, 183, 184, 186, 188, 189, 191, 192, 193, 194, 195, 196, 198, 200, 202, 204, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 220, 221, 223, 225, 227, 228, 230, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 271, 277, 288, 300, 301, 306, 309, 318, 335, 337, 352, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 406, 407, 410, 412, 413, 417, 418, 419, 420, 421, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 477, 478, 479, 481, 483, 484, 489, 490, 491, 493, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 527, 529, 538, 548, 550, 551, 552, 553, 554, 555, 556], "candel": 213, "candid": [384, 412, 456], "candl": [264, 552], "cannot": [16, 65, 80, 83, 86, 90, 99, 107, 117, 118, 119, 198, 280, 327, 356, 362, 372, 373, 424, 459, 463, 464, 491, 506], "cap": [51, 54], "capabl": [369, 469, 481], "capsiz": 466, "captur": [359, 375], "car": [97, 100, 104, 105, 163, 194, 195, 196, 211, 233, 373, 402, 442, 459, 460, 461, 478, 479], "card": [79, 82, 84, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196, 461], "care": [288, 359, 368, 375, 384, 429, 434, 440, 461, 553], "carefulli": [385, 444, 445, 466], "carina": [33, 38], "carlo": [377, 498], "carri": [374, 382, 384, 386, 410, 430, 478], "carr\u00e9": 194, "cartesian": [41, 46, 184, 195, 196, 291, 293, 423, 479, 505], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 67, 79, 83, 86, 140, 159, 171, 182, 184, 190, 191, 194, 196, 200, 201, 203, 223, 234, 256, 258, 260, 271, 280, 301, 318, 354, 359, 360, 362, 364, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 391, 399, 400, 403, 406, 412, 413, 418, 424, 425, 428, 429, 432, 433, 434, 435, 437, 438, 440, 444, 445, 448, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 471, 473, 477, 479, 488, 491, 492, 493, 503, 506, 510, 511, 512, 515, 516, 520, 529, 536, 551, 553, 555], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [97, 100, 104, 105, 163, 275, 280, 359, 371, 410, 435, 437, 440, 448, 452, 457, 460, 463, 466, 477, 478, 489, 552], "cash1979": [552, 555], "cashcountsstatist": [395, 425, 553, 555], "cast": 86, "cat": [64, 65, 75, 367, 389, 417, 418, 430, 456, 464, 488, 552, 553], "catalof": 67, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 116, 120, 373, 379, 398, 402, 404, 406, 410, 411, 412, 415, 416, 417, 418, 419, 421, 425, 427, 430, 436, 441, 457, 464, 467, 469, 473, 483, 517, 551, 552], "catalog_3fgl": 430, "catalog_3fhl": [430, 456], "catalog_3fhl_bright": 456, "catalog_4fgl": 456, "catalog_4fgl_roi": 456, "catalog_gammacat": [430, 456], "catalog_hgp": 456, "catalog_registri": [430, 456, 462], "catalogimageestim": 419, "catalogu": [74, 410, 417], "catch_warn": 493, "categori": [359, 370, 383, 410, 462, 464, 507], "caus": [366, 373, 419, 422, 493], "cautious": 443, "caveat": [200, 425, 511], "cax": 459, "cb98": 48, "cbar": 347, "cbar_kw": 353, "cbarlabel": 353, "cc": [368, 373, 375, 378, 380, 382, 385, 387], "ccube": [182, 183, 184, 186, 187, 188, 194, 195, 196, 461], "cd": [359, 360, 362, 375, 391, 392, 393], "cdelt": [194, 196], "cdelt1": 461, "cdelt2": 461, "cdf": [310, 372, 444, 458], "cdot": [51, 52, 53, 54, 97, 104, 238, 252, 382, 464, 489, 510, 515, 516, 520, 523, 524, 531, 532, 534, 535, 536, 537, 542, 543, 544, 546, 554], "celesti": [461, 505, 510, 514, 557], "celfix": 517, "cell": [367, 395, 421, 441, 453, 461, 468, 469, 479], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 79, 83, 86, 91, 97, 100, 104, 105, 117, 119, 121, 122, 123, 127, 140, 141, 142, 143, 144, 145, 148, 152, 153, 154, 156, 163, 166, 167, 169, 170, 171, 173, 174, 176, 177, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 258, 260, 290, 294, 320, 359, 360, 373, 375, 382, 383, 400, 401, 410, 412, 425, 428, 429, 432, 434, 435, 436, 437, 438, 440, 442, 444, 445, 446, 451, 452, 453, 455, 459, 460, 461, 462, 463, 464, 468, 469, 478, 479, 495, 496, 497, 498, 499, 500, 502, 503, 505, 506, 510, 511, 514], "center_coord": [181, 182, 187, 191, 194], "center_pix": [181, 182, 191, 194], "center_ski": 506, "center_skydir": [181, 182, 191, 194, 460, 461, 469, 470, 500, 502, 503], "centr": [455, 462, 481], "central": [371, 380, 430, 479], "cern": 481, "certain": [50, 79, 83, 86, 200, 277, 358, 373, 375, 377, 383, 428, 455, 460, 461, 469, 488, 506], "certainli": 362, "certif": 385, "certifi": 385, "cfa": [200, 458], "cff": 388, "cg": 485, "ch": 53, "chain": [159, 372, 375, 404, 460, 493, 503], "chainer": 377, "chakraborti": [416, 417], "challeng": [366, 368, 372, 417, 438, 440, 442, 468], "chanc": 364, "changchangelog": [359, 388, 411, 419], "channel": [19, 20, 26, 358, 361, 362, 376, 418, 445, 455, 461, 471, 481], "channel0": 481, "channel1": 481, "channel_registri": [19, 20, 26], "chapter": 455, "charact": [83, 86, 359, 463], "character": [279, 383, 444], "characterist": [21, 25, 27, 51, 52, 53, 54, 128, 277, 370, 424, 449, 552], "charg": [385, 529], "chatti": [359, 442], "cheat": 394, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 82, 83, 84, 86, 97, 100, 101, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 202, 204, 211, 233, 248, 333, 335, 362, 375, 381, 385, 388, 389, 391, 392, 393, 396, 405, 410, 418, 430, 448, 459, 473, 481, 493, 497, 506, 550, 553, 554], "check_limit": [201, 202, 203, 204], "check_random_st": 359, "check_tutorials_setup": [428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "checker": [416, 419], "checklist": 389, "checkout": [359, 362, 401, 440, 444, 464], "checksum": [79, 82, 84, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196, 211, 233, 326, 328, 425, 441, 469], "chen": 419, "cherenkov": [143, 372, 391, 396, 429, 432, 438, 450, 460, 468, 470, 502, 503, 552], "cherri": [359, 366, 373, 384], "chi": [276, 374, 554, 555, 556], "chi2": [96, 134, 371, 401, 443, 452, 458, 489, 555], "chi2assym": 404, "child": 369, "children": [440, 448, 461, 477, 478], "chime": 362, "chisq": 276, "chisquar": 276, "chmod": 553, "choic": [372, 376, 378, 385, 432, 433, 435, 437, 458, 470, 477, 494, 550, 553], "choos": [45, 181, 182, 185, 187, 188, 191, 194, 261, 302, 359, 371, 373, 375, 379, 391, 410, 430, 432, 436, 440, 442, 452, 457, 458, 460, 461, 463, 464, 465, 469, 478, 493, 553], "chose": [444, 469, 470, 555, 557], "chosen": [26, 140, 153, 156, 182, 183, 184, 192, 195, 196, 211, 220, 233, 359, 362, 374, 375, 378, 433, 451, 460, 461, 465, 466, 470, 477, 491, 501, 502, 506], "christoph": [364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 398, 399, 400, 401, 402, 403, 404, 405, 411, 414, 415, 416, 417, 418, 419, 420], "chrome": [83, 86], "chromei": 412, "chunk": [142, 153, 156], "chunk_siz": [142, 153, 156], "ci": [359, 362, 366, 385, 389, 404, 410, 412, 415, 421], "circl": [79, 171, 356, 360, 373, 412, 432, 442, 452, 455, 460, 462, 465, 468, 478, 479, 490, 500, 502, 503, 506], "circle_area": 360, "circleannulusskyregion": [245, 246, 502], "circledast": 489, "circlepixelregion": 373, "circleskyregion": [97, 100, 104, 105, 165, 166, 170, 194, 212, 360, 373, 428, 429, 432, 434, 435, 438, 440, 442, 444, 445, 451, 455, 457, 460, 462, 463, 478, 500, 502, 503, 506], "circular": [86, 97, 100, 170, 182, 184, 194, 370, 378, 380, 429, 434, 457, 465, 502, 506], "circumv": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "cirelli": [26, 481], "citat": 388, "cite": [362, 385], "cl": [16, 80, 97, 99, 104, 118, 386], "clabel": 458, "clang": 395, "clarif": 364, "clarifi": [383, 424], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 272, 273, 296, 297, 300, 308, 310, 333, 346, 362, 365, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 387, 391, 395, 398, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 430, 432, 433, 434, 435, 436, 437, 438, 442, 444, 445, 448, 450, 453, 456, 457, 458, 459, 460, 461, 464, 466, 468, 469, 470, 477, 479, 484, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 501, 503, 504, 505, 506, 507, 529, 538, 550, 551, 552, 553, 558], "class1": 456, "class2": 456, "classic": [368, 377, 391, 400, 429, 432, 438, 442, 457, 460, 491, 493, 502, 503, 552, 555], "classifi": 470, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 95, 96, 97, 99, 100, 104, 105, 117, 118, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 386], "classproperti": 410, "classvar": [16, 80, 99, 118], "claudio": [423, 425], "claus": [359, 385], "clean": [359, 360, 362, 367, 368, 373, 375, 377, 398, 400, 401, 402, 403, 404, 405, 406, 407, 410, 417, 418, 419, 420], "cleaner": 421, "cleanup": [366, 378, 389, 398, 403, 404, 409, 410, 411, 415, 416, 418], "clear": [87, 95, 190, 233, 359, 364, 366, 370, 373, 374, 378, 379, 380, 418, 443, 557], "clearer": 403, "clearli": [128, 359, 364, 365, 373, 376, 384], "cli": [11, 375, 420, 551], "click": [358, 375, 376, 395, 403, 418, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 553], "clip": [19, 20, 26, 181, 182, 185, 187, 188, 191, 193, 194, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 260, 261, 300, 403, 404, 436], "clockwis": [212, 220, 223, 510], "clone": [362, 392, 419], "close": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 260, 334, 335, 336, 368, 373, 388, 413, 424, 425, 458, 538], "closer": 479, "closest": [112, 116, 120, 124, 127, 182, 183, 184, 186, 192, 195, 196, 462, 491], "cloud": [389, 473], "cluster": [6, 91, 286, 287, 372, 424, 425, 427, 467, 473, 490, 493], "clutter": [440, 493], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 65, 96, 119, 125, 127, 205, 209, 215, 217, 221, 228, 231, 238, 240, 248, 249, 252, 253, 254, 263, 344, 370, 382, 429, 430, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 448, 452, 453, 455, 456, 458, 464, 466, 468, 469, 477, 479, 486, 487, 491, 493, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552], "cm2": [51, 54, 65, 102, 119, 133, 143, 196, 264, 344, 428, 430, 433, 435, 436, 440, 441, 442, 444, 445, 448, 450, 451, 452, 453, 455, 456, 457, 461, 463, 464, 466, 469, 477, 478, 479, 491, 506, 522, 525, 528, 533, 538], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 455], "cm5": 455, "cmap": [97, 100, 104, 105, 349, 350, 434, 440, 455, 461, 463, 469, 470, 477, 478, 502], "cmb": 529, "co": [53, 189, 384, 385, 428, 510, 511, 512], "coadd": [183, 184, 186, 192, 195, 196], "coars": 457, "coarser": [188, 193, 457], "codaci": 389, "codata": 52, "code": [19, 20, 26, 78, 79, 83, 86, 140, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 354, 362, 363, 364, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 392, 395, 398, 401, 402, 404, 405, 406, 407, 410, 412, 415, 416, 417, 418, 419, 421, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 481, 493, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 553], "codebas": [360, 376, 398, 417, 419], "codemeta": 412, "codespel": 410, "codestyl": 362, "coeffici": [122, 226, 230, 519], "coerce_numbers_to_str": 99, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coincid": 449, "col": [83, 86, 410], "col0": [83, 86], "col1": [83, 86], "col2": [83, 86], "col_b": [83, 86], "col_c": [83, 86], "col_d": [83, 86], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 353, "collabor": [349, 350, 364, 366, 368, 372, 412, 443, 469, 552], "colleagu": [362, 553], "collect": [190, 233, 359, 361, 386, 389, 417, 418, 433, 457, 463, 481, 490, 494, 498, 552, 557], "collis": 50, "colnam": [83, 86, 183, 184, 186, 192, 195, 196, 469, 479], "color": [96, 104, 105, 137, 138, 196, 348, 349, 350, 353, 356, 360, 428, 430, 432, 433, 434, 435, 436, 438, 440, 442, 443, 446, 450, 453, 455, 458, 460, 463, 465, 466, 493, 502, 506, 510, 511, 529], "colorbar": [119, 137, 138, 140, 143, 144, 145, 150, 151, 152, 154, 196, 347, 353, 458, 461], "colorblind": 493, "colorblind10": 493, "colormap": [348, 349, 350, 398, 411, 479], "colormap_hess": [380, 558], "colormap_milagro": 558, "colour": 421, "column": [41, 43, 44, 46, 47, 56, 79, 83, 86, 98, 103, 117, 119, 122, 132, 137, 138, 140, 164, 183, 184, 185, 186, 187, 188, 192, 193, 195, 196, 259, 279, 286, 329, 330, 331, 332, 352, 353, 356, 357, 359, 372, 374, 383, 421, 424, 425, 428, 444, 445, 453, 456, 461, 464, 468, 490, 493], "column_nam": 459, "column_prefix": 188, "columnclass": [83, 86], "columnspac": 356, "com": [128, 134, 315, 316, 327, 362, 379, 388, 389, 392], "combin": [94, 96, 97, 100, 104, 105, 135, 169, 177, 183, 184, 186, 191, 192, 195, 196, 206, 248, 359, 365, 369, 370, 371, 372, 373, 374, 379, 382, 391, 403, 418, 424, 430, 435, 440, 441, 448, 452, 457, 458, 459, 460, 461, 462, 464, 470, 478, 479, 481, 483, 493, 500, 505, 521, 551, 552], "combined_ev": 490, "combining_and_defin": [428, 435, 437, 440, 442, 448, 452, 468], "come": [67, 362, 365, 366, 367, 368, 369, 373, 374, 375, 376, 378, 379, 384, 386, 388, 389, 406, 407, 410, 419, 420, 424, 432, 440, 448, 464, 468, 477, 553], "comma": [69, 70, 71, 72, 73, 74, 75, 76, 456], "command": [6, 13, 89, 96, 119, 144, 150, 152, 154, 358, 360, 362, 367, 368, 370, 375, 376, 389, 390, 391, 392, 393, 394, 400, 404, 415, 418, 419, 421, 444, 492, 551], "commensur": 196, "comment": [119, 359, 360, 364, 368, 372, 373, 375, 376, 378, 380, 382, 384, 385], "commit": [359, 362, 367, 373, 384, 385, 397, 398, 421], "committe": [364, 366, 384, 385], "commod": 385, "common": [90, 358, 359, 360, 362, 364, 365, 373, 375, 379, 380, 382, 383, 385, 392, 394, 395, 410, 412, 433, 434, 446, 456, 459, 462, 464, 477, 478, 481, 488, 491, 492, 506, 511, 553], "common_irf_head": 459, "commonli": [29, 79, 373, 377, 419, 446, 481, 550, 551, 553, 555, 558], "commun": [375, 381, 385, 388, 390, 396, 471], "comp": 456, "compact": [16, 80, 83, 86, 99, 118], "compar": [83, 86, 120, 121, 124, 125, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 200, 270, 359, 373, 376, 379, 407, 423, 424, 428, 429, 432, 436, 440, 443, 446, 448, 451, 456, 458, 460, 466, 469, 477, 488, 552, 554], "comparison": [82, 83, 86, 95, 124, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 318, 415, 483], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 183, 184, 186, 195, 196, 219, 364, 366, 370, 373, 382, 384, 386, 387, 395, 398, 400, 402, 419, 425, 461, 505], "compil": [362, 411], "complain": 362, "complaint": 377, "complement": 379, "complet": [13, 16, 80, 99, 118, 318, 359, 365, 369, 370, 371, 372, 373, 376, 377, 379, 383, 384, 385, 392, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 415, 416, 417, 418, 419, 420, 440, 445, 458, 465, 473, 493, 498], "complex": [359, 360, 365, 369, 373, 374, 375, 381, 383, 395, 429, 432, 442, 445, 449, 452, 457, 461, 462, 464, 465, 469, 502], "complianc": [385, 421], "compliant": [183, 184, 186, 195, 196, 425, 552], "complic": [373, 506], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 77, 84, 97, 98, 100, 103, 104, 105, 124, 128, 155, 157, 191, 211, 233, 234, 248, 263, 370, 371, 372, 375, 381, 382, 400, 404, 406, 410, 418, 419, 433, 434, 435, 437, 440, 441, 442, 443, 444, 445, 448, 450, 451, 452, 456, 457, 463, 464, 468, 469, 477, 478, 481, 489, 491, 493, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552], "component_1": 370, "component_2": 370, "component_class": 456, "components_model": 76, "components_statu": 65, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 365, 385], "composit": [57, 68, 76, 299, 385, 417], "compound": [191, 198, 206, 319, 323, 373, 382, 427, 446, 507, 539], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 412], "compoundpixelregion": 323, "compoundskymodel": 370, "compoundskyregion": [198, 319, 323], "compoundsourcemodel": 370, "compoundspectralmodel": [243, 382, 424, 464, 469, 519, 521, 525, 528, 530, 533, 538], "compress": 367, "compris": 470, "compromis": [359, 364, 372, 466], "compton": [234, 406, 529], "compulsori": 464, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 79, 80, 82, 84, 89, 91, 95, 96, 97, 99, 100, 104, 105, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 169, 170, 172, 175, 176, 177, 178, 180, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 200, 205, 206, 209, 211, 213, 215, 216, 217, 221, 225, 227, 228, 230, 233, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 263, 264, 270, 271, 272, 273, 276, 277, 278, 279, 284, 287, 291, 292, 295, 359, 368, 369, 370, 371, 372, 373, 374, 377, 379, 380, 381, 382, 383, 387, 389, 391, 392, 396, 398, 400, 401, 402, 403, 406, 407, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 434, 436, 440, 441, 445, 446, 449, 450, 451, 453, 455, 457, 460, 463, 464, 465, 466, 469, 470, 471, 477, 479, 481, 489, 491, 493, 498, 502, 529, 551, 552, 553, 554, 555, 556, 557], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 200, 372, 373, 489], "compute_chisq": 417, "compute_differential_jfactor": 23, "compute_errn": [272, 273, 421, 555], "compute_errp": [272, 273, 555], "compute_flux_doubl": 128, "compute_fpp": 129, "compute_fvar": [130, 278], "compute_jfactor": [23, 455], "compute_lightcurve_doublingtim": 449, "compute_lightcurve_fpp": 449, "compute_lightcurve_fvar": 449, "compute_lima_map": 406, "compute_npr": 372, "compute_upper_limit": [272, 273], "computedfieldinfo": [16, 80, 99, 118], "con": [359, 375], "concaten": [79, 82, 87, 185, 188, 371, 375, 381, 424, 461], "concentr": 320, "concept": [16, 80, 99, 118, 379, 380, 386, 396, 455, 461, 494], "conception": [372, 381], "concern": [362, 364, 373, 375, 376, 378, 380, 382, 385, 410, 420, 470, 555], "conclud": 368, "concret": [16, 80, 99, 118, 376, 379], "conda": [358, 362, 366, 367, 376, 379, 384, 388, 389, 391, 392, 393, 394, 395, 400, 402, 418, 419, 553], "condit": [52, 53, 136, 202, 204, 211, 233, 383, 387, 407, 428, 432, 435, 445, 456, 462, 463, 465, 470, 489, 498], "conduct": [421, 452], "cone": [86, 373, 433, 465, 477, 478, 493], "conesearch": 375, "conf": [83, 86, 359, 360, 389, 401, 416], "conf_1d": 450, "conf_3d": 450, "conf_max": [201, 203], "conf_min": [201, 203], "confid": [116, 200, 201, 203, 272, 273, 370, 377, 401, 406, 420, 552, 555], "confidence_opt": 200, "config": [15, 16, 80, 99, 118, 358, 360, 365, 367, 368, 375, 376, 379, 386, 391, 393, 403, 404, 405, 410, 418, 433, 440, 477, 550], "config_dict": 477, "config_joint": 440, "config_paramet": [112, 114, 115, 116, 120, 121, 123, 124, 125, 126, 127], "config_stack": 440, "config_str": 16, "configdict": [16, 80, 99, 118], "configpars": 416, "configur": [11, 15, 16, 46, 80, 83, 86, 96, 99, 104, 105, 112, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 308, 359, 360, 362, 368, 370, 374, 375, 379, 380, 386, 389, 395, 403, 405, 406, 410, 412, 421, 424, 425, 432, 434, 442, 444, 445, 468, 473, 492, 498, 552, 553], "confirm": 362, "conflict": [83, 86, 359, 362, 385], "confluenc": 471, "conform": [16, 80, 99, 118, 461], "confus": [359, 360, 365, 378], "connect": [369, 432, 446, 448, 462, 478, 550], "consant": [183, 184, 186, 192, 195, 196], "consciou": 364, "consecut": [166, 318, 359, 384], "consensu": [364, 385], "consent": 359, "consequ": [385, 445, 506], "conserv": [489, 514], "consid": [19, 20, 59, 91, 163, 170, 173, 174, 176, 177, 184, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 270, 355, 364, 365, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 385, 387, 429, 432, 434, 440, 444, 445, 449, 459, 462, 490, 498, 556], "consider": [375, 400, 410, 418, 440], "consist": [71, 86, 90, 117, 119, 141, 142, 153, 156, 183, 184, 186, 195, 196, 220, 223, 359, 369, 370, 372, 373, 374, 379, 386, 403, 404, 405, 406, 407, 414, 418, 419, 421, 423, 424, 425, 433, 434, 435, 436, 443, 448, 452, 458, 460, 461, 464, 466, 477, 527, 529, 554], "consol": [359, 553], "consortium": [386, 468], "const": [207, 208, 209, 210, 382, 445, 464, 522, 540], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 382, "constant": [50, 51, 52, 53, 97, 104, 112, 143, 183, 184, 186, 192, 194, 195, 196, 207, 208, 209, 210, 212, 224, 226, 317, 372, 373, 378, 418, 427, 450, 469, 486, 489, 507, 518, 539, 549, 552, 556], "constant_model": 540, "constantmodel": 420, "constantnormspectralmodel": 382, "constantspatialmodel": [242, 382, 464, 469, 509], "constantspectralmodel": [243, 382, 445, 464, 522], "constanttemporalmodel": [255, 382, 403, 464, 540], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 457, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 385, 437, 441, 460, 466], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 493], "construct": [16, 80, 99, 118, 188, 227, 228, 325, 506, 552], "constructor": [181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 424, 478, 504], "consult": 394, "consum": [458, 493], "contact": [361, 366, 368, 385, 394, 396, 399, 400, 401, 415, 418], "contain": [13, 16, 19, 20, 26, 57, 59, 62, 65, 67, 78, 79, 80, 82, 83, 84, 86, 87, 90, 91, 95, 96, 97, 99, 100, 103, 104, 105, 107, 117, 118, 119, 127, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 165, 168, 170, 175, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 277, 286, 287, 352, 354, 356, 357, 359, 362, 363, 365, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 388, 389, 396, 400, 404, 405, 406, 407, 409, 410, 412, 413, 416, 417, 418, 419, 420, 424, 425, 428, 430, 432, 433, 434, 437, 440, 441, 444, 445, 448, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 481, 482, 484, 489, 490, 491, 493, 497, 501, 502, 505, 506, 507, 550, 552, 554, 555, 556], "containment_correct": [16, 97, 100, 170, 428, 432, 433, 434, 437, 438, 440, 442, 450, 451, 453, 457, 460, 477], "containment_fract": 91, "containment_radiu": [144, 150, 152, 153, 154, 156, 428, 457, 459, 462], "containment_radius_map": [153, 156], "contains_pix": [181, 182, 191, 194], "contains_wcs_pix": 191, "contamin": [65, 438, 456, 462, 502], "content": [80, 99, 118, 119, 183, 184, 186, 192, 195, 196, 326, 359, 362, 364, 368, 374, 379, 386, 389, 404, 413, 418, 429, 461, 462, 468, 470, 490, 493, 504, 505], "content_typ": [16, 80, 99, 118], "context": [16, 80, 83, 86, 99, 118, 202, 204, 211, 233, 308, 337, 359, 374, 385, 389, 425, 461, 483], "contigu": [188, 193, 410], "continu": [188, 366, 368, 369, 372, 373, 375, 376, 378, 379, 384, 395, 398, 399, 402, 410, 415, 416, 417, 419, 432, 445, 462, 505, 552], "continuous_upd": [440, 448, 461, 477, 478], "contour": [198, 200, 351, 368, 420], "contour_": 458, "contour_alpha_amplitud": 458, "contour_alpha_beta": 458, "contour_beta_amplitud": 458, "contourf": 196, "contract": 385, "contrari": [360, 367], "contrast": [379, 552], "contrera": 420, "contribut": [95, 109, 111, 211, 219, 233, 248, 355, 359, 361, 368, 373, 381, 383, 389, 396, 399, 410, 412, 414, 460, 494, 529, 550, 553, 554], "contributes_to_stat": 95, "contributor": [359, 362, 379, 389, 397, 408, 409], "control": [79, 83, 86, 97, 100, 104, 105, 359, 372, 390, 392, 428, 455, 461, 466, 493, 555], "controversi": [359, 364, 365, 379], "conveni": [13, 117, 358, 359, 362, 369, 373, 381, 383, 390, 400, 402, 407, 410, 412, 417, 442, 455, 456, 457, 461, 462, 463, 464, 468, 470, 479, 488, 492, 551], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 182, 183, 184, 186, 194, 195, 196, 381, 383, 402, 403, 406, 407, 421, 457, 460, 461, 464, 489, 491, 498, 505, 555], "converg": [387, 401, 422, 432, 434, 440, 458, 489, 493, 510], "convers": [80, 83, 86, 99, 117, 118, 119, 364, 383, 386, 391, 393, 410, 423, 424, 425, 428, 506], "conversion_typ": [469, 479], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 79, 81, 82, 83, 86, 94, 96, 97, 100, 102, 104, 105, 117, 119, 122, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 211, 225, 233, 270, 285, 288, 289, 293, 306, 322, 340, 342, 343, 360, 365, 373, 374, 383, 386, 389, 411, 423, 424, 425, 428, 438, 443, 451, 452, 457, 458, 462, 463, 468, 479, 491, 497, 502, 505, 555, 557], "convert_bytestring_to_unicod": [83, 86], "convert_unicode_to_bytestr": [83, 86], "convinc": 479, "convolut": [112, 116, 122, 127, 151, 184, 196, 358, 371, 377, 398, 405, 407, 416, 418, 419, 425, 438, 461, 489, 506], "convolution_method": 184, "convolv": [100, 106, 110, 127, 151, 184, 196, 370, 398, 407, 410, 419, 435, 436, 438, 461, 499, 529], "convolve_ful": 184, "convolve_wc": 184, "cookiecutt": 375, "coolwarm": [440, 469, 470, 478], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 235, 277, 370, 403, 445, 461, 462, 502, 505, 506, 513], "coord_to_idx": [181, 182, 185, 187, 188, 191, 193, 194, 461], "coord_to_pix": [181, 182, 185, 187, 188, 191, 193, 194, 461], "coordiant": 459, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 79, 81, 83, 84, 85, 86, 89, 90, 91, 97, 98, 100, 103, 104, 105, 117, 119, 121, 122, 123, 128, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 154, 155, 156, 166, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 211, 212, 220, 223, 225, 233, 235, 237, 245, 246, 248, 260, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 300, 310, 316, 320, 321, 335, 360, 364, 365, 366, 368, 372, 373, 378, 379, 382, 384, 385, 398, 400, 403, 405, 416, 418, 419, 421, 428, 429, 432, 434, 435, 438, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 478, 479, 489, 497, 502, 504, 505, 510, 511, 514, 551, 552, 557], "coordsi": 405, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 82, 83, 84, 85, 86, 87, 94, 95, 96, 97, 99, 100, 103, 104, 105, 112, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 141, 142, 148, 153, 156, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 288, 331, 359, 364, 367, 369, 373, 375, 381, 388, 389, 395, 410, 412, 419, 420, 421, 424, 429, 432, 434, 435, 440, 442, 448, 451, 452, 456, 458, 460, 464, 466, 469, 493, 502, 506, 517, 553], "copy_data": [83, 86, 211, 219, 233, 248, 256, 258, 260], "copy_indic": [83, 86], "copy_ob": [78, 493], "copy_on_getitem": [83, 86], "copyright": 395, "core": [16, 53, 80, 99, 118, 149, 358, 359, 366, 372, 373, 380, 384, 385, 396, 399, 416, 420, 424, 428, 434, 435, 437, 440, 442, 444, 446, 448, 452, 463, 468, 469, 481, 491, 553], "corner": [373, 376, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "corr_coord": [153, 156], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 79, 84, 97, 98, 100, 142, 153, 156, 170, 175, 176, 219, 235, 236, 260, 359, 371, 372, 384, 385, 386, 388, 402, 405, 407, 408, 409, 410, 413, 416, 417, 419, 421, 422, 423, 424, 425, 428, 432, 433, 434, 435, 444, 448, 450, 456, 457, 458, 460, 462, 463, 464, 466, 470, 477, 479, 490, 491, 500, 513, 525, 528, 530, 533, 538], "correctli": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 360, 362, 385, 386, 400, 402, 407, 412, 413, 422, 459, 460, 461, 462, 463, 466, 511], "correl": [19, 20, 26, 116, 122, 199, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 244, 249, 251, 252, 253, 254, 257, 261, 377, 382, 383, 410, 420, 443, 446, 458, 462, 464, 466, 477, 491, 550], "correlate_off": 116, "correlation_radiu": [16, 116, 132, 133, 433, 437, 438, 440, 453, 470, 477, 491], "correspond": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 83, 85, 86, 95, 97, 99, 100, 104, 105, 117, 118, 119, 120, 121, 122, 124, 125, 127, 140, 141, 142, 148, 151, 153, 155, 156, 157, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 205, 206, 209, 213, 215, 216, 217, 220, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 286, 352, 369, 370, 371, 372, 379, 380, 383, 385, 387, 404, 407, 429, 430, 432, 433, 434, 440, 444, 445, 450, 456, 458, 460, 461, 464, 465, 466, 468, 469, 470, 477, 479, 489, 490, 491, 493, 505, 506, 516, 519, 551, 552, 557], "cosimo": [407, 410, 412, 418, 419, 421, 424], "cosmic": [52, 213, 263, 377, 468], "cost": 552, "costom": 466, "costomprior": 466, "costum": 466, "coto": 418, "could": [16, 80, 99, 118, 360, 362, 364, 365, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 386, 389, 429, 432, 440, 442, 456, 468, 469, 477, 492], "count": [16, 79, 87, 95, 97, 100, 101, 102, 103, 104, 105, 108, 112, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 131, 158, 160, 163, 164, 165, 170, 172, 176, 180, 183, 184, 186, 187, 188, 192, 195, 196, 202, 204, 211, 233, 272, 273, 274, 275, 280, 281, 284, 285, 310, 344, 346, 355, 357, 365, 367, 370, 371, 372, 374, 375, 379, 383, 401, 402, 405, 407, 410, 412, 413, 419, 420, 424, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 442, 444, 446, 448, 450, 451, 452, 453, 457, 458, 460, 461, 462, 466, 470, 475, 477, 478, 479, 491, 493, 497, 500, 501, 502, 503, 506, 552, 553, 554, 556], "count_bkg": 453, "count_statist": 555, "counter": [212, 220, 223, 510], "counts_3d": 461, "counts_imag": [446, 457], "counts_min": 136, "counts_off": [97, 100, 101, 104, 105, 158, 164, 165, 168, 357, 371, 412, 423, 424, 433, 434, 435, 438, 442, 453, 457, 489, 555], "counts_on": 401, "counts_rat": 457, "countspredictor": 370, "countsspectrum": [371, 374, 401, 402, 404, 406, 415], "countsstatist": [272, 273, 383, 406, 407, 410, 421], "coupl": [367, 373, 378, 389, 407, 419, 461], "cours": [359, 362, 366, 369, 376, 395, 433, 440, 457, 461, 469, 477, 553, 556], "cousin": [401, 407, 415, 417, 552], "cousins2007": [552, 555], "coutinho": [407, 410], "cov": [239, 240, 389], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [199, 352, 420], "covar_list": 199, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 120, 121, 124, 125, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 273, 352, 377, 387, 406, 412, 420, 421, 424, 433, 477, 555], "covariance_data": [211, 219, 233, 248, 258], "covariance_opt": 200, "covariance_typ": 387, "covariancegaussianprior": 387, "covarianceresult": [96, 200, 429, 430, 432, 433, 434, 440, 441, 442, 453, 458, 469, 477, 478], "cover": [259, 359, 361, 373, 374, 375, 383, 429, 450, 451, 457, 461, 473, 479, 494], "coverag": [368, 374, 389, 398, 402, 410, 416, 419, 451, 458], "coveral": [389, 398], "cpu": [120, 121, 124, 127, 308, 309, 372], "cpython": 364, "crab": [65, 79, 104, 105, 125, 136, 230, 264, 270, 367, 371, 379, 398, 404, 416, 418, 432, 433, 434, 441, 442, 450, 456, 457, 458, 462, 466, 469, 470, 471, 477, 478, 479, 491, 502, 506, 552], "crab_10gev_100tev_dataset": 441, "crab_3fhl": 479, "crab_3fhl_spec": 479, "crab_events_pass4": 470, "crab_fp": 433, "crab_fp_tabl": 433, "crab_hess_ecpl": 264, "crab_hess_fp": 135, "crab_magic_lp": 434, "crab_model": 458, "crab_posit": 502, "crab_spec": 441, "crab_spectrum": 458, "crabnebula": 450, "crabspectrum": 402, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 78, 79, 80, 82, 83, 84, 86, 87, 88, 94, 96, 97, 99, 100, 104, 105, 106, 107, 108, 110, 112, 117, 118, 119, 120, 121, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 165, 166, 167, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 270, 288, 298, 319, 323, 337, 346, 348, 353, 359, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 402, 403, 404, 407, 410, 412, 418, 419, 421, 422, 423, 424, 425, 428, 430, 433, 434, 435, 440, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 455, 456, 458, 460, 463, 464, 465, 466, 468, 469, 470, 471, 475, 477, 479, 481, 488, 489, 490, 493, 497, 500, 502, 503, 504, 505, 509, 511, 512, 513, 514, 519, 529, 538, 550, 551, 553, 558], "create_crab_spectral_model": [432, 434, 441], "create_fermi_isotropic_diffuse_model": [463, 469], "create_map_dataset_from_observ": [88, 103], "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 121, 194, 368, 369, 373, 382, 385, 404, 410, 449, 464, 471], "creator": [99, 118, 362, 386, 433, 464, 477, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "creatormedadata": 386, "creatormetadata": [80, 99, 118, 386], "credit": 395, "crimson": 434, "criteria": [15, 86, 412, 460, 465, 473], "criterion": [86, 127, 286, 428, 493], "critic": 466, "criticis": 350, "crop": [82, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196], "crop_width": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196], "cross": [19, 365, 379, 481], "crowd": 456, "crpix": 194, "crpix1": 461, "crpix2": 461, "crucial": [386, 444, 445, 457], "cruft": 389, "crux": [33, 38], "crval1": 461, "crval2": 461, "cryptic": 370, "csh": 553, "csobsselect": 369, "css": [83, 86, 389], "cstat": [371, 404], "csv": 119, "ct": [344, 419, 458], "cta": [78, 79, 85, 97, 100, 104, 105, 109, 111, 112, 116, 132, 133, 138, 142, 143, 144, 153, 163, 213, 263, 347, 352, 354, 359, 363, 366, 367, 368, 372, 375, 378, 379, 388, 391, 396, 399, 400, 410, 416, 417, 418, 419, 427, 428, 433, 435, 437, 440, 442, 444, 445, 448, 452, 453, 457, 459, 463, 465, 470, 471, 472, 473, 477, 481, 490, 491, 493, 495, 498, 551, 552, 557], "cta_data_analysi": [379, 427, 442, 447], "cta_dataset": 463, "cta_north": 92, "cta_sensist": 379, "cta_sensit": [427, 428, 431], "cta_simul": 399, "cta_south": [92, 428, 435, 444, 445, 448, 452], "cta_util": 419, "ctadata": 468, "ctao": [379, 385, 468, 493], "ctapip": [362, 366, 368, 375, 376, 378, 379, 380], "ctaspectrumobserv": 419, "ctobssim": [78, 372], "ctool": [369, 372, 375, 379, 527], "cts_sigma": 458, "ctselect": 369, "ctype1": 461, "ctype2": 461, "cube": [46, 97, 100, 127, 158, 176, 183, 184, 186, 192, 195, 196, 229, 248, 359, 370, 371, 372, 378, 379, 380, 382, 391, 398, 402, 403, 406, 411, 414, 415, 416, 417, 418, 419, 436, 437, 442, 446, 469, 479, 489, 498, 500, 505, 506, 552], "cubic": 461, "cumbersom": [369, 377], "cumsum": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196], "cumul": [95, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 310, 372, 432, 444, 463, 493], "cunit1": 461, "cunit2": 461, "curat": [389, 399], "curl": [65, 376, 390, 391, 393, 468], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 81, 82, 83, 84, 85, 86, 94, 95, 96, 97, 100, 104, 105, 119, 120, 124, 146, 169, 181, 182, 183, 184, 186, 192, 193, 194, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 337, 353, 359, 360, 362, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 392, 393, 402, 420, 433, 455, 459, 460, 461, 463, 468, 470, 471, 477, 478, 482, 489, 490, 491, 506, 550, 552, 553], "curv": [15, 19, 20, 26, 79, 124, 128, 205, 206, 209, 213, 215, 216, 217, 221, 225, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 279, 351, 363, 370, 372, 375, 379, 383, 391, 400, 404, 406, 407, 411, 414, 415, 417, 419, 421, 424, 425, 427, 428, 449, 454, 473, 489, 490, 491, 492, 501, 502, 505, 507, 549, 551], "curve_fit": 352, "cuspi": 481, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 85, 99, 118, 123, 368, 369, 370, 375, 377, 382, 386, 390, 404, 405, 407, 419, 428, 435, 437, 440, 442, 448, 452, 457, 459, 461, 468, 493, 538], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 464, "customis": [379, 459], "cut": [86, 116, 155, 169, 170, 369, 418, 424, 427, 428, 431, 435, 453, 457, 460, 461, 465, 468, 473, 478, 479, 489, 490, 501, 502, 505, 550], "cutoff": [215, 216, 217, 252, 253, 254, 270, 404, 424, 427, 435, 440, 507, 539], "cutout": [97, 100, 104, 105, 109, 111, 141, 142, 148, 153, 156, 159, 182, 184, 192, 194, 196, 258, 365, 371, 400, 405, 410, 416, 419, 437, 438, 440, 442, 446, 457, 460, 469, 478, 479, 489], "cutout2d": [97, 100, 141, 142, 148, 153, 156, 159, 194, 196, 258, 365], "cutout_and_mask_region": [196, 424], "cutout_info": 404, "cutout_mod": 159, "cutout_slic": 194, "cutout_width": 159, "cval": [183, 184, 186, 192, 195, 196], "cwd": 367, "cwt": [379, 404, 416, 419], "cx": 458, "cxc": [200, 379, 458], "cy": 458, "cyan": 356, "cycl": [356, 362, 363, 364, 376, 378, 392, 417, 421], "cycler": [356, 428], "cython": [362, 401, 411], "d": [19, 20, 23, 83, 85, 86, 190, 193, 225, 230, 241, 259, 264, 327, 362, 377, 379, 412, 421, 430, 444, 445, 452, 461, 464, 465, 498, 505, 510, 540, 541, 542, 543, 544, 545, 546, 547, 548, 553, 556], "dai": [83, 86, 193, 218, 222, 224, 241, 247, 362, 373, 379, 388, 389, 461, 546, 553], "daniel": [420, 423, 425], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 379, 387, 419, 424, 425, 427, 467, 473, 482, 505, 551], "dark_matter_spectra": 26, "darkbit": 481, "darkblu": 466, "darkgreen": 466, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 243, 360, 379, 419, 455, 482], "darkmatterannihilationspectralmodel": [20, 243, 421, 455, 464], "darkmatterdecayspectralmodel": [243, 425, 455, 464], "darkorang": [432, 433], "darksusi": 481, "darwin": 395, "dash": [453, 455, 466], "dashboard": 389, "dat": [26, 83, 86, 211, 233, 433, 477, 481], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 117, 118, 119, 120, 121, 122, 123, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 163, 164, 165, 169, 176, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 274, 279, 280, 282, 283, 285, 286, 287, 296, 297, 300, 318, 326, 329, 330, 338, 347, 348, 349, 350, 352, 353, 358, 360, 363, 366, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 385, 387, 388, 391, 395, 396, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 424, 425, 427, 428, 430, 435, 436, 437, 438, 442, 444, 445, 448, 452, 455, 456, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 475, 480, 481, 488, 489, 491, 493, 495, 496, 497, 498, 499, 500, 502, 503, 505, 506, 512, 513, 525, 528, 530, 532, 533, 538, 550, 551, 552, 555, 556, 557], "data_extend": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "data_nbyt": [181, 182, 191, 194], "data_path": 470, "data_reduct": 375, "data_shap": [96, 97, 100, 104, 105, 181, 182, 191, 194, 457, 506], "data_shape_ax": [182, 191, 194], "data_shape_imag": 194, "data_spectr": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "data_stor": [78, 91, 163, 286, 287, 375, 395, 434, 442, 444, 451, 453, 460, 465, 468, 470, 471, 475, 478, 490, 500, 502, 503], "data_storag": 490, "data_summari": 416, "dataaxi": 401, "databas": [365, 493], "dataclass": 359, "datafram": [83, 86], "dataset": [6, 15, 16, 19, 20, 26, 62, 89, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 124, 125, 126, 127, 131, 132, 133, 134, 136, 141, 142, 148, 153, 156, 158, 159, 160, 163, 164, 165, 168, 169, 170, 190, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 308, 352, 355, 356, 362, 363, 365, 367, 372, 374, 375, 376, 378, 379, 383, 387, 388, 389, 391, 393, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 417, 419, 420, 421, 422, 423, 424, 425, 427, 430, 432, 435, 436, 442, 443, 444, 446, 448, 453, 455, 456, 461, 464, 465, 467, 468, 469, 471, 473, 475, 479, 490, 491, 493, 498, 500, 501, 502, 503, 505, 513, 517, 519, 547, 548, 550, 551, 552, 553, 554, 555], "dataset1": [466, 489], "dataset1_prior": 466, "dataset2": [466, 489], "dataset2_prior": 466, "dataset_1": 491, "dataset_2": 491, "dataset_3fgl": 430, "dataset_3fhl": 430, "dataset_cta": 457, "dataset_empti": [429, 432, 434, 435, 442, 451, 457, 460, 470, 502], "dataset_energy_depend": 443, "dataset_fak": 435, "dataset_fp": 452, "dataset_gammacat": 430, "dataset_hawc": 441, "dataset_hess": [441, 458], "dataset_imag": [442, 457], "dataset_kwarg": [88, 103], "dataset_lc": 452, "dataset_mak": [432, 434, 442, 451, 460, 502], "dataset_nam": [103, 107, 124, 211, 219, 233, 381, 387, 440, 444, 445, 448, 457, 463, 478, 513], "dataset_on_off": [158, 164, 165, 168, 428, 432, 434, 435, 438, 442, 451, 460, 502, 503], "dataset_on_off1": 428, "dataset_onoff": 371, "dataset_simul": 434, "dataset_stack": [432, 440], "datasetmodel": [233, 248, 381, 407, 444, 445, 448], "datasetread": 101, "datasets1": 356, "datasets2": 356, "datasets3": 356, "datasets_fil": [16, 433, 437, 438, 440, 477], "datasets_hess": 441, "datasets_in_phase_bin_3": 383, "datasets_mak": 460, "datasets_nam": [19, 20, 26, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 406, 441, 463, 477, 513], "datasets_read": [463, 469], "datasets_sl": 457, "datasetsconfig": 16, "datasetsmak": [161, 412, 424, 460, 465, 493], "datasetsmetadata": 386, "datasetwrit": 102, "datastor": [16, 85, 91, 163, 286, 287, 365, 369, 374, 391, 395, 401, 412, 413, 415, 416, 418, 424, 425, 429, 432, 433, 434, 437, 438, 440, 442, 444, 448, 451, 453, 460, 465, 470, 471, 475, 477, 493, 500, 502, 503, 553], "datastorecheck": 419, "datastoreindex": 369, "datastoreinmemori": 369, "datastoremak": [401, 412], "datastoremetadata": 386, "datastoreobserv": [164, 365, 369, 405, 418], "datastorexml": 369, "datasum": [79, 82, 84, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196], "datat": [83, 86], "date": [83, 86, 99, 118, 340, 376, 384, 385, 386, 388, 396, 418, 433, 436, 464, 471, 477, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 557], "datefmt": [16, 433, 437, 438, 440, 477, 553], "dateref": 436, "datetim": [99, 118, 386], "datetime64": [83, 86], "datfix": 436, "daughter": 386, "david": [369, 374, 399, 419, 420], "dbstijwb": 460, "dc": [440, 468], "dc1": [368, 379, 420, 444, 453, 459, 463, 468], "dc2": 368, "ddof": 449, "de": [19, 20, 26, 65, 95, 205, 206, 209, 213, 215, 216, 217, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 285, 385, 407, 410, 413, 455, 471, 552], "deactiv": 390, "dead": [79, 82, 84, 318, 369], "dead_tim": [79, 84, 318], "deadc": 369, "deadlin": [368, 372], "deadtim": [84, 176, 435, 444, 448, 468], "deadtime_fract": 84, "deal": [82, 359, 365, 374, 375, 435, 444, 451, 473, 493], "debanjan": 401, "debian": [376, 392, 414], "debug": [11, 359, 365, 370, 375, 421, 432, 461, 493, 553], "dec": [65, 79, 81, 83, 84, 86, 89, 132, 133, 166, 359, 360, 364, 368, 370, 372, 375, 376, 379, 397, 423, 428, 432, 434, 436, 438, 442, 445, 450, 451, 453, 456, 460, 462, 468, 469, 470, 471, 478, 479, 481, 493, 497, 502, 557], "dec_pnt": 471, "dec_tru": 372, "decad": [17, 18, 21, 22, 24, 25, 27, 107, 188, 266, 425, 444], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 218, 224, 241, 382, 444, 449, 452, 464, 481, 543], "decemb": 397, "decid": [359, 365, 368, 369, 370, 371, 373, 374, 378, 381, 382, 383, 388, 433, 465, 477, 557], "decim": [83, 86], "decis": [359, 360], "declar": [15, 83, 86, 248, 338, 339, 362, 366, 367, 370, 375, 376, 382, 389, 406, 492], "decor": [338, 339, 359, 386, 553], "decorrel": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "decoupl": 67, "dedic": [362, 373, 374, 383, 385, 386, 389, 405, 406, 407, 425, 432, 433, 434, 440, 453, 458, 477, 478, 490], "deduc": [383, 425], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 83, 86, 94, 95, 96, 97, 99, 100, 104, 105, 118, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 261, 262, 440], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 256, 258, 260], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 338, 339, 359, 360, 370, 371, 372, 373, 382, 383, 386, 387, 440, 458, 464, 466, 475, 502, 553, 555], "def_unit": [428, 435, 437, 440, 442, 448, 452, 468], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 63, 65, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 278, 279, 280, 285, 286, 288, 299, 300, 301, 306, 308, 309, 315, 316, 317, 318, 320, 321, 326, 328, 330, 336, 341, 342, 346, 348, 349, 350, 352, 353, 355, 356, 359, 365, 371, 375, 376, 382, 385, 389, 395, 401, 403, 404, 405, 407, 410, 412, 418, 419, 421, 422, 423, 424, 425, 433, 434, 436, 438, 440, 444, 445, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 469, 477, 478, 479, 489, 491, 493, 500, 503, 504, 505, 506, 510, 511, 512, 519, 525, 528, 529, 553, 557], "default_alpha": [21, 27], "default_beta": 27, "default_css": [83, 86], "default_css_nb": [83, 86], "default_epoch": 342, "default_gamma": 27, "default_hdu_t": 78, "default_interp_kwarg": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 417], "default_nam": [83, 86], "default_notebook_table_class": [83, 86], "default_obs_t": 78, "default_paramet": [19, 20, 26, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 387], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [137, 138, 143, 145, 150, 155, 459], "defer": [100, 105], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 79, 80, 83, 84, 86, 90, 96, 97, 98, 99, 100, 103, 104, 105, 109, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 140, 141, 142, 144, 148, 151, 152, 153, 154, 156, 159, 160, 164, 169, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 274, 280, 281, 300, 310, 315, 316, 317, 318, 321, 349, 350, 359, 360, 362, 364, 365, 368, 370, 371, 372, 373, 374, 375, 376, 380, 381, 383, 384, 385, 386, 387, 390, 391, 392, 393, 400, 401, 404, 407, 410, 413, 417, 418, 423, 424, 425, 433, 435, 436, 437, 438, 440, 441, 443, 446, 448, 449, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 477, 479, 489, 490, 491, 493, 495, 498, 502, 503, 505, 510, 512, 514, 515, 516, 519, 520, 523, 524, 526, 527, 529, 531, 532, 534, 535, 536, 537, 538, 548, 550, 551, 552, 553, 554, 555, 556], "definit": [79, 80, 82, 84, 95, 97, 99, 100, 104, 105, 118, 160, 191, 285, 299, 359, 368, 369, 373, 380, 381, 382, 383, 386, 402, 406, 407, 423, 425, 434, 437, 446, 451, 459, 460, 477, 489, 491, 498, 499, 504, 506, 510, 511, 555], "deform": 506, "deg": [16, 33, 34, 38, 47, 65, 79, 81, 83, 86, 89, 91, 97, 100, 104, 105, 107, 108, 109, 111, 112, 116, 121, 122, 127, 132, 133, 142, 144, 145, 150, 151, 152, 153, 154, 155, 156, 158, 166, 167, 169, 171, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 211, 212, 220, 223, 233, 237, 245, 246, 248, 286, 287, 320, 354, 359, 360, 370, 373, 375, 382, 383, 386, 395, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 477, 478, 479, 490, 491, 493, 495, 497, 500, 502, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517], "deg2": 471, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 107, 108, 114, 117, 119, 134, 182, 183, 184, 186, 189, 194, 195, 196, 211, 233, 237, 248, 259, 425, 428, 429, 433, 438, 443, 451, 456, 460, 461, 462, 468, 477, 491, 505, 506, 555, 556], "deil": [364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 398, 399, 400, 401, 402, 403, 404, 405, 411, 414, 415, 416, 417, 418, 419, 420], "deiml": 418, "dej2000": [456, 479], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 370], "delai": [380, 384], "deleg": 375, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 359, 370, 389, 390, 391, 393, 425, 463], "delete_interv": 82, "delimit": 119, "deliv": 375, "delta": [19, 20, 23, 83, 86, 116, 117, 122, 125, 127, 145, 193, 239, 240, 271, 424, 458, 466, 491, 498, 499, 511, 512, 514, 555], "delta_t": [114, 271, 443], "demonstr": [375, 400, 403, 404, 405, 406, 407, 412, 424, 425, 449, 450, 461, 463, 473, 505], "denot": [97, 104, 383, 489], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 119, 145, 196, 314, 317, 352, 372, 438, 440, 455, 456, 466, 481, 483, 487, 497, 498, 499, 552], "dep": 424, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 84, 95, 97, 98, 103, 104, 114, 117, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 170, 181, 182, 191, 194, 196, 211, 225, 233, 248, 288, 339, 359, 361, 362, 363, 365, 370, 371, 372, 373, 374, 377, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 399, 403, 404, 407, 414, 416, 419, 420, 422, 424, 425, 427, 428, 431, 435, 437, 438, 447, 451, 456, 458, 459, 460, 461, 462, 463, 465, 466, 468, 469, 473, 489, 490, 493, 497, 498, 501, 502, 505, 519, 550], "deploy": 385, "deposit": 385, "deprec": [16, 79, 80, 81, 84, 99, 118, 120, 121, 124, 201, 203, 401, 410, 423, 424, 425, 517], "deprecated_argument_funct": 359, "deprecated_argument_function_kwarg": 359, "deprecated_attribut": 359, "deprecated_funct": 359, "deprecated_renamed_argu": 359, "deprecatedparseprotocol": [16, 80, 99, 118], "deprecation_polici": 384, "depriv": 500, "depth": [16, 80, 99, 118, 327, 391, 396, 449, 519], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 95, 116, 120, 124, 127, 259, 359, 371, 372, 377, 380, 383, 436, 468, 470, 491, 505, 554, 555], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 90, 119, 120, 122, 127, 152, 192, 200, 261, 281, 360, 362, 364, 365, 368, 369, 371, 372, 373, 375, 376, 378, 379, 382, 383, 384, 385, 396, 402, 410, 418, 419, 433, 436, 444, 445, 449, 458, 464, 466, 468, 470, 471, 477, 489, 493, 497, 506, 507, 552, 553, 554, 555], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 83, 86, 121, 200, 360, 364, 365, 373, 379, 384, 385, 396, 421, 425, 440, 448, 456, 458, 461, 468, 470, 477, 478, 493], "description_width": [440, 448, 461, 477, 478], "descriptionstyl": [440, 448, 461, 477, 478], "descriptor": [83, 84, 86, 97, 100, 104, 105, 258, 297, 360, 406], "desi": 471, "design": [364, 365, 368, 369, 372, 373, 375, 379, 381, 383, 384, 398, 418, 425], "desir": [16, 80, 83, 86, 99, 118, 151, 181, 182, 191, 194, 334, 335, 336, 461, 479, 506], "desktop": 396, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 95, 97, 100, 105, 119, 120, 141, 142, 148, 153, 156, 159, 182, 194, 196, 200, 201, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 258, 259, 260, 359, 360, 362, 364, 367, 368, 369, 372, 373, 374, 378, 379, 380, 384, 385, 388, 390, 394, 396, 397, 404, 408, 409, 427, 428, 432, 434, 435, 436, 437, 442, 443, 444, 447, 448, 452, 457, 458, 460, 461, 462, 463, 464, 466, 468, 470, 471, 473, 479, 489, 490, 492, 498, 502, 503, 505, 550, 551, 552, 553, 557], "detect": [59, 132, 133, 270, 349, 350, 360, 375, 378, 379, 381, 398, 404, 405, 406, 416, 418, 419, 425, 427, 439, 456, 468, 470, 473, 489, 505, 552, 555], "detect_t": 379, "detector": [79, 84, 98, 103, 145, 462, 470, 498, 552], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 107, 126, 144, 150, 152, 154, 166, 167, 169, 171, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 288, 310, 370, 374, 377, 385, 412, 424, 425, 428, 434, 437, 438, 443, 450, 460, 462, 483, 551], "determinist": 359, "deti": [79, 98, 103, 372, 468], "detx": [79, 98, 103, 372, 468], "dev": [11, 16, 78, 80, 99, 118, 359, 361, 362, 375, 385, 388, 389, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 517, 519, 547, 548], "dev224": [99, 118, 396, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "develop": [360, 364, 365, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 382, 384, 385, 387, 388, 389, 392, 396, 398, 411, 418, 419, 420, 468], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 120, 184, 196, 200, 276, 458, 466], "devoid": [432, 496], "devop": 385, "devot": 473, "dex": 288, "df": [83, 86, 114, 134, 443, 458, 555], "diagnosi": 368, "diagnost": 375, "diagon": [140, 141, 142, 377, 387, 469], "diagram": 557, "dialog": [391, 393], "diamet": [182, 183, 184, 429], "diamond": 465, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 114, 117, 118, 119, 120, 121, 122, 124, 125, 127, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 270, 271, 272, 273, 277, 286, 300, 308, 309, 326, 327, 328, 330, 340, 341, 342, 343, 346, 347, 348, 352, 353, 354, 355, 356, 359, 374, 376, 380, 383, 386, 403, 407, 410, 418, 433, 440, 450, 451, 456, 458, 461, 465, 477, 478, 505, 510, 519], "dict_kei": 519, "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 114, 117, 118, 119, 120, 121, 124, 125, 127, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 168, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 194, 195, 196, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 272, 273, 277, 298, 326, 327, 328, 330, 340, 343, 353, 376, 378, 383, 386, 387, 432, 434, 440, 458, 459, 465, 466, 548], "dictionnari": 352, "did": [366, 373, 378, 379, 380, 382, 385, 401, 428, 435, 437, 440, 442, 448, 452, 458, 466, 468], "didn": [79, 84, 366, 369, 373, 376, 481], "diff": [96, 97, 100, 104, 105, 359, 362, 367, 371, 440, 448, 478], "diff_flux": 455, "diff_flux_point": [96, 457], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 65, 76, 82, 83, 86, 89, 95, 114, 117, 119, 120, 121, 124, 125, 127, 132, 137, 138, 139, 140, 143, 145, 147, 150, 155, 165, 183, 184, 186, 189, 190, 191, 192, 194, 195, 196, 270, 271, 272, 273, 318, 322, 334, 335, 350, 359, 360, 362, 364, 365, 367, 369, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 385, 387, 389, 391, 393, 402, 405, 407, 417, 420, 421, 422, 424, 428, 432, 433, 434, 437, 440, 443, 444, 445, 446, 449, 450, 452, 456, 457, 458, 460, 462, 463, 464, 465, 466, 469, 470, 473, 477, 479, 481, 489, 491, 493, 498, 505, 506, 511, 512, 551, 553, 554, 555], "different": 367, "differenti": [23, 75, 117, 119, 126, 183, 184, 186, 188, 192, 195, 196, 234, 248, 263, 264, 315, 365, 370, 377, 383, 417, 461, 464, 469, 479, 491, 552], "differential_flux": 119, "difficult": [370, 373, 389], "diffus": [66, 183, 184, 186, 192, 195, 196, 265, 359, 375, 378, 419, 420, 440, 444, 456, 461, 463, 464, 468, 550], "diffuse_cub": 464, "diffuse_galactic_fermi": 463, "diffuse_iem": [463, 469], "diffuse_iso": [463, 469], "diffuse_model": 265, "difrsp0": [469, 479], "difrsp1": [469, 479], "difrsp2": [469, 479], "difrsp3": [469, 479], "difrsp4": [469, 479], "digit": 359, "dilat": [196, 410], "dim": [150, 317, 415, 416, 442, 552], "dimens": [46, 53, 97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 165, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 256, 257, 260, 288, 300, 352, 375, 407, 418, 420, 424, 458, 459, 461, 464, 473, 489, 505, 506, 511], "dimension": [31, 32, 37, 66, 83, 86, 181, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 220, 223, 266, 301, 314, 365, 373, 387, 391, 416, 436, 458, 459, 461, 464, 479, 497, 499, 505, 506, 551, 552], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 145, 253, 254, 287, 446, 464], "dimitri": [410, 412], "dipol": [51, 54], "dirac": 19, "direct": [86, 99, 155, 173, 174, 177, 179, 188, 212, 220, 223, 292, 295, 360, 365, 371, 373, 378, 380, 383, 386, 410, 427, 431, 435, 460, 473, 489, 490, 498, 499, 501, 502, 505, 510, 550, 551, 552], "directional_offset_bi": [428, 435], "directli": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 79, 83, 84, 86, 131, 155, 170, 183, 184, 186, 192, 195, 196, 256, 258, 260, 359, 361, 362, 364, 366, 367, 370, 371, 372, 373, 377, 379, 386, 391, 393, 394, 398, 400, 401, 402, 404, 418, 425, 430, 432, 433, 435, 440, 441, 442, 445, 446, 448, 449, 451, 452, 456, 457, 458, 459, 461, 462, 463, 464, 465, 468, 469, 477, 478, 479, 481, 489, 493, 498, 502, 505, 529, 555], "directori": [11, 78, 83, 359, 375, 433, 443, 471, 477, 479, 490, 493, 553], "dirk": [401, 415, 417], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 359, 410], "disable_unicode_literals_warn": 359, "disadvantag": 553, "disagr": 364, "disambigu": 364, "disc": [437, 438, 440, 445], "discard": [386, 456], "discard_on_copi": [83, 86], "discarded_ind": 456, "discarded_spati": 456, "discarded_t": 456, "disccus": 368, "discourag": 359, "discov": 553, "discret": [86, 372, 458, 505], "discuss": [13, 59, 261, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 396, 418, 466, 471, 481, 482, 557], "disjoint": 373, "disk": [78, 105, 142, 145, 184, 194, 196, 212, 223, 225, 337, 358, 359, 369, 370, 371, 375, 382, 383, 427, 428, 432, 440, 441, 461, 462, 463, 464, 504, 507, 512, 516, 518], "disk_inc": 373, "diskspatialmodel": [70, 242, 382, 403, 424, 463, 464, 510], "dismiss": 95, "disp": [497, 498], "dispatch": 370, "dispers": [78, 84, 97, 98, 100, 102, 103, 104, 105, 106, 108, 110, 140, 141, 142, 145, 163, 169, 170, 173, 174, 177, 359, 365, 370, 371, 372, 404, 406, 416, 417, 418, 420, 428, 429, 432, 433, 440, 444, 460, 470, 471, 477, 478, 489, 498, 501, 552], "displac": 292, "displai": [11, 15, 78, 83, 86, 112, 124, 127, 200, 277, 309, 352, 356, 359, 360, 389, 410, 413, 424, 425, 428, 429, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 446, 448, 450, 452, 453, 456, 457, 458, 460, 461, 463, 464, 468, 469, 470, 471, 478, 493, 553], "display_length": [83, 86], "disrupt": [399, 400], "dissolv": 403, "dist": [311, 389], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 121, 132, 133, 191, 234, 260, 291, 317, 373, 416, 423, 434, 436, 446, 455, 456, 458, 487, 502, 529], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 455], "distance_max": [46, 47, 317, 456], "distance_min": [47, 317, 456], "distance_refer": 456, "distinct": [374, 375, 380, 470, 556], "distinguish": [272, 273, 383, 386, 428, 461], "distort": [373, 402], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 79, 103, 134, 145, 180, 217, 228, 234, 272, 273, 310, 311, 315, 352, 355, 357, 358, 359, 363, 364, 367, 372, 377, 378, 381, 384, 385, 389, 392, 403, 412, 418, 424, 425, 428, 434, 435, 438, 440, 444, 446, 448, 450, 458, 463, 466, 468, 479, 481, 493, 497, 498, 500, 506, 514, 529, 554, 555], "divers": 383, "divid": [182, 188, 193, 380, 383, 444, 465, 470, 471], "djangoproject": 379, "djuvsland": 425, "dl3": [6, 16, 78, 79, 82, 84, 86, 91, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 169, 187, 188, 286, 287, 360, 365, 367, 368, 370, 379, 386, 391, 395, 401, 404, 406, 412, 421, 425, 429, 432, 433, 434, 437, 438, 440, 450, 451, 460, 462, 465, 475, 477, 478, 489, 493, 495, 496, 497, 499, 500, 502, 503, 551, 552], "dl4": [94, 96, 97, 100, 104, 105, 112, 116, 120, 124, 127, 148, 169, 365, 386, 391, 406, 452, 457, 458, 493, 551, 552], "dl5": [112, 116, 120, 124, 127, 386, 425, 452, 458, 551, 552], "dl6": [112, 116, 120, 124, 127, 551, 552], "dm": [19, 20, 26, 388, 406, 421, 455, 464], "dm_exampl": 481, "dmfitfunct": 481, "dmpipe": 481, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 455], "dmsky": 481, "dn": [217, 228, 455], "dnde": [19, 20, 26, 65, 117, 118, 119, 126, 128, 129, 130, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 263, 383, 410, 430, 432, 433, 442, 446, 456, 457, 464, 469, 477, 479, 491], "dnde_cu": 264, "dnde_err": [117, 119, 491], "dnde_errn": [65, 117, 119, 456], "dnde_error": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "dnde_errp": [65, 117, 119, 456], "dnde_ref": [117, 119, 383], "dnde_ul": [65, 117, 119, 456, 479], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 90, 95, 99, 118, 140, 151, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 312, 352, 360, 362, 364, 365, 366, 369, 373, 374, 375, 376, 377, 378, 379, 382, 383, 386, 388, 389, 391, 393, 404, 430, 432, 433, 435, 436, 437, 438, 440, 442, 443, 444, 448, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 468, 469, 477, 478, 479, 489, 493, 505, 550, 553, 556, 557], "do_someth": 359, "doc": [11, 13, 16, 79, 80, 83, 86, 99, 118, 140, 182, 188, 191, 194, 200, 211, 233, 288, 324, 359, 360, 362, 364, 367, 373, 375, 376, 378, 379, 388, 395, 396, 398, 404, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 481, 506, 517, 519, 525, 528, 541, 547, 548, 552, 553, 557], "docker": [376, 389], "dockerfil": [367, 388, 389], "docstr": [359, 379, 385, 410, 411, 412, 414, 417, 423, 424, 425, 464], "doctest": [151, 347, 360], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 273, 296, 300, 310, 333, 346, 359, 361, 363, 364, 366, 367, 369, 373, 375, 376, 378, 380, 382, 384, 385, 389, 390, 395, 396, 397, 404, 406, 407, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 461, 463, 468, 470, 471, 493, 504, 505, 506, 553], "doe": [16, 80, 83, 86, 99, 118, 120, 124, 143, 153, 156, 190, 225, 259, 270, 359, 360, 366, 367, 369, 371, 373, 374, 376, 378, 379, 382, 383, 385, 386, 401, 410, 421, 428, 432, 435, 437, 440, 442, 443, 456, 458, 459, 460, 461, 462, 470, 481, 493, 502, 553], "doesn": [67, 359, 360, 364, 366, 367, 373, 376, 377, 379, 468, 469, 553], "dof": 555, "doi": [134, 385], "domain": [183, 184, 186, 192, 195, 196, 359, 373, 449], "domenico": 416, "dominguez": [213, 214, 382, 519], "dominquez": 213, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 140, 358, 359, 362, 364, 366, 367, 376, 386, 389, 429, 432, 437, 442, 450, 462, 464, 481, 551, 553, 556, 557], "donath": [368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 117, 120, 352, 359, 360, 362, 364, 365, 366, 370, 372, 373, 374, 375, 377, 378, 379, 382, 383, 385, 391, 395, 419, 424, 429, 435, 440, 441, 445, 446, 448, 452, 453, 457, 460, 461, 464, 465, 489, 493, 501, 502, 506, 538, 555, 557], "dos2unix": 359, "dot": [50, 51, 54, 104, 105, 183, 184, 186, 192, 195, 196, 424], "doubl": [27, 116, 128, 277, 385, 417, 425], "doubling_dict": 277, "down": [50, 51, 54, 127, 364, 366, 369, 373, 378, 402, 457, 469, 556], "downgrad": [182, 358], "download": [65, 89, 96, 119, 362, 367, 375, 376, 379, 386, 388, 390, 391, 393, 395, 399, 400, 402, 403, 410, 419, 420, 421, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 553], "downsampl": [97, 100, 104, 105, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 401, 407, 416, 457], "downsampled_energi": 457, "downsampling_factor": [127, 442], "downward": [272, 273], "dozen": 359, "dpp": 385, "dr": [17, 18, 21, 22, 24, 25, 27, 512], "dr1": [16, 63, 78, 79, 82, 84, 86, 91, 145, 163, 254, 286, 287, 360, 367, 379, 395, 427, 429, 432, 433, 438, 440, 451, 460, 465, 475, 477, 478, 490, 493, 495, 496, 497, 499, 500, 502, 503, 507, 539], "dr2": [63, 254, 410, 427, 507, 539], "dr3": [63, 253, 427, 464, 507, 539], "dr4": [63, 425], "draft": [359, 363, 364, 387, 419], "drag": 362, "draw": [33, 184, 310, 372, 466], "drawback": [374, 378], "drawn": [310, 372], "drift": [81, 89, 90, 421], "drive": 375, "driven": [11, 15, 365, 375, 377, 379, 418, 473, 492], "drop": [52, 53, 97, 100, 104, 105, 117, 119, 124, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 212, 219, 258, 344, 363, 364, 375, 376, 381, 400, 403, 404, 407, 410, 417, 420, 444, 461, 489], "ds9": [79, 182, 191, 194, 198, 211, 233, 359, 360, 373, 402, 462, 464, 506], "ds9parser": 373, "dss": 369, "dt": [83, 86], "dtime_t": 449, "dtype": [33, 38, 83, 86, 106, 110, 138, 140, 143, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 211, 233, 288, 359, 387, 434, 437, 446, 456, 457, 459, 460, 461, 468, 469, 479, 491], "duck": [16, 80, 99, 118], "due": [59, 83, 86, 359, 387, 413, 461, 466, 468, 529, 553], "dummi": [104, 105, 373, 437, 493], "dump": [16, 80, 99, 118, 375], "dumps_kwarg": [16, 80, 99, 118], "duplic": [83, 86, 95, 141, 359, 360, 362, 365, 379, 380, 383, 407, 410], "durat": [79, 82, 84, 89, 435, 444, 448, 451, 468, 490, 493], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 79, 80, 81, 84, 90, 97, 99, 100, 104, 105, 118, 160, 270, 360, 367, 371, 375, 378, 379, 381, 384, 385, 386, 387, 388, 389, 404, 407, 424, 425, 433, 434, 444, 450, 451, 457, 460, 462, 466, 478, 489, 490, 552, 556], "dust": 213, "duti": 385, "dwarf": 481, "dx": [33, 292], "dy": [33, 292], "dynam": [356, 490], "dz": 292, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 65, 66, 78, 79, 80, 81, 82, 83, 86, 90, 99, 108, 118, 119, 132, 140, 141, 142, 143, 145, 176, 182, 183, 184, 186, 188, 190, 192, 194, 195, 196, 200, 201, 203, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 272, 273, 277, 288, 290, 294, 320, 327, 337, 348, 349, 354, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 391, 392, 393, 395, 396, 398, 399, 400, 404, 410, 411, 412, 416, 418, 419, 420, 424, 427, 429, 430, 432, 433, 434, 435, 438, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 470, 472, 473, 475, 477, 478, 479, 481, 488, 489, 490, 491, 493, 497, 498, 503, 504, 505, 510, 511, 512, 519, 520, 522, 523, 524, 526, 527, 531, 532, 534, 535, 536, 537, 547, 550, 552, 553, 554, 555, 556, 557, 558], "e2dnd": [19, 20, 26, 117, 118, 119, 126, 128, 129, 130, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 383, 410, 417, 428, 430, 432, 433, 434, 441, 456, 479, 491, 493, 529], "e2dnde_err": [117, 119], "e2dnde_errn": [117, 119, 456], "e2dnde_errp": [117, 119, 456], "e2dnde_ref": [117, 119], "e2dnde_ul": [117, 119, 456], "e501": [19, 20, 120, 140, 176, 187, 188, 194, 213, 265, 356], "e_": [19, 20, 26, 50, 52, 53, 140, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 489, 495, 497, 498, 499, 520, 524, 532, 534, 535], "e_0": [215, 216, 217, 227, 228, 239, 240, 249, 252, 253, 254, 523, 524, 527, 529, 531, 534, 535, 536, 537], "e_b": 382, "e_cut": [65, 456], "e_cutoff": 529, "e_d": [239, 240], "e_edg": 407, "e_max": [65, 119, 383, 428, 432, 433, 434, 445, 450, 456, 457, 458, 461, 466, 479, 491], "e_min": [65, 119, 383, 428, 432, 433, 434, 445, 450, 456, 457, 458, 461, 466, 469, 479, 491], "e_peak": [217, 228], "e_reco": [106, 110, 140, 145, 453, 552], "e_ref": [65, 119, 383, 428, 432, 433, 450, 456, 477, 479, 491], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 430, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 442, "e_sn": [43, 44, 52], "e_tru": [106, 110, 145, 453, 469, 552], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 82, 83, 86, 87, 95, 97, 100, 103, 104, 105, 109, 111, 112, 114, 116, 117, 119, 120, 124, 126, 127, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 164, 165, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 286, 324, 348, 357, 359, 362, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 379, 380, 383, 385, 389, 390, 397, 404, 407, 418, 421, 424, 429, 435, 436, 438, 440, 441, 442, 444, 445, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 470, 471, 478, 482, 488, 489, 490, 493, 497, 498, 499, 505, 506, 513, 529, 530, 552, 553, 556, 557], "eager": 375, "earli": [373, 378, 379, 468], "earlier": [366, 385], "earth": [41, 84, 263, 469], "earth_azimuth_angl": [469, 479], "earthloc": [79, 81, 84, 89, 92, 298, 386], "easi": [359, 360, 365, 370, 373, 374, 375, 378, 379, 383, 386, 404, 410, 418, 461, 462, 469, 490, 550, 551, 553, 557], "easier": [359, 365, 370, 378, 383, 418, 421, 468], "easiest": 392, "easili": [83, 86, 119, 365, 370, 371, 375, 386, 391, 392, 450, 451, 458, 459, 461, 469, 479, 553], "ebel": 436, "ebl": [213, 214, 261, 377, 382, 404, 407, 417, 424, 427, 464, 507, 539], "ebl_data_builtin": 519, "ebl_dominguez11": [214, 519], "ebl_franceschini": [214, 261], "ebl_franceschini_2017": 214, "ebl_saldana": 214, "eblabsorbtionnormspectralmodel": 382, "eblabsorptionnormspectralmodel": [243, 382, 407, 464, 519], "ebound": [140, 188, 506], "ebreak": [205, 249, 520, 534], "ec": [453, 464, 506], "eccentr": [212, 220, 223, 510, 511, 512], "echo": 553, "eco": 385, "ecosystem": 386, "ecpl": [65, 76, 215, 216, 217, 270, 382, 416, 430, 456, 464], "ecpl_norm": 525, "ecsv": [59, 62, 371], "ecut": [215, 252, 524, 535], "edelson": [278, 449], "edelson2002": 278, "edg": [97, 100, 104, 105, 112, 114, 116, 120, 123, 124, 127, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 163, 164, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 212, 352, 373, 383, 401, 407, 410, 428, 441, 442, 443, 444, 445, 449, 459, 460, 461, 462, 469, 470, 477, 510], "edge_max": 510, "edge_min": 510, "edge_width": [212, 463, 510], "edgecolor": [356, 432, 434, 436, 442, 443, 446, 453, 455, 502, 510, 511, 512], "edges_max": [185, 188, 193, 461], "edges_min": [185, 188, 193, 461], "edisp": [16, 78, 83, 84, 91, 97, 100, 101, 104, 105, 106, 110, 140, 141, 142, 145, 149, 163, 169, 170, 173, 174, 248, 286, 287, 360, 369, 370, 371, 372, 375, 405, 407, 410, 416, 417, 418, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 442, 444, 445, 448, 451, 452, 457, 460, 465, 468, 469, 470, 471, 477, 489, 497, 498, 552], "edisp2d": [142, 145, 360], "edisp3d": 459, "edisp_": 489, "edisp_2d": [78, 83, 145, 468, 471], "edisp_3d": 459, "edisp_ev": 459, "edisp_kernel": [140, 457, 497], "edisp_kernel_map": [141, 470], "edisp_map": [98, 103, 141, 142, 459, 497], "edisp_new": 459, "edispersionmap": 489, "edispkernel": [100, 106, 110, 141, 145, 173, 405, 497], "edispkernelmap": [97, 100, 101, 104, 105, 108, 142, 148, 149, 153, 156, 163, 170, 173, 406, 407, 436, 460, 469, 493, 497], "edispmap": [97, 98, 100, 103, 104, 105, 141, 148, 149, 153, 156, 163, 170, 173, 174, 371, 372, 380, 400, 403, 404, 405, 407, 410, 459, 497], "edit": [360, 362, 364, 366, 367, 368, 375, 379, 388, 389, 392, 477, 553], "editor": [360, 385, 433, 477, 553], "editori": 385, "edm": 458, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 182, 191, 194, 200, 211, 230, 233, 263, 264, 279, 379, 458, 506], "eemin": 529, "eff": [143, 495, 498, 511, 512], "eff_area": 459, "effarea": 459, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 78, 83, 84, 86, 100, 102, 142, 143, 169, 170, 175, 177, 178, 191, 211, 233, 349, 350, 359, 364, 369, 370, 372, 373, 383, 414, 416, 432, 444, 446, 449, 450, 466, 470, 471, 473, 477, 498, 506, 511, 512, 552], "effective_area": [149, 372, 468], "effective_livetim": 460, "effective_times_src": 460, "effectivearea3d": 459, "effectiveareat": [371, 398, 410, 414], "effectiveareatable2d": [84, 142, 149, 155, 177, 365, 414, 459, 468, 495], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 100, 105, 364, 370, 371, 372, 373, 374, 381, 430, 465, 498, 503, 555], "effort": [366, 368, 375, 376, 378, 379, 382, 401, 489], "eflux": [19, 20, 26, 117, 118, 119, 128, 129, 130, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 383, 410, 446, 464, 491], "eflux_err": [117, 119, 383], "eflux_errn": [117, 119], "eflux_errp": [117, 119], "eflux_ref": [117, 119], "eflux_ul": [117, 119], "eg": [359, 440, 448, 452, 457, 459, 463, 464], "egal": 468, "egg": 392, "einasto": [21, 481], "either": [65, 78, 83, 84, 86, 90, 105, 117, 119, 145, 160, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 225, 288, 318, 348, 360, 362, 364, 366, 373, 375, 378, 381, 385, 391, 410, 424, 433, 440, 446, 452, 457, 458, 464, 466, 477, 489, 491, 493, 504, 506, 550, 553], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 455], "elabor": [385, 436], "elaps": [79, 368, 552], "electron": [50, 263, 468, 529], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 95, 97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 352, 377, 424, 456, 461, 505], "elementtre": 468, "elev": 374, "elif": [359, 373, 386], "elli": [398, 411], "ellips": [212, 373, 506, 510], "ellipseannulusskyregion": [502, 506], "ellipseskyregion": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 429, 464, 502], "ellipsoid": 458, "ellipt": [506, 512], "elong": [400, 403, 404, 510, 511], "elpas": 424, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 117, 119, 127, 190, 359, 362, 373, 376, 383, 386, 387, 389, 391, 393, 465, 553, 555], "elsewher": [109, 111], "em": 460, "email": [360, 362, 385, 389], "emax": [124, 238, 264, 437, 443, 532], "emax_fit": 453, "embryon": 375, "emce": [368, 376, 400, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "emerg": 369, "emeri": 419, "emin": [124, 238, 264, 437, 443, 532], "emin_fit": 453, "emiss": [52, 66, 128, 365, 370, 374, 432, 438, 440, 441, 444, 463, 468, 469, 489, 503, 529, 550], "emit": [78, 201, 202, 203, 204, 345, 359, 400, 418, 498], "emitt": 432, "emphasi": 458, "empir": 40, "emploi": 434, "empti": [87, 95, 97, 100, 104, 105, 132, 163, 183, 184, 186, 190, 192, 195, 196, 200, 233, 345, 367, 369, 401, 413, 440, 444, 445, 448, 452, 460, 461, 470, 482, 489, 502, 503, 506], "empty_dataset": 428, "empty_i": 452, "empty_map": [97, 100, 104, 105, 443, 460, 502], "emsembl": 88, "en": [34, 79, 83, 84, 86, 120, 176, 191, 200, 261, 288, 362, 379, 428, 435, 437, 440, 442, 448, 452, 458, 459, 462, 468, 490, 504, 506], "enabl": [368, 371, 392, 401, 410, 419, 428, 435, 437, 440, 442, 448, 452, 468], "encapsul": [194, 383, 504], "enclos": [196, 360, 429, 434, 458, 462], "enclosur": [78, 147, 434, 459], "encod": [16, 80, 83, 86, 99, 118], "encompass": [182, 504, 506], "encount": [157, 391, 392, 393, 394, 434, 444, 452, 471, 541, 553], "encourag": [359, 364, 385, 388, 418], "end": [52, 53, 82, 83, 86, 87, 89, 95, 97, 104, 117, 119, 127, 188, 225, 233, 364, 366, 368, 370, 371, 373, 374, 375, 376, 378, 379, 382, 411, 421, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 477, 478, 479, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 555], "end_po": [121, 321, 446], "endswith": 359, "energet": 444, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 61, 62, 65, 69, 71, 72, 76, 78, 79, 84, 91, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 116, 117, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 163, 165, 169, 170, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 186, 188, 189, 191, 192, 194, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 354, 355, 359, 365, 368, 370, 371, 372, 373, 374, 375, 377, 378, 381, 383, 387, 391, 395, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 429, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 444, 446, 447, 448, 450, 451, 452, 453, 456, 457, 460, 461, 470, 471, 473, 477, 478, 479, 488, 489, 490, 493, 498, 501, 502, 504, 505, 506, 513, 519, 525, 528, 530, 533, 538, 548, 550, 551, 552, 554], "energy_axes_are_align": 95, "energy_axi": [19, 20, 26, 97, 100, 104, 105, 106, 107, 110, 117, 119, 140, 141, 142, 153, 155, 156, 163, 183, 184, 186, 192, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 383, 428, 429, 432, 434, 435, 436, 438, 442, 444, 445, 451, 452, 457, 459, 460, 461, 464, 469, 470, 478, 497, 500, 502, 503, 505, 506], "energy_axis_new": 457, "energy_axis_tru": [97, 100, 104, 105, 106, 107, 108, 110, 140, 141, 142, 143, 145, 150, 151, 153, 163, 360, 404, 428, 429, 432, 434, 435, 436, 438, 442, 444, 445, 448, 451, 452, 453, 457, 459, 460, 469, 470, 478, 497, 500, 502, 503], "energy_bin": 375, "energy_bin_per_decade_max": 107, "energy_bound": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 373, 410, 430, 432, 434, 440, 441, 453, 455, 456, 458, 464, 469, 478, 479, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 538], "energy_cent": 258, "energy_column": 383, "energy_depend": 443, "energy_dependent_estim": [427, 443, 447], "energy_edg": [16, 112, 114, 116, 120, 121, 124, 127, 132, 133, 136, 188, 308, 383, 432, 433, 436, 437, 438, 440, 441, 442, 443, 446, 450, 451, 452, 453, 470, 477, 478, 491], "energy_estim": 470, "energy_flux": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 464, 479], "energy_flux_err": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "energy_flux_error": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "energy_index": 150, "energy_integr": 51, "energy_logspac": 378, "energy_mask": [181, 182, 191, 194, 406, 434, 440, 453, 457, 458, 462, 466], "energy_max": [19, 20, 26, 79, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 140, 181, 182, 188, 191, 194, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 258, 261, 266, 373, 375, 440, 445, 453, 455, 457, 460, 464, 479], "energy_min": [19, 20, 26, 52, 53, 79, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 140, 181, 182, 188, 191, 194, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 258, 261, 266, 373, 375, 440, 445, 453, 455, 457, 460, 464, 479], "energy_nam": [153, 156], "energy_nod": [382, 464], "energy_pow": [19, 20, 26, 119, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 268, 440, 453, 458, 478, 479], "energy_rang": [64, 65, 69, 71, 72, 76, 79, 95, 97, 100, 104, 105, 410, 457, 462, 536, 537], "energy_range_fit": [97, 100, 104, 105, 457], "energy_range_saf": [97, 100, 104, 105, 457], "energy_range_tot": [97, 100, 104, 105, 462], "energy_reco": [359, 448], "energy_ref": [117, 119], "energy_resolut": 418, "energy_saf": 375, "energy_tru": [16, 91, 97, 100, 104, 105, 106, 110, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 163, 170, 173, 181, 182, 188, 191, 194, 286, 287, 359, 360, 372, 424, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 442, 444, 445, 448, 450, 451, 452, 453, 457, 459, 460, 461, 462, 464, 465, 468, 469, 470, 477, 478, 497, 498, 500, 502, 503, 506], "energy_true_axi": 140, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 402, "energydependentmorphologi": 443, "energydependentmorphologyestim": [425, 443], "energydependentmultigausspsf": [149, 398, 459, 468, 499], "energydependenttablepsf": [365, 380, 399, 410], "energydispers": [140, 141, 142, 145, 371, 405, 415, 418, 419], "energydispersion2d": [84, 140, 142, 149, 155, 173, 174, 360, 365, 410, 412, 417, 459, 468, 497], "energydispersion3d": 459, "energyoffsetarrai": 415, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 362, 386], "engin": [83, 86], "english": 493, "enhanc": [364, 368, 395], "enlarg": 503, "enough": [372, 374, 375, 432, 435, 438, 448, 450, 462], "enrico": 375, "enrico_config": 375, "enrico_xml": 375, "enriqu": [367, 375, 379, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 418, 419, 420], "ensembl": 88, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 169, 270, 359, 365, 370, 371, 382, 386, 392, 412, 428, 432, 451, 462, 514], "enter": [202, 204, 211, 233, 395], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 97, 99, 100, 104, 105, 118, 170, 429, 440, 443, 449], "entri": [43, 44, 83, 86, 89, 114, 117, 120, 121, 124, 125, 200, 211, 233, 270, 327, 359, 371, 379, 383, 386, 388, 391, 393, 410, 421, 429, 433, 456, 458, 461, 464, 465, 493, 494, 506], "entry_point": 411, "enum": [90, 146, 303, 304], "enumer": [444, 456, 463, 466], "env": [362, 376, 388, 390, 391, 393, 394, 419, 553], "envelop": [372, 458, 478], "environ": [11, 78, 325, 358, 359, 362, 366, 367, 371, 376, 379, 388, 389, 391, 392, 393, 394, 395, 399, 400, 402, 418, 419, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 553], "envis": 368, "envvar": 11, "eosc": 385, "episod": 128, "epoch": 342, "epsilon": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "epsilon_": [97, 104, 489], "epsilon_k": [97, 104, 489], "epsmch": 458, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 382, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 112, 116, 120, 124, 127, 140, 188, 359, 369, 372, 420, 432, 450, 451, 462, 466, 489, 505, 556], "equat": [27, 253, 254, 278, 515, 516, 520, 523, 524, 526, 527, 531, 532, 534, 535, 536, 537, 555, 556], "equatori": [90, 146, 182, 183, 184, 186, 189, 191, 194, 195, 196, 459], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 117, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 352, 360, 371, 372, 373, 382, 383, 424, 425, 456, 460, 461, 462, 464, 468, 477, 489, 491, 493, 504, 505, 506, 553, 554, 555], "er": [26, 455], "era": 213, "ereco": [140, 459], "erf": [221, 510], "erg": [52, 53, 65, 428, 432, 456, 479, 486, 493], "erlangen": 378, "erod": 196, "eros": [194, 196], "err": 458, "errat": 359, "errn": [116, 120, 124, 125, 127, 200, 421, 555], "errn_2sigma": 555, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 66, 75, 80, 82, 97, 99, 100, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 159, 185, 188, 193, 201, 203, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 272, 273, 277, 278, 279, 337, 359, 360, 373, 374, 375, 377, 382, 383, 386, 387, 400, 404, 406, 408, 410, 411, 413, 417, 418, 421, 423, 424, 425, 429, 430, 432, 433, 435, 437, 440, 441, 442, 443, 445, 448, 449, 450, 452, 453, 456, 464, 465, 466, 468, 477, 478, 479, 481, 489, 491, 493, 511, 529, 538, 550, 553], "error_callback": 159, "errorbar": [79, 96, 97, 100, 104, 105, 188, 192, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 428, 466], "errp": [116, 120, 124, 125, 127, 200, 421, 555], "errp_2sigma": 555, "escap": [359, 385], "especi": [83, 86, 128, 362, 366, 369, 373, 379, 380, 389, 410, 416, 429, 442, 451, 456, 461, 466, 468, 469], "essenti": [369, 371, 374, 404, 405, 406, 446, 461], "establish": [359, 372], "estim": [6, 19, 20, 26, 50, 70, 96, 100, 105, 107, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 158, 164, 165, 166, 172, 181, 182, 191, 194, 196, 200, 201, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 270, 276, 279, 283, 308, 352, 363, 365, 368, 372, 373, 374, 375, 378, 381, 387, 391, 400, 401, 404, 405, 406, 407, 410, 411, 412, 416, 417, 418, 419, 421, 424, 425, 427, 428, 432, 434, 438, 440, 441, 442, 445, 447, 451, 452, 453, 454, 457, 458, 462, 466, 470, 473, 477, 478, 489, 493, 503, 505, 550, 551, 552, 554, 556], "estimate_best_fit": [120, 121, 124, 125], "estimate_count": [120, 121, 124, 125], "estimate_energy_depend": 114, "estimate_errn_errp": [120, 121, 124, 125], "estimate_excess_map": 116, "estimate_exposure_reco_energi": 116, "estimate_fit_input_map": 127, "estimate_flux_default": 127, "estimate_flux_map": 127, "estimate_flux_point": [120, 121, 124], "estimate_kernel": [116, 127], "estimate_map": 112, "estimate_mask_default": [116, 127], "estimate_min_e2dnd": 126, "estimate_min_excess": 126, "estimate_npr": [120, 121, 124, 125], "estimate_npred_excess": [120, 121, 124], "estimate_pad_width": 127, "estimate_scan": [120, 121, 124, 125], "estimate_t": [120, 121, 124, 125], "estimate_time_bin_flux": 124, "estimate_ul": [120, 121, 124, 125], "estimator_result": [134, 453], "et": [26, 33, 59, 128, 143, 213, 278, 279, 369, 436, 443, 449, 481, 552], "eta": [223, 224, 245, 512, 516, 543], "eta_": 50, "eta_b": 50, "eta_rang": [512, 516], "etc": [100, 105, 117, 359, 364, 365, 369, 370, 371, 374, 375, 379, 380, 383, 385, 386, 407, 433, 435, 440, 448, 450, 452, 453, 457, 461, 464, 466, 469, 477, 489, 502, 552], "etru": 459, "eu": 379, "euclidean": 286, "europ": 385, "ev": [459, 493, 529], "ev2": 459, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 86, 97, 100, 103, 104, 105, 120, 124, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 170, 176, 191, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 359, 364, 368, 374, 377, 378, 381, 382, 383, 387, 399, 400, 401, 403, 406, 410, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 444, 445, 453, 459, 464, 466, 468, 469, 489, 511, 512, 519, 552, 555], "evaluate_contain": [144, 152, 154, 412], "evaluate_direct": [144, 152, 154], "evaluate_energy_flux": [239, 240], "evaluate_error": [19, 20, 26, 119, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 377], "evaluate_geom": [207, 208, 212, 219, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260, 425, 464, 512], "evaluate_integr": [238, 239, 240], "evaluate_paramet": [144, 152, 154], "evaluation_bin_size_min": [207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260], "evaluation_radiu": [207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 258, 260, 370, 371, 382, 464], "evaluation_region": [207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 194, 202, 204, 359, 362, 364, 366, 367, 373, 376, 377, 385, 386, 402, 450, 453, 458, 460, 461, 462, 463, 464, 477, 489, 491, 515, 516, 553], "event": [78, 79, 80, 81, 82, 83, 84, 85, 88, 98, 99, 103, 108, 116, 126, 142, 153, 156, 157, 164, 172, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 318, 359, 360, 363, 365, 369, 371, 373, 374, 375, 386, 391, 395, 402, 403, 404, 406, 410, 411, 412, 417, 418, 419, 420, 421, 424, 425, 427, 429, 432, 433, 434, 438, 440, 441, 447, 452, 460, 470, 473, 475, 477, 478, 489, 493, 501, 502, 503, 551, 552, 555], "event_3fhl": 479, "event_class": [80, 469, 479], "event_det_coord": [98, 103], "event_fil": 84, "event_filt": 85, "event_filter_typ": 85, "event_id": [372, 468, 469, 479, 490], "event_list": [79, 359, 360, 372], "event_list_meta": [98, 103, 405], "event_sampl": [427, 444, 447], "event_sampling_nrg_depend_model": [427, 445, 447], "event_typ": [99, 469, 479], "eventlist": [80, 84, 98, 103, 172, 183, 184, 186, 192, 195, 196, 359, 360, 365, 372, 373, 374, 386, 395, 400, 407, 412, 414, 415, 416, 418, 419, 444, 445, 453, 461, 468, 469, 479, 493, 502], "eventlistbas": 85, "eventlistdataset": 419, "eventlistlat": 490, "eventlistmetadata": [79, 386], "events2": 79, "events_": 444, "events_0001": 444, "events_1": 490, "events_2": 490, "events_3fhl": 479, "events_bkg": 372, "events_gc_3fhl": 479, "events_list": 372, "events_new": 493, "events_path": [78, 444], "events_src": 372, "events_tot": 372, "events_vela": 453, "eventu": [359, 364, 375, 378, 379, 395, 464], "ever": 556, "everi": [182, 184, 196, 260, 359, 362, 367, 368, 369, 371, 375, 384, 386, 389, 429, 432, 461, 478, 553], "everyon": 364, "everyth": [359, 377, 378, 493], "everywher": [359, 373, 378, 379, 399], "evid": [128, 456], "evolut": [50, 52, 53, 213, 365, 379, 427, 447, 473, 486, 487, 489, 490, 498, 501, 505, 507], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 213, 376, 379, 386, 445, 459], "evt_sampl": 444, "ex": [11, 461, 463, 464], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 377, 461, 469], "exactli": [112, 116, 120, 124, 127, 188, 354, 434, 451, 453, 462, 466, 469, 489, 506], "exagger": 350, "examin": [385, 497], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 64, 65, 76, 78, 79, 81, 82, 83, 84, 85, 86, 89, 91, 94, 96, 97, 100, 104, 105, 106, 109, 110, 111, 112, 114, 116, 119, 121, 123, 124, 125, 126, 127, 128, 132, 133, 135, 136, 138, 140, 142, 143, 144, 145, 151, 153, 156, 163, 166, 168, 182, 183, 184, 186, 189, 192, 194, 195, 196, 202, 204, 225, 231, 261, 264, 270, 286, 287, 308, 312, 318, 327, 338, 339, 344, 347, 349, 350, 352, 354, 356, 359, 360, 362, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 382, 385, 386, 387, 391, 392, 393, 395, 399, 401, 404, 407, 410, 411, 412, 415, 417, 418, 419, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 493, 495, 496, 497, 499, 504, 506, 507, 508, 518, 539, 547, 548, 549, 553, 555, 557, 558], "example_cub": 461, "example_cube_fgst": 461, "exce": 107, "except": [65, 67, 76, 83, 86, 97, 100, 104, 105, 159, 183, 184, 186, 192, 195, 196, 288, 356, 359, 370, 374, 378, 459, 463, 506], "excerpt": 471, "excess": [15, 65, 70, 97, 100, 104, 105, 113, 116, 117, 119, 120, 121, 124, 126, 129, 130, 134, 163, 272, 273, 278, 279, 357, 371, 374, 406, 407, 413, 418, 425, 428, 432, 433, 435, 436, 437, 440, 442, 446, 448, 452, 453, 456, 457, 460, 462, 463, 470, 477, 478, 491, 493], "excess_estim": 470, "excess_estimator_integr": 470, "excess_integr": 470, "excess_map": [16, 433, 437, 438, 440, 477], "excess_map_estim": 453, "excess_matching_signific": [409, 419], "excess_min": 136, "excess_r": 457, "excessestim": 383, "excessmapconfig": 16, "excessmapestim": [113, 132, 133, 134, 383, 406, 407, 408, 410, 413, 423, 425, 438, 440, 453, 462, 470, 491], "excesspointsestim": 383, "excessprofileestim": [383, 407], "exchang": 373, "exclud": [16, 80, 96, 97, 99, 100, 104, 105, 118, 123, 164, 166, 202, 204, 211, 233, 365, 422, 460, 462, 502, 503], "exclude_default": [16, 80, 99, 118], "exclude_non": [16, 80, 99, 118], "exclude_unset": [16, 80, 99, 118], "exclus": [16, 79, 158, 160, 165, 166, 167, 168, 171, 182, 194, 365, 373, 375, 406, 408, 429, 437, 440, 460, 500, 502], "exclusion_mask": [158, 160, 165, 166, 167, 168, 171, 432, 438, 442, 460, 462, 478, 500, 502, 503], "exclusion_mask_2d": 460, "exclusion_mask_crab": [433, 477], "exclusion_radiu": 462, "exclusion_region": 432, "exclusionmask": 416, "execut": [11, 116, 120, 124, 125, 127, 359, 360, 362, 364, 366, 367, 368, 374, 375, 379, 389, 390, 391, 392, 393, 394, 395, 404, 412, 418, 427, 431, 439, 447, 454, 460, 461, 467, 469, 472, 473, 474, 476, 479, 480, 508, 518, 539, 549, 551], "exercis": [362, 375, 379, 385], "exhibit": 443, "exist": [11, 15, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 84, 86, 94, 95, 96, 97, 100, 102, 104, 105, 117, 119, 141, 142, 148, 153, 156, 168, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 211, 225, 233, 256, 257, 258, 260, 343, 359, 362, 364, 367, 368, 370, 371, 372, 373, 375, 376, 378, 379, 380, 382, 383, 385, 386, 391, 392, 395, 396, 399, 403, 404, 418, 419, 421, 424, 436, 438, 457, 461, 462, 464, 465, 469, 490, 505, 506, 554], "exist_ok": [432, 433, 440, 441, 444, 477, 478], "exit": [11, 15, 83, 86, 202, 204, 211, 233, 400, 517, 553], "exot": 376, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 143, 218, 221, 228, 239, 240, 252, 360, 382, 452, 464, 511, 512, 519, 523, 524, 525, 526, 535, 536, 537, 541, 542, 543, 556], "expand": [124, 325, 369, 410], "expand_map": 124, "expans": [50, 52, 53], "expcutoffpowerlaw": 525, "expcutoffpowerlaw3fglspectralmodel": [243, 382, 430, 464, 524], "expcutoffpowerlawnormspectralmodel": [217, 243, 425, 464, 525], "expcutoffpowerlawspectralmodel": [19, 20, 26, 76, 205, 206, 209, 213, 215, 216, 221, 227, 228, 230, 234, 236, 238, 239, 240, 243, 244, 249, 251, 252, 253, 254, 257, 261, 382, 430, 432, 440, 464, 523, 525, 529], "expdecai": [218, 427, 507, 549], "expdecay_model": [444, 541], "expdecaytemporalmodel": [255, 382, 406, 410, 444, 452, 464, 541], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 103, 105, 117, 168, 173, 174, 179, 194, 272, 273, 274, 276, 280, 285, 318, 359, 364, 372, 374, 375, 376, 379, 384, 386, 428, 429, 434, 435, 436, 438, 444, 445, 449, 450, 455, 458, 461, 462, 466, 469, 471, 489, 491, 554, 555, 556], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 432, 445], "experi": [362, 364, 368, 370, 374, 387, 389, 418, 481, 552, 557], "experienc": [368, 394], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 375, 553], "expert": 379, "expertis": 376, "expfactor": [253, 254, 536, 537], "expir": 372, "explain": [83, 86, 359, 362, 364, 373, 376, 378, 379, 385, 389, 391, 393, 404, 410, 428, 432, 434, 455, 458, 462, 464, 493, 551, 553], "explan": [112, 116, 120, 124, 127, 364, 396, 449, 557], "explicit": [83, 86, 182, 184, 359, 375, 377, 383, 505, 557], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 288, 369, 381, 390, 400, 445, 463, 491, 505, 557], "explor": [183, 184, 186, 192, 195, 196, 367, 375, 395, 427, 432, 437, 440, 443, 446, 447, 449, 450, 451, 456, 457, 463, 470, 471, 477, 479, 489, 490, 491, 493, 501, 502, 505, 550], "explos": 52, "expomap": 372, "expon": [382, 464], "exponenti": [28, 30, 36, 39, 40, 215, 216, 217, 218, 252, 253, 254, 360, 370, 404, 427, 440, 444, 452, 507, 539], "exponentialcutoffpowerlaw": 529, "export": [80, 83, 86, 97, 99, 100, 117, 118, 119, 362, 383, 386, 391, 393, 404, 414, 421, 422, 425, 433, 464, 470, 471, 477], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 368, 373, 374, 375, 378, 379, 423, 425, 461, 473, 491, 492, 551], "exposur": [16, 79, 84, 97, 100, 101, 103, 104, 105, 116, 127, 131, 141, 142, 148, 151, 153, 156, 158, 163, 170, 173, 174, 175, 177, 178, 179, 248, 281, 284, 285, 365, 368, 369, 370, 371, 372, 383, 402, 407, 415, 417, 418, 419, 421, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 442, 444, 445, 448, 451, 452, 457, 460, 461, 462, 470, 477, 478, 489, 498, 501, 506, 555], "exposure_geom": 142, "exposure_hdu": [141, 142, 148, 153, 156], "exposure_hdu_band": [141, 142, 148, 153, 156], "exposure_hpx": 469, "exposure_map": [141, 142, 148, 153, 156, 173, 174, 179, 459], "exposure_max": 457, "exposure_min": 457, "exposure_tim": 372, "express": [116, 128, 272, 273, 370, 382, 383, 425, 438, 458, 459, 464, 466, 489, 505, 512, 554, 555, 556], "exptest": 416, "extend": [15, 19, 20, 26, 67, 70, 83, 86, 87, 95, 158, 185, 188, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 233, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 366, 370, 371, 372, 373, 379, 381, 382, 383, 386, 391, 403, 405, 410, 427, 431, 432, 436, 445, 450, 456, 461, 462, 463, 464, 469, 473, 489, 490, 501, 502, 550], "extended_archive_v18": 517, "extended_source_spectral_analysi": [427, 429, 431], "extens": [41, 79, 140, 183, 184, 186, 188, 195, 196, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 250, 256, 260, 361, 364, 365, 366, 367, 368, 370, 372, 374, 375, 376, 377, 378, 379, 389, 413, 443, 444, 445, 464, 553], "extent": [194, 211, 233, 373, 436, 464], "extern": [108, 360, 385, 411, 415, 416, 419, 468, 493], "extnam": 459, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 79, 80, 99, 118, 181, 182, 187, 191, 192, 194, 200, 256, 257, 286, 358, 360, 366, 367, 373, 375, 376, 379, 385, 386, 415, 418, 419, 461, 462, 493, 506], "extra_term": 285, "extract": [16, 80, 95, 97, 99, 100, 104, 105, 117, 118, 119, 124, 141, 142, 148, 153, 156, 159, 164, 165, 170, 172, 180, 183, 184, 185, 186, 188, 193, 194, 195, 196, 258, 359, 369, 374, 383, 385, 386, 412, 413, 424, 425, 428, 429, 432, 433, 434, 435, 440, 441, 444, 445, 446, 448, 457, 461, 477, 489, 497, 502], "extragalact": [213, 468], "extrapol": [137, 138, 139, 163, 183, 184, 186, 192, 195, 196, 213, 261, 300, 410, 415, 417, 418, 459, 461, 468, 469, 505], "extras_requir": 376, "extrem": [359, 386, 461, 512], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 127, 136, 190, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 287, 288, 315, 359, 362, 376, 381, 382, 387, 390, 391, 393, 412, 421, 428, 429, 432, 433, 435, 441, 442, 443, 444, 445, 451, 452, 453, 455, 456, 458, 460, 462, 464, 465, 466, 469, 470, 475, 477, 478, 479, 487, 502, 519, 529, 540, 541, 542, 543, 544, 545, 546, 553, 554, 555], "f0": [259, 547], "f06": 48, "f06b": [49, 483], "f06p": 49, "f1": [259, 547], "f2": [259, 547], "f4": [138, 143, 434, 457, 459, 461, 468, 469], "f8": [459, 469], "f_": [277, 279, 287, 489], "f_0": [238, 532], "f_dead": [79, 84], "f_i": 277, "f_max": 449, "f_max_err": 449, "f_mean": 449, "f_mean_err": 449, "f_min": 449, "f_min_err": 449, "f_pp": 278, "f_var": 278, "fabio": [372, 377, 400, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 417, 419, 421, 423, 424, 425], "face": [364, 367], "facecolor": [356, 432, 434, 442, 443, 446, 453, 455, 510, 511, 512], "facil": 384, "fact": [19, 20, 92, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 385, 429, 506], "facto": 385, "factor": [19, 20, 23, 97, 98, 100, 103, 104, 105, 112, 117, 141, 142, 144, 148, 150, 151, 152, 153, 154, 156, 163, 170, 176, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 199, 201, 202, 203, 204, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 259, 260, 262, 359, 372, 374, 406, 428, 435, 437, 440, 442, 446, 448, 452, 457, 460, 464, 468, 489, 506, 519], "factor1": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260], "factor_max": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260], "factor_min": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260], "factori": [183, 184, 195, 196, 373, 378, 382, 504, 506], "factoris": [248, 382, 464, 550], "fail": [16, 80, 99, 118, 200, 360, 362, 373, 388, 389, 413, 441, 469], "failur": [421, 424], "faint": 554, "fair": 385, "fair4r": 385, "fake": [97, 100, 104, 105, 371, 372, 402, 434, 435, 448, 452, 466], "fall": [128, 166, 193, 211, 233, 359, 366, 368, 369, 376, 419, 420, 449], "fallback": 359, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 78, 79, 80, 82, 83, 84, 86, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 116, 117, 118, 119, 120, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 170, 173, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 288, 318, 326, 328, 356, 359, 373, 375, 382, 387, 418, 419, 425, 428, 429, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 446, 448, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 469, 477, 478, 479, 490, 500, 502, 503, 517, 529, 538], "falsifi": 466, "famili": 385, "familiar": [376, 377, 461, 462, 479], "fanci": [359, 453], "far": [367, 372, 374, 376, 380, 383, 386, 395, 410, 444, 481], "fashion": [374, 379], "fast": [359, 373, 377, 458], "faster": [83, 86, 183, 184, 186, 192, 195, 196, 337, 425, 436], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 483, "favour": [364, 372, 387, 466], "favourit": 442, "fc": [464, 506], "fcluster": [286, 465], "fcluster_kwarg": [286, 465], "fcn": 458, "fdx": 359, "fe": 263, "feasibl": [373, 378, 435, 448, 457], "featur": [6, 13, 83, 86, 91, 112, 132, 286, 287, 349, 350, 359, 362, 366, 368, 369, 370, 371, 373, 375, 376, 381, 382, 383, 385, 386, 387, 392, 397, 400, 401, 402, 403, 404, 406, 407, 410, 414, 417, 418, 419, 420, 449, 461, 462, 464, 465, 481, 491, 529], "feature_irf": 465, "features_irf": [91, 286, 287, 465], "feb": [365, 366, 376, 380, 395, 397], "februari": 397, "fed": 434, "feedback": [362, 364, 368, 373, 375, 376, 379, 380, 382, 388, 418, 459, 493], "feedstock": [388, 389], "feel": [369, 553], "feijen": [423, 424, 425], "feldman": [401, 407, 415, 417, 552], "feldman1998": [552, 555], "fellowship": 385, "felt": 359, "fermi": [55, 58, 60, 61, 63, 67, 69, 71, 72, 74, 79, 82, 120, 121, 123, 127, 183, 184, 186, 192, 193, 195, 196, 213, 263, 265, 270, 366, 367, 368, 369, 371, 372, 375, 376, 379, 389, 391, 396, 398, 399, 402, 404, 407, 411, 414, 415, 416, 417, 418, 419, 427, 430, 436, 444, 446, 456, 461, 462, 463, 464, 472, 473, 479, 481, 489, 490, 493, 498, 505, 517, 527, 532, 550, 557], "fermi_3fhl": [79, 183, 184, 186, 192, 195, 196, 463, 469, 479], "fermi_3fhl_events_select": [79, 469], "fermi_3fhl_exposure_cube_hpx": 469, "fermi_3fhl_psf_gc": 469, "fermi_bkg_model": 463, "fermi_ct": 123, "fermi_dataset": [270, 463, 469], "fermi_lat": [379, 419, 427, 469, 472], "fermi_model": 469, "fermi_prof": 121, "fermi_ts_imag": 360, "fermipi": [366, 368, 371, 375, 379, 383, 416, 418, 469, 481], "fermitool": 375, "fetch": [15, 359, 367, 398, 411, 477, 553], "few": [78, 79, 83, 84, 86, 358, 359, 360, 362, 364, 365, 366, 367, 369, 371, 373, 377, 379, 384, 388, 389, 395, 409, 420, 422, 425, 429, 433, 438, 440, 442, 456, 458, 461, 468, 477, 478, 502, 506, 558], "fewer": [373, 379], "ff": 385, "fft": 196, "fftconvolv": 196, "fgl": [193, 462], "fgst": [182, 183, 184, 186, 187, 188, 194, 195, 196, 461], "fhit": 470, "fidalgo": [369, 374, 399, 419, 420], "fiduci": 461, "field": [16, 42, 50, 51, 54, 79, 80, 83, 86, 99, 118, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 160, 219, 234, 290, 294, 346, 359, 373, 385, 386, 395, 400, 405, 412, 419, 432, 434, 438, 440, 442, 444, 459, 460, 462, 468, 469, 493, 495, 496, 497, 498, 499, 500, 502, 529, 552], "fieldinfo": [16, 80, 99, 118], "fig": [196, 347, 428, 429, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 446, 450, 452, 453, 455, 458, 462, 466, 502, 503, 512, 516, 519, 551], "figsiz": [84, 97, 100, 104, 105, 122, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 183, 184, 186, 192, 195, 196, 347, 429, 432, 435, 436, 438, 440, 441, 442, 443, 449, 450, 451, 452, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 471, 502, 512, 516, 519], "figur": [84, 97, 100, 104, 105, 122, 137, 138, 140, 141, 142, 143, 144, 150, 151, 152, 153, 154, 156, 183, 184, 186, 192, 195, 196, 337, 346, 347, 353, 359, 360, 364, 379, 389, 432, 436, 440, 442, 443, 444, 446, 449, 450, 451, 455, 457, 458, 460, 461, 463, 464, 469, 470, 471, 553], "file": [11, 15, 16, 26, 63, 64, 65, 78, 79, 81, 82, 83, 84, 86, 88, 89, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 164, 169, 183, 184, 186, 190, 192, 195, 196, 211, 213, 225, 233, 256, 257, 258, 259, 260, 261, 296, 326, 328, 358, 359, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 378, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 393, 395, 403, 404, 410, 412, 414, 416, 417, 418, 419, 421, 422, 424, 425, 427, 428, 431, 434, 435, 439, 440, 442, 444, 445, 447, 448, 452, 454, 456, 457, 460, 461, 462, 463, 464, 467, 470, 471, 472, 473, 474, 476, 479, 480, 481, 492, 493, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 557], "file_dir": 296, "file_model": 444, "file_nam": 296, "filemod": [16, 433, 437, 438, 440, 477, 553], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 81, 82, 83, 86, 89, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 121, 123, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 183, 184, 186, 190, 192, 195, 196, 211, 213, 225, 233, 256, 257, 258, 259, 260, 261, 265, 267, 269, 270, 296, 326, 328, 338, 359, 360, 364, 407, 432, 433, 437, 438, 440, 441, 445, 446, 456, 457, 461, 462, 463, 464, 468, 469, 477, 478, 479, 490, 493, 495, 496, 497, 499, 517, 519, 547, 548, 553], "filename_1": 490, "filename_2": 490, "filename_arf": 102, "filename_bkg": 102, "filename_model": [95, 117, 270, 463, 469], "filename_rmf": 102, "fill": [16, 80, 81, 83, 86, 97, 99, 100, 103, 104, 105, 118, 140, 151, 182, 183, 184, 186, 192, 194, 195, 196, 261, 359, 367, 368, 372, 375, 379, 385, 388, 389, 404, 411, 418, 421, 429, 444, 445, 456, 459, 460, 462, 469, 478, 505], "fill_between": [19, 20, 26, 122, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 453], "fill_by_coord": [151, 183, 184, 186, 192, 195, 196, 461, 469, 505], "fill_by_idx": [183, 184, 186, 192, 195, 196, 505], "fill_by_pix": [183, 184, 186, 192, 195, 196, 505], "fill_ev": [183, 184, 186, 192, 195, 196, 413, 424, 434, 461, 469, 475], "fill_nan": 184, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 256, 257, 260, 261, 359, 459, 461, 469], "filled_t": [83, 86], "filter": [84, 85, 365, 369, 371, 373, 374, 419, 420, 423, 462, 465, 473, 478, 479], "filter_ev": 85, "filter_gti": 85, "filter_success_nan": [117, 119], "filtered_ev": 85, "filtered_gti": 85, "filterwarn": [452, 453], "final": [124, 359, 360, 366, 367, 369, 372, 373, 375, 376, 378, 380, 382, 384, 385, 389, 391, 393, 404, 405, 406, 428, 429, 430, 432, 440, 442, 444, 445, 450, 451, 453, 455, 457, 458, 460, 462, 465, 469, 473, 477, 478, 479, 489, 490, 491], "finalis": 363, "find": [19, 20, 26, 127, 132, 133, 140, 166, 167, 171, 198, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 281, 359, 364, 370, 372, 378, 388, 389, 390, 410, 412, 418, 419, 424, 425, 430, 432, 436, 456, 457, 461, 464, 468, 471, 479, 553, 555, 556], "find_peak": [133, 419, 436, 442], "find_peaks_in_flux_map": 436, "find_root": 410, "finder": [132, 166, 167, 410, 419, 436], "fine": [271, 301, 372, 438, 457, 469, 506, 553], "finer": [444, 457, 506], "fingertip": 358, "finish": [362, 366, 368, 388, 416, 418], "finit": [95, 97, 100, 104, 105, 141, 142, 148, 153, 169, 184, 192, 196, 258, 377], "fink": [213, 214, 519], "fir": 529, "firefox": [83, 86], "first": [57, 83, 86, 87, 89, 95, 97, 104, 117, 119, 121, 132, 140, 157, 166, 183, 184, 185, 188, 192, 193, 211, 233, 264, 321, 348, 359, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 383, 384, 385, 389, 390, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 417, 419, 420, 421, 422, 424, 428, 429, 430, 432, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 473, 477, 478, 479, 490, 502, 505, 553], "firstli": [443, 444], "firstnam": [83, 86], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 63, 64, 65, 69, 71, 72, 74, 78, 79, 80, 81, 82, 83, 84, 86, 89, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 160, 163, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 201, 203, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 258, 259, 260, 261, 270, 271, 272, 273, 274, 275, 280, 282, 285, 296, 297, 298, 341, 342, 345, 347, 352, 354, 358, 359, 360, 365, 369, 370, 371, 372, 375, 377, 378, 379, 380, 381, 382, 383, 386, 387, 391, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 415, 417, 418, 419, 420, 422, 424, 425, 427, 428, 431, 435, 436, 438, 439, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 465, 467, 468, 470, 471, 473, 475, 479, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 505, 510, 517, 519, 529, 547, 548, 551, 552, 557], "fit2": 463, "fit_covari": [433, 477], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [429, 432, 440, 441], "fit_prior": 466, "fit_rang": [16, 433, 437, 438, 440, 477], "fit_result": [200, 270, 433, 477], "fit_results_nul": 270, "fit_scipi": 458, "fit_sherpa": 458, "fit_stat_scan": 374, "fit_statist": 359, "fit_statistics_cython": 389, "fitconfig": 16, "fitmc": 377, "fitresult": [200, 412, 424, 458, 478], "fitsfixedwarn": [436, 517], "fitspectrum": 414, "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 417, 418, 430], "five": 479, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 84, 89, 90, 101, 102, 135, 153, 155, 170, 200, 235, 236, 241, 260, 362, 364, 365, 366, 370, 371, 374, 376, 381, 383, 384, 385, 388, 389, 391, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 428, 434, 435, 437, 438, 440, 441, 444, 448, 451, 452, 458, 459, 460, 463, 464, 465, 477, 503, 505, 513, 530], "fixed_altaz": 81, "fixed_bin": 135, "fixed_icr": [81, 153, 428, 435, 444, 445, 448, 452], "fixed_offset": [91, 169, 410], "fixed_r_in": 158, "fixed_width": 158, "fixedpointinginfo": [84, 153, 176, 424, 425, 428, 435, 444, 445, 448, 452], "fjyggfpb": 460, "fk5": [506, 517], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 98, 103, 117, 119, 120, 121, 124, 125, 181, 182, 183, 184, 186, 188, 189, 191, 192, 194, 195, 196, 200, 429, 440, 444, 456, 464], "flake8": 362, "flare": [128, 277, 391, 404, 405, 427, 449, 450, 452, 454, 473, 489, 490, 491, 501, 502], "flask": 418, "flat": [119, 128, 145, 155, 181, 182, 187, 189, 191, 194, 197, 198, 235, 370, 383], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 181, 182, 189, 191, 194, 449], "fledg": 387, "flexibl": [78, 312, 359, 364, 368, 369, 370, 373, 375, 379, 380, 386, 461, 493, 550], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 79, 83, 84, 86, 91, 97, 100, 104, 105, 108, 112, 116, 118, 119, 120, 122, 124, 125, 126, 127, 132, 133, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 158, 160, 169, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 270, 271, 272, 273, 276, 281, 288, 299, 306, 315, 317, 348, 349, 350, 460, 466, 468, 469, 553, 557], "float32": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 437, 442, 461], "float64": [83, 86, 106, 110, 140, 143, 359, 387, 459, 461, 491], "float64float64float64": 442, "float64float64float64float64float64float64float64float32bool": 430, "float64float64float64float64float64float64float64float64": 442, "float_a": [83, 86], "flow": [386, 551, 552], "fluctuat": [272, 273, 383, 435, 448, 466, 555], "flux": [15, 19, 20, 26, 41, 46, 65, 69, 71, 72, 74, 75, 76, 79, 84, 95, 96, 97, 100, 104, 105, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 201, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 268, 276, 277, 278, 279, 363, 371, 372, 374, 375, 377, 379, 380, 382, 391, 398, 401, 403, 404, 406, 410, 412, 416, 417, 418, 420, 425, 427, 431, 434, 436, 440, 442, 444, 445, 447, 449, 450, 451, 452, 453, 457, 461, 464, 469, 473, 487, 488, 489, 498, 505, 507, 514, 529, 550, 551, 555], "flux_err": [19, 20, 26, 117, 119, 127, 133, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 277, 278, 279, 436, 449, 450], "flux_errn": [117, 119, 456], "flux_errp": [117, 119, 456], "flux_int_cu": 264, "flux_map": [117, 119, 383, 455], "flux_metadata_fits_kei": 118, "flux_per_omega": 464, "flux_point": [16, 64, 65, 69, 71, 72, 74, 75, 76, 93, 96, 117, 119, 120, 371, 428, 430, 432, 433, 437, 438, 440, 442, 453, 456, 457, 477, 478, 479], "flux_point_dataset": 371, "flux_points_at_tim": 383, "flux_points_ctb_37b": 119, "flux_points_dataset": [432, 442, 453], "flux_points_fermi": 441, "flux_points_hawc": 441, "flux_points_hess": 441, "flux_points_meta": [69, 71, 72, 74], "flux_points_recomput": 119, "flux_points_t": [69, 71, 72, 74, 75, 76], "flux_pr": 96, "flux_profil": [427, 446, 447], "flux_profile_estim": 446, "flux_profile_fermi": 446, "flux_quant": [128, 129, 130, 449], "flux_ref": [117, 119, 383], "flux_sensit": [117, 119], "flux_ul": [117, 119, 127, 456], "fluxestim": [117, 119, 120, 380, 406, 408, 409, 410, 412, 425], "fluxmap": [116, 118, 119, 127, 133, 410, 425, 436, 491], "fluxmapestim": 383, "fluxmapsmetadata": 386, "fluxpoint": [69, 71, 72, 74, 75, 76, 96, 117, 118, 120, 121, 124, 128, 129, 130, 135, 371, 374, 383, 386, 410, 417, 418, 424, 425, 428, 430, 441, 446, 449, 450, 456, 457, 479, 488, 489, 491, 493], "fluxpointdataset": 404, "fluxpointestim": [374, 401, 407, 420], "fluxpointfit": 371, "fluxpointfitt": 419, "fluxpointprofil": 420, "fluxpointsconfig": 16, "fluxpointsdataset": [93, 94, 97, 100, 380, 383, 386, 400, 404, 425, 430, 432, 441, 442, 452, 453, 489], "fluxpointsdatasetmetadata": 386, "fluxpointsestim": [113, 121, 124, 308, 380, 381, 383, 391, 401, 406, 407, 410, 424, 425, 432, 441, 442, 453, 477, 478], "fluxpointsetim": 383, "fluxpointsmetadata": 386, "fluxprofileestim": [113, 410, 423, 425, 446], "fly": 369, "fmt": [458, 466], "focu": [369, 379, 404, 417, 434, 553], "focus": [369, 385], "fold": [103, 383, 430, 441, 489, 491], "folder": [11, 78, 89, 96, 101, 105, 119, 324, 359, 360, 364, 367, 388, 390, 395, 400, 410, 413, 433, 440, 444, 468, 477, 478, 551, 553], "follow": [15, 19, 20, 43, 44, 76, 78, 79, 80, 86, 97, 99, 101, 102, 104, 105, 117, 118, 119, 122, 127, 132, 134, 182, 183, 184, 186, 190, 195, 196, 200, 248, 264, 270, 349, 350, 352, 359, 360, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 402, 403, 404, 406, 407, 410, 412, 413, 419, 420, 424, 425, 428, 429, 430, 432, 433, 435, 436, 437, 440, 441, 444, 445, 450, 451, 452, 453, 455, 456, 458, 460, 461, 462, 463, 464, 468, 473, 477, 479, 481, 483, 484, 489, 491, 493, 495, 497, 498, 502, 504, 505, 506, 507, 515, 516, 520, 523, 524, 526, 527, 531, 532, 534, 535, 536, 537, 538, 551, 554, 555, 556, 558], "font": [183, 184, 186, 192, 195, 196, 360, 461], "fontsiz": [356, 453, 458], "foo": [83, 86], "footprint": [183, 184, 186, 192, 194, 195, 196, 513], "footprint_rectangle_sky_region": 194, "forbid": [16, 80, 99, 118], "forbidden": 463, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 151, 194, 196, 288, 364, 374, 400], "forecom": [359, 384], "foremost": 553, "forens": 375, "foreseen": [369, 384], "forev": 400, "forg": [358, 376, 388, 389, 391, 392, 395, 418, 468], "forget": [433, 443, 477], "forgot": 359, "forgotten": 359, "fork": 362, "form": [16, 80, 83, 86, 97, 99, 118, 153, 156, 191, 300, 359, 365, 369, 374, 382, 384, 386, 396, 418, 462, 466, 490, 498, 511, 521, 551], "formal": [364, 387, 436], "format": [16, 79, 80, 81, 82, 83, 84, 86, 89, 97, 99, 100, 102, 104, 105, 117, 118, 119, 120, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 176, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 198, 211, 225, 233, 261, 296, 318, 340, 341, 348, 358, 360, 367, 368, 369, 370, 371, 373, 375, 383, 385, 386, 389, 398, 410, 412, 415, 419, 421, 422, 424, 425, 430, 432, 433, 434, 436, 437, 438, 440, 442, 444, 445, 446, 449, 450, 452, 456, 459, 461, 462, 464, 468, 469, 470, 471, 477, 479, 481, 487, 489, 490, 491, 492, 495, 496, 497, 498, 499, 506, 547, 548, 552, 553, 554], "format_plot_xaxi": [185, 188, 193, 459], "format_plot_yaxi": [188, 459], "formatt": [348, 461], "formatwarn": 359, "former": [385, 401, 406, 429, 463, 551, 554], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 152, 239, 240, 285, 428, 554], "forum": 388, "forward": [19, 20, 26, 79, 83, 86, 97, 100, 104, 105, 121, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 165, 187, 191, 192, 193, 200, 205, 206, 209, 210, 213, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 265, 286, 348, 353, 360, 366, 369, 383, 430, 441, 489, 491, 506], "forwardref": [16, 80, 99, 118], "found": [19, 20, 26, 78, 82, 83, 86, 128, 166, 171, 190, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 277, 362, 363, 367, 374, 384, 385, 404, 407, 408, 409, 413, 438, 444, 449, 464, 466, 471, 490, 491, 502, 503], "four": [362, 370, 383, 450, 468, 469, 497, 499, 505, 552], "fov": [116, 137, 138, 160, 161, 175, 176, 178, 180, 219, 359, 365, 373, 415, 418, 419, 437, 459, 462, 463, 468, 501, 552], "fov_": 359, "fov_align": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 459], "fov_background": [437, 477], "fov_bkg_mak": [460, 500], "fov_lat": [138, 459, 468, 498], "fov_lat_axi": 459, "fov_lon": [138, 459, 468, 498], "fov_lon_axi": 459, "fov_theta": 359, "fovalign": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 459], "fovbackground": [387, 406], "fovbackgroundmak": [161, 405, 410, 460, 477, 478], "fovbackgroundmodel": [15, 97, 103, 104, 107, 160, 229, 387, 407, 424, 425, 440, 441, 444, 445, 448, 457, 463, 477, 478, 500, 513], "fp": [119, 135, 383, 477, 491, 493], "fp_dataset": 457, "fp_dnde": 383, "fp_energy_flux": 383, "fpe": [308, 381, 383, 432, 442, 453, 478], "fpp": 278, "fpp_err": [278, 449], "fpp_tabl": 449, "fr": [385, 468], "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 100, 105, 140, 143, 199, 217, 221, 238, 240, 252, 277, 279, 287, 382, 489, 497, 498, 510, 511, 512, 515, 516, 520, 523, 524, 526, 527, 531, 532, 534, 535, 536, 537, 541, 542, 543, 545, 555, 556], "fraction": [19, 20, 26, 50, 52, 53, 79, 84, 85, 116, 126, 130, 144, 150, 152, 153, 154, 156, 191, 197, 198, 205, 206, 209, 212, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 278, 279, 369, 374, 417, 425, 428, 435, 444, 448, 457, 459, 462, 468, 469, 470], "frame": [16, 79, 81, 86, 89, 90, 91, 97, 100, 104, 105, 106, 110, 121, 132, 153, 163, 166, 176, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260, 286, 287, 322, 335, 359, 360, 368, 370, 373, 383, 400, 401, 403, 404, 405, 429, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 457, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 477, 478, 479, 497, 502, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517], "framework": [370, 372, 373, 375, 377, 378, 382, 400, 401, 407, 419, 453, 464, 483, 493], "franceschini": [213, 214, 261, 424, 519], "franceschini17": [214, 519], "franceschni": 519, "frd_ab": 214, "free": [50, 52, 53, 97, 100, 104, 105, 120, 124, 125, 163, 200, 202, 204, 235, 236, 270, 364, 374, 400, 433, 435, 437, 438, 440, 442, 443, 448, 450, 452, 457, 458, 460, 463, 464, 466, 469, 473, 477, 478, 481, 491, 500, 513, 529, 530, 553, 555, 556], "free_paramet": [202, 204, 270, 458, 463], "freedom": [114, 117, 119, 134, 385, 425, 443, 491, 555, 556], "freez": [19, 20, 26, 83, 86, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 374, 385, 400, 410, 425, 437, 448, 458, 464, 529], "freeze_al": [202, 204], "frenk": 481, "frequenc": [259, 485], "frequent": [188, 359, 368, 377, 385, 449, 451, 452, 462, 493, 494, 553], "frequentist": 377, "fridai": 368, "friendli": [364, 386, 421, 433, 477, 493], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 169, 170, 172, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 270, 271, 272, 273, 276, 279, 286, 287, 288, 298, 306, 308, 310, 311, 315, 318, 319, 323, 327, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 395, 396, 398, 399, 400, 402, 403, 404, 405, 406, 407, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557], "from_align": [194, 410], "from_attribut": [16, 80, 99, 118], "from_bound": [143, 145, 153, 182, 188, 194, 383, 441, 444, 445, 457, 459, 460, 461, 471, 505, 506], "from_covariance_matrix": 387, "from_default": 187, "from_diagonal_respons": [106, 110, 140, 141, 142, 436, 469], "from_dict": [19, 20, 26, 96, 97, 100, 104, 105, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 403, 410, 466], "from_dir": [78, 85, 91, 163, 286, 287, 395, 429, 432, 434, 442, 451, 453, 460, 465, 468, 471, 475, 478, 490, 493, 500, 502, 503], "from_edg": [142, 183, 184, 186, 188, 192, 195, 196, 435, 448, 452, 459, 469, 470], "from_edisp_kernel": 141, "from_energy_bound": [19, 20, 26, 97, 100, 104, 105, 106, 110, 140, 142, 143, 151, 153, 163, 188, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 360, 428, 429, 432, 434, 441, 442, 444, 445, 451, 453, 457, 459, 460, 464, 469, 470, 478, 497, 500, 502, 503, 506], "from_energy_edg": [140, 188, 354, 457, 459], "from_events_fil": [78, 444, 468], "from_factor_matrix": 199, "from_fil": [78, 490], "from_fits_head": 81, "from_gauss": [140, 141, 145, 151, 153, 156, 497], "from_gaussian": 407, "from_geom": [97, 100, 104, 105, 141, 142, 151, 153, 156, 183, 184, 186, 190, 192, 195, 196, 404, 423, 457, 461, 462, 506, 512], "from_gti": 193, "from_gti_bound": 193, "from_hdu": [182, 184, 196], "from_hdulist": [97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 461], "from_head": [80, 99, 118, 182, 194, 386], "from_irf": 155, "from_log10": [227, 228, 527], "from_map": [117, 119], "from_map_dataset": [100, 105], "from_nam": [438, 442], "from_nod": 188, "from_orm": [16, 80, 99, 118], "from_panda": [83, 86], "from_paramet": [19, 20, 26, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262], "from_parametr": [143, 495], "from_posit": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 445], "from_refer": 382, "from_region": [191, 212, 424, 502], "from_region_map": 261, "from_spatial_model": 151, "from_spectrum_dataset": [105, 428, 435], "from_stack": [79, 82, 87, 117, 119, 183, 184, 185, 186, 188, 192, 195, 196, 199, 202, 204, 424, 425, 490], "from_tabl": [119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 185, 187, 188, 192, 193, 225, 421, 428], "from_table_hdu": [82, 187, 188], "from_time_bound": 193, "from_time_edg": [193, 449], "from_time_interv": 82, "from_wcs_til": 184, "from_yaml": [16, 211, 233, 370, 433], "fromnumer": 434, "front": [368, 388, 417], "frozen": [19, 20, 26, 96, 120, 124, 160, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 374, 382, 387, 402, 425, 429, 430, 432, 433, 434, 435, 437, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 456, 457, 458, 462, 463, 464, 469, 477, 478, 479, 491, 500, 529, 538], "fr\u00f6se": 425, "ftol": 458, "ftool": 374, "fulfil": [386, 461], "full": [78, 120, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 184, 211, 233, 296, 355, 358, 359, 364, 368, 369, 372, 374, 375, 379, 385, 387, 390, 397, 400, 410, 412, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 477, 478, 479, 493, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551], "full_enclosur": [176, 459], "full_output": [19, 20, 26, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262], "fulli": [124, 181, 182, 191, 194, 259, 368, 369, 376, 380, 385, 389, 392, 402, 404, 412, 429, 449, 464, 468, 470, 471, 481], "fun": [359, 362], "func": [17, 18, 21, 22, 24, 25, 27, 183, 184, 186, 192, 195, 196, 266, 309, 313, 314, 352, 438, 440], "function": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 78, 79, 81, 83, 84, 86, 95, 96, 97, 98, 100, 103, 104, 105, 112, 117, 124, 127, 128, 129, 130, 133, 143, 144, 145, 147, 148, 150, 152, 153, 154, 156, 183, 184, 186, 188, 192, 195, 196, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 247, 248, 249, 251, 252, 253, 254, 257, 261, 266, 272, 273, 281, 301, 309, 310, 312, 313, 317, 318, 327, 344, 347, 348, 352, 354, 356, 358, 362, 365, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 382, 383, 384, 386, 387, 391, 395, 396, 398, 400, 401, 402, 403, 404, 406, 407, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 428, 432, 433, 434, 435, 436, 440, 442, 443, 444, 445, 446, 457, 458, 459, 460, 461, 462, 463, 464, 466, 471, 473, 477, 478, 479, 481, 482, 483, 488, 489, 490, 492, 493, 502, 504, 506, 511, 512, 514, 541, 550, 551, 552, 553, 554, 556, 558], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [372, 381, 386], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 112, 116, 120, 121, 124, 127, 189, 312, 359, 362, 363, 365, 368, 369, 372, 373, 376, 378, 379, 380, 381, 382, 405, 406, 407, 410, 412, 438, 444, 455, 456, 457, 461, 479, 482, 483, 498, 553], "furthermor": 468, "futur": [98, 103, 120, 121, 124, 201, 203, 359, 364, 369, 372, 373, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 418, 440, 444, 461, 469, 482, 491, 550], "fvar": [130, 279, 374, 417], "fvar_err": [279, 449], "fvar_tabl": 449, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 65, 79, 81, 82, 83, 86, 90, 108, 132, 182, 183, 184, 186, 188, 192, 194, 195, 196, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 277, 288, 327, 348, 354, 358, 359, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 388, 389, 391, 392, 393, 410, 412, 416, 418, 419, 420, 421, 424, 429, 430, 433, 435, 442, 444, 446, 455, 456, 457, 458, 461, 462, 463, 464, 468, 469, 473, 479, 481, 485, 488, 489, 490, 491, 493, 498, 503, 504, 505, 512, 550, 552, 553, 555, 557, 558], "g0": [440, 469], "g28": 65, "g320": 456, "g5774c346f": [99, 118, 396, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "g_1": 143, "g_2": 143, "g_3": 143, "ga": 446, "gabriel": 419, "gadf": [79, 80, 81, 82, 84, 90, 97, 99, 100, 104, 105, 118, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 369, 372, 383, 386, 410, 412, 421, 424, 459, 461, 477, 489, 493, 506, 552], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 364, 376, 418], "gal_diffus": 375, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 65, 66, 79, 86, 97, 100, 104, 105, 106, 110, 120, 121, 123, 153, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 212, 220, 223, 237, 245, 246, 295, 322, 359, 360, 370, 373, 379, 398, 400, 417, 429, 432, 435, 436, 437, 440, 442, 443, 444, 446, 448, 452, 455, 456, 457, 461, 462, 463, 464, 468, 479, 481, 484, 488, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 552, 558], "galactic_median": 79, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 213, 278, 279, 398, 429], "galelli": [423, 425], "gallant": 418, "galleri": [389, 405, 407, 410, 421, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 494, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550], "gallery_jupyt": 507, "gallery_python": 507, "galprop": [182, 183, 184, 186, 195, 196], "galprop2": [182, 183, 184, 186, 195, 196], "gambit": 481, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 62, 64, 65, 75, 79, 116, 120, 126, 152, 176, 183, 184, 186, 195, 196, 213, 215, 216, 217, 238, 239, 240, 261, 264, 315, 359, 365, 367, 370, 371, 372, 373, 383, 388, 389, 391, 395, 396, 401, 415, 416, 417, 418, 419, 428, 430, 432, 433, 434, 438, 441, 442, 443, 444, 446, 456, 459, 461, 462, 465, 468, 470, 471, 477, 479, 481, 483, 484, 488, 489, 490, 493, 496, 498, 500, 502, 503, 512, 519, 523, 524, 531, 532, 550, 551, 552, 553, 554, 555, 558], "gamma1": [205, 520, 534], "gamma2": [205, 520, 534], "gamma_1": [249, 252, 253, 254, 382, 535, 536, 537], "gamma_2": [249, 252, 253, 254, 382, 535, 536, 537], "gamma_min": [126, 428], "gamma_min_sensit": 116, "gammacat": [55, 64, 417, 430], "gammalib": [359, 372], "gammamc_dif": 481, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 381, 382, 383, 387, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 472, 473, 475, 477, 478, 479, 482, 483, 485, 486, 487, 493, 494, 495, 496, 497, 499, 503, 504, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 558], "gammapy_analysis_config": 375, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 82, 84, 85, 86, 89, 91, 96, 97, 100, 104, 105, 109, 111, 112, 116, 119, 121, 123, 125, 127, 132, 133, 135, 136, 138, 142, 143, 144, 145, 153, 163, 183, 184, 186, 192, 195, 196, 214, 225, 261, 270, 286, 287, 338, 347, 352, 354, 359, 360, 362, 375, 391, 393, 395, 399, 400, 401, 410, 419, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 477, 478, 479, 490, 491, 493, 495, 496, 497, 499, 500, 502, 503, 517, 547, 548], "gammapy_extra": 399, "gammapybaseconfig": 16, "gammapydeprecationwarn": [359, 525, 528], "gammmapi": [369, 376], "garcia": 419, "gather": [373, 379, 388], "gauss": [42, 51, 54, 97, 100, 122, 123, 144, 184, 196, 220, 221, 222, 223, 382, 416, 453, 461, 464, 479, 510, 511], "gauss_elong": 464, "gauss_temp": 464, "gaussian": [65, 66, 76, 77, 112, 122, 140, 141, 145, 151, 153, 156, 184, 196, 220, 221, 222, 223, 224, 278, 279, 370, 378, 382, 387, 403, 407, 427, 430, 442, 444, 448, 449, 452, 456, 458, 459, 464, 466, 468, 479, 497, 499, 507, 518, 539, 549], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 112, "gaussian_compon": [65, 456], "gaussian_filt": [122, 196], "gaussian_model": 542, "gaussian_sigma": 458, "gaussianband2d": 418, "gaussianprior": [387, 466], "gaussianspatialmodel": [76, 77, 109, 111, 242, 382, 403, 442, 443, 448, 464, 511], "gaussianspectralmodel": [243, 382, 464, 526], "gaussiantemporalmod": 410, "gaussiantemporalmodel": [255, 382, 406, 464, 542], "gb": [367, 369, 468, 470], "gc": [82, 97, 100, 104, 105, 109, 111, 112, 116, 121, 123, 127, 132, 133, 347, 352, 354, 362, 436, 437, 440, 442, 444, 446, 455, 457, 461, 463, 464, 468, 469, 479, 481, 490, 491], "gc_3fhl": 479, "gc_3fhl_cutout": 479, "gc_3fhl_smooth": 479, "gc_imag": 446, "gc_po": 469, "gc_sep": 463, "gcc": 395, "geminga": 59, "gen_gaussian_model": 543, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 78, 79, 80, 83, 84, 86, 87, 97, 98, 99, 100, 103, 104, 105, 118, 142, 153, 156, 183, 184, 186, 187, 188, 192, 195, 196, 200, 210, 218, 222, 223, 224, 225, 226, 241, 247, 256, 257, 259, 261, 262, 310, 312, 315, 316, 317, 318, 324, 360, 362, 368, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 389, 392, 395, 401, 405, 406, 407, 410, 412, 417, 421, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 489, 493, 498, 504, 506, 507, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 544, 545, 546, 547, 548, 549, 553, 555, 556], "generalconfig": 16, "generalis": [119, 378, 404, 459], "generalized_gaussian_model": 543, "generalizedgaussianspatialmodel": [242, 407, 464, 512], "generalizedgaussiantemporalmodel": [255, 412, 464, 543], "generalrandom": 402, "generatejsonschema": [16, 80, 99, 118], "gengauss": [224, 464, 512], "geodeticloc": 89, "geolat": 429, "geom": [16, 23, 79, 97, 100, 104, 105, 106, 108, 110, 116, 117, 119, 121, 127, 141, 142, 151, 153, 156, 163, 170, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 207, 208, 211, 212, 219, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 260, 370, 372, 374, 407, 410, 419, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 469, 470, 477, 478, 479, 491, 500, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514], "geom_24_energy_bin": 506, "geom_6_energy_bin": 506, "geom_edisp": [97, 100, 104, 105, 457], "geom_energi": 506, "geom_exposur": [97, 100, 104, 105, 423, 457], "geom_imag": [438, 442, 506], "geom_irf": 372, "geom_psf": [97, 100, 104, 105, 457], "geom_tru": 404, "geomconfig": 16, "geometri": [23, 79, 95, 97, 100, 104, 105, 108, 117, 119, 141, 142, 148, 151, 153, 156, 160, 163, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 260, 355, 365, 371, 374, 375, 404, 410, 421, 432, 433, 434, 435, 437, 438, 440, 444, 445, 448, 457, 460, 469, 470, 489, 491, 493, 501, 505, 551, 552], "geomspac": [119, 387], "geq": [52, 53], "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 81, 83, 84, 86, 89, 91, 95, 97, 99, 101, 102, 104, 112, 116, 118, 120, 121, 124, 125, 127, 132, 135, 140, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 199, 202, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 263, 296, 312, 359, 360, 364, 365, 366, 367, 368, 369, 373, 374, 376, 383, 385, 386, 387, 389, 390, 392, 393, 395, 396, 399, 401, 416, 417, 418, 419, 428, 433, 435, 436, 440, 441, 442, 448, 451, 456, 457, 458, 459, 460, 462, 463, 464, 466, 468, 469, 470, 471, 473, 477, 478, 479, 481, 489, 493, 506, 552, 556], "get_altaz": [81, 89, 424], "get_bia": 140, "get_bias_energi": 140, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [183, 184, 186, 192, 195, 196, 460, 461, 469, 470, 505], "get_by_idx": [183, 184, 186, 192, 195, 196, 461, 505], "get_by_pix": [183, 184, 186, 192, 195, 196, 505], "get_cl": [430, 456, 462], "get_coord": [181, 182, 187, 191, 194, 403, 410, 419, 445, 461, 462, 502, 506], "get_dataset": [15, 433, 437, 438, 440, 450, 477, 493], "get_devel_vers": 362, "get_edges_fixed_bin": 135, "get_edges_min_t": 135, "get_edisp_kernel": [141, 142, 405, 410, 457, 469, 497], "get_events_meta_data": 372, "get_excess_map": [15, 477], "get_filenam": [101, 102], "get_flux_point": [15, 117, 119, 383, 405, 433, 477], "get_group_by_idx": 383, "get_hdu": 296, "get_icr": [81, 89, 424], "get_idx": [181, 182, 191, 194, 506], "get_image_by_coord": [183, 184, 186, 192, 195, 196, 461], "get_image_by_idx": [183, 184, 186, 192, 195, 196], "get_image_by_pix": [183, 184, 186, 192, 195, 196], "get_index_list": 182, "get_irfs_featur": [286, 287, 424, 465], "get_kernel": 112, "get_light_curv": 15, "get_mean": 140, "get_observ": [15, 78, 91, 286, 287, 401, 412, 429, 432, 433, 434, 437, 438, 440, 442, 444, 450, 451, 453, 460, 465, 470, 471, 475, 477, 478, 493, 500, 502, 503], "get_ogip_meta": 102, "get_pix": 194, "get_pointing_altaz": [84, 465], "get_pointing_icr": [84, 424, 442, 460, 478], "get_psf_kernel": [151, 153, 156, 425, 469], "get_random_st": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 310, 315, 316, 317, 318, 359], "get_rebinned_axi": 451, "get_resolut": 140, "get_respons": 417, "get_scal": 112, "get_scale_model": [120, 121, 124], "get_spectrum": [183, 184, 186, 192, 195, 196], "get_subcovari": 199, "get_transform": [436, 442, 510, 511], "get_valid_path": 101, "get_wcs_coord_and_weight": 191, "getattr": 387, "getitem": 417, "getlogg": [359, 438, 442, 450, 451, 452, 475], "getter": 360, "getting_start": 379, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 71, 121, 127, 183, 184, 186, 192, 195, 196, 430, 434, 436, 440, 441, 446, 448, 452, 453, 455, 456, 460, 461, 462, 463, 468, 469, 470, 479, 506, 529, 551, 552], "gev2": [19, 455], "gevgevgev1": 430, "gh": [359, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389], "git": [82, 248, 359, 360, 362, 364, 366, 367, 385, 392, 421], "github": [360, 362, 363, 364, 365, 367, 368, 377, 379, 385, 388, 389, 392, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 415, 416, 417, 418, 419, 420], "giuliani": 372, "giunti": [400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 421, 424], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 131, 277, 278, 359, 364, 368, 369, 373, 374, 375, 376, 379, 380, 385, 389, 400, 402, 404, 412, 425, 433, 436, 443, 445, 449, 451, 456, 458, 459, 460, 461, 464, 468, 469, 477, 493, 498, 553, 554, 556, 557], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 65, 66, 67, 76, 78, 79, 80, 81, 83, 84, 86, 89, 91, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 165, 166, 169, 171, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 270, 272, 273, 279, 286, 288, 291, 292, 299, 306, 310, 313, 314, 322, 346, 347, 352, 356, 359, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 382, 383, 385, 387, 399, 404, 410, 418, 419, 424, 428, 429, 430, 433, 436, 444, 445, 446, 448, 450, 451, 452, 455, 456, 457, 459, 460, 461, 462, 464, 468, 469, 477, 479, 489, 490, 491, 493, 497, 498, 502, 503, 505, 506, 512, 516, 519, 550, 552, 553, 554, 555], "gjlc9": 460, "glast": 469, "glat": [41, 65, 66, 79, 359, 432, 456, 461, 469], "glat_err": 456, "glat_pnt": [442, 468], "glimps": [470, 473], "gll_iem_v06_cutout": [183, 184, 186, 192, 195, 196], "gll_iem_v06_gc": [444, 461, 463, 464, 469], "gll_psc_v16": 60, "gll_psc_v20": 456, "gll_psc_v32": 63, "gll_psch_v09": 58, "gll_psch_v13": 61, "glob": [78, 360, 457], "global": [16, 33, 42, 45, 46, 47, 95, 97, 98, 100, 103, 104, 105, 142, 153, 156, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 200, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 310, 312, 315, 316, 317, 318, 359, 363, 365, 407, 424, 432, 442, 443, 453, 463, 466, 491, 551], "global_dataset": 460, "global_to_loc": 182, "glon": [41, 65, 66, 79, 359, 432, 456, 461, 469], "glon_pnt": [442, 468], "glossari": [379, 421, 489, 506], "glue": 493, "glueviz": 376, "gmodelspatialradialprofiledmburkert": 481, "gmodelspatialradialprofiledmeinasto": 481, "gmodelspatialradialprofiledmzhao": 481, "go": [50, 83, 86, 362, 369, 379, 384, 421, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 477, 478, 479, 481, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 553], "goal": [364, 373, 387, 458], "goe": [41, 52, 349, 359, 378, 389, 446], "gogia": 417, "good": [78, 79, 82, 96, 119, 282, 285, 359, 364, 366, 367, 368, 369, 370, 373, 375, 376, 377, 379, 432, 434, 435, 438, 448, 449, 451, 452, 455, 457, 458, 460, 462, 464, 469, 470, 473, 515, 516, 552, 557], "googl": [83, 86, 379, 388], "got": 468, "gov": [58, 60, 61, 63, 140, 188, 379, 388, 532], "gp": [78, 79, 85, 360, 369, 375, 437, 440, 442, 453, 468, 470], "gpl3": 359, "gps_baseline_110380": [78, 79, 468], "gradient": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "grai": [350, 502, 529], "grand": 359, "grant": [362, 385], "granular": 449, "grayify_colormap": 378, "grb": [449, 452], "great": [364, 373, 378, 416, 473], "greater": [160, 352], "green": [96, 104, 105, 418, 443, 465, 466], "grei": 453, "grep": 394, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 120, 123, 144, 152, 154, 183, 184, 186, 188, 192, 195, 196, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 266, 352, 359, 370, 375, 402, 404, 458, 505, 506, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546], "gridsearch": [200, 458], "gridspec": 346, "gridspec_kw": [436, 442, 450, 452, 519], "ground": [90, 374, 468, 554], "group": [82, 83, 86, 87, 120, 121, 124, 125, 127, 141, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 286, 365, 374, 378, 379, 380, 383, 388, 391, 401, 404, 406, 410, 416, 419, 450, 452, 473, 491, 493, 507, 553], "group_1": 465, "group_2": 465, "group_bi": [83, 86, 383], "group_by_axi": 383, "group_by_label": [87, 465], "group_high_zenith": 465, "group_low_zenith": 465, "group_siz": [135, 451], "group_tabl": [82, 188, 193], "grouped_observ": 465, "grow": [367, 378, 418], "grown": 379, "gr\u00e9aux": 424, "gsfc": [58, 60, 61, 63, 140, 188, 379, 532], "gt": 459, "gtexpcube2": 469, "gti": [78, 79, 83, 84, 85, 95, 96, 97, 100, 104, 105, 117, 119, 121, 124, 157, 193, 248, 365, 368, 369, 372, 373, 374, 383, 402, 404, 405, 407, 420, 424, 425, 444, 451, 452, 457, 460, 468, 470, 471, 489, 493, 552], "gti_1": 490, "gti_2": 490, "gti_t0": 452, "gtimetadata": 386, "gtmktime": [369, 469], "gtobsim": 372, "gtol": 458, "gtpsf": [141, 142, 148, 153, 156, 188, 436, 469], "gtselect": [369, 469], "guarante": [367, 382, 384], "guess": [119, 182, 184, 425], "guid": [362, 375, 377, 391, 392, 393, 396, 419, 473, 493, 508, 518, 539, 549], "guidelin": [359, 363, 396, 418], "guiger": [31, 39], "gz": [58, 60, 61, 63, 64, 65, 78, 79, 82, 84, 86, 89, 97, 100, 104, 105, 109, 111, 112, 116, 121, 123, 127, 132, 133, 145, 214, 261, 347, 352, 354, 360, 381, 419, 432, 433, 436, 443, 444, 445, 446, 456, 457, 459, 461, 463, 464, 468, 469, 470, 475, 477, 478, 479, 490, 491, 493, 495, 496, 497, 499, 519], "h": [26, 65, 78, 82, 83, 86, 90, 122, 142, 183, 184, 186, 192, 195, 196, 349, 379, 382, 391, 395, 396, 404, 419, 427, 428, 429, 432, 433, 435, 441, 443, 450, 451, 452, 455, 459, 460, 461, 464, 468, 469, 470, 472, 473, 475, 477, 478, 488, 490, 493, 506, 541, 542, 552, 553], "h0": 443, "h05": [45, 49], "h1": 443, "h_0": [443, 555], "h_1": [443, 555], "h_i": 122, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 76, 83, 86, 96, 97, 100, 104, 105, 116, 117, 119, 155, 177, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 201, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 259, 260, 261, 352, 354, 356, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 406, 407, 410, 412, 413, 419, 420, 421, 423, 424, 425, 429, 432, 433, 434, 438, 443, 445, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 468, 470, 471, 477, 489, 490, 493, 498, 502, 503, 506, 510, 511, 538, 550, 553, 555], "habilit": 285, "hack": 415, "had": [359, 365, 367, 385, 407, 413, 417, 418], "hadron": [263, 365, 370, 438, 457, 468, 489, 502], "hajlaoui": [407, 410], "hal": 385, "half": [153, 156, 188, 194, 260], "halo": 481, "halv": [128, 277, 425], "halving_coord": 449, "halving_err": 449, "hand": [165, 359, 362, 367, 370, 379, 385, 387, 422, 458, 473, 493], "handbook": [379, 473], "handi": 440, "handl": [3, 16, 80, 99, 118, 190, 280, 358, 360, 363, 371, 372, 373, 375, 380, 382, 383, 386, 388, 391, 393, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 432, 434, 440, 441, 442, 444, 457, 459, 461, 463, 464, 469, 470, 473, 478, 479, 489, 490, 493, 552], "handler_map": 356, "hanna": 425, "hap": 375, "happen": [78, 362, 364, 366, 367, 373, 377, 389, 433, 463, 473, 477, 478, 489, 493, 555], "happi": [362, 366, 379, 399, 400, 419], "hard": [359, 360, 382, 387, 405, 466], "harder": [366, 553], "hardli": 386, "harri": [414, 415], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 200, 230, 263, 264, 279, 379, 458], "has_any_t": [117, 119], "has_energy_axi": [181, 182, 191, 194], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [83, 86], "has_masked_valu": [83, 86], "has_mixin_column": [83, 86], "has_offset_axi": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155], "has_stat_profil": [117, 119], "has_success": [117, 119], "has_ul": [117, 119], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 359, "hasn": [364, 557], "hatch": 453, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 80, 83, 86, 90, 95, 99, 102, 106, 110, 117, 118, 119, 120, 124, 132, 133, 140, 141, 142, 151, 153, 156, 163, 165, 177, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 288, 312, 318, 356, 358, 359, 360, 361, 362, 364, 365, 366, 368, 370, 372, 373, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 404, 407, 410, 412, 413, 416, 418, 419, 420, 421, 422, 424, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 470, 473, 477, 478, 479, 481, 489, 490, 491, 493, 504, 505, 506, 516, 527, 550, 553, 556, 557], "haven": 395, "hawc": [55, 59, 62, 70, 73, 92, 396, 404, 410, 418, 421, 422, 424, 427, 472, 473, 488, 489, 490, 501, 505, 552], "hawc19_flux_point": [119, 441, 493], "hawc_crab": [119, 441, 493], "hd": 65, "hdr": 386, "hdr_dict": 386, "hdu": [65, 78, 79, 81, 82, 83, 84, 89, 97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 296, 345, 360, 369, 398, 413, 415, 418, 421, 422, 444, 459, 461, 468, 470, 471, 489, 490, 493, 495, 496, 497, 499, 506, 548], "hdu1": 140, "hdu2": 140, "hdu_al": 444, "hdu_band": [117, 119, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196], "hdu_class": [78, 83, 296, 468, 470, 471], "hdu_class_uniqu": 83, "hdu_evt": 444, "hdu_filenam": 470, "hdu_gti": 444, "hdu_hdu": 78, "hdu_index": 78, "hdu_list": [141, 142, 144, 148, 152, 153, 154, 156, 183, 184, 195, 196], "hdu_loc": 83, "hdu_nam": 296, "hdu_ob": 78, "hdu_out": [183, 184], "hdu_region": [191, 192], "hdu_tabl": [78, 470], "hdu_table_filenam": 78, "hdu_typ": [78, 83, 468, 470, 471], "hdu_type_uniqu": 83, "hduclas2": 459, "hduclas3": 459, "hduclas4": 459, "hduclasn": 459, "hduindext": [78, 296, 470], "hdulist": [97, 100, 102, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 444, 461, 489], "hduloc": [83, 97], "he": [263, 369, 374], "hea": 374, "header": [78, 79, 80, 81, 82, 83, 84, 86, 89, 95, 96, 97, 99, 100, 101, 102, 104, 105, 117, 118, 119, 140, 141, 142, 148, 153, 156, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 260, 298, 341, 342, 345, 364, 369, 372, 386, 404, 412, 414, 419, 421, 424, 434, 444, 445, 461, 468, 557], "healpi": [182, 358, 366, 368, 376, 390, 391, 393, 402, 410, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 504], "healpix": [13, 182, 183, 184, 186, 192, 195, 196, 358, 366, 368, 373, 410, 418, 461, 469, 505], "healpix_to_imag": 411, "heapsort": [83, 86], "heart": 555, "heasarc": [140, 188], "heatmap": [348, 353], "heavi": [419, 420], "heavier": 440, "heavili": 410, "hegra": [92, 264], "heidelberg": 359, "heidt": 449, "height": [16, 29, 83, 86, 89, 121, 321, 433, 437, 438, 440, 446, 450, 453, 455, 461, 462, 464, 477, 502, 506], "heighten": 449, "helen": 416, "hello": [395, 442], "help": [11, 83, 86, 274, 280, 359, 362, 364, 366, 373, 374, 375, 379, 385, 388, 389, 390, 395, 399, 400, 401, 418, 419, 421, 456, 460, 461, 463, 469, 471, 479, 493, 553], "helper": [13, 296, 301, 366, 368, 373, 374, 375, 378, 389, 395, 401, 402, 403, 404, 410, 412, 415, 417, 418, 424, 425, 446, 456, 462, 463, 502, 551, 558], "henc": [83, 86, 375, 437, 438, 491, 506, 555], "her": 388, "here": [13, 78, 79, 83, 86, 97, 104, 119, 134, 138, 143, 152, 200, 272, 273, 276, 347, 358, 359, 360, 361, 362, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 385, 386, 387, 389, 391, 393, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 465, 466, 468, 469, 470, 473, 477, 478, 479, 483, 489, 493, 498, 500, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 553, 554, 555, 557, 558], "hereaft": 444, "herebi": 466, "heritag": 385, "herm": [267, 269, 425], "hess": [16, 55, 65, 78, 79, 82, 84, 86, 91, 92, 96, 104, 105, 120, 125, 135, 136, 143, 145, 163, 169, 270, 286, 287, 360, 367, 368, 373, 375, 379, 388, 391, 395, 398, 400, 403, 414, 415, 418, 419, 427, 429, 430, 432, 433, 434, 438, 440, 442, 443, 451, 453, 455, 456, 457, 458, 460, 465, 466, 469, 471, 472, 475, 477, 478, 481, 490, 491, 493, 495, 496, 497, 499, 500, 502, 503], "hess2": [143, 495], "hess_dl3_dr1_obs_id_020136": [84, 145, 360, 495, 496, 497, 499], "hess_dl3_dr1_obs_id_023523": [79, 82, 490], "hess_dl3_dr1_obs_id_023526": 490, "hess_ecpl": [264, 432], "hess_pl": 264, "hessian": 491, "heterogen": [386, 430, 441], "hfm": 65, "hgp": [65, 76, 77, 116, 379, 404, 416, 418, 419, 488], "hgps_catalog_v1": 65, "hgps_sourc": 65, "hgpsc": [65, 456], "hi": [359, 417], "hi_bnd": 188, "hi_threshold": 140, "hidden": 370, "hide": [13, 364, 381], "hierarch": [13, 286, 327, 368, 370, 386, 425, 493, 505], "hierarchi": [286, 370, 403], "hierarchical_clust": [424, 465], "high": [6, 15, 58, 61, 62, 79, 140, 188, 311, 359, 363, 364, 365, 372, 373, 374, 379, 386, 402, 403, 404, 405, 406, 410, 418, 419, 427, 428, 430, 433, 436, 437, 440, 446, 448, 450, 455, 456, 457, 460, 462, 468, 469, 470, 471, 473, 478, 479, 480, 488, 491, 498, 505, 551, 552, 553, 554], "high_zenith": 465, "higher": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 224, 362, 365, 370, 375, 378, 380, 392, 430, 445, 449, 459, 461, 506], "highest": [132, 169, 449, 460, 468, 479], "highli": 464, "highlight": 553, "him": 388, "hint": [386, 436, 491], "hire": [144, 379, 483, 485, 486, 487, 489, 490, 495, 496, 497, 499, 502, 506, 555, 558], "hist": [79, 104, 105, 192, 196, 352, 435, 466], "histogram": [79, 104, 105, 188, 192, 196, 352, 424, 453, 506, 552], "histori": [373, 385, 421], "hli": [372, 405, 406, 410, 421, 427, 431, 473, 492, 552], "hli_spectrum_analysi": 433, "hline": 510, "hoc": 373, "hold": [67, 78, 85, 87, 91, 95, 151, 219, 288, 368, 369, 371, 374, 553, 555], "home": [16, 324, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 517, 519, 525, 528, 541, 547, 548], "homebrew": 376, "homework": 401, "homogen": [83, 86, 407], "honk": 364, "hood": [433, 473, 477], "hook": [362, 421], "hope": 364, "hopefulli": 366, "horizont": [81, 90, 146, 329, 459, 557], "host": 359, "hour": [65, 89, 362, 375, 389, 428, 456, 460, 461, 493], "hover": 360, "how": [16, 19, 20, 78, 79, 80, 81, 94, 99, 118, 119, 121, 123, 163, 184, 194, 196, 312, 318, 361, 364, 367, 371, 373, 375, 376, 378, 381, 382, 385, 386, 389, 390, 391, 395, 396, 399, 400, 401, 404, 405, 412, 414, 417, 418, 419, 424, 425, 428, 430, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 477, 479, 481, 483, 489, 491, 494, 498, 502, 504, 505, 519, 551, 553, 554, 555, 557, 558], "howev": [83, 86, 116, 278, 358, 359, 360, 362, 366, 369, 372, 373, 377, 385, 387, 392, 429, 438, 446, 453, 455, 456, 457, 458, 466, 470, 471, 473, 489, 493, 505, 506, 511, 527, 553], "howto": [379, 421, 422], "hpx": [182, 183, 184, 186, 195, 196, 373, 410, 461, 469], "hpx2wc": [183, 184], "hpx_map": [183, 184], "hpx_pixel": 373, "hpx_reg": 182, "hpxgeom": [117, 181, 183, 184, 405, 410, 421, 469, 504], "hpxmap": [184, 186, 504], "hpxndmap": [256, 410, 504], "hpxsparsemap": 404, "hpxtowcsmap": [183, 184], "hr": [444, 445, 448, 452], "hspace": 455, "hspec": [414, 415, 416], "hst": 213, "hstack": [83, 86, 372], "html": [26, 79, 83, 86, 120, 140, 176, 182, 188, 191, 194, 200, 211, 233, 261, 288, 315, 316, 359, 360, 362, 367, 379, 384, 385, 389, 397, 418, 428, 435, 437, 440, 442, 448, 452, 458, 459, 468, 490, 496, 504, 506, 532], "htmlcov": 389, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 65, 79, 80, 83, 84, 86, 99, 112, 118, 120, 128, 134, 140, 143, 169, 176, 182, 188, 191, 194, 200, 211, 230, 233, 239, 240, 253, 254, 261, 263, 264, 278, 279, 288, 315, 316, 327, 362, 376, 379, 384, 385, 388, 389, 390, 391, 392, 393, 397, 401, 418, 428, 432, 435, 437, 440, 441, 442, 448, 452, 455, 456, 458, 459, 460, 468, 471, 490, 504, 506, 532, 536, 537, 553], "hubert": 419, "hue": 350, "huestart": 350, "huge": [389, 511], "hugovk": 400, "human": [340, 370, 389, 412, 433, 477], "hundr": 470, "hypercub": [461, 505, 506], "hypothes": [270, 424, 493, 555], "hypothesi": [117, 119, 120, 121, 124, 125, 270, 272, 273, 430, 436, 443, 491, 493, 552, 555], "hz": [318, 479], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 285, 286, 288, 290, 294, 296, 299, 300, 301, 306, 308, 309, 312, 315, 316, 317, 318, 320, 321, 326, 328, 330, 334, 336, 337, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 477, 478, 479, 481, 482, 483, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "i0": [83, 86], "i1": [83, 86], "i4": 446, "i8": [461, 479], "i_0": [183, 184, 186, 192, 195, 196], "i_hpx": [183, 184, 186, 192, 195, 196], "i_lat": [183, 184, 186, 192, 195, 196], "i_lon": [183, 184, 186, 192, 195, 196], "i_n": [183, 184, 186, 192, 195, 196], "i_scan": 466, "iact": [78, 79, 81, 89, 163, 166, 170, 365, 368, 369, 370, 371, 373, 375, 379, 396, 401, 415, 417, 419, 430, 436, 438, 460, 461, 463, 468, 469, 471, 490, 495, 496, 497, 499, 550, 552], "iactbasicimageestim": [365, 418], "iau": [52, 398, 402], "iau2015": 52, "ic": 529, "icon": 551, "icr": [79, 81, 84, 86, 89, 90, 91, 97, 100, 104, 105, 132, 153, 163, 166, 182, 183, 184, 186, 189, 191, 194, 195, 196, 207, 208, 212, 220, 223, 237, 245, 246, 286, 287, 322, 359, 360, 383, 403, 432, 433, 434, 435, 436, 438, 441, 442, 444, 445, 448, 450, 451, 452, 453, 456, 457, 459, 460, 461, 462, 464, 465, 468, 469, 470, 471, 477, 478, 490, 493, 497, 502, 506, 510, 511, 512, 514, 515, 516], "icrc": 414, "id": [65, 76, 78, 79, 83, 84, 86, 87, 107, 372, 375, 395, 433, 435, 444, 446, 448, 453, 456, 464, 468, 469, 470, 471, 477, 490], "id_obs_vela": 453, "idea": [364, 367, 374, 378, 379, 380, 433, 459, 465, 469, 477], "ideal": [361, 362, 369, 373, 374, 383, 387, 388, 430, 469], "idempot": [16, 80, 99, 118], "ident": [334, 362, 374, 421, 434], "identif": [65, 365, 456], "identifi": [65, 84, 98, 103, 182, 248, 359, 369, 370, 372, 375, 384, 385, 389, 405, 436, 444, 449, 456, 457, 464, 468, 470, 492], "identified_object": 456, "idx": [79, 83, 86, 87, 95, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 233, 435, 444, 452, 456, 458, 461, 505], "idx1": 458, "idx2": 458, "idx_glob": 182, "idx_loc": 182, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 385, 463, 464, 489, 552], "iem": [463, 469], "iem_minus_iem": 461, "iem_plus_iem": 461, "iem_times_two": 461, "ignacio": 420, "ignasi": 414, "ignor": [11, 16, 80, 83, 86, 99, 118, 147, 157, 186, 201, 203, 219, 288, 300, 360, 412, 446, 452, 453, 457, 462, 477, 493, 553], "ih1r9kql": 435, "ii": [199, 416], "ij": 199, "ilist": 182, "illustr": [104, 105, 360, 369, 371, 372, 373, 375, 378, 434, 436, 441, 446, 457, 460, 461, 463, 464, 469, 483, 489, 502, 503, 510, 511, 519, 551], "illustrate_colormap": 378, "iloc": [83, 86], "im": [348, 458], "imag": [97, 100, 104, 105, 112, 122, 123, 132, 142, 143, 144, 150, 152, 153, 154, 156, 158, 168, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 260, 281, 284, 324, 345, 347, 348, 349, 350, 354, 359, 367, 368, 370, 375, 376, 379, 380, 389, 391, 396, 398, 399, 400, 403, 404, 405, 411, 415, 416, 417, 418, 419, 427, 437, 438, 440, 446, 447, 460, 462, 464, 468, 478, 479, 489, 490, 491, 498, 501, 502, 503, 504, 505, 506, 550, 551, 552, 558], "image_analysi": [379, 399], "image_err": 123, "image_fitting_with_sherpa": [379, 420], "image_pip": 418, "image_profil": 417, "imagehdu": [183, 184, 195, 196], "imagenorm": [349, 350], "imageprofil": 123, "images_t": 442, "imagin": 553, "img": [347, 461], "iminuit": [200, 358, 376, 385, 410, 412, 419, 423, 424, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 550], "immut": 211, "impact": [366, 372, 376, 470], "imperfect": 460, "implement": [19, 20, 97, 100, 104, 105, 134, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 278, 359, 364, 365, 367, 368, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 386, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 417, 418, 420, 421, 424, 425, 429, 437, 449, 451, 455, 456, 460, 461, 462, 481, 489, 491, 493, 498, 499, 500, 538, 550, 551, 552, 553, 554, 557], "implent": 359, "impli": [224, 359, 378, 489, 552], "implic": 381, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 498], "implicitli": 460, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 64, 65, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 96, 97, 99, 100, 104, 105, 106, 109, 110, 111, 112, 116, 118, 119, 121, 123, 125, 127, 132, 133, 135, 136, 138, 140, 142, 143, 144, 145, 151, 153, 163, 166, 182, 183, 184, 186, 189, 192, 194, 195, 196, 202, 204, 205, 206, 209, 213, 215, 216, 217, 221, 225, 227, 228, 230, 231, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 264, 270, 278, 279, 286, 287, 308, 318, 327, 338, 339, 344, 347, 349, 350, 352, 354, 360, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 406, 416, 418, 423, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 477, 478, 479, 482, 483, 485, 486, 487, 489, 490, 491, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 553, 554, 555, 557], "importantli": [383, 419, 429, 553], "importerror": [83, 86], "impos": [423, 428, 502], "improv": [103, 270, 361, 363, 364, 365, 367, 368, 369, 373, 374, 375, 376, 377, 378, 379, 384, 389, 390, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 461, 468, 493, 503, 510], "imshow": [97, 100, 151, 184, 196, 347, 353, 417, 461, 479], "in2p3": [385, 468], "in_memori": [84, 493], "in_memory_gener": 87, "in_safe_data_rang": [97, 100, 104, 105], "inaccur": 359, "incex": [16, 80, 99, 118], "incid": [365, 552], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 78, 79, 80, 83, 84, 86, 99, 118, 124, 151, 157, 159, 160, 166, 167, 171, 181, 182, 191, 194, 234, 296, 358, 359, 365, 367, 370, 371, 372, 373, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 400, 402, 407, 418, 423, 424, 425, 428, 441, 443, 444, 446, 452, 455, 456, 458, 460, 462, 463, 464, 468, 470, 481, 483, 489, 491, 492, 503, 505, 550, 554, 557], "include_irf": [79, 84, 490], "include_ssc": 234, "inclus": [79, 191, 373], "incompat": [359, 384, 412], "incomplet": [359, 389, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "inconsist": [407, 413, 423, 424], "inconveni": [378, 419], "incorpor": [375, 379, 387, 552], "incorrect": [79, 359, 386, 394, 403, 421, 422, 460, 466], "incorrectli": [421, 462], "increas": [132, 158, 188, 193, 212, 220, 223, 359, 368, 386, 451, 460, 489, 510], "increment": [19, 20, 26, 112, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 373, 461, 505], "ind": [182, 194, 211, 233], "inde": [444, 511], "indefinit": 366, "indent": [16, 80, 99, 118], "independ": [65, 120, 124, 134, 285, 299, 359, 365, 369, 370, 371, 372, 373, 374, 377, 380, 381, 382, 383, 385, 391, 400, 410, 428, 433, 450, 456, 461, 462, 463, 464, 470, 477, 478, 488, 493, 498, 552, 556], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 95, 96, 97, 100, 104, 105, 116, 117, 119, 120, 121, 125, 126, 127, 131, 140, 141, 142, 148, 151, 153, 156, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 200, 202, 204, 205, 206, 209, 211, 213, 215, 216, 217, 221, 227, 228, 230, 231, 233, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 264, 296, 310, 315, 362, 365, 368, 369, 370, 371, 374, 375, 382, 383, 384, 388, 391, 401, 415, 417, 418, 424, 425, 429, 430, 432, 433, 435, 436, 437, 440, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 456, 457, 458, 459, 463, 464, 468, 469, 470, 471, 477, 478, 479, 491, 504, 505, 506, 509, 510, 511, 512, 514, 515, 516, 517, 519, 521, 523, 524, 525, 530, 531, 532, 540, 541, 542, 543, 544, 545, 546, 547, 548], "index1": [205, 249, 520, 534], "index2": [205, 249, 520, 534], "index_1": [252, 253, 254, 535, 536, 537], "index_2": [252, 253, 254, 535, 536, 537], "index_arrai": [83, 86], "index_column": [83, 86], "index_data": 187, "index_error": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "index_mod": [83, 86], "index_scan": 466, "indexerror": [87, 95, 233], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 95, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 359, 421, 435, 445, 449, 460, 461, 465, 466, 470, 471, 493, 505, 506, 552], "indico": 368, "indirect": [455, 481], "individu": [83, 86, 103, 114, 122, 355, 365, 371, 372, 374, 379, 382, 383, 387, 429, 432, 435, 443, 446, 451, 456, 457, 458, 460, 463, 464, 479, 489, 493, 498, 552], "indiviud": 381, "indxschm": [183, 184, 195, 196], "ineffici": [83, 86, 362], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [65, 223, 387, 466], "infer": [117, 119, 181, 182, 183, 184, 186, 194, 195, 196, 213, 360, 477, 505], "inferno": 461, "infil": 359, "infin": 466, "influenc": 466, "info": [16, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 89, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 144, 150, 152, 154, 272, 273, 296, 360, 374, 375, 379, 388, 394, 404, 405, 407, 414, 415, 418, 433, 437, 438, 440, 444, 451, 455, 456, 457, 461, 469, 470, 471, 473, 475, 477, 553], "info_dict": [97, 100, 104, 105, 272, 273, 352, 407, 425, 457], "info_t": [95, 429, 432, 433, 435, 440, 452, 457, 463, 493], "infodict": 352, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 84, 86, 89, 94, 95, 96, 97, 99, 100, 104, 105, 117, 118, 119, 140, 144, 150, 152, 154, 155, 158, 163, 164, 170, 189, 200, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 240, 241, 245, 246, 247, 249, 252, 253, 254, 256, 257, 260, 261, 274, 280, 296, 312, 341, 342, 359, 363, 364, 369, 371, 372, 373, 374, 375, 382, 383, 386, 387, 389, 394, 395, 396, 404, 406, 407, 410, 412, 418, 424, 425, 430, 433, 434, 441, 444, 445, 448, 449, 457, 458, 460, 461, 464, 468, 469, 470, 471, 477, 478, 479, 488, 489, 490, 491, 493, 506, 552, 553, 556], "infrar": 213, "infrastructur": [389, 410, 421, 424], "ingredi": [383, 455], "inherit": [83, 86, 359, 369, 371, 374, 383, 386, 387, 405, 410, 417, 457, 459, 504, 505], "init": [19, 20, 26, 83, 86, 116, 121, 127, 160, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 300, 312, 371, 407, 422, 424, 425, 446, 456, 457, 479], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 63, 80, 83, 86, 99, 117, 118, 119, 127, 184, 187, 188, 211, 233, 235, 236, 288, 364, 369, 370, 371, 375, 412, 428, 435, 438, 440, 441, 443, 444, 445, 448, 453, 456, 457, 461, 464, 477, 478, 479, 488, 490, 538, 552], "initialis": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 310, 312, 315, 316, 317, 318, 359, 381, 466], "inject": [435, 448], "inlin": [364, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 461, 462, 463, 464, 468, 469, 471, 477, 478, 479], "inner": [44, 52, 53, 121, 158, 168, 246, 438, 479, 516], "inner_height": [502, 506], "inner_width": [502, 506], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 80, 82, 83, 86, 97, 99, 100, 103, 112, 114, 116, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 133, 136, 141, 142, 144, 151, 152, 153, 154, 155, 156, 158, 160, 164, 166, 168, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 204, 211, 225, 233, 259, 260, 261, 288, 299, 309, 312, 329, 331, 352, 354, 365, 367, 369, 370, 371, 372, 373, 374, 375, 380, 395, 405, 410, 413, 420, 424, 435, 444, 445, 453, 461, 466, 491, 505, 506, 554], "input_map": [106, 110], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 424, "insensit": 190, "insert": [83, 86, 87, 95, 233, 385, 405, 556], "insert_row": [83, 86], "inset": 411, "insid": [50, 79, 97, 104, 109, 111, 140, 166, 182, 183, 184, 186, 191, 194, 195, 196, 211, 233, 248, 348, 352, 359, 360, 373, 375, 383, 410, 428, 432, 435, 437, 440, 442, 448, 452, 457, 460, 462, 463, 464, 468, 470, 490, 500, 502, 503, 506], "inside_geom": 462, "insight": 394, "inspect": [371, 375, 395, 432, 434, 440, 444, 445, 458, 461, 463, 468, 469], "inspir": [359, 383], "instal": [83, 86, 358, 359, 362, 366, 367, 368, 376, 388, 389, 390, 393, 395, 396, 399, 400, 410, 414, 417, 418, 419, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 473, 477, 478, 479, 493, 553], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 80, 81, 82, 83, 84, 86, 87, 99, 114, 118, 119, 120, 122, 124, 125, 155, 157, 165, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 306, 312, 346, 348, 349, 350, 353, 355, 359, 365, 370, 371, 374, 375, 381, 383, 386, 410, 430, 432, 435, 446, 456, 458, 460, 462, 463, 464, 479, 483, 493, 505, 506, 529], "instanti": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 183, 184, 186, 188, 195, 196, 370, 375, 429, 433, 456, 457, 461, 464, 466, 477], "instead": [16, 19, 20, 26, 80, 81, 83, 86, 97, 99, 100, 104, 105, 108, 118, 170, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 359, 360, 362, 364, 366, 367, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 388, 390, 391, 393, 400, 403, 406, 407, 420, 424, 434, 440, 444, 448, 450, 452, 453, 456, 457, 459, 460, 461, 464, 466, 490, 497, 498, 505, 506, 553], "instruct": [359, 368, 376, 388, 390, 391, 399, 410, 414, 418, 444, 468], "instrument": [6, 79, 90, 103, 143, 147, 148, 219, 359, 369, 370, 371, 372, 374, 379, 383, 391, 395, 404, 407, 419, 420, 421, 427, 429, 430, 432, 433, 436, 440, 447, 453, 457, 458, 459, 460, 463, 464, 465, 466, 468, 469, 471, 473, 477, 478, 489, 490, 491, 495, 497, 499, 550, 551, 552], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 78, 79, 80, 81, 83, 84, 86, 88, 89, 97, 98, 99, 100, 103, 104, 105, 107, 112, 114, 118, 119, 120, 121, 124, 125, 127, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 163, 166, 170, 171, 176, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 266, 268, 270, 272, 273, 277, 278, 279, 288, 299, 300, 306, 310, 312, 315, 316, 317, 318, 320, 321, 346, 352, 359, 373, 417, 438, 458, 483], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 205, 206, 209, 213, 215, 216, 217, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 498, 510], "int_flux": 455, "integ": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 86, 87, 88, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 127, 132, 133, 141, 142, 148, 153, 156, 159, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 202, 204, 211, 233, 288, 306, 312, 359, 365, 373, 438, 505], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 97, 100, 104, 105, 117, 119, 122, 124, 131, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 158, 183, 184, 186, 188, 192, 195, 196, 197, 198, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 266, 299, 358, 366, 368, 370, 372, 373, 374, 376, 377, 379, 383, 385, 398, 400, 401, 405, 406, 410, 415, 416, 417, 418, 419, 420, 421, 424, 434, 435, 437, 452, 455, 456, 457, 461, 462, 464, 479, 481, 489, 491, 497, 512, 532], "integral_error": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 377, 407], "integral_flux_imag": 411, "integrate_geom": [207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260, 410, 423, 425], "integrate_log_log": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155], "integrate_spectrum": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 401, 407], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [83, 86, 288, 369, 387, 459], "intens": [183, 184, 186, 192, 195, 196, 200, 224, 369, 461, 489], "intent": 364, "interact": [19, 20, 83, 86, 153, 156, 183, 184, 186, 192, 195, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 358, 359, 360, 368, 369, 370, 371, 375, 379, 382, 395, 404, 440, 448, 458, 461, 463, 464, 473, 477, 478, 502, 505, 529, 553], "interchang": 505, "interest": [109, 111, 120, 124, 200, 270, 364, 372, 373, 377, 379, 389, 430, 440, 444, 446, 456, 457, 458, 460, 462, 465, 468, 469, 479, 490, 491, 529, 552, 555, 556], "interfac": [6, 11, 15, 19, 20, 83, 86, 199, 200, 201, 202, 203, 204, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 363, 364, 365, 369, 371, 372, 374, 376, 377, 378, 379, 400, 403, 405, 406, 407, 410, 414, 417, 418, 424, 427, 433, 436, 437, 440, 448, 450, 458, 464, 468, 473, 478, 479, 480, 493, 504, 529, 550, 551, 552, 553], "intermedi": [194, 368, 375, 385, 395, 429, 451], "intern": [15, 83, 86, 117, 119, 128, 129, 130, 160, 166, 191, 254, 266, 288, 300, 359, 371, 373, 375, 378, 383, 410, 412, 421, 424, 428, 433, 440, 449, 450, 457, 459, 461, 468, 471, 477, 489, 493, 548], "interp": [19, 20, 145, 183, 184, 186, 188, 192, 193, 195, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 301, 354, 382, 387, 423, 425, 435, 441, 445, 448, 452, 459, 460, 461, 464, 469, 470, 471, 505, 506, 529, 530], "interp1": 461, "interp1d": 301, "interp2": 461, "interp_by_coord": [183, 184, 186, 192, 195, 196, 260, 421, 461], "interp_by_pix": [183, 184, 186, 192, 195, 196, 256, 257, 461], "interp_kwarg": [66, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 213, 256, 257, 260, 261, 359, 459, 469], "interp_map": [183, 184, 186, 192, 195, 196], "interp_missing_data": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155], "interp_param": 359, "interp_scal": [271, 301], "interp_to_geom": [183, 184, 186, 192, 195, 196, 407, 423, 461, 469, 493], "interp_weight": 182, "interpol": [6, 26, 89, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 163, 182, 183, 184, 186, 188, 192, 193, 195, 196, 213, 225, 235, 236, 256, 257, 259, 260, 261, 271, 300, 301, 302, 358, 370, 371, 372, 400, 405, 410, 412, 415, 418, 420, 421, 422, 423, 424, 425, 445, 459, 460, 464, 469, 470, 493, 501, 505, 538], "interpolatedunivariatesplin": 259, "interpret": [86, 97, 100, 122, 132, 133, 184, 188, 194, 195, 196, 306, 377, 387, 461, 491, 506], "intersect": [85, 166, 167, 171, 191, 373, 451], "interspers": 364, "interstellar": [45, 444], "interv": [52, 53, 74, 78, 79, 82, 84, 85, 86, 87, 95, 96, 98, 103, 119, 124, 164, 188, 193, 200, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 368, 369, 373, 374, 377, 383, 391, 404, 406, 407, 410, 419, 420, 425, 450, 452, 458, 461, 470, 478, 490, 505, 552, 555], "interval_edg": 193, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 234, 279, 370, 374], "intro_map": 419, "introduc": [19, 20, 183, 184, 186, 188, 192, 195, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 359, 366, 367, 369, 371, 372, 373, 374, 376, 379, 381, 384, 387, 401, 403, 404, 406, 407, 410, 412, 413, 417, 418, 419, 421, 424, 425, 443, 449, 460, 464, 506, 511, 553, 556], "introduct": [362, 380, 381, 382, 400, 404, 405, 406, 407, 430, 433, 464, 470, 471, 477, 478, 482], "introductori": 449, "introspect": 288, "intuit": [380, 556], "invalid": [345, 359, 373, 386, 387, 410, 444, 471], "invalid_pixel": 462, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 205, 206, 209, 213, 215, 216, 217, 221, 224, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 272, 273, 310, 317, 372, 444, 462, 464, 466, 529], "inverse_al": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "inverse_cdf": 444, "inversecdf": 372, "inversecdfsampl": [372, 402], "inversecompton": [234, 529], "invert": [86, 182, 194, 479], "invest": 362, "investig": 443, "involv": [83, 86, 97, 100, 104, 105, 359, 364, 373, 375, 377, 381, 436, 553], "io": [13, 79, 82, 83, 86, 120, 176, 186, 191, 200, 261, 362, 368, 379, 389, 401, 404, 416, 420, 424, 444, 458, 459, 461, 468, 490, 493, 504, 506], "iop": 278, "iopscienc": 278, "ipix": 182, "ipynb": [367, 379, 401, 404, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 477, 478, 479, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "ipynb_to_galleri": 359, "ipython": [83, 86, 358, 359, 375, 376, 390, 394, 402, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 473, 477, 478, 479, 492, 553], "ipython3": 392, "ipywidget": 461, "irap": 379, "irf": [6, 78, 84, 91, 97, 98, 100, 103, 104, 105, 106, 107, 108, 110, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 169, 170, 172, 173, 174, 176, 178, 179, 182, 191, 194, 248, 287, 359, 360, 365, 369, 370, 371, 372, 375, 378, 379, 380, 381, 387, 391, 399, 401, 404, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 429, 430, 432, 433, 434, 435, 436, 437, 440, 444, 445, 448, 450, 452, 460, 462, 465, 466, 467, 469, 470, 471, 473, 477, 478, 489, 490, 493, 495, 496, 497, 499, 500, 505, 550, 551, 552], "irf_dict": 157, "irf_dl3_hdu_specif": 459, "irf_fil": [84, 138, 142, 143, 144, 153, 428, 435, 448, 452, 459, 468], "irf_filenam": [444, 445, 459, 468], "irf_map": [141, 142, 148, 153, 156], "irf_path": 444, "irfmap": [141, 142, 153, 156, 391, 407, 493], "irfmetadata": 386, "irfmodel": 370, "irfs1": 468, "irfs2": 468, "irfs_path": 78, "irfstack": [407, 416], "irregular": [182, 194, 505], "irrespect": [372, 440, 461, 505], "is_align": [182, 188, 193, 194], "is_all_point_sky_region": 191, "is_all_same_energy_shap": 95, "is_all_same_shap": 95, "is_all_same_typ": 95, "is_allclos": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196], "is_allski": [181, 182, 191, 194], "is_bkg": 102, "is_contigu": [193, 461], "is_convertible_to_flux_sed_typ": [117, 119], "is_energy_axi": 188, "is_energy_depend": [207, 208, 210, 212, 218, 220, 222, 223, 224, 225, 226, 235, 237, 241, 245, 246, 247, 250, 256, 259, 260, 262, 423, 464], "is_fixed_rad_max": 155, "is_flat": [181, 182, 187, 191, 194], "is_hpx": [182, 191, 194], "is_imag": [181, 182, 191, 194], "is_mask": [183, 184, 186, 192, 195, 196], "is_norm": [19, 20, 96, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 387, 412, 425, 429, 432, 433, 434, 435, 437, 440, 441, 448, 452, 456, 458, 464, 478, 479, 529, 538], "is_norm_spectral_model": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 410, 464], "is_nul": 461, "is_pointed_observ": 79, "is_pointlik": [69, 71, 72, 73, 74, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 410], "is_region": [182, 191, 194], "is_regular": [182, 191, 194], "is_ul": [65, 117, 119, 410, 425, 456, 479], "is_unidimension": 187, "isf": [458, 555], "isinst": [359, 370, 373, 382, 386, 387], "ism": [52, 53, 529], "isn": [362, 366, 373, 375, 378, 389, 442, 553], "isnan": [461, 462], "iso": [84, 119, 193, 198, 424, 452, 463, 469, 505, 547], "iso_p8r2_source_v6_v06": [463, 469], "isol": [373, 390, 462], "isot": [340, 557], "isotherm": [22, 481], "isotrop": [47, 208, 265, 463], "issu": [19, 20, 26, 83, 86, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 359, 360, 362, 367, 368, 370, 371, 373, 376, 379, 384, 385, 386, 387, 388, 391, 392, 393, 400, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 442, 462, 468, 489, 493, 553, 554], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 95, 190, 233, 379, 386], "iter": [83, 86, 87, 95, 117, 119, 183, 184, 186, 187, 188, 190, 192, 193, 195, 196, 233, 362, 365, 367, 375, 411, 436, 452], "iter_by_axi": [117, 119, 183, 184, 186, 192, 195, 196], "iter_by_axis_data": 192, "iter_by_coord": 402, "iter_by_edg": [188, 193], "iter_by_imag": [183, 184, 186, 192, 195, 196, 419], "iter_by_image_data": [183, 184, 186, 192, 195, 196, 461], "iter_by_image_index": [183, 184, 186, 192, 195, 196], "iter_by_pix": 402, "iter_with_reshap": 187, "itercol": [83, 86], "iterrow": [83, 86], "itertool": 458, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 117, 119, 159, 160, 169, 182, 188, 190, 205, 206, 209, 212, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 270, 359, 362, 365, 368, 369, 371, 374, 375, 376, 378, 383, 385, 386, 389, 392, 410, 424, 425, 429, 433, 434, 437, 444, 445, 449, 450, 451, 456, 458, 460, 461, 462, 463, 464, 466, 477, 479, 482, 498, 500, 502, 504, 505, 506, 552, 555], "itself": [83, 86, 358, 359, 374, 385, 429, 450, 451, 453, 466, 553], "ivoa": 425, "j": [19, 20, 23, 97, 104, 122, 134, 360, 362, 489], "j0001": [456, 479], "j0002": [456, 479], "j0003": [456, 479], "j0006": 456, "j0007": 479, "j0008": [456, 479], "j0009": 479, "j0010": 456, "j0013": 456, "j0021": 456, "j0022": 456, "j0025": 456, "j0031": 456, "j0349": 456, "j0521": 432, "j0534": [456, 479], "j0633": 479, "j0835": [430, 479], "j0851": 456, "j1036": 456, "j1104": [456, 479], "j1506": 430, "j1507": 430, "j1513": 456, "j1514": 456, "j1555": 479, "j1653": 456, "j1713": 429, "j1731": 463, "j1732": 463, "j1741": 463, "j1744": 463, "j1745": 463, "j1746": 463, "j1747": 463, "j1748": 463, "j1753": 463, "j1800": 463, "j1801": 463, "j1802": 463, "j1809": 463, "j1811": 463, "j1824": 456, "j1825": 443, "j1843": 65, "j1844": 65, "j2028": 456, "j2158": 456, "j2347": 479, "j2350": 479, "j2351": 479, "j2352": 479, "j2356": 479, "j2357": [456, 479], "j2358": [456, 479], "j2359": [456, 479], "j_": 23, "jackson": [83, 86], "jacob": [400, 419], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 406], "jalel": [407, 410], "jan": [364, 365, 368, 371, 376, 380, 397], "jana": 425, "januari": [366, 368, 384], "jargon": 391, "jason": 400, "javascript": [83, 86], "jax": 377, "jbernet": 425, "jean": [418, 419], "jeffrei": 466, "jeltema": 481, "jep": 364, "jet": 350, "jfact": 455, "jfact_decai": 455, "jfact_map": 455, "jfactor": [19, 20, 424], "jfactori": 455, "jj": 199, "jk": [97, 104, 489], "jkl": 489, "jl": 489, "jo": [83, 86], "job": [88, 120, 121, 124, 127, 159, 412], "johann": [403, 410, 414, 415, 416, 417, 418, 419], "john": [83, 86], "join": [361, 370, 371, 468], "joint": [95, 104, 105, 114, 125, 134, 136, 270, 367, 368, 371, 375, 379, 381, 391, 400, 401, 403, 404, 419, 420, 427, 429, 430, 432, 433, 434, 436, 443, 447, 452, 457, 458, 460, 464, 465, 466, 469, 473, 477, 491, 493, 550, 551, 552], "joint_fit": 453, "joint_result": 453, "jointli": [465, 470], "jonathan": [414, 415], "jose": [410, 412, 418], "joshi": 410, "jos\u00e9": [367, 375, 379, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 418, 419, 420], "journal": 385, "jouvin": [400, 402, 403, 404, 407, 415, 416, 417, 418, 419], "jqueri": [83, 86], "jskwarg": [83, 86], "json": [16, 80, 99, 118, 388, 412, 414, 418], "json_data": [16, 80, 99, 118], "json_encod": 16, "json_schema": [16, 80, 99, 118], "jsonschema": [376, 403, 404], "jsviewer": [83, 86, 442], "juan": 425, "jul": [365, 374, 376, 378, 397], "juli": [365, 368, 373, 375, 376, 378, 382, 384, 386, 451], "julia": 425, "julian": 557, "julien": [416, 417, 418], "jun": [373, 375, 376, 381, 382], "june": [373, 377, 397], "junior": [64, 379], "jupyt": [358, 366, 375, 376, 379, 390, 391, 393, 394, 396, 401, 416, 417, 418, 420, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 553], "jupyterlab": [358, 376, 379, 395, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "jupytext": 379, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 82, 143, 334, 359, 360, 361, 362, 364, 367, 369, 373, 375, 376, 377, 379, 388, 389, 390, 392, 418, 420, 432, 433, 435, 440, 442, 444, 449, 450, 451, 453, 457, 461, 469, 470, 477, 479, 490, 506, 553], "juypter": 375, "jyear": [83, 86], "k": [19, 33, 52, 53, 97, 104, 190, 209, 259, 312, 430, 432, 434, 456, 458, 461, 463, 469, 489, 506, 510, 522, 529, 540], "kai": [418, 419], "kaori": 402, "kaspi": [31, 39, 45], "katrin": [387, 423, 424, 425], "kb": 367, "keep": [13, 83, 86, 95, 117, 151, 183, 184, 186, 192, 195, 196, 200, 359, 360, 362, 364, 365, 366, 367, 373, 376, 377, 378, 379, 382, 383, 408, 418, 437, 438, 443, 448, 458, 463, 469], "keep_byteord": [83, 86], "keep_column": [83, 86], "keep_mc_id": [98, 103], "keepdim": [151, 153, 156, 183, 184, 186, 192, 195, 196, 399, 404, 460], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 78, 80, 83, 85, 86, 97, 99, 100, 104, 105, 112, 118, 127, 134, 190, 200, 328, 345, 367, 369, 376, 381, 383, 386, 396, 419, 457, 464, 519], "kept": [85, 97, 100, 104, 105, 117, 119, 120, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 359, 365, 379, 383, 491], "kernel": [97, 100, 104, 105, 112, 116, 122, 123, 127, 140, 141, 142, 151, 153, 156, 158, 163, 168, 170, 173, 184, 194, 196, 365, 386, 405, 406, 411, 416, 420, 421, 436, 438, 453, 460, 461, 462, 469, 479, 489, 493, 497], "kernel_width": [127, 436, 442], "kernelbackgroundestim": 406, "kernelbackgroundmapestim": 380, "kev": [102, 127, 188, 436, 457, 506], "keyboard": 395, "keyerror": [86, 190, 383], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 78, 79, 80, 82, 83, 84, 86, 90, 96, 97, 99, 100, 104, 105, 118, 119, 121, 122, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 271, 300, 308, 309, 328, 340, 342, 343, 346, 347, 348, 352, 353, 354, 355, 356, 386, 406, 410, 413, 421, 422, 434, 444, 445, 457, 461, 470, 491, 506, 517], "kfft_unu": 440, "kg": 52, "khelifi": [402, 404, 407, 410, 413, 417, 418, 419, 421, 422], "kh\u00e9lifi": [385, 421, 423, 424, 425], "kind": [83, 86, 261, 334, 370, 371, 372, 377, 378, 382, 385, 419], "kinet": 44, "king": [152, 403, 414, 415, 416, 417, 418, 419, 459, 499], "kirsti": [423, 424, 425], "kl": 489, "klepser": 414, "km": [32, 37], "km2": 468, "km2a": [57, 68], "know": [360, 362, 364, 368, 373, 375, 376, 383, 389, 401, 418, 419, 420, 442, 445, 455, 459, 460, 461, 468, 470, 471, 553], "knowledg": [387, 395, 430, 435, 441, 443, 446, 448, 450, 458, 460, 461, 463, 466], "known": [272, 273, 288, 372, 432, 436, 438, 443, 450, 460, 461, 462, 479, 493, 503, 553, 554, 555], "konrad": 425, "kornecki": 425, "kovalev": 449, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 234, 288, 291, 455, 456, 487, 529], "kurt": 425, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 79, 82, 83, 84, 86, 96, 97, 100, 104, 105, 119, 120, 121, 122, 124, 135, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 165, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 271, 300, 311, 334, 346, 347, 348, 351, 353, 354, 355, 356, 359, 370, 386, 387, 423, 430, 444, 453, 460, 471, 541], "kwargs_ax": [352, 438, 440], "kwargs_background": [104, 105], "kwargs_colorbar": [137, 138, 140, 143, 144, 145, 150, 152, 154, 196, 347], "kwargs_count": [104, 105], "kwargs_excess": [104, 105], "kwargs_extens": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 443], "kwargs_fit": [104, 105, 352], "kwargs_fp": 96, "kwargs_hist": [352, 438, 440], "kwargs_list": 190, "kwargs_model": 96, "kwargs_npred_sign": [104, 105], "kwargs_point": [191, 211, 233, 434], "kwargs_posit": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 443], "kwargs_residu": [96, 104, 105], "kwargs_saf": [104, 105], "kwargs_spati": [97, 100, 104, 105, 440, 478], "kwargs_spectr": [97, 100, 104, 105, 440, 478], "kwargs_spectrum": [96, 104, 105], "l": [23, 26, 51, 54, 96, 97, 104, 105, 163, 356, 360, 373, 382, 385, 429, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 448, 452, 453, 456, 457, 458, 460, 461, 462, 464, 465, 466, 468, 469, 477, 478, 479, 489, 493, 506, 529, 552, 554, 555, 556], "l06": [48, 483], "l_": [52, 53], "l_0": [51, 486, 510, 511], "l_snr": 44, "la": 416, "lab": [385, 395, 418], "label": [87, 185, 188, 193, 211, 233, 286, 347, 348, 353, 356, 359, 360, 363, 368, 372, 373, 388, 389, 410, 412, 421, 422, 424, 428, 430, 432, 434, 438, 440, 441, 445, 446, 449, 450, 451, 453, 455, 458, 461, 464, 465, 466, 479, 486, 487, 495, 519, 525, 528, 529, 533], "label_axi": 461, "label_axis2": 461, "labelcolor": 428, "labelmapaxi": [410, 424], "lack": [190, 374, 453], "lafferti": [398, 552], "lafferty1994": 552, "lai": 462, "lambda": [16, 65, 216, 217, 352, 456, 458, 468, 523, 555], "lambda_": [216, 217, 270, 430, 432, 440, 523, 525], "lancast": 134, "land": 389, "langl": 19, "languag": [366, 378], "laplac": [223, 512], "lar": [375, 399, 400, 401, 417, 418, 419, 422, 424], "larg": [65, 83, 86, 183, 184, 186, 192, 195, 196, 256, 258, 260, 359, 362, 364, 365, 373, 379, 380, 400, 410, 419, 420, 425, 428, 432, 438, 451, 456, 462, 468, 469, 470, 479, 489, 491, 493, 494, 506, 512, 550, 553, 558], "large_scale_compon": [65, 456], "larger": [27, 126, 270, 278, 360, 367, 378, 424, 428, 429, 432, 457, 460, 461, 462, 466, 490, 506, 512, 554, 555], "largest": [97, 100, 104, 105, 196, 359], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 89, 95, 183, 184, 185, 186, 188, 192, 195, 196, 233, 318, 356, 366, 369, 371, 381, 385, 388, 389, 391, 393, 399, 400, 449, 502], "lat": [16, 47, 58, 60, 61, 63, 67, 69, 71, 72, 74, 79, 82, 86, 89, 91, 97, 100, 104, 106, 110, 116, 120, 121, 123, 127, 141, 142, 148, 153, 156, 159, 183, 184, 186, 189, 192, 194, 195, 196, 207, 208, 212, 219, 220, 223, 235, 237, 245, 246, 248, 250, 256, 258, 260, 265, 270, 290, 291, 294, 316, 359, 360, 367, 368, 369, 370, 371, 372, 378, 379, 382, 389, 391, 396, 399, 404, 417, 418, 419, 427, 430, 433, 436, 437, 438, 440, 442, 446, 450, 451, 456, 457, 459, 460, 461, 462, 463, 464, 465, 472, 473, 477, 478, 479, 481, 488, 489, 490, 491, 493, 498, 505, 506, 510, 511, 512, 513, 514, 515, 516, 550, 557], "lat_0": [212, 220, 223, 237, 245, 246, 260, 374, 382, 437, 440, 441, 443, 444, 445, 448, 450, 456, 457, 463, 464, 469, 477, 478, 510, 511, 512, 514, 515, 516, 517], "lat_0_err": 443, "lat_pnt": [290, 294], "lat_rang": 316, "lat_t": [290, 294], "later": [359, 364, 365, 366, 370, 371, 372, 375, 376, 377, 378, 379, 380, 398, 400, 410, 411, 413, 414, 420, 432, 434, 440, 441, 457, 460, 461, 464, 469, 479, 489], "latest": [120, 176, 261, 288, 362, 366, 379, 384, 385, 392, 421, 428, 435, 437, 440, 441, 442, 448, 452, 458, 468, 490, 506], "latex": [359, 360], "latex_inlin": 424, "latitud": [89, 181, 182, 183, 184, 189, 191, 194, 195, 196, 316, 346, 403, 446, 461, 464, 498, 505, 513], "latpol": 461, "latter": [170, 200, 370, 372, 374, 380, 383, 386, 404, 434, 435, 444, 445, 448, 462, 463, 500, 502, 552, 554], "launch": [418, 553], "laura": [407, 410, 412, 413, 419, 421, 423, 424, 425], "law": [27, 96, 116, 117, 119, 121, 126, 131, 151, 153, 156, 205, 215, 216, 217, 238, 239, 240, 241, 249, 252, 253, 254, 263, 315, 372, 398, 404, 418, 427, 435, 437, 440, 444, 446, 448, 451, 452, 453, 463, 464, 466, 493, 507, 519, 539, 545], "law2": 532, "layer": [83, 86, 371, 378], "layout": [410, 440, 448, 461, 477, 478], "lazi": [84, 95, 97, 100, 104, 105, 258, 297, 418, 493], "lazili": 97, "lazyfitsdata": 406, "lc": [82, 124, 193, 372, 374], "lc_1d": [135, 449, 450, 451, 452], "lc_3d": 450, "lc_estim": 374, "lc_maker_1d": [450, 451, 452], "lc_maker_3d": 450, "lc_new": 451, "lea": 407, "lead": [116, 359, 368, 373, 378, 380, 382, 384, 385, 403, 466, 468, 470, 481, 553], "leak": [434, 502], "leakag": 450, "learn": [138, 143, 359, 376, 379, 388, 391, 393, 395, 419, 430, 432, 436, 442, 443, 444, 446, 449, 456, 457, 458, 461, 464, 466, 468, 473, 479, 553], "least": [43, 44, 359, 362, 364, 368, 444, 449, 505], "leav": [364, 371, 373, 374, 376, 379, 388, 390, 463], "lefaucheur": [416, 417, 418], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 83, 86, 97, 104, 117, 119, 124, 127, 141, 143, 183, 184, 186, 192, 195, 196, 217, 221, 240, 252, 274, 280, 359, 367, 369, 373, 375, 378, 382, 395, 436, 442, 450, 452, 463, 491, 500, 503, 511, 512, 519, 520, 523, 524, 526, 527, 529, 531, 534, 535, 536, 537, 541, 542, 543, 545, 554, 555, 556], "legaci": [359, 418, 419], "legacy_altaz": 81, "legal": [83, 86], "legend": [356, 428, 430, 432, 434, 440, 441, 445, 449, 450, 451, 453, 455, 458, 464, 465, 466, 469, 486, 487, 495, 519, 525, 528, 529, 533], "legend_kwarg": 356, "lemi\u00e8r": 418, "len": [79, 270, 356, 436, 443, 444, 445, 449, 451, 453, 456, 458, 460, 463, 479, 493], "lenain": [418, 419], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 76, 78, 83, 86, 89, 159, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 300, 352, 385, 430, 435, 442, 446, 456, 458, 461, 469, 479, 510], "lengthi": 461, "lennarz": [401, 415, 417], "leq": [510, 515, 516], "less": [182, 184, 188, 225, 259, 280, 359, 364, 366, 377, 389, 418, 458, 464, 465, 466], "let": [65, 264, 359, 362, 364, 368, 373, 376, 391, 394, 418, 419, 420, 430, 433, 434, 435, 436, 440, 441, 442, 443, 444, 446, 452, 453, 456, 457, 458, 461, 462, 464, 466, 469, 477, 479, 553], "level": [6, 11, 15, 16, 79, 80, 99, 116, 118, 200, 272, 273, 359, 360, 362, 363, 364, 370, 372, 374, 378, 379, 380, 383, 386, 391, 395, 402, 403, 404, 405, 406, 410, 418, 425, 427, 429, 430, 432, 433, 436, 437, 438, 440, 442, 444, 448, 449, 450, 451, 452, 453, 455, 458, 463, 465, 468, 469, 470, 471, 473, 475, 479, 480, 489, 490, 491, 498, 500, 501, 505, 550, 551, 552, 553, 557], "levelnam": 359, "levmar": [200, 458], "lf": 389, "lgpl": 359, "lgtm": 389, "lhaaso": [55, 57], "li": [112, 116, 166, 365, 428, 436, 438, 444, 552, 555], "lib": [324, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 517, 525, 528, 541], "librari": [83, 86, 359, 364, 365, 369, 379, 385, 396, 429, 432, 444, 464, 468, 478, 481, 490, 493, 551, 553], "licenc": 385, "licens": [385, 395], "lie": [181, 182, 188, 191, 194], "life": [366, 458], "lifetim": [20, 425], "lifetime_age_of_univers": 20, "light": [15, 124, 128, 213, 225, 279, 363, 370, 372, 375, 379, 383, 391, 404, 406, 407, 414, 417, 419, 424, 425, 427, 449, 454, 473, 489, 490, 491, 492, 501, 502, 505, 507, 549, 551], "light_curv": [16, 225, 379, 419, 427, 433, 437, 438, 440, 450, 454, 477, 548], "light_curve_flar": [427, 451, 454], "light_curve_model": 548, "light_curve_simul": [427, 452, 454], "lightcrv_pksb1222": [225, 548], "lightcurv": [69, 71, 72, 74, 113, 119, 124, 128, 129, 130, 135, 192, 193, 225, 276, 277, 279, 368, 370, 375, 378, 380, 383, 391, 402, 404, 405, 406, 410, 416, 417, 418, 419, 421, 422, 424, 425, 427, 450, 451, 454, 473, 488, 493, 548], "lightcurve_at_energi": 383, "lightcurveconfig": 16, "lightcurveestim": [113, 374, 375, 380, 383, 391, 402, 404, 406, 407, 410, 418, 419, 424, 450, 451, 452, 493], "lightcurvetablemodel": [370, 372], "lightcurvetempl": 370, "lightcurvetemplatemodel": [423, 424], "lightcurvetemplatetemporalmodel": [255, 382, 421, 424, 445, 464, 548], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 65, 76, 78, 83, 84, 86, 132, 133, 147, 155, 183, 184, 186, 190, 192, 195, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 288, 308, 318, 358, 359, 360, 362, 364, 365, 366, 367, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 390, 391, 395, 401, 410, 412, 413, 417, 418, 420, 421, 423, 424, 428, 430, 432, 433, 434, 435, 438, 445, 446, 449, 453, 455, 457, 458, 459, 461, 465, 466, 468, 469, 473, 477, 479, 481, 482, 489, 493, 498, 506, 516, 551, 553, 554, 555, 556], "likelhood": 371, "likelihood": [95, 97, 100, 105, 116, 117, 118, 119, 121, 127, 271, 285, 359, 365, 368, 371, 372, 375, 377, 379, 380, 381, 383, 391, 398, 400, 401, 404, 411, 414, 417, 419, 420, 425, 430, 432, 433, 434, 436, 442, 446, 450, 451, 453, 457, 458, 460, 466, 469, 477, 478, 481, 489, 491, 493, 529, 551, 552, 554, 555], "likelihood_profil": [370, 400], "likelihood_typ": 405, "likewis": [184, 196], "lima": 112, "lima1983": [491, 552, 555], "lima_map": 438, "limamapestim": [380, 406], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 76, 83, 86, 96, 107, 116, 117, 118, 119, 120, 121, 124, 125, 127, 140, 155, 158, 188, 202, 204, 238, 271, 272, 273, 308, 309, 346, 365, 367, 368, 370, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 387, 400, 406, 410, 417, 418, 419, 420, 425, 428, 432, 440, 443, 446, 450, 457, 458, 461, 462, 465, 469, 477, 489, 491, 493, 502, 511, 529, 538, 551, 552, 556], "lin": [19, 20, 188, 192, 193, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 271, 300, 301, 302, 387, 445, 459, 461, 471, 506, 529], "line": [6, 13, 46, 78, 79, 83, 86, 96, 97, 100, 104, 105, 144, 150, 152, 154, 191, 192, 211, 233, 320, 321, 356, 358, 360, 362, 365, 368, 370, 373, 375, 376, 383, 389, 390, 391, 393, 395, 404, 415, 418, 440, 458, 460, 464, 481, 493, 506, 551], "line2d": [191, 211, 233], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 137, 138, 139, 140, 143, 145, 147, 150, 155, 183, 184, 186, 192, 193, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 256, 257, 259, 260, 261, 300, 359, 421, 427, 440, 445, 446, 448, 461, 464, 469, 477, 478, 507, 549], "linear_model": 544, "linearli": [193, 196, 461, 489], "linearsegmentedcolormap": [349, 350], "linearstretch": [349, 350], "lineartemporalmodel": [255, 464, 544], "lineno": 359, "liner": [259, 373], "linestyl": [428, 453, 455, 466, 487, 506, 510, 511], "linewidth": [356, 360], "linhoff": [422, 423, 424, 425], "link": [65, 67, 76, 96, 211, 213, 233, 270, 362, 364, 367, 368, 371, 379, 385, 389, 395, 396, 407, 410, 412, 416, 417, 418, 429, 432, 433, 434, 435, 437, 440, 441, 448, 452, 456, 458, 464, 468, 478, 479, 493, 538, 550], "linkag": 286, "linkage_kwarg": 286, "linkcheck": 360, "linspac": [79, 142, 183, 184, 186, 192, 195, 196, 444, 446, 453, 458, 459, 461, 466, 505, 510], "linux": [366, 376, 389, 392, 419, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 553], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 112, 114, 116, 117, 119, 120, 121, 124, 125, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 309, 319, 320, 321, 323, 348, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 432, 435, 436, 441, 445, 446, 448, 449, 450, 452, 457, 459, 460, 465, 466, 468, 469, 470, 471, 473, 478, 489, 493, 496, 505, 506, 550, 551, 552, 553], "list_format": [83, 86], "listen": 493, "listenv": 362, "listinfo": 388, "liter": [16, 80, 99, 118, 306, 359], "literatur": [481, 483, 552], "littl": [83, 86, 378, 380, 386, 461, 469, 498, 502, 553], "live": [79, 82, 84, 359, 364, 367, 369, 380, 420, 423], "livetim": [65, 84, 85, 100, 101, 105, 153, 175, 177, 178, 365, 428, 429, 432, 433, 435, 442, 444, 445, 448, 452, 456, 457, 459, 461, 469, 470, 479, 489, 493], "livetime_fract": 85, "ljouvin": 365, "ll": [117, 119, 127, 362, 364, 376, 392, 428, 429, 432, 434, 437, 438, 442, 449, 450, 451, 452, 453, 553, 555], "llvm": 395, "ln": [53, 458, 536], "lo": [23, 417], "lo_bnd": 188, "lo_threshold": 140, "load": [64, 65, 78, 79, 82, 83, 86, 95, 96, 97, 100, 104, 121, 123, 157, 163, 181, 182, 183, 184, 194, 296, 359, 413, 416, 418, 424, 433, 435, 437, 438, 444, 445, 448, 449, 452, 453, 462, 468, 469, 470, 471, 477, 479, 490, 493], "load_cta_irf": [420, 424], "load_irf_dict_from_fil": [153, 424, 428, 435, 444, 445, 448, 452, 468], "loc": [83, 86, 196, 352, 453, 486, 487, 495, 519, 525, 528, 529, 533], "loc_indic": [83, 86], "local": [17, 18, 21, 22, 24, 25, 27, 83, 86, 132, 133, 168, 181, 182, 191, 192, 194, 359, 360, 362, 367, 373, 388, 389, 392, 396, 400, 410, 433, 436, 437, 438, 443, 444, 455, 460, 473, 477, 493], "local_dataset": 460, "local_dens": [17, 18, 21, 22, 24, 25, 27, 455], "local_to_glob": 182, "localfold": 11, "localis": 296, "localn": [16, 80, 99, 118], "locat": [47, 78, 79, 81, 83, 84, 89, 128, 141, 142, 148, 153, 156, 194, 317, 367, 373, 377, 380, 385, 386, 391, 393, 424, 428, 435, 444, 445, 448, 452, 456, 470, 471, 490, 506, 553], "location_info": 83, "log": [16, 19, 20, 26, 42, 80, 97, 99, 117, 118, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 188, 192, 196, 201, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 256, 257, 259, 260, 261, 263, 266, 274, 280, 299, 300, 302, 345, 354, 371, 375, 397, 414, 421, 425, 427, 433, 435, 436, 437, 438, 440, 441, 442, 445, 448, 450, 451, 452, 455, 457, 458, 459, 460, 461, 464, 466, 469, 470, 475, 477, 478, 493, 495, 505, 506, 507, 530, 538, 539, 545, 552, 553, 554, 555, 556], "log10": 453, "log_": [227, 228, 464, 527], "log_2": 277, "log_en": 464, "log_level": 11, "log_parabola": 430, "log_parabola_norm": 382, "logarithm": [34, 461, 466, 527], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 417, "loggaussian": 370, "logger": [326, 328, 359, 442], "logic": [16, 80, 82, 99, 118, 169, 383, 461, 462], "logical_and": [183, 184, 186, 192, 195, 196], "logical_or": [183, 184, 186, 192, 195, 196, 460], "loglog": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 299, 428, 455, 485, 486, 487], "lognorm": 455, "logo": 389, "logparabola": [370, 528], "logparabolanormspectralmodel": [228, 243, 382, 407, 464, 528], "logparabolaspectralmodel": [227, 243, 382, 430, 432, 434, 441, 456, 458, 464, 521, 527, 528], "logscal": 404, "logspac": [142, 183, 184, 186, 192, 195, 196, 435, 448, 452, 453, 455, 461, 485, 486, 487, 506], "logspir": [33, 38], "lomb": [374, 418], "lon": [16, 47, 86, 89, 91, 97, 100, 104, 106, 110, 116, 121, 123, 127, 141, 142, 148, 153, 156, 159, 183, 184, 186, 189, 192, 194, 195, 196, 207, 208, 212, 219, 220, 223, 235, 237, 245, 246, 248, 250, 256, 258, 260, 290, 291, 294, 316, 359, 360, 370, 373, 378, 382, 403, 433, 437, 438, 440, 442, 446, 450, 451, 456, 457, 459, 460, 461, 464, 465, 469, 477, 478, 479, 491, 505, 506, 510, 511, 512, 513, 514, 515, 516], "lon_0": [212, 220, 223, 237, 245, 246, 260, 374, 382, 437, 440, 441, 443, 444, 445, 448, 450, 456, 457, 463, 464, 469, 477, 478, 510, 511, 512, 514, 515, 516, 517], "lon_0_err": 443, "lon_pnt": [290, 294], "lon_rang": 316, "lon_t": [290, 294], "long": [359, 362, 364, 366, 373, 375, 378, 379, 381, 384, 386, 412, 421, 456, 473, 505], "longer": [278, 359, 365, 366, 373, 374, 376, 379, 392, 410, 413, 418, 419, 421, 424, 429, 435, 450], "longest": 187, "longitud": [66, 89, 181, 182, 183, 184, 189, 191, 194, 195, 196, 316, 346, 373, 446, 461, 464, 498, 505, 513], "lonpol": 461, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 84, 97, 100, 104, 105, 119, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 318, 359, 361, 362, 364, 371, 373, 374, 376, 378, 379, 382, 395, 418, 429, 432, 433, 435, 436, 437, 438, 440, 442, 444, 446, 448, 450, 452, 453, 457, 459, 461, 464, 468, 469, 471, 473, 477, 479, 481, 490, 493, 553], "look_up": 416, "lookup": 189, "loop": [83, 86, 309, 372, 424, 432, 456, 461, 470, 477, 493], "lopez": [213, 418, 424, 519], "lopez21": [214, 519], "lopez_2021": 214, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 359, "loss": [52, 552], "lost": [95, 97, 104, 493, 506], "lot": [78, 359, 362, 364, 365, 366, 367, 370, 372, 373, 375, 379, 389, 399, 401, 402, 410, 418, 419, 433, 442, 469, 477, 478, 503], "low": [83, 86, 140, 188, 311, 359, 360, 363, 368, 388, 416, 418, 427, 429, 432, 436, 442, 444, 457, 462, 463, 468, 469, 473, 477, 480, 489, 490, 491, 500, 501, 505, 550, 554], "low_zenith": 465, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 117, 119, 140, 169, 188, 190, 193, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 359, 373, 378, 379, 386, 446, 460, 478], "lower_error": 119, "lowest": [378, 449], "lp": [227, 228, 382, 430, 456, 464, 521], "lp_norm": 528, "lst": [366, 468], "lt": [359, 385, 412, 421, 515, 516], "ltcube": [182, 183, 184, 186, 195, 196, 461], "lts_author": 385, "luca": [400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 421, 424], "lui": 420, "luigi": 415, "luminos": [41, 46, 51, 52, 53, 54, 234], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 487], "lvtm": 452, "lw": [434, 436, 442, 453, 458, 506, 510, 512], "ly": [410, 463], "lyne": 37, "l\u00e9a": [400, 402, 403, 404, 407, 415, 416, 417, 418, 419], "l\u00f3pez": 418, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 83, 86, 89, 92, 106, 110, 124, 181, 182, 183, 184, 186, 192, 194, 195, 196, 285, 359, 360, 362, 373, 390, 391, 392, 393, 445, 455, 458, 459, 461, 464, 475, 498, 502, 504, 505, 506, 517, 553, 556], "m1": [391, 393], "m2": [97, 143, 163, 433, 435, 437, 438, 440, 442, 448, 457, 459, 460, 468, 477, 478], "m_": [20, 50, 52, 53], "m_3fhl_gc": 461, "m_4d": 461, "m_allski": 461, "m_b": 554, "m_cube": 461, "m_ejecta": [52, 486], "m_gc": 461, "m_hpx": 461, "m_i": 554, "m_iem_10gev": 461, "m_iem_cutout": 461, "m_iem_gc": 461, "m_iem_interp": 461, "m_sub": 461, "m_sun": 486, "m_wc": [183, 184, 186, 192, 195, 196, 461], "ma": [83, 86, 112, 116, 428, 436, 438, 552, 555], "mac": [83, 86, 359, 366, 389, 417, 553], "machin": [362, 366, 367, 372, 376, 389, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 440], "maco": [376, 419], "macport": [376, 417, 419], "made": [163, 170, 191, 194, 202, 204, 211, 233, 288, 320, 321, 359, 362, 364, 375, 378, 380, 383, 384, 385, 410, 421, 422, 432, 436, 440, 441, 460, 468, 506, 517, 552], "madrid": 369, "magenta": [356, 443, 465], "magic": [92, 391, 396, 412, 418, 421, 434, 469, 552], "magic_ecpl": 264, "magic_lp": [264, 434], "magnet": [42, 50, 51, 54, 529], "magnetic_field": [50, 51, 54], "magnitud": [300, 444], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 83, 86, 89, 96, 99, 118, 119, 120, 121, 124, 201, 203, 359, 360, 362, 367, 368, 372, 373, 375, 376, 384, 385, 389, 390, 392, 396, 397, 398, 437, 438, 444, 468, 492, 505, 512, 529, 550, 553, 557], "mail": [360, 362, 364, 366, 373, 375, 378, 380, 382, 385, 388, 394, 399, 400, 479, 553], "mailman": 388, "mailmap": [410, 421], "main": [86, 97, 104, 359, 362, 364, 365, 367, 371, 374, 375, 376, 379, 383, 385, 389, 400, 406, 410, 413, 418, 424, 433, 443, 444, 446, 448, 456, 459, 461, 462, 463, 475, 477, 478, 488, 490, 494, 553], "mainli": [359, 369, 370, 373, 380, 461], "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 359, 361, 376, 378, 379, 380, 384, 389, 419, 460], "mainten": [359, 366, 385, 389, 401, 423], "major": [191, 212, 220, 223, 359, 363, 364, 368, 376, 384, 412, 418, 419, 510, 511, 512], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 78, 80, 83, 86, 90, 96, 99, 118, 158, 159, 163, 164, 165, 166, 168, 169, 170, 173, 174, 179, 180, 182, 183, 184, 187, 188, 191, 193, 194, 195, 196, 259, 318, 320, 321, 330, 358, 360, 361, 364, 365, 366, 369, 371, 373, 375, 376, 377, 378, 379, 380, 383, 385, 386, 389, 395, 398, 399, 401, 404, 405, 410, 412, 415, 416, 417, 418, 421, 423, 429, 432, 434, 435, 438, 440, 444, 448, 450, 458, 459, 460, 461, 464, 468, 469, 470, 475, 479, 490, 493, 553, 554], "make_background": [163, 170], "make_background_fit": 160, "make_background_scal": 160, "make_base_catalog_galact": [418, 483], "make_concentric_annulus_sky_region": 446, "make_contour": 458, "make_count": [163, 164, 165, 170], "make_counts_off": [164, 165], "make_cub": 158, "make_dataset": 159, "make_default_fov_background_model": 160, "make_edisp": [163, 170], "make_edisp_kernel": [163, 170], "make_edisp_kernel_map": 459, "make_edisp_map": 142, "make_effective_livetime_map": 460, "make_exclusion_mask": 160, "make_exposur": [163, 170], "make_exposure_irf": [163, 170], "make_imag": 419, "make_lupton_rgb": 354, "make_map_background_irf": 413, "make_map_count": 365, "make_map_cutout": 365, "make_map_exposure_reco_energi": 365, "make_map_exposure_true_energi": [142, 365, 459], "make_map_fov_background": 365, "make_map_hadron_accept": 365, "make_map_ring_background": 365, "make_map_xxx": 365, "make_maps_off": 168, "make_mask_bkg_invalid": 169, "make_mask_energy_aeff_default": 169, "make_mask_energy_aeff_max": 169, "make_mask_energy_bkg_peak": 169, "make_mask_energy_edisp_bia": 169, "make_mask_offset_max": 169, "make_mean_edisp": 420, "make_mean_psf": 420, "make_meta_t": [163, 170], "make_model": 378, "make_more_random_stuff": 359, "make_observation_time_map": 460, "make_orthogonal_rectangle_sky_region": [121, 446], "make_path": [119, 441, 457], "make_pixel_region": 373, "make_psf": [153, 163, 170, 420], "make_psf_map": 459, "make_quant": 330, "make_random_stuff": 359, "make_region": 373, "make_sky_coord": 373, "make_some_random_stuff": 359, "make_theta_squared_t": [410, 471], "makefil": [389, 414], "maker": [6, 142, 153, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 365, 372, 374, 385, 404, 406, 407, 412, 421, 424, 425, 427, 428, 432, 434, 435, 438, 442, 444, 445, 448, 452, 453, 457, 459, 462, 467, 470, 471, 473, 489, 490, 503, 505, 552], "maker_fov": 478, "maker_safe_mask": [442, 448, 478], "mamba": [362, 390, 391, 412], "manag": [83, 86, 202, 204, 211, 233, 308, 337, 358, 359, 362, 367, 375, 376, 378, 381, 385, 386, 388, 410, 415, 417, 421, 425, 461, 463, 553], "manconi": 402, "mandatori": [169, 362, 372, 385, 445, 464], "mandatory_keyword": 459, "mani": [83, 86, 300, 359, 360, 362, 364, 366, 368, 371, 373, 374, 375, 376, 379, 380, 385, 389, 395, 401, 402, 407, 410, 416, 417, 418, 419, 420, 423, 424, 429, 432, 435, 443, 448, 449, 461, 471, 473, 481, 489, 491, 503, 506, 550, 551, 552, 553, 557], "manifest": 369, "manipul": [83, 86, 383, 386, 412, 466, 505], "manner": [423, 424], "manpow": [364, 376], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 366, 371, 381, 388, 444, 493, 501, 553, 554], "manuel": [411, 414, 415], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 79, 80, 83, 86, 91, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 127, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 208, 211, 212, 219, 220, 223, 225, 233, 235, 237, 245, 246, 248, 250, 256, 257, 258, 260, 261, 268, 310, 346, 347, 352, 354, 356, 358, 359, 360, 362, 366, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 386, 391, 395, 399, 400, 402, 403, 404, 405, 406, 407, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 424, 425, 427, 428, 429, 432, 433, 434, 435, 439, 440, 443, 444, 445, 446, 447, 449, 450, 451, 452, 456, 457, 460, 464, 467, 468, 469, 470, 471, 473, 474, 477, 478, 481, 488, 489, 490, 492, 493, 497, 498, 499, 500, 501, 502, 503, 509, 511, 512, 513, 514, 517, 548, 550, 551, 552], "map_": [197, 198, 347, 354], "map_4d": 461, "map_analysi": 378, "map_cent": 260, "map_coord": [79, 142, 153, 156], "map_dataset": [371, 453], "map_dataset_empti": 453, "map_dataset_mak": 453, "map_dataset_on_off": 453, "map_edisp": [106, 110], "map_in": [183, 184, 186, 192, 195, 196], "map_out": [100, 105, 141, 142, 148, 153, 156, 183, 184, 186, 192, 195, 196], "map_select": [16, 433, 437, 438, 440, 477], "map_typ": [183, 184, 186, 192, 195, 196, 461, 505], "mapax": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 407, 410, 412, 461], "mapaxi": [19, 20, 26, 97, 100, 104, 105, 106, 107, 108, 110, 117, 119, 121, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 163, 173, 174, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 354, 360, 374, 383, 401, 402, 404, 407, 410, 420, 424, 428, 429, 432, 434, 435, 441, 442, 444, 445, 448, 451, 452, 453, 457, 459, 460, 461, 464, 469, 470, 471, 478, 497, 500, 502, 503, 505, 506], "mapcoord": [79, 142, 153, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 235, 418, 419, 461, 506, 513], "mapdataset": [93, 94, 98, 100, 103, 104, 105, 107, 108, 109, 111, 112, 116, 121, 124, 127, 131, 132, 133, 134, 158, 159, 160, 163, 164, 168, 169, 219, 352, 355, 372, 374, 380, 381, 400, 401, 402, 403, 404, 405, 406, 407, 410, 424, 425, 436, 437, 441, 442, 443, 445, 446, 448, 450, 452, 453, 458, 460, 462, 463, 469, 477, 478, 491, 493, 500, 503, 552, 554, 555], "mapdataseteventsampl": [88, 103, 404, 405, 406, 413, 424, 444, 445], "mapdatasetmak": [153, 161, 170, 372, 404, 407, 410, 413, 421, 442, 444, 445, 448, 453, 459, 460, 470, 477, 478, 493, 500, 503], "mapdatasetmetadata": [97, 100, 386], "mapdatasetoff": 412, "mapdatasetonoff": [93, 97, 104, 105, 112, 116, 131, 158, 164, 168, 404, 405, 407, 410, 423, 424, 438, 453, 460, 489, 503, 554], "mapdatasetsampl": 372, "mapevalu": [370, 371, 403, 404, 407, 410, 421, 422, 423, 425], "mapeventsampl": [402, 403], "mapfit": [370, 371, 400, 419, 420], "mapgeom": [365, 420, 421], "mapmak": [163, 375, 400, 404, 419], "mapmakerob": [403, 404], "mappabl": 383, "mappanelplott": [380, 558], "mapper": 296, "mappingintstrani": [16, 80, 99, 118], "maps_off": 168, "mar": [376, 397, 422], "march": [366, 368, 397, 399, 420], "marcocirelli": 26, "margin": [100, 105, 109, 111, 182, 184, 194, 196, 211, 233, 248, 370, 462, 510, 552, 554], "marion": [400, 419], "mark": [86, 359, 370, 388], "marker": [96, 97, 100, 104, 105, 428, 429, 432, 434, 436, 442, 449, 450, 451, 452, 479], "markerfacecolor": [97, 100, 104, 105], "markers": [96, 97, 100, 104, 105, 466], "mask": [79, 83, 86, 94, 96, 97, 100, 104, 105, 116, 120, 121, 123, 124, 125, 127, 141, 142, 148, 153, 156, 158, 160, 165, 166, 167, 168, 169, 171, 181, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 202, 204, 211, 233, 248, 371, 387, 404, 406, 407, 408, 410, 413, 419, 421, 422, 423, 424, 427, 428, 429, 440, 442, 460, 463, 467, 470, 473, 489, 500, 502, 505, 552], "mask_1": 465, "mask_2": 465, "mask_bright": 456, "mask_contains_region": 196, "mask_data": 462, "mask_energi": [457, 462], "mask_fit": [96, 97, 100, 104, 105, 109, 111, 371, 404, 421, 434, 440, 453, 457, 458, 462, 466, 489], "mask_fit_imag": [97, 100, 104, 105], "mask_imag": [97, 100, 104, 105], "mask_map": [182, 194, 427, 462, 467], "mask_map_catalog": 462, "mask_nearest_posit": [183, 184, 186, 192, 195, 196], "mask_off": 453, "mask_roi": 456, "mask_saf": [96, 97, 100, 101, 104, 105, 169, 371, 404, 457, 460, 462, 489], "mask_safe_edisp": [97, 100, 104, 105], "mask_safe_imag": [97, 100, 104, 105, 141, 142, 148, 153, 156], "mask_safe_psf": [97, 100, 104, 105], "mask_spac": 457, "masked_ev": 79, "maskedarrai": [83, 86], "maskedcolumn": [83, 86], "mass": [19, 20, 26, 52, 372, 406, 425, 455, 481, 514], "massdm": [19, 20, 455], "master": [365, 366, 373, 388, 389, 398], "match": [83, 86, 103, 107, 181, 182, 184, 187, 188, 189, 191, 194, 196, 198, 272, 273, 359, 367, 418, 420, 425, 432, 435, 452, 469, 488, 505], "match_by_nam": 189, "math": [220, 358], "mathcal": [458, 489], "mathemat": [464, 466], "mathieu": [410, 413], "mathrm": [19, 20, 23, 97, 104, 143, 455, 458, 489, 554, 556], "mathworld": [315, 316], "matplotlib": [19, 20, 26, 64, 65, 79, 123, 137, 140, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 183, 184, 186, 192, 195, 196, 199, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 337, 347, 348, 349, 352, 353, 354, 356, 358, 359, 360, 373, 376, 385, 392, 395, 402, 410, 412, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 485, 486, 487, 493, 495, 496, 497, 499, 502, 510, 512, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 557], "matric": 199, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 110, 140, 141, 142, 145, 199, 200, 202, 211, 233, 272, 273, 352, 376, 377, 387, 420, 421, 424, 458, 459, 489, 491, 497], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 373, 379, 387, 419, 424, 425, 427, 460, 467, 469, 473, 482, 505, 551, 553], "matthew": [366, 416, 418, 419], "matthia": [418, 419], "mattox": 436, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 84, 86, 97, 107, 120, 122, 124, 153, 155, 156, 159, 163, 165, 169, 196, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 316, 367, 375, 382, 387, 395, 406, 407, 408, 410, 412, 424, 429, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 446, 448, 449, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 469, 470, 477, 478, 481, 500, 502, 503, 510, 529, 532, 538, 555], "max_ag": [45, 483], "max_column": [83, 86], "max_energi": 449, "max_lin": [83, 86], "max_offset": 375, "max_percentil": 79, "max_radiu": [151, 153, 156, 194, 469], "max_region_numb": [166, 502], "max_width": [83, 86], "maxcal": 200, "maxclust": 286, "maxfev": 458, "maxim": [45, 78, 86, 107, 169, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 422, 423, 424, 425, 502], "maxima": [132, 202, 204], "maximilian": [410, 412, 413, 422, 423, 424, 425], "maximum": [19, 20, 45, 46, 47, 79, 83, 86, 95, 117, 119, 120, 122, 124, 153, 156, 158, 166, 169, 175, 178, 182, 188, 193, 194, 201, 203, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 272, 273, 315, 317, 320, 356, 362, 365, 373, 412, 430, 436, 449, 460, 461, 466, 470, 478, 483, 491, 502, 529, 551, 552, 555], "maxmimum": 466, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 359, 367, 369, 370, 381], "mb": [181, 182, 191, 194, 367, 391, 393, 427, 431, 439, 447, 454, 467, 468, 469, 471, 472, 474, 476, 480, 508, 518, 539, 549], "mbox": [97, 104], "mc": 377, "mc_id": [79, 369, 372, 412, 444, 468], "mcerp": 377, "mckee": [53, 425], "mcmc": [377, 379, 400, 405, 407, 529], "mcmc_sampl": [379, 402], "md": [362, 379, 385], "mdm": [26, 455], "mean": [42, 66, 83, 86, 91, 97, 121, 123, 140, 141, 142, 145, 148, 153, 156, 221, 225, 259, 276, 287, 306, 359, 360, 362, 364, 366, 372, 373, 375, 376, 382, 387, 392, 395, 407, 416, 435, 445, 449, 458, 460, 464, 465, 466, 469, 470, 479, 511, 526, 553, 554], "meaning": 464, "meant": [365, 424, 428, 435, 437, 440, 442, 448, 452, 468], "measur": [27, 65, 100, 105, 123, 188, 264, 272, 273, 276, 277, 278, 279, 282, 283, 285, 365, 373, 378, 383, 389, 398, 403, 411, 417, 419, 429, 432, 434, 435, 438, 441, 443, 446, 448, 449, 450, 451, 456, 469, 478, 479, 491, 498, 500, 503, 551, 552, 555, 556], "mechan": [367, 377, 383, 386], "media": 385, "median": [79, 153, 156, 395, 453, 465, 469], "median_zenith": 465, "medium": [45, 52, 359, 368], "meeseeksdev": 359, "meeseeksmachin": 359, "meet": [211, 233, 288, 365, 367, 379, 384, 389], "megabyt": [181, 182, 191, 194], "mem": [427, 431, 439, 447, 454, 467, 472, 474, 476, 480, 508, 518, 539, 549], "member": [79, 360, 364, 373, 385, 386, 418, 424, 468, 471], "memo": [140, 188], "memori": [83, 84, 86, 87, 95, 97, 98, 100, 103, 104, 105, 181, 182, 191, 194, 256, 258, 260, 337, 359, 369, 371, 372, 375, 381, 383, 404, 410, 425, 435, 448, 493, 552], "memoryobserv": 84, "mender": [423, 424, 425], "mention": [59, 135, 359, 360, 362, 366, 367, 371, 373, 376, 378, 379, 384, 385, 388, 389, 459, 463, 464, 481, 552], "mentor": [362, 379], "mere": 369, "merg": [65, 82, 83, 86, 185, 188, 211, 233, 327, 359, 362, 363, 364, 365, 372, 373, 374, 378, 379, 384, 385, 388, 389, 399, 400, 401, 402, 403, 404, 405, 406, 407, 415, 416, 417, 418, 419, 420], "merge_equ": 82, "mergesort": [83, 86], "mess": 360, "messag": [96, 362, 373, 375, 382, 408, 423, 429, 430, 432, 433, 434, 440, 441, 442, 452, 453, 458, 469, 477, 478, 493, 553], "met": [82, 340, 424, 451, 552], "met_start": 82, "met_stop": 82, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 81, 83, 84, 86, 89, 95, 97, 98, 100, 102, 103, 104, 105, 117, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 170, 183, 184, 186, 192, 195, 196, 256, 257, 260, 261, 298, 340, 341, 342, 343, 369, 372, 373, 374, 383, 386, 406, 407, 418, 422, 424, 425, 444, 453, 461, 465, 468, 470, 490, 491, 548], "meta_t": [95, 96, 97, 100, 104, 105, 163, 170, 383, 386, 407, 429, 435, 460, 489], "metaattribut": [83, 86], "metadata": [16, 79, 80, 81, 83, 84, 86, 99, 101, 117, 118, 119, 137, 138, 139, 143, 144, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 341, 363, 365, 376, 425, 433, 444, 464, 477, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "metadata_fits_export_kei": [80, 99, 118], "metadatabas": 386, "metadatabasemodel": 386, "metapackag": 376, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 273, 279, 286, 296, 300, 304, 308, 309, 310, 333, 346, 348, 358, 359, 362, 365, 368, 369, 370, 373, 374, 375, 377, 378, 379, 381, 383, 385, 386, 391, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 424, 425, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445, 448, 451, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 488, 490, 492, 493, 497, 500, 502, 503, 504, 506, 527, 541, 550, 551, 552, 553, 555], "method_kwarg": [308, 309], "methoda": 402, "metric": 286, "mev": [71, 79, 137, 138, 139, 143, 428, 435, 437, 440, 442, 448, 452, 453, 456, 459, 461, 464, 468, 469, 479, 538], "meval": 512, "mexico": 470, "meyer": [230, 264, 441, 552], "meyer2010": 552, "mgtime": 374, "michael": [423, 425], "mid": [413, 424, 468], "middl": [348, 375], "midli": 432, "midpoint": 84, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 171, 188, 200, 359, 364, 370, 371, 373, 376, 378, 383, 385, 386, 391, 393, 400, 432, 451, 453, 457, 460, 462, 469, 470, 473, 479, 481, 489, 493, 500, 506, 553, 555], "migra": [97, 100, 104, 105, 142, 145, 174, 375, 444, 445, 459, 498], "migra_axi": [97, 100, 104, 105, 108, 142, 145, 444, 445, 459, 460], "migrad": [96, 200, 429, 430, 432, 433, 434, 440, 441, 442, 453, 458, 469, 477, 478], "migrad_opt": [200, 458], "migrat": [97, 100, 104, 105, 108, 145, 368, 403, 410, 419, 444, 460, 497, 498], "milagro": [92, 350], "mileston": [368, 388], "milki": [33, 38, 398, 483], "miller": [83, 86], "million": [359, 386], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 86, 97, 120, 122, 124, 135, 163, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 277, 316, 374, 375, 382, 387, 395, 410, 418, 433, 435, 437, 438, 440, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 464, 465, 466, 469, 477, 478, 481, 502, 529, 532, 538], "min_count": 160, "min_dist": [132, 133, 166, 436, 442, 502], "min_distance_input": [166, 502], "min_energi": 449, "min_npred_background": 160, "min_signific": 374, "min_significance_lc": 374, "minaya": 420, "mind": [362, 379, 448, 458], "mini": 379, "miniconda": 390, "minim": [19, 20, 26, 107, 126, 183, 184, 186, 191, 192, 195, 196, 197, 200, 205, 206, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 237, 238, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 270, 371, 374, 382, 386, 412, 422, 424, 428, 444, 457, 458, 466, 478, 493, 502, 503, 506, 551, 556], "minima": [202, 204, 466], "minimis": [452, 465], "minimum": [19, 20, 26, 47, 79, 95, 116, 117, 119, 120, 122, 124, 126, 128, 132, 133, 135, 136, 158, 160, 166, 188, 191, 193, 201, 203, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 266, 271, 274, 277, 288, 315, 317, 320, 354, 376, 412, 418, 432, 436, 444, 458, 461, 466, 469, 491, 493, 502, 529, 556], "mino": [200, 458], "minor": [359, 364, 379, 382, 384, 409, 422, 511, 512], "minos_contour": [402, 420], "minu": [145, 453], "minuit": [96, 114, 200, 370, 377, 404, 419, 420, 424, 429, 430, 432, 433, 434, 440, 441, 442, 453, 458, 469, 477, 478], "minuit_opt": 458, "minut": [379, 389, 418, 432, 436, 438, 440, 442, 443, 444, 446, 448, 451, 452, 455, 457, 458, 460, 466, 477], "mireia": 421, "mirror": 180, "misc": [398, 411, 415, 416, 417], "miss": [78, 83, 86, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 359, 362, 367, 368, 369, 370, 373, 379, 380, 383, 408, 410, 412, 418, 423, 461], "mission": [79, 424, 552], "mistak": [364, 384], "mix": [358, 359, 375, 457, 461], "mixin": [83, 86], "mjd": [82, 89, 119, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 341, 343, 360, 423, 424, 436, 444, 445, 449, 450, 451, 452, 461, 464, 490, 541, 542, 543, 544, 545, 546, 547, 548, 557], "mjdref": [436, 461], "mjdreff": [89, 340, 343, 445], "mjdrefi": [89, 340, 343, 445], "mkdir": [375, 432, 433, 440, 441, 444, 477, 478], "mkn": [479, 552], "mkn_421_3fhl": 479, "mncontour": 200, "mnra": 128, "mnt": 421, "mock": 443, "mock_dl4": 443, "mode": [16, 80, 81, 83, 86, 89, 97, 99, 100, 104, 118, 122, 141, 142, 148, 153, 156, 159, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 258, 386, 405, 418, 421, 425, 452], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 84, 88, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 131, 134, 137, 143, 144, 151, 152, 153, 154, 156, 160, 163, 176, 183, 184, 186, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 281, 284, 285, 355, 358, 359, 360, 363, 364, 365, 371, 372, 374, 375, 377, 379, 380, 383, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 435, 436, 438, 443, 446, 448, 453, 459, 460, 461, 462, 467, 469, 470, 473, 481, 482, 488, 489, 491, 493, 494, 498, 500, 501, 505, 508, 518, 539, 549, 551, 552, 555, 556], "model1": [206, 519, 521, 525, 528, 530, 533], "model2": [206, 452, 519, 521, 525, 528, 530, 533], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 433], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [464, 521], "model_best_joint": 432, "model_best_stack": 432, "model_bkg": 457, "model_computed_field": [16, 80, 99, 118], "model_config": [16, 80, 99, 118, 437, 477], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 80, 99, 118], "model_copi": [16, 80, 99, 118, 464], "model_dump": [16, 80, 99, 118], "model_dump_json": [16, 80, 99, 118], "model_extra": [16, 80, 99, 118], "model_field": [16, 80, 99, 118], "model_fields_set": [16, 80, 99, 118], "model_fit": 452, "model_joint": 440, "model_json_schema": [16, 80, 99, 118], "model_manag": [427, 463, 467], "model_nam": [97, 100, 104, 105, 211, 233, 355, 457], "model_parametrized_nam": [16, 80, 99, 118], "model_plot": 443, "model_post_init": [16, 80, 99, 118], "model_prior": 466, "model_read": 466, "model_rebuild": [16, 80, 99, 118], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [435, 448, 452], "model_spectrum": 464, "model_str": 433, "model_typ": [211, 219, 231, 233, 248, 258, 270, 382, 463], "model_valid": [16, 80, 99, 118], "model_validate_json": [16, 80, 99, 118], "model_validate_str": [16, 80, 99, 118], "model_weak": 466, "model_weak_prior": 466, "model_without_nam": 464, "modelbas": [219, 248, 250, 251, 258, 262, 387], "modeldm": [19, 20], "modelevalu": 370, "modeling_2d": [427, 437, 439], "modelmetadata": 386, "modelmodel_dump": [16, 80, 99, 118], "modelmodel_dump_json": [16, 80, 99, 118], "models_3fhl": 463, "models_4fgl_roi": 456, "models_as_dict": [16, 80, 99, 118], "models_diffus": 444, "models_fil": [16, 433, 437, 438, 440, 477], "models_fit": 448, "models_gc": 463, "models_gp": 468, "models_joint": 440, "models_or": 463, "models_read": 464, "models_select": 463, "models_stack": 440, "models_yaml": 464, "modelsmetadata": 386, "modern": [83, 86, 377], "modernis": [376, 404], "modest": [359, 511], "modif": [16, 80, 83, 86, 99, 118, 359, 362, 381, 388, 421], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 86, 88, 97, 104, 119, 120, 121, 124, 127, 159, 200, 308, 331, 356, 369, 371, 375, 381, 385, 386, 405, 407, 408, 410, 412, 420, 423, 424, 433, 445, 460, 462, 466, 470, 477, 491, 493, 506, 557], "modul": [6, 247, 359, 360, 364, 368, 375, 380, 398, 400, 406, 418, 452, 456, 460, 463, 481, 482, 483, 484, 529, 546, 557], "modular": 365, "mohrmann": [375, 399, 400, 401, 417, 418, 419, 422, 424, 552], "mohrmann2019": 552, "moment": [15, 51, 54, 82, 90, 248, 335, 365, 373, 375, 376, 379, 384, 385, 459, 461, 498], "moncar": [200, 458], "monitor": [372, 468, 493], "monkei": 359, "mono": 367, "mont": [377, 498], "montecarlo": [98, 103, 200], "month": [74, 362, 368, 373, 376, 378, 379, 384, 388, 392, 398, 399, 400, 401, 402, 411, 414, 415, 416, 417, 418, 419, 420], "monthli": [368, 386, 391, 420], "moor": 24, "morcuend": [420, 423, 425], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 71, 72, 74, 83, 86, 94, 95, 96, 97, 100, 104, 105, 132, 140, 183, 184, 186, 195, 196, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 240, 241, 245, 246, 247, 249, 252, 253, 254, 260, 261, 274, 280, 296, 334, 359, 360, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 395, 404, 405, 406, 407, 410, 417, 419, 420, 424, 429, 432, 434, 436, 438, 440, 444, 445, 449, 452, 455, 457, 458, 460, 461, 462, 463, 464, 465, 466, 470, 471, 473, 479, 489, 490, 491, 493, 502, 503, 505, 506, 511, 550, 551, 553, 555, 557], "moreov": [375, 456, 460, 489], "morpholog": [114, 372, 427, 447, 473, 489, 505], "morphologi": [50, 52, 114, 370, 372, 382, 398, 415, 417, 429, 437, 443, 444, 445, 448, 456, 460, 507], "mosaic": 365, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 90, 112, 119, 358, 359, 360, 362, 364, 365, 366, 367, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 389, 391, 392, 410, 417, 418, 420, 421, 424, 425, 437, 438, 446, 450, 452, 456, 458, 459, 460, 461, 462, 468, 469, 473, 479, 481, 491, 492, 493, 498, 506, 550, 552, 553, 556], "mostli": [56, 67, 288, 359, 360, 365, 366, 367, 368, 373, 375, 378, 379, 380, 383, 384, 386, 388, 389, 410, 418, 456, 460, 471, 479, 555, 557], "motion": [45, 292], "motiv": [169, 364, 366, 367, 373, 376, 378, 388, 464, 493], "move": [270, 364, 365, 366, 367, 370, 373, 378, 379, 380, 383, 388, 394, 400, 401, 403, 404, 405, 406, 410, 411, 415, 416, 418, 419, 420, 421, 435], "move_axi": 424, "movement": 385, "mpatch": 446, "mpg": 65, "mpi": 65, "mpl": 359, "mpl_check_plot": 359, "mpl_kwarg": [432, 442, 446], "mpl_normal": [349, 350], "mpl_plot_check": 359, "mpl_style": 418, "msg": [428, 435, 437, 440, 442, 448, 452, 468], "msh": [438, 456, 460], "msh15": 471, "mst": 468, "mu": [26, 272, 273, 274, 352, 387, 455, 466, 497, 498, 555], "mu_": [274, 280, 554, 555, 556], "mu_background": 553, "mu_bkg": [100, 105, 272, 283, 285, 395, 553, 555], "mu_off": 555, "mu_on": [274, 280, 555], "mu_sig": [273, 283, 285, 554, 555], "mu_x": 555, "much": [184, 359, 365, 370, 373, 375, 378, 379, 403, 410, 435, 440, 446, 453, 466, 469, 479, 512], "mul": [26, 455, 464, 519, 525, 528, 530, 533, 538], "multi": [83, 86, 182, 194, 368, 373, 387, 404, 407, 411, 418, 427, 430, 436, 447, 457, 458, 459, 464, 465, 469, 473, 489, 491, 493, 505, 550, 551, 552], "multidimension": [365, 375, 387, 425, 473, 498, 551], "multinorm": 377, "multipl": [19, 20, 26, 78, 83, 86, 87, 96, 103, 107, 109, 111, 127, 132, 157, 183, 184, 186, 192, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 359, 360, 365, 368, 371, 372, 373, 375, 377, 380, 381, 383, 387, 391, 400, 407, 408, 410, 418, 424, 425, 434, 440, 456, 457, 460, 461, 462, 464, 469, 491, 505, 529, 538, 550, 551, 552, 553, 558], "multipli": [19, 20, 26, 119, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 220, 221, 223, 225, 227, 228, 230, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 268, 281, 284, 288, 453, 455, 464, 519, 555], "multiprocess": [13, 88, 120, 121, 124, 127, 159, 303, 308, 309, 404, 424, 425], "multithread": 13, "multivari": 377, "multivariategaussianprior": 387, "multiwavelength": 213, "muon": [84, 465], "muoneff": [84, 465], "mur": [26, 455], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 83, 84, 86, 96, 97, 100, 101, 105, 106, 110, 119, 124, 127, 132, 133, 140, 151, 159, 163, 165, 170, 177, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 278, 279, 288, 306, 354, 359, 364, 370, 371, 374, 383, 384, 385, 386, 428, 437, 457, 460, 462, 463, 464, 468, 469, 478, 479, 493, 505, 552], "mutablemap": 190, "mutablesequ": [87, 95, 233], "mutipl": 391, "mutltipl": 362, "my": [359, 381, 382, 390, 444, 445, 457, 464], "my_custom_model": 464, "my_flux_map": 383, "my_ob": 85, "my_obs_filt": 85, "my_sourc": 381, "mybind": [389, 418], "myconfig": [11, 553], "mycustomgaussianmodel": [382, 464], "mycustomprior": 466, "mycustomspectralmodel": [243, 464], "n": [19, 20, 51, 78, 83, 86, 117, 119, 181, 182, 183, 184, 186, 188, 189, 192, 194, 195, 196, 201, 203, 263, 270, 359, 362, 373, 376, 390, 392, 416, 448, 451, 455, 456, 458, 461, 463, 466, 468, 469, 470, 471, 476, 498, 505, 506, 508, 511, 512, 552, 554, 556], "n_": [97, 104, 274, 280, 489, 554, 555, 556], "n_0": [221, 526], "n_bad": 469, "n_bin": 457, "n_bkg": [272, 273, 555], "n_dof": [117, 119, 491], "n_event": [183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 372], "n_event_bunch": [98, 103], "n_events_bkg": 372, "n_fit_bin": [440, 452, 457, 463], "n_free_paramet": 270, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 486, 487], "n_job": [16, 88, 120, 121, 124, 127, 159, 308, 424, 433, 437, 438, 440, 446, 460, 477], "n_jobs_default": [88, 120, 121, 124, 127, 159], "n_model": [70, 73], "n_ob": [435, 444, 452], "n_observ": 553, "n_off": [100, 105, 273, 282, 283, 285, 554, 555], "n_off_posit": 434, "n_off_region": [171, 434], "n_on": [272, 273, 274, 280, 282, 283, 285, 395, 553, 554, 555], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 387, 547], "n_scale": 112, "n_sig": [272, 273, 453, 555], "n_sig_matching_signific": [272, 273], "n_sigma": [69, 71, 72, 74, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 270, 272, 273, 428, 446, 456, 457, 477, 479, 491], "n_sigma_sensit": [116, 117, 118, 119], "n_sigma_ul": [69, 71, 72, 74, 116, 117, 118, 119, 120, 121, 124, 125, 127, 446, 450, 456, 457, 477, 479, 491], "n_sourc": [45, 483], "n_spatial_ax": 187, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 86, "n_time_bin": 451, "nachiketa": [416, 417], "naima": [234, 358, 376, 377, 378, 379, 382, 401, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 493, 507, 538, 539], "naimamodel": [401, 404, 406], "naimaspectralmodel": [243, 382, 410, 464, 493, 529], "nakashima": 402, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 117, 118, 119, 120, 121, 124, 125, 128, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 164, 173, 174, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 286, 287, 309, 338, 339, 354, 360, 362, 365, 368, 369, 371, 372, 373, 374, 377, 378, 381, 382, 383, 385, 386, 387, 388, 400, 401, 402, 403, 404, 405, 406, 407, 410, 419, 421, 422, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 481, 491, 493, 497, 500, 502, 503, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 555], "name1": 458, "name2": 458, "name_err": [120, 121, 124, 125], "name_scan": [120, 121, 124, 125], "name_substr": [211, 233, 463], "name_ul": [120, 121, 124, 125], "namedtupl": 359, "nameerror": 359, "namespac": [6, 16, 80, 99, 118, 359, 378, 380, 403, 406, 416, 464, 482, 557], "namibia": 471, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 86, 97, 117, 119, 163, 181, 182, 183, 184, 186, 192, 195, 196, 201, 203, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 359, 382, 387, 432, 433, 434, 437, 438, 440, 441, 446, 448, 450, 456, 457, 459, 460, 461, 462, 463, 464, 477, 478, 479, 529, 538], "nan_to_num": [95, 97, 100, 104, 105, 141, 142, 148, 153, 156, 184, 192, 196, 258], "nansum": [183, 184, 186, 195, 196], "nasa": [58, 60, 61, 63, 140, 188, 379, 388, 532], "nativ": [83, 86, 189, 371, 376, 410, 461], "natur": [83, 86, 359, 365, 382, 385, 464, 527], "nauroi": [285, 552], "naurois2012": 552, "navarro": 481, "navig": [418, 420], "naxi": 461, "naxis1": 461, "naxis2": 461, "naxis3": 461, "naxis4": 461, "nbin": [16, 106, 110, 121, 143, 145, 151, 153, 185, 188, 193, 196, 320, 321, 375, 428, 432, 433, 434, 437, 438, 440, 441, 442, 444, 445, 446, 450, 451, 453, 457, 459, 460, 461, 464, 469, 470, 471, 477, 497, 500, 502, 503, 506], "nbin_per_decad": 188, "nbstripout": 367, "ncol": [137, 138, 183, 184, 186, 192, 195, 196, 352, 356, 429, 432, 436, 438, 440, 442, 453, 457, 458, 461, 462, 502, 519], "ncp": 449, "nd": [183, 184, 186, 192, 195, 196, 256, 257, 380, 461, 506], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 86, 87, 96, 112, 120, 124, 137, 138, 139, 140, 141, 144, 145, 147, 150, 151, 152, 153, 154, 156, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 211, 235, 236, 261, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 288, 299, 300, 301, 310, 315, 317, 348, 352, 353, 359, 457, 461, 479, 505, 506], "nddata": [401, 404], "nddataarrai": [402, 416, 417], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 266], "ndim": [97, 104, 106, 110, 138, 140, 143, 182, 189, 194, 434, 437, 442, 446, 457, 459, 460, 461, 468, 469, 479, 491, 506], "ndimag": [196, 373], "ndmin": 288, "ne": 371, "nearest": [26, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 183, 184, 186, 188, 192, 195, 196, 300, 412, 419, 421, 461, 491, 493, 505], "nearli": [359, 410, 429], "nebula": [50, 264, 270, 404, 432, 433, 434, 438, 441, 442, 443, 450, 458, 462, 464, 466, 469, 470, 471, 477, 478, 479, 484, 506, 552], "necess": [383, 466], "necessari": [16, 80, 99, 118, 362, 369, 374, 385, 412, 429, 432, 434, 435, 438, 444, 445, 448, 451, 452, 460, 461, 463, 464, 478, 489, 490, 493], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 374, 437], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 83, 85, 86, 89, 96, 99, 100, 116, 118, 119, 141, 142, 153, 155, 156, 191, 263, 264, 288, 358, 359, 360, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 389, 390, 395, 399, 400, 401, 418, 420, 425, 429, 433, 435, 436, 437, 438, 442, 444, 445, 449, 451, 452, 458, 459, 461, 462, 463, 464, 465, 468, 470, 477, 479, 489, 502, 504, 505, 553, 557], "need_upd": 410, "neg": [19, 20, 26, 83, 86, 117, 119, 120, 121, 124, 125, 127, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 260, 261, 272, 273, 360, 407, 425, 466, 491, 555, 556], "neglect": [122, 169, 428, 460, 491, 556], "neighbor": [144, 152, 154, 412, 419], "neighbour": [300, 514], "neither": [91, 169, 376, 384], "neldermead": 200, "nep": [364, 384], "neraest": 184, "nest": [15, 182, 183, 184, 234, 270, 288, 327, 424, 469, 504, 555], "nested_model": 234, "net": [26, 83, 86, 432], "neutrino": 52, "neutron": 36, "never": [356, 358, 359, 362, 365, 369, 373, 381, 470], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 82, 83, 84, 86, 87, 96, 97, 99, 100, 104, 105, 117, 118, 119, 120, 124, 135, 137, 138, 139, 140, 143, 145, 147, 150, 155, 166, 167, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 211, 233, 248, 258, 288, 312, 337, 344, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 411, 414, 440, 449, 456, 457, 461, 463, 464, 490, 491, 493, 538, 552], "new_attribut": 359, "new_axi": 135, "new_dataset_nam": [211, 233], "new_datasets_nam": [19, 20, 26, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262], "new_flux_map": 383, "new_funct": 359, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 538, "new_nam": [83, 86, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196], "new_ob": [84, 493], "new_observ": 87, "newer": [376, 389, 400, 419], "newli": [404, 405, 406], "next": [83, 86, 97, 359, 360, 364, 375, 379, 380, 384, 387, 388, 416, 417, 428, 440, 443, 444, 446, 448, 456, 457, 460, 461, 464, 465, 466, 469], "nfcn": 458, "nfev": [96, 200, 429, 430, 432, 433, 434, 440, 441, 442, 453, 458, 469, 477, 478], "nfw": [25, 27, 481], "nfwprofil": 455, "ni": 359, "nice": [359, 364, 370, 376, 378, 386, 402, 410, 436, 440, 456, 553], "nicer": [359, 395, 458, 479], "nieto": [407, 410, 412, 413, 421, 423, 424, 425], "nieva": 421, "night": [374, 451], "nightli": [391, 450], "nightwise_lc": 450, "nigro": [407, 410, 412, 418, 419, 421, 424], "niter": [117, 119, 127, 436], "nmcid": 413, "nn": 470, "noah": [387, 425], "node": [19, 20, 26, 153, 156, 185, 188, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 235, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 401, 458, 459, 461, 468, 469, 513, 530], "node_typ": [185, 188, 193, 444, 445, 459, 469], "noeth": [407, 408], "nois": [278, 377, 552], "noisi": 468, "non": [16, 80, 83, 86, 95, 97, 99, 100, 104, 105, 109, 111, 117, 118, 119, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 165, 169, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 258, 288, 349, 350, 352, 354, 365, 370, 373, 377, 379, 380, 386, 400, 404, 405, 406, 410, 418, 421, 422, 424, 425, 429, 469, 473, 489, 493, 504, 505, 529, 552], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 272, 273, 285, 286, 288, 291, 296, 300, 308, 309, 310, 312, 315, 316, 317, 318, 326, 328, 334, 342, 346, 347, 348, 352, 353, 354, 355, 356, 359, 371, 373, 376, 383, 386, 387, 412, 423, 424, 429, 430, 432, 433, 435, 436, 440, 441, 442, 444, 445, 446, 448, 451, 452, 453, 455, 456, 457, 460, 461, 463, 464, 466, 469, 477, 481, 489, 505, 510, 511, 512, 553], "nonetyp": [80, 99, 118], "nonposit": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "nonposx": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 410], "nonstopmod": 360, "nonzero": 39, "nooverlaperror": 423, "noqa": [19, 20, 120, 140, 176, 187, 188, 194, 213, 265, 356], "nor": [91, 169, 369, 380, 384, 388], "norm": [19, 20, 26, 116, 117, 119, 120, 121, 124, 127, 133, 134, 160, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 262, 352, 370, 381, 383, 387, 404, 405, 407, 410, 425, 427, 432, 437, 438, 440, 441, 443, 444, 445, 446, 448, 451, 452, 453, 455, 456, 457, 458, 469, 477, 478, 479, 481, 491, 500, 507, 512, 518, 519, 526, 538, 539, 547, 555], "norm_0": [513, 530], "norm_1": [513, 530], "norm_2": [513, 530], "norm_3": [513, 530], "norm_4": 530, "norm_5": 530, "norm_err": [116, 117, 119, 121, 127, 133, 383, 446, 457, 491], "norm_errn": [117, 119, 456, 479, 491], "norm_errp": [117, 119, 456, 479, 491], "norm_max": [120, 121, 124], "norm_min": [120, 121, 124], "norm_n_valu": [120, 121, 124], "norm_only_chang": 422, "norm_paramet": [201, 202, 203, 204], "norm_prior": 387, "norm_scan": [117, 383, 432, 433, 491], "norm_sensit": [117, 119], "norm_ul": [117, 119, 383, 446, 456, 457, 479, 491], "norm_valu": [120, 121, 124], "norma": [33, 38], "normal": [42, 96, 97, 100, 104, 105, 120, 121, 122, 124, 131, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 160, 183, 184, 186, 192, 193, 195, 196, 219, 235, 236, 239, 258, 260, 263, 288, 349, 350, 359, 360, 364, 365, 369, 370, 373, 377, 383, 399, 403, 412, 438, 444, 450, 451, 453, 460, 461, 462, 463, 464, 469, 478, 479, 505, 510, 511, 512, 515, 516, 517, 538, 552, 554, 555], "normalis": [65, 76, 124, 137, 138, 139, 140, 143, 145, 147, 150, 151, 155, 160, 180, 183, 184, 186, 192, 195, 196, 235, 236, 248, 357, 433, 437, 438, 452, 462, 463, 464, 469, 477], "normed_templ": 464, "normspectralmodel": [211, 233, 382, 407, 423, 425, 464, 500], "north": [212, 220, 223, 510], "notat": [407, 495, 497, 503, 556], "note": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 74, 78, 79, 80, 82, 83, 86, 89, 96, 97, 98, 99, 103, 112, 118, 119, 124, 127, 140, 145, 153, 155, 165, 176, 194, 198, 200, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 278, 279, 288, 309, 334, 350, 356, 358, 361, 362, 364, 367, 372, 373, 376, 379, 383, 384, 385, 387, 388, 389, 392, 398, 400, 420, 422, 424, 428, 429, 433, 434, 436, 437, 440, 443, 445, 449, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 489, 491, 493, 506, 515, 516, 527, 555, 556, 557], "notebook": [83, 86, 324, 362, 363, 368, 369, 373, 374, 375, 376, 377, 379, 389, 391, 392, 393, 396, 399, 400, 401, 402, 404, 405, 406, 408, 410, 412, 416, 417, 418, 419, 420, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 492, 493, 494, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 553], "noth": [312, 376, 466], "notic": [365, 458, 473], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [366, 371, 376, 377, 379, 383, 397, 421], "novemb": [368, 397, 407, 408, 409, 410], "now": [16, 78, 80, 84, 94, 99, 117, 118, 119, 193, 234, 359, 362, 364, 365, 366, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 432, 433, 434, 435, 437, 438, 440, 441, 443, 444, 445, 446, 448, 450, 451, 452, 453, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 490, 491, 502, 540, 544, 545, 546, 553, 555, 556, 557], "np": [79, 83, 86, 106, 110, 112, 119, 142, 183, 184, 186, 192, 195, 196, 263, 359, 360, 370, 371, 374, 382, 383, 387, 421, 428, 432, 435, 436, 438, 440, 442, 444, 446, 448, 449, 451, 452, 453, 455, 456, 458, 459, 460, 461, 462, 464, 465, 466, 470, 485, 486, 487, 491, 493, 505, 506, 510, 511, 513, 538, 546], "npanel": 346, "npix": [182, 191, 194, 195, 196, 432, 442, 459, 469, 502, 506, 509, 513], "npix_max": 182, "npoint": 458, "npred": [97, 100, 104, 105, 116, 117, 119, 120, 121, 124, 125, 127, 258, 275, 370, 371, 372, 381, 383, 398, 400, 407, 410, 416, 418, 444, 446, 456, 457, 466, 469, 489, 491, 555], "npred_background": [97, 100, 104, 105, 117, 119, 407, 434, 435, 446, 457, 491, 555], "npred_background_min": 136, "npred_excess": [116, 117, 119, 121, 127, 134, 438, 446, 453, 491], "npred_excess_err": [117, 119], "npred_excess_errn": [117, 119], "npred_excess_errp": [117, 119], "npred_excess_ref": [117, 119], "npred_excess_ul": [117, 119], "npred_min": 136, "npred_off": [100, 105, 555], "npred_sig": [97, 100, 104, 105, 371], "npred_sign": [97, 100, 104, 105, 355, 410, 424, 457, 555], "npred_signal_min": 136, "npred_sourc": 457, "nrow": [429, 432, 458, 519], "nside": [182, 183, 184, 421, 469, 504], "nside2resol": 184, "nside_til": [182, 184], "nsou": 436, "nstep": 374, "nu": [19, 26], "nu_e": [26, 455], "nu_mu": [26, 455], "nu_tau": [26, 455], "nuisanc": [432, 458, 552, 556], "null": [117, 119, 120, 121, 124, 125, 270, 272, 273, 433, 437, 438, 440, 443, 464, 477, 491, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 555], "null_valu": [125, 270, 446], "nullabl": [83, 86], "num": 79, "numba": 376, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 65, 70, 73, 78, 79, 81, 82, 83, 86, 87, 88, 89, 95, 97, 98, 100, 103, 104, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 159, 160, 163, 166, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 262, 266, 270, 272, 273, 288, 306, 308, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321, 346, 352, 363, 364, 365, 368, 370, 371, 372, 373, 374, 378, 380, 383, 385, 386, 388, 395, 400, 410, 412, 413, 414, 419, 420, 421, 424, 425, 428, 429, 432, 433, 434, 435, 437, 438, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 455, 456, 457, 460, 461, 462, 464, 465, 468, 469, 470, 471, 477, 478, 479, 483, 489, 491, 493, 500, 502, 505, 506, 552, 553, 554, 555, 556], "number_of_column": [83, 86], "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 83, 86, 119, 188, 201, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 262, 288, 358, 359, 372, 377, 392, 410, 428, 435, 437, 440, 442, 448, 452, 461, 468], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 87, 96, 106, 110, 112, 119, 120, 124, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 198, 199, 201, 202, 204, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 259, 260, 272, 273, 288, 312, 317, 353, 358, 359, 360, 362, 366, 370, 372, 376, 377, 378, 385, 387, 395, 396, 403, 404, 407, 415, 416, 417, 419, 421, 422, 423, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 477, 478, 479, 485, 486, 487, 491, 493, 505, 506, 510, 511, 513, 538, 546], "numpoint": [200, 458], "numpy121": 362, "nupeak_ob": 479, "nutshel": 557, "n\u00f6the": [410, 412, 413], "o": [65, 78, 83, 86, 96, 190, 359, 368, 373, 376, 380, 383, 390, 391, 393, 402, 410, 413, 416, 417, 418, 424, 428, 429, 432, 436, 442, 449, 450, 451, 452, 461, 465, 466, 468, 493, 552, 553], "o2": 493, "ob": [40, 78, 79, 84, 85, 86, 87, 91, 153, 163, 286, 287, 371, 372, 375, 376, 381, 395, 413, 414, 423, 428, 429, 432, 435, 436, 442, 444, 448, 451, 452, 453, 460, 465, 468, 469, 470, 471, 475, 478, 490, 493, 498, 500, 502, 503], "obei": 505, "obj": [16, 80, 99, 118, 434], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 95, 96, 97, 98, 99, 100, 104, 105, 117, 118, 119, 122, 123, 124, 128, 129, 130, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 167, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 272, 273, 288, 292, 296, 297, 300, 308, 310, 312, 318, 321, 333, 334, 335, 336, 341, 346, 352, 354, 355, 356, 365, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 383, 385, 386, 391, 395, 401, 402, 404, 405, 406, 407, 410, 412, 417, 418, 419, 421, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 441, 443, 446, 448, 449, 450, 451, 452, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 471, 477, 478, 479, 483, 488, 489, 490, 491, 499, 502, 504, 505, 506, 550, 552, 553, 557], "obs_": 432, "obs_clust": [87, 465], "obs_col": 442, "obs_con": [16, 433, 437, 438, 440, 477], "obs_copi": 84, "obs_fil": [16, 433, 437, 438, 440, 477], "obs_filenam": 470, "obs_filt": [84, 85], "obs_id": [16, 78, 83, 84, 85, 86, 91, 136, 286, 287, 369, 371, 381, 386, 395, 429, 432, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 450, 451, 452, 458, 460, 465, 468, 470, 471, 475, 477, 478, 502], "obs_id_uniqu": 83, "obs_index": 78, "obs_info": [84, 99, 386], "obs_list": [418, 420], "obs_list_vela": 453, "obs_mod": 90, "obs_muoneff": 465, "obs_po": [41, 291], "obs_tabl": [78, 86, 91, 286, 287, 412, 442, 444, 451, 460, 465, 468, 470, 471, 475, 478, 502], "obs_table_filenam": 78, "obs_tim": [16, 433, 437, 438, 440, 477], "obs_time_src": 460, "obs_zenith": 465, "obscor": 425, "observ": [6, 15, 16, 41, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 96, 97, 98, 99, 100, 103, 104, 105, 107, 153, 158, 159, 160, 163, 164, 165, 166, 168, 169, 170, 173, 174, 175, 176, 178, 179, 180, 210, 213, 218, 222, 224, 225, 226, 241, 247, 259, 262, 274, 280, 285, 287, 296, 317, 363, 365, 371, 372, 373, 374, 375, 379, 381, 383, 386, 391, 400, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 427, 428, 429, 434, 435, 437, 438, 440, 441, 448, 449, 452, 453, 458, 466, 467, 468, 470, 471, 473, 475, 481, 489, 490, 493, 496, 498, 500, 502, 503, 529, 552, 553, 554, 555], "observation_clust": [427, 465, 467], "observation_dead_time_fract": [79, 84], "observation_list": 87, "observation_live_time_dur": [79, 84], "observation_time_dur": [79, 84], "observation_time_start": 79, "observation_time_stop": 79, "observationcheck": 419, "observationcta": 369, "observationeventsampl": 425, "observationfilt": [84, 369, 374, 399, 420], "observationlist": [369, 420], "observationmetadata": 386, "observations_list": 87, "observationsconfig": 16, "observationseventsampl": 425, "observationssummari": 404, "observationstat": [399, 404], "observationt": [78, 372, 373, 421, 465, 470, 478], "observationtablecheck": 419, "observationtablesummari": 416, "observatori": [57, 59, 62, 78, 79, 81, 84, 89, 372, 386, 388, 391, 411, 468, 470, 471, 488, 493], "observatory_earth_loc": [79, 84], "observatory_loc": [386, 412, 428, 435, 444, 445, 448, 452], "obsinfometadata": 99, "obstim": [81, 89, 176, 557], "obtain": [81, 97, 100, 103, 128, 277, 369, 374, 376, 377, 383, 420, 432, 433, 434, 438, 444, 445, 449, 451, 458, 461, 462, 466, 477, 479, 489, 493, 497, 498, 552, 554, 555], "obviou": [371, 378, 379, 380, 386], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 481], "occur": [183, 184, 186, 195, 196, 318, 359, 379, 380, 384, 469], "occurr": [87, 95, 187, 202, 204, 211, 233], "oct": [367, 369, 370, 374, 376, 379, 385], "octob": 368, "odd": [194, 196], "odd_npix": [194, 196], "odot": [28, 35, 39, 40, 52], "off": [97, 100, 102, 104, 105, 116, 158, 164, 165, 168, 171, 180, 273, 285, 356, 357, 362, 365, 371, 373, 374, 375, 404, 410, 412, 414, 424, 428, 429, 433, 434, 438, 442, 450, 451, 453, 457, 458, 460, 466, 489, 502, 503, 552, 554, 555, 556], "off_2": [100, 105], "off_ev": 453, "off_patch": 453, "off_phas": [164, 453], "off_phase_rang": 453, "offdatabackgroundmak": 415, "offer": [117, 362, 370, 385, 386, 391, 392, 419, 434, 458, 460, 464, 493], "offici": [385, 494, 553], "offlin": [83, 86], "offset": [79, 91, 107, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 159, 163, 169, 170, 175, 178, 183, 184, 186, 188, 192, 195, 196, 359, 365, 373, 395, 404, 414, 416, 418, 423, 424, 425, 428, 434, 435, 437, 440, 441, 442, 448, 453, 459, 460, 465, 468, 471, 478, 490, 498, 500, 503], "offset2": 79, "offset_axi": [143, 145, 150, 155], "offset_band": 79, "offset_from_median": 79, "offset_index": 150, "offset_max": [16, 79, 159, 169, 175, 178, 433, 437, 438, 440, 442, 448, 453, 460, 477, 478, 500, 503], "offset_min": 79, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 128, 264, 349, 350, 359, 364, 373, 374, 375, 377, 417, 428, 429, 433, 437, 438, 441, 442, 448, 457, 458, 460, 462, 477, 478, 489, 552], "ogip": [90, 101, 102, 105, 140, 185, 187, 188, 191, 192, 193, 371, 374, 417, 432, 441, 489, 497, 506], "ogip_column": 192, "ogipdatasetread": 105, "ogipdatasetwrit": [105, 423, 425], "ok": [359, 373, 458], "old": [187, 344, 359, 364, 367, 371, 375, 376, 401, 402, 417, 418, 419, 449], "old_attribut": 359, "older": [366, 376, 392, 417, 456], "oldest": 379, "olga": [415, 416], "olivera": [407, 410, 412, 413, 421, 423, 424, 425], "omega": [19, 20, 23, 247, 263, 510, 546], "omit": [127, 360, 440, 468, 553], "omp": 379, "on_circl": 502, "on_ellipse_annulu": 502, "on_ev": 453, "on_patch": 453, "on_phas": [164, 453], "on_phase_rang": 453, "on_posit": 180, "on_radii": 428, "on_radiu": [442, 453], "on_rectangl": 502, "on_region": [16, 97, 100, 166, 428, 429, 432, 433, 434, 435, 437, 438, 440, 442, 444, 445, 450, 451, 453, 457, 477, 502], "on_region_radiu": [428, 432, 435, 444, 445, 451], "onc": [83, 86, 97, 194, 359, 362, 364, 369, 370, 373, 374, 375, 379, 380, 381, 383, 384, 388, 389, 390, 434, 451, 453, 460, 463, 470, 473, 490, 493, 553], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 68, 80, 83, 85, 86, 87, 88, 90, 94, 97, 99, 100, 103, 104, 105, 107, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 165, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 266, 270, 272, 273, 296, 301, 317, 330, 346, 352, 353, 359, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 389, 390, 391, 418, 421, 422, 424, 428, 429, 432, 433, 434, 437, 440, 444, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 477, 478, 479, 488, 489, 490, 491, 493, 498, 500, 502, 505, 506, 512, 550, 551, 553, 554, 555, 556, 557], "ones": [83, 86, 112, 116, 120, 124, 127, 140, 187, 363, 367, 371, 373, 376, 379, 387, 392, 395, 449, 452, 459, 461, 481, 500, 552, 553], "ones_lik": 453, "ongo": [362, 365, 366, 389], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 70, 71, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 95, 96, 97, 98, 99, 100, 103, 104, 105, 116, 118, 119, 120, 124, 127, 134, 141, 142, 146, 148, 153, 156, 159, 165, 170, 181, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 201, 202, 204, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 258, 259, 260, 272, 273, 288, 308, 334, 356, 359, 360, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 392, 400, 402, 406, 410, 412, 413, 418, 422, 424, 425, 429, 430, 432, 433, 434, 437, 438, 440, 441, 443, 444, 445, 446, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 478, 481, 489, 491, 493, 497, 500, 503, 506, 548, 552, 553, 554, 555], "onlin": [83, 86, 360, 364, 367, 379, 395], "onlinelibrari": 134, "onoff": [413, 489], "onserv": 88, "ontim": [176, 369, 444, 457], "onto": [183, 184, 186, 192, 194, 195, 196, 346, 365, 478, 489, 493, 505, 551], "oo": 385, "op": 375, "opac": 213, "open": [64, 83, 86, 360, 362, 364, 370, 373, 376, 378, 379, 383, 384, 385, 388, 390, 391, 393, 395, 396, 417, 433, 441, 461, 468, 470, 471, 477, 488, 552, 553], "openastronomi": 418, "oper": [83, 86, 182, 194, 206, 359, 365, 370, 373, 405, 407, 410, 419, 420, 424, 457, 463, 464, 505, 506, 519, 521, 525, 528, 530, 533, 538], "opinion": [364, 553], "oppos": [449, 529, 553], "opposit": [183, 184], "opt": [84, 85, 456, 519, 529], "opt_method": 458, "optic": [213, 373, 519], "optim": [19, 20, 26, 96, 125, 127, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 352, 358, 359, 368, 371, 372, 381, 383, 429, 430, 432, 433, 434, 435, 436, 440, 441, 442, 449, 453, 458, 466, 469, 477, 478], "optimis": [19, 20, 200, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 373, 375, 377, 419, 491, 550], "optimize_opt": [200, 440, 448, 458, 478], "optimize_result": [200, 424], "optimizeresult": [96, 200, 429, 430, 432, 433, 434, 440, 441, 442, 453, 458, 469, 477, 478], "optin": 385, "optinon": [104, 105], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 277, 278, 279, 285, 286, 288, 299, 309, 312, 315, 316, 317, 318, 320, 321, 328, 330, 341, 342, 346, 347, 348, 353, 354, 355, 356, 359, 362, 364, 365, 367, 368, 370, 371, 373, 375, 377, 379, 382, 386, 389, 390, 391, 392, 393, 399, 400, 401, 404, 406, 407, 410, 412, 416, 418, 419, 420, 421, 423, 424, 425, 440, 448, 450, 452, 456, 457, 460, 461, 462, 464, 465, 468, 469, 477, 478, 489, 491, 493, 505, 506, 548, 553], "option_context": [83, 86], "optionali": 513, "optout": 385, "optpars": 364, "oral": 385, "orang": [360, 432, 440, 446, 450, 453, 455, 466, 502], "orchestr": [365, 369, 371, 375, 433, 477, 478], "orcid": 385, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 83, 86, 89, 95, 96, 97, 100, 119, 137, 138, 141, 142, 148, 153, 156, 159, 163, 170, 173, 174, 179, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 258, 270, 288, 356, 360, 365, 370, 371, 373, 374, 375, 376, 383, 384, 385, 387, 400, 401, 402, 403, 404, 405, 406, 407, 410, 432, 433, 434, 436, 440, 441, 444, 453, 456, 458, 459, 460, 461, 464, 470, 477, 478, 479, 504, 505, 506, 553, 556], "ordereddict": [365, 376, 403], "ordinari": 479, "org": [11, 34, 62, 63, 79, 83, 84, 86, 169, 200, 239, 240, 253, 254, 278, 288, 362, 367, 376, 379, 384, 385, 388, 390, 391, 393, 397, 416, 418, 428, 435, 437, 440, 441, 442, 448, 452, 455, 456, 458, 460, 468, 536, 537, 553], "organ": [363, 379, 384, 385, 410, 470, 471, 490, 505], "organis": [366, 375, 378, 385, 418], "orient": [138, 146, 147, 359, 370], "origin": [41, 83, 86, 97, 99, 104, 118, 184, 196, 256, 258, 260, 369, 373, 385, 386, 416, 433, 449, 451, 461, 464, 469, 477, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 556, 557], "orthogon": 321, "oscar": [418, 419], "osx": 406, "ot": 388, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 65, 67, 79, 80, 82, 83, 86, 97, 99, 100, 104, 105, 117, 118, 120, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 165, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 202, 204, 258, 271, 288, 301, 329, 348, 353, 358, 362, 364, 366, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 390, 418, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 489, 490, 491, 493, 498, 500, 502, 506, 521, 550, 551, 553, 557], "other_id": 429, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 83, 86, 97, 99, 100, 104, 105, 118, 151, 190, 194, 196, 198, 201, 202, 203, 204, 211, 233, 288, 352, 372, 382, 385, 463, 464, 469, 520], "oup": 128, "our": [359, 362, 368, 373, 375, 376, 378, 381, 382, 383, 385, 400, 401, 417, 428, 429, 432, 433, 434, 437, 438, 440, 441, 442, 445, 451, 452, 453, 461, 462, 466, 470, 477, 478, 553], "ourself": 479, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 95, 96, 119, 183, 184, 186, 192, 195, 196, 233, 245, 246, 358, 359, 360, 362, 364, 367, 369, 371, 373, 375, 377, 378, 379, 384, 388, 395, 396, 398, 404, 418, 430, 434, 437, 438, 461, 462, 468, 469, 477, 479, 481, 482, 502, 515, 516, 550, 553, 557], "out_fold": 375, "outcom": [364, 373], "outdat": [376, 379], "outdir": [16, 78, 88, 433, 437, 438, 440, 477], "outer": [43, 44, 52, 53, 121, 158, 245, 516], "outer_height": [502, 506], "outer_width": [502, 506], "outfil": 359, "outflow": 193, "outlin": [97, 100, 104, 105, 207, 208, 212, 220, 223, 237, 245, 246, 260, 362, 364, 367, 368, 369, 370, 373, 379, 382], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 79, 80, 82, 83, 84, 86, 88, 99, 118, 132, 133, 140, 145, 183, 184, 186, 192, 195, 196, 211, 225, 233, 317, 360, 367, 369, 372, 375, 376, 380, 383, 386, 399, 414, 420, 423, 424, 440, 444, 445, 448, 452, 460, 461, 477, 478, 491, 493, 553, 554], "output_map": [183, 184, 186, 192, 195, 196], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [83, 86, 97, 104, 109, 111, 140, 160, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 201, 203, 213, 261, 347, 359, 373, 374, 375, 410, 438, 458, 460, 461, 462, 493, 500, 512, 538, 552], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 79, 83, 84, 86, 87, 90, 97, 100, 104, 105, 120, 127, 128, 140, 141, 151, 153, 156, 163, 170, 173, 174, 176, 177, 183, 184, 186, 187, 188, 192, 194, 195, 196, 211, 233, 263, 272, 273, 277, 299, 300, 313, 350, 359, 360, 364, 367, 368, 369, 372, 373, 374, 379, 382, 386, 390, 392, 410, 429, 432, 440, 443, 444, 452, 456, 457, 460, 461, 464, 466, 478, 479, 491, 497, 554, 555], "overal": [367, 373, 432], "overcom": 462, "overestim": [491, 555], "overflow": [193, 434, 452, 541], "overkil": 452, "overlai": 433, "overlaid": [97, 100, 104, 105, 433], "overlap": [82, 86, 109, 111, 124, 171, 188, 193, 356, 374, 432], "overlap_ok": 82, "overlin": [97, 104, 489], "overload": 410, "overplot": [456, 488], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 327, 370, 432, 434, 442, 446], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 118, 191, 356], "oversampl": [98, 103, 151, 153, 156, 163, 170, 176, 182, 183, 184, 186, 191, 192, 195, 196, 208, 212, 220, 223, 224, 225, 235, 245, 246, 248, 250, 256, 260, 262, 266, 401, 460], "oversample_energy_factor": [98, 103, 445], "oversampling_factor": [184, 194, 207, 208, 212, 220, 223, 224, 225, 235, 237, 245, 246, 248, 250, 256, 260, 262], "overview": [6, 362, 389, 404, 405, 407, 410, 427, 453, 461, 464, 473, 479, 480, 493, 494, 507, 554], "overwrit": [11, 15, 16, 19, 20, 26, 78, 79, 84, 88, 95, 96, 97, 100, 102, 104, 105, 117, 119, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 188, 190, 191, 192, 193, 194, 195, 196, 201, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 256, 257, 258, 259, 260, 308, 383, 419, 421, 432, 433, 440, 441, 444, 445, 446, 459, 461, 462, 463, 464, 468, 469, 475, 477, 478, 489, 493, 506, 517, 553], "overwrite_templ": [211, 233], "overwritten": [153, 156, 300], "owen": [398, 411], "own": [83, 86, 94, 117, 119, 190, 192, 362, 365, 375, 381, 385, 410, 428, 444, 464, 469, 493, 505, 506], "p": [38, 51, 54, 83, 86, 104, 105, 123, 276, 285, 359, 410, 433, 443, 455, 458, 477, 493, 498, 499, 555], "p0_birth": 43, "p90": 48, "p_": [495, 497, 498, 499], "p_0": [51, 183, 186, 192, 195, 196, 485], "p_dot": [51, 54], "p_i": [183, 186, 192, 195, 196], "p_lat": [183, 186, 192, 195, 196], "p_lon": [183, 186, 192, 195, 196], "p_mean": 42, "p_n": [183, 186, 192, 195, 196], "p_stdv": 42, "p_valu": [272, 273, 458, 553, 555], "pace": [367, 368], "packag": [6, 11, 132, 288, 324, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 373, 376, 377, 379, 384, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 400, 403, 404, 406, 407, 410, 413, 414, 415, 416, 417, 418, 419, 421, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 489, 492, 493, 494, 501, 506, 517, 525, 527, 528, 541, 553, 557], "pacman": 415, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [83, 86, 97, 100, 104, 105, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 347, 407, 410], "pad_width": [97, 104, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196], "pad_with": [183, 184, 186, 192, 195, 196], "page": [6, 83, 86, 200, 274, 280, 285, 360, 362, 364, 371, 373, 376, 379, 385, 388, 389, 391, 392, 396, 404, 405, 410, 413, 414, 417, 418, 419, 420, 458, 461, 471, 473, 491, 493, 504, 506, 554, 557], "pain": [359, 362, 366], "pair": [16, 80, 97, 99, 100, 104, 105, 117, 118, 119, 128, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 375], "panda": [83, 86, 358, 376, 419, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "panel": [84, 96, 97, 100, 104, 105, 346, 413, 444, 458], "panel_fov": 346, "panni": 410, "papadopoulo": [410, 412], "paper": [57, 59, 62, 70, 71, 120, 169, 379, 385, 419, 449, 451, 456, 460, 470, 481], "papermil": 375, "par": [370, 382, 387, 458, 466, 468], "par_000_amplitud": 458, "par_001_alpha": 458, "par_002_beta": 458, "par_00x_": 370, "par_1": [200, 458], "par_2": [200, 458], "par_alpha": 458, "par_beta": 458, "par_box": 86, "par_nam": [211, 233], "par_to_v": 468, "par_typ": [211, 233], "parabol": [271, 301, 458], "parabola": [227, 228, 427, 441, 458, 507, 539], "paragraph": 364, "parallel": [6, 88, 120, 121, 124, 127, 159, 303, 304, 305, 306, 307, 308, 309, 362, 376, 389, 412, 424, 425, 457], "parallel_backend": [88, 120, 121, 124, 127, 159, 308, 446], "parallelbackendenum": 303, "parallelmixin": [88, 120, 127, 159], "param": [16, 80, 99, 118, 213, 261, 352, 375, 405], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 290, 292, 294, 295, 297, 299, 300, 301, 302, 308, 309, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 359, 360, 368, 371, 372, 374, 375, 377, 378, 381, 383, 385, 396, 399, 400, 401, 402, 403, 404, 406, 407, 410, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 432, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 459, 460, 465, 466, 468, 469, 478, 479, 481, 489, 491, 492, 493, 500, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556], "parameter": 464, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_name_scan": 200, "parameterestim": [113, 406, 425], "parameteris": [495, 497], "parameters_list": [202, 204], "parameters_nam": [211, 233], "parameters_stat_sum": 387, "parameters_unique_nam": [211, 233, 458], "parametr": [16, 27, 80, 96, 99, 118, 143, 144, 149, 152, 154, 227, 228, 245, 371, 375, 382, 400, 407, 410, 434, 436, 464, 468, 515, 516, 527], "parametricpsf": [144, 152, 410, 412], "parametris": [152, 382, 404, 497, 499, 510, 511, 512, 513, 520, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548], "parent": [16, 80, 99, 112, 116, 118, 120, 124, 127, 194, 359, 369, 386, 451, 491, 529], "parenthes": [370, 376, 422, 424], "parfiv": [376, 403], "parnam": 466, "pars": [16, 80, 81, 99, 118, 182, 191, 360, 373, 428, 435, 437, 440, 442, 448, 452, 462, 468, 553], "parse_arg": 553, "parse_fil": [16, 80, 99, 118], "parse_obj": [16, 80, 99, 118], "parse_raw": [16, 80, 99, 118], "parseabl": 288, "parser": 553, "part": [96, 359, 362, 365, 368, 370, 372, 373, 374, 375, 377, 378, 379, 384, 385, 400, 404, 405, 406, 414, 419, 424, 425, 428, 429, 432, 440, 448, 456, 457, 461, 462, 478, 479, 493, 498, 502], "parti": 364, "partial": [86, 97, 100, 141, 142, 148, 153, 156, 159, 182, 194, 196, 258, 373, 377, 405, 419, 504], "partial_overlap": 86, "particip": [364, 368, 379], "particl": [19, 26, 234, 263, 406, 481, 529], "particle_distribut": [234, 529], "particular": [83, 86, 359, 365, 372, 374, 381, 383, 384, 386, 407, 410, 421, 422, 429, 432, 433, 434, 435, 437, 441, 444, 449, 451, 452, 458, 460, 463, 468, 470, 471, 477, 478, 490, 493, 500, 502, 506, 555], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [362, 368, 369, 373, 379, 380], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 66, 79, 80, 81, 82, 83, 84, 85, 86, 88, 96, 97, 99, 100, 103, 104, 105, 118, 119, 122, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 168, 176, 181, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 271, 288, 300, 308, 309, 310, 315, 316, 317, 318, 346, 347, 352, 354, 355, 359, 362, 369, 371, 372, 373, 374, 386, 406, 410, 412, 424, 425, 429, 430, 432, 433, 440, 441, 445, 449, 450, 451, 456, 457, 458, 459, 460, 461, 462, 464, 465, 468, 477, 478, 479, 493, 504, 505, 506, 510, 511, 553, 557], "pass4": 470, "passkwarg": 434, "past": [359, 364, 367, 375, 376, 379, 380, 382, 385, 387, 395, 416, 418, 419, 461, 553], "patch": [356, 359, 366, 385, 413, 422, 432, 434, 442, 446, 453], "path": [11, 15, 16, 64, 78, 79, 80, 82, 83, 84, 86, 88, 95, 99, 101, 102, 105, 118, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 183, 184, 186, 191, 192, 195, 196, 211, 225, 233, 259, 296, 324, 325, 326, 328, 359, 362, 394, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 491, 547, 548, 553], "path_effect": [191, 211, 233], "path_to_notebook": 359, "path_to_script": 359, "patheffect": [191, 211, 233], "pathlib": [78, 79, 82, 83, 86, 140, 192, 211, 233, 325, 432, 433, 440, 441, 444, 445, 468, 477, 478], "pathpatch": 446, "pattern": [359, 365, 373], "paula": 425, "paulakx": 425, "paz": [411, 414, 415], "pbar": 493, "pc": [46, 47, 50, 52, 486, 487], "pcolormesh": [79, 119, 137, 138, 140, 143, 144, 145, 150, 152, 154, 155, 417, 423, 458, 459], "pd": [83, 86], "pdf": [140, 144, 169, 239, 240, 253, 254, 310, 352, 360, 441, 444, 455, 460, 483, 485, 486, 487, 489, 490, 495, 496, 497, 499, 502, 506, 536, 537, 555, 558], "pdf_in_safe_rang": 140, "pdf_matrix": 140, "pdf_threshold": [140, 141, 145], "pdflatex": 360, "peak": [66, 122, 132, 133, 140, 169, 217, 222, 224, 228, 412, 418, 425, 436, 449, 456, 460, 516], "peak_bright": 66, "peak_brightness_error": 66, "peak_latitud": 66, "peak_latitude_error": 66, "pedant": 359, "peek": [79, 84, 97, 100, 104, 105, 122, 123, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 359, 371, 395, 407, 413, 417, 421, 429, 434, 440, 444, 445, 453, 457, 459, 468, 470, 471, 490, 493, 495, 496, 497, 499], "pend": 288, "peopl": [364, 366, 379, 385, 388, 389, 455, 481, 493, 553], "pep": 364, "pep8": 362, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 94, 96, 97, 100, 104, 105, 107, 116, 117, 119, 120, 121, 124, 125, 132, 134, 135, 136, 153, 156, 188, 218, 225, 226, 266, 274, 280, 285, 359, 365, 371, 372, 375, 383, 385, 386, 398, 406, 410, 412, 425, 428, 435, 444, 448, 450, 452, 455, 460, 461, 465, 466, 470, 471, 489, 493, 496, 552, 554], "per_decad": [188, 432, 434, 444, 445, 453, 457, 469, 497, 503], "percent": 126, "percentag": [140, 169, 460], "percentil": 79, "perfect": 140, "perfectli": [511, 553], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 83, 86, 89, 95, 99, 103, 118, 160, 168, 182, 194, 196, 208, 211, 212, 220, 223, 233, 235, 245, 246, 250, 256, 260, 272, 273, 326, 352, 359, 360, 365, 368, 369, 370, 374, 375, 383, 386, 389, 391, 400, 407, 410, 412, 415, 419, 422, 424, 425, 428, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 445, 448, 450, 451, 452, 457, 458, 460, 461, 462, 463, 465, 470, 473, 477, 489, 493, 501, 502, 505, 511, 529, 551, 552, 553, 554], "perhap": 506, "period": [42, 51, 54, 259, 366, 385, 418, 465, 485], "period_dot": 51, "periodogram": [374, 419], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 385], "perseu": [33, 38], "person": [359, 362, 364, 366, 367, 368, 372, 377, 380], "perspect": [83, 86], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 418, "pf": 26, "pformat": [83, 86], "pformat_al": [83, 86], "pg": 479, "ph": 344, "pha": [101, 102, 105, 192, 371, 416, 419, 432, 441], "pha_": 457, "pha_meta": 101, "pha_ob": [101, 136, 441, 458], "pha_obs23523": [104, 105, 125, 270, 466, 491], "pha_obs23592": 491, "phacountsspectrum": 402, "phacountsspectrumlist": 401, "phase": [50, 52, 53, 85, 161, 164, 259, 364, 369, 370, 373, 374, 376, 378, 383, 395, 400, 419, 421, 424, 427, 464, 482, 493, 507, 549], "phase_axi": 383, "phase_bkg_mak": 453, "phase_column_nam": [164, 453], "phase_curve_model": 547, "phase_filt": 85, "phase_max": 453, "phase_min": 453, "phase_model": 547, "phasebackgroundestim": 404, "phasebackgroundmak": [161, 404, 424, 453], "phasecurv": [259, 418, 547], "phasecurve_lsi_dc": 547, "phasecurvemodel": 382, "phasecurvetablemodel": [370, 372], "phasecurvetempl": 370, "phasogram": [259, 547], "phi": [19, 20, 26, 189, 205, 206, 209, 212, 213, 215, 216, 217, 220, 223, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 292, 382, 448, 458, 463, 464, 469, 479, 498, 510, 511, 512, 514, 515, 516, 520, 522, 523, 524, 526, 527, 531, 532, 534, 535, 536, 537], "phi_0": [205, 207, 208, 212, 215, 216, 217, 220, 223, 227, 228, 235, 237, 239, 240, 245, 246, 249, 250, 252, 253, 254, 256, 260, 382, 458, 520, 523, 524, 527, 531, 534, 535, 536, 537], "phi_ref": [259, 547], "philipp": [418, 419], "phone": 379, "photon": [44, 213, 234, 344, 374, 435, 444, 448, 462, 464, 479, 498, 529, 552], "photutil": [132, 359, 373, 419], "php": 62, "physic": [120, 121, 124, 127, 308, 309, 358, 383, 387, 401, 433, 441, 461, 464, 466, 468, 477, 491, 493, 529, 552, 555, 556], "pi": [19, 20, 30, 31, 32, 37, 54, 221, 263, 382, 464, 487, 510, 511, 512, 515, 516, 526, 546], "pick": [359, 366, 373, 384, 400, 479], "pictur": 360, "pie": 493, "piec": [359, 365, 373, 378, 387], "piecewis": [235, 236, 427, 464, 507, 518, 539], "piecewisebrokenpowerlawnormspectralmodel": 382, "piecewisebrokenpowerlawnormspectramodel": 382, "piecewisenormsectralmodel": 407, "piecewisenormspatialmodel": [242, 424, 464, 513], "piecewisenormspectralmodel": [243, 387, 407, 410, 423, 425, 464, 500, 530], "pig": [13, 359, 361, 362, 399, 400, 402, 403, 404, 406, 407, 418, 420, 421, 425], "pii": 134, "pillar": 375, "pin": 419, "pink": [104, 105], "pint": [453, 493], "pintor": [372, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 421, 423, 424, 425], "pip": [358, 362, 366, 376, 390, 391, 393, 400, 419, 468, 553], "pipe": [415, 416, 417], "pipelin": [372, 374, 406], "piron": 552, "piron2001": 552, "pivot": [19, 20, 26, 65, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 425, 456], "pivot_energi": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "pix": [181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 505], "pix_reg": 455, "pix_reg_rec": 455, "pix_to_coord": [181, 182, 185, 187, 188, 191, 193, 194, 425], "pix_to_idx": [181, 182, 185, 187, 188, 191, 193, 194], "pixcoord": 373, "pixel": [13, 79, 97, 100, 104, 105, 107, 108, 112, 122, 132, 133, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 154, 155, 166, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 208, 211, 212, 220, 223, 233, 235, 245, 246, 250, 256, 260, 370, 398, 402, 416, 419, 436, 438, 444, 446, 457, 460, 461, 469, 479, 489, 491, 503, 504, 505, 514], "pixel_area": 194, "pixel_scal": [112, 182, 194], "pixelregion": [373, 502], "pixilis": 461, "pixreg": 512, "pixregion": 196, "pk": [128, 405, 449, 451, 452, 456, 465, 479, 519], "pks2155": 451, "pks2155_hess_lc": [135, 449], "pl": [65, 76, 116, 121, 127, 160, 231, 238, 239, 240, 382, 430, 446, 456, 457, 464, 479], "pl_model": 545, "pl_spectrum": 466, "place": [79, 82, 83, 86, 87, 95, 97, 100, 104, 105, 132, 137, 138, 139, 140, 141, 142, 143, 147, 148, 153, 155, 156, 166, 171, 183, 184, 186, 192, 195, 196, 233, 258, 332, 359, 360, 366, 367, 370, 371, 372, 373, 375, 378, 379, 380, 381, 384, 389, 403, 405, 432, 450, 461, 462, 464, 479, 489, 490, 493, 551, 557], "placehold": 364, "plai": [379, 442], "plain": [376, 461], "plan": [363, 364, 368, 369, 373, 375, 376, 379, 384, 388, 399, 416, 418, 419, 420, 550], "planar": [260, 370], "plane": [29, 65, 66, 120, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 379, 455, 456, 461, 468, 488, 503, 506, 511, 552, 558], "plate": [194, 461], "platform": [376, 385, 410], "plausibl": [386, 443], "pleas": [98, 103, 360, 362, 364, 366, 368, 394, 399, 400, 401, 410, 418, 420, 430, 432, 433, 434, 435, 437, 440, 444, 445, 449, 451, 452, 457, 477, 482, 493], "pleasant": 362, "plot": [6, 19, 20, 26, 64, 65, 79, 84, 96, 97, 100, 104, 105, 119, 122, 123, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 264, 268, 337, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 360, 373, 374, 375, 377, 378, 380, 383, 395, 398, 401, 404, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 428, 429, 430, 434, 437, 438, 440, 441, 445, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 462, 464, 465, 466, 468, 469, 470, 471, 477, 479, 483, 485, 486, 487, 489, 493, 495, 496, 497, 499, 502, 547, 548, 555, 557], "plot_absorb": [427, 519, 539], "plot_at_energi": [137, 138, 468], "plot_bia": [140, 145], "plot_broken_powerlaw": [427, 520, 539], "plot_compound": [427, 521, 539], "plot_const": [427, 509, 518], "plot_constant_spectr": [427, 522, 539], "plot_constant_tempor": [427, 540, 549], "plot_containment_radiu": [144, 150, 152, 154], "plot_containment_radius_vs_energi": [144, 150, 152, 153, 154, 156, 468, 469], "plot_contour_lin": 458, "plot_correl": [199, 458], "plot_count": [104, 105], "plot_dat": 557, "plot_disk": [427, 510, 518], "plot_distribut": [438, 440], "plot_energi": [79, 445], "plot_energy_depend": [137, 143, 468, 495], "plot_energy_offset": 79, "plot_err": 122, "plot_error": [19, 20, 26, 64, 65, 96, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 377, 430, 432, 434, 440, 441, 443, 456, 458, 478], "plot_excess": [104, 105, 413], "plot_exp_cutoff_powerlaw": [427, 523, 539], "plot_exp_cutoff_powerlaw_3fgl": [427, 524, 539], "plot_exp_cutoff_powerlaw_norm_spectr": [427, 525, 539], "plot_expdecay_tempor": [427, 541, 549], "plot_extension_error": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260], "plot_fit": [96, 104, 105, 429, 432, 433, 434, 442, 453, 477], "plot_gauss": [427, 511, 518], "plot_gauss_spectr": [427, 526, 539], "plot_gaussian_tempor": [427, 542, 549], "plot_gen_gauss": [427, 512, 518], "plot_generalized_gaussian_tempor": [427, 543, 549], "plot_grid": [151, 183, 184, 186, 192, 195, 196, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 383, 412, 423, 440, 457, 459, 460, 461, 462, 464, 470], "plot_heatmap": 199, "plot_hist": [192, 506], "plot_imag": 79, "plot_interact": [183, 184, 186, 192, 195, 196, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 412, 419, 440, 448, 461, 477, 478], "plot_kernel": 151, "plot_kwarg": [432, 434, 442], "plot_linear_tempor": [427, 544, 549], "plot_logparabola": [427, 527, 539], "plot_logparabola_norm_spectr": [427, 528, 539], "plot_map_rgb": 424, "plot_mask": [104, 105, 184, 192, 196, 429, 432, 433, 502], "plot_matrix": [140, 457, 469], "plot_migr": 145, "plot_naima": [427, 529, 539], "plot_npred_sign": [424, 440, 442, 478], "plot_offset2_distribut": 79, "plot_offset_depend": [137, 143], "plot_panel": 346, "plot_phasogram": 259, "plot_piecewise_norm_spati": [427, 513, 518], "plot_piecewise_norm_spectr": [427, 530, 539], "plot_point": [427, 514, 518], "plot_posit": [211, 233, 463], "plot_position_error": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260], "plot_powerlaw": [427, 531, 539], "plot_powerlaw2": [427, 532, 539], "plot_powerlaw_norm_spectr": [427, 533, 539], "plot_powerlaw_tempor": [427, 545, 549], "plot_profil": 122, "plot_psf_vs_rad": [144, 150, 152, 153, 154, 156, 469], "plot_rad_max_vs_energi": [155, 434], "plot_region": [191, 192, 211, 233, 356, 434, 446, 463, 502, 506], "plot_residu": [96, 97, 100, 104, 105, 408, 410, 440, 478], "plot_residuals_spati": [97, 100, 104, 105, 440, 448, 478], "plot_residuals_spectr": [97, 100, 104, 105], "plot_rgb": 424, "plot_shel": [427, 515, 518], "plot_shell2": [427, 516, 518], "plot_sine_tempor": [427, 546, 549], "plot_smooth_broken_powerlaw": [427, 534, 539], "plot_spati": 410, "plot_spectrum": [96, 137, 440, 452, 457], "plot_spectrum_datasets_off_region": [407, 423, 424, 432, 434, 442, 502], "plot_super_exp_cutoff_powerlaw_3fgl": [427, 535, 539], "plot_super_exp_cutoff_powerlaw_4fgl": [427, 536, 539], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [427, 537, 539], "plot_templ": [427, 517, 518], "plot_template_phase_tempor": [427, 547, 549], "plot_template_spectr": [427, 538, 539], "plot_template_tempor": [427, 548, 549], "plot_theta_squared_t": [470, 471], "plot_tim": 79, "plot_ts_profil": [119, 432, 433, 446, 450], "plotmixin": [104, 105], "plotter": 346, "plsuperexpcutoff3fgl": 417, "plsuperexpcutoff4fgl": 402, "plt": [19, 20, 26, 64, 65, 123, 137, 143, 144, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 347, 356, 359, 360, 395, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 485, 486, 487, 493, 495, 496, 497, 499, 502, 510, 512, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 212, 379, 385, 464], "pmf": 372, "png": [144, 367, 395, 483, 485, 486, 487, 489, 490, 495, 496, 497, 499, 502, 506, 555, 558], "po": [142, 194, 502], "point": [15, 17, 18, 21, 22, 24, 25, 27, 60, 63, 65, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 83, 84, 86, 89, 90, 91, 94, 95, 96, 97, 99, 100, 104, 105, 113, 117, 119, 120, 121, 124, 125, 126, 127, 129, 135, 142, 144, 147, 153, 155, 156, 166, 167, 169, 170, 171, 173, 174, 176, 177, 179, 180, 183, 184, 186, 191, 192, 195, 196, 200, 211, 233, 237, 248, 266, 270, 278, 290, 294, 300, 306, 316, 351, 359, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 388, 391, 398, 401, 403, 404, 410, 412, 413, 415, 416, 417, 418, 420, 423, 424, 425, 427, 429, 431, 434, 435, 436, 440, 445, 446, 448, 450, 452, 453, 457, 458, 459, 460, 461, 464, 465, 469, 471, 473, 481, 482, 488, 489, 490, 493, 498, 501, 502, 505, 507, 511, 512, 518, 529, 550, 551, 552], "point_sourc": 370, "pointer": 367, "pointing_altaz": [386, 424], "pointing_galact": 86, "pointing_info": [81, 89, 428], "pointing_posit": [153, 435, 445, 448], "pointing_radec": [79, 86, 424, 468], "pointing_t": 89, "pointing_zen": 424, "pointinginfo": [81, 416], "pointinginfometadata": 99, "pointingmetadata": 386, "pointingmod": 81, "pointlik": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 418, 502], "points_scal": 300, "pointskyregion": [165, 170, 191, 237, 413, 434, 445], "pointsourc": [370, 481], "pointspatialmodel": [19, 20, 70, 76, 127, 242, 382, 383, 403, 423, 436, 437, 440, 441, 444, 445, 450, 456, 457, 463, 464, 469, 477, 478, 514], "pointspreadfunct": 459, "poisson": [100, 105, 272, 273, 274, 280, 282, 283, 285, 318, 371, 372, 401, 406, 430, 435, 438, 448, 552, 553, 555], "poissonian": [449, 453, 552], "poissonlikelihoodfitt": 415, "polar": [51, 54, 289, 359], "pole": [51, 373, 461], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184], "polici": 363, "pollut": 374, "polygon": [184, 198, 373], "polygonis": 373, "polygonpixelregion": 373, "polygonskyregion": [198, 373], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 230, 461], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [304, 308, 309], "pool_kwarg": [308, 309], "poolmethodenum": 304, "poon": 416, "poorli": 460, "pop": [87, 95, 190, 233], "popitem": 190, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 360, 379, 417, 482, 484, 529, 551], "popular": 553, "port": 417, "pos_ob": 442, "pos_on": 180, "pos_target": [442, 453], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 86, 89, 90, 91, 97, 98, 99, 100, 103, 117, 118, 119, 120, 121, 124, 125, 127, 141, 142, 148, 151, 153, 156, 166, 169, 171, 180, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 258, 260, 270, 272, 273, 286, 287, 290, 291, 294, 295, 347, 359, 366, 370, 372, 373, 382, 383, 384, 385, 400, 402, 407, 410, 412, 425, 428, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 471, 479, 489, 490, 491, 493, 498, 499, 502, 503, 504, 506, 510, 511, 512, 514, 529, 555], "position_angl": 435, "position_error": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 404], "position_lonlat": [207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260], "position_off": 180, "positv": 421, "posixpath": [16, 324], "possibl": [33, 78, 83, 86, 146, 359, 360, 362, 366, 367, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 383, 386, 389, 391, 401, 402, 410, 417, 419, 424, 436, 437, 438, 443, 446, 457, 458, 459, 460, 461, 469, 479, 491, 493, 500, 505, 506, 529, 553, 554], "possibli": [83, 86, 117, 365, 369, 370, 372, 373, 377, 378, 379, 380, 386, 388, 410, 500], "post": [52, 368, 386], "poster": [362, 385, 389, 414], "posterior": [377, 466], "posteriori": 466, "postfix": 359, "potenti": [114, 367, 375, 443, 493], "potentiel": 385, "power": [19, 20, 26, 27, 96, 116, 117, 119, 121, 126, 131, 151, 153, 156, 182, 201, 203, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 249, 251, 252, 253, 254, 257, 261, 263, 268, 315, 370, 372, 398, 404, 416, 418, 427, 435, 437, 440, 444, 446, 448, 451, 452, 453, 463, 464, 466, 493, 507, 519, 539, 545], "powerlaw": [169, 239, 241, 370, 371, 375, 416, 418, 427, 429, 437, 445, 446, 456, 464, 466, 478, 507, 533, 549], "powerlaw2spectralmodel": [231, 239, 240, 243, 382, 430, 437, 464, 479, 532], "powerlawnormspectralmodel": [65, 219, 238, 240, 243, 258, 381, 382, 387, 407, 425, 440, 441, 444, 445, 448, 457, 463, 464, 469, 477, 500, 513, 533, 538], "powerlawspectr": 127, "powerlawspectralmodel": [68, 70, 73, 76, 96, 104, 105, 109, 111, 119, 125, 127, 202, 204, 238, 239, 243, 264, 382, 383, 387, 429, 430, 433, 435, 436, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 456, 457, 463, 464, 466, 468, 469, 477, 478, 479, 491, 509, 510, 511, 512, 514, 515, 516, 517, 519, 521, 530, 531, 533, 540, 541, 542, 543, 544, 545, 546, 547, 548], "powerlawspectramodel": 387, "powerlawtemporalmodel": [255, 464, 545], "pppc4dmid": 26, "pprint": [83, 86, 554], "pprint_al": [83, 86], "pprint_exclude_nam": [83, 86], "pprint_include_nam": [83, 86], "pr": [359, 369, 371, 373, 382, 383, 385, 387, 388, 404, 405], "practic": [372, 376, 380, 383, 384, 385, 386, 432, 457, 462, 464, 478, 489, 493, 502, 552], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 96, 99, 103, 118, 119, 288, 359, 362, 368, 379, 385, 386, 390, 391, 407, 419, 421, 433, 437, 438, 441, 443, 446, 449, 456, 458, 463, 466, 489, 495], "preced": [306, 373, 375, 385, 464], "precis": [127, 144, 150, 152, 154, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 359, 377, 384, 385, 445], "precision_factor": [153, 156, 183, 184, 186, 192, 195, 196], "precomput": [26, 96, 119, 457, 463], "pred": 489, "predefin": [412, 446, 450, 451, 477], "predic": 370, "predict": [96, 97, 100, 103, 104, 105, 116, 117, 119, 120, 121, 124, 125, 131, 160, 163, 169, 176, 237, 248, 275, 310, 355, 365, 370, 371, 372, 407, 424, 425, 433, 435, 437, 438, 440, 442, 444, 446, 448, 457, 460, 466, 477, 478, 491, 493, 497, 500, 519, 552, 555], "prefer": [83, 86, 334, 359, 364, 366, 370, 378, 379, 385, 390, 391, 395, 446, 452, 461, 462, 466, 473, 553, 555], "prefix": [188, 370], "preliminari": [368, 379, 387, 415, 417, 425, 436, 459, 469], "prepar": [78, 163, 369, 370, 388, 433, 441, 458, 460, 464, 469, 477, 501, 550], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [83, 86], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 436, 449, 461, 529, 552], "present": [15, 68, 78, 79, 81, 86, 87, 95, 101, 105, 117, 119, 157, 185, 190, 211, 219, 233, 288, 359, 360, 362, 372, 375, 379, 383, 386, 389, 410, 429, 434, 437, 438, 449, 450, 451, 455, 459, 460, 461, 463, 489, 491, 494, 506, 553, 555], "preserv": [83, 86, 100, 183, 184, 186, 188, 192, 195, 196, 376, 457, 462], "preserve_count": [183, 184, 186, 192, 195, 196, 461], "press": 468, "pretti": [373, 379, 389, 395], "prevent": [184, 213, 288, 410, 440], "preview": [362, 471], "previou": [71, 83, 86, 359, 362, 373, 379, 380, 384, 388, 401, 407, 425, 434, 443, 444, 461, 464, 465, 466, 479, 488], "previous": [270, 376, 406, 418, 419, 428, 432, 440, 441, 456, 460, 462], "primari": [26, 83, 86, 183, 184, 186, 187, 195, 196, 364, 385, 406, 421, 461], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 187, "primary_band": 461, "primary_hdu": 444, "primaryflux": [19, 20, 455, 481], "primaryhdu": [444, 461], "prime": 23, "primer": 377, "princip": 443, "principl": [385, 387, 432, 503], "print": [11, 65, 78, 79, 81, 82, 83, 84, 86, 89, 91, 96, 97, 104, 106, 110, 116, 119, 121, 127, 132, 133, 138, 140, 143, 144, 150, 152, 154, 163, 166, 202, 204, 211, 225, 233, 264, 286, 287, 296, 327, 359, 360, 370, 371, 374, 383, 386, 394, 395, 428, 429, 430, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 477, 478, 479, 491, 493, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 553, 554, 555, 557], "print0": 359, "print_level": [440, 448, 458, 478], "print_stack": 359, "printout": [359, 417, 418, 457], "prior": [19, 20, 94, 96, 97, 104, 201, 202, 203, 204, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 363, 368, 391, 393, 425, 427, 429, 432, 433, 434, 435, 437, 440, 441, 446, 448, 452, 456, 458, 464, 467, 473, 478, 479, 505, 538, 550], "prior_registri": 466, "prior_stat_sum": [201, 202, 203, 204, 387, 466], "priorfitstatist": 387, "priori": [383, 438, 462], "prioriti": [356, 368, 370, 371, 373, 385, 388], "priormodel": 387, "priorparamet": [387, 466], "privat": [359, 362, 368, 382, 418, 470, 471], "pro": [359, 375], "probabl": [13, 145, 359, 362, 365, 366, 367, 369, 372, 373, 377, 379, 381, 387, 389, 435, 448, 458, 461, 464, 466, 469, 497, 498, 499, 552, 553, 555, 556], "probe": [278, 464], "problem": [19, 20, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 337, 367, 369, 373, 380, 387, 394, 422, 458], "problemat": [378, 383, 386, 451, 493], "proce": [362, 389, 391, 393, 421, 429, 432, 433, 444, 448, 451, 462, 463, 469, 477, 478], "procedur": [372, 384, 389, 436, 440], "proceed": [379, 385, 470], "process": [11, 79, 88, 120, 121, 124, 127, 159, 184, 196, 307, 308, 309, 318, 359, 360, 362, 364, 365, 367, 368, 369, 371, 372, 374, 375, 381, 384, 385, 386, 392, 396, 402, 407, 410, 412, 418, 425, 429, 432, 442, 444, 445, 456, 457, 460, 470, 475, 478, 483, 490, 492, 493, 551, 552, 553], "process_lots_of_data": 359, "processor": 379, "prod": 399, "prod3": 379, "prod3b": 468, "prod5": [444, 445], "produc": [15, 97, 100, 104, 105, 108, 117, 267, 269, 359, 360, 365, 374, 375, 383, 384, 386, 389, 404, 429, 432, 434, 436, 441, 442, 443, 444, 448, 451, 453, 455, 458, 460, 466, 468, 478, 493, 496, 498, 552, 553], "product": [103, 183, 184, 186, 189, 192, 195, 196, 259, 365, 374, 375, 385, 386, 395, 410, 424, 425, 430, 436, 445, 453, 457, 458, 460, 469, 471, 491, 498, 552], "prof_mak": 121, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 113, 117, 119, 120, 121, 122, 123, 124, 125, 144, 150, 152, 153, 154, 156, 180, 184, 192, 200, 222, 224, 271, 285, 301, 320, 321, 371, 373, 377, 378, 385, 391, 393, 398, 400, 407, 410, 415, 417, 419, 420, 425, 427, 432, 433, 442, 447, 450, 452, 458, 466, 473, 481, 489, 491, 493, 505, 510, 552, 555], "profile_err": 122, "profile_high": 446, "profile_new": 446, "profuma": 481, "program": [359, 375], "programmat": 440, "progress": [15, 78, 112, 124, 127, 200, 309, 365, 368, 375, 376, 389, 410, 417, 418, 419, 425, 493], "progress_download": 493, "prohibit": 493, "proj": [97, 100, 104, 105, 163, 182, 183, 184, 194, 195, 196, 432, 460, 461, 469, 478, 502], "project": [97, 104, 121, 160, 166, 182, 183, 184, 186, 191, 192, 194, 195, 196, 208, 211, 212, 220, 223, 233, 235, 245, 246, 250, 256, 260, 295, 321, 359, 360, 361, 362, 364, 366, 373, 375, 376, 379, 385, 402, 410, 418, 424, 433, 436, 438, 442, 446, 453, 459, 461, 462, 463, 468, 469, 475, 477, 478, 479, 481, 502, 505, 506, 515, 516, 551, 553], "projected_distance_axi": 121, "prompt": 553, "pronounc": 493, "pronunci": 493, "prop_cycl": 356, "propag": [19, 20, 26, 53, 122, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 277, 370, 377, 404, 424, 458], "proper": [45, 95, 374, 385, 423, 424, 434, 440, 493], "properli": [127, 176, 364, 374, 385, 422, 423, 432, 433, 458, 477, 489, 554], "properti": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 91, 117, 160, 194, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 279, 356, 359, 360, 370, 372, 382, 383, 386, 387, 407, 410, 412, 417, 418, 420, 423, 424, 432, 434, 442, 444, 446, 456, 462, 464, 465, 479, 490, 506, 552], "propos": [361, 363, 364, 365, 366, 368, 376, 384, 385, 387, 400, 403, 404, 406, 407, 418, 424], "proto": [16, 80, 99, 118], "proton": [263, 529], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 359, 364, 370, 372, 375, 376, 377, 379, 415, 417, 418, 425, 482], "proven": 375, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 81, 83, 84, 86, 97, 99, 100, 104, 105, 108, 118, 124, 127, 140, 141, 159, 173, 174, 179, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 285, 288, 352, 359, 360, 369, 370, 372, 374, 375, 376, 379, 380, 383, 385, 386, 387, 388, 389, 390, 394, 396, 400, 403, 404, 405, 407, 410, 412, 421, 424, 428, 434, 435, 436, 445, 448, 449, 456, 457, 458, 460, 461, 462, 464, 465, 469, 470, 471, 473, 478, 479, 481, 483, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 503, 504, 505, 506, 507, 514, 517, 529, 538, 550, 551, 552, 553, 555, 558], "proxi": 369, "prune": 362, "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 362, "psf": [16, 78, 83, 84, 91, 97, 98, 100, 103, 104, 105, 107, 108, 142, 144, 149, 150, 151, 152, 153, 154, 156, 163, 170, 179, 194, 211, 233, 248, 286, 287, 359, 365, 369, 370, 371, 372, 375, 398, 400, 404, 405, 406, 407, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 424, 428, 429, 432, 433, 434, 436, 437, 438, 440, 442, 444, 445, 448, 450, 457, 460, 462, 465, 468, 470, 471, 477, 478, 489, 491, 493, 498, 501, 506, 552], "psf3d": [84, 144, 149, 152, 154, 179, 400, 418, 499], "psf68": 428, "psf_": 489, "psf_3gauss": [83, 144, 468, 499], "psf_assym": 459, "psf_kernel": [153, 469], "psf_kernel_map": [151, 469], "psf_king": [83, 152, 499], "psf_map": [98, 103, 153, 156], "psf_map_reco": [156, 470], "psf_mean": 469, "psf_new": 459, "psf_out": [153, 156], "psf_r95": 462, "psf_tabl": [78, 83, 150, 459, 471], "psf_theta": 359, "psf_valu": [144, 152, 154], "psfkernel": [100, 153, 156, 184, 196, 371, 380, 419, 499], "psfking": [149, 412, 499], "psfmap": [97, 98, 100, 103, 104, 105, 141, 142, 148, 149, 151, 156, 163, 170, 179, 371, 372, 380, 400, 403, 404, 406, 407, 419, 425, 436, 457, 469, 493, 499], "psfnd": 459, "psr": [453, 456, 479], "public": [6, 349, 350, 362, 364, 373, 378, 381, 384, 389, 414, 429, 441, 450, 451, 551, 558], "publicli": [468, 470, 471], "publish": [11, 376, 389, 432, 469], "pull": [360, 363, 364, 367, 368, 369, 370, 371, 372, 373, 379, 384, 385, 389, 397], "puls": 224, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 79, 369, 379, 400, 402, 421, 424, 427, 438, 443, 454, 464, 473, 483, 484, 489, 490, 491, 493, 501, 505, 550], "pulsar_analysi": [379, 427, 453, 454], "pulsat": 247, "pulse_stat": 453, "punch": [423, 425], "pure": [359, 376, 378, 379, 502], "purpl": 506, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 312, 334, 363, 365, 371, 374, 378, 382, 384, 385, 418, 436, 457, 463, 464, 497], "push": [359, 362, 388, 421], "put": [359, 360, 362, 364, 366, 367, 370, 379, 388, 389, 395, 401, 435, 444, 462, 469, 553], "pwbpl": 382, "pwd": [362, 391, 393], "pwl": [19, 20, 26, 119, 202, 204, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 264, 370, 382, 387, 430, 444, 464, 466, 491, 509, 510, 511, 512, 514, 515, 516, 517, 519, 521], "pwl2": 464, "pwl_decai": 444, "pwl_norm": [382, 464, 533], "pwn": [43, 456, 479, 486], "pwne": 443, "py": [16, 80, 99, 118, 359, 360, 366, 373, 376, 378, 380, 388, 389, 395, 400, 402, 403, 411, 416, 420, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 493, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553], "py310": 362, "py35": 417, "pycharm": 401, "pydant": [16, 80, 99, 118, 358, 404, 423, 425], "pydantic_cor": [16, 80, 99, 118], "pydanticserializationerror": [16, 80, 99, 118], "pydanticundefin": [16, 80, 99, 118], "pydata": 412, "pyfact": [398, 416], "pyflak": 412, "pyirf": 425, "pyjok": 358, "pymc": 377, "pymotw": 553, "pypi": [376, 386, 388, 389, 391, 392], "pyplot": [19, 20, 26, 64, 65, 79, 123, 144, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 347, 352, 395, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 485, 486, 487, 493, 495, 496, 497, 499, 502, 510, 512, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546], "pyproject": 407, "pyregion": 373, "pytest": [359, 360, 362, 389, 418], "python": [11, 16, 80, 99, 118, 132, 288, 328, 358, 362, 363, 364, 368, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 385, 386, 389, 390, 391, 392, 393, 394, 396, 398, 399, 400, 402, 403, 410, 412, 415, 416, 417, 418, 419, 420, 421, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 481, 492, 493, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553], "python3": [324, 392, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 517, 525, 528, 541], "python_execut": [428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "python_vers": [428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "pytorch": 377, "pyx": [362, 389], "pyyaml": [358, 376, 399, 403], "q": [26, 79, 83, 86, 354, 455], "qtabl": [83, 86, 374], "quadrat": [461, 471, 479, 556], "qualiti": [192, 379, 418, 419, 424, 465, 478, 493, 551, 558], "quantifi": [425, 443, 449, 466], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 69, 71, 72, 76, 79, 82, 83, 84, 86, 89, 91, 95, 97, 98, 100, 101, 103, 104, 105, 107, 108, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 167, 168, 169, 171, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 266, 272, 273, 276, 277, 278, 279, 287, 288, 290, 292, 294, 295, 300, 318, 320, 321, 330, 334, 359, 360, 365, 368, 370, 373, 374, 375, 377, 382, 383, 386, 387, 401, 403, 407, 410, 411, 419, 420, 421, 428, 436, 444, 445, 446, 449, 456, 457, 459, 460, 461, 462, 464, 468, 470, 471, 479, 485, 486, 487, 489, 493, 506, 532, 541, 543, 552, 555, 557], "quantity_support": [459, 510], "quasar": 128, "quentin": [377, 381, 382, 402, 403, 404, 405, 406, 407, 410, 412, 413, 421, 422, 423, 424, 425], "queri": [375, 415, 456], "question": [327, 362, 364, 366, 367, 368, 370, 371, 372, 373, 376, 378, 383, 394, 399, 400, 418, 419, 420, 442, 479, 493, 494, 553], "questionnair": [366, 418], "quetin": 404, "quick": [79, 84, 97, 100, 104, 105, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 359, 362, 379, 389, 436, 437, 440, 442, 444, 452, 457, 459, 463, 468, 470, 471, 473, 479, 481, 490], "quickest": 360, "quickli": [359, 360, 362, 364, 375, 376, 379, 385, 389, 391, 417, 432, 440, 449, 470, 497, 553], "quicklook": 79, "quickplot": 184, "quicksort": [83, 86], "quickstart": 396, "quiescent": 519, "quit": [83, 86, 359, 387, 444], "quival": 370, "quot": [71, 264, 359, 360, 455], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 82, 83, 86, 145, 180, 193, 289, 359, 360, 384, 389, 433, 441, 445, 458, 460, 477, 483, 498, 502, 510, 511, 512, 516, 519], "r68": [79, 107, 144, 153, 156], "r70": [65, 456], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 245, 246, 455, 512, 515, 516], "r_0": [30, 33, 38, 48, 212, 223, 245, 463, 510, 512, 516], "r_1": [39, 48], "r_eval": 223, "r_exp": [36, 48], "r_in": [44, 158, 168, 245, 438, 503], "r_m": 512, "r_out": 44, "r_out_max": 158, "r_out_pwn": 43, "r_sun": 38, "ra": [65, 79, 81, 83, 84, 86, 89, 132, 133, 166, 359, 360, 372, 375, 428, 432, 434, 436, 438, 442, 445, 450, 451, 453, 456, 460, 462, 468, 469, 470, 471, 478, 479, 481, 493, 497, 557], "ra_pnt": 471, "ra_tru": [359, 372], "rad": [33, 79, 84, 97, 100, 104, 105, 107, 108, 144, 150, 152, 153, 154, 155, 156, 166, 179, 247, 375, 412, 424, 434, 457, 459, 460, 469, 498, 499, 502, 546], "rad_axi": [97, 100, 104, 105, 108, 150, 153, 156, 457, 459, 460, 493], "rad_di": [45, 483], "rad_index": 150, "rad_max": [78, 79, 83, 84, 149, 155, 172, 412, 421, 423, 424, 434], "rad_max_2d": [83, 155, 165, 170, 172, 434], "radec": [79, 89, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 359, 360, 459, 461, 479], "radecsi": 517, "radesysa": 517, "radi": [234, 529], "radial": [28, 30, 35, 36, 39, 40, 45, 123, 180, 184, 314, 359, 370, 378, 383, 400, 415, 417, 425, 444, 446, 460, 468, 481, 483, 499, 502], "radian": [17, 18, 21, 22, 24, 25, 27, 189, 207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260], "radiat": [213, 493, 515, 516, 529], "radiative_model": [234, 529], "radii": [27, 455, 469, 511], "radio": [128, 373, 461], "radiobutton": [440, 448, 461, 477, 478], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 70, 78, 79, 86, 91, 97, 100, 104, 105, 116, 121, 122, 144, 150, 152, 153, 154, 156, 158, 166, 168, 184, 194, 196, 197, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 258, 260, 286, 287, 320, 360, 373, 375, 382, 383, 400, 409, 410, 414, 424, 428, 429, 432, 433, 435, 436, 437, 438, 440, 442, 444, 445, 450, 451, 453, 455, 457, 459, 460, 462, 463, 464, 465, 468, 477, 478, 479, 486, 487, 500, 502, 503, 506, 510, 511, 512, 515, 516], "radius_inn": [52, 53], "radius_max": [320, 446], "radius_min": 320, "radius_reverse_shock": [50, 53, 486], "radmax": [412, 413, 424, 425], "radmax2d": [79, 84, 149, 172, 410, 434], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 62, 64, 79, 88, 116, 120, 121, 124, 126, 127, 128, 159, 213, 263, 264, 278, 279, 308, 309, 365, 370, 371, 373, 377, 388, 389, 391, 395, 396, 401, 417, 419, 424, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 481, 483, 484, 488, 489, 490, 493, 496, 498, 500, 502, 503, 519, 550, 551, 552, 553, 554, 555, 558], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 80, 82, 83, 86, 87, 95, 99, 118, 185, 190, 211, 213, 233, 256, 257, 258, 260, 288, 337, 359, 373, 382, 383, 386, 387, 404, 421, 424, 425, 445], "raise_error": [16, 80, 99, 118], "raj2000": [456, 479], "ran": 468, "random": [6, 33, 42, 45, 46, 47, 83, 86, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 310, 311, 312, 313, 314, 315, 316, 317, 318, 362, 371, 372, 375, 402, 414, 418, 444, 464, 493, 554, 555, 557], "random_se": 371, "random_st": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 310, 311, 312, 315, 316, 317, 318, 359, 372, 435, 444, 445], "randomli": [46, 359], "randomnumb": 315, "randomst": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 310, 312, 315, 316, 317, 318, 359], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 65, 69, 71, 72, 76, 79, 83, 86, 87, 95, 96, 97, 100, 104, 105, 120, 140, 153, 155, 156, 169, 181, 182, 185, 187, 188, 191, 192, 194, 201, 203, 205, 206, 209, 210, 212, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 233, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 258, 259, 261, 262, 266, 313, 315, 316, 317, 352, 359, 365, 371, 372, 374, 383, 401, 406, 407, 410, 418, 419, 421, 429, 432, 434, 435, 437, 440, 441, 443, 445, 449, 451, 452, 453, 456, 457, 458, 459, 461, 462, 464, 465, 466, 469, 470, 477, 478, 479, 489, 491, 493, 512, 522, 551, 555], "rangl": 19, "rapid": [128, 278, 365, 368, 383, 384], "rare": [358, 359, 378, 461], "raster": [90, 184], "rate": [44, 45, 79, 84, 137, 138, 169, 176, 318, 372, 395, 419, 432, 434, 453, 460, 468, 469, 471, 483, 496, 552], "rather": [112, 116, 120, 124, 127, 364, 377, 380, 418, 421, 423, 425, 429, 458, 461, 479, 489, 511, 555], "ratio": [100, 105, 158, 182, 183, 184, 273, 285, 383, 428, 453, 468, 503, 552, 554, 555, 556, 558], "ravel": [182, 444], "raw": [117, 169, 479], "rc": [183, 184, 186, 192, 195, 196, 356, 461], "rc1": 388, "rc_context": [183, 184, 186, 192, 195, 196, 461], "rc_param": [183, 184, 186, 192, 195, 196, 461], "rcparam": 356, "rdbu": 477, "rdbu_r": [97, 100, 104, 105], "re": [83, 86, 91, 119, 120, 125, 160, 183, 184, 186, 192, 195, 196, 200, 286, 287, 352, 359, 360, 362, 364, 366, 367, 373, 374, 375, 377, 380, 381, 382, 383, 391, 393, 394, 398, 410, 412, 419, 430, 432, 433, 438, 440, 441, 442, 452, 458, 459, 463, 465, 469, 477, 479, 491, 493, 514, 553], "reach": [53, 126, 197, 364, 369, 372, 464], "reactiv": 421, "read": [15, 16, 79, 81, 82, 83, 84, 86, 89, 95, 96, 97, 100, 101, 104, 105, 109, 111, 112, 116, 117, 119, 121, 123, 125, 127, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 165, 183, 184, 186, 190, 191, 192, 195, 196, 211, 213, 225, 233, 259, 260, 261, 265, 267, 269, 270, 326, 345, 347, 352, 354, 359, 360, 362, 364, 369, 370, 371, 372, 375, 379, 381, 383, 385, 386, 387, 391, 393, 404, 407, 410, 418, 419, 421, 424, 425, 432, 433, 434, 438, 440, 443, 444, 449, 457, 458, 459, 464, 466, 468, 469, 470, 473, 477, 479, 490, 491, 493, 495, 496, 497, 499, 517, 547, 548, 553, 556], "read_arf": 101, "read_bkg": 101, "read_builtin": [213, 519], "read_covari": [211, 233], "read_dataset": 15, "read_lazi": 412, "read_model": 15, "read_pha": 101, "read_rmf": 101, "read_xspec_model": 261, "readabl": [340, 370, 412, 433, 477], "reader": [386, 428, 435, 437, 440, 442, 445, 448, 452, 468], "readi": [369, 386, 394, 552], "readili": 379, "readm": [362, 385], "readthedoc": [13, 120, 176, 191, 200, 261, 362, 379, 401, 416, 458, 459, 468, 490, 504, 506], "real": [51, 359, 362, 389, 435, 436, 438, 445, 458, 462, 489], "realis": [359, 364, 373, 385], "realist": 387, "realiz": [365, 552], "realli": [359, 366, 373, 376, 435, 448, 458], "rearrang": 379, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 359, 364, 365, 366, 367, 370, 371, 372, 374, 376, 378, 380, 385, 418, 444, 458, 466, 470, 489, 553], "reassign": [19, 20, 26, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262], "rebas": [359, 373], "rebin": [119, 135, 374, 412, 425, 449, 451, 457], "rebuild": [16, 80, 99, 118, 441], "recarrai": [83, 86, 144, 154], "receiv": [377, 379, 380, 382, 384], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 369, 373, 374, 375, 376, 379, 392, 399, 413, 419, 441, 468, 470], "recip": [361, 375, 396, 410, 453, 494, 555], "reco": [97, 100, 104, 105, 140, 173, 359, 365, 374, 383, 420, 421, 428, 457, 460, 470, 552], "reco_exposur": 116, "reco_psf": [97, 100, 104, 105, 108, 460, 470], "recogn": [428, 435, 437, 440, 442, 444, 448, 452, 468], "recognis": [370, 553], "recognit": 385, "recommend": [87, 95, 170, 211, 233, 271, 300, 301, 358, 359, 360, 362, 366, 368, 376, 385, 389, 390, 392, 395, 402, 419, 433, 434, 443, 457, 458, 460, 464, 469, 477, 493, 500, 505, 506, 553, 554, 557], "recomput": [119, 383], "recompute_ul": 119, "recon_vers": [469, 479], "reconstruct": [79, 97, 98, 100, 103, 104, 105, 107, 108, 116, 126, 127, 131, 140, 141, 142, 145, 155, 156, 169, 176, 359, 365, 370, 372, 407, 422, 428, 429, 432, 435, 437, 438, 440, 444, 448, 452, 457, 460, 462, 466, 470, 489, 491, 497, 498, 499, 506, 552], "recopsfmap": [149, 421, 424], "record": [79, 84, 359, 364, 365, 385], "recov": 375, "rectangl": [208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 321, 373, 446, 502], "rectangleskyregion": [194, 207, 208, 260, 320, 321, 373, 429, 455, 462, 502, 506], "rectangular": [446, 502, 506], "recurr": 374, "recurs": [327, 386], "red": [96, 278, 349, 428, 435, 438, 440, 443, 455, 465, 466, 510, 511], "redesign": 368, "redistribut": 497, "redo": 453, "redshift": [19, 20, 213, 382, 479, 519], "reduc": [6, 11, 15, 95, 97, 100, 104, 105, 151, 153, 156, 161, 171, 183, 184, 186, 188, 192, 195, 196, 365, 366, 368, 370, 371, 375, 378, 380, 385, 386, 391, 398, 403, 410, 419, 425, 427, 429, 430, 433, 434, 435, 440, 441, 444, 448, 450, 451, 452, 462, 465, 467, 470, 473, 489, 493, 498, 503, 505, 506, 511, 512, 550, 551, 552, 553], "reduce_data": 375, "reduce_over_ax": [183, 184, 186, 192, 195, 196, 437, 460, 470], "reduct": [6, 11, 159, 365, 371, 372, 375, 379, 380, 381, 386, 391, 404, 406, 424, 427, 438, 442, 443, 446, 453, 457, 459, 462, 463, 465, 467, 473, 489, 490, 493, 500, 502, 503, 505, 551, 552], "ref": [79, 89, 97, 104, 116, 121, 127, 182, 191, 194, 211, 233, 383, 442, 446, 456, 457, 459, 461, 469, 479, 506, 541, 542, 543, 544, 545, 546, 552, 553], "ref_templ": [16, 80, 99, 118], "refactor": [359, 371, 373, 374, 375, 382, 400, 401, 402, 404, 405, 406, 407, 410, 412, 414, 416, 418], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 62, 65, 67, 79, 80, 81, 82, 83, 84, 86, 89, 96, 97, 99, 100, 101, 104, 105, 107, 108, 117, 118, 119, 120, 122, 127, 128, 145, 159, 160, 163, 166, 167, 170, 171, 172, 175, 176, 178, 193, 194, 195, 196, 200, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 264, 274, 278, 279, 280, 285, 315, 316, 340, 341, 342, 343, 359, 360, 365, 367, 370, 371, 373, 375, 377, 382, 383, 384, 385, 386, 389, 396, 410, 417, 418, 429, 430, 432, 433, 434, 435, 437, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 456, 457, 458, 460, 461, 463, 464, 466, 468, 469, 470, 477, 478, 479, 482, 489, 491, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 521, 523, 524, 525, 527, 528, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 555, 557], "referenc": [359, 552], "reference_flux": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "reference_map": 461, "reference_model": [117, 119, 428, 441], "reference_model_default": [117, 119], "reference_spectral_model": [117, 119], "reference_tim": [82, 84, 97, 100, 104, 105, 193, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 423, 424, 445, 449, 452, 460, 461, 548], "reflect": [161, 165, 166, 167, 171, 180, 368, 373, 375, 378, 380, 391, 403, 410, 412, 415, 416, 419, 429, 432, 433, 434, 442, 451, 462, 501, 552], "reflected_bkg_mak": 460, "reflectedbgestim": 375, "reflectedregionsbackgroundmak": [161, 166, 404, 429, 432, 434, 442, 451, 460], "reflectedregionsfind": [165, 171, 402, 502], "refpix": [194, 195, 196], "refresh": [83, 86], "refus": 359, "reg": [97, 100, 104, 105, 462, 464], "reg_dataset": 457, "regard": [383, 386, 432], "regardless": [83, 86], "regeard": [422, 423, 424, 425], "regi": [365, 370, 371, 375], "region": [6, 27, 79, 86, 95, 97, 100, 102, 104, 105, 109, 111, 121, 123, 126, 128, 141, 142, 148, 153, 156, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 182, 183, 184, 186, 191, 192, 194, 195, 196, 198, 200, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 258, 260, 261, 263, 273, 285, 319, 320, 321, 322, 323, 355, 356, 358, 360, 363, 365, 366, 374, 375, 376, 378, 381, 383, 391, 402, 403, 404, 406, 410, 412, 413, 415, 416, 418, 419, 421, 423, 424, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 461, 464, 466, 468, 469, 470, 471, 477, 478, 479, 488, 489, 490, 491, 493, 500, 501, 503, 504, 505, 510, 511, 529, 551, 552, 554, 555, 556], "region_coord": 191, "region_ev": 453, "region_find": [165, 434], "region_io": 191, "region_map": [192, 196, 506], "region_map_1": 506, "region_map_2": 506, "region_mask": [79, 182, 194, 373, 432, 438, 442, 457, 460, 462, 478, 500, 502, 503], "region_nd_map": 192, "region_new": 322, "region_pix": 464, "region_weight": 194, "regionfind": [166, 167, 171], "regiongeom": [97, 100, 104, 105, 117, 121, 163, 170, 172, 173, 174, 176, 177, 192, 208, 212, 220, 223, 235, 245, 246, 248, 250, 256, 260, 373, 374, 381, 391, 406, 407, 410, 428, 429, 432, 434, 435, 442, 446, 451, 452, 453, 456, 457, 460, 469, 479, 489, 502, 505], "regionndmap": [26, 101, 104, 105, 126, 164, 165, 170, 172, 183, 184, 186, 191, 195, 196, 208, 212, 220, 223, 225, 235, 245, 246, 250, 256, 257, 260, 356, 373, 391, 406, 407, 410, 413, 421, 424, 445, 469, 489, 548], "regions_ds9": 462, "regionsfind": [165, 166, 171, 412], "regist": 464, "registri": [55, 93, 113, 149, 161, 229, 231, 242, 243, 255, 380, 387, 403, 406, 407, 410, 419, 456, 464], "regress": 362, "regul": 385, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 182, 190, 194, 368, 387, 412, 424, 448, 461, 462], "regulargridinterpol": [261, 300, 359], "regularis": 387, "regularli": [387, 471], "reichardt": 414, "reimplement": 370, "rej_sampl": 372, "reject": [363, 364, 372], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 83, 84, 86, 100, 101, 105, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 245, 264, 277, 318, 374, 385, 410, 449, 452, 470, 516, 555], "rel_reduction_of_f_": 458, "relat": [11, 13, 65, 79, 81, 199, 278, 365, 367, 370, 372, 373, 376, 378, 379, 380, 385, 389, 406, 407, 419, 425, 444, 457, 464, 468, 483, 550, 555], "relative_variability_amplitud": 449, "relative_variability_error": 449, "relative_variability_signific": 449, "relativist": 529, "releas": [11, 51, 63, 90, 361, 363, 364, 366, 367, 373, 376, 377, 386, 390, 391, 392, 393, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 432, 433, 441, 450, 451, 468, 470, 471, 477, 478, 481, 493, 495, 496, 497, 499], "relev": [117, 272, 273, 342, 359, 365, 374, 379, 383, 388, 432, 433, 436, 450, 451, 452, 463, 465, 468, 470, 471, 477, 478, 489, 490, 557], "reli": [117, 359, 364, 365, 369, 370, 374, 378, 383, 384, 402, 407, 410, 421, 430, 440, 462, 481, 555], "reliabl": [362, 392, 438, 458, 462, 554], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 95, 364, 365, 366, 367, 372, 376, 385, 400, 419, 434, 463, 499], "remark": 434, "rememb": [359, 373, 458, 473, 553], "remi": [381, 382, 402, 403, 404, 405, 406, 407, 410, 421, 422, 423, 424, 425], "remind": [385, 442, 557], "remnant": [28, 52, 429, 443, 464, 484], "remot": 362, "remov": [13, 83, 86, 87, 91, 95, 120, 121, 124, 153, 156, 168, 181, 182, 187, 190, 191, 194, 196, 201, 203, 233, 287, 362, 366, 367, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 432, 438, 453, 457, 462, 465, 468, 482, 493, 502], "remove_column": [83, 86], "remove_indic": [83, 86], "remove_row": [83, 86], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 119, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 362, 369, 370, 378, 379, 382, 398, 401, 403, 404, 405, 406, 410, 420, 421, 424, 553], "rename_ax": [181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 421], "rename_column": [83, 86, 119], "rename_dupl": [83, 86], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 337, 359, 367, 418], "renorm": [438, 500], "renormalis": 168, "reoptim": [120, 124, 125, 200, 400, 446, 450, 458, 466, 477], "reorder_ax": [183, 184, 186, 192, 195, 196, 424], "reorgan": 410, "reorganis": 379, "repeat": [360, 440, 470], "repl": 359, "replac": [15, 16, 80, 83, 86, 95, 97, 99, 100, 104, 105, 118, 141, 142, 148, 153, 181, 182, 184, 187, 191, 192, 194, 196, 258, 270, 359, 369, 370, 373, 377, 380, 386, 392, 401, 402, 404, 406, 407, 424, 425, 444, 453], "replace_axi": [181, 182, 191, 194], "replace_column": [83, 86], "repo": [360, 367, 388, 389, 398, 411], "report": [83, 362, 375, 388, 389, 398, 412, 413, 418], "repositori": [83, 86, 359, 362, 364, 367, 369, 385, 388, 410, 419, 444, 471], "repres": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 83, 86, 97, 99, 100, 104, 105, 118, 182, 184, 186, 188, 189, 191, 193, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 259, 260, 288, 296, 306, 359, 370, 371, 372, 373, 377, 380, 381, 382, 383, 400, 424, 445, 446, 456, 458, 460, 461, 462, 464, 469, 479, 488, 489, 491, 495, 496, 497, 499, 505, 550, 551, 552, 557], "represent": [16, 19, 20, 26, 79, 80, 82, 83, 86, 99, 118, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 359, 373, 386, 400, 402, 424, 430, 456, 461, 464, 505], "reprocess": 365, "reproduc": [89, 96, 119, 360, 375, 376, 377, 379, 385, 386, 390, 392, 419, 460, 481], "reproject": [169, 183, 184, 186, 192, 195, 196, 355, 359, 365, 373, 376, 383, 404, 411, 419, 421, 425, 461, 462], "reproject_by_imag": [183, 184, 186, 192, 195, 196, 425], "reproject_to_geom": [183, 184, 186, 192, 195, 196, 421], "request": [81, 117, 119, 360, 363, 364, 366, 367, 368, 369, 370, 371, 373, 379, 383, 384, 385, 387, 389, 397, 444, 462, 481, 491], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 78, 79, 80, 81, 83, 84, 86, 90, 97, 99, 100, 104, 105, 106, 110, 118, 119, 122, 127, 137, 138, 144, 152, 160, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 288, 334, 338, 339, 357, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 381, 382, 383, 384, 385, 387, 388, 390, 392, 398, 403, 404, 405, 406, 411, 412, 414, 415, 416, 417, 420, 421, 422, 429, 434, 438, 441, 449, 451, 452, 453, 457, 459, 461, 462, 464, 468, 478, 491, 493, 506], "require_ev": 78, "required_ax": [137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 459], "required_hdu": 413, "required_irf": [16, 78, 433, 434, 437, 438, 440, 477], "required_nam": [185, 187, 188, 193], "required_paramet": [144, 152, 154], "rerun": 374, "resampl": [97, 100, 104, 105, 119, 135, 136, 141, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 195, 196, 354, 410, 412, 449, 493], "resample_axi": [119, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 354, 407, 449, 451], "resample_energy_axi": [97, 100, 104, 105, 141, 407, 412, 457], "resample_energy_edg": [432, 493], "resampled_energy_edg": 136, "resampled_map": [183, 184, 186, 192, 195, 196], "rescal": 460, "research": [375, 385], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 219, 258, 360, 407], "reset_data_cach": [97, 100, 104, 105], "reset_to_default": 219, "reshap": [183, 184, 186, 192, 195, 196, 428, 445, 459, 461], "resid": [381, 464], "residu": [70, 96, 97, 100, 104, 105, 160, 370, 371, 375, 402, 407, 413, 420, 438, 457, 458, 469, 489, 502, 552], "resolut": [52, 140, 141, 145, 182, 194, 368, 370, 372, 373, 418, 424, 456, 469], "resolv": [16, 80, 99, 118, 360, 362, 369, 373, 374, 381, 382, 394, 400, 419], "resort": 437, "resourc": [418, 473], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 79, 80, 83, 86, 99, 101, 118, 119, 128, 182, 184, 194, 196, 271, 369, 374, 385, 387, 407, 436, 438, 452, 461, 462, 470, 491, 506, 556], "respond": 385, "respons": [6, 103, 140, 141, 142, 145, 147, 148, 166, 359, 365, 366, 368, 370, 371, 372, 374, 375, 383, 385, 391, 417, 418, 419, 420, 429, 432, 433, 434, 435, 448, 452, 459, 460, 463, 468, 471, 473, 477, 478, 489, 490, 495, 497, 499, 551, 552], "rest": [26, 362, 376, 378, 456, 488], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 463], "restore_statu": [202, 204, 211, 233, 466], "restore_valu": [202, 204, 211, 233], "restrict": [83, 86, 373, 440, 457, 462], "restructur": [360, 374, 375, 376, 378, 380, 386, 389, 404, 410, 411, 412, 413, 415, 424], "result": [16, 46, 71, 80, 82, 83, 86, 87, 96, 97, 99, 100, 104, 105, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 132, 134, 145, 151, 153, 156, 169, 173, 174, 179, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 200, 211, 233, 260, 270, 288, 352, 358, 359, 360, 362, 364, 366, 368, 369, 370, 371, 372, 375, 377, 378, 381, 385, 387, 392, 395, 402, 410, 412, 413, 418, 420, 424, 425, 430, 432, 434, 435, 440, 442, 444, 445, 448, 449, 451, 452, 453, 456, 457, 458, 461, 462, 465, 466, 469, 470, 471, 477, 478, 481, 488, 491, 506, 541, 552, 554, 555], "result2": 463, "result_ecpl": 430, "result_joint": [429, 432, 440], "result_list": 352, "result_log_parabola": 430, "result_minuit": 458, "result_pwl": 430, "result_scipi": 458, "result_stack": 432, "results_joint": 441, "results_prior": 466, "results_simplex": 458, "results_t": 443, "retain": [456, 506], "retriev": [83, 86, 383, 385, 429, 430, 432, 461, 464, 465, 470, 478, 490, 505, 506], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 285, 286, 287, 288, 290, 292, 294, 295, 299, 301, 306, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 329, 330, 331, 340, 341, 342, 343, 344, 347, 349, 350, 352, 354, 355, 365, 369, 370, 371, 372, 373, 374, 382, 383, 386, 387, 403, 404, 407, 410, 413, 419, 421, 432, 434, 442, 446, 451, 452, 456, 457, 458, 460, 461, 462, 464, 466, 479, 483, 505, 506, 538, 555], "return_delta": 318, "return_diff": 318, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [375, 407, 425], "reval": 512, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 83, 86, 87, 95, 187, 233, 461, 486], "review": [362, 367, 368, 369, 372, 373, 375, 376, 378, 379, 380, 382, 383, 385, 387, 420, 421, 505], "revis": 379, "revisit": 213, "rework": 405, "rewrit": [365, 368, 375, 405, 415, 416, 418, 419, 420, 553], "rewritten": [417, 420], "rf": 455, "rgb": [354, 356, 424, 428, 432], "rglob": [78, 444, 468], "rhe": 172, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [359, 375], "rid": 365, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 83, 86, 97, 104, 117, 119, 127, 143, 217, 221, 240, 252, 274, 280, 347, 359, 373, 382, 385, 436, 442, 444, 450, 452, 468, 510, 511, 512, 519, 520, 523, 524, 526, 527, 531, 534, 535, 536, 537, 541, 542, 543, 545, 553, 554, 555, 556], "rightarrow": [516, 556], "rigid": 364, "ring": [100, 116, 158, 161, 168, 182, 183, 184, 365, 368, 375, 378, 391, 400, 404, 406, 416, 417, 418, 419, 427, 439, 443, 462, 473, 489, 492, 501, 504, 505, 552], "ring2dkernel": [158, 168], "ring_background": [427, 438, 439], "ring_bkg_mak": 503, "ring_mak": 438, "ringbackgroundestim": [365, 418], "ringbackgroundmak": [158, 161, 404, 438, 460, 503], "rise": [128, 224, 449, 543], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 362, 385], "rm": [140, 141, 145, 382, 434, 458, 495, 497, 498, 499, 512, 541, 542, 543, 544, 545, 546], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [101, 102, 105, 140, 141, 142, 416, 432], "rmf_ob": 101, "rmffile": 101, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 310, 312, 315, 316, 317, 318, 359], "roadmap": [363, 366, 375, 384, 399, 420], "roberta": [418, 419], "robust": [359, 419], "roi": [65, 375, 456, 471, 552], "roi_max": 375, "role": [418, 460], "rolf": 398, "rolk": 552, "rolke2005": [552, 555], "roll": 469, "room": 369, "root": [19, 20, 26, 117, 118, 127, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 281, 284, 359, 377, 410, 436, 481, 491, 553, 555], "rosillo": 421, "rotang": 445, "rotat": [51, 54, 166, 167, 171, 176, 212, 220, 223, 445, 502, 510, 511], "rough": [70, 375], "roughli": [112, 362, 367, 373, 375, 378, 379, 417, 438], "round": [83, 86, 183, 184, 186, 188, 192, 195, 196, 432, 505], "round_to_edg": [181, 182, 191, 194], "round_trip": [16, 80, 99, 118], "routin": 398, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 86, 132, 140, 296, 330, 353, 374, 383, 386, 421, 424, 435, 445, 446, 456, 458, 461, 468, 470, 471, 479, 488], "row_idx": [65, 83], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 456], "row_label": 353, "row_specifi": [79, 83, 86], "royalblu": 453, "rpovid": 374, "rspec": [65, 456], "rst": [362, 364, 379, 385, 388, 389, 405, 410], "rtd": 419, "rtol": [127, 334, 359], "rtol_ax": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196], "rtol_wc": 194, "ruben": 418, "rub\u00e9n": 418, "ruiz": [367, 375, 379, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 418, 419, 420], "rule": [83, 86, 248, 266, 299, 385, 461, 505], "run": [16, 78, 79, 80, 84, 88, 96, 98, 99, 103, 112, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 132, 133, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 191, 194, 200, 308, 309, 333, 352, 358, 359, 360, 366, 367, 369, 372, 374, 375, 376, 379, 381, 383, 387, 388, 389, 390, 395, 401, 402, 405, 406, 417, 419, 420, 424, 428, 429, 430, 435, 436, 437, 438, 440, 441, 442, 444, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 478, 479, 489, 490, 491, 493, 498, 500, 502, 503, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "run_fit": [15, 433, 437, 477], "run_id": [469, 479], "run_multiprocess": 493, "runner": [16, 324, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 517, 519, 525, 528, 541, 547, 548], "runtim": [368, 386], "runtimewarn": [434, 444, 471, 541], "rx": 429, "rxj": 429, "rxj1713_2016_250gev": 517, "r\u00e9gi": [365, 368, 369, 373, 374, 376, 378, 380, 381, 382, 383, 384, 386, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "r\u00e9my": [377, 410, 412, 413, 421], "s0167947313003204": 134, "s180": 278, "s2": 259, "s3": 259, "s_0": 493, "s_1": 493, "safari": [83, 86], "safe": [94, 96, 97, 100, 104, 105, 141, 142, 148, 153, 156, 161, 169, 359, 371, 373, 385, 404, 406, 407, 421, 422, 423, 424, 429, 432, 457, 462, 478, 489, 551], "safe_mask": [16, 97, 104, 433, 437, 438, 440, 477], "safe_mask_mak": [159, 429, 453, 460, 500, 502, 503], "safe_mask_mask": [432, 434, 442, 451, 460], "safemask": 470, "safemask_mak": 470, "safemaskconfig": 16, "safemaskmak": [159, 161, 380, 404, 405, 410, 412, 413, 425, 429, 432, 434, 442, 448, 451, 453, 460, 462, 470, 477, 478, 500, 501, 502, 503], "safeti": 385, "sagittariu": [33, 38], "saha": 418, "sai": [71, 364, 378, 553], "said": [359, 364, 366, 470, 471, 553], "sake": [444, 458], "saldana": [213, 214, 424, 519], "saldana21": 519, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 83, 86, 90, 95, 97, 100, 101, 104, 105, 116, 132, 133, 144, 145, 151, 152, 153, 154, 156, 157, 159, 180, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 264, 278, 352, 359, 362, 367, 369, 371, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 387, 389, 391, 392, 402, 403, 407, 410, 424, 430, 433, 434, 435, 440, 441, 444, 448, 450, 453, 456, 457, 461, 462, 463, 464, 465, 466, 469, 470, 473, 477, 489, 490, 491, 497, 505, 506, 553], "sampl": [47, 88, 98, 103, 127, 142, 144, 150, 152, 153, 154, 156, 183, 184, 186, 192, 194, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 271, 301, 310, 315, 316, 317, 318, 363, 371, 373, 374, 377, 379, 391, 398, 400, 402, 403, 406, 412, 419, 421, 424, 425, 427, 434, 447, 449, 457, 458, 473, 489, 490, 493, 498, 501, 505], "sample_axi": 310, "sample_background": [98, 103, 404], "sample_coord": [142, 153, 156, 183, 184, 186, 192, 195, 196, 404, 406, 421], "sample_edisp": [98, 103], "sample_powerlaw": 378, "sample_psf": [98, 103], "sample_sourc": [98, 103], "sample_spher": [414, 557], "sample_tim": [210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 410, 421], "sampler": [98, 310, 368, 372, 406, 410, 444], "sampler_kwarg": 88, "saniti": 418, "satisfi": [136, 160, 182, 183, 184, 288, 463, 493], "save": [15, 19, 20, 26, 79, 95, 127, 198, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 359, 367, 375, 383, 387, 440, 441, 444, 458, 462, 463, 470, 490], "savefig": [337, 395], "savez": 198, "saw": 396, "sbpl": [249, 382, 464], "sc": [83, 86], "scalar": [83, 86, 151, 182, 183, 184, 186, 192, 195, 196, 288, 378, 412, 423, 425, 461, 505], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 65, 82, 84, 91, 95, 99, 100, 105, 112, 118, 120, 121, 124, 144, 160, 188, 192, 193, 194, 196, 201, 203, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 268, 271, 287, 300, 301, 302, 318, 340, 341, 342, 352, 360, 368, 373, 374, 377, 382, 405, 410, 411, 419, 422, 423, 424, 433, 436, 445, 446, 449, 450, 451, 452, 455, 456, 459, 460, 461, 464, 465, 466, 468, 477, 479, 481, 519, 540, 541, 542, 543, 544, 545, 546, 547, 548], "scale10": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 387, 529], "scale_method": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 387, 529], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 455], "scaled_featur": 287, "scaled_features_irf": [286, 287, 465], "scaledregulargridinterpol": [66, 213, 405, 420], "scalespectralmodel": [120, 121, 124, 243, 382, 464], "scan": [19, 20, 90, 117, 119, 120, 121, 124, 125, 200, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 374, 383, 410, 446, 451, 466, 491, 493], "scan_max": [19, 20, 120, 124, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 451, 458], "scan_min": [19, 20, 120, 124, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 458], "scan_n_sigma": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 458], "scan_n_valu": [19, 20, 120, 124, 125, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 458, 466], "scan_prior": 466, "scan_valu": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 446, 458], "scargl": [374, 418, 449], "scatter": [211, 233, 380, 436, 442, 510, 511], "scenario": [83, 86, 364, 371, 381, 391, 461, 464, 482, 554], "scengin": [83, 86], "schedul": 368, "schema": [15, 16, 80, 99, 118, 375, 378], "schema_gener": [16, 80, 99, 118], "schema_json": [16, 80, 99, 118], "scheme": [16, 80, 99, 101, 102, 118, 182, 183, 184, 193, 225, 359, 365, 369, 371, 374, 381, 382, 383, 384, 386, 403, 410, 421, 425, 445, 459, 461, 464, 493, 498, 504, 505, 507], "school": 385, "scienc": [134, 183, 184, 186, 195, 196, 366, 368, 372, 375, 376, 379, 385, 396, 418, 419, 435, 441, 452, 461, 464, 465, 468, 469, 473, 481, 493, 527, 552, 553], "sciencedirect": 134, "scientif": [360, 366, 382, 385, 392], "scikit": [132, 359, 373, 376, 379, 419, 462], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 196, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 286, 300, 339, 352, 358, 359, 362, 368, 373, 376, 377, 379, 385, 396, 400, 401, 402, 403, 415, 416, 417, 420, 422, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 550, 555], "scipy_mvn": 199, "scipy_opt": 458, "scitool": 532, "scope": [372, 373, 374, 375, 378, 386, 482], "scratch": [143, 359, 369, 373, 389, 440, 462], "screen": [83, 86, 461, 479], "script": [6, 83, 86, 119, 324, 325, 326, 327, 328, 360, 365, 366, 368, 370, 373, 375, 378, 379, 385, 388, 389, 399, 400, 401, 402, 410, 411, 415, 418, 419, 420, 421, 425, 427, 432, 436, 438, 440, 441, 442, 443, 444, 446, 448, 451, 452, 455, 456, 457, 458, 460, 466, 469, 474, 477, 492, 493, 553], "scriptabl": 386, "scutum": [33, 38], "sdist": 389, "seaborn": 493, "search": [83, 86, 272, 273, 324, 359, 360, 395, 418, 419, 433, 436, 442, 443, 455, 456, 465, 477, 478, 479, 481, 493, 553], "season": 379, "sebastian": 410, "sec": [54, 79, 89, 95, 124, 318], "second": [42, 58, 79, 82, 83, 84, 86, 140, 259, 318, 321, 336, 340, 343, 348, 360, 367, 369, 371, 373, 377, 383, 385, 389, 404, 423, 432, 433, 436, 438, 440, 442, 443, 444, 445, 446, 448, 451, 452, 455, 457, 458, 460, 461, 466, 468, 473, 477, 488, 554, 557], "secpl": [252, 253, 254, 382, 464], "section": [19, 83, 86, 274, 280, 359, 360, 362, 364, 373, 375, 376, 378, 382, 385, 389, 407, 420, 435, 440, 444, 445, 448, 452, 456, 458, 462, 463, 464, 479, 481, 482, 493, 506, 551, 553, 557], "secur": 462, "sed": [113, 116, 117, 118, 119, 121, 127, 192, 213, 358, 375, 377, 383, 391, 398, 417, 430, 446, 456, 457, 477, 479, 491], "sed_fit": [427, 430, 431], "sed_fitting_gammacat_fermi": 379, "sed_typ": [19, 20, 26, 117, 118, 119, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 410, 428, 430, 432, 433, 434, 441, 442, 446, 450, 452, 456, 479, 491, 493, 529], "sed_type_init": [69, 71, 72, 74, 117, 118, 119], "sed_type_plot_default": [117, 119], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 487], "sedov_taylor_end": [52, 53, 487], "sedtypeenum": 118, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 64, 78, 79, 81, 83, 85, 86, 90, 94, 95, 96, 97, 100, 104, 105, 112, 114, 116, 119, 120, 121, 124, 126, 127, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 159, 166, 168, 176, 181, 182, 184, 186, 188, 189, 191, 194, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 265, 274, 280, 282, 283, 285, 288, 296, 312, 327, 349, 350, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 379, 380, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 415, 416, 417, 418, 419, 420, 421, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 473, 477, 479, 481, 489, 490, 493, 503, 504, 506, 532, 536, 537, 550, 552, 553, 554, 555, 557], "seed": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 234, 241, 247, 259, 262, 310, 311, 312, 315, 316, 317, 318, 359, 418, 444, 529], "seed_photon_field": [234, 529], "seem": [359, 366, 367, 370, 376, 380, 481], "seen": [359, 373, 380, 429, 436, 441, 451, 461, 464, 469], "select": [16, 78, 79, 82, 83, 84, 85, 86, 87, 91, 95, 97, 100, 104, 105, 163, 170, 183, 184, 185, 186, 188, 193, 195, 196, 202, 204, 211, 233, 248, 258, 270, 355, 356, 369, 371, 372, 373, 374, 375, 379, 381, 383, 386, 391, 393, 399, 402, 410, 414, 428, 432, 434, 435, 437, 438, 440, 441, 443, 444, 445, 448, 452, 453, 457, 458, 460, 461, 462, 465, 468, 470, 471, 473, 479, 491, 493, 497, 498, 502, 551, 553], "select_energi": [79, 490], "select_from_geom": [211, 233], "select_map_mask": 400, "select_mask": [79, 211, 233, 410, 463], "select_nested_model": 424, "select_obs_id": [86, 442], "select_observ": [86, 91, 375, 451, 465, 478, 493], "select_offset": [79, 444, 471, 490], "select_paramet": [79, 85, 453, 490], "select_phas": 369, "select_rad_max": 79, "select_rang": 86, "select_region": [79, 85, 211, 233, 373, 402, 410, 444, 445, 453, 463, 479, 490], "select_row_subset": 79, "select_sky_box": 373, "select_sky_circl": [86, 373], "select_tim": [79, 82, 84, 87, 95, 369, 383, 404, 445, 451, 490], "select_time_rang": 86, "selected_energi": 490, "selected_ev": 79, "selected_id": 490, "selected_obs_t": [86, 465, 478], "selected_offset": 490, "selected_region": 490, "selected_tim": 490, "selection_al": [112, 127], "selection_mask": [211, 233, 463], "selection_opt": [16, 112, 114, 115, 116, 120, 121, 123, 124, 125, 126, 127, 410, 432, 433, 437, 438, 440, 441, 442, 446, 450, 451, 452, 453, 462, 470, 477], "selection_vari": 86, "selectionconfig": 16, "selectionslid": [440, 448, 461, 477, 478], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 82, 83, 86, 99, 117, 118, 119, 191, 192, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 248, 249, 251, 252, 253, 254, 257, 261, 359, 360, 370, 371, 373, 376, 382, 383, 386, 387, 406, 461, 464], "semant": [373, 384], "semi": 212, "semiaxi": [212, 220, 223, 510, 511, 512], "semilogi": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 428, 445], "semimajor": 456, "semiminor": 456, "semver": 384, "send": 388, "sens": [359, 366, 369, 373, 375, 378, 379, 380, 438], "sensibl": 465, "sensit": [113, 116, 117, 118, 119, 126, 264, 372, 379, 405, 407, 417, 418, 424, 425, 427, 431, 448, 468, 473, 481, 489, 498, 501, 505], "sensitivity_estim": 428, "sensitivity_t": 428, "sensitivityestim": [113, 399, 405, 428], "sent": 364, "sentenc": [364, 379, 385], "sep": [191, 368, 376, 382, 397, 464], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 69, 70, 71, 72, 73, 74, 75, 76, 79, 86, 182, 191, 194, 348, 359, 360, 365, 366, 367, 368, 371, 372, 373, 374, 375, 378, 379, 380, 381, 406, 410, 416, 418, 419, 423, 424, 435, 438, 440, 442, 448, 452, 456, 463, 464, 465, 482, 490, 498, 499, 510, 511, 515, 516, 529, 552], "septemb": [368, 376, 378, 379, 384], "sequenc": [83, 86, 87, 95, 97, 104, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 202, 211, 233, 288, 389], "sequenti": [365, 432, 478], "seri": [83, 86, 119, 277, 318, 368, 373, 374, 410, 449], "serial": [16, 80, 83, 86, 94, 95, 96, 97, 99, 100, 104, 105, 118, 365, 370, 374, 375, 380, 383, 403, 406, 410, 412, 419, 421, 422, 423, 424, 425, 461, 464, 466, 481], "serialis": [20, 97, 100, 104, 105, 205, 206, 209, 211, 213, 215, 216, 217, 219, 221, 225, 227, 228, 230, 232, 233, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 371, 373, 375, 378, 380, 381, 382, 402, 404, 406, 410, 415, 418, 420, 421, 423, 424, 425, 466, 477, 493, 506, 548], "serializ": [16, 80, 99, 118], "serialize_as_ani": [16, 80, 99, 118], "serialize_method": [83, 86], "serializiaton": 371, "serilis": [26, 207, 208, 210, 212, 218, 220, 222, 223, 224, 226, 235, 237, 241, 245, 246, 247, 248, 250, 257, 260, 262], "sersic": 382, "sersic2d": 382, "sersicspatialmodel": 382, "serv": [83, 86, 359, 364, 371, 375, 383, 389, 412, 455, 497], "server": [381, 391, 393, 473], "servic": 418, "session": [375, 385, 492], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 83, 86, 90, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 134, 140, 142, 153, 156, 159, 160, 163, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 252, 253, 254, 256, 259, 260, 261, 270, 308, 310, 359, 360, 365, 368, 369, 371, 372, 374, 375, 376, 377, 379, 383, 384, 385, 386, 387, 389, 391, 393, 406, 412, 414, 416, 418, 421, 424, 425, 428, 429, 432, 434, 435, 436, 437, 440, 442, 443, 444, 445, 446, 450, 451, 453, 456, 457, 458, 460, 462, 464, 465, 466, 468, 470, 471, 473, 481, 489, 490, 493, 502, 504, 505, 506, 529, 550, 553, 556, 557], "set_by_coord": [183, 184, 186, 192, 195, 196, 461, 505], "set_by_idx": [183, 184, 186, 192, 195, 196, 461, 505], "set_by_pix": [183, 184, 186, 192, 195, 196, 505], "set_log": 16, "set_model": [15, 381, 433, 437, 450, 477], "set_models_paramet": 381, "set_parameter_factor": [202, 204], "set_parameters_bound": [211, 233], "set_prior": [233, 387], "set_prop_cycl": 428, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 199, "set_titl": [429, 432, 436, 438, 442, 453, 455, 458, 459, 460, 463, 502, 512, 516, 519], "set_unit": [430, 493], "set_xlabel": [428, 429, 432, 435, 453, 458, 465, 466], "set_xlim": [430, 433, 441, 453, 495, 519], "set_xscal": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "set_xtick": [512, 516], "set_ylabel": [428, 429, 432, 446, 453, 455, 458, 465, 519], "set_ylim": [428, 430, 432, 433, 434, 450, 453, 495, 519], "set_yscal": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 446, 455, 495], "set_ytick": [512, 516], "setdefault": 190, "seterr": 359, "setlevel": 442, "setter": [360, 387, 404, 410, 457], "settl": [385, 557], "setup": [13, 361, 362, 363, 366, 371, 372, 376, 379, 387, 416, 420, 473, 553], "setuptool": [411, 553], "sever": [83, 86, 165, 364, 365, 366, 373, 374, 375, 378, 383, 386, 404, 405, 406, 410, 413, 422, 423, 424, 435, 441, 456, 468, 469, 470, 493, 553, 555], "seyfert": 278, "sf": 555, "sgr": 479, "shade": [184, 192, 196, 458, 551], "shall": 362, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 96, 97, 100, 104, 105, 106, 110, 116, 117, 121, 122, 127, 131, 132, 133, 138, 140, 143, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 199, 223, 271, 288, 301, 317, 370, 373, 377, 408, 423, 430, 432, 434, 437, 442, 445, 446, 449, 451, 456, 457, 459, 460, 461, 462, 464, 468, 469, 479, 491, 505, 506, 507, 512, 516], "shape_ax": [182, 194], "share": [183, 184, 186, 190, 192, 195, 196, 359, 364, 371, 374, 378, 381, 392, 410, 412, 424, 440, 441, 462, 463, 493, 553], "sharp": [224, 349, 350, 510], "she": [369, 374], "shear": 373, "sheet": [394, 493], "shell": [52, 53, 76, 245, 246, 370, 375, 382, 391, 393, 427, 464, 507, 516, 518, 553], "shell2": [245, 427, 464, 507, 518], "shell2d": 52, "shell2spatialmodel": [242, 246, 464, 516], "shellspatialmodel": [76, 242, 245, 382, 410, 464, 515], "sherpa": [102, 105, 140, 187, 188, 191, 192, 200, 274, 280, 358, 359, 368, 376, 377, 379, 380, 390, 391, 393, 400, 414, 415, 416, 417, 419, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 506, 527, 554], "sherpa_opt": 458, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 260, 395], "shim": 366, "shini": 344, "ship": [366, 367, 376, 399, 417, 435, 448, 453, 464, 493], "shock": [50, 52, 53, 486], "short": [359, 360, 363, 364, 368, 373, 376, 379, 382, 385, 407, 449, 451, 469, 493, 494, 552, 555, 558], "short_observ": 451, "shortcut": [78, 395, 412], "shorten": 410, "shorter": [278, 359, 360, 373, 379, 384, 407, 435, 451, 464, 553], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 97, 99, 100, 103, 104, 105, 107, 109, 111, 117, 118, 119, 120, 124, 128, 129, 130, 135, 141, 142, 145, 151, 153, 156, 168, 173, 174, 179, 181, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 288, 334, 348, 349, 350, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 384, 385, 386, 388, 389, 391, 393, 394, 395, 400, 402, 424, 434, 440, 443, 444, 445, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 470, 489, 491, 493, 498, 505, 553, 554, 556, 557], "shoulder": 263, "shouldn": [79, 359, 362], "show": [11, 78, 83, 86, 121, 122, 123, 144, 163, 225, 356, 359, 360, 362, 371, 373, 374, 378, 379, 387, 389, 399, 400, 404, 412, 417, 418, 419, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 473, 477, 478, 479, 485, 486, 487, 493, 495, 496, 497, 499, 500, 502, 504, 510, 519, 551, 553, 555, 558], "show_dtyp": [83, 86], "show_in_brows": [83, 86, 442], "show_in_notebook": [83, 86], "show_nam": [83, 86], "show_progress_bar": 493, "show_row_index": [83, 86], "show_unit": [83, 86], "showcas": 466, "shower": [414, 468, 498], "shown": [19, 20, 26, 79, 151, 191, 192, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 354, 359, 366, 376, 377, 378, 386, 387, 389, 404, 406, 429, 432, 440, 442, 443, 444, 445, 449, 452, 453, 460, 463, 464, 465, 466, 468, 478, 490], "showwarn": 359, "si": [79, 182, 191, 194, 211, 233, 263, 506], "side": [194, 196, 272, 273, 359, 373], "sider": 557, "sidereal_tim": 360, "siejkowski": 419, "sig": [352, 554, 555, 556], "sight": 481, "sigma": [19, 20, 30, 32, 48, 49, 116, 117, 118, 119, 120, 124, 125, 127, 132, 133, 140, 141, 145, 151, 152, 153, 156, 199, 200, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 270, 272, 273, 279, 382, 387, 442, 443, 448, 449, 450, 458, 462, 464, 466, 477, 491, 497, 511, 526, 542, 555], "sigma1": 31, "sigma2": 31, "sigma_": [199, 511], "sigma_1": [31, 49, 144, 459], "sigma_10tev": [382, 464], "sigma_1tev": [382, 464], "sigma_2": [31, 49, 144, 459], "sigma_3": [144, 459], "sigma_err": 443, "sigma_gauss": 223, "sigma_laplac": 223, "sigma_m": 511, "sigma_nod": 464, "sigma_to_t": 555, "sigmav": 481, "sign": [201, 203, 272, 273, 362, 385, 406, 421, 491, 555], "signal": [79, 97, 100, 103, 104, 105, 168, 196, 247, 272, 273, 285, 383, 428, 432, 433, 438, 441, 450, 462, 477, 481, 496, 500, 502, 552, 554, 555, 556], "signif_avg": 479, "signific": [112, 116, 117, 118, 119, 126, 127, 134, 135, 270, 272, 273, 277, 349, 350, 357, 364, 365, 366, 367, 374, 375, 379, 380, 383, 385, 406, 407, 415, 418, 419, 424, 425, 427, 428, 432, 433, 439, 440, 441, 442, 443, 449, 450, 453, 456, 458, 470, 473, 477, 479, 489, 491, 493, 498, 505, 551, 552, 553], "significance_lima": 406, "significance_map": [438, 440], "significance_map_off": 438, "significance_mask": 462, "significance_mask_inv": 462, "significancemapestim": 406, "significantli": [410, 444, 468, 552], "signoff": 362, "silent": 421, "silicon": [391, 393], "silvia": 402, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 350, 359, 362, 371, 372, 373, 374, 375, 378, 379, 380, 383, 410, 424, 434, 449, 461, 465, 466, 479, 489, 497, 553], "similarli": [365, 367, 383, 386, 410, 456, 458, 459, 461, 462, 464, 506], "simon": [423, 424, 425], "simpifi": 368, "simpl": [50, 52, 132, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 263, 359, 360, 371, 372, 373, 374, 375, 378, 383, 386, 387, 400, 410, 414, 418, 419, 424, 428, 429, 430, 432, 433, 434, 435, 437, 440, 449, 453, 458, 461, 462, 465, 471, 477, 478, 479, 483, 493, 551, 552, 553], "simple_norm": 196, "simple_rebin_lc": 374, "simplefilt": 493, "simpler": [171, 367, 372, 373, 381], "simplest": [428, 432, 449], "simplex": [200, 458], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 160, 200, 202, 204, 359, 373, 374, 383, 392, 421, 424, 428, 429, 442, 457, 462, 463, 464, 479, 506, 553, 555], "simplic": [441, 444, 451, 458, 464, 466, 469], "simplif": [370, 382, 421], "simplifi": [127, 190, 366, 368, 370, 377, 383, 400, 403, 404, 405, 407, 410, 414, 421, 430, 436, 498, 556], "simu": [448, 452, 466], "simul": [45, 78, 79, 84, 88, 97, 100, 103, 104, 105, 107, 142, 153, 156, 318, 369, 372, 375, 379, 386, 387, 391, 398, 402, 404, 406, 412, 415, 417, 418, 419, 424, 425, 427, 431, 437, 440, 442, 447, 453, 454, 463, 466, 468, 473, 483, 489, 491, 498, 501, 550, 551], "simulate_3d": [379, 419, 427, 447, 448], "simulate_dataset": [400, 404, 405], "simulate_observ": 88, "simulated_d": 434, "simulated_data": 88, "simulated_model": 434, "simultan": [387, 452, 457, 464, 466, 489], "sin": [510, 511, 512, 546], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 79, 83, 84, 86, 120, 121, 124, 184, 194, 201, 203, 334, 359, 360, 365, 369, 373, 375, 376, 377, 378, 379, 383, 385, 386, 387, 389, 410, 420, 421, 422, 423, 424, 425, 434, 438, 440, 452, 457, 463, 464, 466, 468, 470, 525, 528, 554, 557], "sine": [247, 370, 427, 507, 549], "sine_model": 546, "sinetemporalmodel": [255, 464, 546], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 83, 84, 85, 86, 88, 90, 116, 120, 121, 124, 127, 141, 142, 153, 155, 156, 159, 163, 165, 170, 173, 174, 179, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 211, 233, 359, 365, 366, 369, 371, 372, 373, 374, 375, 376, 380, 381, 386, 387, 391, 398, 400, 405, 406, 418, 424, 425, 428, 432, 434, 436, 437, 438, 450, 452, 456, 457, 460, 461, 463, 466, 470, 471, 477, 479, 489, 491, 503, 505, 506, 550, 552], "singleobscubemak": 365, "singleobsimagemak": 365, "singleton": 312, "sinha": [371, 374, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425], "sink": 376, "sinu": [247, 464], "sinusoid": [247, 546], "sipocz": [376, 400, 402, 404, 406, 415, 416, 417, 418, 419, 420], "sip\u0151cz": 421, "sit": 362, "site": [324, 389, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 517, 525, 528, 541, 553], "situat": [373, 374, 376, 498], "six": [378, 384], "size": [19, 20, 26, 46, 47, 65, 70, 76, 83, 84, 86, 97, 98, 100, 103, 104, 105, 107, 108, 109, 111, 122, 127, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 158, 159, 165, 166, 167, 170, 171, 172, 180, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 205, 206, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 310, 311, 315, 316, 317, 318, 347, 359, 367, 370, 372, 373, 391, 393, 423, 425, 428, 434, 438, 440, 444, 451, 453, 456, 460, 461, 462, 464, 468, 469, 470, 471, 479, 489, 504, 510, 511, 557], "skeleton": 375, "sketch": 375, "skill": [362, 395], "skimag": 419, "skip": [78, 151, 347, 360, 362, 371, 373, 379, 417, 463], "skip_miss": [78, 418], "sklearn": 359, "sky": [6, 13, 41, 57, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 84, 91, 97, 100, 103, 104, 105, 112, 132, 141, 142, 153, 156, 176, 182, 183, 184, 186, 191, 192, 194, 195, 196, 211, 233, 248, 260, 263, 265, 290, 294, 295, 319, 321, 323, 346, 358, 359, 360, 372, 378, 391, 400, 402, 416, 417, 419, 432, 433, 435, 436, 438, 448, 452, 453, 456, 461, 464, 468, 469, 473, 475, 477, 478, 479, 481, 488, 489, 490, 493, 498, 499, 502, 504, 506, 510, 511, 515, 516, 517, 551, 552], "sky_circl": [86, 91, 451, 465, 478], "sky_model": [68, 69, 70, 71, 72, 73, 74, 75, 76, 109, 111, 374, 450, 451, 456, 463, 464, 478, 521], "sky_model_pntpwl": 444, "sky_reg": 455, "sky_reg_rec": 455, "sky_region": 85, "skycood": 370, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 86, 89, 91, 97, 100, 104, 105, 117, 119, 121, 123, 141, 142, 148, 153, 156, 166, 167, 169, 171, 173, 174, 176, 177, 179, 180, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 197, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 258, 260, 286, 287, 320, 321, 335, 355, 360, 370, 373, 383, 386, 428, 429, 432, 434, 435, 438, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 478, 479, 493, 497, 502, 504, 506, 514], "skycoord_from_t": 373, "skycoord_to_pixel_scale_angl": 373, "skycoordconfig": 16, "skycub": [365, 378, 416, 417, 418, 419], "skydiffusecub": [370, 382, 401, 406, 407, 419], "skydiffusemap": [370, 401], "skydir": [16, 79, 97, 100, 104, 105, 106, 110, 142, 153, 163, 182, 183, 184, 186, 192, 194, 195, 196, 432, 433, 434, 437, 438, 440, 442, 443, 444, 445, 448, 450, 453, 455, 457, 459, 460, 461, 462, 464, 469, 470, 477, 478, 500, 502, 503, 504, 506, 511, 512, 513, 514], "skydirfunct": 481, "skydisk": 401, "skydiskelong": 370, "skyellips": [400, 401, 402, 403], "skygaussian": 400, "skygaussianelong": 370, "skyimag": [365, 378, 416, 417, 418, 419], "skyimagelist": 416, "skymap": [183, 184, 186, 192, 195, 196, 373, 415, 416, 445], "skymap_band": [445, 548], "skymap_region": 445, "skymask": 417, "skymodel": [65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 97, 100, 104, 105, 109, 111, 117, 119, 125, 127, 160, 211, 229, 233, 265, 270, 370, 371, 372, 374, 380, 382, 383, 400, 404, 405, 406, 410, 419, 425, 429, 430, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 448, 450, 451, 452, 453, 456, 457, 458, 463, 466, 469, 477, 478, 488, 489, 491, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550], "skypointsourc": 403, "skyregion": [95, 97, 100, 104, 105, 121, 141, 142, 148, 153, 156, 166, 167, 171, 186, 191, 192, 196, 211, 233, 319, 322, 373, 429, 444, 446, 462, 464, 497, 502, 506], "skyspatialmodel": [370, 419], "slack": [361, 362, 366, 382, 388, 394, 399, 400, 553], "slew": 90, "slice": [79, 83, 86, 95, 97, 100, 104, 105, 114, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 258, 260, 281, 365, 407, 443, 446, 457, 468, 505], "slice_by_coord": [117, 119, 425], "slice_by_energi": [95, 97, 100, 104, 105, 117, 119, 258, 407, 457], "slice_by_idx": [97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 407, 419, 421, 446, 461, 469], "slice_by_tim": [117, 119], "slide": [368, 436, 456], "slider": 461, "sliderstyl": [440, 448, 461, 477, 478], "slightli": [112, 188], "slope": [27, 401], "slow": [83, 86, 200, 366, 375, 433, 458, 477, 478], "slower": [83, 86, 184, 359, 367, 377], "slowest": 389, "small": [350, 359, 365, 367, 373, 375, 376, 379, 381, 386, 389, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 424, 425, 450, 451, 461, 466, 468, 469, 470, 471, 511, 515, 516, 552, 553], "smaller": [27, 142, 153, 156, 171, 182, 183, 184, 186, 192, 195, 196, 352, 362, 400, 419, 444, 449, 451, 458, 461, 466, 511], "smallest": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 244, 249, 251, 252, 253, 254, 257, 261, 436], "smooth": [97, 100, 104, 105, 112, 122, 123, 132, 184, 196, 212, 249, 351, 354, 410, 415, 416, 417, 419, 420, 427, 438, 440, 442, 446, 448, 453, 457, 460, 461, 463, 469, 477, 478, 479, 507, 510, 539], "smooth_kernel": [97, 100], "smooth_radiu": [97, 100], "smoothbrokenpowerlawspectralmodel": [205, 243, 382, 405, 406, 464, 534], "sn": [45, 50, 52, 53], "sn_rate": [45, 483], "snippet": [360, 379, 493], "snr": [44, 50, 53, 65, 469, 486, 487], "snr_model": 487, "snrcat": [414, 456], "snrtruelovemcke": [50, 486, 487], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 90, 100, 105, 116, 120, 122, 124, 125, 127, 136, 180, 183, 184, 186, 188, 192, 195, 196, 200, 201, 203, 223, 260, 270, 334, 342, 349, 350, 359, 360, 362, 364, 365, 366, 367, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 386, 388, 390, 391, 393, 395, 400, 402, 410, 420, 422, 423, 429, 432, 434, 436, 437, 442, 443, 444, 448, 450, 455, 456, 458, 461, 462, 464, 466, 468, 469, 470, 473, 478, 493, 502, 506, 512, 516, 553, 554, 555, 556], "social": 385, "soft": 278, "softwar": [183, 184, 186, 195, 196, 373, 374, 376, 385, 386, 389, 461], "solar": 52, "sole": [369, 385], "solid": [181, 182, 191, 194, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 263, 375, 398, 400, 401, 402, 419, 438, 460, 461, 468, 496, 502, 552], "solid_angl": [181, 182, 191, 194, 461, 506], "solut": [19, 20, 26, 52, 140, 205, 206, 209, 213, 215, 216, 217, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 360, 362, 364, 366, 367, 372, 373, 375, 376, 377, 379, 381, 383, 387, 392, 489, 491, 493, 556], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 362, 367, 369, 370, 371, 372, 412, 493], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 78, 80, 83, 86, 99, 118, 169, 190, 288, 296, 362, 364, 365, 366, 367, 368, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 389, 391, 392, 393, 394, 395, 396, 398, 400, 402, 410, 411, 413, 415, 417, 418, 419, 424, 428, 429, 430, 432, 434, 436, 437, 438, 441, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 463, 464, 466, 468, 469, 478, 479, 481, 482, 489, 490, 493, 498, 503, 505, 552, 553, 554, 555, 557], "some_class": 359, "some_map": 151, "some_map_convolv": 151, "somehow": [367, 373, 378, 481], "someon": [362, 364, 379], "someth": [83, 86, 359, 360, 361, 362, 364, 367, 373, 376, 377, 379, 389, 391, 393, 435, 456, 506, 553], "sometim": [19, 20, 79, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 337, 359, 362, 366, 373, 379, 389, 391, 458, 552, 557], "somewhat": [376, 468], "somewher": [362, 376, 389], "soon": [362, 373, 389], "sort": [78, 79, 83, 86, 96, 132, 328, 359, 376, 401, 479], "sort_kei": 328, "sortedarrai": [83, 86], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 364, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 389, 391, 396, 398, 400, 404, 405, 410, 411, 416, 417, 418, 419, 424, 425, 427, 430, 431, 433, 434, 435, 437, 438, 439, 440, 441, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 467, 469, 470, 471, 473, 475, 477, 478, 481, 482, 487, 489, 490, 491, 493, 498, 501, 502, 505, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 554, 555], "source1": 464, "source2": 464, "source_1": [370, 375], "source_2": 370, "source_42": 375, "source_fermi_3fgl": 430, "source_fermi_3fhl": 430, "source_gammacat": 430, "source_irf_model": 370, "source_librari": 468, "source_model": 532, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 456, 479], "source_name_alia": 56, "source_name_kei": 56, "source_po": [438, 442, 460], "source_population_model": [379, 404], "source_posit": [428, 443, 465], "sourcebackground": 370, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 373, 410, 456, 462, 479, 488], "sourcecatalog1lhaaso": [55, 68, 456], "sourcecatalog2fhl": [55, 69, 456, 488], "sourcecatalog2hwc": [55, 70, 456, 488], "sourcecatalog3fgl": [55, 71, 430, 456, 488], "sourcecatalog3fhl": [55, 72, 430, 456, 463, 479], "sourcecatalog3hwc": [55, 73, 456, 488], "sourcecatalog4fgl": [55, 74, 412, 456, 488], "sourcecataloggammacat": [55, 75, 430, 456], "sourcecataloghgp": [55, 76, 77, 456, 488], "sourcecataloglargescalehgp": 65, "sourcecatalogobject": [68, 75, 76, 77, 456, 488], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject3fgl": 60, "sourcecatalogobject3fhl": 61, "sourcecatalogobject3hwc": 62, "sourcecatalogobject4fgl": 63, "sourcecatalogobjectfermibas": [69, 71, 72, 74], "sourcecatalogobjectgammacat": 64, "sourcecatalogobjecthgp": [65, 77, 399, 456], "sourcecatalogobjecthgpscompon": 65, "sourcecatalogobjecthwcbas": [70, 73], "sourceevalu": 370, "sources_flux_map": 436, "sourcetempl": 370, "south": [444, 445], "south_z20_50h": [78, 138, 142, 143, 144, 153, 428, 435, 448, 452, 459, 468], "south_z40_50h": 468, "southern": 468, "space": [83, 86, 97, 100, 104, 105, 193, 196, 256, 257, 299, 317, 358, 359, 369, 375, 381, 453, 457, 458, 461, 505, 529, 538], "span": 465, "spars": [182, 183, 184, 186, 191, 194, 195, 196, 401, 410, 418, 445, 461], "sparsif": 383, "sparsifi": [183, 184, 186, 195, 196], "spatail": 127, "spatial": [1, 46, 48, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 97, 100, 104, 105, 107, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 165, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 202, 204, 207, 208, 211, 212, 219, 220, 223, 233, 235, 237, 242, 245, 246, 248, 250, 256, 258, 260, 270, 352, 354, 359, 365, 368, 371, 372, 373, 375, 377, 378, 383, 391, 399, 400, 402, 403, 404, 405, 407, 410, 418, 419, 421, 424, 425, 427, 430, 433, 435, 437, 440, 441, 443, 444, 445, 446, 448, 452, 453, 456, 457, 460, 463, 467, 469, 473, 477, 481, 482, 489, 491, 493, 494, 504, 505, 518, 550, 551, 552], "spatial_bin_s": 107, "spatial_bin_size_min": 107, "spatial_model": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 109, 111, 127, 212, 219, 248, 258, 270, 374, 404, 436, 440, 442, 443, 444, 445, 448, 450, 451, 456, 457, 463, 464, 469, 478, 509, 510, 511, 512, 513, 514, 515, 516, 517], "spatial_model_point": 444, "spatial_model_registri": 464, "spatial_par": 382, "spatial_typ": 382, "spatial_width": 107, "spatial_width_max": 107, "spatialbackground": 370, "spatialcircleconfig": 16, "spatialconst": 370, "spatialgaussian": 370, "spatialmodel": [68, 69, 70, 71, 72, 73, 74, 75, 76, 207, 208, 212, 219, 220, 223, 235, 237, 245, 246, 248, 256, 258, 260, 370, 382, 404, 419, 423, 456, 464, 478, 481, 488, 507, 550], "spatialtempl": 370, "spatiamodel": 151, "speak": 458, "spec": [76, 105, 359, 373, 415, 440, 445, 456, 468, 478], "spec_model_tru": 453, "special": [83, 86, 223, 359, 369, 371, 373, 374, 382, 385, 386, 399, 437, 444, 456, 457, 463, 464], "specialis": [373, 379], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 81, 82, 83, 86, 89, 97, 100, 105, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 159, 173, 174, 179, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 200, 225, 258, 270, 348, 358, 359, 360, 362, 364, 369, 371, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 389, 391, 392, 404, 407, 410, 412, 421, 422, 424, 429, 432, 434, 435, 438, 440, 441, 446, 448, 452, 453, 457, 458, 459, 461, 462, 465, 466, 471, 473, 479, 489, 490, 491, 493, 495, 496, 497, 499, 504, 505, 506, 557], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 83, 84, 86, 87, 91, 97, 99, 100, 104, 105, 112, 114, 117, 118, 119, 120, 122, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 158, 169, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 211, 225, 233, 270, 288, 290, 294, 299, 346, 369, 376, 381, 384, 392, 403, 406, 410, 434, 437, 440, 443, 444, 446, 448, 457, 458, 459, 460, 461, 463, 464, 468, 478, 489, 491, 504], "spectra": [26, 104, 105, 120, 125, 136, 243, 263, 270, 365, 368, 370, 372, 374, 378, 382, 398, 402, 415, 419, 429, 434, 435, 441, 445, 450, 452, 453, 457, 458, 460, 464, 466, 481, 489, 491, 493, 552], "spectral": [1, 19, 20, 26, 52, 53, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 97, 100, 104, 105, 112, 116, 117, 119, 120, 121, 124, 126, 127, 131, 151, 153, 156, 160, 202, 204, 205, 206, 209, 211, 213, 215, 216, 217, 219, 221, 225, 227, 228, 230, 231, 233, 234, 236, 238, 239, 240, 243, 244, 248, 249, 251, 252, 253, 254, 257, 258, 259, 261, 263, 264, 278, 315, 365, 368, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 383, 391, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 431, 435, 437, 440, 443, 444, 445, 446, 448, 450, 451, 452, 453, 456, 457, 458, 460, 462, 463, 466, 467, 468, 469, 477, 478, 481, 482, 488, 489, 490, 491, 492, 493, 494, 500, 501, 502, 505, 509, 510, 511, 512, 513, 514, 515, 516, 517, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 554], "spectral_analysi": [427, 431, 432], "spectral_analysis_hli": [427, 431, 433], "spectral_analysis_rad_max": [427, 431, 434], "spectral_cub": 411, "spectral_index": [19, 20, 26, 52, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "spectral_index_error": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 424], "spectral_irf_model": 370, "spectral_model": [64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 104, 105, 109, 111, 116, 125, 127, 131, 160, 211, 219, 231, 233, 248, 258, 270, 374, 377, 381, 382, 383, 387, 407, 429, 430, 432, 434, 435, 436, 440, 441, 442, 443, 444, 445, 448, 450, 451, 452, 453, 456, 457, 458, 463, 464, 466, 469, 478, 479, 491, 500, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "spectral_model1": 452, "spectral_model2": 452, "spectral_model_pwl": 444, "spectral_model_registri": 464, "spectral_par": 382, "spectral_point": 375, "spectral_typ": 382, "spectralbackground": 370, "spectralbackgroundmodel": 371, "spectralcompoundmodel": 370, "spectralconst": 370, "spectralevalu": 370, "spectralexponentialcutoffpowerlaw3fgl": 378, "spectralgaussian": [370, 402], "spectralmodel": [19, 20, 69, 71, 72, 74, 75, 76, 96, 112, 116, 117, 119, 121, 126, 131, 151, 153, 156, 160, 205, 206, 209, 211, 213, 215, 216, 217, 219, 221, 227, 228, 230, 233, 234, 236, 238, 239, 240, 244, 248, 249, 252, 253, 254, 257, 258, 261, 263, 370, 371, 374, 377, 383, 407, 410, 417, 424, 456, 464, 478, 479, 488, 507, 550], "spectralregion": 373, "spectraltempl": 370, "spectrum": [19, 20, 26, 70, 73, 93, 95, 96, 97, 100, 101, 104, 105, 112, 117, 119, 121, 124, 126, 128, 151, 153, 156, 161, 165, 169, 170, 183, 184, 186, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 263, 264, 278, 356, 365, 370, 371, 374, 375, 378, 379, 380, 391, 401, 402, 403, 404, 406, 410, 412, 415, 416, 417, 418, 419, 421, 423, 427, 428, 429, 430, 431, 433, 440, 441, 444, 445, 446, 452, 455, 456, 457, 462, 464, 468, 469, 473, 477, 479, 481, 489, 493, 498, 501, 506, 520, 523, 524, 526, 527, 531, 532, 534, 535, 536, 537, 550, 553], "spectrum_analysi": 432, "spectrum_dataset": [136, 371, 453, 457], "spectrum_dataset_1": 371, "spectrum_dataset_2": 371, "spectrum_dataset_empti": [453, 460], "spectrum_dataset_mak": [453, 460], "spectrum_dataset_on_off": 453, "spectrum_fitting_with_sherpa": 379, "spectrum_mak": 428, "spectrum_simul": [379, 427, 431, 435], "spectrumanalysisiact": [375, 403, 417], "spectrumdataset": [93, 94, 95, 97, 100, 105, 124, 126, 136, 164, 165, 169, 170, 219, 380, 401, 402, 403, 404, 405, 406, 407, 410, 413, 428, 429, 432, 434, 435, 442, 451, 452, 453, 458, 460, 466, 489, 502, 554], "spectrumdatasetmak": [161, 404, 410, 428, 429, 432, 434, 435, 442, 451, 452, 453, 460, 502], "spectrumdatasetonoff": [93, 100, 101, 102, 104, 125, 126, 136, 164, 165, 270, 356, 374, 401, 402, 403, 405, 406, 422, 423, 424, 428, 429, 432, 433, 435, 441, 442, 450, 453, 457, 458, 460, 466, 491, 554], "spectrumdatasetonoffstack": 403, "spectrumdatasetsonoff": 371, "spectrumenergygroup": 418, "spectrumevalu": 406, "spectrumextract": [374, 401, 404, 417], "spectrumfit": [401, 417, 418, 419], "spectrumobserv": [371, 401, 417], "spectrumobservationlist": [401, 416], "spectrumobservationstack": 416, "spectrumonoffdataset": 374, "spectrumresult": 401, "spectrumsimul": [402, 416, 419], "spectrumstack": 418, "spectrumstat": 402, "specutil": 373, "speed": [127, 288, 362, 392, 402, 404, 412, 418, 419, 458], "spell": [364, 493], "spend": [372, 379], "spent": [366, 460], "sphere": [47, 316, 398, 400, 505, 510, 511, 514], "spherepointpick": 316, "spheric": [47, 359, 400, 505, 551], "sphericalcircleskyregion": [378, 453, 479], "sphinx": [362, 366, 379, 389, 401, 405, 412, 418, 419, 421, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "sphinx_gallery_conf": 389, "sphinx_gallery_thumbnail_numb": [360, 432, 434, 436, 438, 443, 446, 459, 519], "spill": 460, "spin": [50, 51, 54, 402, 485], "spir": [400, 419], "spiral": [33, 34, 38, 45, 414], "spiralarm": [33, 38, 45, 418, 483], "spiralarm_index": [33, 34, 38], "spirit": 385, "split": [19, 20, 83, 86, 87, 109, 111, 117, 119, 183, 184, 186, 192, 195, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 365, 367, 369, 371, 373, 374, 378, 380, 382, 391, 407, 425, 451, 464, 482, 558], "split_by_axi": [183, 184, 186, 192, 195, 196], "split_template_model": [109, 111], "sporad": 386, "spot": 359, "spread": [78, 84, 144, 153, 156, 359, 381, 407, 428, 436, 459, 498, 552], "spring": [369, 420], "sprint": [367, 368, 372, 375, 376, 377, 378, 380], "spuriou": 132, "sqrt": [19, 20, 30, 31, 32, 65, 97, 100, 104, 105, 112, 117, 119, 122, 127, 183, 184, 186, 188, 192, 195, 196, 199, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 271, 279, 300, 301, 302, 371, 429, 432, 436, 440, 446, 448, 449, 453, 456, 458, 460, 461, 463, 469, 477, 478, 479, 491, 511, 512, 515, 516, 526, 555], "sqrt_space": [378, 404], "sqrt_t": [112, 116, 117, 119, 127, 132, 136, 272, 273, 352, 383, 395, 407, 429, 432, 433, 436, 438, 440, 442, 453, 456, 457, 462, 470, 477, 479, 491, 553, 555], "sqrt_ts_min": [136, 432], "sqrt_ts_threshold_ul": [69, 71, 72, 74, 116, 117, 118, 119, 121, 127, 446, 450, 456, 457, 477, 479], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 97, 100, 117, 118, 140, 141, 142, 148, 153, 156, 159, 180, 194, 196, 258, 276, 374, 377, 407, 462, 466, 481, 491, 505, 553, 554, 555, 556], "squash": [142, 181, 182, 185, 187, 188, 191, 193, 194, 424, 428, 438, 457, 461], "squeez": [428, 459], "sr": [137, 138, 139, 150, 181, 182, 191, 194, 208, 260, 263, 428, 435, 437, 440, 442, 448, 452, 456, 457, 459, 461, 464, 468, 469, 498, 509, 517], "src": [372, 443, 489], "src_above_bkg": 443, "src_event": [444, 445], "src_posit": [444, 445], "srcmap": [182, 183, 184, 186, 195, 196, 461], "ssc": [58, 60, 61, 63, 234, 379, 532], "ssc_model": 234, "st": [53, 458, 469], "stabil": [19, 20, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 384, 448], "stabl": [11, 83, 86, 191, 200, 288, 366, 367, 368, 375, 376, 379, 384, 388, 389, 390, 392, 404, 405, 406, 412, 417, 419, 421, 458, 490], "stack": [16, 79, 82, 87, 95, 96, 97, 99, 100, 104, 105, 116, 117, 119, 141, 142, 148, 153, 156, 159, 183, 184, 185, 186, 191, 192, 195, 196, 199, 202, 204, 258, 329, 359, 371, 374, 375, 381, 386, 400, 403, 404, 407, 410, 415, 416, 421, 422, 424, 429, 433, 437, 441, 442, 450, 453, 457, 458, 460, 465, 466, 477, 478, 490, 491, 500, 503, 552], "stack_dataset": [159, 453, 460], "stack_reduc": [95, 136, 403, 429, 432, 434, 440, 441, 442, 453, 457, 458, 491], "stacked_dataset": [442, 443], "stacked_fit": 432, "stacked_on_off": 438, "stackedobscubemak": 365, "stackedobsimagemak": 365, "stackoverflow": 327, "stage": [362, 375, 438, 440, 452, 457, 489, 552], "stai": 371, "stand": 364, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 82, 83, 86, 91, 184, 196, 200, 264, 287, 341, 342, 359, 360, 362, 364, 368, 370, 371, 372, 375, 377, 383, 385, 386, 395, 402, 403, 419, 425, 428, 433, 435, 438, 441, 443, 445, 448, 451, 452, 455, 458, 461, 464, 465, 466, 468, 471, 473, 477, 489, 492, 497, 505, 551, 552, 553], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [91, 286, 465], "standardis": [331, 332, 344, 418], "standardise_unit": [331, 345], "standpoint": 359, "stapel": 425, "star": [36, 40, 213], "starmap": [304, 308, 309], "start": [16, 53, 79, 82, 84, 85, 86, 87, 89, 95, 124, 132, 193, 210, 211, 218, 222, 224, 225, 226, 233, 241, 247, 259, 262, 359, 360, 362, 364, 366, 367, 368, 369, 372, 373, 375, 376, 384, 385, 387, 388, 389, 393, 394, 395, 396, 398, 403, 412, 415, 416, 417, 418, 419, 424, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 456, 461, 464, 468, 469, 473, 477, 479, 480, 493, 497, 551], "start_po": [121, 321, 446], "startswith": 359, "stat": [6, 95, 96, 100, 105, 117, 119, 120, 121, 124, 125, 127, 200, 201, 203, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 352, 359, 371, 379, 387, 389, 395, 402, 404, 405, 406, 407, 410, 416, 419, 420, 421, 425, 429, 430, 432, 433, 434, 438, 440, 441, 442, 443, 446, 449, 453, 458, 466, 469, 477, 478, 491, 553, 554, 555], "stat_arrai": [94, 96, 97, 100, 104, 105, 387], "stat_contour": 200, "stat_max": [272, 273], "stat_nul": [117, 119, 120, 121, 124, 125, 127, 272, 273, 425, 436, 446, 491], "stat_per_bin": 371, "stat_profil": [200, 458, 466, 493], "stat_scan": [117, 119, 120, 121, 124, 125, 200, 271, 432, 433, 458, 466, 491], "stat_sum": [94, 95, 96, 97, 100, 104, 105, 387, 423, 424, 440, 452, 457, 463, 493], "stat_surfac": [200, 407, 493], "stat_typ": [96, 97, 100, 104, 105, 405, 440, 452, 457, 463], "state": [16, 45, 47, 193, 200, 359, 365, 369, 371, 375, 379, 381, 383, 433, 477, 498, 519], "stateless": 386, "statement": [359, 362, 366, 423, 425, 482], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 98, 101, 102, 103, 112, 116, 117, 119, 120, 121, 124, 125, 127, 144, 152, 163, 169, 170, 182, 183, 184, 186, 192, 193, 195, 196, 205, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 238, 239, 240, 241, 245, 246, 247, 249, 252, 253, 254, 259, 261, 262, 356, 367, 370, 389, 401, 418], "staticmethod": [370, 382, 387, 464, 466], "statist": [6, 19, 20, 26, 75, 94, 95, 96, 97, 100, 104, 105, 116, 117, 119, 120, 121, 124, 125, 127, 133, 136, 163, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 244, 249, 251, 252, 253, 254, 257, 261, 270, 271, 272, 273, 274, 275, 280, 285, 371, 374, 377, 378, 379, 381, 387, 401, 405, 406, 407, 410, 412, 424, 425, 428, 433, 435, 436, 437, 438, 440, 442, 446, 448, 449, 450, 452, 453, 457, 458, 460, 466, 477, 478, 489, 491, 493, 503, 551, 552], "statu": [19, 20, 26, 117, 119, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 359, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 420, 425, 463, 464], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 287, 435, 449, 469], "stddev": 66, "stderr": 359, "stdout": [296, 359], "steep": 435, "stefan": [414, 425], "step": [19, 20, 26, 116, 120, 124, 125, 127, 200, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 359, 362, 365, 366, 369, 370, 371, 373, 374, 375, 377, 380, 384, 387, 388, 389, 395, 412, 419, 420, 424, 428, 432, 434, 437, 440, 442, 443, 444, 445, 451, 452, 457, 458, 460, 464, 466, 477, 478, 479, 493, 501, 506], "stepprior": 387, "stepsiz": 158, "steradian": 191, "stewart": [127, 281, 436, 552], "stewart2009": [127, 552, 555], "stick": [362, 382, 400, 419, 458, 552], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 366, 367, 369, 372, 373, 376, 378, 379, 380, 383, 384, 386, 388, 389, 417, 418, 419, 464, 466, 479, 491, 515, 516, 553], "stipul": 385, "stone": [359, 379], "stop": [16, 52, 79, 82, 84, 85, 86, 87, 95, 124, 127, 193, 210, 211, 218, 222, 224, 225, 226, 233, 241, 247, 259, 262, 369, 395, 424, 433, 437, 438, 440, 451, 453, 458, 469, 477], "storag": [78, 493], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 78, 79, 81, 82, 83, 86, 117, 118, 119, 122, 124, 151, 164, 165, 183, 184, 186, 192, 195, 196, 200, 201, 203, 211, 233, 342, 359, 362, 365, 367, 368, 369, 371, 372, 375, 377, 381, 383, 385, 386, 389, 407, 410, 411, 429, 434, 435, 444, 445, 449, 453, 457, 458, 459, 460, 461, 462, 465, 468, 469, 470, 471, 479, 489, 490, 493, 498, 499, 500, 505, 506, 529, 550, 551, 553, 557], "store_per_ob": 375, "store_trac": [200, 458], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 114, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 160, 163, 164, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 288, 300, 309, 324, 325, 341, 342, 344, 348, 352, 353, 355, 373, 386, 432, 434, 460, 464, 470], "str3": [83, 86], "straight": [360, 391, 493], "straightforward": [389, 556], "strang": 359, "strategi": [359, 366, 373, 424, 458, 556], "stream": 359, "streil": [387, 423, 424, 425], "strength": [51, 54, 387, 529], "stretch": [183, 184, 186, 192, 195, 196, 349, 350, 354, 436, 440, 446, 448, 460, 461, 463, 469, 477, 478, 479], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 97, 99, 100, 118, 141, 142, 148, 153, 156, 159, 194, 196, 258], "strict_bound": 188, "strictli": [16, 80, 99, 118, 188], "strike": 489, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 86, 88, 99, 117, 118, 119, 120, 121, 124, 127, 144, 150, 152, 154, 159, 182, 183, 184, 186, 188, 189, 191, 192, 194, 195, 196, 201, 203, 211, 233, 288, 306, 348, 359, 372, 373, 376, 378, 385, 386, 398, 402, 410, 412, 433, 456, 462, 464, 477, 505, 506], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 372, 379, 432, 466], "stronger": 466, "strongli": [278, 374, 376, 385, 410, 437, 458, 466], "structur": [83, 86, 194, 363, 364, 365, 368, 370, 372, 375, 379, 382, 385, 386, 397, 403, 404, 406, 410, 413, 425, 427, 446, 457, 460, 461, 462, 464, 473, 480, 481, 488, 490, 494, 505, 506, 553], "stuck": 553, "student": 362, "studi": [46, 263, 372, 375, 383, 392, 419, 429, 430, 441, 442, 443, 446, 448, 451, 452, 458, 461, 464, 468, 483, 493, 502, 554], "stuff": [360, 389, 493], "stuff1": 359, "stuff2": 359, "style": [83, 86, 96, 183, 184, 186, 192, 195, 196, 356, 362, 368, 385, 414, 416, 440, 448, 459, 461, 477, 478, 493, 506], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 109, 111, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 183, 184, 185, 186, 188, 192, 193, 195, 196, 199, 359, 362, 366, 368, 369, 373, 378, 379, 380, 381, 386, 389, 398, 400, 404, 406, 407, 415, 417, 418, 442, 444, 460, 462, 464, 470, 471, 489, 492, 493, 501, 551, 553, 557], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 118, 288, 373, 416, 419, 464, 466], "subcompon": [65, 76], "subfold": [367, 410], "submit": [364, 385], "submodul": [367, 400, 401, 406, 461, 479, 491], "subok": 288, "subpackag": [380, 386, 403, 410, 414], "subplot": [64, 65, 183, 184, 186, 192, 195, 196, 428, 429, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 446, 450, 452, 453, 455, 458, 459, 461, 462, 463, 465, 466, 493, 495, 502, 512, 516, 519], "subplot_kw": [436, 438, 442, 453, 462, 502], "subplots_adjust": 455, "subsect": [379, 461], "subsequ": [277, 368], "subset": [78, 79, 83, 86, 120, 124, 234, 386, 414, 415, 442, 453, 463, 468, 470, 492, 551], "subspac": 373, "substanti": [83, 86], "substitut": 554, "substr": [211, 233], "subtract": 434, "succed": 388, "succeed": 117, "success": [16, 80, 96, 99, 117, 118, 119, 120, 121, 124, 125, 127, 200, 387, 410, 429, 430, 432, 433, 434, 436, 440, 441, 442, 446, 450, 453, 458, 463, 469, 477, 478, 517], "successfulli": [96, 429, 430, 432, 433, 434, 440, 441, 442, 452, 453, 458, 469, 477, 478], "sudo": 392, "suffer": [376, 453], "suffic": 452, "suffici": [362, 365, 372, 385, 424], "suffix": [96, 117, 360, 370, 382, 388, 464, 505, 507], "suggest": [362, 364, 366, 369, 373, 379, 381, 383, 387, 436, 444, 445, 493, 553], "suit": [184, 359, 506], "suitabl": 184, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 97, 100, 104, 105, 119, 120, 121, 123, 124, 125, 127, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 263, 272, 273, 275, 355, 359, 369, 370, 372, 381, 383, 387, 401, 425, 440, 444, 453, 455, 457, 466, 469, 477, 478, 479, 489, 499, 552, 554], "sum_": 489, "sum_band": [183, 184], "sum_i": 122, "sum_j": 489, "sum_k": 489, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [183, 184, 186, 192, 195, 196, 347, 419, 438, 440, 446, 453, 457, 460, 462, 463, 469, 478], "sum_over_energy_group": [116, 120, 127, 442, 446], "summar": [368, 481], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 273, 296, 300, 310, 333, 346, 360, 362, 379, 397, 429, 433, 451, 452, 457, 468, 477, 493], "summaris": [359, 364, 366, 379], "summat": [272, 273, 365], "summer": 367, "sun": 41, "sunpi": [376, 379, 380], "super": [182, 184, 252, 253, 254, 427, 444, 471, 507, 539, 541], "superexpcutoffpowerlaw3fglspectralmodel": [243, 382, 464, 535], "superexpcutoffpowerlaw4fgldr3spectralmodel": [243, 464, 536], "superexpcutoffpowerlaw4fglspectralmodel": [243, 382, 464, 537], "superfici": 481, "superflu": [369, 453], "supernova": [28, 52, 429, 443, 464, 483, 484], "superpixel": 182, "supersed": [182, 183, 184, 194, 195, 196], "supervisor": 375, "suppli": [83, 86, 234, 452], "support": [79, 81, 82, 83, 84, 85, 86, 87, 90, 95, 97, 100, 104, 105, 108, 119, 135, 146, 151, 182, 183, 184, 185, 186, 193, 194, 195, 196, 200, 211, 233, 358, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 386, 392, 396, 399, 400, 402, 403, 404, 405, 406, 407, 410, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 433, 435, 437, 440, 442, 448, 452, 455, 456, 457, 461, 466, 468, 469, 470, 471, 477, 492, 498, 505, 506, 548, 550, 551, 553], "suppos": [225, 259, 364, 371, 552, 554], "suppress": [140, 141, 145, 493], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 359, 362, 364, 375, 388, 432, 450, 461, 493, 553], "surfac": [28, 30, 35, 36, 39, 40, 45, 200, 248, 263, 314, 378, 407, 458, 464, 483], "surface_brightness_err": 456, "surprisingli": 373, "surround": [52, 306, 359], "survei": [62, 65, 120, 213, 366, 369, 379, 395, 427, 468, 473, 474, 483, 488, 493, 552], "survey_map": [427, 474, 475], "suspect": 555, "suss": [368, 385], "svg": 359, "swap": 182, "swept": 52, "swh": 385, "swhid": 385, "switch": [270, 359, 366, 369, 412, 416], "switcher": 388, "sy": [359, 394], "syllabl": 493, "symbol": 462, "symmetr": [97, 100, 104, 105, 116, 125, 127, 171, 180, 184, 220, 359, 370, 400, 412, 415, 430, 452, 460, 466, 468, 481, 491, 499, 510, 511, 555], "symmetri": [184, 400], "sync": 419, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 385, "synchrotron": [234, 406, 529], "syntact": [83, 86], "syntax": [16, 83, 86, 360, 375, 378, 404, 421, 553], "synthesi": [483, 484], "synthet": 398, "system": [11, 79, 83, 86, 138, 146, 147, 182, 183, 184, 186, 189, 191, 194, 195, 196, 211, 233, 359, 365, 370, 372, 376, 379, 380, 384, 385, 387, 392, 400, 418, 424, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 504, 505, 551, 553, 557], "systemat": [370, 383, 385, 386, 407, 432, 450, 460, 491, 552, 554], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 65, 67, 79, 80, 82, 83, 84, 86, 99, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 127, 134, 135, 140, 180, 193, 211, 225, 233, 270, 272, 273, 286, 331, 335, 358, 359, 360, 362, 364, 366, 367, 369, 371, 373, 375, 376, 377, 378, 379, 382, 383, 384, 386, 389, 390, 391, 393, 395, 407, 411, 414, 415, 416, 419, 424, 428, 429, 432, 437, 440, 442, 443, 446, 448, 449, 450, 453, 455, 456, 458, 460, 461, 462, 464, 465, 466, 468, 469, 481, 485, 486, 487, 489, 491, 493, 502, 540, 541, 542, 543, 544, 545, 546, 551, 552, 553, 556, 557], "t0": [218, 241, 444, 451, 452, 541, 545], "t1": [83, 86], "t2": [83, 86], "t_": [52, 53, 277, 498, 541, 542, 543, 544, 545, 546, 554], "t_0": 545, "t_b": 554, "t_decai": [224, 543], "t_delta": [98, 103, 193, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262], "t_i": 277, "t_j": 489, "t_live": [79, 84], "t_max": [210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 372, 383], "t_min": [210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 372, 383], "t_observ": [79, 84], "t_r": 225, "t_ref": [218, 222, 224, 225, 226, 241, 247, 259, 423, 424, 444, 445, 452, 464, 541, 542, 543, 544, 545, 546, 547, 548], "t_rise": [224, 543], "t_start": [82, 490], "t_stop": [52, 82, 490], "tab": [140, 364, 440, 446, 450, 466, 502], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558], "table_arrai": [83, 86], "table_associ": 65, "table_bkg_src": 443, "table_class": [83, 86], "table_compon": [65, 456], "table_filenam": 26, "table_from_row_data": 424, "table_hdu": 82, "table_identif": 65, "table_large_scale_compon": [65, 456], "table_model": [261, 382], "table_oth": 329, "tableau": 493, "tableclass": [83, 86], "tablegroup": [83, 86], "tableid": [83, 86], "tableiloc": [83, 86], "tableindic": [83, 86], "tableloc": [83, 86], "tablelocindic": [83, 86], "tablemodel": [370, 420], "tablepsf": [380, 398, 400], "tablepsfcheck": 416, "tabul": 481, "tabular": [464, 538], "tackl": 368, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 80, 83, 86, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 183, 184, 186, 192, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 256, 257, 258, 259, 260, 261, 384, 387, 388, 407, 421, 459, 464, 466, 512, 516], "tail": [468, 553], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 97, 100, 104, 105, 116, 138, 158, 160, 192, 194, 200, 211, 233, 248, 334, 357, 359, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 383, 389, 405, 406, 407, 410, 412, 420, 421, 423, 424, 425, 428, 429, 434, 435, 444, 445, 446, 452, 453, 458, 460, 461, 462, 464, 465, 466, 468, 478, 479, 490, 493, 506, 522, 554, 555, 556], "taken": [15, 27, 83, 86, 97, 100, 104, 105, 117, 119, 143, 151, 170, 176, 178, 192, 193, 196, 200, 280, 360, 364, 368, 372, 423, 432, 440, 441, 453, 459, 462, 463, 468, 479, 489, 491, 502, 503, 555], "talk": [362, 364, 366, 376, 385], "tan": [184, 191, 373, 402, 432, 461, 469, 502], "tandem": 481, "tangent": [166, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260], "tangenti": [182, 506], "tar": [389, 468], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 97, 100, 104, 105, 108, 112, 116, 118, 127, 141, 142, 153, 156, 173, 174, 178, 179, 183, 184, 186, 188, 192, 195, 196, 365, 366, 372, 385, 388, 416, 429, 434, 442, 451, 460, 462, 478], "target_nam": 502, "target_posit": [166, 429, 432, 434, 442, 450, 451, 478], "target_radec": 84, "targetmetadata": 118, "task": [309, 379, 383, 385, 386, 388, 389, 420, 433, 436, 460, 461, 469, 473, 477, 493, 501, 551, 553, 557], "task_nam": 309, "tast": 553, "tau": [26, 51, 54, 387, 455, 519], "tau_0": 51, "taul": [26, 455], "taur": [26, 455], "taylor": [52, 53], "tb00058": 134, "tbl": [83, 86], "tctypn": 444, "tcunin": 444, "team": [364, 368, 376, 379, 381, 385, 397, 418], "technic": [361, 362, 364, 372, 379, 381, 383, 385, 389, 437, 493], "techniqu": [365, 374, 375, 377, 429, 432, 440, 443, 460, 462, 500, 503, 551], "tediou": 456, "tel": [83, 86], "telescop": [78, 79, 81, 86, 90, 99, 143, 372, 373, 386, 391, 395, 396, 444, 450, 453, 465, 468, 469, 471], "tell": 434, "temp": [414, 445], "temperatur": [52, 53], "templat": [16, 26, 57, 68, 80, 99, 100, 105, 109, 111, 118, 160, 168, 182, 183, 184, 186, 187, 188, 194, 195, 196, 211, 225, 233, 256, 257, 258, 259, 260, 261, 267, 269, 281, 284, 364, 370, 371, 375, 382, 407, 421, 424, 425, 427, 435, 436, 438, 445, 461, 462, 463, 464, 481, 502, 505, 507, 518, 525, 528, 533, 539, 547], "template_diffus": [463, 469], "template_model": 444, "templatelightcurvetemporalmodel": 421, "templatend": [256, 257, 464], "templatendspatialmodel": [242, 464], "templatendspectralmodel": [26, 243, 412, 423, 464], "templatenpredmodel": [229, 410], "templatephasecurvetemporalmodel": [255, 421, 464, 547], "templatespatialmodel": [65, 242, 381, 382, 407, 421, 422, 424, 425, 444, 463, 464, 469, 517], "templatespectralmodel": [211, 233, 243, 265, 382, 464, 469, 489, 525, 528, 533, 538], "templatetemporalmodel": 421, "tempo2": [453, 493], "tempor": [202, 204, 210, 211, 218, 222, 224, 225, 226, 233, 241, 247, 248, 255, 259, 262, 277, 370, 372, 382, 383, 403, 405, 406, 407, 412, 421, 423, 424, 425, 427, 430, 433, 435, 440, 441, 442, 444, 447, 448, 449, 456, 457, 463, 469, 473, 477, 489, 490, 493, 494, 498, 501, 505, 549, 550, 552], "temporal_model": [248, 372, 444, 445, 452, 464, 540, 541, 542, 543, 544, 545, 546, 547, 548], "temporal_model1": 452, "temporal_model2": 452, "temporal_model_map": 445, "temporal_model_registri": 464, "temporal_typ": 382, "temporalbackground": 370, "temporalmodel": [210, 218, 222, 224, 225, 226, 241, 247, 248, 259, 370, 383, 406, 421, 423, 424, 507], "temporari": 473, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 370], "ten": [365, 379], "tend": [359, 512], "tension": 449, "tensorflow": [377, 379], "tent": 388, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 226, 282, 285, 362, 364, 366, 368, 369, 373, 376, 379, 384, 386, 408, 412, 421, 436, 458, 459, 553, 555, 556], "termin": [83, 86, 96, 375, 390, 391, 392, 393, 394, 429, 430, 432, 433, 434, 440, 441, 442, 453, 458, 469, 477, 478, 553], "terrestri": 557, "terrier": [365, 368, 369, 370, 371, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 386, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "test": [6, 89, 96, 109, 111, 114, 116, 117, 119, 120, 121, 124, 125, 127, 133, 151, 153, 156, 183, 184, 186, 192, 195, 196, 225, 270, 271, 272, 273, 276, 318, 333, 334, 335, 336, 337, 338, 339, 360, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 384, 387, 388, 389, 399, 401, 402, 404, 406, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 424, 429, 435, 436, 445, 448, 450, 451, 452, 457, 459, 491, 493, 497, 503, 547, 548, 552, 555], "test2": 452, "test_aeff3d": 459, "test_edisp": 459, "test_events_with_gti": 490, "test_gti": 490, "test_person_txt": 359, "test_plot": 359, "test_psf": 459, "test_someth": 359, "test_using_data_fil": 338, "test_using_scipi": 339, "testcod": 360, "testoutput": 360, "testpar": 387, "teststatisticnest": 424, "tev": [16, 19, 20, 26, 44, 52, 53, 64, 65, 69, 72, 79, 91, 96, 97, 100, 104, 105, 106, 110, 112, 119, 120, 132, 133, 137, 138, 140, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 163, 183, 184, 186, 192, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 248, 249, 251, 252, 253, 254, 257, 261, 263, 264, 286, 287, 308, 354, 360, 370, 382, 383, 386, 387, 395, 428, 429, 430, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 487, 490, 491, 497, 498, 500, 502, 503, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551], "tevcat": [411, 456], "tevcat_nam": 69, "tevpi": 398, "tevtevtev1": 442, "tex": 360, "texliv": 360, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 100, 105, 117, 119, 127, 245, 246, 287, 348, 360, 367, 375, 385, 389, 433, 453, 459, 468, 477, 479, 510, 511, 512, 515, 516, 520, 536, 543, 553, 555], "textcolor": 348, "textkw": 348, "th": 188, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 126, 144, 145, 152, 154, 160, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 270, 278, 337, 352, 359, 362, 364, 365, 366, 369, 372, 373, 374, 377, 378, 383, 385, 386, 389, 418, 421, 422, 423, 425, 428, 429, 440, 441, 444, 449, 450, 451, 458, 460, 462, 465, 466, 489, 506, 511, 512, 553, 555], "thank": [383, 404, 405, 410, 412, 460, 493], "thaw": 463, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 90, 99, 103, 107, 118, 124, 128, 157, 259, 277, 308, 359, 360, 362, 364, 365, 366, 367, 368, 370, 373, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 389, 396, 407, 410, 412, 424, 425, 429, 430, 434, 455, 457, 458, 462, 463, 464, 465, 466, 468, 471, 481, 490, 491, 493, 498, 505, 506, 551, 552, 553, 554, 555, 557], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 95, 99, 118, 202, 204, 211, 233, 288, 359, 360, 362, 364, 366, 367, 373, 375, 378, 385, 386, 388, 389, 395, 402, 418, 429, 430, 432, 435, 437, 440, 441, 443, 445, 450, 456, 457, 458, 461, 462, 464, 466, 468, 470, 473, 478, 490, 493, 502, 553, 555], "theme": [412, 419], "themselv": [83, 86, 375, 460, 462, 500], "theorem": [270, 491, 555], "theoret": 466, "therefor": [100, 365, 369, 372, 373, 374, 378, 380, 382, 392, 410, 429, 450, 453, 458, 461, 462, 465, 466, 479, 491, 555, 556], "thereof": 370, "thermal": [19, 529, 552], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 144, 150, 152, 154, 158, 166, 180, 189, 289, 292, 359, 407, 434, 469, 479, 510, 511, 515, 516], "theta2": [170, 180, 357, 418], "theta2_axi": 471, "theta2_max": 357, "theta2_min": 357, "theta2_t": 471, "theta_0": [33, 38], "theta_squared_axi": [180, 471], "thew": 456, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 65, 66, 67, 78, 79, 80, 81, 82, 83, 84, 86, 95, 97, 98, 99, 100, 103, 104, 105, 108, 112, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 165, 166, 167, 169, 171, 173, 174, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 203, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 263, 270, 272, 273, 279, 288, 296, 306, 309, 312, 317, 318, 334, 337, 344, 346, 348, 349, 350, 354, 356, 358, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 481, 482, 489, 490, 491, 493, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557], "thick": 356, "thin": [56, 300], "thing": [359, 362, 364, 367, 373, 374, 375, 376, 379, 383, 389, 398, 417, 434, 437, 452, 453, 462, 469], "think": [364, 376, 377, 379], "third": [61, 62, 83, 86, 360, 410, 456, 458, 461, 473, 479, 488], "thoma": [385, 418], "thorough": [461, 481], "those": [15, 79, 169, 183, 184, 186, 192, 195, 196, 200, 202, 204, 211, 233, 296, 348, 359, 362, 364, 366, 368, 373, 375, 378, 379, 380, 381, 382, 384, 389, 390, 391, 393, 394, 404, 407, 450, 458, 461, 462, 463, 465, 473, 479, 491, 493, 502, 557], "though": [15, 362, 367, 373, 374, 375, 377, 379, 433, 464, 477], "thought": [364, 373], "three": [83, 86, 151, 359, 368, 371, 373, 385, 442, 444, 449, 450, 461, 466, 473, 498, 505, 552], "threshold": [65, 97, 104, 112, 117, 118, 119, 127, 132, 133, 140, 141, 145, 158, 169, 193, 270, 348, 349, 350, 373, 400, 406, 407, 428, 432, 434, 436, 442, 446, 450, 456, 457, 458, 460, 462, 468, 477, 489, 491], "threshold_alpha": 158, "through": [41, 83, 86, 287, 288, 356, 362, 364, 372, 373, 379, 383, 384, 392, 396, 410, 421, 445, 449, 458, 460, 461, 462, 463, 469, 470, 493, 498, 505, 552, 555], "throughout": [13, 366, 368, 369, 373, 375, 417, 456], "throught": 446, "thrown": 464, "thu": [359, 366, 373, 376, 377, 379, 414, 428, 437, 438, 442, 444, 550, 556], "thumbnail": 410, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184, 368, 452], "tibaldo": 415, "tick": [423, 424], "tick_param": 428, "ticker": 348, "tight_layout": [458, 466, 512, 516], "tightli": 378, "tikonov": 387, "tild": [182, 194], "tile": [182, 184], "tilt": [239, 258, 370, 381, 382, 387, 399, 405, 437, 440, 441, 444, 445, 448, 457, 464, 469, 477, 478, 500, 506, 513, 533, 538], "tilt_prior": 387, "tim": 425, "time": [6, 19, 20, 50, 51, 52, 53, 74, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 95, 96, 97, 98, 99, 100, 103, 104, 105, 117, 118, 119, 124, 127, 128, 135, 159, 165, 176, 178, 183, 184, 185, 186, 192, 193, 195, 196, 200, 201, 203, 210, 213, 218, 222, 224, 225, 226, 241, 247, 248, 259, 262, 277, 318, 336, 340, 341, 342, 343, 359, 360, 362, 364, 365, 366, 367, 369, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 388, 389, 391, 395, 399, 400, 403, 404, 405, 407, 410, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 432, 434, 435, 436, 438, 440, 442, 443, 445, 446, 448, 450, 453, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 468, 469, 470, 477, 478, 479, 485, 486, 487, 489, 490, 491, 493, 498, 501, 506, 511, 512, 519, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556], "time_axi": [183, 184, 186, 192, 195, 196, 445, 461, 506], "time_bin": 374, "time_bin_end": 374, "time_bin_s": 374, "time_bin_start": 374, "time_bound": 193, "time_box": 86, "time_column": 383, "time_delta": [82, 193, 340, 343], "time_edg": [193, 449, 461], "time_filt": 85, "time_format": [119, 193, 424, 452], "time_interv": [16, 79, 82, 84, 87, 124, 433, 437, 438, 440, 445, 450, 451, 477], "time_map_axi": 461, "time_map_axis_contigu": 461, "time_max": [95, 117, 119, 193, 373, 374, 375, 445, 450, 456, 461], "time_mid": [193, 449], "time_min": [95, 117, 119, 193, 373, 374, 375, 445, 450, 456, 461], "time_rang": [86, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 445, 540, 541, 542, 543, 544, 545, 546, 547, 548], "time_ref": [79, 81, 82, 86, 89], "time_ref_default": 82, "time_ref_from_dict": 557, "time_relative_to_ref": 557, "time_start": [81, 82, 86, 374], "time_step": 374, "time_stop": [81, 82, 86, 374], "time_sum": [82, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262], "timedelta": [83, 86, 89, 193, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 318, 340, 343, 557], "timedelta64": [83, 86], "timelin": [364, 366, 418], "timemapaxi": [119, 135, 185, 410, 425, 449, 451, 452], "timerangeconfig": 16, "timeref": 444, "timescal": [128, 218, 278, 384, 449], "timeseri": 374, "timesi": [89, 422, 424, 444], "timestamp": 359, "timeunit": 444, "tini": [442, 468], "tip": 493, "titl": [364, 446, 455], "tiziani": 416, "tke": 469, "tm": [83, 86], "tmax": 374, "tmid": [84, 424, 442, 460, 465, 478], "tmin": 374, "to_2d": [138, 471], "to_3d": [137, 423, 425], "to_bands_hdu": [181, 182, 191, 194], "to_binsz": [182, 191, 194, 410], "to_binsz_wc": 191, "to_contigu": [193, 461], "to_counts_hdulist": 102, "to_cub": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 407, 438, 506], "to_dict": [19, 20, 26, 94, 96, 97, 100, 104, 105, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 386, 466], "to_edisp_kernel": [145, 497], "to_edisp_kernel_map": [142, 410, 497], "to_energy_dependent_table_psf": 418, "to_even_npix": 194, "to_fits_head": 81, "to_fram": 189, "to_gti": [193, 425], "to_hdu": [183, 184, 195, 196], "to_hdulist": [97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 183, 184, 190, 191, 192, 195, 196, 461], "to_head": [80, 99, 118, 182, 185, 187, 188, 193, 194, 386], "to_html": 359, "to_imag": [97, 100, 104, 105, 140, 141, 151, 153, 156, 181, 182, 191, 194, 381, 404, 405, 428, 438, 442, 457, 469, 503, 506], "to_json": [16, 80, 99, 118], "to_map": [117, 119], "to_map_dataset": [100, 105], "to_mask": [97, 100, 104, 105, 455], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 410, 456], "to_node_typ": 188, "to_nsid": [182, 184], "to_odd_npix": 194, "to_panda": [83, 86], "to_parameters_t": [211, 233, 429, 432, 433, 434, 437, 440, 458, 478], "to_pixel": [373, 432, 442, 455, 460, 464, 502, 510, 511, 512], "to_polygon": 373, "to_psf3d": [144, 152, 154], "to_python": [16, 80, 99, 118], "to_region": [207, 208, 211, 212, 220, 223, 233, 237, 245, 246, 260, 373, 404, 464, 510, 511, 512], "to_region_map_dataset": [97, 100, 104, 105, 457], "to_region_nd_map": [141, 142, 148, 153, 156, 184, 192, 196, 407, 410, 469], "to_region_nd_map_histogram": [196, 424], "to_sed_typ": 383, "to_sherpa": [404, 418, 419], "to_spectrum": 410, "to_spectrum_dataset": [95, 97, 100, 104, 105, 381, 403, 405, 453, 457, 466], "to_st": 424, "to_str": [424, 428], "to_swap": [182, 183, 184], "to_tabl": [96, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 187, 188, 192, 202, 204, 225, 410, 430, 432, 433, 442, 446, 448, 450, 452, 456, 464, 479, 491], "to_table_hdu": [79, 82, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 187, 188, 461], "to_table_psf": 416, "to_template_sky_model": [211, 233], "to_template_spectral_model": [211, 233, 382], "to_unit": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196], "to_wc": [183, 184], "to_wcs_geom": [182, 191, 506], "to_wcs_til": [182, 184], "to_yaml": [16, 80, 99, 118, 211, 233, 370, 386, 464, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "tob": 433, "todai": 385, "todo": [13, 75, 83, 86, 94, 151, 261, 360, 383, 401, 468, 483, 484, 557], "tof": 150, "togeth": [95, 97, 100, 104, 105, 120, 124, 211, 233, 356, 359, 372, 376, 379, 390, 402, 438, 440, 441, 446, 451, 457, 458, 460, 463, 464, 465, 466, 471, 478, 489, 490, 553], "tol": 458, "toler": [82, 95, 124, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 336, 458], "tolist": 458, "toml": 407, "ton": [278, 468], "too": [359, 364, 365, 409, 410, 423, 424, 425, 458, 462], "took": 384, "tool": [6, 13, 183, 184, 186, 195, 196, 358, 362, 366, 368, 370, 372, 375, 376, 379, 385, 396, 404, 415, 418, 419, 443, 446, 452, 457, 458, 461, 465, 468, 469, 481, 493, 527, 551, 552], "toolbox": [375, 415], "top": [104, 105, 346, 355, 359, 364, 375, 379, 381, 392, 418, 434, 436, 442, 446, 449, 450, 452, 456, 460, 479, 493, 506, 551, 553, 557], "top_five_ts_3fhl": 479, "tophat2dkernel": 116, "topic": [364, 368, 379, 387, 479], "total": [51, 65, 94, 96, 97, 100, 104, 105, 120, 121, 124, 125, 131, 163, 178, 182, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 285, 367, 383, 387, 391, 393, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 466, 467, 469, 472, 474, 476, 477, 478, 479, 480, 483, 489, 493, 498, 508, 518, 529, 539, 549, 552], "total_jfact": 455, "total_jfact_decai": 455, "total_model": 370, "total_obstim": 460, "total_stat": [458, 554], "touch": [82, 399], "tour": 473, "toward": [306, 366, 373, 379, 420], "tox": [324, 360, 362, 421, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 517, 525, 528, 541], "tqdm": 493, "trace": [200, 407, 458], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 359], "track": [81, 89, 359, 368, 374, 385, 412, 463], "tracker": [362, 373], "tradition": [464, 554], "train": 384, "traitlet": [375, 386], "traittyp": 386, "transfer": 386, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 81, 89, 151, 185, 187, 188, 193, 194, 211, 233, 290, 294, 317, 322, 359, 373, 375, 383, 387, 398, 400, 416, 419, 436, 442, 460, 466, 505, 510, 511, 557], "transit": [27, 349, 350, 366, 399, 400, 418, 470], "transit_map": 470, "transit_numb": 470, "transitsmap_crab": 470, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 375, 491], "transpar": 374, "transport": 461, "transpos": 419, "trapezoid": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 266, 299], "trapz": 299, "trapz_loglog": 405, "trash": 401, "travi": [404, 406, 410], "treat": [90, 391, 423, 424, 432, 444, 556], "treatment": [410, 440, 552], "trend": 444, "tri": [367, 373], "tributor": 385, "tricki": 373, "trigger": [337, 359, 388, 470], "trim": [97, 100, 141, 142, 148, 153, 156, 159, 194, 196, 258], "tripl": 144, "trivial": 366, "troubl": 553, "troubleshoot": [391, 392, 393], "trough": 449, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 76, 78, 79, 80, 82, 83, 84, 86, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 116, 117, 118, 119, 120, 124, 125, 127, 131, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 169, 170, 173, 174, 176, 177, 179, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 285, 288, 296, 297, 300, 318, 328, 330, 347, 352, 356, 359, 365, 372, 373, 374, 375, 382, 383, 386, 401, 405, 406, 417, 419, 420, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 469, 470, 475, 477, 478, 479, 483, 489, 491, 493, 498, 503, 505, 506, 509, 510, 511, 514, 515, 517, 538, 552, 555, 557], "truelov": 53, "truncat": [127, 306, 410], "truncation_valu": [274, 280], "trust": [16, 80, 99, 118], "trustworthi": 387, "truth": 466, "try": [16, 80, 99, 118, 183, 184, 186, 192, 195, 196, 359, 360, 369, 373, 379, 388, 389, 395, 400, 430, 432, 434, 444, 445, 450, 456, 458, 461, 479, 553], "ts_image_estim": 442, "ts_scan": [117, 119], "ts_threshold": [135, 270], "ts_threshold_ul": [453, 491], "ts_to_sigma": [443, 555], "tsimageestim": 418, "tsmap_est": 352, "tsmapestim": [113, 134, 352, 380, 383, 405, 406, 408, 410, 424, 436, 442, 493], "tstart": [84, 86, 372, 374, 435, 444, 448, 451, 452, 468], "tstop": [84, 372, 374, 435, 444, 448, 451, 468], "tt": [82, 89, 341, 342, 385, 445, 451, 557], "tth_sec3": 188, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 79, 80, 83, 84, 86, 96, 97, 99, 100, 104, 105, 118, 122, 127, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 159, 164, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 258, 261, 272, 273, 276, 300, 310, 317, 359, 461, 505], "turn": [79, 84, 360, 362, 373, 468, 550], "tutori": [78, 94, 114, 124, 126, 168, 359, 362, 363, 368, 371, 372, 373, 374, 375, 376, 377, 380, 389, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 493, 494, 496, 505, 550, 553], "tutorials_jupyt": [388, 473], "tutorials_python": 473, "tweak": [375, 410, 461], "twice": [116, 505, 556], "twinx": 428, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 82, 83, 85, 86, 96, 97, 100, 104, 105, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 159, 164, 166, 182, 183, 184, 185, 186, 188, 191, 192, 194, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 318, 327, 348, 353, 356, 358, 359, 360, 362, 366, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 383, 384, 385, 387, 388, 389, 391, 412, 418, 420, 424, 433, 434, 440, 441, 443, 446, 452, 456, 457, 458, 459, 461, 462, 464, 465, 466, 468, 470, 477, 478, 483, 489, 490, 491, 493, 502, 505, 506, 521, 555, 556], "txt": [119, 384, 386, 463, 469], "tyler": 412, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 85, 86, 91, 94, 95, 96, 97, 99, 108, 116, 117, 118, 119, 121, 127, 157, 163, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 288, 318, 365, 368, 369, 370, 371, 373, 374, 375, 378, 382, 383, 385, 387, 389, 390, 395, 403, 410, 416, 417, 418, 424, 429, 430, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 477, 478, 479, 481, 491, 493, 505, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553], "typeerror": [16, 80, 99, 118, 288, 373, 383, 387], "typic": [117, 365, 368, 370, 377, 381, 382, 383, 384, 386, 391, 392, 429, 434, 438, 446, 448, 450, 451, 456, 457, 459, 462, 464, 465, 481, 488, 489, 490, 498, 502, 551, 552], "typing_extens": [16, 80, 99, 118], "typo": [359, 396, 422, 423], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 64, 79, 81, 83, 86, 91, 97, 100, 104, 105, 109, 111, 112, 119, 121, 123, 127, 132, 133, 140, 142, 151, 183, 184, 186, 192, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 225, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 263, 264, 286, 287, 288, 308, 354, 359, 362, 366, 367, 368, 374, 375, 376, 377, 382, 383, 386, 387, 399, 400, 401, 418, 419, 420, 428, 429, 430, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 483, 490, 491, 493, 495, 500, 502, 503, 506, 510, 512, 513, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547], "u03c3": 443, "u18": [33, 38], "uc": [83, 86], "ufunc": [183, 184, 186, 192, 195, 196, 434], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 230, 263, 264, 279], "ul": [65, 116, 117, 119, 120, 121, 124, 125, 127, 271, 441, 446, 452, 456], "ultim": 359, "un": [371, 385, 407, 463], "unambigu": 464, "unbehaun": 425, "unbin": [371, 372, 419], "unboundlocalerror": 359, "uncertaint": 377, "uncertainti": [52, 97, 100, 104, 105, 272, 273, 363, 376, 417, 430, 432, 453, 458, 466, 478, 551, 552, 554], "unchang": [97, 100, 104, 105, 109, 111, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 418], "unclear": [359, 369, 370, 376, 386], "uncom": [375, 468], "undefin": 556, "under": [70, 86, 134, 359, 363, 368, 376, 385, 419, 420, 433, 473, 477, 489, 555, 556], "underestim": 491, "underflow": 193, "underli": [83, 86, 191, 372, 430, 456, 461, 466, 479, 481, 490, 493, 502, 505], "underscor": 359, "understand": [375, 396, 404, 405, 429, 432, 433, 434, 437, 444, 445, 449, 451, 452, 461, 462, 463, 468, 477, 478, 481, 553], "undertak": 379, "unexpect": 470, "unfold": 552, "unfreez": [19, 20, 26, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 529], "unfreeze_al": [202, 204, 463], "unfrozen": 500, "unheard": 553, "uni": 387, "uni_prior_stat_sum": 466, "unicod": [83, 86, 359], "unid": 65, "unidimension": 187, "unif": 404, "unifi": [83, 86, 363, 368, 373, 399, 402, 404, 405, 406, 407, 410, 419, 420, 552], "uniform": [151, 200, 317, 359, 368, 370, 371, 381, 383, 387, 401, 402, 406, 410, 429, 461, 466, 551], "uniform_filt": [122, 196], "uniformli": [372, 491], "uniformprior": [387, 466], "uninstal": 358, "union": [80, 82, 85, 97, 99, 100, 118, 191, 323, 373, 374, 385, 386, 402, 489], "uniqu": [83, 86, 95, 140, 182, 183, 184, 185, 186, 192, 194, 195, 196, 202, 204, 211, 233, 352, 369, 370, 371, 372, 382, 385, 405, 433, 457, 464, 470, 506, 550], "unique_id": 464, "unique_paramet": [202, 204], "uniquifi": [83, 86], "unit": [6, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 64, 79, 81, 83, 84, 86, 91, 96, 97, 100, 102, 104, 105, 106, 109, 110, 111, 112, 117, 119, 121, 123, 127, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 163, 166, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 201, 203, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 263, 264, 286, 287, 288, 318, 330, 331, 332, 334, 343, 344, 345, 348, 349, 350, 354, 360, 368, 370, 373, 375, 377, 382, 383, 387, 399, 400, 402, 410, 412, 418, 419, 421, 422, 423, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 483, 485, 486, 487, 490, 491, 493, 495, 497, 498, 500, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552], "unit_string_format": [424, 428], "unitbas": 288, "uniti": [122, 185, 260, 422, 512], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 219, 258], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [428, 435, 437, 440, 442, 448, 452, 468], "univers": [183, 184, 186, 192, 195, 196, 552], "univsers": 20, "unknown": [273, 436, 458, 552, 554, 555], "unless": [88, 90, 120, 121, 124, 127, 159, 288, 358, 365, 384, 386, 459], "unlik": [83, 86, 270, 366, 377], "unmaintain": 400, "unmask": [83, 86], "unnam": [83, 86, 189], "unnecessari": [410, 421, 440], "unneed": 424, "unphys": 556, "unrealist": 359, "unrel": 557, "unreli": 468, "unsaf": 359, "unstabl": [359, 468], "unsupport": 376, "untar": 468, "until": [359, 362, 366, 373, 384, 417], "unus": [375, 402, 404], "unusu": 364, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 121, 123, 127, 144, 150, 152, 154, 191, 288, 359, 360, 363, 364, 366, 367, 368, 371, 373, 375, 376, 377, 379, 381, 385, 387, 389, 390, 391, 393, 395, 398, 400, 401, 402, 403, 404, 405, 406, 407, 410, 414, 416, 417, 418, 419, 420, 432, 433, 440, 443, 444, 466, 468, 469, 506, 553], "upcast": 288, "upcom": [367, 368], "updat": [15, 16, 80, 83, 86, 98, 99, 103, 118, 190, 201, 203, 211, 233, 270, 308, 327, 359, 362, 364, 365, 366, 367, 368, 371, 376, 381, 383, 385, 386, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 416, 417, 418, 419, 421, 424, 425, 461, 464, 504, 505, 557], "update_config": 15, "update_forward_ref": [16, 80, 99, 118], "update_from_dict": [201, 203], "update_link_label": [211, 233], "update_parameters_from_t": [211, 233], "upgrad": [182, 358, 384, 392], "upload": [376, 388, 468], "upon": [97, 100, 104, 105, 368, 437, 463, 468, 489], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 76, 96, 116, 117, 118, 119, 120, 121, 124, 125, 127, 140, 188, 193, 200, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 271, 272, 273, 386, 395, 406, 410, 417, 418, 419, 425, 432, 446, 450, 457, 460, 477, 489, 491], "upper_error": 119, "upsampl": [153, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 401, 421], "upsample_geom": 153, "upstream": [359, 362], "upward": [272, 273], "url": 367, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 63, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 266, 271, 274, 286, 288, 296, 299, 300, 301, 308, 309, 312, 317, 318, 324, 327, 342, 343, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 440, 441, 442, 445, 446, 448, 449, 451, 452, 453, 455, 456, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 479, 482, 483, 493, 495, 496, 497, 499, 503, 504, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 557, 558], "usabl": 359, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 99, 114, 118, 124, 126, 168, 181, 182, 191, 194, 312, 365, 369, 370, 372, 374, 378, 383, 403, 424, 425, 456, 460, 462, 463, 553], "use_cach": 234, "use_center_as_plot_label": 188, "use_enum_valu": [16, 80, 99, 118], "use_evaluation_region": [211, 233], "use_fft": 196, "use_local_fil": [83, 86], "use_nullable_int": [83, 86], "use_region_cent": [163, 170, 173, 174, 176, 177, 410, 429], "useless": 468, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 84, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 359, 360, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 396, 403, 410, 411, 417, 418, 419, 421, 433, 443, 444, 445, 457, 459, 461, 462, 463, 464, 465, 473, 477, 490, 491, 492, 493, 498, 502, 508, 514, 518, 539, 549, 550, 553], "userdataset": 371, "usernam": 362, "userwarn": [432, 434, 441, 442, 446, 469], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 553, "usual": [29, 78, 79, 117, 132, 137, 138, 139, 151, 192, 296, 359, 360, 362, 364, 365, 366, 367, 373, 374, 379, 385, 389, 424, 428, 429, 430, 432, 434, 435, 437, 438, 442, 444, 445, 448, 449, 450, 451, 452, 455, 457, 462, 465, 470, 478, 481, 489, 493, 495, 496, 497, 499, 502, 506, 511, 550, 552, 553, 554], "ut1": 557, "utc": [82, 84, 99, 118, 340, 444, 450, 451, 461, 464, 540, 541, 542, 543, 544, 545, 546, 547, 548, 557], "utf": [83, 86], "utf8": [16, 80, 99, 118], "util": [6, 91, 99, 106, 109, 110, 111, 118, 119, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 142, 172, 173, 174, 175, 176, 177, 178, 179, 180, 269, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 359, 368, 370, 371, 372, 373, 383, 398, 401, 402, 403, 404, 411, 412, 415, 416, 417, 418, 419, 420, 424, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 481, 482, 493, 552], "utilis": [79, 133, 360, 428, 432, 436, 443, 449, 461, 465, 490, 493], "v": [26, 31, 32, 37, 83, 86, 144, 150, 152, 153, 154, 156, 165, 172, 190, 259, 270, 292, 362, 367, 374, 375, 386, 387, 388, 389, 412, 428, 450, 455, 465, 477], "v0": [90, 366, 367, 370, 371, 373, 376, 378, 379, 384, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 419, 420, 421, 444, 445, 459, 463], "v1": [13, 16, 79, 80, 84, 99, 118, 359, 366, 368, 370, 375, 376, 377, 378, 384, 385, 388, 391, 393, 404, 405, 406, 412, 417, 421, 422, 423, 424, 425, 525, 528], "v2": [385, 386, 410, 418, 425, 468], "v3": 402, "v_0": [37, 49], "v_glat": 295, "v_glon": 295, "va": 510, "vagu": 364, "vain": 362, "val": [83, 86, 183, 184, 186, 192, 195, 196, 202, 204, 461, 505], "valfmt": 348, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 101, 117, 118, 121, 134, 155, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 288, 306, 358, 359, 368, 372, 375, 376, 385, 404, 412, 421, 429, 432, 458, 460, 461, 464, 469, 491, 493, 498, 552], "valid_hdu_class": [78, 83], "valid_hdu_typ": 83, "validate_al": 386, "validate_assign": [16, 80, 99, 118, 386], "validate_default": [16, 80, 99, 118], "validate_loc": 386, "validate_zenith_angl": 386, "validationerror": [16, 80, 99, 118, 386], "valle": 38, "valleespir": 483, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 79, 80, 82, 83, 84, 86, 87, 90, 94, 95, 96, 97, 99, 100, 104, 105, 107, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 159, 163, 169, 170, 172, 173, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 274, 276, 277, 278, 288, 292, 300, 301, 315, 318, 327, 330, 345, 348, 349, 350, 360, 362, 365, 370, 371, 373, 375, 377, 379, 382, 383, 386, 401, 404, 410, 421, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 468, 469, 470, 471, 477, 478, 479, 481, 485, 486, 487, 491, 493, 497, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 553, 554, 555, 556], "value_rang": 86, "value_scan": 271, "valueerror": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 80, 83, 86, 87, 95, 99, 118, 211, 233, 359, 373, 386], "values_equ": [83, 86], "values_err": 453, "values_scal": [137, 138, 139, 192, 196, 225, 256, 260, 261, 300, 422, 424, 445, 459], "vanilla": [83, 86], "var": [279, 391, 393], "vari": [66, 98, 103, 124, 151, 200, 300, 327, 371, 373, 374, 384, 404, 407, 427, 437, 442, 443, 445, 454, 460, 464, 466, 469, 473, 489, 491, 498, 501, 550], "variability_amplitud": 449, "variability_amplitude_100": 449, "variability_amplitude_error": 449, "variability_amplitude_signific": 449, "variability_estim": [427, 449, 454], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 86, 99, 118, 128, 196, 272, 273, 276, 277, 278, 279, 299, 325, 359, 360, 362, 372, 374, 375, 389, 391, 393, 399, 400, 416, 417, 418, 424, 425, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 473, 477, 478, 479, 498, 553, 554, 555], "varianc": [91, 129, 130, 278, 279, 287, 374, 425, 465], "variant": 389, "variat": [128, 226, 278, 365, 375, 428, 449, 459, 460, 503, 555], "varieti": [370, 551], "variou": [114, 120, 121, 124, 125, 127, 133, 359, 365, 369, 371, 374, 383, 386, 389, 391, 410, 411, 425, 430, 433, 436, 441, 443, 450, 458, 477, 489, 493, 551, 557], "vast": [376, 412], "vaughan": [279, 449], "vaughan2003": 279, "ve": [359, 360, 362, 553], "vector": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 461, 497, 505], "vega": 419, "vel": 453, "vel_di": [45, 483], "vela": [64, 398, 430, 453, 479], "veloc": [31, 32, 37, 45, 49, 292, 295], "ver": 461, "verbos": [11, 78, 360, 382, 553, 555], "veri": [62, 83, 86, 132, 200, 349, 358, 359, 360, 361, 364, 365, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 386, 389, 420, 428, 435, 449, 456, 458, 461, 466, 469, 479, 489, 493, 506, 515, 516, 550, 552, 553, 554], "verif": [95, 211, 233, 326, 441, 469], "verifi": [202, 204, 223, 270, 359, 372, 456, 493], "verifywarn": 493, "verita": [92, 391, 396, 469], "versa": 182, "version": [11, 74, 79, 81, 83, 84, 86, 119, 120, 121, 124, 171, 201, 203, 358, 360, 362, 363, 366, 367, 368, 369, 373, 376, 379, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 398, 399, 400, 401, 403, 404, 409, 411, 412, 414, 417, 418, 419, 421, 422, 424, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 491, 553], "versu": [137, 143, 270, 272, 273, 468, 487], "vert": 240, "vertex": 373, "vhe": [429, 481], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 79, 86, 98, 103, 184, 189, 199, 358, 360, 362, 367, 371, 373, 374, 375, 376, 377, 378, 380, 382, 385, 386, 387, 388, 389, 391, 392, 399, 407, 415, 417, 418, 419, 423, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 477, 478, 479, 493, 497, 502, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 553, 557], "viabil": 386, "vice": 182, "victor": 414, "view": [79, 83, 86, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 160, 183, 184, 186, 190, 192, 195, 196, 219, 290, 294, 346, 359, 373, 400, 405, 410, 412, 419, 420, 432, 434, 438, 440, 444, 457, 459, 460, 462, 468, 469, 493, 495, 496, 497, 498, 499, 500, 502, 552], "vika": 410, "vin\u00edciu": 417, "viridi": [434, 455], "virtual": [362, 389, 391, 392, 393, 553], "visibl": [83, 86, 349, 350, 367, 410, 428, 444, 470, 478, 479, 552], "vision": 364, "visit": 445, "visual": [6, 184, 196, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 373, 405, 406, 424, 425, 432, 434, 438, 440, 442, 445, 458, 459, 465, 470, 471, 478, 479, 493, 502, 507, 510, 551], "visualis": [356, 371, 373, 380, 406, 421, 434, 436, 459, 464, 466, 468, 493], "vline": [487, 510, 511], "vmax": [97, 100, 104, 105, 349, 350, 437, 440, 442, 448, 457, 461, 462, 469, 470, 477, 478, 502], "vmin": [97, 100, 104, 105, 349, 350, 436, 440, 448, 457, 461, 462, 469, 470, 477, 478, 502], "volum": [27, 187, 191, 194], "vorokh": [415, 416], "voruganti": [417, 418], "vstack": [79, 82, 372], "vuillaum": [385, 418], "vx": [292, 295, 384], "vy": [292, 295], "vz": [292, 295], "w": [26, 31, 49, 82, 180, 193, 285, 360, 384, 436, 438, 446, 455, 460, 464, 466, 493, 502, 554, 556], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 80, 81, 83, 86, 88, 89, 97, 99, 112, 118, 120, 121, 124, 127, 159, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 352, 359, 362, 364, 365, 366, 367, 368, 369, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 399, 402, 403, 404, 405, 406, 407, 414, 418, 419, 420, 421, 422, 423, 424, 430, 432, 438, 440, 442, 460, 466, 468, 469, 470, 471, 479, 553], "wagner": 449, "wai": [33, 38, 79, 83, 86, 188, 312, 318, 358, 359, 360, 362, 364, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 379, 380, 383, 385, 391, 392, 393, 395, 398, 402, 418, 419, 430, 432, 434, 437, 440, 449, 456, 457, 458, 460, 461, 462, 463, 465, 468, 469, 470, 471, 473, 483, 490, 492, 493, 497, 506, 551, 553, 555], "wait": [359, 388, 389], "wall": [79, 84], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 99, 102, 118, 140, 166, 191, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 359, 361, 362, 364, 365, 366, 369, 373, 374, 375, 377, 378, 379, 389, 390, 391, 392, 393, 395, 396, 399, 419, 429, 432, 433, 434, 435, 437, 444, 445, 448, 450, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 477, 478, 479, 497, 550, 553, 554, 555, 556, 557], "ward": 286, "warn": [11, 16, 26, 78, 80, 83, 86, 99, 118, 184, 201, 202, 203, 204, 256, 257, 258, 260, 345, 384, 389, 401, 418, 423, 424, 425, 428, 435, 436, 437, 440, 441, 442, 444, 445, 448, 452, 453, 468, 469, 493, 517, 525, 528, 553], "warn_miss": 83, "warn_with_traceback": 359, "wasn": [366, 419], "watch": [469, 557], "water": [391, 470], "watson": 400, "wavelength": 378, "wavelet": [398, 416], "wc": [13, 16, 79, 97, 100, 104, 121, 158, 166, 167, 171, 182, 183, 184, 186, 191, 192, 194, 195, 196, 208, 211, 212, 220, 223, 233, 235, 245, 246, 250, 256, 260, 321, 354, 359, 365, 373, 378, 400, 401, 402, 404, 410, 418, 419, 423, 425, 432, 433, 436, 437, 438, 440, 442, 446, 450, 453, 455, 457, 459, 460, 462, 463, 464, 469, 477, 478, 479, 502, 505, 510, 511, 512, 517], "wcda": [57, 68], "wcs_geom": [191, 211, 233, 461, 506], "wcs_geom_3d": 461, "wcs_geom_cel": 461, "wcs_map": [195, 196, 352], "wcs_tile": [182, 184], "wcsax": [97, 100, 104, 105, 184, 191, 192, 196, 211, 233, 354, 356, 440, 461, 479, 509, 513, 514, 515], "wcsconfig": 16, "wcsgeom": [23, 79, 97, 100, 104, 105, 106, 108, 110, 116, 117, 127, 142, 151, 153, 163, 176, 177, 181, 182, 191, 195, 196, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 360, 365, 373, 400, 403, 404, 405, 410, 423, 425, 432, 437, 442, 444, 445, 446, 448, 453, 455, 457, 459, 460, 461, 462, 464, 469, 470, 471, 478, 479, 489, 491, 500, 502, 503, 506, 509, 511, 512, 513, 514], "wcslib": 359, "wcsmap": [183, 184, 186, 196, 421], "wcsndmap": [97, 100, 106, 110, 112, 127, 132, 151, 153, 156, 158, 160, 165, 166, 167, 168, 171, 176, 177, 182, 183, 184, 186, 192, 194, 195, 197, 198, 211, 233, 248, 256, 346, 352, 354, 365, 403, 404, 405, 407, 410, 412, 419, 421, 424, 425, 436, 437, 446, 455, 457, 460, 461, 469, 479, 489, 491, 499, 502], "wcsprm": 517, "wcsshape": 461, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 63, 79, 83, 84, 85, 86, 90, 165, 191, 194, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 264, 334, 359, 360, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 385, 386, 388, 389, 390, 391, 392, 393, 395, 398, 399, 400, 401, 406, 410, 412, 417, 418, 419, 420, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 475, 477, 478, 479, 490, 497, 498, 500, 502, 505, 516, 519, 529, 550, 553, 554, 555, 556, 557], "weak": [378, 466], "weaker": 270, "weakli": 462, "web": [83, 86, 367, 385, 388, 389, 395, 396, 410, 418, 456], "webpag": [361, 367, 379, 385, 388, 418, 421], "wedg": 373, "week": [362, 367, 377, 379, 384, 388], "weekli": [365, 368, 372, 373, 450], "wegen": [418, 419], "weigh": [153, 156, 466], "weight": [65, 141, 142, 148, 151, 153, 156, 182, 183, 184, 186, 191, 192, 194, 195, 196, 258, 387, 420, 424, 443, 466, 489, 505], "weighted_chi2_paramet": 443, "weighted_kernel": 151, "welcom": [364, 373, 469], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 65, 79, 83, 86, 100, 105, 109, 111, 116, 117, 125, 182, 186, 188, 192, 194, 201, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 349, 350, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 392, 395, 396, 399, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 418, 419, 420, 424, 425, 429, 435, 438, 443, 445, 450, 452, 457, 458, 459, 460, 461, 462, 464, 468, 469, 473, 477, 478, 479, 489, 490, 491, 502, 505, 506, 550, 551, 553, 555], "went": 399, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 128, 277, 359, 364, 365, 366, 367, 372, 374, 375, 376, 377, 378, 379, 380, 382, 384, 387, 389, 399, 402, 403, 404, 405, 406, 407, 410, 413, 418, 419, 422, 441, 453, 462, 466, 468, 556], "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 264, 318, 360, 365, 373, 376, 378, 379, 386, 389, 397, 446, 455, 456, 458, 468, 469, 473, 478, 481, 489, 506, 538, 553, 554, 557], "whatev": [373, 375, 376, 553], "whatsnew": 388, "wheel": 376, "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 79, 80, 82, 83, 84, 85, 86, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 116, 117, 118, 119, 131, 141, 142, 148, 153, 155, 156, 166, 169, 183, 184, 186, 188, 190, 192, 195, 196, 200, 205, 206, 209, 211, 213, 215, 216, 217, 221, 225, 227, 228, 230, 233, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 260, 261, 300, 358, 359, 360, 362, 364, 365, 366, 369, 371, 373, 374, 376, 379, 384, 385, 386, 387, 392, 404, 412, 413, 418, 420, 423, 424, 425, 434, 438, 442, 445, 446, 450, 451, 453, 456, 458, 460, 461, 464, 465, 468, 469, 489, 491, 493, 498, 500, 504, 505, 552, 554, 555, 556, 557], "whenev": [83, 86], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 67, 79, 80, 83, 84, 86, 99, 117, 118, 119, 122, 127, 140, 141, 142, 148, 153, 156, 158, 169, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 197, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 274, 277, 280, 281, 288, 324, 360, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 386, 387, 389, 391, 393, 395, 401, 413, 419, 428, 432, 437, 444, 445, 456, 460, 461, 462, 464, 466, 468, 469, 470, 479, 481, 489, 490, 493, 498, 505, 510, 511, 512, 515, 516, 519, 552, 553, 554, 555, 556, 557], "wherea": [365, 373, 376, 553], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 82, 83, 84, 86, 95, 97, 99, 100, 102, 104, 105, 117, 118, 119, 120, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 169, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 201, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 288, 297, 326, 328, 356, 364, 366, 373, 376, 378, 379, 386, 424, 435, 448, 460, 461, 479, 505, 554, 555], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 65, 68, 70, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 95, 96, 97, 99, 100, 102, 104, 105, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 132, 133, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 159, 163, 164, 169, 170, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 200, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 264, 270, 272, 273, 277, 278, 279, 286, 300, 310, 320, 321, 337, 346, 348, 353, 355, 358, 360, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 394, 396, 400, 401, 402, 404, 405, 406, 407, 410, 413, 419, 421, 424, 428, 429, 432, 435, 436, 437, 438, 440, 443, 444, 445, 446, 449, 450, 452, 453, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 478, 479, 483, 484, 489, 490, 491, 493, 495, 496, 497, 499, 500, 502, 504, 505, 506, 507, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 550, 551, 552, 553, 554, 555, 556], "whichev": [182, 183, 184], "while": [83, 86, 100, 183, 184, 186, 188, 192, 195, 196, 359, 362, 364, 365, 366, 368, 371, 372, 374, 378, 380, 381, 383, 384, 385, 388, 389, 391, 428, 432, 434, 437, 445, 452, 453, 457, 459, 460, 461, 463, 464, 489, 491, 493, 504, 506, 553], "whilst": [360, 465, 473], "whippl": 92, "whirlwind": 473, "white": [278, 348, 349, 442, 453, 458, 463, 481, 506], "whitespac": 306, "who": [385, 455, 481], "whole": [90, 112, 160, 163, 170, 173, 174, 176, 177, 182, 183, 184, 186, 195, 196, 234, 263, 272, 273, 359, 365, 371, 374, 385, 429, 432, 440, 445, 450, 453, 457, 464, 469, 471, 550], "whose": [385, 389, 445, 499, 511], "why": [359, 360, 364, 366, 373, 458, 506], "wide": [366, 385, 386, 400, 419, 430, 441, 552], "wider": [451, 462], "widget": [183, 184, 186, 192, 195, 196, 440, 448, 461, 477, 478], "width": [16, 27, 66, 79, 83, 86, 97, 100, 104, 105, 106, 107, 109, 110, 111, 112, 122, 127, 140, 141, 142, 145, 148, 151, 153, 156, 158, 163, 168, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 208, 211, 212, 220, 222, 223, 233, 235, 245, 246, 248, 250, 256, 258, 260, 349, 350, 375, 382, 420, 433, 434, 437, 438, 440, 442, 443, 444, 445, 446, 448, 450, 453, 455, 456, 457, 459, 460, 461, 462, 464, 469, 470, 477, 478, 479, 500, 502, 503, 504, 505, 506, 510, 511, 512, 514, 515, 516], "width_err": 456, "width_error": 66, "width_min": 191, "width_pix": [182, 183, 184], "widthconfig": 16, "wiki": [34, 79, 84, 410, 468], "wikipedia": [34, 79, 84, 317, 373, 377], "wilei": 134, "wilk": [270, 491, 555], "willing": 362, "wind": [50, 438, 443, 464, 484], "window": [107, 358, 359, 366, 376, 389, 390, 391, 393, 399, 415, 419, 436, 456, 552, 553, 555], "wise": [19, 20, 26, 83, 86, 132, 133, 184, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 387, 412, 438, 440, 489], "wish": [191, 362, 377, 443, 458], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [369, 370, 371, 374, 381, 383], "withdrawn": [363, 364, 369, 370, 371, 374, 381, 383], "within": [120, 123, 132, 182, 196, 210, 211, 212, 218, 222, 223, 224, 225, 226, 233, 241, 245, 247, 248, 259, 262, 358, 359, 360, 364, 368, 373, 375, 376, 377, 378, 379, 382, 384, 385, 387, 389, 390, 391, 393, 413, 416, 418, 422, 424, 433, 434, 440, 443, 450, 451, 452, 456, 459, 460, 461, 464, 465, 469, 473, 479, 489, 492, 493, 552], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 124, 143, 181, 182, 187, 191, 194, 356, 359, 362, 364, 367, 369, 373, 374, 375, 376, 378, 383, 389, 400, 401, 405, 433, 436, 440, 441, 455, 460, 461, 462, 477, 493, 504, 505, 506, 548, 553, 555], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wje5ndxc": 460, "wl": [26, 455], "wo": 453, "wobbl": [90, 452, 468], "wobbleregionfind": 412, "wobbleregionsfind": 434, "wolfram": [315, 316], "women": 415, "won": [83, 86, 112, 116, 120, 124, 127, 331, 384, 440, 461, 468, 556], "wong": 402, "wood": [366, 416, 418, 419], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 493], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 95, 119, 193, 324, 358, 359, 360, 362, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 388, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 411, 414, 415, 416, 417, 418, 419, 420, 421, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479, 489, 493, 503, 505, 517, 519, 525, 528, 541, 547, 548, 553], "workaround": 376, "workflow": [362, 367, 368, 375, 380, 384, 389, 404, 433, 438, 473, 477, 478, 494], "workshop": 368, "workspac": 362, "world": [79, 194, 211, 233, 359, 365, 442, 479, 505], "worst": 362, "worth": [359, 481], "would": [16, 80, 83, 86, 90, 99, 118, 183, 184, 186, 192, 195, 196, 359, 362, 365, 366, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 386, 401, 410, 430, 432, 435, 436, 448, 458, 461, 462, 464, 466, 469, 506], "wouldn": 373, "wp": [388, 468], "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 244, 296, 373, 403], "wrap_at": 370, "wrapper": [56, 234, 244, 300, 373, 374, 401, 404, 481, 493], "write": [11, 15, 16, 26, 78, 79, 82, 83, 84, 86, 95, 96, 97, 100, 102, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 183, 184, 186, 190, 192, 195, 196, 211, 225, 233, 256, 257, 258, 259, 260, 328, 337, 360, 362, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 385, 386, 387, 389, 395, 398, 404, 407, 412, 414, 417, 418, 419, 420, 425, 428, 432, 440, 441, 444, 446, 459, 463, 464, 468, 469, 475, 477, 478, 493, 498, 554, 556], "write_arf": 102, "write_bkg": 102, "write_covari": [15, 95, 211, 233], "write_dataset": 15, "write_ds9": 464, "write_model": 15, "write_pha": 102, "write_rmf": 102, "writeabl": 387, "writer": [83, 86, 379, 386], "writeto": [82, 137, 138, 139, 143, 144, 145, 147, 150, 152, 154, 155, 444], "written": [79, 84, 95, 96, 97, 100, 102, 104, 105, 117, 119, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196, 198, 359, 360, 362, 364, 368, 369, 379, 385, 387, 422, 428, 445, 463, 466, 481, 489, 490, 493, 506, 552, 557], "wrong": [359, 408, 422, 423, 424], "wrote": 385, "wrt": [79, 153, 156, 359, 377, 452, 548], "wstat": [100, 105, 282, 283, 371, 398, 416, 417, 432, 433, 435, 438, 442, 453, 457, 466, 489, 552], "wstatcountsstatist": [453, 555], "wt": [26, 455], "wun": 402, "www": [26, 65, 83, 86, 134, 379, 468], "wyatt": [398, 552], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 65, 66, 83, 86, 97, 104, 122, 132, 133, 134, 138, 188, 192, 193, 200, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 278, 279, 281, 291, 292, 293, 295, 299, 301, 306, 315, 348, 351, 352, 359, 360, 364, 366, 367, 368, 373, 384, 388, 430, 435, 436, 442, 445, 449, 453, 456, 458, 459, 461, 466, 469, 479, 487, 493, 510, 511, 553, 555], "x27": 459, "x86_64": [428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "x_": 122, "x_0": [183, 184, 186, 192, 195, 196], "x_1": 300, "x_2": 300, "x_3": 300, "x_bkg": 453, "x_edg": 123, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [183, 184, 186, 192, 195, 196], "x_j": 122, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [122, 313, 315, 446], "x_min": [122, 313, 315, 446], "x_n": [183, 184, 186, 192, 195, 196], "x_r_0": 223, "x_ref": [122, 446], "x_sigma": 220, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [200, 458], "xarg": 359, "xaxi": 493, "xerr": [428, 466], "xf": 468, "xfail": 359, "xlabel": [360, 424, 438, 452, 458, 466, 469, 485, 486, 487, 510, 547], "xlim": [346, 440, 466, 469, 487], "xmax": [17, 18, 21, 22, 24, 25, 27, 192, 387], "xmin": [17, 18, 21, 22, 24, 25, 27, 192, 387], "xml": [368, 369, 370, 403, 417, 419, 468, 481], "xmltodict": [411, 468], "xref": 122, "xspec": [213, 261, 285, 417, 554], "xunit": [434, 519], "xviii": 379, "xx": [370, 385], "xxx": [83, 86, 364, 385], "xxx_by_coord": 461, "xxxx": 493, "xy": [432, 442, 446, 510], "xy_posit": [33, 34, 38], "xytext": 510, "xyz": 388, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 66, 83, 86, 132, 133, 138, 188, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 291, 292, 293, 295, 299, 301, 351, 359, 373, 384, 424, 428, 436, 442, 445, 458, 466, 487, 493], "y7i3v1ui": 464, "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [200, 458], "yaml": [11, 15, 16, 20, 26, 80, 94, 95, 96, 97, 99, 100, 104, 105, 117, 118, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 326, 328, 358, 367, 368, 370, 371, 372, 375, 376, 381, 386, 387, 389, 390, 402, 403, 404, 407, 412, 421, 425, 428, 429, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 478, 479, 492, 550, 551, 552, 553], "yaml_str": [211, 233, 433], "yaxi": [430, 493], "ye": 389, "year": [45, 60, 63, 74, 359, 364, 366, 367, 369, 376, 379, 380, 384, 386, 389, 416, 418, 419, 441, 443, 456, 468, 485, 486, 487, 488], "yearli": [392, 417], "yellow": 349, "yerr": 453, "yet": [85, 358, 359, 362, 364, 366, 373, 376, 379, 380, 426, 430, 433, 477, 557], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 84, 87, 183, 184, 186, 192, 195, 196, 324, 366, 372, 373, 378, 380, 382, 387, 462, 554, 555, 556], "yjkahrg": 440, "yk04": [45, 48], "yk04b": 48, "ylabel": [360, 452, 458, 466, 469, 485, 486, 487, 510, 547], "ylim": [346, 438, 466, 469, 485, 487, 526, 535, 536, 537], "ymax": [510, 511], "ymin": [510, 511], "yml": [362, 376, 388, 389, 390, 391, 393, 418], "you": [16, 19, 20, 26, 65, 78, 79, 80, 83, 86, 89, 96, 99, 102, 118, 119, 132, 138, 140, 143, 166, 183, 184, 186, 192, 195, 196, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 263, 270, 358, 359, 360, 361, 362, 364, 366, 369, 373, 376, 377, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 410, 418, 419, 420, 429, 430, 432, 433, 434, 435, 437, 438, 440, 442, 444, 445, 448, 451, 452, 453, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 473, 477, 478, 479, 489, 490, 493, 496, 504, 527, 550, 553, 554, 555, 556, 557], "your": [16, 19, 20, 26, 80, 94, 99, 118, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 358, 359, 360, 362, 364, 366, 389, 390, 391, 392, 393, 395, 396, 399, 400, 401, 404, 405, 410, 419, 420, 428, 429, 430, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 479, 488, 493, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 555], "yourself": [553, 554], "yr": [45, 52, 53, 483, 485, 486, 487], "yrpxdxsi": 460, "yscale": [438, 545], "yt": 359, "yu": 402, "yunit": [432, 434, 455, 456, 469, 530], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 418, "yy": 385, "yyyi": 385, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 83, 86, 291, 292, 295, 384, 385, 455, 483, 519], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "za3mzaea": 464, "zabalza": 414, "zanin": [418, 419], "zd": 79, "zen": 465, "zen_pnt": 465, "zenith": [428, 441, 465, 468, 469, 470, 498], "zenith_angl": [79, 386, 469, 479], "zenodo": [385, 412], "zero": [52, 53, 65, 83, 86, 95, 97, 100, 104, 105, 127, 132, 140, 141, 142, 145, 148, 153, 169, 183, 184, 186, 192, 195, 196, 237, 258, 260, 261, 300, 306, 318, 359, 403, 406, 421, 456, 460, 461, 466, 556], "zhao": [27, 425], "zhen": 134, "zip": [374, 387, 388, 432, 451, 455, 458, 463, 473, 487, 507, 512, 516, 529], "zl": [26, 455], "zone": 453, "zsh": 360, "zt": [26, 455], "z\u00e9": 417, "\u00e0": 416, "\u0261\u00e6m\u0259pa\u026a": 493, "\u03b3": [128, 481, 552], "\u03c3": 443}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "Fit", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (unreleased)", "Computation times", "Point source sensitivity", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Estimation of time variability in a lightcurve", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTA with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 433, 445, 471, 477], "0": [368, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "1": [364, 368, 387, 397, 398, 405, 406, 408, 413, 421, 422, 423, 424, 425, 426, 466], "10": [373, 397, 399], "10th": 421, "11": [374, 397, 400], "12": [375, 397, 401], "12th": 412, "13": [376, 397, 402, 411, 414], "13th": 424, "14": [377, 397, 403], "14th": 422, "15": [397, 404], "16": [378, 397, 405], "16th": 413, "17": [397, 406], "18": [379, 397, 407, 408, 409], "19": [380, 397, 410], "19th": 409, "1d": [433, 435, 441, 450, 451, 473], "1dc": 468, "2": [365, 366, 387, 397, 409, 411, 423, 425, 466, 532], "20": [381, 397, 412, 413, 415], "2014": 398, "2015": [411, 414], "2016": [415, 416], "2017": 417, "2018": [418, 419, 420], "2019": [399, 400, 401, 402, 403, 404], "2020": [405, 406, 407, 408, 409], "2021": 410, "2022": [412, 413, 421], "2023": [422, 423, 424], "2024": 425, "21": 382, "22": [383, 416], "22nd": 410, "23": [384, 419], "24": 385, "25": [386, 398], "26": [387, 402], "28": [399, 417, 418], "29": [400, 420], "29th": 425, "2d": [437, 473], "3": [366, 387, 397, 404, 414, 426], "30": [401, 403], "32": 359, "3955": 387, "3d": [440, 441, 448, 450, 473], "3fgl": [524, 535], "3fhl": 441, "4": [367, 397, 415], "4122": 387, "4fgl": [536, 537], "4th": 407, "5": [368, 397, 416], "6": [369, 397, 417], "64": 359, "6th": [408, 423], "7": [366, 370, 397, 418], "8": [371, 397, 419], "9": [372, 397, 420], "As": 499, "In": 360, "ON": [429, 434, 441], "On": 435, "The": [365, 389, 441, 443, 458, 466, 490, 502], "To": [359, 360, 379, 493], "about": 466, "abov": 443, "absolute_tim": 340, "absorpt": [382, 519], "abstract": [364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "accept": 362, "access": [457, 461, 470, 490], "accessor": 505, "action": [359, 379], "ad": 461, "adapt": 436, "adaptiveringbackgroundmak": 158, "add": [370, 463], "add_colorbar": 347, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [382, 387, 499, 551], "aeff_2d": 495, "against": 434, "aim": 463, "alia": 382, "all": 451, "along": 386, "altern": [367, 370, 372, 373, 374, 375, 376, 377, 379, 380, 383, 386], "amplitud": [387, 466], "an": [359, 428, 444, 445, 457, 462], "anaconda": 392, "analysi": [0, 11, 15, 365, 368, 428, 429, 432, 433, 434, 435, 440, 441, 442, 450, 453, 473, 477, 489, 492, 551], "analysisconfig": 16, "angl": [495, 496, 497, 499], "angular": 506, "annihil": 455, "annotate_heatmap": 348, "api": [6, 359, 360, 381, 383, 386, 387, 421, 424, 425, 473, 478], "apply_edisp": [106, 110], "approach": [374, 429, 430, 433, 435, 436, 437, 438, 441, 444, 445, 446, 448, 449, 450, 451, 452, 458, 462, 463, 465, 477, 478], "apr": [406, 411, 415, 417], "arbitrari": 386, "area": [459, 468, 495], "argument": [359, 373], "arm": 483, "asmoothmapestim": 112, "assert": 359, "assert_quantity_allclos": 334, "assert_skycoord_allclos": 335, "assert_time_allclos": 336, "assess": [440, 458], "assign": [451, 463], "astro": [1, 481, 484], "astronomi": 374, "astrophys": [1, 482, 483, 484], "astropi": [359, 384], "asymmetr": 459, "attribut": [359, 360, 370], "aug": [398, 414], "author": 385, "authorship": 385, "avail": 456, "ax": [461, 506], "axi": [359, 498], "backend_default": 303, "background": [370, 374, 378, 381, 387, 438, 443, 444, 460, 463, 468, 469, 477, 496, 500, 501, 502, 503, 554], "background2d": 137, "background3d": 138, "backgroundirf": 139, "backgroundirfmodel": 370, "backgroundmodel": 370, "backport": 359, "base": [383, 386, 504], "basic": [442, 461], "bayesian": 449, "between": 381, "bin": [374, 428, 443, 506], "binder": 389, "bit": 359, "bkg_2d": 496, "bkg_3d": 496, "block": 449, "boundari": 462, "branch": 388, "break": 359, "broken": [360, 520, 534], "brokenpowerlawspectralmodel": 205, "bsd": 359, "bug": [412, 421, 424, 425], "bugfix": 388, "build": [360, 362, 389, 450, 451], "built": 550, "bundl": 359, "burkertprofil": 17, "butterfli": 478, "call": 370, "candid": [388, 436], "caplog": 359, "cartesian": 289, "case": [365, 369, 387, 556], "casebattacharya1998": 28, "cash": [274, 554, 555], "cash_sum_cython": 275, "cashcountsstatist": 272, "catalog": [2, 456, 462, 463, 479, 488], "catalog_registri": 55, "caveat": 554, "cell": 359, "certif": 362, "cff": 385, "chain": [432, 434], "chang": [359, 380, 421, 424, 425], "changelog": 379, "character": 449, "check": [11, 359, 360, 394, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "checker": 333, "chi": 443, "choos": 360, "citat": 385, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 359, 360, 369, 370, 383, 386, 478, 499, 555], "clean": 378, "cli": 553, "click": 359, "clobber": 359, "clumpi": 481, "cluster": [13, 465], "code": [359, 360, 365, 368, 389], "codemeta": 385, "collect": 385, "colormap": 558, "colormap_hess": 349, "colormap_milagro": 350, "combin": [463, 490], "command": [11, 359, 553], "compar": [434, 450], "compound": [464, 521], "compound_region_to_region": 319, "compoundspectralmodel": 206, "comput": [427, 428, 431, 432, 433, 438, 439, 442, 447, 454, 458, 467, 472, 474, 476, 478, 480, 508, 518, 539, 549], "compute_chisq": 276, "compute_flux_doubl": 277, "compute_fpp": 278, "compute_fvar": 279, "compute_lightcurve_doublingtim": 128, "compute_lightcurve_fpp": 129, "compute_lightcurve_fvar": 130, "conda": 390, "confer": 385, "confid": 458, "config": [11, 437, 438, 553], "configur": [433, 440, 446, 450, 477, 551], "constant": [509, 522, 540], "constantfluxspatialmodel": 207, "constantspatialmodel": 208, "constantspectralmodel": 209, "constanttemporalmodel": 210, "contain": 386, "containment_radiu": 197, "containment_region": 198, "content": [457, 506], "context": [429, 430, 432, 433, 434, 435, 436, 437, 438, 441, 443, 444, 446, 448, 449, 450, 451, 452, 462, 465, 466, 477, 478], "contigu": 461, "continu": 389, "contour": 458, "contribut": [362, 385, 463], "contributor": [385, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "conveni": 371, "convent": 359, "convers": 359, "convert": 359, "coordin": [13, 359, 370, 496, 506], "correl": 438, "count": [463, 469, 489, 555], "covari": [199, 458], "creat": [429, 432, 437, 438, 445, 457, 459, 461, 462, 478, 506], "create_cosmic_ray_spectral_model": 263, "create_crab_spectral_model": 264, "create_fermi_isotropic_diffuse_model": 265, "create_map_dataset_from_observ": 107, "create_map_dataset_geom": 108, "creation": [429, 433, 451], "cstat": 280, "cta": [369, 468], "cube": [365, 461, 473], "cumul": 429, "current": 384, "curv": [374, 450, 451, 452, 547, 548], "custom": [464, 466, 550], "cut": [430, 434], "cutoff": [523, 524, 525, 535, 536, 537], "cutout": 461, "cycl": 384, "cython": [384, 389], "d_sun_to_galactic_cent": 288, "dark": [455, 481], "darkmatt": [1, 481], "darkmatterannihilationspectralmodel": [19, 481], "darkmatterdecayspectralmodel": 20, "data": [3, 8, 359, 365, 367, 368, 374, 386, 389, 429, 432, 433, 434, 440, 441, 443, 446, 450, 451, 453, 457, 460, 461, 470, 473, 477, 478, 479, 490, 501, 553, 554], "dataflow": 386, "dataset": [4, 11, 94, 95, 359, 368, 371, 380, 381, 386, 428, 429, 433, 434, 437, 438, 440, 441, 445, 450, 451, 452, 457, 458, 460, 462, 463, 466, 470, 477, 478, 489, 492], "dataset_registri": 93, "datasetmodel": 211, "datasetsmak": 159, "datastor": [78, 468, 478, 490], "dco": [362, 385], "deal": 360, "dec": 404, "decai": 455, "decemb": 423, "decis": [364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "default": 370, "defin": [428, 429, 432, 434, 442, 444, 445, 450, 451, 462, 478, 506], "definit": [385, 450, 501], "depend": [358, 376, 382, 412, 434, 443, 445, 464], "deprec": [359, 384], "deriv": 556, "detail": [366, 440], "detect": [380, 436, 442, 498], "detector": 496, "develop": [359, 361, 362, 366], "diagram": 369, "differ": [441, 461, 557], "diffus": 469, "dilat": 462, "direct": 434, "discuss": 374, "disk": [433, 445, 477, 478, 510], "diskspatialmodel": 212, "dispers": [459, 468, 469, 497], "dissolv": 378, "distribut": [376, 471, 483], "dl3": [3, 441, 471, 490, 498, 501], "dl4": [459, 489, 491, 501, 505, 550], "dl5": [491, 550], "dl6": 491, "dmprofil": 18, "do": 359, "doc": 389, "docstr": 360, "document": [360, 362, 368, 379, 425], "doubl": 449, "download": [11, 389], "downsampl": 506, "dr1": [471, 537], "dr2": 537, "dr3": 536, "draw": 311, "driven": 553, "drop": 366, "durat": 460, "e": 471, "each": 443, "earli": 362, "earth_location_from_dict": 298, "ebl": 519, "ebl_data_builtin": 214, "eblabsorptionnormspectralmodel": 213, "edg": 491, "edisp": 459, "edisp_2d": 497, "edispkernel": 140, "edispkernelmap": [141, 498], "edispmap": 142, "effect": [459, 460, 468, 495], "effectiveareatable2d": 143, "einastoprofil": 21, "elaps": 557, "empti": 457, "encourag": 466, "end": 359, "energi": [382, 428, 434, 443, 445, 459, 462, 464, 468, 469, 491, 495, 496, 497, 499], "energydependentmorphologyestim": 114, "energydependentmultigausspsf": 144, "energydispersion2d": 145, "environ": 390, "eros": 462, "error": [458, 555], "estim": [5, 115, 377, 380, 383, 386, 433, 436, 443, 446, 449, 450, 460, 491, 501, 502, 555], "estimate_exposure_reco_energi": 131, "estimator_registri": 113, "evalu": [370, 371, 372], "event": [368, 372, 444, 445, 453, 461, 468, 469, 471, 479, 490, 498], "eventlist": [79, 490], "eventlistmetadata": 80, "evolut": 445, "exampl": [389, 466, 481, 488, 489, 490, 491, 492, 498, 500, 501, 502, 505, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 550, 554], "excess": [383, 429, 438, 449, 555], "excessmapestim": 116, "exclus": [432, 433, 438, 462, 477], "execut": 553, "exemplari": 387, "exercis": [428, 430, 432, 435, 440, 442, 444, 445, 452, 468, 469, 470, 471, 479], "exist": 365, "expcutoffpowerlaw3fglspectralmodel": 215, "expcutoffpowerlawnormspectralmodel": 216, "expcutoffpowerlawspectralmodel": 217, "expdecai": 541, "expdecaytemporalmodel": 218, "expect": 498, "explor": [429, 433, 442, 473], "exponenti": [29, 430, 523, 524, 525, 535, 536, 537], "expos": 370, "exposur": [459, 469], "extend": [429, 444], "extens": 360, "extern": 359, "extra": 389, "extract": [438, 450, 451, 452], "extrapol": 359, "f_cash_root_cython": 281, "factor": 455, "factori": 461, "factoris": 498, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 387, "featur": [14, 384, 388, 421, 424, 425], "feb": [405, 418], "februari": 425, "fermi": [441, 469], "fermist": 481, "file": [360, 385, 433, 437, 438, 441, 468, 477, 490, 506], "fill": [461, 506], "filter": 451, "final": [364, 388, 433, 556], "find_peak": 132, "find_peaks_in_flux_map": 133, "finder": 502, "first": [388, 433], "fit": [10, 13, 200, 368, 374, 429, 430, 432, 433, 434, 437, 440, 441, 442, 448, 452, 458, 462, 466, 469, 477, 478, 506, 550, 554, 555, 556], "fix": [359, 412, 421, 424, 425], "fixedpointinginfo": 81, "fixtur": 359, "flare": 451, "float": 359, "flux": [383, 387, 428, 430, 432, 433, 441, 446, 455, 456, 477, 478, 479, 491], "fluxestim": 383, "fluxmap": [117, 383], "fluxmetadata": 118, "fluxpoint": 119, "fluxpointscollect": 383, "fluxpointsdataset": [96, 371, 457], "fluxpointsestim": [120, 491], "fluxprofileestim": 121, "fold": 370, "folder": 389, "follow": 380, "format": [359, 557], "formula": 556, "forward": 370, "found": 553, "fov": [460, 500], "fov_to_ski": 290, "fovalign": 146, "fovbackgroundmak": [160, 500], "fovbackgroundmodel": 219, "fraction": 449, "freez": [384, 388, 463], "from": [359, 451, 461, 462, 463, 506], "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 359, 360, 468, 495, 496, 497, 498, 499, 555, 557], "further": [374, 554], "galact": [291, 469], "galactocentr": 483, "galleri": [359, 360, 507], "gamlik": 481, "gamma": [374, 455], "gammalib": 481, "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 359, 362, 365, 368, 376, 378, 379, 380, 384, 385, 386, 388, 389, 395, 396, 459, 468, 469, 470, 471, 481, 484, 488, 489, 490, 491, 492, 498, 500, 501, 502, 505, 550, 551, 557], "gaussian": [511, 512, 526, 542, 543], "gaussianspatialmodel": 220, "gaussianspectralmodel": 221, "gaussiantemporalmodel": 222, "gener": [359, 365, 369, 374, 385, 386, 491, 512, 543], "generalist": 383, "generalizedgaussianspatialmodel": 223, "generalizedgaussiantemporalmodel": 224, "geom": 181, "geometri": [429, 442, 450, 451, 461, 462, 477, 478, 504, 506], "get": [362, 379, 391, 437, 438, 461, 482, 483, 484, 490, 505], "get_combined_significance_map": 134, "get_images_path": 324, "get_irfs_featur": 91, "get_random_st": 312, "get_rebinned_axi": 135, "get_wstat_gof_term": 282, "get_wstat_mu_bkg": 283, "github": 359, "given": 463, "global": 381, "glossari": 552, "good": 556, "gpl": 359, "group": 465, "gti": [82, 490], "guid": [361, 494], "guidelin": [360, 364, 365, 379], "h": 471, "halv": 449, "handl": [359, 368, 369, 370, 381, 385, 460, 557], "have": [367, 369, 374, 375, 383], "hawc": [441, 470], "hduindext": 83, "hduloc": 296, "healpix": 504, "help": 394, "helper": 371, "hess": 441, "hgp": 456, "hierarch": 465, "hierarchi": 386, "hierarchical_clust": 286, "high": [0, 5, 368, 375, 477, 492], "hli": 433, "how": [359, 360, 362, 379, 388, 461, 493], "hpxgeom": 182, "hpxmap": 183, "hpxndmap": [184, 505], "hstack_column": 329, "i": [359, 362, 364, 446], "idea": 369, "imag": [360, 365, 373, 378, 436, 442, 461, 473], "imageprofil": 122, "imageprofileestim": 123, "implement": [369, 370, 379, 385, 387, 464, 466], "import": [359, 448], "improv": [370, 382, 412, 421, 424, 425], "inbuilt": 459, "includ": [360, 466], "index": [461, 466, 490], "info": [11, 359], "inform": [385, 456, 466, 497], "input": [359, 386, 436], "inspect": 478, "instal": [379, 391, 392, 394], "instrument": [7, 441, 498], "integr": [13, 389, 428], "integrate_spectrum": 266, "interact": 381, "interest": 443, "interfac": [0, 368, 370, 375, 477, 492, 505], "interpol": [13, 359, 461], "interpolate_profil": 301, "interpolation_scal": 302, "interv": 451, "introduc": [370, 378, 380, 382, 383, 446], "introduct": [370, 373, 374, 376, 377, 379, 383, 385, 386, 428, 432, 434, 442, 453, 455, 456, 457, 460, 461, 468, 469, 473, 479, 481, 483, 484, 554], "inversecdfsampl": 310, "ipython": 395, "irf": [7, 147, 368, 386, 428, 457, 459, 468, 498], "irf_registri": 149, "irfmap": 148, "isothermalprofil": 22, "isotrop": 469, "issu": 394, "iter": 461, "j": 455, "jan": 399, "jfactori": 23, "joint": [440, 441, 489], "json": 385, "jul": 402, "june": [413, 424], "jupyt": [359, 395], "kernel": 459, "labelmapaxi": [185, 461], "lat": [441, 469], "law": [430, 520, 523, 524, 525, 531, 532, 533, 534, 535, 536, 537], "lazi": 371, "lazyfitsdata": 297, "lc": 450, "let": 445, "level": [0, 5, 365, 368, 375, 477, 478, 492], "li": 453, "licens": 359, "light": [374, 450, 451, 452, 548], "lightcurv": [374, 444, 449, 452, 456], "lightcurveestim": [124, 491], "lightcurvetemplatetemporalmodel": 225, "like": 444, "likelihood": 556, "limit": 369, "line": [11, 359, 553], "linear": 544, "lineartemporalmodel": 226, "link": 360, "list": [370, 371, 372, 373, 374, 375, 376, 444, 451, 456, 461, 462, 463, 464, 479, 490], "literatur": 434, "livetim": 460, "load": [371, 428, 430, 432, 434, 456, 463], "load_irf_dict_from_fil": [157, 498], "locat": 359, "log": [11, 359, 430, 527, 528], "logparabolanormspectralmodel": 227, "logparabolaspectralmodel": 228, "logspir": 34, "long": 385, "loop": [429, 460, 478], "lorimer2006": 35, "low": [365, 478], "lt": 384, "ma": 453, "mai": [401, 412], "maintain": [366, 385], "mainten": 368, "major": 388, "make": [359, 362, 388, 442, 445, 453, 478], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 320, "make_counts_rad_max": 172, "make_edisp_kernel_map": 173, "make_edisp_map": 174, "make_effective_livetime_map": 175, "make_map_background_irf": 176, "make_map_exposure_true_energi": 177, "make_observation_time_map": 178, "make_orthogonal_rectangle_sky_region": 321, "make_path": 325, "make_psf_map": 179, "make_theta_squared_t": 180, "maker": [8, 162, 380, 386, 429, 451, 460, 477, 478, 500, 501, 502], "maker_registri": 161, "mamba": 392, "manag": [368, 392], "manual": [462, 465], "map": [9, 186, 190, 365, 368, 369, 436, 437, 438, 441, 442, 448, 453, 455, 459, 461, 462, 463, 475, 479, 491, 504, 505, 506], "mapax": 187, "mapaxi": 188, "mapcoord": [189, 505], "mapdataset": [97, 371, 440, 444, 457, 470, 489], "mapdataseteventsampl": [98, 372], "mapdatasetmak": [163, 501], "mapdatasetmetadata": 99, "mapdatasetonoff": [100, 371], "mappanelplott": 346, "mar": 400, "march": 422, "mask": [373, 432, 433, 438, 457, 462, 477], "materi": 385, "matter": [455, 481], "measur": 554, "meet": 368, "messag": 359, "met": 557, "metadata": [385, 386], "method": [360, 371, 372, 387, 449, 461, 491, 505], "method_default": 304, "method_kwargs_default": 305, "meyercrabspectralmodel": 230, "miniconda": 392, "minor": 380, "mission": 557, "model": [10, 231, 233, 368, 370, 378, 381, 382, 386, 387, 429, 432, 433, 434, 437, 440, 441, 442, 444, 445, 450, 451, 452, 455, 456, 457, 458, 463, 464, 466, 468, 477, 478, 479, 483, 484, 485, 486, 487, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 554], "model_registri": 229, "modelbas": 232, "modif": 462, "modifi": [359, 461, 464], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 443, "morphologi": 464, "motion_since_birth": 292, "motiv": 387, "mpl_plot_check": 337, "multi": 441, "multipl": [444, 463, 466, 489], "multiprocessing_manag": 308, "n_jobs_default": 306, "naima": 529, "naimaspectralmodel": 234, "name": [359, 370, 498], "nebula": 486, "new": [359, 370, 374, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 424, 425, 451], "next": [430, 432, 433, 436, 442, 450, 468, 470, 471, 477, 479], "nfwprofil": 25, "night": 450, "non": [359, 461, 506], "norm": [382, 464, 513, 525, 528, 530, 533], "norm_bounds_cython": 284, "normal": [313, 477], "notat": 555, "note": [359, 397, 554], "notebook": [11, 359, 367, 395], "nov": [407, 408, 409, 410, 416, 420], "novemb": 421, "now": 374, "nuisanc": 387, "number": [359, 384, 498], "numpi": 384, "o": 446, "object": [359, 360, 369, 381, 437, 438, 444, 445, 456, 465], "observ": [3, 84, 87, 368, 369, 432, 433, 442, 444, 445, 450, 451, 460, 465, 477, 478], "observationeventsampl": 103, "observationfilt": 85, "observationseventssampl": 88, "observationt": 86, "observatory_loc": 92, "obtain": [428, 443, 452, 465], "off": [430, 432, 435, 441], "offset": [495, 496, 497, 499], "ogipdatasetread": 101, "ogipdatasetwrit": 102, "old": 389, "onto": 461, "open": 453, "oper": [461, 462], "option": [358, 376, 458], "org": 389, "organ": [365, 374], "origin": [359, 362], "other": [359, 360, 369, 389, 392, 481], "outlin": 387, "outlook": [371, 372, 373, 375, 376, 378, 379, 380, 383], "output": 359, "over": 453, "overview": [379, 391, 443, 468, 500, 502, 503], "overwrit": 359, "own": 553, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 378, 380, 389, 392, 412, 473, 481, 482, 551], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 558, "paper": 368, "parabola": [430, 527, 528], "parallel": [13, 371], "paramet": [201, 202, 370, 382, 387, 433, 443, 458, 463, 464, 477], "parameterestim": 125, "parametr": 370, "parametricpsf": 154, "pdf": 314, "perform": [372, 429, 468, 478], "person": 385, "perspect": 366, "phase": [453, 547], "phasebackgroundmak": 164, "phasogram": 453, "piecewis": [513, 530], "piecewisenormspatialmodel": 235, "piecewisenormspectralmodel": 236, "pig": [363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "pip": 392, "pixel": [359, 373, 462], "plan": 366, "plot": [14, 359, 432, 433, 436, 442, 443, 446, 461, 463, 478, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 558], "plot_contour_lin": 351, "plot_distribut": 352, "plot_heatmap": 353, "plot_map_rgb": 354, "plot_npred_sign": 355, "plot_spectrum_datasets_off_region": 356, "plot_theta_squared_t": 357, "png": 360, "point": [387, 428, 430, 432, 433, 441, 442, 444, 449, 456, 468, 477, 478, 479, 491, 499, 514], "pointinginfo": 89, "pointingmod": 90, "pointspatialmodel": 237, "poisson": 554, "polar": 293, "polici": 385, "pool_kwargs_default": 307, "popul": [1, 483], "posit": [387, 466, 497], "possibl": 385, "post": 388, "power": [430, 520, 523, 524, 525, 531, 532, 533, 534, 535, 536, 537], "powerlaw": [430, 545], "powerlaw2spectralmodel": 238, "powerlawnormspectralmodel": 239, "powerlawspectralmodel": 240, "powerlawtemporalmodel": 241, "precis": 372, "predict": 489, "prepar": [374, 384, 428, 429, 445, 478], "prerequisit": [429, 430, 432, 433, 434, 435, 437, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 458, 462, 463, 466, 477, 478], "pretti": 456, "primaryflux": 26, "print": 456, "prior": [387, 466], "priorparamet": [203, 204], "produc": 470, "product": [455, 459], "profil": [446, 455, 556], "project": [368, 389], "propag": 386, "propos": [367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 386, 429, 430, 433, 435, 436, 437, 438, 441, 444, 445, 446, 448, 449, 450, 451, 452, 458, 462, 463, 465, 477, 478], "psf": [459, 469, 499], "psf3d": 150, "psf_tabl": 499, "psfkernel": 151, "psfking": 152, "psfmap": [153, 459, 498], "public": 385, "pull": [359, 362, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "pulsar": [51, 453, 485, 486], "purpos": 364, "pwn": 50, "pydant": 386, "python": [359, 360, 366, 384, 395], "qualiti": [368, 389, 432, 434, 440, 458], "quantiti": [465, 491], "radial": 496, "radial_distribut": 48, "radmax2d": 155, "rai": [374, 455], "random": [13, 359], "rang": [460, 501], "read": [436, 441, 445, 446, 461, 462, 463, 506], "read_hermes_cub": [267, 269], "read_yaml": 326, "recommend": [391, 393], "reconstruct": 496, "recopsfmap": 156, "recursive_merge_dict": 327, "reduc": [4, 437, 438, 457, 477, 478], "reduct": [8, 368, 374, 429, 432, 433, 434, 440, 450, 451, 460, 470, 477, 478, 501, 553], "refer": [6, 379, 552, 553, 554], "reflect": [460, 502], "reflectedregionsbackgroundmak": [165, 502], "reflectedregionsfind": 166, "region": [13, 370, 373, 428, 429, 432, 434, 460, 462, 463, 502, 506], "region_to_fram": 322, "regiongeom": [191, 506], "regionndmap": [192, 505, 506], "regions_to_compound_region": 323, "regionsfind": 167, "relat": 506, "releas": [359, 368, 384, 385, 388, 389, 397], "remark": 364, "remnant": 487, "remov": [359, 463], "renam": 359, "repositori": 389, "repr": 359, "represent": [382, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "request": [359, 362, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "requir": [358, 359, 376, 386], "requires_data": 338, "requires_depend": 339, "resampl": 457, "resample_energy_edg": 136, "residu": [432, 434, 440, 478], "resolv": [380, 453], "respons": [7, 498], "restructur": 379, "result": [374, 383, 428, 429, 433, 436, 443, 446, 450, 556], "return": [359, 360], "review": 364, "ring": [438, 460, 503], "ringbackgroundmak": 168, "rmf": 497, "road": 369, "roadmap": 368, "rotat": 373, "rst": 360, "run": [11, 362, 432, 433, 434, 443, 445, 446, 450, 477, 553], "run_multiprocess": 309, "safe": [460, 501], "safemaskmak": 169, "sampl": [372, 444, 445], "sample_powerlaw": 315, "sample_spher": 316, "sample_sphere_dist": 317, "sample_tim": 318, "sampler": 445, "save": [433, 477, 478], "scale": 557, "scale_plot_flux": 268, "scaledregulargridinterpol": 300, "scalespectralmodel": 244, "scenario": 369, "schedul": 384, "scheme": [370, 385], "script": [11, 13, 359, 395, 473, 475], "section": 379, "select": [429, 433, 442, 450, 451, 456, 463, 477, 478, 490], "select_nested_model": 270, "sensit": 428, "sensitivityestim": 126, "sep": [403, 419], "serial": [371, 386, 441], "serialis": [387, 433, 446, 459, 463, 464, 469, 489], "seril": 370, "set": [362, 433, 461, 477], "setup": [367, 389, 391, 393, 394, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 477, 478, 479], "sever": 359, "share": 464, "shell": 515, "shell2": 516, "shell2spatialmodel": 245, "shellspatialmodel": 246, "shorter": 382, "should": 359, "show": [442, 443, 465], "signal": 443, "signific": [429, 436, 438, 462, 555], "simplepulsar": 54, "simplifi": 382, "simul": [368, 371, 434, 435, 444, 445, 448, 452], "sine": 546, "sinetemporalmodel": 247, "singl": [360, 435], "size": 506, "skip": 359, "sky": [9, 370, 373, 442, 444, 462, 497, 505], "sky_to_fov": 294, "skycoord": 505, "skymodel": [248, 464], "slice": 461, "small": 362, "smooth": [436, 534], "smoothbrokenpowerlawspectralmodel": 249, "snr": 52, "snrtruelovemcke": 53, "solut": 386, "some": [359, 369, 462], "sourc": [1, 2, 428, 429, 432, 436, 442, 443, 444, 445, 452, 456, 462, 466, 468, 479, 483, 484, 485, 486, 488], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog3fgl": 60, "sourcecatalog3fhl": [61, 488], "sourcecatalog3hwc": 62, "sourcecatalog4fgl": 63, "sourcecataloggammacat": [64, 488], "sourcecataloghgp": 65, "sourcecataloglargescalehgp": 66, "sourcecatalogobject": 67, "sourcecatalogobject1lhaaso": 68, "sourcecatalogobject2fhl": 69, "sourcecatalogobject2hwc": 70, "sourcecatalogobject3fgl": 71, "sourcecatalogobject3fhl": 72, "sourcecatalogobject3hwc": 73, "sourcecatalogobject4fgl": 74, "sourcecatalogobjectgammacat": 75, "sourcecatalogobjecthgp": 76, "sourcecatalogobjecthgpscompon": 77, "sourceirfmodel": 370, "sourcemodel": 370, "spatial": [370, 382, 442, 455, 461, 464, 483, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517], "spatial_model_registri": 242, "spatialirfmodel": 370, "spatialmodel": 250, "special": 556, "specif": [370, 379, 456], "spectra": 455, "spectral": [382, 387, 429, 430, 432, 433, 434, 441, 442, 455, 464, 473, 479, 507, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 538], "spectral_model_registri": 243, "spectralirfmodel": 370, "spectralmodel": 251, "spectrum": [432, 434, 435, 442, 453, 460, 478], "spectrumdataset": [104, 371, 457], "spectrumdatasetmak": [170, 501], "spectrumdatasetonoff": [105, 371, 489], "sphinx": [359, 360], "spiral": 483, "split_dataset": [109, 111], "spread": [468, 499], "squar": [443, 471], "stack": [432, 438, 440, 489], "standard_scal": 287, "standardise_unit": 344, "start": [379, 391, 482, 483, 484, 490, 505], "stat": 12, "stat_contour": 458, "stat_profile_ul_scipi": 271, "stat_surfac": 458, "statist": [12, 432, 462, 554, 555], "statu": [364, 369, 378, 384], "step": [433, 468, 470, 471, 551], "store": [374, 433, 497], "str": 359, "structur": [378, 380, 412, 479, 551], "studi": 374, "style": 365, "sub": [461, 482], "subclass": 387, "subpackag": 365, "subset": 456, "suggest": 385, "summari": [398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 440, 469], "super": [535, 536, 537], "superexpcutoffpowerlaw3fglspectralmodel": 252, "superexpcutoffpowerlaw4fgldr3spectralmodel": 253, "superexpcutoffpowerlaw4fglspectralmodel": 254, "supernova": 487, "support": [359, 366, 384, 385, 387, 459, 489], "survei": [475, 558], "symmetr": 496, "systemat": 387, "t": [436, 555], "tabl": [13, 443, 456, 490], "table_row_to_dict": 330, "table_standardise_units_copi": 331, "table_standardise_units_inplac": 332, "tag": 382, "target": 432, "task": [370, 371, 372, 373, 374, 375, 376], "templat": [444, 517, 538], "templatendspatialmodel": 256, "templatendspectralmodel": 257, "templatenpredmodel": 258, "templatephasecurvetemporalmodel": 259, "templatespatialmodel": 260, "templatespectralmodel": 261, "tempor": [445, 452, 464, 507, 540, 541, 542, 543, 544, 545, 546, 547, 548], "temporal_model_registri": 255, "temporalmodel": 262, "term": 385, "terminologi": 369, "test": [13, 359, 362, 443, 453], "text": 359, "theta": 471, "thi": 362, "thumbnail": 360, "time": [13, 368, 374, 427, 431, 439, 444, 447, 449, 451, 452, 454, 467, 472, 473, 474, 476, 480, 508, 518, 539, 549, 557], "time_ref_from_dict": 341, "time_ref_to_dict": 342, "time_relative_to_ref": 343, "timemapaxi": [193, 461], "tool": [11, 359, 553], "tooltip": 360, "touch": 362, "trapz_loglog": 299, "troubleshoot": [394, 553], "true": [495, 497, 499], "tsmapestim": 127, "tutori": [360, 367, 379, 391, 443, 468, 473], "two": 463, "type": [359, 386, 489], "uncertainti": 377, "underli": 506, "unfold": 387, "unfreez": 463, "unif": 383, "unifi": [370, 383], "unit": [13, 359], "unit_from_fits_image_hdu": 345, "unix": 359, "unreleas": 426, "up": [362, 378, 380], "upsampl": 506, "us": [359, 369, 387, 392, 395, 433, 443, 444, 450, 457, 458, 459, 461, 477, 478, 481, 484, 488, 489, 490, 491, 492, 498, 500, 501, 502, 505, 524, 535, 536, 537, 550], "user": [366, 494], "util": [4, 5, 8, 10, 13, 378, 551, 555, 557], "valid": 386, "valleespir": 38, "valu": [359, 387, 443, 461, 466], "vari": 452, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 444, 449], "varianc": 449, "variou": 465, "veloc": 483, "velocity_distribut": 49, "velocity_glon_glat": 295, "venv": 390, "version": [359, 384, 388, 397, 448], "virtual": 390, "visual": [14, 380, 461, 506, 558], "volum": 506, "warn": 359, "wc": [461, 506], "wcsgeom": 194, "wcsmap": 195, "wcsndmap": [196, 505], "we": [367, 374, 375, 383, 470], "webpag": 389, "what": [359, 362, 364, 367, 369, 374, 375, 383, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 430, 432, 433, 436, 442, 450, 477, 479], "where": 359, "which": 359, "wind": 486, "wise": 450, "without": 466, "wobbleregionsfind": 171, "work": 490, "workflow": 551, "write": [359, 364, 433, 445, 461, 462, 490, 506, 553], "write_yaml": 328, "wstat": [285, 554, 555, 556], "wstatcountsstatist": 273, "yaml": [382, 433, 477, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "your": [394, 433, 553], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})